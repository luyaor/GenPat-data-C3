{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e737bf37573b1fbc8e2529dbf86a9a67", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00260c98c7d52f96e40a1822a6433570", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public void updateSourceEndIfNecessary(int sourceEnd)", "signatureAfterChange": "\r public void updateSourceEndIfNecessary(int sourceEnd)", "diff": ["+\t\tthis.typeDeclaration.bodyEnd = sourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "002b80df280eb92f94447ad87acf7143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 226, "signatureBeforeChange": " \tpublic void test0224() throws JavaModelException", "signatureAfterChange": " \tpublic void test0224() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00324f66890c4003fa8e1b439bbd5fa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic void test0083() throws JavaModelException", "signatureAfterChange": " \tpublic void test0083() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0033f17432858166666a4c09b36a60de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void addExternalJar(IPath projectPath, String jar)", "signatureAfterChange": "  \tpublic void addExternalJar(IPath projectPath, String jar)", "diff": ["+", "+\tpublic void addExternalJar(IPath projectPath, String jar) {", "+\t\taddExternalJar(projectPath, jar, false);", "-\tpublic void addExternalJar(IPath projectPath, String jar) {", "-\t\taddEntry(projectPath, new Path(jar));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00aec7f182d0e84f32dcabc968241fb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static void sortMethods(MethodBinding[] sortedMethods, int left, int right)", "signatureAfterChange": " public static void sortMethods(MethodBinding[] sortedMethods, int left, int right)", "diff": ["-\tArrays.sort(sortedMethods, left, right+1, METHOD_COMPARATOR);", "+\tArrays.sort(sortedMethods, left, right, METHOD_COMPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010928a0dc2edc0ab1e0a839b4cd5cd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "a8073c80a69f6c184e71b3ada3faf15faa3ff3ae", "commitAfterChange": "33e49b6e14282ee69dc2c2cf0c73bec5e674cdf2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void setUp() throws Exception", "signatureAfterChange": " \tprotected void setUp() throws Exception", "diff": ["+\t\tthis.repeatableIntroText = this.complianceLevel >= ClassFileConstants.JDK1_8 ?", "+\t\t\"Duplicate annotation of non-repeatable type \"", "+\t\t:", "+\t\t\"Duplicate annotation \";", "+\t\tthis.repeatableTrailerText = this.complianceLevel >= ClassFileConstants.JDK1_8 ?", "+\t\t\". Only annotation types marked @Repeatable can be used multiple times at one target.\\n\"", "+\t\t:", "+\t\t\". Repeated annotations are allowed only at source level 1.8 or above\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "011b52731c5e3255849f473dc0b3c32a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "edc37e94c3a8ff30574beb9cdf0696d92f661cd3", "commitAfterChange": "3a00cdbe76e603258e18bf89fe3c22cfa0424f0e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void assertAllTypes(String message, IJavaProject project, String expected) throws JavaModelException", "signatureAfterChange": " protected void assertAllTypes(String message, IJavaProject project, int waitingPolicy, String expected) throws JavaModelException", "diff": ["+}", "+protected void assertAllTypes(String message, IJavaProject project, int waitingPolicy, String expected) throws JavaModelException {", "+\tIJavaSearchScope scope =", "+\t\tproject == null ?", "+\t\t\tSearchEngine.createWorkspaceScope() :", "+\t\t\tSearchEngine.createJavaSearchScope(new IJavaElement[] {project});", "+\tSearchEngine searchEngine = new SearchEngine();", "+\tTypeNameRequestor requestor = new TypeNameRequestor();", "+\tsearchEngine.searchAllTypeNames(", "+\t\tResourcesPlugin.getWorkspace(),", "+\t\tnull,", "+\t\tnull,", "+\t\tPATTERN_MATCH,", "+\t\tCASE_INSENSITIVE,", "+\t\tTYPE,", "+\t\tscope, ", "+\t\trequestor,", "+\t\twaitingPolicy,", "+\t\tnull);", "+\tString actual = requestor.toString();", "+\tif (!expected.equals(actual)){", "+\t \tSystem.out.println(Util.displayString(actual, 3));", "+\t}", "+\tassertEquals(", "+\t\tmessage,", "+\t\texpected,", "+\t\tactual);", "+}", "-}", "-protected void assertAllTypes(String message, IJavaProject project, String expected) throws JavaModelException {", "-\tIJavaSearchScope scope =", "-\t\tproject == null ?", "-\t\t\tSearchEngine.createWorkspaceScope() :", "-\t\t\tSearchEngine.createJavaSearchScope(new IJavaElement[] {project});", "-\tSearchEngine searchEngine = new SearchEngine();", "-\tTypeNameRequestor requestor = new TypeNameRequestor();", "-\tsearchEngine.searchAllTypeNames(", "-\t\tResourcesPlugin.getWorkspace(),", "-\t\tnull,", "-\t\tnull,", "-\t\tPATTERN_MATCH,", "-\t\tCASE_INSENSITIVE,", "-\t\tTYPE,", "-\t\tscope, ", "-\t\trequestor,", "-\t\tWAIT_UNTIL_READY_TO_SEARCH,", "-\t\tnull);", "-\tString actual = requestor.toString();", "-\tif (!expected.equals(actual)){", "-\t \tSystem.out.println(Util.displayString(actual, 3));", "-\t}", "-\tassertEquals(", "-\t\tmessage,", "-\t\texpected,", "-\t\tactual);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "012b42d4e8f594154a4c8dea10c74fcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 340, "signatureBeforeChange": " \tpublic void test0338() throws JavaModelException", "signatureAfterChange": " \tpublic void test0338() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0133dc31f33e40cc12bda391cb1e399d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t */", "-\tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType) {", "-\t\tif (runtimeTimeType == null || compileTimeType == null)", "-\t\t\treturn;\t\t\t\t", "-\t\tif ((bits & Binding.FIELD) != 0 && this.binding != null && this.binding.isValidBinding()) {", "-\t\t\t// set the generic cast after the fact, once the type expectation is fully known (no need for strict cast)", "-\t\t\tFieldBinding field = (FieldBinding) this.binding;", "-\t\t\tFieldBinding originalBinding = field.original();", "-\t\t\tTypeBinding originalType = originalBinding.type;", "-\t\t    // extra cast needed if method return type is type variable", "-\t\t\tif (originalBinding != field ", "-\t\t\t\t\t&& originalType != field.type", "-\t\t\t\t\t&& runtimeTimeType.id != T_JavaLangObject", "-\t\t\t\t\t&& (originalType.tagBits & TagBits.HasTypeVariable) != 0) {", "-\t\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "-\t\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "-\t\t    \t\t: runtimeTimeType;", "-\t\t        this.genericCast = originalType.genericCast(scope.boxing(targetType));", "-\t\t        if (this.genericCast instanceof ReferenceBinding) {", "-\t\t\t\t\tReferenceBinding referenceCast = (ReferenceBinding) this.genericCast;", "-\t\t\t\t\tif (!referenceCast.canBeSeenBy(scope)) {", "-\t\t\t        \tscope.problemReporter().invalidType(this, ", "-\t\t\t        \t\t\tnew ProblemReferenceBinding(", "-\t\t\t\t\t\t\t\t\tCharOperation.splitOn('.', referenceCast.shortReadableName()),", "-\t\t\t\t\t\t\t\t\treferenceCast,", "-\t\t\t\t\t\t\t\t\tProblemReasons.NotVisible));", "-\t\t\t\t\t}", "-\t\t        }\t\t\t\t        ", "-\t\t\t} \t", "-\t\t}", "-\t\tsuper.computeConversion(scope, runtimeTimeType, compileTimeType);", "-\t}\t", "+ */", "+public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType) {", "+\tif (runtimeTimeType == null || compileTimeType == null)", "+\t\treturn;\t\t\t\t", "+\tif ((this.bits & Binding.FIELD) != 0 && this.binding != null && this.binding.isValidBinding()) {", "+\t\t// set the generic cast after the fact, once the type expectation is fully known (no need for strict cast)", "+\t\tFieldBinding field = (FieldBinding) this.binding;", "+\t\tFieldBinding originalBinding = field.original();", "+\t\tTypeBinding originalType = originalBinding.type;", "+\t    // extra cast needed if method return type is type variable", "+\t\tif (originalBinding != field ", "+\t\t\t\t&& originalType != field.type", "+\t\t\t\t&& runtimeTimeType.id != TypeIds.T_JavaLangObject", "+\t\t\t\t&& (originalType.tagBits & TagBits.HasTypeVariable) != 0) {", "+\t    \tTypeBinding targetType = (!compileTimeType.isBaseType() && runtimeTimeType.isBaseType()) ", "+\t    \t\t? compileTimeType  // unboxing: checkcast before conversion", "+\t    \t\t: runtimeTimeType;", "+\t        this.genericCast = originalType.genericCast(scope.boxing(targetType));", "+\t        if (this.genericCast instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding referenceCast = (ReferenceBinding) this.genericCast;", "+\t\t\t\tif (!referenceCast.canBeSeenBy(scope)) {", "+\t\t        \tscope.problemReporter().invalidType(this, ", "+\t\t        \t\t\tnew ProblemReferenceBinding(", "+\t\t\t\t\t\t\t\tCharOperation.splitOn('.', referenceCast.shortReadableName()),", "+\t\t\t\t\t\t\t\treferenceCast,", "+\t\t\t\t\t\t\t\tProblemReasons.NotVisible));", "+\t\t\t\t}", "+\t        }\t\t\t\t        ", "+\t\t} \t", "+\t}", "+\tsuper.computeConversion(scope, runtimeTimeType, compileTimeType);", "+}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0139f647827d786d821cfc789ed96cbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void remove(IndexedFile file, int index) throws IOException", "signatureAfterChange": " \tprotected void remove(IndexedFile file, int index)", "diff": ["-\tprotected void remove(IndexedFile file, int index) throws IOException {", "+\tprotected void remove(IndexedFile file, int index) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016da72c6745186e43b729a251f68ae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/resources/targets/model/pb/AB.java", "commitBeforeChange": "108af22a70bd5ce5bac2996d806c5c7df39f1d74", "commitAfterChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic String methodIAString(int int1)", "signatureAfterChange": " \t \tpublic String methodIAString(int int1)", "diff": ["-\tpublic String methodIAString(int int1) { return null; }", "+\tpublic String methodIAString(int int1) { return (new E()).toString(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017813d51f2f5c361b876d5545a8d807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "diff": ["-\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "+\t\t\tnew CompletionParser(problemReporter, compilerOptions.assertMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017cb636306521203dadfe908ae46550", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void test0063() throws JavaModelException", "signatureAfterChange": " \tpublic void test0063() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01909937346d14e2cb228d45464be381", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "9d4c8c879ad1f81b2f637753a47608ca38997797", "commitAfterChange": "a3526b6a1abcd7087c787ada8f9f6154023cb3cb", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList visited,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet alreadyTraversed)", "signatureAfterChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList visited,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet alreadyTraversed)", "diff": ["-\t\t\t\t\t\t\tif (!alreadyTraversed.contains(project)) {", "+//\t\t\t\t\t\t\tif (!alreadyTraversed.contains(project)) {", "-\t\t\t\t\t\t\t}", "+//\t\t\t\t\t\t\t}", "-\t\talreadyTraversed.add(this);", "+//\t\talreadyTraversed.add(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019595ca58475b32989023a8c24d45c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void testSingleWildcardExtendsStringPattern02() throws CoreException", "signatureAfterChange": " \tpublic void testSingleWildcardExtendsStringPattern02() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.qgen [g1.t.m.def.Generic.Member] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.qgen [Generic.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen_run [Generic<? super RuntimeException>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen [g1.t.s.def.Generic.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_exc [g1.t.s.def.Generic<Exception>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_wld [g1.t.s.def.Generic<?>.Member] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_run [g1.t.s.def.Generic<? super RuntimeException>.Member] EXACT_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen [Generic.Member] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_exc [Generic<Exception>.Member] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen_wld [Generic<?>.Member] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01bef91d90bf7288377179417024802c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "signatureAfterChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "diff": ["-\t\t\t\t\t\tReferenceBinding match = typeVariable.superclass.findSuperTypeErasingTo((ReferenceBinding) superType.erasure());", "+\t\t\t\t\t\tReferenceBinding match = typeVariable.superclass.findSuperTypeWithSameErasure(superType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d361c309f7ab1121b890261598d2df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 330, "signatureBeforeChange": " \tpublic void test0328() throws JavaModelException", "signatureAfterChange": " \tpublic void test0328() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01eed4aa3143482191fcd9f1dde6d36f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "ee09a8a98faa8f7f5560760965a7dd66e79f6d04", "commitAfterChange": "f98ff60ea4aadb5ad960a35b0293f0998e35fc18", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r String[] directoryList(String qualifiedPackageName)", "signatureAfterChange": "\r String[] directoryList(String qualifiedPackageName)", "diff": ["-\t\tint last = qualifiedPackageName.lastIndexOf('/');\r", "+\t\tint last = qualifiedPackageName.lastIndexOf(File.separatorChar);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01eedb0d24245a0fd5df2ba2f19f3ea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": " \t \tpublic void setUpSuite() throws Exception", "diff": ["-", "+\t", "-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f732f39f9a0f98f7f101da0a89c4cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " \tpublic void test0539() throws JavaModelException", "signatureAfterChange": " \tpublic void test0539() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0200e1af97ffd2c29aa8a1aa1a82271d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 359, "methodNumberAfterChange": 359, "signatureBeforeChange": " \tpublic void test0702() throws JavaModelException", "signatureAfterChange": " \tpublic void test0702() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "021cc852cdf53acc0b57c1939b18d604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeDetector.java", "commitBeforeChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "commitAfterChange": "f08042169ed40835df5f51519ff1fa8d2ac0cd70", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic ASTNode getCompletionNodeParent()", "signatureAfterChange": " \t \tpublic ASTNode getCompletionNodeParent()", "diff": ["-\t\treturn parent;", "+\t\treturn this.parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023d9b23966b27e839b3e7a2bbc4be86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemReferenceBinding.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public ProblemReferenceBinding(char[] name, int problemReason)", "signatureAfterChange": " public ProblemReferenceBinding(char[] name, ReferenceBinding closestMatch, int problemReason)", "diff": ["-}", "-public ProblemReferenceBinding(char[] name, int problemReason) {", "-\tthis(new char[][] {name}, null, problemReason);", "-}", "+public ProblemReferenceBinding(char[] name, ReferenceBinding closestMatch, int problemReason) {", "+\tthis(new char[][] {name}, closestMatch, problemReason);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025a92431c37eade90a66482ca8bc997", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "6b314e2144483a1f7124b29fde30bbdb55129b61", "commitAfterChange": "3812c97c89cf873f2a3b0b533d89169c084b6598", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public char[] computeUniqueKey()", "signatureAfterChange": " public char[] computeUniqueKey()", "diff": ["+\tif (this.scope == null) return super.computeUniqueKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0260ea9e2bbc3d39e93c7c5d7da213bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0271d0156e30cc4b22feb60bc722ec9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public String readableName()", "signatureAfterChange": " public String readableName()", "diff": ["-\tString[] parameterTypes = this.getParameterTypes();", "-\tif (parameterTypes != null && (length = parameterTypes.length) > 0) {", "+\tif (this.parameterTypes != null && (length = this.parameterTypes.length) > 0) {", "-\t\t\tbuffer.append(Signature.toString(parameterTypes[i]));", "+\t\t\tbuffer.append(Signature.toString(this.parameterTypes[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027d7919e5652b82d190f386d2433759", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "e593164022433d17467e437ca5f1d1580fcf9c34", "commitAfterChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void checkAndSetMalformed(ASTNode oldASTNode, ASTNode newASTNode)", "signatureAfterChange": "  \tprivate void checkAndSetMalformed(ASTNode spannedNode, ASTNode spanningNode)", "diff": ["-\tprivate void checkAndSetMalformed(ASTNode oldASTNode, ASTNode newASTNode) {", "-\t\tif ((oldASTNode.getFlags() & ASTNode.MALFORMED) != 0) {", "-\t\t\tnewASTNode.setFlags(newASTNode.getFlags() | ASTNode.MALFORMED);", "+\tprivate void checkAndSetMalformed(ASTNode spannedNode, ASTNode spanningNode) {", "+\t\tif ((spannedNode.getFlags() & ASTNode.MALFORMED) != 0) {", "+\t\t\tspanningNode.setFlags(spanningNode.getFlags() | ASTNode.MALFORMED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02a96b6a4a947b6b7d5dba63d8467253", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "c50442c325d0da65fd2099c042f3ba161471a78f", "commitAfterChange": "0862ddc02f27469def772589e96bd8e430581d66", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test009() throws CoreException", "signatureAfterChange": " public void test009() throws CoreException", "diff": ["-\t\tsortUnit(this.getCompilationUnit(\"/P/src/p/X.java\"), expectedResult, false);\t\t", "+\t\tsortUnit(unit, expectedResult, false);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c81d4f50d46c4aafd0305c1f0042df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "commitAfterChange": "6f2d59d80da8490e52a278944b98c97220ac4149", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\tboolean hasNonNullDefault, boolean complain, MethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": "  void checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\tboolean hasNonNullDefault, boolean complain, MethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\tthis.buddyImplicitNullAnnotationsVerifier.checkImplicitNullAnnotations(currentMethod, srcMethod, complain, this.type.scope);", "+\t\tthis.buddyImplicitNullAnnotationsVerifier.checkImplicitNullAnnotations(currentMethod, srcMethod, complain, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d841b658e117bccb429e9d6837b938", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void test0502c() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502c() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "031939c1138cfdfbfa0d1f81fe57a9a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnonymousClassDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "031c7f34c3dda63fa679ac9331dc1605", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 282, "methodNumberAfterChange": 282, "signatureBeforeChange": " public void nonStaticAccessToStaticField(ASTNode location, FieldBinding field)", "signatureAfterChange": " public void nonStaticAccessToStaticField(ASTNode location, FieldBinding field)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0336fe1becd7d1a8963316be37a4fa7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "9b0a7dbe196111bace472ad6d38ba1cdd25696dc", "commitAfterChange": "a118736b4df6d2c2d76c2e8540c6ee6242953cb2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t\tboolean isAtWildcardStart()", "signatureAfterChange": "  \t\tboolean isAtWildcardStart()", "diff": ["-\t\t\t\t&& \"*+-\".indexOf(this.source[this.index]) != -1; //$NON-NLS-1$", "+\t\t\t\t&& this.source[this.index] == '{';   // e.g {1}+Ljava/lang/String;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0339d051581fe7f953d02f7d34957708", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void getAllAnnotationContexts(int targetType, List allAnnotationContexts)", "signatureAfterChange": " public void getAllAnnotationContexts(int targetType, List allAnnotationContexts)", "diff": ["-\tAnnotationCollector collector = new AnnotationCollector(this, targetType, allAnnotationContexts);", "+\tAnnotationCollector collector = new AnnotationCollector(this.type, targetType, allAnnotationContexts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0341292adb6771c22a05b69c3a972bc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaMethod.java", "commitBeforeChange": "b17c7970aa52528427b488a1895b516cefe9f2a2", "commitAfterChange": "54d5d6327963fa0a594e194ca892843ef2014c42", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void getHandleMemento(StringBuffer buff, boolean memoizeParent)", "signatureAfterChange": " \t \tpublic void getHandleMemento(StringBuffer buff, boolean serializeParent)", "diff": ["-\tpublic void getHandleMemento(StringBuffer buff, boolean memoizeParent) {", "-\t\tif (memoizeParent)", "-\t\t\t((JavaElement) getParent()).getHandleMemento(buff);", "+\tpublic void getHandleMemento(StringBuffer buff, boolean serializeParent) {", "+\t\tif (serializeParent) {", "+\t\t\t((LambdaExpression) getParent()).getHandleMemento(buff, true, false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03460c96132542ec3aff2c1b53d2de51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner) \t\tthrows JavaModelException", "diff": ["-\t\tchar[] source)", "+\t\tchar[] source,", "+\t\tWorkingCopyOwner owner)", "-\t\t\tIJavaProject project = unitElement.getJavaProject();", "+\t\t\tJavaProject project = (JavaProject) unitElement.getJavaProject();", "-\t\t\t\t\tgetNameEnvironment(unitElement),", "+\t\t\t\t\tproject.newSearchableNameEnvironment(owner),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0349e63c3545e7f16c8c400be0868fdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void test0026() throws JavaModelException", "signatureAfterChange": " \tpublic void test0026() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "037a69c49749909f8af3183ecfd863d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": " \tpublic void test0565() throws JavaModelException", "signatureAfterChange": " \tpublic void test0565() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "037e42be6d757d31bb70aedffea2abdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void invokeClassGetDeclaredMethod()", "signatureAfterChange": " protected void invokeClassGetDeclaredMethod()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangClassConstantPoolName,", "-\t\t\tQualifiedNamesConstants.GETDECLAREDMETHOD_NAME,", "-\t\t\tQualifiedNamesConstants.GETDECLAREDMETHOD_SIGNATURE);", "+\t\t\tConstantPool.JavaLangClassConstantPoolName,", "+\t\t\tConstantPool.GETDECLAREDMETHOD_NAME,", "+\t\t\tConstantPool.GETDECLAREDMETHOD_SIGNATURE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0393160fc3a1678fbc08f3ea37de0579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void test0088() throws JavaModelException", "signatureAfterChange": " \tpublic void test0088() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c045f135d3c923e45253ac87ab3f67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aa3d82b2032803d21f830f8406e40626fbfe58f8", "commitAfterChange": "d6cba97b5461ec2afa3b4dbf6bdb862595fd6246", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \tprivate void findMemberTypes(\r \t\tchar[] typeName,\r \t\tReferenceBinding[] memberTypes,\r \t\tObjectVector typesFound,\r \t\tReferenceBinding receiverType,\r \t\tSourceTypeBinding invocationType)", "signatureAfterChange": "\r \tprivate void findMemberTypes(\r \t\tchar[] typeName,\r \t\tReferenceBinding[] memberTypes,\r \t\tObjectVector typesFound,\r \t\tReferenceBinding receiverType,\r \t\tSourceTypeBinding invocationType)", "diff": ["-\r", "+\r", "+\t\t\t\t\tif (memberType.enclosingType().isInterface())\r", "+\t\t\t\t\t\tif (otherType.enclosingType()\r", "+\t\t\t\t\t\t\t.implementsInterface(memberType.enclosingType(), true))\r", "+\t\t\t\t\t\t\tcontinue next;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03d5751d1c5ee68b1359c3e705b61507", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 56, "signatureBeforeChange": " public final boolean isPublic()", "signatureAfterChange": " public final boolean isPublic()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccPublic) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccPublic) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03e38d35984d3136e4aad3011be24fd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterJavadocDontIndentTagsTests.java", "commitBeforeChange": "c06f9af8601b57efefc26206714b09ea6019dd0e", "commitAfterChange": "5ea115fe8e6cecfd274e1f47f1ed0f1d3b207a51", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  DefaultCodeFormatter codeFormatter()", "signatureAfterChange": "  DefaultCodeFormatter codeFormatter()", "diff": ["-\tDefaultCodeFormatterOptions preferences = DefaultCodeFormatterOptions.getEclipseDefaultSettings();", "-\tpreferences.comment_indent_root_tags = false; // Eclipse default is true", "-\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(preferences);", "+\tthis.preferences.comment_indent_root_tags = false; // Eclipse default is true", "+\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(this.preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03fe56035a7d2277cbede0dd026f5856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 583, "methodNumberAfterChange": 583, "signatureBeforeChange": " \tpublic void test564()", "signatureAfterChange": " \tpublic void test564()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "040dfa99e4ca967f18ac04e9618eb108", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public MethodBinding[] availableMethods()", "signatureAfterChange": " public MethodBinding[] availableMethods()", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04581fe0d626d36c634e21b10a06c3cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testRenameExternalCompilationUnit() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRenameExternalCompilationUnit() throws JavaModelException, CoreException", "diff": ["-public void testRenameExternalCompilationUnit() throws JavaModelException, CoreException, IOException {", "+public void testRenameExternalCompilationUnit() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0460dec2fc7835c4e348cf39be3ca0cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-        final int line = scribe.line; ", "+        final int line = this.scribe.line; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0483dd5672871bedf843e6d71add26ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "f7f7a56a04d63c15c3ecf4e9ea892b7456b63660", "commitAfterChange": "61bb7cec9d84760aee596143730a3411f8956386", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\t \tpublic void addClassDeclaration( \t\t\tint modifiers,  \t\t\tchar[] packageName, \t\t\tchar[] name,  \t\t\tchar[][] enclosingTypeNames,  \t\t\tchar[] superclass,  \t\t\tchar[][] superinterfaces, \t\t\tchar[][] typeParameterSignatures)", "signatureAfterChange": "\t \tpublic void addClassDeclaration( \t\t\tint modifiers,  \t\t\tchar[] packageName, \t\t\tchar[] name,  \t\t\tchar[][] enclosingTypeNames,  \t\t\tchar[] superclass,  \t\t\tchar[][] superinterfaces, \t\t\tchar[][] typeParameterSignatures)", "diff": ["-\t\t\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, typeParameterSignatures, CLASS_SUFFIX, superinterfaces[i], INTERFACE_SUFFIX));", "+\t\t\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, typeParameterSignatures, CLASS_SUFFIX, superinterface, INTERFACE_SUFFIX));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a9c59db4a3618d5ad33103dad77642", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/BranchLabel.java", "commitBeforeChange": "0716b9527725dfa866349bcb7a45ea1d5ecddd2b", "commitAfterChange": "a544ec0a30c50b5e3390138a2a653e5667e6b6a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["-\t\t\t\tif ((this.codeStream.generateAttributes & ClassFileConstants.ATTR_VARS) != 0) {", "+\t\t\t\tif ((this.codeStream.generateAttributes & ClassFileConstants.ATTR_VARS) != 0", "+\t\t\t\t\t\t|| (this.codeStream.generateAttributes & ClassFileConstants.ATTR_STACK_MAP) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b41e46d9883cfbdcd452630d2114c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 580, "signatureBeforeChange": " \tpublic void test561()", "signatureAfterChange": " \tpublic void test561()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e952b1da7406a3c6a43dfbe81ea46d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "054ef716f5c2a57e4e4c8e790ba134b6404d4f2a", "commitAfterChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["+\t\t\tsourceType.typeBits |= superInterface.typeBits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0515c99f99611278a0dca45107b479e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic IPath[] getExclusionPatterns()", "signatureAfterChange": " \tpublic IPath[] getExclusionPatterns()", "diff": ["-\t\t\treturn this.nonAccessibleFiles;", "+\t\t\treturn getNonAccessibleFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054c9988272507612de8e03a1ce95c71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "7b0b78b45319bc18ccff993af876123282997e70", "commitAfterChange": "cd290957c2bd8d760411805c481ea53ade57f09d", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "  \tprivate IClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "signatureAfterChange": "  \tprivate IClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "diff": ["-\t\t\t\t\tcontainerPut(project, containerPath, null); // flush cache", "+\t\t\t\t\t// just remove initialization in progress and keep previous session container so as to avoid a full build", "+\t\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=92588", "+\t\t\t\t\tcontainerRemoveInitializationInProgress(project, containerPath); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05532c3dbb1bce28d2e1ed01c8e1dde8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/base/XMLComparer.java", "commitBeforeChange": "e5afcb0ec821099a058acc796f2348c4c58a2e3e", "commitAfterChange": "1a36ae2092977e6a13134bbe916d1e02aefe6f2e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void printProblem(String msg)", "signatureAfterChange": " \tprivate void printProblem(String msg)", "diff": ["+\t\tif (_summary != null) {", "+\t\t\t_summary.append(msg);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0561db16532ea29181d37098abac324f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testPerfReconcile() throws CoreException", "signatureAfterChange": " public void testPerfReconcile() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0562428d12ad48690d8fba8fd76d99f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic char[] getFileName()", "signatureAfterChange": " public char[] getFileName()", "diff": ["-\t */", "-\tpublic char[] getFileName(){", "-\t\treturn fileName;", "-\t}", "+ */", "+public char[] getFileName(){", "+\treturn this.fileName;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "056b05cabc20a388caee06efb7aa819f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 363, "signatureBeforeChange": " \tpublic void test0336() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test0336() throws CoreException, IOException", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tfinal ASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057a6bf86d06c49f9d8a4cc9f6992189", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "5c654dd7dd9bc98526f6c419699195d84517b84b", "commitAfterChange": "99aa173e65435610dfe4b542988d65ff8c2f55f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static String buildAllDirectoriesInto( \t\tString outputPath, \t\tString relativeFileName) \t\tthrows IOException", "signatureAfterChange": " \tpublic static String buildAllDirectoriesInto( \t\tString outputPath, \t\tString relativeFileName) \t\tthrows IOException", "diff": ["-\t\t\t\tSystem.out.println(Messages.bind(Messages.output_isFile, f.getAbsolutePath()));", "-\t\t\t\tthrow new IOException(Messages.output_isFileNotDirectory);", "+\t\t\t\tfinal String message = Messages.bind(Messages.output_isFile, f.getAbsolutePath());", "+\t\t\t\tSystem.out.println(message);", "+\t\t\t\tthrow new IOException(message);", "-\t\t\t\tSystem.out.println(Messages.bind(Messages.output_dirName, f.getAbsolutePath()));", "-\t\t\t\tthrow new IOException(Messages.output_notValidAll);", "+\t\t\t\tfinal String message = Messages.bind(Messages.output_notValidAll, f.getAbsolutePath());", "+\t\t\t\tSystem.out.println(message);", "+\t\t\t\tthrow new IOException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0583a01ee92f333acf0a2df89ebfc22c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic TypeMethodReference newTypeMethodReference(Type type, SimpleName name)", "signatureAfterChange": " \tpublic TypeMethodReference newTypeMethodReference()", "diff": ["-\tpublic TypeMethodReference newTypeMethodReference(Type type, SimpleName name) {", "+\tpublic TypeMethodReference newTypeMethodReference() {", "-\t\tresult.setType(type);", "-\t\tresult.setName(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059abb4ab831c9210d7e37ae17030695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve (BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve (BlockScope scope)", "diff": ["+\t\tthis.binding.declaringScope = scope;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05a97efa2d39fbad0b0d1111019677ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " \tpublic void test0200() throws JavaModelException", "signatureAfterChange": " \tpublic void test0200() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c38a429c3e5f21152e188ad39d6351", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tint matchRule)", "signatureAfterChange": "  public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tint matchRule)", "diff": ["-\tthis.declaringQualification = this.isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "-\tthis.declaringSimpleName = this.isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "-\tthis.typeQualification = this.isCaseSensitive ? typeQualification : CharOperation.toLowerCase(typeQualification);", "-\tthis.typeSimpleName = this.isCaseSensitive ? typeSimpleName : CharOperation.toLowerCase(typeSimpleName);", "+\tthis.declaringQualification = isCaseSensitive() ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = isCaseSensitive() ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.typeQualification = isCaseSensitive() ? typeQualification : CharOperation.toLowerCase(typeQualification);", "+\tthis.typeSimpleName = isCaseSensitive() ? typeSimpleName : CharOperation.toLowerCase(typeSimpleName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d093ba8fd1ee6a297be73cc73a5a56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "72316be54b9086b28cc8ddca3e0761905b39515b", "commitAfterChange": "995fcf13bc3ad1e9b32a28fa575739b0c1b6aa41", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void basicElementAdded(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "-\t\t\t\t\tproject.updatePackageFragmentRoots();\r", "+\t\t\t\t\tthis.projectsToUpdate.add(element.getJavaProject());\r", "-\t\t\t\t\tproject = (JavaProject) element.getJavaProject();\r", "+\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05dacba521608060910291a710842949", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " \tpublic void test0253() throws JavaModelException", "signatureAfterChange": " \tpublic void test0253() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e830802c2bc752d43a3ffdd357ae9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "fd19dfb11535c216820cbb7ea651282176d7f285", "commitAfterChange": "a71748b329bb09485d952dce5b30b2cf83046b40", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public FieldBinding findFieldForCodeSnippet(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "signatureAfterChange": "  public FieldBinding findFieldForCodeSnippet(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "diff": ["-\t\t\t\tif (!interfacesSeen.includes(anInterface)) {", "+\t\t\t\tif (interfacesSeen.addIfNotIncluded(anInterface) == anInterface) {", "-\t\t\t\t\tinterfacesSeen.add(anInterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e994d2cc71db9728c39f47e9b89903", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "96baaef3ef259cec825dcd891fe28f770a1c4f75", "commitAfterChange": "823f9c49338478534a15d1f2bc83270e2b809ff2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public TypeBinding erasure()", "signatureAfterChange": "     public TypeBinding erasure()", "diff": ["-    \treturn this.bound.id == TypeIds.T_JavaLangObject", "-    \t\t? this.otherBounds[0].erasure()", "-    \t\t: this.bound.erasure();", "+    \treturn this.bound.erasure();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05ed7a65bc6629c288e451309af396f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testRenameExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameExcludedCompilationUnit() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tIFile file = this.createFile(", "+\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tIFile file = createFile("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05fea9fc28877bee08a94e700f4ceda2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIPath outputLocation, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIPath outputLocation, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\tgetResolvedClasspath(true), // ignoreUnresolvedVariable", "+\t\t\tgetResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0613701fe15f674771d60d46b5786071", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tpublic void test0508() throws JavaModelException", "signatureAfterChange": " \tpublic void test0508() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061cfb6395a1d7ec162657dac920c3a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "59cf996337684de4f19867be3f0f9ff3756534dc", "commitAfterChange": "5c2fa534b3da997c68c8a8428fa68767a0e6e936", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public final int sourceEnd()", "signatureAfterChange": " public final int sourceEnd()", "diff": ["-\tif (method == null)", "+\tif (method == null) {", "+\t\tif (this.declaringClass instanceof SourceTypeBinding)", "+\t\t\treturn ((SourceTypeBinding) this.declaringClass).sourceEnd();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06446451e02e9abb160a89200b499f20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic InfixExpression.Operator getOperator()", "signatureAfterChange": "  \tpublic InfixExpression.Operator getOperator()", "diff": ["-\t\treturn operator;", "+\t\treturn this.operator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0648950d8ef3e5639d83313c7a0a1ec5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 386, "signatureBeforeChange": " \tpublic void test0384() throws JavaModelException", "signatureAfterChange": " \tpublic void test0384() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "064b539fa788dfee0f49d29d776d63e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NullLiteral.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065b4bba4d0cb61b4285bf5972aa4711", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParameterizedType.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067f9d49316c1f884ff58af32a1eaa97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 270, "signatureBeforeChange": " final public void sipush(int s)", "signatureAfterChange": " final public void sipush(int s)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tsipush:\"+s); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "068793017e84f6132ed01fa8ce6b2091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "67643a7c27a6d261feaad810d2590f1f6d33b749", "commitAfterChange": "da7a5227e034c2b6c8a4762e61c3ccf43066f02e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(MethodScope initializationScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(MethodScope initializationScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tthis.initialization.checkNPEbyUnboxing(initializationScope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "069c8987134d300960eee48d7a7247d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\t\treference.resolveTypeExpecting(reference.enclosingScope, t);", "-\t\t\tMethodBinding compileTimeDecl = reference.binding;", "-\t\t\tif (compileTimeDecl == null || !compileTimeDecl.isValidBinding())", "+\t\t\t// Note: we currently don't distinguish search for a potentially-applicable method from searching the compiler-time declaration,", "+\t\t\t// hence reusing the method binding from above", "+\t\t\tMethodBinding compileTimeDecl = potentiallyApplicable;", "+\t\t\tif (!compileTimeDecl.isValidBinding())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06bd3840d1787bca328bbf74959be45c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static void sortFields(FieldBinding[] sortedFields, int left, int right)", "signatureAfterChange": " public static void sortFields(FieldBinding[] sortedFields, int left, int right)", "diff": ["-\tArrays.sort(sortedFields, left, right+1, FIELD_COMPARATOR);", "+\tArrays.sort(sortedFields, left, right, FIELD_COMPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06bd8a0153d97af5ea9704504de38b07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 291, "signatureBeforeChange": "  \tpublic void test255()", "signatureAfterChange": "  \tpublic void test255()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d5d89ebbb272ec25c11778fac2db2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-            \tMethodBinding binding = ((AllocationExpression) this.left).binding(this.right);", "+            \tMethodBinding binding = ((AllocationExpression) this.left).binding(this.right, false, null);", "-\t\t\t\tMethodBinding previousMethod = invocation.binding(this.right);", "+\t\t\t\tMethodBinding previousMethod = invocation.binding(this.right, false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d76b3b7dd795028cf346e000fb1744", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testRemoveCompilationUnit() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemoveCompilationUnit() throws JavaModelException, CoreException", "diff": ["-public void testRemoveCompilationUnit() throws JavaModelException, CoreException, IOException {", "+public void testRemoveCompilationUnit() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ec1e08023dbcb3111fc69e85e7e3c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "9cf9fd36cf0d3a6995c78921628703f8e713d766", "commitAfterChange": "279aeee06ab4ee32ba5e2d95ea026b69b7969933", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean isReadyToRun()", "signatureAfterChange": " \tpublic boolean isReadyToRun()", "diff": ["-\t\t\tthis.indexSelector = new IndexSelector(this.scope, this.focus, this.isPolymorphicSearch, this.indexManager);", "+\t\t\tthis.indexSelector = new IndexSelector(this.scope, this.pattern, this.indexManager);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ffc2126d1d296b1bb05f5aa3894556", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static Test buildModelTestSuite(Class evaluationTestClass)", "signatureAfterChange": " \tpublic static Test buildModelTestSuite(Class evaluationTestClass, int sort)", "diff": ["+\t */", "+\tpublic static Test buildModelTestSuite(Class evaluationTestClass, int sort) {", "-\t\tList tests = buildTestsList(evaluationTestClass);", "+\t\tList tests = buildTestsList(evaluationTestClass, 0, sort);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07084740991cb690ec514325b99be432", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 582, "methodNumberAfterChange": 582, "signatureBeforeChange": " \tpublic void test563()", "signatureAfterChange": " \tpublic void test563()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0712414f3f78a70894558bc4308e8f2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void testBug96950() throws Exception", "signatureAfterChange": " public void testBug96950() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071433a0ca8747b5e083a66d3976b807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "signatureAfterChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "diff": ["-\tif (visitor.visit(this, scope)) {\r", "-\t\tblock.traverse(visitor, scope);\r", "-\t}\r", "+\tblock.traverse(visitor, scope);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07563d7199d3d9a1a64a57281009667e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate int compatibilityLevel18FromInner(MethodBinding method, InnerInferenceHelper innerInferenceHelper, Expression invocArg, int argLen, int i, boolean[] isVarArgs)", "signatureAfterChange": "  \tprivate int compatibilityLevel18FromInner(MethodBinding method, InnerInferenceHelper innerInferenceHelper, Expression invocArg, int argLen, int i, boolean[] isVarArgs)", "diff": ["-\t\t\t\tMethodBinding innerBinding = innerPoly.binding(null); // 1. try without update", "+\t\t\t\tMethodBinding innerBinding = innerPoly.binding(null, false, null); // 1. try without update", "-\t\t\t\t\tMethodBinding updatedMethod = innerPoly.binding(targetType); // 2. try with updating", "+\t\t\t\t\tMethodBinding updatedMethod = innerPoly.binding(targetType, false, null); // 2. try with updating"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078520b8f12a59b072faf4b2ed1bbaa5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 286, "signatureBeforeChange": " \tpublic void test0284() throws JavaModelException", "signatureAfterChange": " \tpublic void test0284() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078a87dd284daaa6dd373e51f3e27dfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 59, "signatureBeforeChange": " protected void reportAccurateTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy) throws CoreException", "signatureAfterChange": " protected void reportAccurateTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy, int rule) throws CoreException", "diff": ["+}", "+protected void reportAccurateTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy, int rule) throws CoreException {", "-\t\t\tSearchMatch match = newTypeReferenceMatch(element, accuracy, currentPosition, length, typeRef);", "+\t\t\tSearchMatch match = newTypeReferenceMatch(element, accuracy, currentPosition, length, rule, typeRef);", "-\tSearchMatch match = newTypeReferenceMatch(element, accuracy, sourceStart, sourceEnd-sourceStart+1, typeRef);", "+\tSearchMatch match = newTypeReferenceMatch(element, accuracy, sourceStart, sourceEnd-sourceStart+1, rule, typeRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079f6ed61dd7579b6d7c7b029b21a07e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "12b1e5875f7cb2a3f64b814e5e7b2c6c8563e988", "commitAfterChange": "b592d345303d7808b56670b5117114aed9144310", "methodNumberBeforeChange": 349, "methodNumberAfterChange": 349, "signatureBeforeChange": " protected NameReference getUnspecifiedReference()", "signatureAfterChange": " protected NameReference getUnspecifiedReference()", "diff": ["-", "-\tif (this.scanner.gotNonNullTag) {", "-\t\tref.markAsNonNull();", "-\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c3b0d0d9a7d69dffd0878fff4c3747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/XMLWriter.java", "commitBeforeChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "commitAfterChange": "846faf5699bcd826a09451dfb06e7bb91fe5a472", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag)", "signatureAfterChange": " \tpublic void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag)", "diff": ["+\t\tprint(sb.toString());", "-\t\t\tprintln(sb.toString());", "-\t\t} else {", "-\t\t\tprint(sb.toString());", "+\t\t\tprint(this.lineSeparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07f62bd7d33442ce8fc996a8d5477bb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 312, "methodNumberAfterChange": 312, "signatureBeforeChange": " \tpublic void test0310() throws JavaModelException", "signatureAfterChange": " \tpublic void test0310() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07fdcfa2e5fa62904afb067eaa3dde4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemHandler.java", "commitBeforeChange": "37468b15b5c10767a0d1f5bcf745b5635724272d", "commitAfterChange": "269c8c1f587787c02ae256af1e14f83a052a8b35", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void handle( \tint problemId,  \tString[] problemArguments,  \tString[] messageArguments, \tint severity,  \tint problemStartPosition,  \tint problemEndPosition,  \tReferenceContext referenceContext,  \tCompilationResult unitResult)", "signatureAfterChange": " public void handle( \tint problemId,  \tString[] problemArguments, \tint elaborationId, \tString[] messageArguments, \tint severity,  \tint problemStartPosition,  \tint problemEndPosition,  \tReferenceContext referenceContext,  \tCompilationResult unitResult)", "diff": ["+}", "-\tString[] problemArguments, ", "+\tString[] problemArguments,", "+\tint elaborationId,", "-\t\t\tCategorizedProblem problem = this.createProblem(null, problemId, problemArguments, messageArguments, severity, 0, 0, 0, 0);\t\t\t", "+\t\t\tCategorizedProblem problem = this.createProblem(null, problemId, problemArguments, elaborationId, messageArguments, severity, 0, 0, 0, 0);\t\t\t", "+\t\t\telaborationId,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07ff0ef02a1c54984a0c6a585d550592", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void test0425() throws JavaModelException", "signatureAfterChange": " \tpublic void test0425() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08073914ba82d251eda0b4f34bd3ad37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "987b84492820c5eeff2230233c35db158228c8e3", "commitAfterChange": "882e850a9e00f22aac1934fd17ac4c0522b9b030", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " protected IPath getExternalJCLRootSourcePath()", "signatureAfterChange": " protected IPath getExternalJCLRootSourcePath()", "diff": ["-\treturn Path.EMPTY;", "+\treturn new Path(\"src\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080777bcc0d78335299ef4ca074a17de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "commitAfterChange": "1681420a49895c71b06fecf2cdaa16ab79145282", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testContainerInitializer17() throws CoreException", "signatureAfterChange": " public void testContainerInitializer17() throws CoreException", "diff": ["-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\"}));", "+\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\", \"P3\", \"/P1/lib.jar\"}));", "-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P3\", \"/P1/lib.jar\"}));", "-\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\"}) {", "+\t\tContainerInitializer.setInitializer(new DefaultContainerInitializer(new String[] {\"P2\", \"/P1/lib.jar\", \"P3\", \"/P1/lib.jar\"}) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "081675ebc46c5c2f11b765aaf1ef4c92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 210, "signatureBeforeChange": " public void javadocInvalidMethod(MessageSend messageSend, MethodBinding method, int modifiers)", "signatureAfterChange": " public void javadocInvalidMethod(MessageSend messageSend, MethodBinding method, int modifiers)", "diff": ["-\tif (!javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) return;", "+\tif (!javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "082f763d0899d0861967e3552d0d7c72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 142, "signatureBeforeChange": " final public void ifeq(Label lbl)", "signatureAfterChange": " final public void ifeq(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifeq:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083413c14de71e18de6b31ebd7595385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CancelableNameEnvironment.java", "commitBeforeChange": "e616f9ffa26452dacd69a345b61d7bcc9c822bf2", "commitAfterChange": "d2182a0a13e034531dc832fab57ec580345f839c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void checkCanceled()", "signatureAfterChange": "  \tprivate void checkCanceled()", "diff": ["-\t\tif (this.monitor != null && this.monitor.isCanceled()) ", "+\t\tif (this.monitor != null && this.monitor.isCanceled()) {", "+\t\t\tif (NameLookup.VERBOSE)", "+\t\t\t\tSystem.out.println(Thread.currentThread() + \" CANCELLING LOOKUP \"); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0844d157f6fd86ebd644df0a6223dcbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "59449ee231c1cab95a8f7ec24b57c991cddf580d", "commitAfterChange": "bc925ba6701debb5a04c4a1992325a0824778169", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void enterMethod(MethodInfo methodInfo)", "signatureAfterChange": " public void enterMethod(MethodInfo methodInfo)", "diff": ["-\t\thandle = new SourceMethod(parentHandle, new String(methodInfo.name), parameterTypeSigs);", "+\t\tString selector = JavaModelManager.getJavaModelManager().intern(new String(methodInfo.name));", "+\t\thandle = new SourceMethod(parentHandle, selector, parameterTypeSigs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0859eca8253dc276e6f08a61b50eed97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "3703398dab14c5c9ebb1d4706d555f9d468d5e14", "commitAfterChange": "a2e862f5a46d0f1ea64d768278843b1b75624e4c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected int matchLevel(MessageSend messageSend)", "signatureAfterChange": " protected int matchLevel(MessageSend messageSend)", "diff": ["-\tMethodBinding method = (MethodBinding) messageSend.binding;", "+\tMethodBinding method = messageSend.binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0886ae9b3f2a316457ca98e0dc4781f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": "  \tpublic void test0613() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0613() throws JavaModelException", "diff": ["-\t\t\t\tfalse);", "+\t\t\t\tfalse,", "+\t\t\t\tfalse,", "+\t\t\t\ttrue);", "-\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding.getKey());\t\t\t", "+\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding.getKey());", "-\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding2.getKey());\t\t\t\t\t\t", "+\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding2.getKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "089a975430ef8785319eb7f7f92165bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageDeclarationPattern.java", "commitBeforeChange": "e22e2c1ba1368e41fa599371960d0d811ab185bb", "commitAfterChange": "07c386f81277f4ad5842be17241abc2c1fd53ef0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope)", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) /* throws IOException */ {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a7c97952797fd59ab4594f920b6a0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedType.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ae9a80e91e169abab60fb15187b061", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 205, "signatureBeforeChange": " public void javadocDuplicatedThrowsClassName(TypeReference typeReference, int modifiers)", "signatureAfterChange": " public void javadocDuplicatedThrowsClassName(TypeReference typeReference, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08b14c4bb6afaf94f530e01058f02f74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "407471f4aeb452770b61f384c43696430b8ea5b0", "commitAfterChange": "61c8127ed48ea3e5b3b06b1b92cf72f5e38aa05d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected WordEntry getWordEntry(char[] word)", "signatureAfterChange": " \tprotected WordEntry getWordEntry(char[] word)", "diff": ["-\t\treturn (WordEntry) words.get(word);", "+\t\treturn words.get(word);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f9054be6f47dec5c508fd6f1238be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findSingleStaticImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleStaticImport(char[][] compoundName)", "diff": ["-\t\t\treturn new ProblemReferenceBinding(compoundName, InvalidTypeForStaticImport);", "+\t\t\treturn new ProblemReferenceBinding(compoundName, (ReferenceBinding) temp, InvalidTypeForStaticImport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "090daec738c0da92da4746f75b4784a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "3f131825dfbebcd2d9846517fd8419ae56311784", "commitAfterChange": "ede87229fe271e061ecd80820c468f7956351f61", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tthis.thenStatement.complainIfUnreachable(thenFlowInfo, flowContext, currentScope, initialComplaintLevel, false);", "+\t\t\t\tthis.thenStatement.complainIfUnreachable(thenFlowInfo, currentScope, initialComplaintLevel);", "-\t\t\t\tthis.elseStatement.complainIfUnreachable(elseFlowInfo, flowContext, currentScope, initialComplaintLevel, false);", "+\t\t\t\tthis.elseStatement.complainIfUnreachable(elseFlowInfo, currentScope, initialComplaintLevel);", "-\t// process AutoCloseable resources closed in only one branch:", "-\tcurrentScope.correlateTrackingVarsIfElse(thenFlowInfo, elseFlowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091ddb45332575ad25386084c5afdd8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 224, "methodNumberAfterChange": 224, "signatureBeforeChange": " \tpublic void test0222() throws JavaModelException", "signatureAfterChange": " \tpublic void test0222() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092a2ee4e9dd23634762b4f586b27ffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Javadoc.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09308e497958001c2c15fbd70fa01037", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportDeclaration.java", "commitBeforeChange": "af2cb627e5df7006230e04fa6915ddfe16450108", "commitAfterChange": "527a4ad48d6bb6cf5631e8243d32cdefece4791a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean isOnDemand()", "signatureAfterChange": " public boolean isOnDemand()", "diff": ["-\treturn this.name.endsWith(\".*\"); //$NON-NLS-1$", "+\treturn this.isOnDemand;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0935f77ba9d021f3d90e2c79da8bf1e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "d4b66f5ebef72ea4a16ce3ed100131443db3e609", "commitAfterChange": "08f889aaadac453e33c915a8e39942dfa4623f43", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate static ClassLoader _createClassLoader( Collection<? extends FactoryContainer> containers )", "signatureAfterChange": " \t \tprivate static ClassLoader _createClassLoader( Collection<? extends FactoryContainer> containers )", "diff": ["-\t\t\tcl = new URLClassLoader( urls );", "+\t\t\tcl = new URLClassLoader( urls, AnnotationProcessorFactoryLoader.class.getClassLoader() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093ed1ca0376c46275d1512c68f9d75e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCompletionFindField1() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindField1() throws JavaModelException", "diff": ["-\t\t\"element:var    completion:var    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:var    completion:var    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "097159e93a7695704c0e5b81a410d0ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testUnderlyingResourceNonExistingClassFile() throws CoreException", "signatureAfterChange": " public void testUnderlyingResourceNonExistingClassFile() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"lib\"}, \"bin\");", "-\t\tIClassFile classFile = this.getClassFile(\"/P/lib/X.class\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"lib\"}, \"bin\");", "+\t\tIClassFile classFile = getClassFile(\"/P/lib/X.class\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0974d8bf3ace80b6f86fa93e5d9e6f4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Type getRightOperand()", "signatureAfterChange": "  \tpublic Type getRightOperand()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ac9ae254480229f7ab24cb51f2ad5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic static String versionFromJdkLevel(long jdkLevel)", "signatureAfterChange": "  \tpublic static String versionFromJdkLevel(long jdkLevel)", "diff": ["-\t\treturn \"\"; // unknown version //$NON-NLS-1$", "+\t\treturn Util.EMPTY_STRING; // unknown version"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09bd110e8ebaabb02d52180ad1da2754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t((Clinit) method).setAssertionSupport(assertionSyntheticFieldBinding);", "+\t\t\t\t((Clinit) method).setAssertionSupport(assertionSyntheticFieldBinding, currentScope.environment().options.sourceLevel < ClassFileConstants.JDK1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d2d30da472c8641a809bb9561de6fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/TypeAnnotationCodeStream.java", "commitBeforeChange": "8444b8c64dbb6b525eac8faf90c22961ce196392", "commitAfterChange": "fa4cf904b1d5690e02fc0246dbc8bc14a58e5d04", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void multianewarray( \t\t\tTypeReference typeReference, \t\t\tTypeBinding typeBinding, \t\t\tint dimensions, \t\t\tAnnotation [][] annotationsOnDimensions)", "signatureAfterChange": " \t \tpublic void multianewarray( \t\t\tTypeReference typeReference, \t\t\tTypeBinding typeBinding, \t\t\tint dimensions, \t\t\tint declaredDimensions, \t\t\tAnnotation [][] annotationsOnDimensions)", "diff": ["+\t\t\tint declaredDimensions,", "-\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.NEW, annotationsOnDimensions, dimensions);", "+\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.NEW, annotationsOnDimensions, declaredDimensions);", "-\t\tsuper.multianewarray(typeReference, typeBinding, dimensions, annotationsOnDimensions);", "+\t\tsuper.multianewarray(typeReference, typeBinding, dimensions, declaredDimensions, annotationsOnDimensions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d3afe6f5e406ef15fa5cc8a4e35093", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public boolean equals(Object o)", "signatureAfterChange": "  public boolean equals(Object o)", "diff": ["-\treturn binaryPath.equals(md.binaryPath) && sourcePath.equals(md.sourcePath);", "+\treturn sourceFolder.equals(md.sourceFolder) && binaryFolder.equals(md.binaryFolder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d4ed58ce16b4aad3021f67f6844df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a1021f545fb623410fbc38c594c2e03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "eca2879f8ac15a8e7e3e718f05394e00e64857c4", "commitAfterChange": "b9de5f3466a9b4d6687de837720c445097067b16", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tpublic MethodBinding findMethod(\r \t\tReferenceBinding receiverType,\r \t\tchar[] selector,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tpublic MethodBinding findMethod(\r \t\tReferenceBinding receiverType,\r \t\tchar[] selector,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tif (found.size == 0 && matchingMethod != null) {\r", "+\t\t\t\tif (matchingMethod != null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a58d21f4b155b80a3e2ed139486ffee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic void test0154() throws JavaModelException", "signatureAfterChange": " \tpublic void test0154() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a829d222d54cdb04e91a42bf13c56b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Block.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List statements()", "signatureAfterChange": "  \tpublic List statements()", "diff": ["-\t\treturn statements;", "+\t\treturn this.statements;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0adbf405f20d6e0d17515bd8deef4a81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\tscanForNullAnnotation(method, result);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0adfb6c576ac765b0d86e63d1bf45bbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/PostfixExpression.java", "commitBeforeChange": "5b6dd37b3f6594fcb6694566bc7450985b1bde55", "commitAfterChange": "cd2b61036e3927f1fe000c47bcd4c2b236df73f6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+ */", "+public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired) {", "+\t// various scenarii are possible, setting an array reference, ", "+\t// a field reference, a blank final field reference, a field of an enclosing instance or ", "+\t// just a local variable.", "+", "+\tint pc = codeStream.position;", "+\t ((Reference) this.lhs).generatePostIncrement(currentScope, codeStream, this, valueRequired);", "+\tif (valueRequired) {", "+\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t */", "-\tpublic void generateCode(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tboolean valueRequired) {", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+}", "-\t\t// various scenarii are possible, setting an array reference, ", "-\t\t// a field reference, a blank final field reference, a field of an enclosing instance or ", "-\t\t// just a local variable.", "-", "-\t\tint pc = codeStream.position;", "-\t\t ((Reference) lhs).generatePostIncrement(currentScope, codeStream, this, valueRequired);", "-\t\tif (valueRequired) {", "-\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t}", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aed77cbda545ca6befa5109ad8b616f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "362233260739692d3401ff7da0020ced9d7f2557", "commitAfterChange": "bc6513051567ecd475a4c8693370e01173b2772a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  private static void initDirectories(StringBuffer buffer)", "signatureAfterChange": "  private static void initDirectories(StringBuffer buffer)", "diff": ["-\t\t\t\tTEMP_OUTPUT = PATCH_BUG;", "+\t\t\t\tif (JDT_CORE_HEAD) {", "+\t\t\t\t\tTEMP_OUTPUT = \"HEAD\";", "+\t\t\t\t}", "-\t\t\tif (TEMP_OUTPUT == null && (PATCH_BUG != null || JDT_CORE_HEAD)) {", "+\t\t\tif (PATCH_BUG != null || (TEMP_OUTPUT == null && JDT_CORE_HEAD)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b26509968287e05af586cb9e720bb17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "5ea93c8171991f7f2324cde0403a03638a935574", "commitAfterChange": "91c5b521a946acd083c67846b836d9aa798085c8", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r \r private void checkNonExternalizeString()  throws InvalidInputException", "signatureAfterChange": "\r \r private void checkNonExternalizeString()  throws InvalidInputException", "diff": ["-\tif (currentLine == null || currentLineNr != linePtr)\r", "+\tif (currentLine == null)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2fc6407c5862315f40592a9258750b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void test0479() throws JavaModelException", "signatureAfterChange": " \tpublic void test0479() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b407de7f2f337aa8963b2708a21e5d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "8761bc78bc4b10c860ffd0abaa11fe6e4409f4a7", "commitAfterChange": "e638bcfa6ede2617a8de404af4af8024502bc348", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\tboolean hasNonNullDefault, boolean complain, MethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": "  void checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\tboolean hasNonNullDefault, boolean complain, MethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\tthis.buddyImplicitNullAnnotationsVerifier.checkImplicitNullAnnotations(currentMethod, srcMethod, complain, this.type.scope);", "+\t\tthis.buddyImplicitNullAnnotationsVerifier.checkImplicitNullAnnotations(currentMethod, srcMethod, complain, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b411ddfe39ba8710ff99a36fb792436", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 364, "signatureBeforeChange": " \tpublic void test0707() throws JavaModelException", "signatureAfterChange": " \tpublic void test0707() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5e8df92cff48771b56dcc08214352c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void test0089() throws JavaModelException", "signatureAfterChange": " \tpublic void test0089() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b6a4dc4a1bc759771f419920bef082d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tpublic void test064()", "signatureAfterChange": " \t \tpublic void test064()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b727cf3b400b39c8c8305dc62b84aec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "418e34f57c9f7842d3534af171e657c264f02dd7", "commitAfterChange": "42a66623ce2a3ec71a2f28506ffd67d2c8d2cf8c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(MethodScope initializationScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(MethodScope initializationScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tthis.initialization.checkNPEbyUnboxing(initializationScope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b75b30b73927f0b40a153f49f027282", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testRemoveExternalProject() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemoveExternalProject() throws JavaModelException, CoreException", "diff": ["-public void testRemoveExternalProject() throws JavaModelException, CoreException, IOException {", "+public void testRemoveExternalProject() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b78b899040aea4238cbcf5b92e36ade", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConstructorInvocation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bb06b62f97ff42c5c783cb5d59d78de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/ScannerHelper.java", "commitBeforeChange": "fa03a3886ac7dfa2906a8925ea45893dda8db994", "commitAfterChange": "4c7ffc8f979360df3ec8695cb788c31f631aece3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static int toCodePoint(char high, char low)", "signatureAfterChange": " \t \tprivate static int toCodePoint(char high, char low)", "diff": ["-\t\treturn (high - HIGH_SURROGATE_MIN_VALUE) * 0x400 + (low - LOW_SURROGATE_MIN_VALUE) + 0x10000;", "+\t\treturn (high - Scanner.HIGH_SURROGATE_MIN_VALUE) * 0x400 + (low - Scanner.LOW_SURROGATE_MIN_VALUE) + 0x10000;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bbc3b832a8b7f513cd9f742aff91c0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "ae21fbfba4168c94ed6cac704b2407f6ca281cab", "commitAfterChange": "502428a56ac1c33f406a983668ed7a632d288c0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey(char[] fieldName)", "signatureAfterChange": "  public static char[] createIndexKey(char[] fieldName)", "diff": ["-\treturn encodeIndexKey(fieldName, R_EXACT_MATCH);", "+\treturn fieldName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfa33c54eb4088c6b279e17fea56363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "538c0b31c8df84049489b5a401103859bb5eec8f", "commitAfterChange": "16b28f2f33ec894bf25a38e03f521a91d92e684d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate FieldDeclaration convert(SourceField fieldHandle, TypeDeclaration type, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate FieldDeclaration convert(SourceField fieldHandle, TypeDeclaration type, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t/* convert annotations */", "-\t\tfield.annotations = convertAnnotations(fieldHandle);", "+\t\t// convert 1.5 specific constructs only if compliance is 1.5 or above", "+\t\tif (this.has1_5Compliance) {", "+\t\t\t/* convert annotations */", "+\t\t\tfield.annotations = convertAnnotations(fieldHandle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c09bc9ea8a6a7695184c3a072824924", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePair.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c12b92efe158eb29d01e719a2ced04d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Expression getElseExpression()", "signatureAfterChange": "  \tpublic Expression getElseExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c15f8b956a3425fc348b0b387da9248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "commitAfterChange": "735916eb06179bed43e056d6ccfc575e428a25bb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tint memSize()", "signatureAfterChange": " \tint memSize()", "diff": ["-\t\tint size = BASE_NODE_SIZE + 7 * 4;", "+\t\tint size = BASE_NODE_SIZE + 8 * 4;", "-\t\tif (this.optionalCommentList != null) {", "-\t\t\tsize += HEADERS + 4 * this.optionalCommentList.size();", "+\t\tif (this.optionalCommentTable != null) {", "+\t\t\tsize += HEADERS + 4 * this.optionalCommentTable.length;", "+\t\t// ignore the space taken up by optionalCommentList"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c44802cccb658f8d005ae38cb32212e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 291, "methodNumberAfterChange": 291, "signatureBeforeChange": " \tpublic void test0289() throws JavaModelException", "signatureAfterChange": " \tpublic void test0289() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c650da9583869c6312ca2ce0226d687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "9247f5a1413614555183073da9b25dcae829dcbb", "commitAfterChange": "ec2243f132866e54d9401c9f64dee23249b2b464", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\t\t\tcurrent[j].getAbsolutePath(),", "-\t\t\t\t\t\t\t\t\t\tnull, 0, null); ", "+\t\t\t\t\t\t\t\t\tcurrent[j].getAbsolutePath(),", "+\t\t\t\t\t\t\t\t\tnull, null); ", "-\t\t\tclasspaths.add(FileSystem.getClasspath(System.getProperty(\"user.dir\"), customEncoding, 0, null));//$NON-NLS-1$", "+\t\t\tclasspaths.add(FileSystem.getClasspath(System.getProperty(\"user.dir\"), customEncoding, null));//$NON-NLS-1$", "-\t\t\t\t\t\t.getClasspath(token, customEncoding, 0, null);", "+\t\t\t\t\t\t.getClasspath(token, customEncoding, null);", "-\t\t\t\t\t\t\t\t\tnull, 0, null); ", "+\t\t\t\t\t\t\t\t\tnull, null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c68a42853b7097d9381df60aee6137d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormattingPreferences.java", "commitBeforeChange": "02b069812d9eccf18b607ccee2550a6bb0833132", "commitAfterChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static FormattingPreferences getSunSetttings()", "signatureAfterChange": "  \tpublic static FormattingPreferences getSunSetttings()", "diff": ["+\t\tsunSettings.multiple_fields_alignment = Alignment.M_COMPACT_SPLIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6a80bd48dce32265218fcd7a0bb005", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BreakStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6ba19bf17afd874c45136f0f167d9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayCreation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0caed9136b83751fc27720018ed477e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "e1bbbbf1f45db75737d023fc31cf4b7aa3bfdbe2", "commitAfterChange": "827898bad98d434efacabec83ce1fea9231b54d7", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": " \tpublic boolean visit(Wildcard wildcard, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Wildcard wildcard, BlockScope scope)", "diff": ["-\t\t\t\tif (this.preferences.insert_space_after_question_in_wilcard) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tif (this.preferences.insert_space_after_question_in_wilcard) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ccc620c9a40764257426d967df804bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "6a9c839afeea06e7dd97b023fa9c24def00f0f08", "commitAfterChange": "cf7db1b07f7da2723bd250cc64a7e16bec1c504d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\t\treturn null;", "-\t\t}\t\t\t", "+\t\t\t// fall thru to create the variable - avoids additional errors because the variable is missing", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce13c44fc40d32f1bc70ee7ed1a6a10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "dd2a270d4bfbb4f228adb22be7333923f86c77e9", "commitAfterChange": "ba1917d8323b975c43d151520213a593a77dc7c0", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic boolean isStructureKnown() throws JavaModelException", "signatureAfterChange": " \tpublic boolean isStructureKnown() throws JavaModelException", "diff": ["-\t\treturn getElementInfo().isStructureKnown();", "+\t\treturn ((JavaElementInfo)getElementInfo()).isStructureKnown();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce1f596478d7dcc6413fcadb1bf9fe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingJavadocTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void testTagRemove1() throws Exception", "signatureAfterChange": " \t \tpublic void testTagRemove1() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsRemoved((ASTNode) tags.get(0), null);", "+\t\t\trewrite.remove((ASTNode) tags.get(0), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d062f8daac83b90500a348847a75861", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic PackageDeclaration getPackage()", "signatureAfterChange": "  \tpublic PackageDeclaration getPackage()", "diff": ["-\t\treturn optionalPackageDeclaration;", "+\t\treturn this.optionalPackageDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d0dc4bb26593ebe5f0d50952066004c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public boolean isClass()", "signatureAfterChange": "  public boolean isClass()", "diff": ["-\treturn (modifiers & (ClassFileConstants.AccInterface | ClassFileConstants.AccAnnotation | ClassFileConstants.AccEnum)) == 0;", "-}", "+\treturn (this.modifiers & (ClassFileConstants.AccInterface | ClassFileConstants.AccAnnotation | ClassFileConstants.AccEnum)) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d1c4cee2730d96263c2bbd0ca6dc85a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tpublic void test0540()", "signatureAfterChange": " \tpublic void test0540()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, source, \"Test.java\", project, options, true); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(getJLS3(), source, \"Test.java\", project, options, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2dcbeaad9e8c59c9241ae49d76190c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "signatureAfterChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "diff": ["-\t\tif (token == null)", "+\t\tif (token == null || (token.length == 0 && receiverType == null))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d34f3e761dd56866431862cbb62356b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "be945f896dfe94a8d4114819ea1c2afbe987ee6b", "commitAfterChange": "f7a4fed5e12ddd792bfd11e8778f8c9b3112f624", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration enumDeclaration, \t\t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration enumDeclaration, \t\t\tCompilationUnitScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.isSemiColon()) {", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.isSemiColon()) {", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3e5667d293a06960a94e3dce0c8b79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 394, "signatureBeforeChange": " \tpublic void test0392() throws JavaModelException", "signatureAfterChange": " \tpublic void test0392() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d49ba22414c647a38a10263a602cd42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " private void insertPositions(IJavaElement[] elements, boolean isNew)", "signatureAfterChange": " private void insertPositions(IJavaElement[] elements, boolean isNew)", "diff": ["-\t\t\tthis.putNewPosition(current, new ListItem(previous, next));", "+\t\t\tthis.newPositions.put(current, new ListItem(previous, next));", "-\t\t\tthis.putOldPosition(current, new ListItem(previous, next));", "+\t\t\tthis.oldPositions.put(current, new ListItem(previous, next));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5f6567880b451fbf4a7afa0590e751", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void test0505() throws JavaModelException", "signatureAfterChange": " \tpublic void test0505() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6f5b0881de27869d1c10d607bc13c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " public void test0205() throws JavaModelException", "signatureAfterChange": " public void test0205() throws JavaModelException", "diff": ["-\t            \"ZZType.ZZAnnotation[TYPE_REF]{p.ZZType.ZZAnnotation, p, Lp.ZZType$ZZAnnotation;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZType.ZZInterface[TYPE_REF]{p.ZZType.ZZInterface, p, Lp.ZZType$ZZInterface;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\",", "+\t            \"ZZType.ZZAnnotation[TYPE_REF]{p.ZZType.ZZAnnotation, p, Lp.ZZType$ZZAnnotation;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZType.ZZInterface[TYPE_REF]{p.ZZType.ZZInterface, p, Lp.ZZType$ZZInterface;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d7ae395162063f3e2320b1819be3904", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["+\t\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\t// need annotations on the type before processing null annotations on members respecting any @NonNullByDefault:", "+\t\t\tscanTypeForNullDefaultAnnotation(binaryType, this.fPackage, this);", "+\t\t}", "-\t\t\t\t// need annotations on the type before processing null annotations on members respecting any @NonNullByDefault:", "-\t\t\t\tscanTypeForNullDefaultAnnotation(binaryType, this.fPackage, this);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d7c9d27594fd6c60be1bf957511d022", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["- */", "-public void findIndexMatches(IndexInput input, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {", "+public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {", "-\tfor (int i = 0, length = this.patterns.length; i < length; i++)", "-\t\tthis.patterns[i].findIndexMatches(input, requestor, participant, scope, progressMonitor);", "+\ttry {", "+\t\tindex.startQuery();", "+\t\tfor (int i = 0, length = this.patterns.length; i < length; i++)", "+\t\t\tthis.patterns[i].findIndexMatches(index, requestor, participant, scope, progressMonitor);", "+\t} finally {", "+\t\tindex.stopQuery();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8487530ee4c26ecb8542e5a438ab8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void test0061() throws JavaModelException", "signatureAfterChange": " \tpublic void test0061() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db489a18dd4797af7418dac070b118e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void test0513() throws JavaModelException", "signatureAfterChange": " \tpublic void test0513() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd57b0b473b1754a3491c5adbbcf2b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic final TypeBinding getType(char[] name, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic final TypeBinding getType(char[] name, PackageBinding packageBinding)", "diff": ["-\t\t\t\tNotFound);", "+\t\t\t\tProblemReasons.NotFound);", "-\t\t\t\tNotVisible);", "+\t\t\t\tProblemReasons.NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dda8c4c7aee62af7ce72cb4849bfb07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 355, "methodNumberAfterChange": 355, "signatureBeforeChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "signatureAfterChange": " public void unsafeCast(CastExpression castExpression, Scope scope)", "diff": ["-\t\terasedCastType = scope.environment().createRawType((ReferenceBinding)erasedLeaf, erasedLeaf.enclosingType());", "+\t\tReferenceBinding leafEnclosing = scope.environment().convertToParameterizedType(erasedLeaf.enclosingType());", "+\t\terasedCastType = scope.environment().createRawType((ReferenceBinding)erasedLeaf, leafEnclosing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0de0f68da45bdd1e3521951a8a74a7cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public void testCompletionPrefixMethodName2() throws JavaModelException", "signatureAfterChange": "   public void testCompletionPrefixMethodName2() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:xBar    completion:xBar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dfff118a81c0c6ca3125c97e849cd11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void updateCycleParticipants( \t\t\tArrayList prereqChain,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet traversed, \t\t\tMap preferredClasspaths)", "signatureAfterChange": " \tpublic void updateCycleParticipants( \t\t\tArrayList prereqChain,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet traversed, \t\t\tMap preferredClasspaths)", "diff": ["-\t\t\tif (classpath == null) classpath = getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\tif (classpath == null) classpath = getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e34dc4ab84a252b230444d05ac0fb81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WhileStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4f484f5a69de3b00df063534b6a68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " \tpublic void test0573() throws JavaModelException", "signatureAfterChange": " \tpublic void test0573() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, pos, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, pos, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5118333b1de27ddb803512976c657d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tpublic void test0522() throws JavaModelException", "signatureAfterChange": " \tpublic void test0522() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e56d09ab15289d9024f1df55f4f5511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "c40d37b31933df685287603b7876ab2876472c95", "commitAfterChange": "3971d8f8a2e5e579f01de85b01589311701c58f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=211054", "+\t\t\t\t// allow references to current package only. All other package references should be reported as invalid", "+\t\t\t\tif (scope.compilationUnitScope().fPackage != this.packageBinding) {", "+\t\t\t\t\tscope.problemReporter().javadocInvalidReference(this.sourceStart, this.sourceEnd);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6a808b90cc8b3b7bd8ec9374e5b2a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "commitAfterChange": "7e5c821becbfd893dc049f65559e27ad95e7a9ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding raisedException,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "signatureAfterChange": "\r \r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding raisedException,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\t\t// only required for actually thrown exceptions\r", "-\t\t\t\t\t\t\tif (!flowInfo.isDeadEnd() && !flowInfo.isFakeReachable()){\r", "-\t\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9d56d90034e9c85bf7ad93110646ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\treturn one.typeVariables != NoTypeVariables && !(substituteTwo instanceof ParameterizedGenericMethodBinding);", "+\treturn one.typeVariables != Binding.NO_TYPE_VARIABLES && !(substituteTwo instanceof ParameterizedGenericMethodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ebf3bb32b68f7745518b965e948e5e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "8e69a3a7281a71cf8bb89a21d1bb526115e1dbf1", "commitAfterChange": "abf6eeb0171a16a4864dd1645223bf575f08c2ee", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "signatureAfterChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "diff": ["- \t\t\t\t\tconsumeField(this.scanner.getTokenSource());", "-\t\t\t\t\tparseFlags();", "+ \t\t\t\t\tparseField();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec7f108cd15096e7888601a9b80e26d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 372, "signatureBeforeChange": " \tpublic void test336()", "signatureAfterChange": " \tpublic void test336()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ed048a010393998b1b971e6a53f0c47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "a875873381b5c93516e927c7a0f03c3097fc26b5", "commitAfterChange": "05ecd79653c57bf231b3199c70ed57222451b62a", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["-\t\tif (getChildNode(node, EnumConstantDeclaration.JAVADOC_PROPERTY) != null) {", "-\t\t\tgetChildNode(node, EnumConstantDeclaration.JAVADOC_PROPERTY).accept(this);", "+\t\tASTNode javadoc= getChildNode(node, EnumConstantDeclaration.JAVADOC_PROPERTY);", "+\t\tif (javadoc != null) {", "+\t\t\tjavadoc.accept(this);", "-\t\tvisitList(node, EnumConstantDeclaration.BODY_DECLARATIONS_PROPERTY, String.valueOf(' '), String.valueOf('{'), String.valueOf('}'));", "+\t\tASTNode classDecl= getChildNode(node, EnumConstantDeclaration.ANONYMOUS_CLASS_DECLARATION_PROPERTY);", "+\t\tif (classDecl != null) {", "+\t\t\tclassDecl.accept(this);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eeea30495aaf018357e99b9a768436c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testAccessRestriction11() throws Exception", "signatureAfterChange": " public void testAccessRestriction11() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f13682af17a210874029692e45ea1b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic ParameterizedMethodBinding createParameterizedMethod(MethodBinding originalMethod)", "signatureAfterChange": " \tpublic ParameterizedMethodBinding createParameterizedMethod(MethodBinding originalMethod)", "diff": ["-\t\tif (originalMethod.typeVariables == NoTypeVariables || originalMethod.isStatic()) {", "+\t\tif (originalMethod.typeVariables == Binding.NO_TYPE_VARIABLES || originalMethod.isStatic()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f13d501e55c717eb7fd6d7441421c44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic void test0098() throws JavaModelException", "signatureAfterChange": " \tpublic void test0098() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f433a955c311c08c3dcb94f07763ac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "09d58a6e319cfeec520d29fd7c2c24967ab4e499", "commitAfterChange": "3f9786eb97e62b9a5f765764dcc08a631a4e6afe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic final boolean isMethodReference()", "signatureAfterChange": " \t \tpublic final boolean isMethodReference()", "diff": ["-\t\treturn !CharOperation.equals(this.method.token,  ConstantPool.Init);", "+\t\treturn !CharOperation.equals(this.selector,  ConstantPool.Init);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f5c2d1890d906adcb9089c79584c1c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 81, "signatureBeforeChange": "   \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": "   \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-\t\tint endPos= new ModifierRewriter(formatterPrefix).rewriteList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tint endPos= new ModifierRewriter(formatterPrefix).rewriteList(node, property, pos, Util.EMPTY_STRING, \" \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f839fae4dfd4f1c831a48a77702dfd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public final boolean isRequiredToClearPrivateModifier()", "signatureAfterChange": " public final boolean isRequiredToClearPrivateModifier()", "diff": ["-\treturn (modifiers & AccClearPrivateModifier) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccClearPrivateModifier) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa4843b92c1455c8393a5678aa90f14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/CompilationUnit.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public char[] getFileName()", "signatureAfterChange": " public char[] getFileName()", "diff": ["-\treturn fileName;", "+\treturn this.fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fca0d8fb0721743352ae63d365e9aa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CharacterLiteral.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic String getEscapedValue()", "signatureAfterChange": "  \tpublic String getEscapedValue()", "diff": ["-\t\treturn escapedValue;", "+\t\treturn this.escapedValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fed9fbca8aa89cdbfba88a28ef17c73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testUnderlyingResourceNonExistingCompilationUnit() throws CoreException", "signatureAfterChange": " public void testUnderlyingResourceNonExistingCompilationUnit() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tICompilationUnit compilationUnit = this.getCompilationUnit(\"/P/src/X.java\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tICompilationUnit compilationUnit = getCompilationUnit(\"/P/src/X.java\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff19842146beacf11b6a0acf5b57a5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\tint argumentsLength;", "-\t\t\ttype.traverse(visitor, scope);", "-\t\t\tif (arguments != null) {", "-\t\t\t\targumentsLength = arguments.length;", "-\t\t\t\tfor (int i = 0; i < argumentsLength; i++)", "-\t\t\t\t\targuments[i].traverse(visitor, scope);", "+\t\t\tif (this.typeArguments != null) {", "+\t\t\t\tfor (int i = 0, typeArgumentsLength = this.typeArguments.length; i < typeArgumentsLength; i++) {", "+\t\t\t\t\tthis.typeArguments[i].traverse(visitor, scope);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.type.traverse(visitor, scope);", "+\t\t\tif (this.arguments != null) {", "+\t\t\t\tfor (int i = 0, argumentsLength = this.arguments.length; i < argumentsLength; i++)", "+\t\t\t\t\tthis.arguments[i].traverse(visitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10000afdfeba65aa004dce2e82c4a379", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " \tpublic void test0179() throws JavaModelException", "signatureAfterChange": " \tpublic void test0179() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10212a9f69e348e25f8377674ab87c6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic int getExtraDimensions()", "signatureAfterChange": "  \tpublic int getExtraDimensions()", "diff": ["-\t\treturn extraArrayDimensions;", "+\t\treturn this.extraArrayDimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103c8ad14d95b98cc0bac1400d54e431", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic void test0077() throws JavaModelException", "signatureAfterChange": " \tpublic void test0077() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103fb54754af88cffde611cb2888ba11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SubTypeSearchJob.java", "commitBeforeChange": "fd19dfb11535c216820cbb7ea651282176d7f285", "commitAfterChange": "a71748b329bb09485d952dce5b30b2cf83046b40", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean search(Index index, IProgressMonitor progressMonitor)", "signatureAfterChange": " public boolean search(Index index, IProgressMonitor progressMonitor)", "diff": ["-\tif (!indexes.includes(index)) {", "-\t\tindexes.add(index);", "+\tif (indexes.addIfNotIncluded(index) == index)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10696467a6a94aac53ec27dba91d6765", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "d08e87c35b21123010227cf2729df51d820e4d50", "commitAfterChange": "48a2d2499344bebca223a2f8c964ed5900cd0012", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": "  public NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-\t\t\t\tsetExternalAnnotationProvider(reader);", "+\t\t\t\treader.setExternalAnnotationProvider(this.externalAnnotationDir);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107bbfac0408bc65517d2a7e29eebd89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "2c7188c2cc54fb87a64d770ede4d437b19568fed", "commitAfterChange": "73cb911baa8db75db819f7327ce2bb8d1c8537b4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tpublic void run()", "signatureAfterChange": "\r \tpublic void run()", "diff": ["-\t\t\twhile (true) {\r", "+\t\t\twhile (this.thread != null) {\r", "-\t\t\t// log exception\r", "-\t\t\torg.eclipse.jdt.internal.core.Util.log(e, \"Background Indexer Crash Recovery\"); //$NON-NLS-1$\r", "-\t\t\t\r", "-\t\t\t// keep job manager alive\r", "-\t\t\tthis.discardJobs(null);\r", "-\t\t\tthis.thread = null;\r", "-\t\t\tthis.reset(); // this will fork a new thread\r", "-\t\t\tthrow e;\r", "+\t\t\tif (this.thread != null) { // if not shutting down\r", "+\t\t\t\t// log exception\r", "+\t\t\t\torg.eclipse.jdt.internal.core.Util.log(e, \"Background Indexer Crash Recovery\"); //$NON-NLS-1$\r", "+\t\t\t\t\r", "+\t\t\t\t// keep job manager alive\r", "+\t\t\t\tthis.discardJobs(null);\r", "+\t\t\t\tthis.thread = null;\r", "+\t\t\t\tthis.reset(); // this will fork a new thread\r", "+\t\t\t\tthrow e;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109b150c1ece081aa052217e1d77f2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "diff": ["-\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "-\t\t\t\t(method.isPrivate() || method.declaringClass.isLocalType()) && !scope.isDefinedInMethod(method)) {", "-\t\t\t// ignore cases where method is used from within inside itself (e.g. direct recursions)", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 && method.isOrEnclosedByPrivateType() && !scope.isDefinedInMethod(method)) {", "+\t\t\t// ignore cases where method is used from inside itself (e.g. direct recursions)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10a20dc49e0d795c61121f71ef13315d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "48cc83ca64e25de154567688d6d5a836b273bee1", "commitAfterChange": "fdcb8050ac88fb7d983b388fab655bdfe87bdbf6", "methodNumberBeforeChange": 1066, "methodNumberAfterChange": 1066, "signatureBeforeChange": " public void test1054()", "signatureAfterChange": " public void test1054()", "diff": ["-\tif (System.getProperty(\"java.version\").startsWith(\"1.6\")) {", "+\tif (isJRELevel(\"1.6\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d551ba0fca7f6897674c784615b66b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testAddListenerTwice() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddListenerTwice() throws JavaModelException, CoreException", "diff": ["-public void testAddListenerTwice() throws JavaModelException, CoreException, IOException {", "+public void testAddListenerTwice() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e943170e10654c7c87b216ff5c7418", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 366, "signatureBeforeChange": " \tpublic void test0364() throws JavaModelException", "signatureAfterChange": " \tpublic void test0364() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1120e269a44b5f0ca24f55e07f539767", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "7bf8b664251457ee19a0ca0f4e524593e5cebbd2", "commitAfterChange": "c844b42e53f5e6c13f3c402081599074b3dd58c2", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " public void testBug92264a() throws CoreException", "signatureAfterChange": " public void testBug92264a() throws CoreException", "diff": ["-\t\tgetJavaSearchScopeBugs(),", "+\t\tgetJavaSearchScope(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118fc6f89dd204aca5dcb7066388b3b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRef.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a55874aaf7a73cd2fae13378a8ee6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "f50252d848b2855a0e3b480a92607978678762ce", "commitAfterChange": "c8700a3b71cbd4c7c842ba4b21536d25ce7aceed", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !receiver.isImplicitThis() || !this.codegenBinding.isStatic())", "+\t\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(receiver.isImplicitThis() && this.codegenBinding.isStatic()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a9a309c09dc81fa48b2dcb7f824146", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tpublic void testPerfDomAstCreationJLS3() throws JavaModelException", "signatureAfterChange": "  \tpublic void testWkspDomAstCreationJLS3() throws JavaModelException", "diff": ["-\tpublic void testPerfDomAstCreationJLS3() throws JavaModelException {", "-\t\ttagAsSummary(\"DOM>Creation>JLS3\", Dimension.CPU_TIME, true/*put in fingerprint*/);", "+", "+\tpublic void testWkspDomAstCreationJLS3() throws JavaModelException {", "+\t\ttagAsSummary(\"DOM>Creation>Wksp>JLS3\", true); // put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ad15eced15b89aafa1b719d116c08f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test0008() throws JavaModelException", "signatureAfterChange": " \tpublic void test0008() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c13672fdc140d7c229060cbc508b13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateOptimizedLessThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLessThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c8eba1185782bd31e1d451ed069580", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public boolean isGenericType()", "signatureAfterChange": " public boolean isGenericType()", "diff": ["-    return this.typeVariables != NoTypeVariables;", "+    return this.typeVariables != Binding.NO_TYPE_VARIABLES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11d1c711c86388d846900c728b114270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "4daf5798806511c91f97f95283d45690e7f165fa", "commitAfterChange": "6e51f9fbccbd96945f6930d913a998a8346308ac", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprivate String getCurrentLine(String str, int pos)", "signatureAfterChange": "  \tprivate int getCurrentLineStart(String str, int pos)", "diff": ["-\tprivate String getCurrentLine(String str, int pos) {", "+\tprivate int getCurrentLineStart(String str, int pos) {", "-\t\t\t\treturn str.substring(i + 1, pos);", "+\t\t\t\treturn i+1;", "-\t\treturn str.substring(0, pos);", "+\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ebeffa271aef7a961be48aeb0b9636", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b38d55619c4a9ca7d4574fb835b150719a44f0bd", "commitAfterChange": "45bdc07adae1ef88f78432222ecbd20f556c78a1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t  && options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_1)) {", "+\t\t\t  && options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_1)) {", "+\t\t\t  \tif (didSpecifyTarget) {", "+\t\t\t  \t} else {", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\t  \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f417f62004f8f2253e8d9aa417905e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "8a17a982036655d14a3764114b7ead97729b87f1", "commitAfterChange": "e1e7ac03dd7a95a0bfd2c7a26a11bdfc757b01d3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "signatureAfterChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\t// Do not store information inside scope when library does not exist", "-\t\t\t\t\t\t\t\t// (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=215841)", "-\t\t\t\t\t\t\t\tif (JavaModel.getTarget(project.getParent(), path, true) != null) {", "-\t\t\t\t\t\t\t\t\tadd(projectPath.toString(), \"\", pathToString, false/*not a package*/, access); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tadd(projectPath.toString(), \"\", pathToString, false/*not a package*/, access); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f6ebe49f0fbd6d1c900eff7e3d9d4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BaseMessagerImpl.java", "commitBeforeChange": "d1124c61c8f3ff39bbe128bdbccc90a8a92cba7f", "commitAfterChange": "a626dbe34a0108abdf11028aa7b5540f10df6847", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e)", "signatureAfterChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e)", "diff": ["-\t\tStringBuilder builder = new StringBuilder(msg);", "+\t\tStringBuilder builder = new StringBuilder();", "+\t\tif (msg != null) {", "+\t\t\tbuilder.append(msg);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "121c517b06926bca982380786515c78c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " \tpublic void test0568() throws JavaModelException", "signatureAfterChange": " \tpublic void test0568() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1224b1c79fbad60e89a45e3260cbcc42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String[] getArguments()", "signatureAfterChange": " \tpublic String[] getArguments()", "diff": ["-\t\treturn arguments;", "+\t\treturn this.arguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122d20051a6aec09ba457c29b6b4d46b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": " \tpublic void test0186() throws JavaModelException", "signatureAfterChange": " \tpublic void test0186() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "123bb8de665c3caa759ddb46ce15cdd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "6a1ae6805f5396c0e5cfc535af83f6d6f695e5ea", "commitAfterChange": "a184055df3953fc7636d02b495d8ddad60f03a7d", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificClassMethodBinding(MethodBinding[] visible, int visibleSize, InvocationSite invocationSite)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificClassMethodBinding(MethodBinding[] visible, int visibleSize, InvocationSite invocationSite)", "diff": ["-\t\t\tprevious = method;", "+\t\t\tif (!method.isStatic()) previous = method; // no ambiguity for static methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12641c6a72863539c9b1fdfda4d86670", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a48910fdf9f121b84d90ee710289f4f2c5ac9f37", "commitAfterChange": "9cc96b2e2638fe9846a1ccd7883c1f5d12817348", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\tif (pNext.isRaw) {", "+\t\t\t\t\t\tif (pNext.isRaw && ", "+\t\t\t\t\t\t\t\t(pNext.modifiers & ClassFileConstants.AccStatic)", "+\t\t\t\t\t\t\t\t\t== 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1269a4b5a2a75ab0da910b607d3c54f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 144, "signatureBeforeChange": " final public void ifgt(Label lbl)", "signatureAfterChange": " final public void ifgt(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifgt:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b58b0998e9e72e470593f6c4b99b43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tpublic void test0170() throws JavaModelException", "signatureAfterChange": " \tpublic void test0170() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12be11773dcd9922a962ce6e8270d88a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void test0016() throws JavaModelException", "signatureAfterChange": " \tpublic void test0016() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131f5343f9f09db54916909c1833894f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/base/XMLConverter.java", "commitBeforeChange": "e5afcb0ec821099a058acc796f2348c4c58a2e3e", "commitAfterChange": "1a36ae2092977e6a13134bbe916d1e02aefe6f2e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Document convertModel(Iterable<? extends javax.lang.model.element.Element> declarations) throws ParserConfigurationException", "signatureAfterChange": " \tpublic static Document convertModel(Iterable<? extends javax.lang.model.element.Element> declarations) throws ParserConfigurationException", "diff": ["-\t\torg.w3c.dom.Element modelNode = model.createElement(\"model\");", "+\t\torg.w3c.dom.Element modelNode = model.createElement(MODEL_TAG);", "-\t\tXMLConverter converter = new XMLConverter();", "+\t\tXMLConverter converter = new XMLConverter(model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132c6b9a646a46c7f6e6c8dc8fe6b890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1358e50b7baf1d466a234009b3cbe1d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "650909e8cb3636454033b091607121770e4ba739", "commitAfterChange": "04ba8714847b0b2ff7093c5cc3d0c90b552f67e9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tthis.position.checkNPEbyUnboxing(currentScope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "136a18b93050425fd46257f9913c8446", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic List typeBounds()", "signatureAfterChange": "  \tpublic List typeBounds()", "diff": ["-\t\treturn typeBounds;", "+\t\treturn this.typeBounds;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1376eda1888e5e99feccd52fca93c80e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "signatureAfterChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "diff": ["-\t\tsynchronized(perWorkingCopyInfos) {", "+\t\tsynchronized(this.perWorkingCopyInfos) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d4a094913b30c4d39c70db71c8ec69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test0502b() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502b() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d97a13e173c6c25999bc64062c03ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "signatureAfterChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "diff": ["-\t\t\t\t\t\t0), // line number\t\t", "+\t\t\t\t\t\t0, // line number", "+\t\t\t\t\t\t0),// column number"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e1ba85d69f7a438d1cc0f1e62e7afd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "3812c97c89cf873f2a3b0b533d89169c084b6598", "commitAfterChange": "a1ef3c329d5aa2ced30d6367713d8ba098b0256e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t  \tpublic void consumeParser(BindingKeyParser parser)", "signatureAfterChange": " \t  \tpublic void consumeParser(BindingKeyParser parser)", "diff": ["-\t\tthis.types.add(((BindingKeyResolver) parser).compilerBinding);", "+\t\tBinding binding = ((BindingKeyResolver) parser).compilerBinding;", "+\t\tif (binding != null)", "+\t\t\tthis.types.add(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e3f009ece906d6a27c49621e2c041a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 377, "signatureBeforeChange": " \tpublic void test0375() throws JavaModelException", "signatureAfterChange": " \tpublic void test0375() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f7bec265a0f4179ec1fabe52c7b490", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " \tpublic void test0563() throws JavaModelException", "signatureAfterChange": " \tpublic void test0563() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f9151cc5a62323c6e9b16891480672", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public char[] getFileName()", "signatureAfterChange": "\r public char[] getFileName()", "diff": ["-\treturn classFileName;\r", "+\treturn this.classFileName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f95f62a5c54296abe0f8ce8260ae94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 733, "methodNumberAfterChange": 736, "signatureBeforeChange": " \tpublic void test700()", "signatureAfterChange": " \tpublic void test700()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1427049ebdad18145fb5fb64089ba5eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e0b93cd9388950bd51950e07247cdecc9e3263df", "commitAfterChange": "265ec26aa6d2cbdb7df581eef4b2a30df572f94f", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 367, "signatureBeforeChange": " \tpublic void test349()", "signatureAfterChange": " \tpublic void test349()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143d1b265a3a8eaa1eccec6a333f9ac3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public int kind()", "signatureAfterChange": " public int kind()", "diff": ["-\tif (this.typeVariables != NoTypeVariables) return Binding.GENERIC_TYPE;", "+\tif (this.typeVariables != Binding.NO_TYPE_VARIABLES) return Binding.GENERIC_TYPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1446a4c471e2a11d46357e55bc14f3fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "2f4a2c5f4e85be10c6f8a803a860cb198c96e808", "commitAfterChange": "6e078f72aac803cfa7a439337ace93b9202fe191", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public char[] getName()", "signatureAfterChange": "\r public char[] getName()", "diff": ["-\treturn name;\r", "+\treturn this.name;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "144ec1ebbdcf4fec6d5800d860412c51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "diff": ["-\t\tthis.parser = new MatchLocatorParser(problemReporter, options.getAssertMode());\r", "+\t\tthis.parser = new MatchLocatorParser(problemReporter, options.assertMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "147528032ecc20d0b242b5c2d17016a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void test011() throws JavaModelException", "signatureAfterChange": " \tpublic void test011() throws JavaModelException", "diff": ["-\t\tthis.problems = new StringBuffer();", "-\t\tthis.sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"javadoc.test011\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\t\tASTNode result = runConversion(this.sourceUnit, true);", "+\t\tproblems = new StringBuffer();", "+\t\tsourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"javadoc.test011\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tASTNode result = runConversion(sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14c50d16beec2fab1c088db8f1f24845", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public final boolean hasRestrictedAccess()", "signatureAfterChange": " public final boolean hasRestrictedAccess()", "diff": ["-", "-public final boolean hasRestrictedAccess() {", "-\treturn (modifiers & ExtraCompilerModifiers.AccRestrictedAccess) != 0;", "+}", "+public final boolean hasRestrictedAccess() {", "+\treturn (this.modifiers & ExtraCompilerModifiers.AccRestrictedAccess) != 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f630dfedcd7adb86d53319065d57c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 281, "signatureBeforeChange": " \tpublic void test0279() throws JavaModelException", "signatureAfterChange": " \tpublic void test0279() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15073bec7e5f35f3c9b9b5fd28784804", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 274, "signatureBeforeChange": " \tpublic void test0629() throws JavaModelException", "signatureAfterChange": " \tpublic void test0629() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1520a36d9346bc39506b50c7642f90e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "d3a75dd70755d47455161cad3e4a366e8ddf8ed2", "commitAfterChange": "838a013a73d7b6e4530eddb128999880d8ca088a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r \r \tpublic Assignment convert(CompoundAssignment expression)", "signatureAfterChange": "\r \r \tpublic Assignment convert(CompoundAssignment expression)", "diff": ["-\t\tassignment.setSourceRange(expression.sourceStart, expression.sourceEnd - expression.sourceStart + 1);\r", "-\t\tassignment.setLeftHandSide(convert(expression.lhs));\r", "+\t\tExpression lhs = convert(expression.lhs);\r", "+\t\tassignment.setLeftHandSide(lhs);\r", "+\t\tint start = lhs.getStartPosition();\r", "+\t\tassignment.setSourceRange(start, expression.sourceEnd - start + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15391afb52b643c04e3d2b53a21fabed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic void test0537a() throws JavaModelException", "signatureAfterChange": " \tpublic void test0537a() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15555c00cd13757c09eef8220e9e7cfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "commitAfterChange": "0c80d88773ddbe1e035accca9dfc037266a710bf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tif (upperScope.environment().options.targetJDK < ClassFileConstants.JDK_DEFERRED) {", "+\t\t\t\tif (upperScope.environment().options.useJsrBytecode) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15596de134f8e8fe6ed2829d340f9034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156aecdaaeab997d0feac35b96b0892f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "580c728201df4f59e1400e6feeeb245b12a49163", "commitAfterChange": "a43591ed0206cd23fd90053f7c1436df8e9d56a7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "signatureAfterChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "diff": ["-\t\t\t\t\tif (!compatible &&", "-\t\t\t\t\t\t !typeRef.resolvedType.isCompatibleWith(methScope.getJavaLangRuntimeException()) &&", "-\t\t\t\t\t\t !typeRef.resolvedType.isCompatibleWith(methScope.getJavaLangError())) {", "+\t\t\t\t\tif (!compatible && !typeRef.resolvedType.isUncheckedException(false)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "157f36be08bd1061de7d15d268d6c725", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "81467ff2e7fb802ee5565cd3fd6bf445566faeb9", "commitAfterChange": "852007504aa320674f74f0c594f5665e89f3d3e7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t \t \tpublic boolean doesParticipateInProject(IJavaProject project)", "signatureAfterChange": " \t \t \t \tpublic boolean doesParticipateInProject(IJavaProject project)", "diff": ["-\t\t}", "-\t\tList<AnnotationProcessorFactory> factories = _factoryLoader.getFactoriesForProject( project );", "-\t\tif (factories.size() == 0)", "-\t\t\treturn false;", "-\t\t", "+\t\t}\t\t", "+\t\treturn _factoryLoader.hasFactoriesForProject(project);\t\t\t\t", "-\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15939994d70a0cef39280ebc104af689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tpublic void test0117() throws JavaModelException", "signatureAfterChange": " \tpublic void test0117() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15951e1f6a16e4e16f5909c7608bd7be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "380351f862dc90cd086c09262c15b064abc84e95", "commitAfterChange": "8417005702ab0f2abab8acae1f167a4d3fc26189", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprotected static String getConverterJCLSourcePath()", "signatureAfterChange": "  \tprotected String getConverterJCLSourcePath()", "diff": ["-\tprotected static String getConverterJCLSourcePath() {", "-\t\treturn AbstractJavaModelTests.EXTERNAL_JAR_DIR_PATH + File.separator + \"converterJclMinsrc.zip\"; //$NON-NLS-1$", "+\tprotected String getConverterJCLSourcePath() {", "+\t\treturn getExternalPath() + File.separator + \"converterJclMinsrc.zip\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15992960fdd12dfd0ed6175a5fa047f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic void test0195() throws JavaModelException", "signatureAfterChange": " \tpublic void test0195() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a0ceab9e3ca82f372c7b19118e7dc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectEnumSuperclass()", "signatureAfterChange": " \tprivate boolean connectEnumSuperclass()", "diff": ["-\t\tif (refTypeVariables == NoTypeVariables) { // check generic", "+\t\tif (refTypeVariables == Binding.NO_TYPE_VARIABLES) { // check generic"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15ae5e0fd12c19e90378889ea67eb7a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ThrowStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15ca86375b05454bc73e99d952d891c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f1ecb4b2d8ea593a495f1608bdd4d8fccb10a732", "commitAfterChange": "575694a4feaf3caf1988ca9a05c237c3a23369b5", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " public void javadocErrorNoMethodFor(MessageSend messageSend, TypeBinding recType, TypeBinding[] params, int modifiers)", "signatureAfterChange": " public void javadocErrorNoMethodFor(MessageSend messageSend, TypeBinding recType, TypeBinding[] params, int modifiers)", "diff": ["-\tint id = recType.isArrayType() ? IProblem.NoMessageSendOnArrayType : IProblem.NoMessageSendOnBaseType;", "+\tint id = recType.isArrayType() ? IProblem.JavadocNoMessageSendOnArrayType : IProblem.JavadocNoMessageSendOnBaseType;", "-\t\t\tid|IProblem.Javadoc,", "+\t\t\tid,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15ce3de9957cb4c9428db73e8814f455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadoc.java", "commitBeforeChange": "3f75c9397ff53f65021c19499da76d98c9e23550", "commitAfterChange": "d3a9da1814717a2c18ee252440a7a4915c82ca4d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void internalResolve(Scope scope)", "signatureAfterChange": " \tprivate void internalResolve(Scope scope)", "diff": ["-\t\t\t\t\tif (paramNameReference.token == null) {", "+\t\t\t\t\tif (paramNameReference.token == null || paramNameReference.token.length == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d46de14f3b5e22ebcc9eca7bd92ec5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParenthesizedExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e52ae6cf1857d66184c9052892284b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15ed79f241218f5fb3b12cd4c031ccd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test0030() throws JavaModelException", "signatureAfterChange": " public void test0030() throws JavaModelException", "diff": ["-\t\t\"element:ZZX    completion:ZZX    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+ \"\\n\" +", "-\t\t\"element:ZZY    completion:ZZY    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "+\t\t\"element:ZZX    completion:ZZX    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+ \"\\n\" +", "+\t\t\"element:ZZY    completion:ZZY    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1600c9341085c244869cad3815f2ecb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "bdfcbb6fac28ce2d615a792c6b96756fd4d8d082", "commitAfterChange": "d285a739d23e3f82b667be77d5bebf56b7f90214", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void moveToNextFile() throws IOException", "signatureAfterChange": " \tpublic void moveToNextFile()", "diff": ["-\tpublic void moveToNextFile() throws IOException {", "+\tpublic void moveToNextFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1612d4a25555ce93323708f9bb0b826e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void test0511() throws JavaModelException", "signatureAfterChange": " \tpublic void test0511() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16341f5307be2764612664de8c5d4cb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "diff": ["-\t\t\tthis.modifiers |= AccGenericSignature;", "+\t\t\tthis.modifiers |= ExtraCompilerModifiers.AccGenericSignature;", "-\t\t\tthis.modifiers |= (this.enclosingType.modifiers & AccGenericSignature);", "+\t\t\tthis.modifiers |= (this.enclosingType.modifiers & ExtraCompilerModifiers.AccGenericSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16490d4693675f217136d9fefea9ae43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c4a9c950955e2519a6156f93a25e4e5f905489ef", "commitAfterChange": "1af8caa8342625078ac0b91e6ef4870e013c336f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["-\t\t\t\t    arrayInitializerAlignment.fragmentIndentations[0] = arrayInitializerAlignment.breakIndentationLevel;", "+\t\t\t\t\tarrayInitializerAlignment.fragmentIndentations[0] = arrayInitializerAlignment.breakIndentationLevel;", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE, false);", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE, this.preferences.insert_space_between_empty_braces_in_array_initializer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1654617852eed2a12a1da02c29156505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "a82b0643e63bc02a2e19585e0393bd1a0c838083", "commitAfterChange": "f1ebb2640c5454bff9caaa47acfae254f27d145c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected void pushOnAstStack(Object node, boolean newLength)", "signatureAfterChange": " \tprotected void pushOnAstStack(Object node, boolean newLength)", "diff": ["-\t\t\t\tthis.astStack = new Object[stackLength + AstStackIncrement], 0,", "+\t\t\t\tthis.astStack = new Object[stackLength + AST_STACK_INCREMENT], 0,", "-\t\t\t\t\tthis.astLengthStack = new int[stackLength + AstStackIncrement], 0,", "+\t\t\t\t\tthis.astLengthStack = new int[stackLength + AST_STACK_INCREMENT], 0,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169628a00edaa15ac55dc567fc4a4e66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void test0433() throws JavaModelException", "signatureAfterChange": " \tpublic void test0433() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169baf864b342e5b4132e5fc2114d8d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169d140f032ff353a74d8fe529c22a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 681, "methodNumberAfterChange": 681, "signatureBeforeChange": " public void testDeprecationCheck12() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck12() throws JavaModelException", "diff": ["-\t\t\t\t\"bar1[FIELD_REF]{bar1, Ldeprecation.Test;, I, bar1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"bar2[FIELD_REF]{bar2, Ldeprecation.Test;, I, bar2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"bar1[FIELD_REF]{bar1, Ldeprecation.Test;, I, bar1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"bar2[FIELD_REF]{bar2, Ldeprecation.Test;, I, bar2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16ae4180b7c470a18e3038253401cde9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NormalAnnotation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16dc9f02308520cd7b37258167dc187a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean complainIfUnreachable(Statement statement, BlockScope scope, boolean didAlreadyComplain)", "signatureAfterChange": " \tpublic boolean complainIfUnreachable(Statement statement, BlockScope scope, boolean didAlreadyComplain)", "diff": ["-\t\t\tboolean reported = (this.reachMode & IGNORE_UNREACH_PB) == 0;", "+\t\t\tboolean reported = this == DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e5500eabf092122076635c651c0c1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": "  \tpublic void outputClassFiles(CompilationResult unitResult)", "diff": ["-\t\t\t\t\tSystem.arraycopy(CLASS_FILE_EXTENSION, 0, relativeName, length, 6);", "+\t\t\t\t\tSystem.arraycopy(SUFFIX_class, 0, relativeName, length, 6);", "-\t\t\t\t\tSystem.arraycopy(CLASS_FILE_EXTENSION, 0, relativeName, length, 6);", "+\t\t\t\t\tSystem.arraycopy(SUFFIX_class, 0, relativeName, length, 6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17259eacb16cf429642119ed50193d0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " \tpublic void test0537b() throws JavaModelException", "signatureAfterChange": " \tpublic void test0537b() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173073a7bb1fdfa261be7ce3b295b0ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void checkClassFile(String className, String source, String expectedOutput)", "signatureAfterChange": "  \tprivate void checkClassFile(String className, String source, String expectedOutput)", "diff": ["-\t\t\t\tSystem.out.print(Util.displayString(result, 3));", "+\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\tassertTrue(\"Wrong contents\", index != -1 && expectedOutput.length() != 0);", "+\t\t\tif (index == -1) {", "+\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1730b0c22b33f2f8a79c2c608cf2ff2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleMemberAnnotation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173b37a4f3e87eeba5b913f417f8916c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void test0019() throws JavaModelException", "signatureAfterChange": " \tpublic void test0019() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1753b86e0aa01370612d3c58ad3eabb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/MethodInfo.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tint sizeInBytes()", "signatureAfterChange": "  \tint sizeInBytes()", "diff": ["-\t\treturn attributeBytes;", "+\t\treturn this.attributeBytes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177ddfc3cda0f9149ed12c38c54e286a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCompletionFindExceptions1() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindExceptions1() throws JavaModelException", "diff": ["-\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION),", "+\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "179f8037f4db274414bb20ba28725334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ArrayTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test005()", "signatureAfterChange": " public void test005()", "diff": ["+\t\te.printStackTrace();", "+\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17a803c972cacb03094d73d474a6c522", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "7e84ddff8020699085c19f62a855c62b5f709c81", "commitAfterChange": "226043f9dd3d1e9322a49e57d09a88a325e9c26a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tfinal void postReplaceChild(ASTNode oldChild, ASTNode newChild, ChildPropertyDescriptor property)", "signatureAfterChange": "  \tfinal void postReplaceChild(ASTNode oldChild, ASTNode newChild, ChildPropertyDescriptor property)", "diff": ["+\t\t} else {", "+\t\t\tthis.ast.postRemoveChildEvent(this, oldChild, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c777edd9b8e85c51bd9a8efc5dcfc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperFieldAccess.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e75f42ec37da08bd860ac1cec77071", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "a0ce71d7ab49e8ddd5d142c1d2197d4b672a20fd", "commitAfterChange": "70350f443769ef3b32d3d529ad874f676fe4cf67", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic IJavaElement createElement(final ASTNode toBeFound, CompilationUnitDeclaration parsedUnit, Openable openable)", "signatureAfterChange": " \tpublic IJavaElement createElement(final ASTNode toBeFound, CompilationUnitDeclaration parsedUnit, Openable openable)", "diff": ["+\t\t\tprivate static final long serialVersionUID = 7264372508108115988L; // backward compatible"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ebd0c0754657f115cb5c4f0f08fa03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "5d7b0ed4ccf6dc91337d9ac62f14ae585f547855", "commitAfterChange": "e706e02e84b0ab73a5fa0bab5675fe627a8c0157", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (tryBlock.statements == null) {", "+\t\tif (tryBlock.isEmptyBlock()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f667902d507210b14aa7668aa7ca1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static Object[] computeFolderNonJavaResources(JavaProject project, IContainer folder, char[][] inclusionPatterns, char[][] exclusionPatterns) throws JavaModelException", "signatureAfterChange": " static Object[] computeFolderNonJavaResources(JavaProject project, IContainer folder, char[][] inclusionPatterns, char[][] exclusionPatterns) throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17fa41f0e1b272e3690837441c285519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "c697f3d15ad101e007a8dfd5322c0448c66823ed", "commitAfterChange": "530f2338b1d761399a8feddae59a466f6f4908a5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static Binding getDirectBinding(Expression someExpression)", "signatureAfterChange": "  public static Binding getDirectBinding(Expression someExpression)", "diff": ["+\tif ((someExpression.bits & ASTNode.IgnoreNoEffectAssignCheck) != 0) {", "+\t\treturn null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17fb4159db346f3b6c1b957ec4e73e39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 359, "methodNumberAfterChange": 359, "signatureBeforeChange": " \tpublic void test0357() throws JavaModelException", "signatureAfterChange": " \tpublic void test0357() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1830be8da97c99ec7460aee8a606f4e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public int kind()", "signatureAfterChange": " public int kind()", "diff": ["-\tif (this.typeVariables != NoTypeVariables)", "+\tif (this.typeVariables != Binding.NO_TYPE_VARIABLES)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183aee13b2dc82a63aa638d28982c931", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  protected void disableWarnings()", "signatureAfterChange": "  protected void disableWarnings()", "diff": ["-\tthis.options.put(CompilerOptions.OPTION_TaskTags, \"\"); //$NON-NLS-1$", "+\tthis.options.put(CompilerOptions.OPTION_TaskTags, Util.EMPTY_STRING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18749ac1c10fc666fa0f0f99e5074433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\toutput.append(\"new \"); //$NON-NLS-1$", "+\t\tif (this.type != null) { // type null for enum constant initializations", "+\t\t\toutput.append(\"new \"); //$NON-NLS-1$", "+\t\t}", "-\t\ttype.printExpression(0, output); ", "+\t\tif (type != null) { // type null for enum constant initializations", "+\t\t\ttype.printExpression(0, output); ", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18878f548d4608fc7340b4cf40b913cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void updateFromParserState()", "signatureAfterChange": " public void updateFromParserState()", "diff": ["-\tif(this.bodyStartsAtHeaderEnd()){", "+\t// anymous type and enum constant doesn't need to be updated", "+\tif(this.bodyStartsAtHeaderEnd() && typeDeclaration.allocation == null){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188fdc203ee9fefe825e5e75e784e084", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private ICompilationUnit createWorkingCopy(String source) throws JavaModelException", "signatureAfterChange": "  private ICompilationUnit createWorkingCopy(String source) throws JavaModelException", "diff": ["-\tthis.workingCopy = getCompilationUnit(\"/P/src/p/Y.java\").getWorkingCopy(new WorkingCopyOwner(){}, null, null);", "+\tthis.workingCopy = getCompilationUnit(\"/P/src/p/Y.java\").getWorkingCopy(new WorkingCopyOwner(){}, null);", "-\treturn workingCopy;", "+\treturn this.workingCopy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a99736717d5704203a844aa558139c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "0d26cebfc5ac438f5812d87a88435e81d289bbea", "commitAfterChange": "51bd97b9a16ddeaff77cec180dcadc8f8924a66a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-\t\tif (length > 1) \tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\tif (length > 1)", "+\t\t\tReferenceBinding.sortFields(this.fields, 0, length - 1);", "-\t}\t\t", "-\tFieldBinding field = ReferenceBinding.binarySearch(fieldName, this.fields);", "-\tif (field != null) {", "-\t\treturn needResolve ? resolveTypeFor(field) : field;", "-\treturn null;", "+\tFieldBinding field = ReferenceBinding.binarySearch(fieldName, this.fields);", "+\treturn needResolve && field != null ? resolveTypeFor(field) : field;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18babbd0163b9b75cf3a14d192431cfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "82286041004c3a1c8b03ed85a8b5ba0c85e39f08", "commitAfterChange": "c3894f02481a65e7c5a6b2e211e3716b20cd9dd8", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic boolean visit(SimpleType node)", "signatureAfterChange": " \tpublic boolean visit(SimpleType node)", "diff": ["-\t\treturn true;", "+\t\tif (node.getAST().apiLevel() >= AST.JLS8) {", "+\t\t\tvisitList(node, SimpleType.ANNOTATIONS_PROPERTY, String.valueOf(' '), Util.EMPTY_STRING, String.valueOf(' '));", "+\t\t}", "+\t\tnode.getName().accept(this);", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1905c3cdb9a622fd192445e705bb7f85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["+ */\r", "+protected void executeOperation() throws JavaModelException {\r", "+\tbeginTask(Util.bind(\"classpath.settingOutputLocationProgress\"/*nonNLS*/), 2);\r", "+\tJavaProject project= ((JavaProject) getElementsToProcess()[0]);\r", "+\t\r", "+\tIPath oldLocation= project.getOutputLocation();\r", "+\tIPath newLocation= fOutputLocation;\r", "+\r", "+\t// see if this will cause any package fragments to be added\r", "+\tboolean deltaToFire= false;\r", "+\tJavaElementDelta delta = newJavaElementDelta();\r", "+\tVector added= determineAffectedPackageFragments(oldLocation);\r", "+\tEnumeration pkgs= added.elements();\r", "+\twhile (pkgs.hasMoreElements()) {\r", "+\t\tIPackageFragment frag= (IPackageFragment)pkgs.nextElement();\r", "+\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "+\t\tdelta.added(frag);\r", "+\t\tdeltaToFire = true;\r", "-\t */\r", "-\tprotected void executeOperation() throws JavaModelException {\r", "-\t\tbeginTask(\"Setting output location...\", 2);\r", "-\t\tJavaProject project = ((JavaProject) getElementsToProcess()[0]);\r", "-\r", "-\t\tIPath oldLocation = project.getOutputLocation();\r", "-\t\tIPath newLocation = fOutputLocation;\r", "-\r", "-\t\t// see if this will cause any package fragments to be added\r", "-\t\tboolean deltaToFire = false;\r", "-\t\tJavaElementDelta delta = newJavaElementDelta();\r", "-\t\tVector added = determineAffectedPackageFragments(oldLocation);\r", "-\t\tEnumeration pkgs = added.elements();\r", "-\t\twhile (pkgs.hasMoreElements()) {\r", "-\t\t\tIPackageFragment frag = (IPackageFragment) pkgs.nextElement();\r", "-\t\t\t((IPackageFragmentRoot) frag.getParent()).close();\r", "-\t\t\tdelta.added(frag);\r", "-\t\t\tdeltaToFire = true;\r", "-\t\t}\r", "-\r", "-\t\t// see if this will cause any package fragments to be removed\r", "-\t\tVector removed = determineAffectedPackageFragments(newLocation);\r", "-\t\tpkgs = removed.elements();\r", "-\t\twhile (pkgs.hasMoreElements()) {\r", "-\t\t\tIPackageFragment frag = (IPackageFragment) pkgs.nextElement();\r", "-\t\t\t((IPackageFragmentRoot) frag.getParent()).close();\r", "-\t\t\tdelta.removed(frag);\r", "-\t\t\tdeltaToFire = true;\r", "-\t\t}\r", "-\r", "-\t\tproject.setOutputLocation0(fOutputLocation);\r", "-\t\tif (deltaToFire) {\r", "-\t\t\taddDelta(delta);\r", "-\t\t}\r", "-\t\tworked(1);\r", "-\t\tproject.saveClasspath();\r", "-\t\tworked(1);\r", "-\r", "-\t\t// loose all built state - next build will be a full one\r", "-\t\tJavaModelManager.getJavaModelManager().setLastBuiltState(\r", "-\t\t\tproject.getProject(),\r", "-\t\t\tnull);\r", "-\t\tdone();\r", "+\t// see if this will cause any package fragments to be removed\r", "+\tVector removed= determineAffectedPackageFragments(newLocation);\r", "+\tpkgs= removed.elements();\r", "+\twhile (pkgs.hasMoreElements()) {\r", "+\t\tIPackageFragment frag= (IPackageFragment)pkgs.nextElement();\r", "+\t\t((IPackageFragmentRoot)frag.getParent()).close();\r", "+\t\tdelta.removed(frag);\r", "+\t\tdeltaToFire = true;\r", "+\t\r", "+\tproject.setOutputLocation0(fOutputLocation);\r", "+\tif (deltaToFire) {\r", "+\t\taddDelta(delta);\t\r", "+\tworked(1);\r", "+\tproject.saveClasspath();\r", "+\tworked(1);\r", "+\t// loose all built state - next build will be a full one\r", "+\tJavaModelManager.getJavaModelManager().setLastBuiltState(project.getProject(), null);\r", "+\tdone();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191ed90ded5b5f4ad99157fda6178daf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file, IJavaProject project)", "signatureAfterChange": " \tpublic static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file, IJavaProject project)", "diff": ["-\t\t\tIClasspathEntry[] entries = ((JavaProject)project).getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\tIClasspathEntry[] entries = ((JavaProject)project).getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1958cecb072c207890430028ed61615f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "836fef68856b7e7f6b208deb388901eeda69de4b", "commitAfterChange": "79e5d72bba2066424baa4a0d68a49d71cc4f75a5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public TypeBinding substitute(TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "diff": ["-     */", "-    public TypeBinding substitute(TypeBinding originalType) {", "-        ", "+\t */", "+\tpublic TypeBinding substitute(TypeBinding originalType) {", "+\t    ", "-    \t        TypeVariableBinding originalVariable = (TypeVariableBinding) originalType;", "-    \t        TypeVariableBinding[] variables = this.originalMethod.typeVariables;", "-    \t        int length = variables.length;", "-    \t        // check this variable can be substituted given parameterized type", "-   \t\t        if (originalVariable.rank < length && variables[originalVariable.rank] == originalVariable) {", "+\t\t        TypeVariableBinding originalVariable = (TypeVariableBinding) originalType;", "+\t\t        TypeVariableBinding[] variables = this.originalMethod.typeVariables;", "+\t\t        int length = variables.length;", "+\t\t        // check this variable can be substituted given parameterized type", "+\t\t        if (originalVariable.rank < length && variables[originalVariable.rank] == originalVariable) {", "-   \t\t        }", "-   \t\t        break;", "-       \t\t       ", "+\t\t        }", "+\t\t        if (this.declaringClass instanceof Substitution) {", "+\t\t        \treturn ((Substitution)this.declaringClass).substitute(originalType);", "+\t\t        }", "+\t\t        break;", "+\t   \t\t       ", "-    \t        ", "+\t\t        ", "-", "-", "+\t", "+\t", "-        }", "-        return originalType;", "-    }", "+\t    }", "+\t    return originalType;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196723e6d0a0b1386f19f34598a8415c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AbstractTypeDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196851974d2de97903c9ed24201a25b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "d4e9951db4a250aeef2cc7df7c2c83acc9f451d0", "commitAfterChange": "3f9f8c4e5fe9f7cc0bf6d9ea6afd5692fa501cef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t} else if (this.binding != null && this.binding.declaringClass != null && !this.binding.declaringClass.isLocalType()) {", "+\t\t\t\t} else if (this.binding.declaringClass != null && !this.binding.declaringClass.isLocalType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19714d66cc15c79c517c06238d5e5c5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "signatureAfterChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19786542a47e32a2cd9b3c9e81b86148", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " \tpublic void test0160() throws JavaModelException", "signatureAfterChange": " \tpublic void test0160() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197f068a43a44aafd991927810a6066f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testPerfProjectFindKnownSecondaryType() throws CoreException", "signatureAfterChange": " public void testPerfProjectFindKnownSecondaryType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19803719c611c63a913674f01fca2cfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 563, "signatureBeforeChange": " public void testCompletionMethodDeclaration() throws JavaModelException", "signatureAfterChange": " public void testCompletionMethodDeclaration() throws JavaModelException", "diff": ["-\t\t\"element:eqFoo    completion:public int eqFoo(int a, Object b)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:equals    completion:public boolean equals(Object obj)    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\"element:eqFoo    completion:public int eqFoo(int a, Object b)    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\"element:equals    completion:public boolean equals(Object obj)    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19b47c5b6cf1433ce7af699162efd1e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "commitAfterChange": "18c98a5a751096350077436fcf968eb63364ccb9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public char[] constantPoolName()", "signatureAfterChange": "  public char[] constantPoolName()", "diff": ["-\treturn constantPoolName;", "+\treturn this.constantPoolName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c2ca2e1889bbbddaeed6e9af18cbcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement getThenStatement()", "signatureAfterChange": "  \tpublic Statement getThenStatement()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19cd9a41f7f6ebf1a681dce0d0d0d1e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "bf66238c0456b19ef9cc6c7b644245184822c039", "commitAfterChange": "d64416e03a160e3f9cc789d37e0ee617cb7245de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope)", "diff": ["-public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ce326e87c8c5e84cde7153c3e56328", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic void test0477() throws JavaModelException", "signatureAfterChange": " \tpublic void test0477() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19da979cf94ea395602f2ec7e996957f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "a1763251def6c3b8a3b42735dab5f81d5a53deef", "commitAfterChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Javadoc parse(int start, int length)", "signatureAfterChange": " \tpublic Javadoc parse(int start, int length)", "diff": ["-\t\tparseComment(start, start+length-1);", "+\t\tif (this.checkDocComment) {", "+\t\t\tparseComment(start, start+length-1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e647734d7de05f2e4edd4fd204d7a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void computeChildren(JavaProjectElementInfo info) throws JavaModelException", "signatureAfterChange": " \tpublic void computeChildren(JavaProjectElementInfo info) throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] classpath = getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\tIClasspathEntry[] classpath = getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e8f18ffa86ac77d9a6a42f30222286", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 34, "signatureBeforeChange": " public PackageBinding getPackage()", "signatureAfterChange": "  public PackageBinding getPackage()", "diff": ["+", "-\treturn fPackage;", "+\treturn this.fPackage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f34d255c4b706e1a9c02dcc21d1068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 302, "signatureBeforeChange": "  \tpublic void test266()", "signatureAfterChange": "  \tpublic void test266()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f5d711ba436d92458cfc31b3a3efa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void test0041() throws JavaModelException", "signatureAfterChange": " \tpublic void test0041() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19fb91f8e4c69c9c0a77234417175472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String debugName()", "signatureAfterChange": " \tpublic String debugName()", "diff": ["+\t\tif (this.hasTypeAnnotations())", "+\t\t\treturn super.annotatedDebugName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a0aaca7ddb4ce4973fca3339ab9daf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AssertStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getMessage()", "signatureAfterChange": "  \tpublic Expression getMessage()", "diff": ["-\t\treturn optionalMessageExpression;", "+\t\treturn this.optionalMessageExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a12483f31f859397dacc05ddc786be0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic void test0087() throws JavaModelException", "signatureAfterChange": " \tpublic void test0087() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a216d44f440c3ef3abbd697ccba2b90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testAddExternalCompilationUnit() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddExternalCompilationUnit() throws JavaModelException, CoreException", "diff": ["-public void testAddExternalCompilationUnit() throws JavaModelException, CoreException, IOException {", "+public void testAddExternalCompilationUnit() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a279c70f9a4fb3c0a4a8355ebb4a604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test0014() throws JavaModelException", "signatureAfterChange": " \tpublic void test0014() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6a7c05f1968ea2114fdc69380dfc3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6bf187c8b77d6d266633440279a3aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test0502a() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502a() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8882d7d16dde9932432063c308a7de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0716b9527725dfa866349bcb7a45ea1d5ecddd2b", "commitAfterChange": "a544ec0a30c50b5e3390138a2a653e5667e6b6a8", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 314, "signatureBeforeChange": " public void updateLastRecordedEndPC(Scope scope, int pos)", "signatureAfterChange": " public void updateLastRecordedEndPC(Scope scope, int pos)", "diff": ["-\tif ((this.generateAttributes & ClassFileConstants.ATTR_VARS) != 0) {", "+\tif (((this.generateAttributes & ClassFileConstants.ATTR_VARS) != 0)", "+\t\t\t|| ((this.generateAttributes & ClassFileConstants.ATTR_STACK_MAP) != 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aa0b581ec27c8072bd5f6bb99df754a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/WordEntry.java", "commitBeforeChange": "86c0998ef29b474a684674fa5580f5b7a3b354ab", "commitAfterChange": "d3a75dd70755d47455161cad3e4a366e8ddf8ed2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void mapRefs(int[] mappings)", "signatureAfterChange": "\r \tpublic void mapRefs(int[] mappings)", "diff": ["-\t\t\tif (map != -1 && map != 0) {\r", "-\t\t\t\tfRefs[position]= map;\r", "-\t\t\t\tposition++;\r", "-\t\t\t}\r", "+\t\t\tif (map != -1 && map != 0)\r", "+\t\t\t\tfRefs[position++]= map;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac96508034bf8b880dd67a44bc7f563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic IndexedFile getIndexedFile(int fileNum) throws IOException", "signatureAfterChange": " \tpublic IndexedFile getIndexedFile(int fileNum)", "diff": ["-\tpublic IndexedFile getIndexedFile(int fileNum) throws IOException {", "+\tpublic IndexedFile getIndexedFile(int fileNum) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1accaa406bb8310ce69e7f64c7b2da46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void test0543() throws JavaModelException", "signatureAfterChange": " \tpublic void test0543() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ace4b8c9711e19e06e0e0de29c04fb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testBug74776() throws CoreException", "signatureAfterChange": " public void testBug74776() throws CoreException", "diff": ["-\t\towner,", "-\t\ttrue);", "+\t\towner", "+\t);", "-\t\towner,", "-\t\ttrue);", "+\t\towner", "+\t);", "-\t\towner,", "-\t\ttrue);", "+\t\towner", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af81c41a14403a3e2d94dc1615987d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testEditSuperType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testEditSuperType() throws JavaModelException, CoreException", "diff": ["-public void testEditSuperType() throws JavaModelException, CoreException, IOException {", "+public void testEditSuperType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b027b7889d18b1bf632940a0669de4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "cd6ca384f57ea36233e4caca220f18e53912b7cf", "commitAfterChange": "9ee33691ed28522cbc2852e39f3c0e623d310200", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  protected final void selector(char[] selector)", "signatureAfterChange": "  protected final void setSelector(char[] someSelector)", "diff": ["-protected final void selector(char[] selector) {", "-\tthis.selector = selector;", "+protected final void setSelector(char[] someSelector) {", "+\tthis.selector = someSelector;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b11e07559cd73451d5b0b8993b12be1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testArrayCreation2_since_8() throws Exception", "signatureAfterChange": "  \tpublic void testArrayCreation2_since_8() throws Exception", "diff": ["-\t\t\tExtraDimension dim0 = (ExtraDimension) arrayType.dimensions().get(0);", "+\t\t\tDimension dim0 = (Dimension) arrayType.dimensions().get(0);", "-\t\t\tExtraDimension dim1 = ast.newExtraDimension();", "+\t\t\tDimension dim1 = ast.newDimension();", "-\t\t\tExtraDimension dim2 = ast.newExtraDimension();", "+\t\t\tDimension dim2 = ast.newDimension();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b126a0cfb6053bf379c0f7bdf835da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test0410() throws JavaModelException", "signatureAfterChange": " \tpublic void test0410() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b174d02ec602af45a0f7bfdbbff460b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public void test057() throws JavaModelException", "signatureAfterChange": "  public void test057() throws JavaModelException", "diff": ["-\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b17948e6a85e8a2d14bdbac3c788382", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "814eecde91b8be62d34951896f84e938fa877641", "commitAfterChange": "37eb5da4a4f6c078abfb78a35ea5cd82a74ce3ff", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public Binding getTypeOrPackage(char[] name)", "signatureAfterChange": "  public Binding getTypeOrPackage(char[] name)", "diff": ["+\tif (packageBinding == null) {", "+\t\t// find the package", "+\t\tpackageBinding = findPackage(name);", "+\t}", "-\tif (typeBinding == null && packageBinding == null) {", "-\t\t// find the package", "-\t\tif ((packageBinding = findPackage(name)) != null)", "-\t\t\treturn packageBinding;", "-", "+\tif (typeBinding == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b229f47904f24d3f998690d24d169b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String output) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String output) throws CoreException", "diff": ["-\t\t\t\tnull/*no exclusion pattern*/", "+\t\t\t\tnull/*no exclusion pattern*/,", "+\t\t\t\t\"1.4\"", "+\t\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b2e178cd755ad9448bc03b9b7b170fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "76a13c2327effadafb17c5caef8ea5ede0625e62", "commitAfterChange": "3167ea059fba406308b83f9360c104eddcac1178", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@Override \tpublic DeclaredType getDeclaredType(TypeElement typeElem, TypeMirror... typeArgs)", "signatureAfterChange": " \t@Override \tpublic DeclaredType getDeclaredType(TypeElement typeElem, TypeMirror... typeArgs)", "diff": ["-\t\t// TODO Auto-generated method stub", "-\t\treturn null;", "+\t\t//TODO: create parameterized and raw types, i.e., handle typeArgs", "+\t\treturn (DeclaredType)typeElem.asType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b41290eaa85974b5950144875ec3e3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "commitAfterChange": "e62068644543b99c745f832b9263b49ff6b3d0ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasReturnNonNullDefault, boolean hasParameterNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, MethodBinding[] allInheritedMethods, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasReturnNonNullDefault, boolean hasParameterNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, MethodBinding[] allInheritedMethods, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\t\t\t\tscope.problemReporter().illegalReturnRedefinition(srcMethod, inheritedMethod, null);", "+\t\t\t\t\t\t\tscope.problemReporter().illegalReturnRedefinition(srcMethod, inheritedMethod,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.environment.getNonNullAnnotationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b49df1b93a794977ec34a5bf82f8738", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 362, "methodNumberAfterChange": 362, "signatureBeforeChange": " \tpublic void test0360() throws JavaModelException", "signatureAfterChange": " \tpublic void test0360() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1baa819ea69a42781ad3d55df6de3c43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf1f7dc370f7fb23d450406277f2a3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 207, "signatureBeforeChange": "  public void javadocDeprecatedField(FieldBinding field, ASTNode location, int modifiers)", "signatureAfterChange": "  public void javadocDeprecatedField(FieldBinding field, ASTNode location, int modifiers)", "diff": ["-\t\t\tfieldSourceStart(field, location),", "-\t\t\tfieldSourceEnd(field, location));", "+\t\t\tnodeSourceStart(field, location),", "+\t\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c100b5d6caf6d1ba7e8dd3d7e4db79b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTSyntaxErrorPropagator.java", "commitBeforeChange": "6b523d8b142e7961940f74fda0096160e5c68ef8", "commitAfterChange": "8427980767e9f9fbfd153bda7df26918914a7430", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate boolean checkAndTagAsMalformed(ASTNode node)", "signatureAfterChange": "  \tprivate boolean checkAndTagAsMalformed(ASTNode node)", "diff": ["-\t\t\t\tnode.setFlags(ASTNode.MALFORMED);", "+\t\t\t\tnode.setFlags(node.getFlags() | ASTNode.MALFORMED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c17e914bf8e341de0563d9948f31210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DOMFinder.java", "commitBeforeChange": "e58a2ebf19f99fca487e8ddd26a3dd844cc59501", "commitAfterChange": "9415df877810b51e60f6329be9775e04e6ec6476", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ASTNode search() throws JavaModelException", "signatureAfterChange": "  \tpublic ASTNode search() throws JavaModelException", "diff": ["+\t\telse if (this.element instanceof ITypeParameter)", "+\t\t\trange = ((ITypeParameter) this.element).getNameRange();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c27cbfdabf4dd6ba99490ab68d74578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "  public void testCompletionVariableInitializerInInitializer3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionVariableInitializerInInitializer3() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c2b1a5c681002fc6948297165c853e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tint startIndex()", "signatureAfterChange": " int startIndex()", "diff": ["-\t// start position in this scope - for ordering scopes vs. variables", "-\tint startIndex() {", "-\t\treturn startIndex;", "-\t}", "+// start position in this scope - for ordering scopes vs. variables", "+int startIndex() {", "+\treturn this.startIndex;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c5e2816f63a6a451818c3afa239ceba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " \tpublic void test0141() throws JavaModelException", "signatureAfterChange": " \tpublic void test0141() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c70dd39d05cf33fd19cfd8387bb3b04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "f881f7f3af831f777efbcae1d912f604e776b198", "commitAfterChange": "af8ddf1224acdd73d35eff5f86a6b2b80c9a4304", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public RegionBasedTypeHierarchy(IRegion region, IJavaProject project, ICompilationUnit[] workingCopies, IType type, boolean computeSubtypes)", "signatureAfterChange": " public RegionBasedTypeHierarchy(IRegion region, ICompilationUnit[] workingCopies, IType type, boolean computeSubtypes)", "diff": ["-public RegionBasedTypeHierarchy(IRegion region, IJavaProject project, ICompilationUnit[] workingCopies, IType type, boolean computeSubtypes) {", "+public RegionBasedTypeHierarchy(IRegion region, ICompilationUnit[] workingCopies, IType type, boolean computeSubtypes) {", "-\tthis.project = project;", "+\tIJavaElement[] elements = region.getElements();", "+\tif (elements.length > 0)", "+\t\tthis.project = elements[0].getJavaProject();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8534561c82fb92ee57e3697281745b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void test0463() throws JavaModelException", "signatureAfterChange": " \tpublic void test0463() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c88b58a0c17fc5043064cb2aecb8420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testPerfNameLookupFindUnknownType() throws CoreException", "signatureAfterChange": " public void testPerfNameLookupFindUnknownType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8c2b662b2096b002d7c077eddf98a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 360, "methodNumberAfterChange": 360, "signatureBeforeChange": " \tpublic void test0358() throws JavaModelException", "signatureAfterChange": " \tpublic void test0358() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cbb4be5cf998c1131d22b4844d8a7ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "+public FlowInfo analyseCode(", "-\t\t\t", "-\t\tif (((bits & OperatorMASK) >> OperatorSHIFT) == NOT) {", "-\t\t\treturn this.expression", "-\t\t\t\t.analyseCode(currentScope, flowContext, flowInfo)", "-\t\t\t\t.asNegatedCondition();", "-\t\t} else {", "-\t\t\treturn this.expression.analyseCode(currentScope, flowContext, flowInfo);", "-\t\t}", "+\tthis.expression.checkNPE(currentScope, flowContext, flowInfo, true);\t", "+\tif (((bits & OperatorMASK) >> OperatorSHIFT) == NOT) {", "+\t\treturn this.expression.", "+\t\t\tanalyseCode(currentScope, flowContext, flowInfo).", "+\t\t\tasNegatedCondition();", "+\t} else {", "+\t\treturn this.expression.", "+\t\t\tanalyseCode(currentScope, flowContext, flowInfo);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ccac1c2ab139a9334577b90d346bb96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a419574dd82f4f874fda50161133fcff8afd89ba", "commitAfterChange": "af8e4657dabc36f9f429517d3e6a26c71037fd72", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 330, "signatureBeforeChange": " protected void consumeToken(int type)", "signatureAfterChange": " protected void consumeToken(int type)", "diff": ["+\t\t\tpushOnIntStack(this.dimensions); // https://bugs.eclipse.org/bugs/show_bug.cgi?id=417660: Stack the dimensions, they get unstacked in consumeTypeAnnotation.", "+\t\t\tthis.dimensions = 0;", "+\t\t\t//$FALL-THROUGH$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd1bf4069ac538e16a8c72851ec4ed1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "93b912e3753e060958c1b01615e164e0662ca645", "commitAfterChange": "657485f27d724065e9659cb92f4883ba8ce60ed0", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " public static TypeBinding getConstantPoolDeclaringClass(Scope currentScope, MethodBinding codegenBinding, TypeBinding actualReceiverType, boolean isImplicitThisReceiver)", "signatureAfterChange": " public static TypeBinding getConstantPoolDeclaringClass(Scope currentScope, MethodBinding codegenBinding, TypeBinding actualReceiverType, boolean isImplicitThisReceiver)", "diff": ["+\t", "-\t\t\t\tconstantPoolDeclaringClass = actualReceiverType.erasure();", "+\t\t\t\tif (!actualReceiverType.isIntersectionCastType()) // no constant pool representation. FIXME, visibility issue not handled.", "+\t\t\t\t\tconstantPoolDeclaringClass = actualReceiverType.erasure();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ce84f989a315de6b6f322f40f5e682c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "a4cacbfb8be6276f1bbe9130c20576048fe33408", "commitAfterChange": "89164a4f2799019330cb196378d315ac3165840b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic synchronized IFolder getFolder(IPath externalFolderPath)", "signatureAfterChange": " \t \tpublic synchronized IFolder getFolder(IPath externalFolderPath)", "diff": ["-\t\treturn (IFolder) this.folders.get(externalFolderPath);", "+\t\treturn (IFolder) getFolders().get(externalFolderPath);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ceb08b034590f9e35b309f731db7e36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void test0084() throws JavaModelException", "signatureAfterChange": " \tpublic void test0084() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d2b7ce7fd4bb27017cd7599c793bb80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\treturn optionalExpression;", "+\t\treturn this.optionalExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d3301f0f8ece2ba1e553bd1510e0bb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void traverse(ASTVisitor visitor, BlockScope blockScope)", "signatureAfterChange": " public void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["+\t\t\tif (this.javadoc != null) {", "+\t\t\t\tthis.javadoc.traverse(visitor, scope);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d484ff8c439320703f4cb4306e7dd3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 387, "signatureBeforeChange": " \tpublic void test0385() throws JavaModelException", "signatureAfterChange": " \tpublic void test0385() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d485d90c5b3ea18103377d4bb66cae2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic char[] getOriginatingFileName()", "signatureAfterChange": " \tpublic char[] getOriginatingFileName()", "diff": ["-\t\treturn fileName;", "+\t\treturn this.fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d4c38f315c93061ef45f025dc6c9d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "commitAfterChange": "32a60bacedc42c981665cac45ff4a4b56eefa42c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["+\t\t} catch(JavaModelException e) {\r", "+\t\t\tUtil.log(e, \r", "+\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$\r", "+\t\t\t\t+\"/.classpath, will revert to default output location\"); //$NON-NLS-1$\r", "-\t\t\t//throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d543784ce4910ec8af71bd287719ab8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 201, "signatureBeforeChange": " \tpublic void test0571() throws JavaModelException", "signatureAfterChange": " \tpublic void test0571() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d5f110f403c9dc4c72b6236524b0993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "f50252d848b2855a0e3b480a92607978678762ce", "commitAfterChange": "c8700a3b71cbd4c7c842ba4b21536d25ce7aceed", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !receiver.isImplicitThis() || !this.codegenBinding.isStatic())", "+\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(receiver.isImplicitThis() && this.codegenBinding.isStatic()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d60ac65b02b9b057d13ae5222435db3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 404, "methodNumberAfterChange": 404, "signatureBeforeChange": " \tpublic void test385()", "signatureAfterChange": " \tpublic void test385()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da82facee194845798b42f55ace75de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " \tpublic void test0203() throws JavaModelException", "signatureAfterChange": " \tpublic void test0203() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc31708f0d74c025d6a84078361cb9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 294, "signatureBeforeChange": " \tpublic void test0292() throws JavaModelException", "signatureAfterChange": " \tpublic void test0292() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc45f750e75da0625c42b211212cbbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "\t \t \tprivate OutputsInfo outputsInfo(RootInfo rootInfo, IResource res)", "signatureAfterChange": "\t \t \tprivate OutputsInfo outputsInfo(RootInfo rootInfo, IResource res)", "diff": ["-\t\t\t\tIClasspathEntry[] classpath = proj.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\tIClasspathEntry[] classpath = proj.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dcf7dba096b3d4c02cfd3b8ee85ead2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BooleanLiteral.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic boolean booleanValue()", "signatureAfterChange": "  \tpublic boolean booleanValue()", "diff": ["-\t\treturn value;", "+\t\treturn this.value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfb70950d6d8d49dde94a2907163644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "commitAfterChange": "40ad9904e939ba54abece52421044021edd6e1c0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\tscanTypeForNullAnnotation(binaryType);", "+\t\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled", "+\t\t\t\t&& CharOperation.equals(TypeConstants.PACKAGE_INFO_NAME, binaryType.getSourceName())) ", "+\t\t{", "+\t\t\t// only for package-info.java can type-level null-annotations (i.e., @NonNullByDefault) ", "+\t\t\t// on a binary type influence the compilation", "+\t\t\tscanPackageInfoForNullDefaultAnnotation(binaryType);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1754658fffcbc9b7a72382f15434ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportDeclaration.java", "commitBeforeChange": "af2cb627e5df7006230e04fa6915ddfe16450108", "commitAfterChange": "527a4ad48d6bb6cf5631e8243d32cdefece4791a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public String getElementName()", "signatureAfterChange": " public String getElementName()", "diff": ["+\tif (this.isOnDemand)", "+\t\treturn this.name + \".*\"; //$NON-NLS-1$", "+\treturn this.name;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1cc5bb5c9bbe7d6468d5a1e0b76a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "538c0b31c8df84049489b5a401103859bb5eec8f", "commitAfterChange": "16b28f2f33ec894bf25a38e03f521a91d92e684d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeDeclaration convert(SourceType typeHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate TypeDeclaration convert(SourceType typeHandle, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t/* convert annotations */", "-\t\ttype.annotations = convertAnnotations(typeHandle);", "-", "-\t\t/* convert type parameters */", "-\t\tchar[][] typeParameterNames = typeInfo.getTypeParameterNames();", "-\t\tif (typeParameterNames.length > 0) {", "-\t\t\tint parameterCount = typeParameterNames.length;", "-\t\t\tchar[][][] typeParameterBounds = typeInfo.getTypeParameterBounds();", "-\t\t\ttype.typeParameters = new TypeParameter[parameterCount];", "-\t\t\tfor (int i = 0; i < parameterCount; i++) {", "-\t\t\t\ttype.typeParameters[i] = createTypeParameter(typeParameterNames[i], typeParameterBounds[i], start, end);", "+\t\t// convert 1.5 specific constructs only if compliance is 1.5 or above", "+\t\tif (this.has1_5Compliance) {", "+\t\t\t/* convert annotations */", "+\t\t\ttype.annotations = convertAnnotations(typeHandle);", "+\t", "+\t\t\t/* convert type parameters */", "+\t\t\tchar[][] typeParameterNames = typeInfo.getTypeParameterNames();", "+\t\t\tif (typeParameterNames.length > 0) {", "+\t\t\t\tint parameterCount = typeParameterNames.length;", "+\t\t\t\tchar[][][] typeParameterBounds = typeInfo.getTypeParameterBounds();", "+\t\t\t\ttype.typeParameters = new TypeParameter[parameterCount];", "+\t\t\t\tfor (int i = 0; i < parameterCount; i++) {", "+\t\t\t\t\ttype.typeParameters[i] = createTypeParameter(typeParameterNames[i], typeParameterBounds[i], start, end);", "+\t\t\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1ef48ab9b5ea8515763f5d1ae77588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 273, "signatureBeforeChange": " \tpublic void test0628() throws JavaModelException", "signatureAfterChange": " \tpublic void test0628() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3b610bbbf4d83bcfd4919aaaebfb3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void compile(ICompilationUnit[] sourceUnits)", "signatureAfterChange": " \tpublic void compile(ICompilationUnit[] sourceUnits)", "diff": ["+\t\t\treportProgress(Messages.compilation_beginningToCompile);", "+\t\t\t\treportProgress(Messages.bind(Messages.compilation_processing, new String(unit.getFileName())));", "+\t\t\t\t", "+\t\t\t\treportWorked(1, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e7844a14e6459004e68184a01622a7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatJavadocText.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void appendText(FormatJavadocText text)", "signatureAfterChange": " void appendText(FormatJavadocText text)", "diff": ["+\t\t\t\tif (!text.isClosingHtmlTag()) text.linesBefore = 1;", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ebb537f9edcd34aec9ea5bbff0676a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": " public ReferenceBinding[] superInterfaces()", "signatureAfterChange": " public ReferenceBinding[] superInterfaces()", "diff": ["-\treturn superInterfaces;", "+\treturn this.superInterfaces;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef50fe1cff955a1d730eddfd839b476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic List arguments()", "signatureAfterChange": "  \tpublic List arguments()", "diff": ["-\t\treturn arguments;", "+\t\treturn this.arguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1efb5246697be18551d9cba8824b1d1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "f49548d71766106245f8b2c861ede2b817c0e68f", "commitAfterChange": "63332515d07582eba4f5498d0bab26ce5646d103", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  protected void removeSecondaryTypes() throws CoreException", "signatureAfterChange": "  protected void removeSecondaryTypes() throws CoreException", "diff": ["-\t\tif (previousSourceFiles != null && previousSourceFiles.size() > 1)", "-\t\t\tthis.previousSourceFiles = null; // cannot optimize recompile case when a secondary type is deleted", "+\t\tif (previousSourceFiles != null)", "+\t\t\tthis.previousSourceFiles = null; // cannot optimize recompile case when a secondary type is deleted, see 181269"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f2ec1f44133beec5e252359447ea1a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 114, "signatureBeforeChange": " final public void goto_(Label lbl)", "signatureAfterChange": " final public void goto_(Label label)", "diff": ["-final public void goto_(Label lbl) {", "+final public void goto_(Label label) {", "-\t\tthis.goto_w(lbl);", "+\t\tthis.goto_w(label);", "+\tif (DEBUG) System.out.println(position + \"\\t\\tgoto:\"+label); //$NON-NLS-1$", "-\t\tlbl.inlineForwardReferencesFromLabelsTargeting(position);", "+\t\tlabel.inlineForwardReferencesFromLabelsTargeting(position);", "-\tlbl.branch();", "+\tlabel.branch();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f4c124273d95fea1d92edbc74f3439d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "2314c16241660b35014c2f51be7d9e9dcaef9a58", "commitAfterChange": "ceea24195947a1526b56f97d57fd4f7128a7bbd1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\t", "-\t\t// Working copies mgt", "-\t\tif (!keepWorkingCopies && workingCopies != null) {", "-\t\t\tdiscardWorkingCopies(workingCopies);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f82afcb76af92bf108d6bf68d6498e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 302, "methodNumberAfterChange": 305, "signatureBeforeChange": "  \tpublic void test269()", "signatureAfterChange": "  \tpublic void test269()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8d872f322edcfbf529549a41836bb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "5ec4215ec4f52f55dcb6e314c5f755ceba34fff6", "commitAfterChange": "5a4580d346b40161405692269366aba5f28266bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \t\r \tpublic void build(boolean computeSubtypes)", "signatureAfterChange": "\r \t\r public void build(boolean computeSubtypes)", "diff": ["-\tpublic void build(boolean computeSubtypes) {\r", "+public void build(boolean computeSubtypes) {\r", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "+\ttry {\r", "+\t\t// optimize access to zip files while building hierarchy\r", "+\t\tmanager.cacheZipFiles();\r", "+\t\t\t\t\r", "+\t} finally {\r", "+\t\tmanager.flushZipFiles();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f92216b622a2eeb1808858c6c2d3089", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "69be5036bec0741cc4d4f5a1817c4386c68c7f87", "commitAfterChange": "02ec7693122bc81c642df1242d757ff1ae2691e1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn suite(testClass(), null);", "+\treturn buildTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f96442b9962df835f95a496f8c340e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 401, "signatureBeforeChange": " protected void resetStacks()", "signatureAfterChange": " protected void resetStacks()", "diff": ["-\tif (this.scanner != null) this.scanner.currentLine = null;", "+\tif (this.scanner != null && this.scanner.currentLine != null) {", "+\t\tthis.scanner.currentLine.clear();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa6d78c075dee0e97f8df29c47870bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "signatureAfterChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "diff": ["-\t\t\t\ttypeReference = copyDims(typeReference, dimCount);", "+\t\t\t\ttypeReference = augmentTypeWithAdditionalDimensions(typeReference, dimCount, null, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc1c96134a82bc6537a66531a2e7011", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "b88938c08437e0bec96c02cfcd284b717a767f7a", "commitAfterChange": "0d3edf7cffc3f09969da7d8b0a8a14f4d3e1e956", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void pruneDeadBranches()", "signatureAfterChange": " public void pruneDeadBranches()", "diff": ["+\tpruneDeadBranches(getRootInterfaces());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd26450edbd8f1d53cb22e5e8908945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "8873795d3456fd4eb978570ebf0c2587e004407c", "commitAfterChange": "811f4b05d58ca33710b13af0352652814cf9e788", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String getFieldDoc(IField child) throws JavaModelException", "signatureAfterChange": " \tpublic String getFieldDoc(IField child) throws JavaModelException", "diff": ["-\t\t\treturn this.content.substring(range[0], range[1]);", "+\t\t\treturn String.valueOf(CharOperation.subarray(this.content, range[0], range[1]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe5078ec530dfd7a26c929540069586", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 134, "signatureBeforeChange": " final public void if_acmpeq(Label lbl)", "signatureAfterChange": " final public void if_acmpeq(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_acmpeq:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe8196ccb6b3f011cdc47cee16687a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((this.expression != null) && (this.expression.constant == NotAConstant)) {", "+\t\tif ((this.expression != null) && (this.expression.constant == Constant.NotAConstant)) {", "-\t\tif ((this.expression != null) && (this.expression.constant != NotAConstant)) {", "+\t\tif ((this.expression != null) && (this.expression.constant != Constant.NotAConstant)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1feb00f05cec45186ed18fe517960125", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\tenv.addRequiredProject(project2Path, project1Path, new IPath[] {new Path(\"**/api/\")}, new IPath[] {}, false);", "+\t\tenv.addRequiredProject(project2Path, project1Path, new IPath[] {new Path(\"**/api/\")}, new IPath[] {new Path(\"**\")}, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "200e6f85f8fad5efea1f834b223008a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void test0461() throws JavaModelException", "signatureAfterChange": " \tpublic void test0461() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201bdf85df54054ee5f49214a6717f35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic void test0116() throws JavaModelException", "signatureAfterChange": " \tpublic void test0116() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203e3759193fbf74780ceb76356e9b3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "4a3b8d7f66c815bfc252f4ffc29a63c010eff917", "commitAfterChange": "2eb63d812179e5217306b90a651b95bfe7169c81", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  protected Compiler newCompiler()", "signatureAfterChange": "  protected Compiler newCompiler()", "diff": ["-\t", "+\tnewCompiler.useSingleThread = options.useSingleThread;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208f2c90709c624eb2ce393c3269056d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public void test057() throws JavaModelException", "signatureAfterChange": "  public void test057() throws JavaModelException", "diff": ["-\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+\"25}\"", "+\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20951c31b91668ea622cf21d8f30778c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 674, "methodNumberAfterChange": 674, "signatureBeforeChange": " public void testCompletionVisibilityCheckEnabled() throws JavaModelException", "signatureAfterChange": " public void testCompletionVisibilityCheckEnabled() throws JavaModelException", "diff": ["-\t\t\"element:protectedFoo    completion:protectedFoo()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:publicFoo    completion:publicFoo()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),", "+\t\t\"element:protectedFoo    completion:protectedFoo()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\"element:publicFoo    completion:publicFoo()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "209901fb2394861d50d74a59f69a90ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic void test0474() throws JavaModelException", "signatureAfterChange": " \tpublic void test0474() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ba9c8cd7f449903f865a2786b857d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "6986736ab1982a00686efe19bc55dbc7b2788581", "commitAfterChange": "495121f56ccde73236a11b38d82ccd002894a517", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic static String[] getTrimmedSimpleNames(String name)", "signatureAfterChange": " \tpublic static String[] getTrimmedSimpleNames(String name)", "diff": ["-\t\tString[] result = splitOn(Signature.C_DOT, name, 0, name.length());", "+\t\tString[] result = Signature.getSimpleNames(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f627fd5a054ec1cdde809505ff0905", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": " \tpublic void test0177() throws JavaModelException", "signatureAfterChange": " \tpublic void test0177() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210b9a6ee99b9e3b8bb35991b5f13c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "3f672a889da9576a1f752d09fa6547f1612582d8", "commitAfterChange": "ff17ef4e82e5c55998a1e083ebfb56b191d906c9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "signatureAfterChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "diff": ["-\t\t\t\t\t\"userEditable\", //$NON-NLS-1$ //TODO: (philippe) replace with once available: IMarker.USER_EDITABLE,", "+\t\t\t\t\tIMarker.USER_EDITABLE, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210c6ff0dec8b19abc7a6e221b2ddd74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test016()", "signatureAfterChange": " public void test016()", "diff": ["+\tif(this.complianceLevel.compareTo(COMPLIANCE_1_5) > 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "212570039afd76e2549e4816e8d5a64a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "commitAfterChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void checkComment()", "signatureAfterChange": "  public void checkComment()", "diff": ["-\t\t\tif (this.javadocParser.notNull) {", "-\t\t\t\tcheckAndSetModifiers(ExtraCompilerModifiers.AccNotNull);", "-\t\t\t}", "-\t\t\tif (this.javadocParser.nullable) { // no else on purpose", "-\t\t\t\tcheckAndSetModifiers(ExtraCompilerModifiers.AccNullable);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213b2a7586d47ffab9d85406aed0a7d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ThrowStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2172930234af1a0caf9426dcd84a0172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Initializer.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Block getBody()", "signatureAfterChange": "  \tpublic Block getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21975b70d0e352db9ca1b5d83aca6e61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void test0079() throws JavaModelException", "signatureAfterChange": " \tpublic void test0079() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21a67795b0b61d8d95894196692a954a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "6959c7be7767b62f5fa53e20bd2cfda242ece473", "commitAfterChange": "a13c822f6e072c300a8032fb994879857c034ca1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tthis.position.checkNPEbyUnboxing(currentScope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b92267ba36f142e08968e3c9716cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r protected void pushNotInInitializer()", "signatureAfterChange": "\r protected void pushNotInInitializer()", "diff": ["-\t\tthis.inInitializerStack[++this.inInitializerPtr] = false;\r", "+\t\tthis.inFieldInitializationStack[++this.inFieldInitializationPtr] = false;\r", "-\t\tint oldStackLength = this.inInitializerStack.length;\r", "-\t\tSystem.arraycopy(this.inInitializerStack , 0, (this.inInitializerStack = new boolean[oldStackLength + StackIncrement]), 0, oldStackLength);\r", "-\t\tthis.inInitializerStack[this.inInitializerPtr] = false;\r", "+\t\tint oldStackLength = this.inFieldInitializationStack.length;\r", "+\t\tSystem.arraycopy(this.inFieldInitializationStack , 0, (this.inFieldInitializationStack = new boolean[oldStackLength + StackIncrement]), 0, oldStackLength);\r", "+\t\tthis.inFieldInitializationStack[this.inFieldInitializationPtr] = false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21bb2b76017d4128e0095540926b137c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tParser parser, \t\tIProblemRequestor problemRequestor, \t\tIProblemFactory problemFactory, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tIProblemRequestor problemRequestor, \t\tIProblemFactory problemFactory, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["+\t\tWorkingCopyOwner workingCopyOwner,", "-\t\tIJavaProject project = unitElement.getJavaProject();", "+\t\tJavaProject project = (JavaProject) unitElement.getJavaProject();", "-\t\t\t\tgetNameEnvironment(unitElement),", "+\t\t\t\tproject.newSearchableNameEnvironment(workingCopyOwner),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21be70f556051d7bea9763b7f1eb5955", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test0017() throws JavaModelException", "signatureAfterChange": " \tpublic void test0017() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c0c8b404b7e910d2841cfea401cf99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SynchronizedStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Block getBody()", "signatureAfterChange": "  \tpublic Block getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21db6d7b6a93dcd3d2d885880d9e6127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " \tpublic void test0547() throws JavaModelException", "signatureAfterChange": " \tpublic void test0547() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e27875319095c9bd1f3968511e37f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "8739fac6b0362a32fbe52c714ff661e202a84e1e", "commitAfterChange": "a383b8a74cd6aa6df7e09b603786c84e4f93bb28", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int ttlForFieldCheck)", "diff": ["-public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "-\tif (super.checkNPE(scope, flowContext, flowInfo)) {", "+public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int ttlForFieldCheck) {", "+\tif (super.checkNPE(scope, flowContext, flowInfo, ttlForFieldCheck)) {", "-\t\treturn checkNullableFieldDereference(scope, fieldBinding, position);", "+\t\treturn checkNullableFieldDereference(scope, fieldBinding, position, flowContext, ttlForFieldCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21fdd6cbe65368e2590bb6203d9f0ef1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void test0051() throws JavaModelException", "signatureAfterChange": " \tpublic void test0051() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "222456af71b29b99fc413fec6706b293", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "2414c381d9fba720a3b5b2375f506f068b4616ba", "commitAfterChange": "888d5cb313019c8c62b5cbd42b139e8dc64793b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public SourceElementParser getSourceElementParser(IJavaProject project, ISourceElementRequestor requestor)", "signatureAfterChange": " public SourceElementParser getSourceElementParser(IJavaProject project, ISourceElementRequestor requestor)", "diff": ["-\tSourceElementParser parser = new SourceElementParser(", "+\tSourceElementParser parser = new IndexingParser("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2228a31a33407f04a8234a059d34289f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tprivate TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "signatureAfterChange": " \tprivate TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "diff": ["-\t\t\t\t\t\tmatch = otherRefType.findSuperTypeErasingTo((ReferenceBinding)superType);", "+\t\t\t\t\t\tmatch = otherRefType.findSuperTypeWithSameErasure(superType);", "-\t\t\t\t\tif (superType.findSuperTypeErasingTo(otherType) != null) {", "+\t\t\t\t\tif (superType.findSuperTypeWithSameErasure(otherType) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2234c6cbb23327ee337d974849eb918c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "0fd7bcdb005094715cdcc373480b25fcb10e479e", "commitAfterChange": "de7b5e4f3804fc3c74944c1f086365a68d79c64e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void updateMatch(ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, boolean patternHasTypeParameters, int depth, MatchLocator locator)", "signatureAfterChange": " protected void updateMatch(ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, boolean patternHasTypeParameters, int depth, MatchLocator locator)", "diff": ["-\tboolean endPattern = depth>=patternTypeArguments.length;", "-\tchar[][] patternArguments = (patternTypeArguments==null || endPattern) ? null : patternTypeArguments[depth];", "+\tboolean endPattern = patternTypeArguments==null  ? true  : depth>=patternTypeArguments.length;", "+\tchar[][] patternArguments =  endPattern ? null : patternTypeArguments[depth];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2248fe8f65b1712041a7a617dfde4d14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InternalASTRewrite.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options)", "signatureAfterChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options)", "diff": ["-\t\t\tASTRewriteAnalyzer visitor = new ASTRewriteAnalyzer(content, lineInfo, lineDelim, result, this.eventStore, this.nodeStore, comments, options, xsrComputer);", "+\t\t\tASTRewriteAnalyzer visitor = new ASTRewriteAnalyzer(content, lineInfo, lineDelim, result, this.eventStore, this.nodeStore, comments, options, xsrComputer, (RecoveryScannerData)rootNode.getStatementsRecoveryData());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2252d66d006ed31595115f2e5047e7d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public FieldBinding[] fields()", "signatureAfterChange": " public FieldBinding[] fields()", "diff": ["-\t\t\t\tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\t\t\tReferenceBinding.sortFields(this.fields, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2271d4387903017a830a3721383e8cf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 367, "signatureBeforeChange": " \tpublic void test0365() throws JavaModelException", "signatureAfterChange": " \tpublic void test0365() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2278d469b730e6e565624d42d182c5a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/StringLiteral.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic String getEscapedValue()", "signatureAfterChange": "  \tpublic String getEscapedValue()", "diff": ["-\t\treturn escapedValue;", "+\t\treturn this.escapedValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227c7fd8145012d5bee4316e7c48ee97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "ae21fbfba4168c94ed6cac704b2407f6ca281cab", "commitAfterChange": "502428a56ac1c33f406a983668ed7a632d288c0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public char[] getIndexKey()", "signatureAfterChange": " public char[] getIndexKey()", "diff": ["-\t\treturn encodeIndexKey(this.segments[this.currentSegment], getMatchMode());", "+\t\treturn this.segments[this.currentSegment];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2286f481d008d727cb988a000acfba28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePair.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getValue()", "signatureAfterChange": "  \tpublic Expression getValue()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cf6e930a23bac4d67af44749e3ab83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void test048() throws JavaModelException", "signatureAfterChange": "  public void test048() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22e7fe9444a461178105cc2e7732c805", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": " \tpublic void test385()", "signatureAfterChange": " \tpublic void test385()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ec39ecc69790029c26d15dd98d064f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "711b058ad258108d954d1031c3c87762dffdda23", "commitAfterChange": "5eece7c04b1379f0cb7f3a0d3b27f08d288e8d6d", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "diff": ["-\t\tif (wasACase && this.preferences.indent_switchstatements_compare_to_cases) {", "+\t\tif ((wasACase || wasAStatement) && this.preferences.indent_switchstatements_compare_to_cases) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f493e669cc7ae794ba952333c724a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e0b93cd9388950bd51950e07247cdecc9e3263df", "commitAfterChange": "265ec26aa6d2cbdb7df581eef4b2a30df572f94f", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 366, "signatureBeforeChange": " \tpublic void test348()", "signatureAfterChange": " \tpublic void test348()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2312254a0c04a6a78ba6df730219a93a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ICompilationUnit getCompilationUnit()", "signatureAfterChange": " \tpublic ICompilationUnit getCompilationUnit()", "diff": ["-\t\treturn compilationUnit;", "+\t\treturn this.compilationUnit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2366fe2a8b5cbc40a426a8c9621178c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "451dfca83862105681163e8101832560ac0259eb", "commitAfterChange": "b47e3abf1a62dfe39d4027bf5efb533233f9d41e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void addImport(String fullTypeName, boolean isStatic)", "signatureAfterChange": "  \tpublic void addImport(String fullTypeName, boolean isStatic)", "diff": ["-\t\tString typeContainerName= getQualifier(fullTypeName, isStatic);", "+\t\tString typeContainerName= Signature.getQualifier(fullTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23678ee68577d420204fab0865929d53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CastExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a557705cf7e7f7c4ab987665c70728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": " \tpublic void test0276() throws JavaModelException", "signatureAfterChange": " \tpublic void test0276() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a8694375bcbe3b81b9ad538c7486c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testRemovePackage() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemovePackage() throws JavaModelException, CoreException", "diff": ["-public void testRemovePackage() throws JavaModelException, CoreException, IOException {", "+public void testRemovePackage() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b8695b067d12ede515b745b44af62f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "   \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding positionType = position.resolveTypeExpecting(scope, IntBinding);", "+\t\tTypeBinding positionType = position.resolveTypeExpecting(scope, TypeBinding.INT);", "-\t\t\tposition.computeConversion(scope, IntBinding, positionType);", "+\t\t\tposition.computeConversion(scope, TypeBinding.INT, positionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e2c9fbb3928af57cbb0652469d08e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "12a6e6b3ea4cf17ceba63d178b2d704d35d7d009", "commitAfterChange": "70bffaae7d718f0693a6e2251a8c4488fcae8b38", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tif ((deltaBuilder.delta != null) && (deltaBuilder.delta.getAffectedChildren().length > 0)) {", "+\t\t\t\tif (deltaBuilder.delta != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23ecfdca8fd48fc1470637f604840137", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void test0502f() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502f() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23f07f7ee970faa0625da171a6d953ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": " public ReferenceBinding superclass()", "signatureAfterChange": " public ReferenceBinding superclass()", "diff": ["-\treturn superclass;", "+\treturn this.superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24450ef7de2d9f15f89f640eb3fbdbef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \t \tpublic AssistParser getParser()", "signatureAfterChange": " \t \tpublic AssistParser getParser()", "diff": ["-\t\treturn parser;", "+\t\treturn this.parser;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24677ac5dd000cfcd68196a5471840a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "d403fee10cf1886b380b6ecbf370adade993a35a", "commitAfterChange": "01d53eeea22960a2cb18e011e021cabf057355e4", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tvoid basicMatch(ASTNode node)", "signatureAfterChange": " \tvoid basicMatch(ASTNode node)", "diff": ["-\t\tassertTrue(m1.receiver == node);", "-\t\tassertTrue(m1.other == o1);", "+\t\tassertTrue(m1.receiverNode == node);", "+\t\tassertTrue(m1.otherNode == o1);", "-\t\tassertTrue(m1.receiver == node);", "-\t\tassertTrue(m1.other == o1);", "+\t\tassertTrue(m1.receiverNode == node);", "+\t\tassertTrue(m1.otherNode == o1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2485f73a266a871f7ff1fe5aece96cf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testUnderlyingResourceNonExistingType() throws CoreException", "signatureAfterChange": " public void testUnderlyingResourceNonExistingType() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tthis.createFile(", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tcreateFile(", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24973734eb036332c76c73def1231f52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 298, "methodNumberAfterChange": 298, "signatureBeforeChange": " \tpublic void test0276() throws JavaModelException", "signatureAfterChange": " \tpublic void test0276() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a3f8357a9ac860c79df1370f8f8925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isOptimizedTrueAssertion = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isOptimizedFalseAssertion = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isOptimizedTrueAssertion = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isOptimizedFalseAssertion = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24cbd0bf6ea98d4dd7bc3f8b654a00ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "  public void testCompletionVariableInitializerInMethod3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionVariableInitializerInMethod3() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24fb2298b74fbba54ea88c8c0019451c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic List types()", "signatureAfterChange": "  \tpublic List types()", "diff": ["-\t\treturn types;", "+\t\treturn this.types;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24fdd6e5579ed9dea1e2aef04330c6a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test030()", "signatureAfterChange": " public void test030()", "diff": ["-\t\ttarget1_2);  // custom options", "+\t\ttarget1_2,  // custom options", "+\t\tnull/*no custom requestor*/);", "-\t\tnull);  // custom options", "+\t\tnull,  // custom options", "+\t\tnull/*no custom requestor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250886d091fb78db1fcaaf0833ee1bf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "350da3a6da35578cb4088fcd48530f3ade881af3", "commitAfterChange": "8b5193228bb71f374ca42b722cd59dc5947baffc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected static boolean areSimilarMethods( \tString name1, String[] params1,  \tString name2, String[] params2, \tString[] simpleNames1)", "signatureAfterChange": " protected static boolean areSimilarMethods( \tString name1, String[] params1,  \tString name2, String[] params2, \tString[] simpleNames1)", "diff": ["-\t\t\t\t\t\tSignature.getSimpleName(Signature.toString(params1[i])) :", "+\t\t\t\t\t\tSignature.getSimpleName(Signature.toString(Signature.getTypeErasure(params1[i]))) :", "-\t\t\t\tString simpleName2 = Signature.getSimpleName(Signature.toString(params2[i]));", "+\t\t\t\tString simpleName2 = Signature.getSimpleName(Signature.toString(Signature.getTypeErasure(params2[i])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250e47410cdbb15e205edc9d5d679069", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void test056()", "signatureAfterChange": " \tpublic void test056()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2543788512d2ff2c8d2af50f9e7f94c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 271, "methodNumberAfterChange": 271, "signatureBeforeChange": " \tpublic void test0269() throws JavaModelException", "signatureAfterChange": " \tpublic void test0269() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255eb3f37f3c32ecaea8011a46628616", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public final void checkcast(TypeBinding typeBinding)", "signatureAfterChange": " public final void checkcast(TypeBinding typeBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tcheckcast:\"+typeBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "256587f2fbe61cd3d1fd8248f45420d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "0bb8dba3efca9a5500b67c37770710de86a06c2e", "commitAfterChange": "6726a5eb1723cea7dfdb4d1905ca215391f75d8e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["+\t\t\t\tsourceType.typeBits |= superclass.typeBits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2585f702b282dfbbd0117be81675eac0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 213, "signatureBeforeChange": " final public void ldc(int constant)", "signatureAfterChange": " final public void ldc(int constant)", "diff": ["-\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$", "+\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc_w:\"+constant); //$NON-NLS-1$", "+\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25adfb928652283fdcc24a6da6441e19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public static String getQualifier(String name)", "signatureAfterChange": "\r public static String getQualifier(String name)", "diff": ["-\tint lastDot = name.lastIndexOf(C_DOT);\r", "-\tif (lastDot == -1) {\r", "-\t\treturn \"\"; //$NON-NLS-1$\r", "+\treturn new String(getQualifier(name.toCharArray()));\r", "+}\r", "-\treturn name.substring(0, lastDot);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25b5ac903080cba80037259b794f71b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void test0076() throws JavaModelException", "signatureAfterChange": " \tpublic void test0076() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c7b8868300b018813c688f55eced94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " public TypeBinding unannotated()", "signatureAfterChange": " public TypeBinding unannotated()", "diff": ["-\tif (this.nullTagBitsPerDimension == null)", "-\t\treturn this;", "-\treturn this.environment.createArrayType(this.leafComponentType, this.dimensions);", "+\treturn this.hasTypeAnnotations() ? this.environment.getUnannotatedType(this) : this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c8dce3de6b97d2b24ede8d6388b8e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingJavadocTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void testTagRemove2() throws Exception", "signatureAfterChange": "  \tpublic void testTagRemove2() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsRemoved((ASTNode) tags.get(0), null);", "+\t\t\trewrite.remove((ASTNode) tags.get(0), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d615e245cbaa012311d67fd110187e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] computePackageFragmentRoots(boolean retrieveExportedRoots)", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] computePackageFragmentRoots(boolean retrieveExportedRoots)", "diff": ["-\t\tcomputePackageFragmentRoots(accumulatedRoots, new ObjectSet(5), true, true, retrieveExportedRoots);\r", "+\t\tcomputePackageFragmentRoots(accumulatedRoots, new HashSet(5), true, true, retrieveExportedRoots);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ea7ee5d3889eec751729a5a5ccbc72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void test0428() throws JavaModelException", "signatureAfterChange": " \tpublic void test0428() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26242a77bf9976955769a96c1ecafd7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "d2fd0a411735601d08912dc407d669f4cabc6555", "commitAfterChange": "6e5a548d86606bf19201f8e25ff7972af2431caf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\t\t\tif (methodName.length == 8 && methodName[0] == '<') {", "+\t\t\t\tif (methodName.length == 8 && methodName[0] == Util.C_GENERIC_START) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2625e0be8b29924fc20ca9383d999a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "25db4437755d86b5a9de1f87ebda066758a2c340", "commitAfterChange": "982919179fe30a93d64a2d590bdb7ee6c337517e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void resolve()", "signatureAfterChange": "  \tpublic void resolve()", "diff": ["-\t\t\tif (this.currentPackage.annotations != null", "-\t\t\t\t\t&& !CharOperation.endsWith(getFileName(), PACKAGE_INFO_FILE_NAME)) {", "-\t\t\t\tscope.problemReporter().invalidFileNameForPackageAnnotations(this.currentPackage.annotations[0]);", "+\t\t\tif (this.currentPackage.annotations != null) {", "+\t\t\t\tif (!CharOperation.endsWith(getFileName(), PACKAGE_INFO_FILE_NAME)) {", "+\t\t\t\t\tscope.problemReporter().invalidFileNameForPackageAnnotations(this.currentPackage.annotations[0]);", "+\t\t\t\t}", "+\t\t\t\t// (TODO) resolve annotations"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262dc5d5f8b0a96d59b42b0604584f21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \tpublic void test0526() throws JavaModelException", "signatureAfterChange": " \tpublic void test0526() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26393c71217ee0f254ed93d2347013ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": " \tpublic void test0329() throws JavaModelException", "signatureAfterChange": " \tpublic void test0329() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265de5bab7e73aecbae5080c37408b63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "a41e619c58860e4fb0ad103984917e455aa47d4f", "commitAfterChange": "6166acc1a72eef4415ab90fa4d71205848f659db", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void testMethodDeclaration04() throws CoreException", "signatureAfterChange": " public void testMethodDeclaration04a() throws CoreException", "diff": ["+ */", "+public void testMethodDeclaration04a() throws CoreException { // was testMethodDeclarationInHierarchyScope1", "+\t\t\"src/p/X.java String p.X$Inner.foo() [foo]\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26714e98228af99a865bdb04e70c2a19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "58c4c99d95f495c1408134b2cc53ce1127ec5a07", "commitAfterChange": "47b2ad4e45496e4cc969a74f5f423050b55a0fd0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate static FakedTrackingVariable pick(FakedTrackingVariable tracker1, FakedTrackingVariable tracker2, BlockScope scope)", "signatureAfterChange": "  \tprivate static FakedTrackingVariable pick(FakedTrackingVariable tracker1, FakedTrackingVariable tracker2, BlockScope scope)", "diff": ["-\t\tscope.removeTrackingVar(tracker2);", "+\t\ttracker2.withdraw();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269881d91054edd6b41237d36a3bd4a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 378, "methodNumberAfterChange": 378, "signatureBeforeChange": " \tpublic void test0376() throws JavaModelException", "signatureAfterChange": " \tpublic void test0376() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b2ecf12cb122efd86fd2c17e55eac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "8538fc408d08fb084c1462f6b94d5674f6422ccd", "commitAfterChange": "393bdec9ec7581654b4aa4ee60edc770ef37cb11", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": " public int matchLevel(AstNode node, boolean resolve)", "diff": ["-\t\treturn this.matchLevel((TypeReference)node, resolve);", "+\t\treturn matchLevel((TypeReference)node, resolve);", "-\t\treturn this.matchLevel((NameReference)node, resolve);", "+\t\treturn matchLevel((NameReference)node, resolve);", "-\t\treturn this.matchLevel((ImportReference)node, resolve);", "+\t\treturn matchLevel((ImportReference)node, resolve);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c729a86ddf0d98ec7ccb8754130a51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void test0072() throws JavaModelException", "signatureAfterChange": " \tpublic void test0072() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c8ee899ea7d5ad19c11d3c4bec01f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 231, "signatureBeforeChange": "  \tpublic void test194()", "signatureAfterChange": "  \tpublic void test194()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2723b6800d9092d5ed75161860b8c169", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void test0030() throws JavaModelException", "signatureAfterChange": " \tpublic void test0030() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275c29926047df95711fa201f91e77c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean isWarning()", "signatureAfterChange": " \tpublic boolean isWarning()", "diff": ["-\t\treturn (severity & ProblemSeverities.Error) == 0;", "+\t\treturn (this.severity & ProblemSeverities.Error) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2794b20ceb5861da6fa9feff0cc51307", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void test042()", "signatureAfterChange": " public void test042()", "diff": ["-\t\t\"    18  istore_1 [i]\\n\" + ", "+\t\t\"    18  istore_1\\n\" + ", "-\t\t\"        [pc: 0, pc: 28] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\"        [pc: 19, pc: 27] local: i index: 1 type: int\\n\";", "+\t\t\"        [pc: 0, pc: 28] local: args index: 0 type: java.lang.String[]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a03d8f9f950233e9e64dfbae4a7965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "fcebf68426f9aa792d1f3380803ca144f79b6c3c", "commitAfterChange": "4da5a9a150c1a47a773a4fd9e96abe9171b5562d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants)", "diff": ["+\t\tthis.options.parseLiteralExpressionsAsConstants = parseLiteralExpressionsAsConstants;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27afe5c120876cefaa84275333b84b73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ContinueStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27be4e9a8980d5a500c39a2995389c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic void test0235() throws JavaModelException", "signatureAfterChange": " \tpublic void test0235() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27cbb8c058dd781bf45824607afa0646", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic Expression getLeftOperand()", "signatureAfterChange": "  \tpublic Expression getLeftOperand()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d881d144d706d71b8a9ec401e57f6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 303, "methodNumberAfterChange": 303, "signatureBeforeChange": " \tpublic void test0301() throws JavaModelException", "signatureAfterChange": " \tpublic void test0301() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e7c182c1fea1165f803f666115ffb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": " \tpublic void test0267() throws JavaModelException", "signatureAfterChange": " \tpublic void test0267() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27f75abc5ca457f8cd31080117aa1835", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "3585d9ff750517d96f094a12a4fb99e502636c59", "commitAfterChange": "59449ee231c1cab95a8f7ec24b57c991cddf580d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public String getSignature() throws JavaModelException", "signatureAfterChange": " public String getSignature() throws JavaModelException", "diff": ["-\treturn info.getSignature();", "+\treturn Signature.createMethodSignature(fParameterTypes, Signature.createTypeSignature(info.getReturnTypeName(), false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283dd83f7193a04b8f7952be4e06cf96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28599b169a31863a0dffed95f56b9ff5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic IProject getProject()", "signatureAfterChange": " \tpublic IProject getProject()", "diff": ["-\t\treturn fProject;", "+\t\treturn this.fProject;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2862e05e42bea8df8bd042d9647787ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": " \t\t \t\tprotected int getStartOfNextNode(int nextIndex, int defaultPos)", "signatureAfterChange": " \t\t \t\tprotected int getStartOfNextNode(int nextIndex, int defaultPos)", "diff": ["-\t\t\tfor (int i= nextIndex; i < fList.length; i++) {", "-\t\t\t\tRewriteEvent elem= fList[i];", "+\t\t\tfor (int i= nextIndex; i < this.list.length; i++) {", "+\t\t\t\tRewriteEvent elem= this.list[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2885784dcb8be2d26907ed7efe57cd60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public IType createType(String content, IJavaElement sibling, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r public IType createType(String content, IJavaElement sibling, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tString source = \"\"; //$NON-NLS-1$\r", "+\t\tString source = \"\"/*nonNLS*/;\r", "-\t\t\tsource = \"package \" + pkg.getElementName() + \";\"  + JavaModelManager.LINE_SEPARATOR + JavaModelManager.LINE_SEPARATOR; //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\tsource = \"package \"/*nonNLS*/ + pkg.getElementName() + \";\"/*nonNLS*/ + JavaModelManager.LINE_SEPARATOR;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28966b09f2f19a42021c3dbfd14c90df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 289, "signatureBeforeChange": "  \tpublic void test253()", "signatureAfterChange": "  \tpublic void test253()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2896908bf6609d4a3e63127d0c888b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void testSingleWildcardExtendsStringPattern03() throws CoreException", "signatureAfterChange": " \tpublic void testSingleWildcardExtendsStringPattern03() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.gen_run [GenericMember<? super RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_wld [GenericMember<?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_run [GenericMember<? super RuntimeException>] EXACT_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R2.java g1.t.s.ref.R2.qgen_wld [GenericMember<?>] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b15885449a26142d8474cd8b1dc61d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "358c8ad5d1f6fc4259e2533d344edaa56ee91576", "commitAfterChange": "bacb326e0b85b1345e61924b19a74bbaa4f91706", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\tUSE_LOCAL_ELEMENTS/*report local declarations*/);", "+\t\ttrue/*report local declarations*/);", "-\t\t}, USE_LOCAL_ELEMENTS /*full parse if use local elements only*/);", "+\t\t}, true /*full parse to find local elements*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c3771230d15dfb2ee003dfd6926ad2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": " private void indexClassFile(byte[] contents, char[] documentName)", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-}", "-private void indexClassFile(byte[] contents, char[] documentName) /* throws IOException */ {", "-\ttry {", "-\t\tClassFileReader reader = new ClassFileReader(contents, documentName);", "-", "-\t\t// first add type references", "-\t\tchar[] className = replace('/', '.', reader.getName()); // looks like java/lang/String", "-\t\t// need to extract the package name and the simple name", "-\t\tint packageNameIndex = CharOperation.lastIndexOf('.', className);", "-\t\tchar[] packageName = null;", "-\t\tchar[] name = null;", "-\t\tif (packageNameIndex >= 0) {", "-\t\t\tpackageName = CharOperation.subarray(className, 0, packageNameIndex);", "-\t\t\tname = CharOperation.subarray(className, packageNameIndex + 1, className.length);", "-\t\t} else {", "-\t\t\tname = className;", "-\t\t}", "-\t\tchar[] enclosingTypeName = null;", "-\t\tif (reader.isNestedType()) {", "-\t\t\tif (reader.isAnonymous()) {", "-\t\t\t\tname = CharOperation.NO_CHAR;", "-\t\t\t} else {", "-\t\t\t\tname = reader.getInnerSourceName();", "-\t\t\tif (reader.isLocal() || reader.isAnonymous()) {", "-\t\t\t\tenclosingTypeName = ONE_ZERO;", "-\t\t\t} else {", "-\t\t\t\tchar[] fullEnclosingName = reader.getEnclosingTypeName();", "-\t\t\t\tint nameLength = fullEnclosingName.length - packageNameIndex - 1;", "-\t\t\t\tif (nameLength <= 0) {", "-\t\t\t\t\t// See PR 1GIR345: ITPJCORE:ALL - Indexer: NegativeArraySizeException", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\tenclosingTypeName = new char[nameLength]; ", "-\t\t\t\tSystem.arraycopy(fullEnclosingName, packageNameIndex + 1, enclosingTypeName, 0, nameLength);", "-\t\t// eliminate invalid innerclasses (1G4KCF7)", "-\t\tif (name == null) return;", "-\t\t", "-\t\tchar[][] superinterfaces = replace('/', '.', reader.getInterfaceNames());", "-\t\tchar[][] enclosingTypeNames = enclosingTypeName == null ? null : new char[][] {enclosingTypeName};", "-\t\tif (reader.isInterface()) {", "-\t\t\taddInterfaceDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superinterfaces);", "-\t\t} else {", "-\t\t\tchar[] superclass = replace('/', '.', reader.getSuperclassName());", "-\t\t\taddClassDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superclass, superinterfaces);", "-", "-\t\t// first reference all methods declarations and field declarations", "-\t\tMethodInfo[] methods = (MethodInfo[]) reader.getMethods();", "-\t\tif (methods != null) {", "-\t\t\tfor (int i = 0, max = methods.length; i < max; i++) {", "-\t\t\t\tMethodInfo method = methods[i];", "-\t\t\t\tchar[] descriptor = method.getMethodDescriptor();", "-\t\t\t\tchar[][] parameterTypes = decodeParameterTypes(descriptor);", "-\t\t\t\tchar[] returnType = decodeReturnType(descriptor);", "-\t\t\t\tchar[][] exceptionTypes = replace('/', '.', method.getExceptionTypeNames());", "-\t\t\t\tif (method.isConstructor()) {", "-\t\t\t\t\taddConstructorDeclaration(className, parameterTypes, exceptionTypes);", "+\t}", "+\tpublic void indexDocument() {", "+\t\ttry {", "+\t\t\tbyte[] contents = this.document.getByteContents();", "+\t\t\tClassFileReader reader = new ClassFileReader(contents, this.document.getPath().toCharArray());", "+\t", "+\t\t\t// first add type references", "+\t\t\tchar[] className = replace('/', '.', reader.getName()); // looks like java/lang/String", "+\t\t\t// need to extract the package name and the simple name", "+\t\t\tint packageNameIndex = CharOperation.lastIndexOf('.', className);", "+\t\t\tchar[] packageName = null;", "+\t\t\tchar[] name = null;", "+\t\t\tif (packageNameIndex >= 0) {", "+\t\t\t\tpackageName = CharOperation.subarray(className, 0, packageNameIndex);", "+\t\t\t\tname = CharOperation.subarray(className, packageNameIndex + 1, className.length);", "+\t\t\t} else {", "+\t\t\t\tpackageName = CharOperation.NO_CHAR;", "+\t\t\t\tname = className;", "+\t\t\t}", "+\t\t\tchar[] enclosingTypeName = null;", "+\t\t\tif (reader.isNestedType()) {", "+\t\t\t\tif (reader.isAnonymous()) {", "+\t\t\t\t\tname = CharOperation.NO_CHAR;", "-\t\t\t\t\tif (!method.isClinit()) {", "-\t\t\t\t\t\taddMethodDeclaration(method.getSelector(), parameterTypes, returnType, exceptionTypes);", "+\t\t\t\t\tname = reader.getInnerSourceName();", "+\t\t\t\t}", "+\t\t\t\tif (reader.isLocal() || reader.isAnonymous()) {", "+\t\t\t\t\tenclosingTypeName = ONE_ZERO;", "+\t\t\t\t} else {", "+\t\t\t\t\tchar[] fullEnclosingName = reader.getEnclosingTypeName();", "+\t\t\t\t\tint nameLength = fullEnclosingName.length - packageNameIndex - 1;", "+\t\t\t\t\tif (nameLength <= 0) {", "+\t\t\t\t\t\t// See PR 1GIR345: ITPJCORE:ALL - Indexer: NegativeArraySizeException", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t\tenclosingTypeName = new char[nameLength]; ", "+\t\t\t\t\tSystem.arraycopy(fullEnclosingName, packageNameIndex + 1, enclosingTypeName, 0, nameLength);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t// eliminate invalid innerclasses (1G4KCF7)", "+\t\t\tif (name == null) return;", "+\t\t\t", "+\t\t\tchar[][] superinterfaces = replace('/', '.', reader.getInterfaceNames());", "+\t\t\tchar[][] enclosingTypeNames = enclosingTypeName == null ? null : new char[][] {enclosingTypeName};", "+\t\t\tif (reader.isInterface()) {", "+\t\t\t\taddInterfaceDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superinterfaces);", "+\t\t\t} else {", "+\t\t\t\tchar[] superclass = replace('/', '.', reader.getSuperclassName());", "+\t\t\t\taddClassDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superclass, superinterfaces);", "+\t\t\t}", "+\t", "+\t\t\t// first reference all methods declarations and field declarations", "+\t\t\tMethodInfo[] methods = (MethodInfo[]) reader.getMethods();", "+\t\t\tif (methods != null) {", "+\t\t\t\tfor (int i = 0, max = methods.length; i < max; i++) {", "+\t\t\t\t\tMethodInfo method = methods[i];", "+\t\t\t\t\tchar[] descriptor = method.getMethodDescriptor();", "+\t\t\t\t\tchar[][] parameterTypes = decodeParameterTypes(descriptor);", "+\t\t\t\t\tchar[] returnType = decodeReturnType(descriptor);", "+\t\t\t\t\tchar[][] exceptionTypes = replace('/', '.', method.getExceptionTypeNames());", "+\t\t\t\t\tif (method.isConstructor()) {", "+\t\t\t\t\t\taddConstructorDeclaration(className, parameterTypes, exceptionTypes);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (!method.isClinit()) {", "+\t\t\t\t\t\t\taddMethodDeclaration(method.getSelector(), parameterTypes, returnType, exceptionTypes);", "+\t\t\t\t\t\t}", "+\t\t\tFieldInfo[] fields = (FieldInfo[]) reader.getFields();", "+\t\t\tif (fields != null) {", "+\t\t\t\tfor (int i = 0, max = fields.length; i < max; i++) {", "+\t\t\t\t\tFieldInfo field = fields[i];", "+\t\t\t\t\tchar[] fieldName = field.getName();", "+\t\t\t\t\tchar[] fieldType = decodeFieldType(replace('/', '.', field.getTypeName()));", "+\t\t\t\t\taddFieldDeclaration(fieldType, fieldName);", "+\t\t\t\t}", "+\t\t\t}", "+\t", "+\t\t\t// record all references found inside the .class file", "+\t\t\textractReferenceFromConstantPool(contents, reader);", "+\t\t} catch (ClassFormatException e) {", "+\t\t\t// ignore", "-\t\tFieldInfo[] fields = (FieldInfo[]) reader.getFields();", "-\t\tif (fields != null) {", "-\t\t\tfor (int i = 0, max = fields.length; i < max; i++) {", "-\t\t\t\tFieldInfo field = fields[i];", "-\t\t\t\tchar[] fieldName = field.getName();", "-\t\t\t\tchar[] fieldType = decodeFieldType(replace('/', '.', field.getTypeName()));", "-\t\t\t\taddFieldDeclaration(fieldType, fieldName);", "+\t}", "-", "-\t\t// record all references found inside the .class file", "-\t\tif (needReferences) {", "-\t\t\textractReferenceFromConstantPool(contents, reader);", "-\t\t}", "-\t} catch (ClassFormatException e) {", "-\t\t// ignore", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "292fbfe6d7fd0dbd30571f2e5ba76f1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test0005() throws JavaModelException", "signatureAfterChange": " \tpublic void test0005() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29338efa0a9090618c9c2839fc8d6bf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "75f93495a0417b7a1184bfd39388df0898295377", "commitAfterChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r \tprotected Object readState(IProject project) throws CoreException", "signatureAfterChange": "\r \tprotected Object readState(IProject project) throws CoreException", "diff": ["+\t\t\t\t\telse if (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Saved state thinks last build failed for \" + project.getName()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29341d417aa163458569db1bb3245a41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/AllPerformanceTests.java", "commitBeforeChange": "909339e2b2e49887ed38a6b8037978cd008f3b63", "commitAfterChange": "18c344804110dddd5a93aae913b2953e37f48981", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTestSuite(ClasspathTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293b593fd4589a26fd3aa4a0f1a1e86d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "15ba790478e0bbae95b2e33b81452f5363e56d0c", "commitAfterChange": "e4e607ac6102960357aeaf6422bc906f0d3c86ca", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["+", "+\tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite) {", "+\t\tcompilationUnitScope().recordTypeReference(receiverType);", "+\t\tcompilationUnitScope().recordTypeReferences(argumentTypes);", "+\t\tMethodBinding methodBinding = receiverType.getExactConstructor(argumentTypes);", "+\t\tif (methodBinding != null && methodBinding.canBeSeenBy(invocationSite, this))", "+\t\t\treturn methodBinding;", "+\t\tMethodBinding[] methods = receiverType.getMethods(ConstructorDeclaration.ConstantPoolName);", "+\t\tif (methods == NoMethods)", "+\t\t\treturn new ProblemMethodBinding(", "+\t\t\t\tConstructorDeclaration.ConstantPoolName,", "+\t\t\t\targumentTypes,", "+\t\t\t\tNotFound);", "+", "+\t\tMethodBinding[] compatible = new MethodBinding[methods.length];", "+\t\tint compatibleIndex = 0;", "+\t\tfor (int i = 0, length = methods.length; i < length; i++)", "+\t\t\tif (areParametersAssignable(methods[i].parameters, argumentTypes))", "+\t\t\t\tcompatible[compatibleIndex++] = methods[i];", "+\t\tif (compatibleIndex == 0)", "+\t\t\treturn new ProblemMethodBinding(", "+\t\t\t\tConstructorDeclaration.ConstantPoolName,", "+\t\t\t\targumentTypes,", "+\t\t\t\tNotFound);", "+\t\t// need a more descriptive error... cannot convert from X to Y", "+", "+\t\tMethodBinding[] visible = new MethodBinding[compatibleIndex];", "+\t\tint visibleIndex = 0;", "+\t\tfor (int i = 0; i < compatibleIndex; i++) {", "+\t\t\tMethodBinding method = compatible[i];", "+\t\t\tif (method.canBeSeenBy(invocationSite, this))", "+\t\t\t\tvisible[visibleIndex++] = method;", "+\t\t}", "+\t\tif (visibleIndex == 1) return visible[0];", "+\t\tif (visibleIndex == 0)", "+\t\t\treturn new ProblemMethodBinding(", "+\t\t\t\tcompatible[0],", "+\t\t\t\tConstructorDeclaration.ConstantPoolName,", "+\t\t\t\tcompatible[0].parameters,", "+\t\t\t\tNotVisible);", "+\t\treturn mostSpecificClassMethodBinding(visible, visibleIndex);", "-", "-\tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite) {", "-\t", "-\t\tcompilationUnitScope().recordTypeReference(receiverType);", "-\t\tcompilationUnitScope().recordTypeReferences(argumentTypes);", "-\t\tMethodBinding methodBinding = receiverType.getExactConstructor(argumentTypes);", "-\t\tif (methodBinding != null) {", "-\t\t\tif (methodBinding.canBeSeenBy(invocationSite, this))", "-\t\t\t\treturn methodBinding;", "-\t\t}", "-\t\tMethodBinding[] methods =", "-\t\t\treceiverType.getMethods(ConstructorDeclaration.ConstantPoolName);", "-\t\tif (methods == NoMethods) {", "-\t\t\treturn new ProblemMethodBinding(", "-\t\t\t\tConstructorDeclaration.ConstantPoolName,", "-\t\t\t\targumentTypes,", "-\t\t\t\tNotFound);", "-\t\t}", "-\t\tMethodBinding[] compatible = new MethodBinding[methods.length];", "-\t\tint compatibleIndex = 0;", "-\t\tfor (int i = 0, length = methods.length; i < length; i++)", "-\t\t\tif (areParametersAssignable(methods[i].parameters, argumentTypes))", "-\t\t\t\tcompatible[compatibleIndex++] = methods[i];", "-\t\tif (compatibleIndex == 0)", "-\t\t\treturn new ProblemMethodBinding(", "-\t\t\t\tConstructorDeclaration.ConstantPoolName,", "-\t\t\t\targumentTypes,", "-\t\t\t\tNotFound);", "-\t\t// need a more descriptive error... cannot convert from X to Y", "-\t", "-\t\tMethodBinding[] visible = new MethodBinding[compatibleIndex];", "-\t\tint visibleIndex = 0;", "-\t\tfor (int i = 0; i < compatibleIndex; i++) {", "-\t\t\tMethodBinding method = compatible[i];", "-\t\t\tif (method.canBeSeenBy(invocationSite, this))", "-\t\t\t\tvisible[visibleIndex++] = method;", "-\t\t}", "-\t\tif (visibleIndex == 1)", "-\t\t\treturn visible[0];", "-\t\tif (visibleIndex == 0)", "-\t\t\treturn new ProblemMethodBinding(", "-\t\t\t\tcompatible[0],", "-\t\t\t\tConstructorDeclaration.ConstantPoolName,", "-\t\t\t\tcompatible[0].parameters,", "-\t\t\t\tNotVisible);", "-\t\treturn mostSpecificClassMethodBinding(visible, visibleIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294a756f9a878ff8d8c8935da9360ad3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic void test0498() throws JavaModelException", "signatureAfterChange": " \tpublic void test0498() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295c68358715894006bf24b3401c8f22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberRef.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295e1ef6f70690d2b75c2b50afcfac23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AstNode.java", "commitBeforeChange": "7547f542e6f3700b2071ca48fd529fd6d94a7cd9", "commitAfterChange": "343b3de832b5278eaddde8a3101cc17190191f85", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\tif (refType.isPrivate()) {", "+\t\tif (refType.isPrivate() && !scope.isDefinedInType(refType)) {", "+\t\t\t// ignore cases where type is used from within inside itself "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2991dc44b5dd0d51ef2c3fc40961ba23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterJSR335Tests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void testLambdaOptions()", "signatureAfterChange": "  \tpublic void testLambdaOptions()", "diff": ["+\t\tsetPageWidth80(options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29aac5443f72857c26206a1a81857600", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public IResource resource(PackageFragmentRoot root)", "signatureAfterChange": " public IResource resource(PackageFragmentRoot root)", "diff": ["-\treturn (IResource)this.resource;", "+\treturn this.resource;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29be051ecd5b5fbe806918d5c78ec24b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AstNode.java", "commitBeforeChange": "7547f542e6f3700b2071ca48fd529fd6d94a7cd9", "commitAfterChange": "343b3de832b5278eaddde8a3101cc17190191f85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope)", "signatureAfterChange": " \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope)", "diff": ["-\t\tif (field.isPrivate()) {", "+\t\tif (field.isPrivate() && !scope.isDefinedInField(field)) {", "+\t\t\t// ignore cases where field is used from within inside itself "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c7e7b089932105fe1a40bc7ec11886", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 390, "methodNumberAfterChange": 390, "signatureBeforeChange": " \tpublic void test0388() throws JavaModelException", "signatureAfterChange": " \tpublic void test0388() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29da2a602bdbac620e83fce046ddbb7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f22ddb091972eb999f7d979c44476f3c3c9647e3", "commitAfterChange": "31300695e99836e2a6d1c6e4b8b6ad4f8c8d7826", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["+\t\t", "+\t\tif (this.assistNodeIsInsideCase)", "+\t\t\treturn;\t\t// no methods should be proposed inside case expression"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a0a77f5b3c50556b4f8667c17b651d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 426, "signatureBeforeChange": " \tpublic void test407()", "signatureAfterChange": " \tpublic void test407()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a0b9c99c9b28b1ad51e0125b76b26be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/CopyResourceTests.java", "commitBeforeChange": "58dc232e4ac3a587a92cd50ddedf4e70cf15b87c", "commitAfterChange": "0f8bf95b28597d0788e1eda7d91af08e7d01c982", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testSimpleProject()", "signatureAfterChange": "  \tpublic void testSimpleProject()", "diff": ["-\t\tenv.addFile(src, \"zz.txt\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath p = env.addFolder(src, \"p\"); //$NON-NLS-1$", "+\t\tenv.addFile(p, \"p.txt\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingPresenceOf(projectPath.append(\"zz.txt\")); //$NON-NLS-1$", "+\t\texpectingPresenceOf(p.append(\"p.txt\")); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a18bee95f88891a4dd094393f6bc08d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testPerfProjectFindKnownType() throws CoreException", "signatureAfterChange": " public void testPerfProjectFindKnownType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a3749629992a496597f4266349668df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchMultipleProjectsTests.java", "commitBeforeChange": "63016ef323780d34fb6d585a2049ef837e238ead", "commitAfterChange": "3cfa0680932675f487a5ce02b3e0eda8b9c152d0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testMethodOccurences() throws CoreException", "signatureAfterChange": " public void testMethodOccurences() throws CoreException", "diff": ["-\t\tthis.deleteProject(\"P1\");", "-\t\tthis.deleteProject(\"P2\");", "+\t\tdeleteProject(\"P1\");", "+\t\tdeleteProject(\"P2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a3f2343f920cc302a66344457475392", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 304, "signatureBeforeChange": " \tpublic void test0302() throws JavaModelException", "signatureAfterChange": " \tpublic void test0302() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5f0a7e56a42c3a29f9b7a88ac19653", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " final public void getfield(FieldBinding fieldBinding)", "signatureAfterChange": " final public void getfield(FieldBinding fieldBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tgetfield:\"+fieldBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a63469042d088dad56b84d6b086e9fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "4cba6159f283363f8bd747cb4e532be44a8b1a70", "commitAfterChange": "83ac320f656827a9d8ea883f97b343912fdaf3c7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValuesWithDefaults()", "signatureAfterChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValuesWithDefaults()", "diff": ["+\t\tif (this._binding == null) {", "+\t\t\treturn Collections.emptyMap();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a736b7d343f5b423ef174c5313498a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "b63ee5a669593061b975bc2def28757d777c16ca", "commitAfterChange": "09bf35df2168c2ab3f5a24971ca9aae42bfc8d5b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean checkDeprecation(int annotationStart, int annotationEnd)", "signatureAfterChange": " \tpublic boolean checkDeprecation(int annotationStart, int annotationEnd)", "diff": ["-\t\t\t\t\t\t\t\t\tif (CharOperation.equals(tag, TAG_DEPRECATED)) {", "-\t\t\t\t\t\t\t\t\t\tfoundDeprecated = true;", "-\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_PARAM)) {", "-\t\t\t\t\t\t\t\t\t\tparseParam();", "-\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_EXCEPTION)) {", "-\t\t\t\t\t\t\t\t\t\tparseThrows();", "-\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_SEE)) {", "-\t\t\t\t\t\t\t\t\t\tparseSee();", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tif (CharOperation.equals(tag, TAG_DEPRECATED)) {", "+\t\t\t\t\t\t\t\t\t\t\tfoundDeprecated = true;", "+\t\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_PARAM)) {", "+\t\t\t\t\t\t\t\t\t\t\tparseParam();", "+\t\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_EXCEPTION)) {", "+\t\t\t\t\t\t\t\t\t\t\tparseThrows();", "+\t\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_SEE)) {", "+\t\t\t\t\t\t\t\t\t\t\tparseSee();", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\tupdateAnnotation();", "+\t\t\tif (this.checkAnnotation) {", "+\t\t\t\tupdateAnnotation();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab521f518a66bc21bd592dd27e9d435", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 54, "signatureBeforeChange": " public final boolean isPrivate()", "signatureAfterChange": " public final boolean isPrivate()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccPrivate) != 0;", "-}", "+\treturn (this.modifiers & ClassFileConstants.AccPrivate) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aca9eca8c103d0c29a2ba24295ae0ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output, String[] sourceOutputs) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output, String[] sourceOutputs) throws CoreException", "diff": ["-\t\t\t\tnull/*no exclusion pattern*/", "+\t\t\t\tnull/*no exclusion pattern*/,", "+\t\t\t\t\"1.4\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2acbc3c76f0b708559bec718ffa7f343", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testPerfParserFiles() throws InvalidInputException, IOException", "signatureAfterChange": " \tpublic void testFullBuildNoWarning() throws CoreException, IOException", "diff": ["+\t */", "+\tpublic void testFullBuildNoWarning() throws CoreException, IOException {", "+\t\ttagAsSummary(\"Compile>Build>Clean>Full>No warning\", false); // do NOT put in fingerprint", "+\t\tstartBuild(warningOptions(false/*no warning*/), false);", "+\t}", "-\tpublic void testPerfParserFiles() throws InvalidInputException, IOException {", "-\t\ttagAsSummary(\"Compile>Parse>Src:large files>Options:Default\", Dimension.CPU_TIME, false); // do NOT put in fingerprint", "-", "-\t\tparseFiles(FILE_SIZE_THRESHOLD);", "-\t\tcommitMeasurements();", "-\t\tassertPerformance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aee4d6a4cb70a063cd5723f070ed565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void generateClassLiteralAccessForType(TypeBinding accessedType, FieldBinding syntheticFieldBinding)", "signatureAfterChange": " public void generateClassLiteralAccessForType(TypeBinding accessedType, FieldBinding syntheticFieldBinding)", "diff": ["-\tif (accessedType.isBaseType() && accessedType != NullBinding) {", "+\tif (accessedType.isBaseType() && accessedType != TypeBinding.NULL) {", "-\t\tanyExceptionHandler = new ExceptionLabel(this, BaseTypes.NullBinding /* represents ClassNotFoundException*/);", "-\t\tthis.ldc(accessedType == BaseTypes.NullBinding ? \"java.lang.Object\" : String.valueOf(accessedType.constantPoolName()).replace('/', '.')); //$NON-NLS-1$", "+\t\tanyExceptionHandler = new ExceptionLabel(this, TypeBinding.NULL /* represents ClassNotFoundException*/);", "+\t\tthis.ldc(accessedType == TypeBinding.NULL ? \"java.lang.Object\" : String.valueOf(accessedType.constantPoolName()).replace('/', '.')); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b037e545dc39e5dd73df66dbbbd2f67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 143, "signatureBeforeChange": " final public void ifge(Label lbl)", "signatureAfterChange": " final public void ifge(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifge:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1685e3f5867f765bc0bbbe00f532a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 55, "signatureBeforeChange": " public final boolean isProtected()", "signatureAfterChange": " public final boolean isProtected()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccProtected) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccProtected) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1a9db519270ec6e4252b6ee8a596fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testGrowImports() throws JavaModelException", "signatureAfterChange": " public void testGrowImports() throws JavaModelException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1ac0a277811bff6a93f3d232c8b565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testIsOnClasspath1() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath1() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tIFile file = this.createFile(", "+\tsetClasspath(new String[] {\"/P/src\", \"\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tIFile file = createFile("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b21e5d5eddb819df83d011eb867e52e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "c870f031a98c81ecd7c6b67e75c9e69323537096", "commitAfterChange": "5b2be5e77960f7aa4dfe7d5eb915a5439f635d3a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " Binding resolveSingleImport(ImportBinding importBinding)", "signatureAfterChange": " Binding resolveSingleImport(ImportBinding importBinding)", "diff": ["-\t\t\tif (importBinding.resolvedImport instanceof ProblemFieldBinding && importBinding.resolvedImport.problemId() == ProblemReasons.Ambiguous)", "+\t\t\tif (importBinding.resolvedImport.problemId() == ProblemReasons.Ambiguous)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3fd6900be8cc2817476c4e631dc3e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclarationStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b5515797d5b7ba57db9f0c6eb4359da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "b94c15d0468e2c86a83d3434786ffbaf7e2c6cc7", "commitAfterChange": "bced152ccb3e158a71b16f3ed40ab742859aea61", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "signatureAfterChange": " \tpublic static IPath getClasspathVariable(final String variableName)", "diff": ["-\t\t\tJavaModelManager.getJavaModelManager().variablePut(variableName, JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS); // avoid initialization cycles", "+\t\t\tmanager.variablePut(variableName, JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS); // avoid initialization cycles", "-\t\t\t\tvariablePath = JavaModelManager.getJavaModelManager().variableGet(variableName); // initializer should have performed side-effect", "+\t\t\t\tvariablePath = manager.variableGet(variableName); // initializer should have performed side-effect", "+\t\t\t\tmanager.variablesWithInitializer.add(variableName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b55b10057b5167abecff4bacfd432be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/CopyResourceTests.java", "commitBeforeChange": "58dc232e4ac3a587a92cd50ddedf4e70cf15b87c", "commitAfterChange": "0f8bf95b28597d0788e1eda7d91af08e7d01c982", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testProjectWithBin()", "signatureAfterChange": "  \tpublic void testProjectWithBin()", "diff": ["-\t\tenv.addFile(src, \"zz.txt\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath p = env.addFolder(src, \"p\"); //$NON-NLS-1$", "+\t\tenv.addFile(p, \"p.txt\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tprojectPath.append(\"zz.txt\"), //$NON-NLS-1$", "-\t\t\tprojectPath.append(\"bin/zz.txt\") //$NON-NLS-1$", "+\t\t\tprojectPath.append(\"p/p.txt\"), //$NON-NLS-1$", "+\t\t\tprojectPath.append(\"bin/p/p.txt\") //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b66de998da1d4feabef12702f18f876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " public void importProblem(ImportReference importRef, Binding expectedImport)", "signatureAfterChange": " public void importProblem(ImportReference importRef, Binding expectedImport)", "diff": ["-\tif (expectedImport.problemId() == NotFound) {", "+\tif (expectedImport.problemId() == ProblemReasons.NotFound) {", "-\tif (expectedImport.problemId() == InvalidTypeForStaticImport) {", "+\tif (expectedImport.problemId() == ProblemReasons.InvalidTypeForStaticImport) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b9f45e93ace911d8accb566e0c07e22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic synchronized boolean isParentFile( IFile f )", "signatureAfterChange": " \tpublic synchronized boolean isParentFile(IFile f)", "diff": ["-\t */", "-\tpublic synchronized boolean isParentFile( IFile f )", "-\t{", "-\t\tSet<IFile> s = _parentFile2GeneratedFiles.get( f );", "-\t\tif ( s == null || s.isEmpty() )", "-\t\t\treturn false;", "-\t\telse", "-\t\t\treturn true;", "-\t}", "+\t */", "+\tpublic synchronized boolean isParentFile(IFile f)", "+\t{", "+\t\treturn _parentToGenFiles.containsKey(f);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bc90accc3026db1f49ffe9c562d6eb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t        return new ProblemMethodBinding(originalMethod, originalMethod.selector, substitutes, TypeParameterArityMismatch);", "+\t\t\t        return new ProblemMethodBinding(originalMethod, originalMethod.selector, substitutes, ProblemReasons.TypeParameterArityMismatch);", "-\t\t\t\t        return new ProblemMethodBinding(methodSubstitute, originalMethod.selector, augmentedArguments, ParameterBoundMismatch);", "+\t\t\t\t        return new ProblemMethodBinding(methodSubstitute, originalMethod.selector, augmentedArguments, ProblemReasons.ParameterBoundMismatch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2beadc616f671121d6c471269323b05b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "e963839bb05bb99a55cdc5d5481f68a4f85ef528", "commitAfterChange": "9bbf6f5c6011b94aa504d5f2bba9aecfb52bdb59", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public final boolean isViewedAsDeprecated()", "signatureAfterChange": " public final boolean isViewedAsDeprecated()", "diff": ["-\t\t\t|| (getPackage().getAnnotationTagBits() & TagBits.AnnotationDeprecated) != 0;", "+\t\t\t|| getPackage().isViewedAsDeprecated();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c589d2030f456cfe7a28e6c24955b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BasicCompilationUnit.java", "commitBeforeChange": "0c30c509f770e7e3596eca8733ca9dd62ac37742", "commitAfterChange": "e42deb57e6190d97c310bfecdaaf1fc0d7432060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public char[] getFileName()", "signatureAfterChange": "\r public char[] getFileName()", "diff": ["-\treturn fileName;\r", "+\treturn this.fileName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c695a6ce849e54bd69bb35f0e44f42d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack)", "diff": ["-\t\t\t\tif ((commonDim == 0 ? mecs[1].id : mecs[1].leafComponentType().id) == T_JavaLangObject) return mecs[0];", "-\t\t\t\tif ((commonDim == 0 ? mecs[0].id : mecs[0].leafComponentType().id) == T_JavaLangObject) return mecs[1];", "+\t\t\t\tif ((commonDim == 0 ? mecs[1].id : mecs[1].leafComponentType().id) == TypeIds.T_JavaLangObject) return mecs[0];", "+\t\t\t\tif ((commonDim == 0 ? mecs[0].id : mecs[0].leafComponentType().id) == TypeIds.T_JavaLangObject) return mecs[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7bb4831cbc6244c044032893a24956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tprivate int generateBootstrapMethods(List functionalExpressionList)", "signatureAfterChange": "  \tprivate int generateBootstrapMethods(List functionalExpressionList)", "diff": ["-\t\t\tchar [] instantiatedSignature = functional.signature();", "+\t\t\tchar [] instantiatedSignature = functional.descriptor.signature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c883822b038dfdd1c68d35d7e13dcf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnonymousClassDeclaration.java", "commitBeforeChange": "d9fc56cfe59f158965221ab64ef3ac7946872d89", "commitAfterChange": "53aa69b42e5aee6c6df8beec071bca3dff321c84", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tASTNode clone(AST target)", "signatureAfterChange": " \tASTNode clone(AST target)", "diff": ["-\t\tresult.setSourceRange(getStartPosition(), getLength());", "+\t\tresult.setSourceRange(this.getStartPosition(), this.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca3dab2e944a0610425e112aa6ff9e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  public StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\treturn receiver.printExpression(0, output).append('.').append(token);", "+\treturn this.receiver.printExpression(0, output).append('.').append(this.token);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc1587f7b5737ff0819093340a71860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName, \tchar[] declaringQualification, \tchar[][] parameterQualifications, \tchar[][] parameterSimpleNames, \tint matchRule)", "signatureAfterChange": "  public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName, \tchar[] declaringQualification, \tchar[][] parameterQualifications, \tchar[][] parameterSimpleNames, \tint matchRule)", "diff": ["-\tthis.declaringQualification = this.isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "-\tthis.declaringSimpleName = this.isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.declaringQualification = isCaseSensitive() ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = isCaseSensitive() ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "-\t\t\tthis.parameterQualifications[i] = this.isCaseSensitive ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "-\t\t\tthis.parameterSimpleNames[i] = this.isCaseSensitive ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);", "+\t\t\tthis.parameterQualifications[i] = isCaseSensitive() ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "+\t\t\tthis.parameterSimpleNames[i] = isCaseSensitive() ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc2e09caaa342d8a1e6c5f0fe9669e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " \tpublic void test0616() throws JavaModelException", "signatureAfterChange": " \tpublic void test0616() throws JavaModelException", "diff": ["-\t\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, workingCopy, true);", "+\t\t\tASTNode node = runConversion(getJLS3(), workingCopy, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc9459c1e9b1749a25e7f26517fcbef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void test061()", "signatureAfterChange": " \tpublic void test061()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ccb8bb232f59b9769c6ec0e938dd65d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic void test0111() throws JavaModelException", "signatureAfterChange": " \tpublic void test0111() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf8026d8296ec60ac7e6fd4ca532512", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void test0062() throws JavaModelException", "signatureAfterChange": " \tpublic void test0062() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d03fb9e943d26a9b76ab7017d2e5220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t\t \tprivate void buildContext( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tBinding qualifiedBinding, \t\t\tScope scope)", "signatureAfterChange": " \t\t \tprivate void buildContext( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope)", "diff": ["+\t\t\tCompilationUnitDeclaration compilationUnitDeclaration,", "+\t\tif (this.requestor.isExtendedContextRequired()) {", "+\t\t\tcontext.setExtendedData(", "+\t\t\t\t\tthis.typeRoot,", "+\t\t\t\t\tcompilationUnitDeclaration,", "+\t\t\t\t\tthis.lookupEnvironment,", "+\t\t\t\t\tscope,", "+\t\t\t\t\tastNode,", "+\t\t\t\t\tthis.owner,", "+\t\t\t\t\tthis.parser);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d0e70a49446487196a086cc077aefaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic final ReferenceBinding findLocalType(char[] name)", "signatureAfterChange": " public final ReferenceBinding findLocalType(char[] name)", "diff": ["+ */", "+public final ReferenceBinding findLocalType(char[] name) {", "+\tlong compliance = compilerOptions().complianceLevel;", "+\tfor (int i = 0, length = this.subscopeCount; i < length; i++) {", "+\t\tif (this.subscopes[i] instanceof ClassScope) {", "+\t\t\tLocalTypeBinding sourceType = (LocalTypeBinding)((ClassScope) this.subscopes[i]).referenceContext.binding;", "+\t\t\t// from 1.4 on, local types should not be accessed across switch case blocks (52221)\t\t\t\t", "+\t\t\tif (compliance >= ClassFileConstants.JDK1_4 && sourceType.enclosingCase != null) {", "+\t\t\t\tif (!this.isInsideCase(sourceType.enclosingCase)) {", "+\t\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\tif (CharOperation.equals(sourceType.sourceName(), name))", "+\t\t\t\treturn sourceType;", "+\t\t}", "+\t}", "+\treturn null;", "+}", "-\t */", "-\tpublic final ReferenceBinding findLocalType(char[] name) {", "-", "-\t\tlong compliance = compilerOptions().complianceLevel;", "-\t\tfor (int i = 0, length = subscopeCount; i < length; i++) {", "-\t\t\tif (subscopes[i] instanceof ClassScope) {", "-\t\t\t\tLocalTypeBinding sourceType = (LocalTypeBinding)((ClassScope) subscopes[i]).referenceContext.binding;", "-\t\t\t\t// from 1.4 on, local types should not be accessed across switch case blocks (52221)\t\t\t\t", "-\t\t\t\tif (compliance >= ClassFileConstants.JDK1_4 && sourceType.enclosingCase != null) {", "-\t\t\t\t\tif (!this.isInsideCase(sourceType.enclosingCase)) {", "-\t\t\t\t\t\tcontinue;", "-\t\t\t\tif (CharOperation.equals(sourceType.sourceName(), name))", "-\t\t\t\t\treturn sourceType;", "-\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d14fe35519245feb638b3307987a7af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d173897e176614961f10cf305949ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": " \tpublic void test0307() throws JavaModelException", "signatureAfterChange": " \tpublic void test0307() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d308d8d997eef30f302d6ddfe92f1ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "b51c36b1246bd1345c3afae01728763dcd171e5a", "commitAfterChange": "6d6867f51ab2593e87423b03682d06ffbcaebc01", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(ClassScope classScope, ClassFile classFile)", "signatureAfterChange": " \tpublic void generateCode(ClassScope classScope, ClassFile classFile)", "diff": ["-\t\t\t\t\tif (!restart) {", "-\t\t\t\t\t\tclassFile.contentsOffset = clinitOffset;", "-\t\t\t\t\t\tclassFile.methodCount--;", "-\t\t\t\t\t\tclassFile.codeStream.resetInWideMode(); // request wide mode", "-\t\t\t\t\t\t// restart method generation", "-\t\t\t\t\t\trestart = true;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tclassFile.contentsOffset = clinitOffset;", "-\t\t\t\t\t\tclassFile.methodCount--;", "-\t\t\t\t\t}", "+\t\t\t\t\tclassFile.contentsOffset = clinitOffset;", "+\t\t\t\t\tclassFile.methodCount--;", "+\t\t\t\t\tclassFile.codeStream.resetInWideMode(); // request wide mode", "+\t\t\t\t\t// restart method generation", "+\t\t\t\t\trestart = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d3d3b708f6af362f63716c82a0c009e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void addDefaultAbstractMethod(MethodBinding abstractMethod)", "signatureAfterChange": " private void addDefaultAbstractMethod(MethodBinding abstractMethod)", "diff": ["-\t\tabstractMethod.modifiers | AccDefaultAbstract,", "+\t\tabstractMethod.modifiers | ExtraCompilerModifiers.AccDefaultAbstract,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d43eb4622bf2d9b00b5ac16afa3b391", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WildcardType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic boolean isUpperBound()", "signatureAfterChange": "  \tpublic boolean isUpperBound()", "diff": ["-\t\treturn isUpperBound;", "+\t\treturn this.isUpperBound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d44f63009e6f763fe21ec8a7a5f43a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a1786a43c2c86a8c78f8e49de58ef6c055a9299d", "commitAfterChange": "409121a5eb3d3ef99ff5c31121bd10011631e82f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "diff": ["-\t\t\tfinal int IMPLICIT_MODIFIERS = ClassFileConstants.AccPublic | ClassFileConstants.AccStatic | ClassFileConstants.AccFinal | ClassFileConstants.AccEnum;", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=267670. Force all enumerators to be marked", "+\t\t\t// as used locally. We are unable to track the usage of these reliably as they could be used", "+\t\t\t// in non obvious ways via the synthesized methods values() and valueOf(String) or by using ", "+\t\t\t// Enum.valueOf(Class<T>, String).", "+\t\t\tfinal int IMPLICIT_MODIFIERS = ClassFileConstants.AccPublic | ClassFileConstants.AccStatic | ClassFileConstants.AccFinal | ClassFileConstants.AccEnum | ExtraCompilerModifiers.AccLocallyUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4e1f4a3414ccf087a27ec3b3cb0e55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "8d8cc91b7aba4777ee9418a3cef6e1e163bfbf27", "commitAfterChange": "d0534e0376f1634b8fe35d19dde78d7433440f37", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t\tif ((closestMatchOriginal.isPrivate() || closestMatchOriginal.declaringClass.isLocalType()) && !scope.isDefinedInMethod(closestMatchOriginal)) {", "+\t\t\t\t\t\t\tif (closestMatchOriginal.isOrEnclosedByPrivateType() && !scope.isDefinedInMethod(closestMatchOriginal)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5dbfe5306a0bcb0fa7729766a1ebef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic List thrownExceptions()", "signatureAfterChange": "  \tpublic List thrownExceptions()", "diff": ["-\t\treturn thrownExceptions;", "+\t\treturn this.thrownExceptions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d86d8bb85dc3a4ff83fea2d4002e319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void testMoveSecondaryType() throws JavaModelException", "signatureAfterChange": "  \tpublic void testMoveSecondaryType() throws JavaModelException", "diff": ["+\t\tenv.removeProject(projectPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ddd4135f12f31da0dbafc194bbeb1c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "1e3d7a95c39c7aac1cb5e09a719efdb30a9bf701", "commitAfterChange": "1df126b77b08d354ebfd5eda6a44830d9266b61e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testLocalVariableMemento1()", "signatureAfterChange": " public void testLocalVariableMemento1()", "diff": ["-\tILocalVariable localVar = new LocalVariable((JavaElement)method, \"var\", 1, 2, 3, 4, \"Z\", null);", "+\tILocalVariable localVar = new LocalVariable((JavaElement)method, \"var\", 1, 2, 3, 4, \"Z\", null, 0, true);", "-\t\t\"=P/src<p{X.java[X~foo@var!1!2!3!4!Z\",", "+\t\t\"=P/src<p{X.java[X~foo@var!1!2!3!4!Z!0!true\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df7493685e89da1de8ace124bf5e9ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePair.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e08ae651ed8dfae9f6bc35f209ac298", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\tgetResolvedClasspath(true), // ignoreUnresolvedVariable", "+\t\t\tgetResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e23d77da66cf5360441e21c138f7614", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5d2ad0b940570868aeb3a33317182334e9423c29", "commitAfterChange": "0f27abdc440c19d22cca8de897116ef5e59c08c4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tvoid connectTypeHierarchy()", "signatureAfterChange": " \t \tvoid connectTypeHierarchy()", "diff": ["-\t\tif (referenceContext.typeParameters != null)", "-\t\t\tcheckTypeVariableBounds(referenceContext.typeParameters); // only done after hierarchy is connected", "+\t\t// Perform deferred bound checks for parameterized type references (only done after hierarchy is connected)", "+\t\tcheckParameterizedTypeBounds();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2f9422a228bcdf8322721771f134c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/TypeAnnotationCodeStream.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass, TypeReference[] typeArguments)", "signatureAfterChange": " \t \tpublic void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass, TypeReference[] typeArguments)", "diff": ["+\t", "+\tpublic void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass, TypeReference[] typeArguments) {", "+\t\tif (typeArguments != null) {", "+\t\t\tint targetType = methodBinding.isConstructor()", "+\t\t\t\t\t? AnnotationTargetTypeConstants.CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT", "+\t\t\t\t\t: AnnotationTargetTypeConstants.METHOD_INVOCATION_TYPE_ARGUMENT;", "+\t\t\tfor (int i = 0, max = typeArguments.length; i < max; i++) {", "+\t\t\t\tTypeReference typeArgument = typeArguments[i];", "+\t\t\t\tif ((typeArgument.bits & ASTNode.HasTypeAnnotations) != 0) { // TODO can check this at a higher level?", "+\t\t\t\t\taddAnnotationContext(typeArgument, this.position, i, targetType);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tsuper.invoke(opcode, methodBinding, declaringClass, typeArguments);", "+\t}", "-\t}", "-\tpublic void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass, TypeReference[] typeArguments) {", "-\t\tif (typeArguments != null) {", "-\t\t\tint targetType = methodBinding.isConstructor()", "-\t\t\t\t\t? AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL", "-\t\t\t\t\t: AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL;", "-\t\t\tfor (int i = 0, max = typeArguments.length; i < max; i++) {", "-\t\t\t\tTypeReference typeArgument = typeArguments[i];", "-\t\t\t\taddAnnotationContext(typeArgument, this.position, i, targetType);", "-\t\t\t}", "-\t\t}", "-\t\tsuper.invoke(opcode, methodBinding, declaringClass, typeArguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e598aeb8fcadbe8aa59779253beb030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 247, "signatureBeforeChange": " \tpublic void test0245() throws JavaModelException", "signatureAfterChange": " \tpublic void test0245() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e61469a1acc821a542419ff94da8d42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 328, "signatureBeforeChange": " \tpublic void test0680() throws JavaModelException", "signatureAfterChange": " \tpublic void test0680() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode node = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e854f581c450004883969c3f859d7a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 299, "signatureBeforeChange": " \tpublic void test0297() throws JavaModelException", "signatureAfterChange": " \tpublic void test0297() throws JavaModelException", "diff": ["-\t\trunConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\trunConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e8adf95ed3a797a12cbe0edb6262dca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "790443c8ea7a17aa25cb0c35c01196da99d52e04", "commitAfterChange": "d7ed279f5216d32337e674d05a19fd9c56f52744", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void cacheOriginalValues()", "signatureAfterChange": " \t@Override \tprotected void cacheOriginalValues()", "diff": ["-\tprivate void cacheOriginalValues() {", "+\t@Override", "+\tprotected void cacheOriginalValues() {", "+\t\tsuper.cacheOriginalValues();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e95f49c25c9cfab845b388443e61211", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-    if ((this.modifiers & AccGenericSignature) == 0) return null;", "+    if ((this.modifiers & ExtraCompilerModifiers.AccGenericSignature) == 0) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f297b72edc6e345fa1dff00c4b417dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateOptimizedBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\tif (left.constant != NotAConstant) {", "+\t\tif (left.constant != Constant.NotAConstant) {", "-\t\tif (right.constant != NotAConstant) {", "+\t\tif (right.constant != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2f5bb5d20adda2f8626b2d0bb260f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/MethodReferenceMatch.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic MethodReferenceMatch(IJavaElement enclosingElement, int accuracy, int offset, int length, boolean constructor, boolean synthetic, boolean insideDocComment, SearchParticipant participant, IResource resource)", "signatureAfterChange": " \tpublic MethodReferenceMatch(IJavaElement enclosingElement, int accuracy, int offset, int length, boolean insideDocComment, SearchParticipant participant, IResource resource)", "diff": ["+\t */", "+\tpublic MethodReferenceMatch(IJavaElement enclosingElement, int accuracy, int offset, int length, boolean insideDocComment, SearchParticipant participant, IResource resource) {", "+\t\tsuper(enclosingElement, accuracy, offset, length, participant, resource);", "+\t\tsetInsideDocComment(insideDocComment);", "+\t}", "-\t\tsuper(enclosingElement, accuracy, offset, length, participant, resource);", "-\t\tsetInsideDocComment(insideDocComment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f376607e16ed47e29dad30400684f34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 356, "methodNumberAfterChange": 356, "signatureBeforeChange": " \tpublic void test0701() throws JavaModelException", "signatureAfterChange": " \tpublic void test0701() throws JavaModelException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f48d683d6199d9cc75728b0baaae923", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EmptyStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7f5f04bb29775900abba99c1fdb904", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/CodeByteStream.java", "commitBeforeChange": "9b62d5a09ebdc0eb5608813d651e7e9099a1ba2e", "commitAfterChange": "f1fe31a1aec035b92fd30d4df6e2da05a3c1141b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void reset(byte[] bytes, int byteOffset)", "signatureAfterChange": " \tpublic void reset(byte[] bytesValue, int byteOffsetValue)", "diff": ["-\tpublic void reset(byte[] bytes, int byteOffset) {", "-\t\treset(bytes);", "-\t\tthis.byteOffset= byteOffset;", "+\tpublic void reset(byte[] bytesValue, int byteOffsetValue) {", "+\t\treset(bytesValue);", "+\t\tthis.byteOffset= byteOffsetValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f958de828ac054ede919e1e568af09a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " public void test0203() throws JavaModelException", "signatureAfterChange": " public void test0203() throws JavaModelException", "diff": ["-\t            \"ZZType[TYPE_REF]{p.ZZType, p, Lp.ZZType;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_CLASS + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZType.ZZClass[TYPE_REF]{p.ZZType.ZZClass, p, Lp.ZZType$ZZClass;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_CLASS + R_NON_RESTRICTED) + \"}\",", "+\t            \"ZZType[TYPE_REF]{p.ZZType, p, Lp.ZZType;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_CLASS + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZType.ZZClass[TYPE_REF]{p.ZZType.ZZClass, p, Lp.ZZType$ZZClass;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_CLASS + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2faf85a16d99e6185af3765055f22d08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrimitiveType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic PrimitiveType.Code getPrimitiveTypeCode()", "signatureAfterChange": " \tpublic PrimitiveType.Code getPrimitiveTypeCode()", "diff": ["-\t\treturn typeCode;", "+\t\treturn this.typeCode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fc327257a5875df13bfafc581dd3c89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resetStateForCodeGeneration()", "signatureAfterChange": "  \tpublic void resetStateForCodeGeneration()", "diff": ["-", "-\t\tthis.breakLabel.resetStateForCodeGeneration();", "-\t\tthis.continueLabel.resetStateForCodeGeneration();", "+\t\tif (this.breakLabel != null) {", "+\t\t\tthis.breakLabel.resetStateForCodeGeneration();", "+\t\t}", "+\t\tif (this.continueLabel != null) {", "+\t\t\tthis.continueLabel.resetStateForCodeGeneration();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe53fde78f4f48bce21858e46018610", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "0f892a0390ff8dcab7aaa0316ec2185217bf918d", "commitAfterChange": "49cde0388e8672fe5bf364d83a34c7c55eefbde8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\t\treturn null;", "+\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=228648", "+\t\t\t\t\t// do not return now but report unresolved reference as expected depending on compliance settings"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30166d5f09bead8c7cb4e6e717384042", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void test0048() throws JavaModelException", "signatureAfterChange": " \tpublic void test0048() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304fd6c6e7607dae876693e72f0193c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\tfor (int i = length; --i >= 0;)", "-\t\tif (!currentMethod.isStatic() && !methods[i].isStatic())", "-\t\t\tcheckNullSpecInheritance(currentMethod, methods[i]);", "+\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tfor (int i = length; --i >= 0;)", "+\t\t\tif (!currentMethod.isStatic() && !methods[i].isStatic())", "+\t\t\t\tcheckNullSpecInheritance(currentMethod, methods[i]);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305274eeba8c92087344beba4fb64309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testAddCompilationUnit3() throws CoreException, IOException", "signatureAfterChange": " public void testAddCompilationUnit3() throws CoreException", "diff": ["-public void testAddCompilationUnit3() throws CoreException, IOException {", "+public void testAddCompilationUnit3() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3057ff50001ea694438921c58b8b4084", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean isOnClasspath(IJavaElement element)", "signatureAfterChange": " \tpublic boolean isOnClasspath(IJavaElement element)", "diff": ["-\t\t\tclasspath = this.getResolvedClasspath(true/*ignore unresolved variable*/);", "+\t\t\tclasspath = getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309b6966e0b6b29f66eabd4578984759", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "e90ecf6dac2cea3cdfe20ac4f66a6b31eaf1db21", "commitAfterChange": "0390be1950bcdfa43b629ba946ffaaaee0d5d33f", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\t\t\tthis.scribe.printNewLines(blankLinesBeforePackage - 1);", "+\t\t\t\tthis.scribe.printNewLines(blankLinesBeforePackage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30cbc8ba67237d288a17348767846abc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperFieldAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\treturn optionalQualifier;", "+\t\treturn this.optionalQualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d56aecb641e4e44b1d39dfa040b51b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test055() throws JavaModelException", "signatureAfterChange": "  public void test055() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30dce14d1071f378001dd02a970cb3db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public IBinaryMethod[] getMethods()", "signatureAfterChange": "\r public IBinaryMethod[] getMethods()", "diff": ["-\treturn methods;\r", "+\treturn this.methods;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30e8716928f5c3090c9daf7443351b22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c79af2ee01d3f2093b2668c0a663bf8f76d7429f", "commitAfterChange": "d83fb3088f0539c83f9d571caeaab986441c3733", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 315, "signatureBeforeChange": " public MethodDeclaration convertToMethodDeclaration(ConstructorDeclaration c, CompilationResult compilationResult)", "signatureAfterChange": " public MethodDeclaration convertToMethodDeclaration(ConstructorDeclaration c, CompilationResult compilationResult)", "diff": ["+\tm.javadoc = c.javadoc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30fbd8b2617ad3b676713d526235027a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " \tpublic void test0536() throws JavaModelException", "signatureAfterChange": " \tpublic void test0536() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3104ad9675b7d678c2713856a2e2441a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " \tpublic void test0525() throws JavaModelException", "signatureAfterChange": " \tpublic void test0525() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310e109f63250d7aad55f05b91f84dec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "afcefcc52a6e235f9ed640317727929d84135cf0", "commitAfterChange": "5ce294a787e58643d5e8115fe2ddfea119e53aa2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void parseStatements(Parser parser, CompilationUnitDeclaration unit)", "signatureAfterChange": "  public void parseStatements(Parser parser, CompilationUnitDeclaration unit)", "diff": ["-\tpublic void parseStatements(Parser parser, CompilationUnitDeclaration unit) {", "-\t\t//fill up the constructor body with its statements", "-\t\tif (ignoreFurtherInvestigation)", "-\t\t\treturn;", "-\t\tif (isDefaultConstructor && this.constructorCall == null){", "-\t\t\tthis.constructorCall = SuperReference.implicitSuperConstructorCall();", "-\t\t\tthis.constructorCall.sourceStart = this.sourceStart;", "-\t\t\tthis.constructorCall.sourceEnd = this.sourceEnd; ", "-\t\t\treturn;", "-\t\tparser.parse(this, unit);", "-", "+", "+public void parseStatements(Parser parser, CompilationUnitDeclaration unit) {", "+\t//fill up the constructor body with its statements", "+\tif (this.ignoreFurtherInvestigation)", "+\t\treturn;", "+\tif (this.isDefaultConstructor && this.constructorCall == null){", "+\t\tthis.constructorCall = SuperReference.implicitSuperConstructorCall();", "+\t\tthis.constructorCall.sourceStart = this.sourceStart;", "+\t\tthis.constructorCall.sourceEnd = this.sourceEnd; ", "+\t\treturn;", "+\t}", "+\tparser.parse(this, unit);", "+", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "312cf279f12881ebfeb93fd529127b5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, false, options.getAssertMode());\r", "+\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, false, options.assertMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "312f55594e25c293a695dae9fb180aa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testAccessRestriction1() throws Exception", "signatureAfterChange": " public void testAccessRestriction1() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "313569a4cbbdf54dc9680235b3773dce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public final boolean isOverriding()", "signatureAfterChange": " public final boolean isOverriding()", "diff": ["-\treturn (modifiers & AccOverriding) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccOverriding) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314112d9d98f1278b5d6907825caecfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 257, "methodNumberAfterChange": 257, "signatureBeforeChange": " \tpublic void test0255() throws JavaModelException", "signatureAfterChange": " \tpublic void test0255() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d73622c136aa35d53bd11828c783a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " \tpublic void test0712() throws JavaModelException", "signatureAfterChange": " \tpublic void test0712() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31f0b166caf327715eedba866335aef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void test079()", "signatureAfterChange": " \tpublic void test079()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "320cb2c4d1a7f65d61ebad9122992b94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void test076()", "signatureAfterChange": " \tpublic void test076()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3236218e81d2fb5cb13a940bb721f382", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "1e3d7a95c39c7aac1cb5e09a719efdb30a9bf701", "commitAfterChange": "1df126b77b08d354ebfd5eda6a44830d9266b61e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testLocalVariableMemento2() throws JavaModelException", "signatureAfterChange": " public void testLocalVariableMemento2() throws JavaModelException", "diff": ["-\tILocalVariable localVar = new LocalVariable((JavaElement)method, \"var\", 1, 2, 3, 4, \"Z\", null);", "+\tILocalVariable localVar = new LocalVariable((JavaElement)method, \"var\", 1, 2, 3, 4, \"Z\", null,0, false);", "-\t\t\"=P/src<p(X.class[X~foo~I@var!1!2!3!4!Z\",", "+\t\t\"=P/src<p(X.class[X~foo~I@var!1!2!3!4!Z!0!false\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3259e7e28cd76fa8440e39c52c7136e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CommentRecorderParser.java", "commitBeforeChange": "1505d6b4655f1428d6059c29c9d919c21116a2ec", "commitAfterChange": "99b76fba5f0312d772156ff14654849bf056608a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void checkComment()", "signatureAfterChange": " \tpublic void checkComment()", "diff": ["-\t\t\t", "-\t\t\tthis.javadocParser.reportProblems = this.currentElement == null || commentSourceEnd > this.lastJavadocEnd;", "+\t\t\tif (this.javadocParser.shouldReportProblems) {", "+\t\t\t\tthis.javadocParser.reportProblems = this.currentElement == null || commentSourceEnd > this.lastJavadocEnd;", "+\t\t\t} else {", "+\t\t\t\tthis.javadocParser.reportProblems = false;", "+\t\t\t}", "+\t\t\tif (currentElement == null) this.lastJavadocEnd = commentSourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325ebb8a9470feb839fcb4cbe7713525", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChildren(visitor, imports);", "-\t\t\tacceptChildren(visitor, types);", "+\t\t\tacceptChildren(visitor, this.imports);", "+\t\t\tacceptChildren(visitor, this.types);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3266bdb768e0b4d61f8b31ea38154c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchMultipleProjectsTests.java", "commitBeforeChange": "63016ef323780d34fb6d585a2049ef837e238ead", "commitAfterChange": "3cfa0680932675f487a5ce02b3e0eda8b9c152d0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testTypeDeclarationInJar() throws CoreException", "signatureAfterChange": " public void testTypeDeclarationInJar() throws CoreException", "diff": ["-\t\t} finally {", "-\t\tthis.deleteProject(\"P1\");", "-\t\tthis.deleteProject(\"P2\");", "+\t} finally {", "+\t\tdeleteProject(\"P1\");", "+\t\tdeleteProject(\"P2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326d914a53ca1e9bec1ca47a8400b317", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "b15d555969226382f7ca55d85fc45725a266fc8b", "commitAfterChange": "ea2c66d41813ffe0a73e9227d41cf335eedf7fb6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t// Mark all methods between here and the declared type as not static", "-\t\t\tscope.tagAsAccessingInstanceStateOf(this.currentCompatibleType);", "+\t\t\tscope.tagAsAccessingEnclosingInstanceStateOf(this.currentCompatibleType, false /* type variable access */);", "-\t\t\tcheckAccess(scope.methodScope());", "+\t\t\tcheckAccess(scope, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "328acce9603411ccedbab3c63ebfdccd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void setExpectedType(TypeBinding expectedType)", "signatureAfterChange": " \tpublic void setExpectedType(TypeBinding expectedType)", "diff": ["-\t\tif (expectedType == null)", "-\t\t\tthis.expectedType = null; // for reset", "-\t\telse", "-\t\t\tthis.expectedType = this.ellipsisArgument ? ((ArrayBinding) expectedType).elementsType() : expectedType;", "+\t\tthis.expectedType = this.ellipsisArgument ? ((ArrayBinding) expectedType).elementsType() : expectedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "328cd821c506a47d616790e18a83e096", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\t\t\tpos= rewriteNodeList(node, MethodDeclaration.PARAMETERS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tpos= rewriteNodeList(node, MethodDeclaration.PARAMETERS_PROPERTY, pos, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32a7e2f3e6f9a6893eb5f1fe296b2a43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a331916366d31b2eac24fa72c43e85436f424bb2", "commitAfterChange": "92833c2313d3c570c2dffa40d03aa84d01695a1a", "methodNumberBeforeChange": 587, "methodNumberAfterChange": 587, "signatureBeforeChange": " \tpublic void test585()", "signatureAfterChange": " \tpublic void test585()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "-\t\t\t\"\timport java.util.*;\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "-\t\t\t\"The import java.util is never used\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b2611ac70c052051c4c4cba9778d03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 330, "signatureBeforeChange": " \tpublic void test0682() throws JavaModelException", "signatureAfterChange": " \tpublic void test0682() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b70600b6cfda284033aac499da5aa5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void testCompletionMethodDeclaration6() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodDeclaration6() throws JavaModelException", "diff": ["-\t\t\"element:CloneNotSupportedException    completion:CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING),", "+\t\t\"element:CloneNotSupportedException    completion:CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32daf29ce6cf6ecc2cb13177ba90cba3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testAddRemoveClassFile() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddRemoveClassFile() throws JavaModelException, CoreException", "diff": ["-public void testAddRemoveClassFile() throws JavaModelException, CoreException, IOException {", "+public void testAddRemoveClassFile() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32f9532ea612f0611609bd4eb662f7b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 347, "signatureBeforeChange": " public void goForCompilationUnit()", "signatureAfterChange": " public void goForCompilationUnit()", "diff": ["-\tthis.scanner.currentLine= null;", "+\tif (this.scanner.currentLine != null) this.scanner.currentLine.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33430bc330b35c92e0ae888b0a467fd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 573, "methodNumberAfterChange": 573, "signatureBeforeChange": " \tpublic void test554()", "signatureAfterChange": " \tpublic void test554()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3377425da2356473b5f8560389cc1474", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 255, "signatureBeforeChange": " final public void putfield(FieldBinding fieldBinding)", "signatureAfterChange": " final public void putfield(FieldBinding fieldBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tputfield:\"+fieldBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3380b17c440422d8a4183fccaf102152", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public VoidType getVoidType()", "signatureAfterChange": "      public VoidType getVoidType()", "diff": ["-        return VoidTypeImpl.TYPE_VOID;", "+        return _env.getVoidType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33815ff62daff30c6a5f1e0657550229", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void test0423() throws JavaModelException", "signatureAfterChange": " \tpublic void test0423() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3382bcff81cbb35698616ccd7f690dfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void generateReceiver(CodeStream codeStream)", "signatureAfterChange": "  public void generateReceiver(CodeStream codeStream)", "diff": ["-\tif (delegateThis != null) {", "-\t\tcodeStream.getfield(delegateThis); // delegated field access", "+\tif (this.delegateThis != null) {", "+\t\tcodeStream.getfield(this.delegateThis); // delegated field access"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33896d53ff15ba8831ebf084afbe54a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 49, "signatureBeforeChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "signatureAfterChange": " \t \tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement)", "diff": ["+\t", "+\tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement) {", "+\t\tForStatement forStatement = this.ast.newForStatement();", "+\t\tforStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);", "+\t\torg.eclipse.jdt.internal.compiler.ast.Statement[] initializations = statement.initializations;", "+\t\tif (initializations != null) {", "+\t\t\t// we know that we have at least one initialization", "+\t\t\tif (initializations[0] instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) {", "+\t\t\t\tVariableDeclarationExpression variableDeclarationExpression = convertToVariableDeclarationExpression((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) initializations[0]);", "+\t\t\t\tint initializationsLength = initializations.length;", "+\t\t\t\tfor (int i = 1; i < initializationsLength; i++) {", "+\t\t\t\t\tvariableDeclarationExpression.fragments().add(convertToVariableDeclarationFragment((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)initializations[i]));", "+\t\t\t\t}", "+\t\t\t\tif (initializationsLength != 1) {", "+\t\t\t\t\tint start = variableDeclarationExpression.getStartPosition();", "+\t\t\t\t\tint end = ((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) initializations[initializationsLength - 1]).declarationSourceEnd;", "+\t\t\t\t\tvariableDeclarationExpression.setSourceRange(start, end - start + 1);", "+\t\t\t\t}", "+\t\t\t\tforStatement.initializers().add(variableDeclarationExpression);", "+\t\t\t} else {", "+\t\t\t\tint initializationsLength = initializations.length;", "+\t\t\t\tfor (int i = 0; i < initializationsLength; i++) {", "+\t\t\t\t\tExpression initializer = convertToExpression(initializations[i]);", "+\t\t\t\t\tif (initializer != null) {", "+\t\t\t\t\t\tforStatement.initializers().add(initializer);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tforStatement.setFlags(forStatement.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (statement.condition != null) {", "+\t\t\tforStatement.setExpression(convert(statement.condition));", "+\t\t}", "+\t\torg.eclipse.jdt.internal.compiler.ast.Statement[] increments = statement.increments;", "+\t\tif (increments != null) {", "+\t\t\tint incrementsLength = increments.length;", "+\t\t\tfor (int i = 0; i < incrementsLength; i++) {", "+\t\t\t\tforStatement.updaters().add(convertToExpression(increments[i]));\t\t\t\t", "+\t\t\t}", "+\t\t}", "+\t\tforStatement.setBody(convert(statement.action));", "+\t\treturn forStatement;", "+\t}", "-\t", "-\tpublic ForStatement convert(org.eclipse.jdt.internal.compiler.ast.ForStatement statement) {", "-\t\tForStatement forStatement = this.ast.newForStatement();", "-\t\tforStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);", "-\t\torg.eclipse.jdt.internal.compiler.ast.Statement[] initializations = statement.initializations;", "-\t\tif (initializations != null) {", "-\t\t\t// we know that we have at least one initialization", "-\t\t\tif (initializations[0] instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) {", "-\t\t\t\tVariableDeclarationExpression variableDeclarationExpression = convertToVariableDeclarationExpression((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) initializations[0]);", "-\t\t\t\tint initializationsLength = initializations.length;", "-\t\t\t\tfor (int i = 1; i < initializationsLength; i++) {", "-\t\t\t\t\tvariableDeclarationExpression.fragments().add(convertToVariableDeclarationFragment((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)initializations[i]));", "-\t\t\t\t}", "-\t\t\t\tif (initializationsLength != 1) {", "-\t\t\t\t\tint start = variableDeclarationExpression.getStartPosition();", "-\t\t\t\t\tint end = ((org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) initializations[initializationsLength - 1]).declarationSourceEnd;", "-\t\t\t\t\tvariableDeclarationExpression.setSourceRange(start, end - start + 1);", "-\t\t\t\t}", "-\t\t\t\tforStatement.initializers().add(variableDeclarationExpression);", "-\t\t\t} else {", "-\t\t\t\tint initializationsLength = initializations.length;", "-\t\t\t\tfor (int i = 0; i < initializationsLength; i++) {", "-\t\t\t\t\tforStatement.initializers().add(convertToExpression(initializations[i]));", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (statement.condition != null) {", "-\t\t\tforStatement.setExpression(convert(statement.condition));", "-\t\t}", "-\t\torg.eclipse.jdt.internal.compiler.ast.Statement[] increments = statement.increments;", "-\t\tif (increments != null) {", "-\t\t\tint incrementsLength = increments.length;", "-\t\t\tfor (int i = 0; i < incrementsLength; i++) {", "-\t\t\t\tforStatement.updaters().add(convertToExpression(increments[i]));\t\t\t\t", "-\t\t\t}", "-\t\t}", "-\t\tforStatement.setBody(convert(statement.action));", "-\t\treturn forStatement;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ab2d123cff7c3883f8549cd6c52e80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  public void testCompletionVariableInitializerInInitializer4() throws JavaModelException", "signatureAfterChange": "  public void testCompletionVariableInitializerInInitializer4() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d4237b9ae8252d67a56b365ca1e71c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f5ba3eda07b1ea41890a7ce793b9da47e6b4d63e", "commitAfterChange": "af33a2b5d21704fd80790ca573818492aac6d737", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputsInfo outputsInfo)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputsInfo outputsInfo)", "diff": ["-\t\t\t\tif (childRootInfo != null && !childRootInfo.project.getProject().getFullPath().isPrefixOf(childPath)) {", "+\t\t\t\tif (childRootInfo != null && !childRootInfo.isRootOfProject(childPath)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e16c29033384fc3c925bdc9aff016a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DoStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement getBody()", "signatureAfterChange": "  \tpublic Statement getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ee45710ce6d790d381ae8ea128bc59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testAddExternalProject() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddExternalProject() throws JavaModelException, CoreException", "diff": ["-public void testAddExternalProject() throws JavaModelException, CoreException, IOException {", "+public void testAddExternalProject() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33fce55ed3a46688c1df8badf8d9d8c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public MethodBinding getExactConstructor(TypeBinding[] argumentTypes)", "signatureAfterChange": " public MethodBinding getExactConstructor(TypeBinding[] argumentTypes)", "diff": ["-\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3429e5ca328b9c5e3861ff56abf7a3f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 383, "signatureBeforeChange": " \tpublic void test0381() throws JavaModelException", "signatureAfterChange": " \tpublic void test0381() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "342db098d2da0f139ada2f36f18a75f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "f9ea1202585c52eab9fbf39ace7b180e05641d22", "commitAfterChange": "b937013867304581ed64efe453c75af32eec6086", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 581, "signatureBeforeChange": " public void testBug216875g() throws CoreException", "signatureAfterChange": " public void testBug216875g() throws CoreException", "diff": ["-\tthis.resultCollector.showSelection = true;", "-\tthis.resultCollector.showAccess = true;", "-\tthis.resultCollector.showAccuracy = false;", "+\tthis.resultCollector.showSelection();", "+\tthis.resultCollector.showAccess();", "+\tthis.resultCollector.showAccuracy(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343258b051a351cb75ef6faebf9c1a18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\tthis.binding.setConstant(NotAConstant);", "+\t\t\tthis.binding.setConstant(Constant.NotAConstant);", "-\t\t\t\t\t\t: NotAConstant);", "+\t\t\t\t\t\t: Constant.NotAConstant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3455cf300a0e1c9c900f7c724d2100a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resetStateForCodeGeneration()", "signatureAfterChange": "  \tpublic void resetStateForCodeGeneration()", "diff": ["-", "-\t\tthis.breakLabel.resetStateForCodeGeneration();", "-\t\tthis.continueLabel.resetStateForCodeGeneration();", "+\t\tif (this.breakLabel != null) {", "+\t\t\tthis.breakLabel.resetStateForCodeGeneration();", "+\t\t}", "+\t\tif (this.continueLabel != null) {", "+\t\t\tthis.continueLabel.resetStateForCodeGeneration();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "345ae6c73c810d37938e624ddb02b72b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " \tpublic void test0162() throws JavaModelException", "signatureAfterChange": " \tpublic void test0162() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "346d8320fce17e40862a5c1c8a6f9111", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SwitchTest.java", "commitBeforeChange": "e8c9a8ad63c042540bdf2089eae8eda8857cd19d", "commitAfterChange": "44ff943ce2a18d1de59c739946fda0722d1ad727", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testCaseTypeMismatch3()", "signatureAfterChange": " public void testCaseTypeMismatch3()", "diff": ["-\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\"\tswitch(Days.Sunday) {\\n\" + ", "-\t\t\"\t       ^^^^^^^^^^^\\n\" + ", "-\t\t\"The switch on the enum type Days should have a default case\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 13)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3481f9ef14b746166bee1a396416ad10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 244, "signatureBeforeChange": " final public void new_(TypeBinding typeBinding)", "signatureAfterChange": " final public void new_(TypeBinding typeBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tnew:\"+typeBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349a3e1e8a1364d1793b17fe12740cea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          private void addProblem(     \t\tIFile resource,  \t\t    int start,  \t\t\tint end,             Severity severity,              String msg,              int line,             String[] arguments)", "signatureAfterChange": "          private void addProblem(     \t\tIFile resource,  \t\t    int start,  \t\t\tint end,             Severity severity,              String msg,              int line,             String[] arguments)", "diff": ["-    \t// end-1 since IProblem ending offsets are inclusive but DOM layer", "-    \t// ending offsets are exclusive.    \t", "-    \tAPTProblem problem = createProblem(resource, start, end-1, severity, msg, line, arguments);", "+    \t \t", "+    \tAPTProblem problem = createProblem(resource, start, end, severity, msg, line, arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349b844241f1963ec0dc8816910c3840", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test0405() throws JavaModelException", "signatureAfterChange": " \tpublic void test0405() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d15b03e145af5433b7705d4a1410cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void test0024() throws JavaModelException", "signatureAfterChange": " \tpublic void test0024() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f91956654ad510ddc5084b0c873c8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "10d0299472db75b0d2601fb1ed8fd13d430fef5a", "commitAfterChange": "1d1bcfc5dd72fdf22291e7342487bb93d58df5c4", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 106, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\t\ttypesFound);", "+\t\t\t\t\t\t\t\t\ttypesFound,", "+\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34fc84b665d6b638d4b4674700fd19c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 289, "methodNumberAfterChange": 289, "signatureBeforeChange": " \tpublic void test0287() throws JavaModelException", "signatureAfterChange": " \tpublic void test0287() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3516258d8fa60e465a11de0754215362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " \tpublic void test0544() throws JavaModelException", "signatureAfterChange": " \tpublic void test0544() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35391bd42e8b06e929452edbaf2eb48b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getSourceStart()", "signatureAfterChange": " \tpublic int getSourceStart()", "diff": ["-\t\treturn startPosition;", "+\t\treturn this.startPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3545a063da3ee2f8d97f74cef8d92e93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tpublic void test0677() throws JavaModelException", "signatureAfterChange": " \tpublic void test0677() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode node = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354c0554d7d9abc460150a89ac3be8dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "aba731a12d5754d3722992eeb2ed082be09b8902", "commitAfterChange": "6861d9cffc19eeda53468cc5b91c6d6cbe61a3f5", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 580, "signatureBeforeChange": " \tpublic void test561()", "signatureAfterChange": " \tpublic void test561()", "diff": ["+\t\tpreferences.brace_position_for_array_initializer = DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354dac958bb968085679d5ac7f00a773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 361, "signatureBeforeChange": " \tpublic void test0359() throws JavaModelException", "signatureAfterChange": " \tpublic void test0359() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35861492a94e9bf8791b0c56469c046f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public IType createType(String content, IJavaElement sibling, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r public IType createType(String content, IJavaElement sibling, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tString source = \"\"; //$NON-NLS-1$\r", "+\t\tString source = \"\"/*nonNLS*/;\r", "-\t\t\tsource = \"package \" + pkg.getElementName() + \";\"  + JavaModelManager.LINE_SEPARATOR + JavaModelManager.LINE_SEPARATOR; //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\tsource = \"package \"/*nonNLS*/ + pkg.getElementName() + \";\"/*nonNLS*/ + JavaModelManager.LINE_SEPARATOR;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358b98a3728ca9b96b0c4132bba5e0af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic Expression getRightOperand()", "signatureAfterChange": "  \tpublic Expression getRightOperand()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ad4857616111369744f72d9359fbf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CharArrayBuffer.java", "commitBeforeChange": "b1ed81c083235d8bc18d495840647512303d0fb7", "commitAfterChange": "4124c3cf4c37486dba4b6e4dbe3b654b017cc070", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\treturn (contents != null) ? new String(contents) : null;", "+\treturn (contents != null) ? new String(contents) : Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c12a5d4ffd1f18153c18970546234c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testMethodWithError2() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError02() throws CoreException", "diff": ["-public void testMethodWithError2() throws JavaModelException, CoreException {", "+public void testMethodWithError02() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c91cd27f6ea95e41d728b2d4165167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " public void test0198b() throws JavaModelException", "signatureAfterChange": " public void test0198b() throws JavaModelException", "diff": ["-    \t\t\"foo1[ANNOTATION_ATTRIBUTE_REF]{foo1, Ltest0198.ZZAnnot;, I, foo1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-            \"foo2[ANNOTATION_ATTRIBUTE_REF]{foo2, Ltest0198.ZZAnnot;, I, foo2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+    \t\t\"foo1[ANNOTATION_ATTRIBUTE_REF]{foo1, Ltest0198.ZZAnnot;, I, foo1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+            \"foo2[ANNOTATION_ATTRIBUTE_REF]{foo2, Ltest0198.ZZAnnot;, I, foo2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f64a04c73196a25d7f41204259bc4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "402653abbf6df07a839776c5127b35c1c823b730", "commitAfterChange": "5dab0398c0d6854f764e312cc3cc66813d6d2f2e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\tisWhiteSpace = Character.isWhitespace(currentCharacter);", "+\t\t\t\t\tisWhiteSpace = isWhitespace(currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36075e1166c35187f77acd182947594e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 265, "methodNumberAfterChange": 265, "signatureBeforeChange": " \tpublic void test0263() throws JavaModelException", "signatureAfterChange": " \tpublic void test0263() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362d7df077ab9e0db3c0827522e9895b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 214, "signatureBeforeChange": " public void test0204() throws JavaModelException", "signatureAfterChange": " public void test0204() throws JavaModelException", "diff": ["-\t            \"ZZType.ZZAnnotation[TYPE_REF]{p.ZZType.ZZAnnotation, p, Lp.ZZType$ZZAnnotation;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"ZZType.ZZInterface[TYPE_REF]{p.ZZType.ZZInterface, p, Lp.ZZType$ZZInterface;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\",", "+\t            \"ZZType.ZZAnnotation[TYPE_REF]{p.ZZType.ZZAnnotation, p, Lp.ZZType$ZZAnnotation;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"ZZType.ZZInterface[TYPE_REF]{p.ZZType.ZZInterface, p, Lp.ZZType$ZZInterface;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_INTERFACE + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3635a9ac6076d54094ea8e3f64c723fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "5c25bc24b238851bade1684c837193693f04d597", "commitAfterChange": "4af63c78a97854459ffdb3bdd8ea245bbfdb48a7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testAllTypeNames4() throws CoreException", "signatureAfterChange": " public void testAllTypeNames4() throws CoreException", "diff": ["-\t\t\tResourcesPlugin.getWorkspace(),", "-\t\t\tSearchPattern.R_PREFIX_MATCH,", "-\t\t\tfalse, // case insensitive", "+\t\t\tSearchPattern.R_PREFIX_MATCH, // case insensitive"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "364b14360c4d0a3ede3c964ae9a2b773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "874cc60b34062d184abafc157c764e3af128769a", "commitAfterChange": "946979c8e5ddaa5ee72e6c4a1d2d619fb28b1d8f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testExternalJarChanged4() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged4() throws CoreException, IOException", "diff": ["-\t\ttouch(f);", "-\t\tsimulateRestart();", "+\t\ttry {", "+\t\t\ttouch(f);", "+\t\t} finally {", "+\t\t\tsimulateRestart();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "364c31d5d75f61a258d808ab8269895c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 259, "signatureBeforeChange": " \tpublic void test0257() throws JavaModelException", "signatureAfterChange": " \tpublic void test0257() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3690545df1a61f3171a2d2cfd1f826eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "bb7b9521196186c5be108c1f350a453c12233137", "commitAfterChange": "871cac4ba4cecfc6322ce0af5777177652a514a9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tprivate void indent(ASTNode node)", "signatureAfterChange": "  \tprivate void indent(ASTNode node)", "diff": ["-\t\twhile (startIndex > 0 && this.tm.get(startIndex - 1).isComment()", "-\t\t\t\t&& !(node.getParent() instanceof SwitchStatement))", "+\t\twhile (startIndex > 0 && this.tm.get(startIndex - 1).isComment())", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ba2a4e6b9942740a8541b9f97908da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public IBinaryField[] getFields()", "signatureAfterChange": "\r public IBinaryField[] getFields()", "diff": ["-\treturn fields;\r", "+\treturn this.fields;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36cdf8f2d58c4f792dbfb729b7d982d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "0854fe8445ddc30ed993c5f051a33b881d287e7a", "commitAfterChange": "2b2e643f40d1ddff10efda4a07c1923734a6a584", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testBug237469a() throws Exception", "signatureAfterChange": " public void testBug237469a() throws Exception", "diff": ["-\t\tthis.deleteFile(externalJar1);", "-\t\tthis.deleteFile(externalJar2);", "+\t\tthis.deleteExternalFile(externalJar1);", "+\t\tthis.deleteExternalFile(externalJar2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36e191bb826518d77b85afe24181d59e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options) throws IllegalArgumentException", "signatureAfterChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options) throws IllegalArgumentException", "diff": ["-\t\treturn internalRewriteAST(content, lineInfo, lineDelim, commentNodes, options, rootNode);", "+\t\treturn internalRewriteAST(content, lineInfo, lineDelim, commentNodes, options, rootNode, (RecoveryScannerData)((CompilationUnit) astRoot).getStatementsRecoveryData());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ed1d398e04b2e67d45ababd1efe4aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "8873795d3456fd4eb978570ebf0c2587e004407c", "commitAfterChange": "811f4b05d58ca33710b13af0352652814cf9e788", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic String getTypeDoc() throws JavaModelException", "signatureAfterChange": " \tpublic String getTypeDoc() throws JavaModelException", "diff": ["-\t\t\treturn this.content.substring(this.typeDocRange[0], this.typeDocRange[1]);", "+\t\t\treturn String.valueOf(CharOperation.subarray(this.content, this.typeDocRange[0], this.typeDocRange[1]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37005cfca0a42a26370d3e97ec1c0b85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void test0032() throws JavaModelException", "signatureAfterChange": " \tpublic void test0032() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370f86893ad1c63f25f73d3b7b82bc67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "diff": ["-public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType) {", "+public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType) {", "-", "-\t\tReferenceBinding declaringErasure = (ReferenceBinding) declaringClass.erasure();", "-\t\t\tif (currentType.findSuperTypeWithSameErasure(declaringErasure) != null) return true;", "+\t\t\tif (currentType.findSuperTypeWithSameErasure(declaringClass) != null) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "372102dab6ed1d757a588fea7733816b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test0013() throws JavaModelException", "signatureAfterChange": " \tpublic void test0013() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3721d93581fc6e1e4c5d1b0aa6c1976b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": " \tpublic void test0156() throws JavaModelException", "signatureAfterChange": " \tpublic void test0156() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37271bb0a79c68c867bd04c724637797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "952d6b17244ae1d0ee2f63b42ee4e3a1ef3411a9", "commitAfterChange": "9e99dfd97eaf9264bcdd3b675b4c9f32dbc2a956", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \t \tprotected void printDebug(CompletionProposal proposal)", "signatureAfterChange": " \t \tprotected void printDebug(CompletionProposal proposal)", "diff": ["-\t\tbuffer.append(\"\\tDeclarationUniqueKey[\").append(proposal.getDeclarationUniqueKey() == null ? \"null\".toCharArray() : proposal.getDeclarationUniqueKey()).append(\"]\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuffer.append(\"\\tDeclarationKey[\").append(proposal.getDeclarationKey() == null ? \"null\".toCharArray() : proposal.getDeclarationKey()).append(\"]\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuffer.append(\"\\tUniqueKey[\").append(proposal.getUniqueKey() == null ? \"null\".toCharArray() : proposal.getUniqueKey()).append(\"]\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuffer.append(\"\\tKey[\").append(proposal.getKey() == null ? \"null\".toCharArray() : proposal.getKey()).append(\"]\\n\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3759220936482ed465817ddaf23d8e58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 405, "methodNumberAfterChange": 405, "signatureBeforeChange": " \tpublic void test386()", "signatureAfterChange": " \tpublic void test386()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "375c7ae8683d1519549c743f9c5c18b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "c79bfbeb67e4687c48de7885eb121ce1ea14c01f", "commitAfterChange": "ff61aa704b87289ea0c126beac8453107bd32bdf", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprotected void setUp () throws Exception", "signatureAfterChange": " \tprotected void setUp () throws Exception", "diff": ["-\t}", "+//\t}", "-\t\tif (discard) workingCopies = null;", "-\t\tdiscard = true;", "+//\t\tif (discard) workingCopies = null;", "+//\t\tdiscard = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3764b00052e070d339163de4c19a65ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "402efdad32ca46dbbf55428894e2c90ecbab1ee7", "commitAfterChange": "c9aad4acd8f81ce40a05f5d7cf14d54593460190", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public static void flushDirectoryContent(File dir)", "signatureAfterChange": " public static void flushDirectoryContent(File dir)", "diff": ["-\t\t\tcurrent.delete();", "+\t\t\tif (!current.delete()) ", "+\t\t\t\tSystem.err.println(\"Could not delete \" + current.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3765b376ca1f4e193897e474b0eab2d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 135, "signatureBeforeChange": " final public void if_acmpne(Label lbl)", "signatureAfterChange": " final public void if_acmpne(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_acmpne:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376ea79d38513208e4ce1cd270624ede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 279, "signatureBeforeChange": " \tpublic void test0277() throws JavaModelException", "signatureAfterChange": " \tpublic void test0277() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3797c37e2c26c5e8d979a62c4488bf1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic SelectionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tISelectionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic SelectionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tISelectionRequestor requestor,\r \t\tMap settings)", "diff": ["-\t\tthis.parser = new SelectionParser(problemReporter, options.getAssertMode());\r", "+\t\tthis.parser = new SelectionParser(problemReporter, options.assertMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37cab26793bbd17be0a3ee09631afea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding)", "signatureAfterChange": "  void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding)", "diff": ["+\tif (this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t// FIXME(stephan): the following code could be used as a stop-gap measure to hook type annotation tagBits into our existing analysis:", "+//\t\tmethodBinding.tagBits |= (methodBinding.returnType.tagBits & TagBits.AnnotationNullMASK);", "+//\t\tTypeBinding[] parameters = methodBinding.parameters;", "+//\t\tint numVisibleParams = parameters.length;", "+//\t\tfor (int j = 0; j < numVisibleParams; j++) {", "+//\t\t\tif ((parameters[j].tagBits & TagBits.AnnotationNonNull) != 0) {", "+//\t\t\t\tif (methodBinding.parameterNonNullness == null)", "+//\t\t\t\t\tmethodBinding.parameterNonNullness = new Boolean[numVisibleParams];", "+//\t\t\t\tmethodBinding.parameterNonNullness[j] = Boolean.TRUE;", "+//\t\t\t\tbreak;", "+//\t\t\t} else if ((parameters[j].tagBits & TagBits.AnnotationNullable) != 0) {", "+//\t\t\t\tif (methodBinding.parameterNonNullness == null)", "+//\t\t\t\t\tmethodBinding.parameterNonNullness = new Boolean[numVisibleParams];", "+//\t\t\t\tmethodBinding.parameterNonNullness[j] = Boolean.FALSE;", "+//\t\t\t\tbreak;", "+//\t\t\t}", "+//\t\t}", "+\t\t// END", "+\t\treturn; // not using method.tagBits and parameterNonNullness when we have type annotations.", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37e001d595fc3d759c32bbc5d9ee7829", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic IndexedFile getCurrentFile() throws IOException", "signatureAfterChange": " \tpublic IndexedFile getCurrentFile()", "diff": ["-\tpublic IndexedFile getCurrentFile() throws IOException {", "+\tpublic IndexedFile getCurrentFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38167a2762c059c4adcc87bad79b49e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, IntBinding, ClassFileConstants.AccDefault, false);", "+\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, TypeBinding.INT, ClassFileConstants.AccDefault, false);", "-\t\t\t\t\tthis.maxVariable = new LocalVariableBinding(SecretMaxVariableName, IntBinding, ClassFileConstants.AccDefault, false);", "+\t\t\t\t\tthis.maxVariable = new LocalVariableBinding(SecretMaxVariableName, TypeBinding.INT, ClassFileConstants.AccDefault, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381e7dd0dd9721e20f3b539a1b24e563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Case.java", "commitBeforeChange": "0f9212b9e8c6c9be4e691991703e7cd712b33a1f", "commitAfterChange": "338d40a986ae11da05f7ed006e0f54f68eeda642", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\r", "+\tthis.constantExpression.analyseCode(currentScope, flowContext, flowInfo);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38261f7571305d1af173f470dcccb9d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test0447() throws JavaModelException", "signatureAfterChange": " \tpublic void test0447() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38274e1d307bbd0c276bf77bf3326849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "fc721b0d05a1b41882a9e789b6c18dcfadfbf732", "commitAfterChange": "69458def708eedff53dace674666304d76a16916", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void testDefaultFlag1() throws JavaModelException", "signatureAfterChange": " public void testPackageDefaultFlag1() throws JavaModelException", "diff": ["- */", "-public void testDefaultFlag1() throws JavaModelException {", "-\tIField field = this.cu.getType(\"X\").getField(\"f4\");", "-\tassertTrue(\"X#f4 should have no flags\", Flags.isDefault(field.getFlags()));", "-}", "+ */", "+public void testPackageDefaultFlag1() throws JavaModelException {", "+\tIField field = this.cu.getType(\"X\").getField(\"f4\");", "+\tassertTrue(\"X#f4 should be package default\", Flags.isPackageDefault(field.getFlags()));", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382ac2dd82b7f9c7799bac64d7c055d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["+\t\t\t\t\t\t\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);", "+\t\t\t\t\t\t\tpushOnGenericsLengthStack(0);", "+\t\t\t\t\t\t\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);", "+\t\t\t\t\t\t\tpushOnGenericsLengthStack(0);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\tpushOnGenericsLengthStack(0);", "+\t\t\t\t\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38348fa65c636e228ad557ad64707166", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "07caed5f78ad25578ab555e866b372847e0874ac", "commitAfterChange": "8dc654c69848bfee0c53ed6a2c020e49ed6b932f", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["+\t\t\t\t\tUtil.log(e, \"Could not persist container \" + containerPath + \" for project \" + project.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3843eb96e2a179110833e25b7c2e854d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 352, "methodNumberAfterChange": 352, "signatureBeforeChange": " \tpublic void test0350() throws JavaModelException", "signatureAfterChange": " \tpublic void test0350() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "385eae3fa57686e5dea85c4b9c408762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void duplicateTargetInTargetAnnotation(TypeBinding annotationType, NameReference reference)", "signatureAfterChange": " public void duplicateTargetInTargetAnnotation(TypeBinding annotationType, NameReference reference)", "diff": ["-\t\tfieldSourceStart(field, reference),", "-\t\tfieldSourceEnd(field, reference)); ", "+\t\tnodeSourceStart(field, reference),", "+\t\tnodeSourceEnd(field, reference)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38670d1f394c04d47b7b6de1397c224b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testSearchWithExcludedCompilationUnit1() throws CoreException", "signatureAfterChange": " public void testSearchWithExcludedCompilationUnit1() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tthis.createFile(", "+\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tcreateFile("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "386bbaa0b625f4f944b64d7d0d91e9cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "89ecdabb7bbf2a96d3a2c49d89d84298781fb994", "commitAfterChange": "6ec2bf68626c3baaf2de76ad471eae21612974d2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t(currentCharacter == ' ') || isWhitespace(currentCharacter); ", "+\t\t\t\t\t\t(currentCharacter == ' ') || CharOperation.isWhitespace(currentCharacter); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "386cb4866032dff9daf50a7a48a39858", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnumConstantDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38835e7ee77a14819e6189bb67f81ff3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 61, "signatureBeforeChange": " public final boolean isUsed()", "signatureAfterChange": " public final boolean isUsed()", "diff": ["- */", "-public final boolean isUsed() {", "-\treturn (modifiers & ExtraCompilerModifiers.AccLocallyUsed) != 0;", "+ */", "+public final boolean isUsed() {", "+\treturn (this.modifiers & ExtraCompilerModifiers.AccLocallyUsed) != 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3885782b6e6fc3ac9b15315e496627fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "89ecdabb7bbf2a96d3a2c49d89d84298781fb994", "commitAfterChange": "6ec2bf68626c3baaf2de76ad471eae21612974d2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\tisWhiteSpace = isWhitespace(currentCharacter);", "+\t\t\t\t\tisWhiteSpace = CharOperation.isWhitespace(currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3896ef726620086d162a148c14e77cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "c6961acc233e64a82278d28e67157307632639ee", "commitAfterChange": "f0a2b85aaf6b088579e27d2ecfb4517d7d426ed6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " final int findInImports(String qualifier, String name, int kind)", "signatureAfterChange": " final int findInImports(String qualifier, String name, int kind)", "diff": ["-\t\t\tString fMainTypeName= concatenateName(fPackageName, mainTypeSimpleName);", "+\t\t\tString fMainTypeName= Util.concatenateName(fPackageName, mainTypeSimpleName, '.');", "-\t\t\t\t\t\t\t|| fMainTypeName.equals(concatenateName(qualifier, name))))", "+\t\t\t\t\t\t\t|| fMainTypeName.equals(Util.concatenateName(qualifier, name, '.'))))", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "389a0b63e379a681121705c18cc76f41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b0a84fb1f4eb0062d65eb45e126c50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 254, "signatureBeforeChange": " \tpublic void test0252() throws JavaModelException", "signatureAfterChange": " \tpublic void test0252() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b1bf7c4aca960eafc9b3c0ccb25de3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b6a2d5279700d363ad3e849723a69f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 472, "methodNumberAfterChange": 472, "signatureBeforeChange": " \tpublic void test453()", "signatureAfterChange": " \tpublic void test453()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c6e07ccf17dd68282cc8407c09d3ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "41f0e0054ad6ecc1ea34b869c24b09b45fb10ff6", "commitAfterChange": "57f71dbcbb6986e1c76d51b49e788951c6fe709e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public boolean isBasedOn(IResource resource)", "signatureAfterChange": "\r public boolean isBasedOn(IResource resource)", "diff": ["-\tif (isDestroyed) {\r", "+\tif (this.managedCount == 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38de5d1fcb0f4759e43a1ddfc0ec8e99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "c50c590bab482d39145c20debd2941d0e0bbc56e", "commitAfterChange": "ff8854dc7ced090ef02c4af9dd40d2f94e485bfd", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "diff": ["-\t\t\taction.traverse(this, scope);", "+\t\t\tif (action instanceof Block) {", "+\t\t\t\taction.traverse(this, scope);", "+\t\t\t} else {", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tthis.scribe.indent();", "+\t\t\t\taction.traverse(this, scope);", "+\t\t\t\tthis.scribe.unIndent();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e8523b560ce04e81952a9193bd3109", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "899a418e0bf3e36d6dac43bcc6c5d01faf276ffa", "commitAfterChange": "4290429124585b2062eb27c7d8090699b88a136f", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  \tprivate void printJavadocText( FormatJavadocText text, FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block)", "diff": ["-\tprivate void printJavadocText( FormatJavadocText text, FormatJavadocBlock block) {", "+\tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block) {", "-\t\tboolean textOnNewLine = (block.isParamTag() && this.formatter.preferences.comment_insert_new_line_for_parameter) || !block.hasTextOnTagLine();", "+\t\tboolean textOnNewLine = text == block.nodes[0] && block.isParamTag() && (this.formatter.preferences.comment_insert_new_line_for_parameter || !block.hasTextOnTagLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38ffc4bf8355365503a96c94aaac3068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void test062()", "signatureAfterChange": " \tpublic void test062()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39096de41d4cb37d0ad6bbcf820d05cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test0421() throws JavaModelException", "signatureAfterChange": " \tpublic void test0421() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "391b3470dcea2a8ada8547a5ff91b6f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 255, "signatureBeforeChange": " public void missingDeprecatedAnnotationForField(FieldDeclaration field)", "signatureAfterChange": " public void missingDeprecatedAnnotationForField(FieldDeclaration field)", "diff": ["-\t\tfieldSourceStart(binding, field),", "-\t\tfieldSourceEnd(binding, field));", "+\t\tnodeSourceStart(binding, field),", "+\t\tnodeSourceEnd(binding, field));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392a94b3a7e48ef496648d86544f34db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic List fragments()", "signatureAfterChange": "  \tpublic List fragments()", "diff": ["-\t\treturn variableDeclarationFragments;", "+\t\treturn this.variableDeclarationFragments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "393e9f1e71a8efe83a53a8e3745b73b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void createClasspathArgument(Commandline cmd, Path classpath)", "signatureAfterChange": " \tprivate void createClasspathArgument(Commandline cmd, Path classpath)", "diff": ["-\t\t\targ.setValue(\"\"); //$NON-NLS-1$", "+\t\t\targ.setValue(Util.EMPTY_STRING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3941d01bbfac925e26532996dc8e4c2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "aba731a12d5754d3722992eeb2ed082be09b8902", "commitAfterChange": "6861d9cffc19eeda53468cc5b91c6d6cbe61a3f5", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 579, "signatureBeforeChange": " \tpublic void test560()", "signatureAfterChange": " \tpublic void test560()", "diff": ["+\t\tpreferences.brace_position_for_array_initializer = DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3956729686c71c226478663eebf5dbf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "8cb541445a60df0cc8244f7bb091d1f12632b37f", "commitAfterChange": "7cb036f969007a8d8602358c2ef2fc801f7c2a88", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\tif (focusBinaryBinding == null) return;", "+\t\t\tif (focusBinaryBinding == null) ", "+\t\t\t\treturn;", "+\t\tif (TypeHierarchy.DEBUG)", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "395f67ec274fd6df3cbfcc56d9eeb6c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic static IClasspathEntry newVariableEntry( \t\tIPath variablePath, \t\tIPath variableSourceAttachmentPath, \t\tIPath variableSourceAttachmentRootPath, \t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newVariableEntry( \t\tIPath variablePath, \t\tIPath variableSourceAttachmentPath, \t\tIPath variableSourceAttachmentRootPath, \t\tboolean isExported)", "diff": ["+\t\t\tnull, // specific output folder", "+\t\t\tfalse, // clean"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397334a234d686f2d6ccd99ee7c51ebb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "b563418d93eec2da6677a571df66b1935d42fd25", "commitAfterChange": "02c8c645cc641f3a218ba49ed2af363595d8cbab", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["-\tint fieldCount = fields == null ? 0 : fields.length;", "-\tint methodCount = methods == null ? 0 : methods.length;", "-\tint memberTypeCount = memberTypes == null ? 0 : memberTypes.length;", "+\tint fieldCounter = fields == null ? 0 : fields.length;", "+\tint methodCounter = methods == null ? 0 : methods.length;", "+\tint memberTypeCounter = memberTypes == null ? 0 : memberTypes.length;", "-\t\t\t\tint modifiers = typeDeclaration.modifiers;", "-\t\t\t\tboolean deprecated = (modifiers & AccDeprecated) != 0; // remember deprecation so as to not lose it below", "+\t\t\t\tint currentModifiers = typeDeclaration.modifiers;", "+\t\t\t\tboolean deprecated = (currentModifiers & AccDeprecated) != 0; // remember deprecation so as to not lose it below", "-\t\t\t\t\tdeprecated ? (modifiers & AccJustFlag) | AccDeprecated : modifiers & AccJustFlag, ", "+\t\t\t\t\tdeprecated ? (currentModifiers & AccJustFlag) | AccDeprecated : currentModifiers & AccJustFlag, ", "-\twhile ((fieldIndex < fieldCount)", "-\t\t|| (memberTypeIndex < memberTypeCount)", "-\t\t|| (methodIndex < methodCount)) {", "+\twhile ((fieldIndex < fieldCounter)", "+\t\t|| (memberTypeIndex < memberTypeCounter)", "+\t\t|| (methodIndex < methodCounter)) {", "-\t\tif (fieldIndex < fieldCount) {", "+\t\tif (fieldIndex < fieldCounter) {", "-\t\tif (methodIndex < methodCount) {", "+\t\tif (methodIndex < methodCounter) {", "-\t\tif (memberTypeIndex < memberTypeCount) {", "+\t\tif (memberTypeIndex < memberTypeCounter) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398e440ea9da448375aa9d23936a24ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testPerfScannerOneFile() throws InvalidInputException, IOException", "signatureAfterChange": " \tpublic void testScanner() throws InvalidInputException, IOException", "diff": ["-\tpublic void testPerfScannerOneFile() throws InvalidInputException, IOException {", "+\tpublic void testScanner() throws InvalidInputException, IOException {", "-\t\ttagAsSummary(\"Compile>Scan>Src:parser>Options:Default\", Dimension.CPU_TIME, true); // put in fingerprint", "+\t\ttagAsSummary(\"Compile>Scan>Parser>Default\", true); // put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39a58430bf014613e2c2a87715d5d789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " \tpublic void test0151() throws JavaModelException", "signatureAfterChange": " \tpublic void test0151() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39c59308c88dece570f3ec4a2fe49aff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " \tpublic void test0113() throws JavaModelException", "signatureAfterChange": " \tpublic void test0113() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0fe7188211b21b0188b01dbbb50b62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "d125ece72c2ad46b856092bcf90700e8a503dcbf", "commitAfterChange": "56c0bf99b827834b2ab899166e7fa7cb0b5042d7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " private boolean checkRecoveredMethod()", "signatureAfterChange": " private boolean checkRecoveredMethod()", "diff": ["-\t\tif (lastErrorEndPosition <= cursorLocation+1", "+\t\tif (lastErrorEndPosition <= cursorLocation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a4274d9fdfe0db629bdcf3c49789b8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RunCompletionModelTests.java", "commitBeforeChange": "6acf9b31e0f4fe4bc956ec43aedefcc09e485bb3", "commitAfterChange": "2ee73279867ea28c543d7870cc3c68615c7dee12", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Class[] getTestClasses()", "signatureAfterChange": "  \tpublic static Class[] getTestClasses()", "diff": ["-\t\tif (AbstractJavadocCompletionModelTest.WRITE_DIR == null && !ONLY_JAVADOC) {", "+\t\tif (!ONLY_JAVADOC) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6dd2edacc06dfa45aaf715d90e7272", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  public void testCompletionFieldInitializer3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFieldInitializer3() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab725215006d7fed38374dc454d5d1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnClassLiteralAccess.java", "commitBeforeChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "commitAfterChange": "f08042169ed40835df5f51519ff1fa8d2ac0cd70", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\treturn type.print(0, output).append('.').append(completionIdentifier).append('>');", "+\t\treturn this.type.print(0, output).append('.').append(this.completionIdentifier).append('>');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad80bb71357d6c2fd123adec933aad6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test0402() throws JavaModelException", "signatureAfterChange": " \tpublic void test0402() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae445171299e8152a5ccaff7e98e173", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic List arguments()", "signatureAfterChange": "  \tpublic List arguments()", "diff": ["-\t\treturn arguments;", "+\t\treturn this.arguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae723efd22cb870f2e46104458b1010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "235acd4d55a5d1530017bd02392adee980469a8e", "commitAfterChange": "440b4b521b7797502e0cf79a706cec62e93966a5", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \tprivate int retrieveEndOfDimensionsPosition(int start, int end)", "signatureAfterChange": "\r \tprivate int retrieveEndOfDimensionsPosition(int start, int end)", "diff": ["+\t */\r", "-\t\tint dimensions = 0;\r", "-\t\tint foundPosition = start;\r", "+\t\tint foundPosition = -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af43a2851fcb41aa466993b1275bf1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "8f1a95e5900cf1bf71049d8b9899635ac35610ff", "commitAfterChange": "7c0534e311ca23dad63801edecab8ecfaf54c055", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "\r \t\r \tpublic BreakStatement convert(Break statement)", "signatureAfterChange": "\r \t\r \tpublic BreakStatement convert(Break statement)", "diff": ["-\t\t\tbreakStatement.setLabel(this.ast.newSimpleName(new String(statement.label)));\r", "+\t\t\tSimpleName name = this.ast.newSimpleName(new String(statement.label));\r", "+\t\t\tretrieveIdentifierAndSetPositions(statement.sourceStart, statement.sourceEnd, name);\r", "+\t\t\tbreakStatement.setLabel(name);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0051b89d27fd4a581ff69439fb6056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "e342cd2d0c93aadcf34a9afec0eff830877b0663", "commitAfterChange": "adea98ed011d27da43cf2449c494311be618614f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void buildTypeBindings(AccessRestriction accessRestriction)", "signatureAfterChange": " void buildTypeBindings(AccessRestriction accessRestriction)", "diff": ["+\t\t\t// this is now a warning since a package does not really 'exist' until it contains a type, see JLS v2, 7.4.3", "-\t\t\tcontinue nextType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b00cc70a44b8ade5ea72f3f9e6a9858", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t&& (condition.constant == NotAConstant)", "+\t\t\t&& (condition.constant == Constant.NotAConstant)", "-\t\tif ((condition != null) && (condition.constant == NotAConstant)) {", "+\t\tif ((condition != null) && (condition.constant == Constant.NotAConstant)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0bdc3b6bdfbfd0478b014fe9f22b89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ObjectCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int size()", "signatureAfterChange": " public int size()", "diff": ["-\treturn elementSize;", "+\treturn this.elementSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b392939a3668aed974a0c5972352c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void test0514() throws JavaModelException", "signatureAfterChange": " \tpublic void test0514() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b6c496e8cf023fd5749501def88c75c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void test0095() throws JavaModelException", "signatureAfterChange": " \tpublic void test0095() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b77c444b08df504e0a905b50bb23e6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test0015() throws JavaModelException", "signatureAfterChange": " \tpublic void test0015() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b8d115fdf6afceb3d33ecaf36489a14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public char[] getSuperclassName()", "signatureAfterChange": " public char[] getSuperclassName()", "diff": ["-\tif (this.handle.getElementName().length() == 0) { // if anonymous type", "+\tif (isAnonymous()) { // if anonymous type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b9bf56af0d8d7f11d77401dca82293e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 745, "methodNumberAfterChange": 748, "signatureBeforeChange": " \tpublic void test712()", "signatureAfterChange": " \tpublic void test712()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba9ab0bcc959425a6ed4bc24d715794", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic void test0523() throws JavaModelException", "signatureAfterChange": " \tpublic void test0523() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be1fd002ae10adb14b86299246a9eda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 333, "methodNumberAfterChange": 333, "signatureBeforeChange": " \tpublic void test0685() throws JavaModelException", "signatureAfterChange": " \tpublic void test0685() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bf50dd10f9edd07cc1be0e5f269f42c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test0056() throws JavaModelException", "signatureAfterChange": " \tpublic void test0056() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bf76b077ac79a52aa5a3727f7981a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionRecoveryTest.java", "commitBeforeChange": "523ea3b2c64428d6b9f9d9783cbb0776a4263765", "commitAfterChange": "19e8b378f3973cba5b6ddd20330ed251678b8a37", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test14()", "signatureAfterChange": " public void test14()", "diff": ["-\t\tNONE,", "+\t\t\"\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c11ab627aaec1ab9dd84ef856dfbfba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "1348bf3232f6ef4a567f23710b6f05d6366e90ff", "commitAfterChange": "84eba2ceb4c4828ad681b6374034160ffda08eef", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tprotected void beginToCompile(ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \tprotected void beginToCompile(ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tnew CompilationResult(sourceUnits[i], i, maxUnits);\r", "+\t\t\t\tnew CompilationResult(sourceUnits[i], i, maxUnits, this.options.maxProblemsPerUnit);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c27b1eef73ecd9c3f736299d774ec55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 584, "signatureBeforeChange": " \tpublic void test546()", "signatureAfterChange": " \tpublic void test546()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c2eb29f1479357b4102ecb58c13930d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 629, "methodNumberAfterChange": 632, "signatureBeforeChange": " \tpublic void test595()", "signatureAfterChange": " \tpublic void test595()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c345a88e7af40eac7163030ef37eb34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testMethodWithError4() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError4() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, true, null, myMonitor);", "+\tthis.workingCopy.reconcile(0, true, null, myMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c514cb852e45fda162da2f78f6083c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 49, "signatureBeforeChange": " public final boolean isDeprecated()", "signatureAfterChange": " public final boolean isDeprecated()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccDeprecated) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccDeprecated) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c5723a22f14701b7a98cbcab33229d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "2a2935d5ba546500d563cc08921b53e5b286cdf8", "commitAfterChange": "2d9dc5098273e0e95832d81d735d2d77249738ef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\t\ttrue/*index local declarations*/,", "-\t\t\ttrue/*optimize string literals*/);", "+\t\t\ttrue, // index local declarations", "+\t\t\ttrue, // optimize string literals", "+\t\t\tfalse); // do not use source javadoc parser to speed up parsing", "+\t\tparser.javadocParser.reportProblems = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c737ce7bee52537368381d3f0d2a68d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "7797096336d167760ec7955fb6a19b2897e639df", "commitAfterChange": "2644ed448d205d4df42080128a051b031dcbdd4c", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": "  public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessMethod)", "signatureAfterChange": "  public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessMethod)", "diff": ["-\t\tinvoke(Opcodes.OPC_invokestatic, targetMethod, null /* default declaringClass */);", "+\t\tinvoke(Opcodes.OPC_invokestatic, targetMethod, accessMethod.declaringClass); // target method declaring class may not be accessible (128563)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c90e392658e9c123ac6c651f56dd555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic boolean isOnClasspath(IResource resource)", "signatureAfterChange": " \tpublic boolean isOnClasspath(IResource resource)", "diff": ["-\t\t\tclasspath = this.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\tclasspath = this.getResolvedClasspath();", "+\t\t}", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c91bbcf8e3e84caa0479173f40a9e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "535178e6ff3c7be5f5cdc90d8a470557840e3a3e", "commitAfterChange": "cdbb23d25684170107e611f9ad2770f482d2dd3b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private static void buildFilesForStatementsRecoveryFilter( \t\tString filename, \t\tchar[] newNonTerminalIndex, \t\tchar[] newLhs, \t\tString[] tokens) throws IOException", "signatureAfterChange": " private static void buildFilesForStatementsRecoveryFilter( \t\tString filename, \t\tchar[] newNonTerminalIndex, \t\tchar[] newLhs, \t\tString[] tokens)", "diff": ["-\t\tString[] tokens) throws IOException {", "+\t\tString[] tokens) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb325b4b6c1ada6486392551a1816fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 374, "signatureBeforeChange": " \tpublic void test0716()", "signatureAfterChange": " \tpublic void test0716()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb68259fecd48376b7e5772a213a238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void testCompletionAmbiguousType() throws JavaModelException", "signatureAfterChange": " public void testCompletionAmbiguousType() throws JavaModelException", "diff": ["-\t\t\"element:ABC    completion:p1.ABC    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:ABC    completion:p2.ABC    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME+ R_NON_RESTRICTED),", "+\t\t\"element:ABC    completion:p1.ABC    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\"element:ABC    completion:p2.ABC    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_NAME+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cbf5bba2a7d6ce40160f40c43151cda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "e1a4dd76a1096e4a9ca316a8229a1b7d5fbaaa3a", "commitAfterChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["-\t\t\tthis.project.resolveClasspath(perProjectInfo);", "+\t\t\tthis.project.resolveClasspath(perProjectInfo, false/*don't use previous session values*/);", "-\t\t\t\tnewResolvedClasspath = perProjectInfo.resolvedClasspath;", "+\t\t\t\tnewResolvedClasspath = perProjectInfo.getResolvedClasspath();", "-\t\t\t\tthis.project.resolveClasspath(temporaryInfo);", "+\t\t\t\tthis.project.resolveClasspath(temporaryInfo, false/*don't use previous session values*/);", "-\t\t\t\tnewResolvedClasspath = temporaryInfo.resolvedClasspath;", "+\t\t\t\tnewResolvedClasspath = temporaryInfo.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce2ea7be3c80d1ae0e2b869151c68bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 426, "methodNumberAfterChange": 426, "signatureBeforeChange": " \tpublic void test408()", "signatureAfterChange": " \tpublic void test408()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ceaa120c7a192b8f348939b23794806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " \tpublic void test0208() throws JavaModelException", "signatureAfterChange": " \tpublic void test0208() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cecc7a2520f597253ea7d03a5ce36c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "48cc83ca64e25de154567688d6d5a836b273bee1", "commitAfterChange": "fdcb8050ac88fb7d983b388fab655bdfe87bdbf6", "methodNumberBeforeChange": 1062, "methodNumberAfterChange": 1062, "signatureBeforeChange": " public void test1050()", "signatureAfterChange": " public void test1050()", "diff": ["-\tif (System.getProperty(\"java.version\").startsWith(\"1.6\")) {", "+\tif (isJRELevel(\"1.6\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cfc08d15f67f95288e6afe6af5d21ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "ae21fbfba4168c94ed6cac704b2407f6ca281cab", "commitAfterChange": "502428a56ac1c33f406a983668ed7a632d288c0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public char[] getIndexKey()", "signatureAfterChange": " public char[] getIndexKey()", "diff": ["-\treturn encodeIndexKey(this.name, getMatchMode());", "+\treturn this.name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d156d5dcd2794acc7a7161427d2c2da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public CompilationUnit[] getCompilationUnits() \tthrows InvalidInputException", "signatureAfterChange": " public CompilationUnit[] getCompilationUnits() \tthrows InvalidInputException", "diff": ["-\tif (\"\".equals(defaultEncoding)) //$NON-NLS-1$", "+\tif (Util.EMPTY_STRING.equals(defaultEncoding))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d174ddbe67a37566c3223d556de6dec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 322, "signatureBeforeChange": " \tpublic void test0320() throws JavaModelException", "signatureAfterChange": " \tpublic void test0320() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d291c2eb0017cbe007aa171fa4700ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tresourceBinding.closeTracker = null;", "+\t\t\t\t// keep the tracking variable in the resourceBinding in order to prevent creating a new one while analyzing the try block", "-\t\t\t\tresourceBinding.closeTracker = null;", "+\t\t\t\t// keep the tracking variable in the resourceBinding in order to prevent creating a new one while analyzing the try block"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d366b85b89d1704e44676fda9aa6de5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testEditExtendsSourceType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testEditExtendsSourceType() throws JavaModelException, CoreException", "diff": ["-public void testEditExtendsSourceType() throws JavaModelException, CoreException, IOException {", "+public void testEditExtendsSourceType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4263f2493912c1be3c20612ae8a63f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tpublic void test0527() throws JavaModelException", "signatureAfterChange": " \tpublic void test0527() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4e9bfdc4e1ba7bc720b877c931f186", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "2ad6c9873d8d19efdf73fb8e64b60bd8b24c6d89", "commitAfterChange": "143c789fe4fb91d2b7cc75f77ac1afba5a634e70", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "signatureAfterChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "diff": ["+\t\t\t\tcase (int) UnusedImport :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d76e1103056e9286e9090526e5cb16a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 305, "methodNumberAfterChange": 305, "signatureBeforeChange": " \tpublic void test0303() throws JavaModelException", "signatureAfterChange": " \tpublic void test0303() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d94b26bc4981d573e2236be265943df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void testAccessRestriction10() throws Exception", "signatureAfterChange": " public void testAccessRestriction10() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db3a7b501ddf25203105e9246cbe0b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " \tpublic void test0185() throws JavaModelException", "signatureAfterChange": " \tpublic void test0185() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddc98a0e2e9428d89b9da6175410fdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "bdfcbb6fac28ce2d615a792c6b96756fd4d8d082", "commitAfterChange": "d285a739d23e3f82b667be77d5bebf56b7f90214", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic WordEntry getCurrentWordEntry() throws IOException", "signatureAfterChange": " \tpublic WordEntry getCurrentWordEntry()", "diff": ["-\tpublic WordEntry getCurrentWordEntry() throws IOException {", "+\tpublic WordEntry getCurrentWordEntry() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de0d723e1f1437d58e79ca2d6156e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParenthesizedExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de5971f3c4709b5e4ac0fa024b8e6fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalPackageFragmentRoot.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic IResource resource(PackageFragmentRoot root)", "signatureAfterChange": " \t \tpublic IResource resource(PackageFragmentRoot root)", "diff": ["-\t\t\treturn (IResource) (this.resource = JavaModelManager.getExternalManager().getFolder(this.externalPath));", "+\t\t\treturn this.resource = JavaModelManager.getExternalManager().getFolder(this.externalPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df5b1bf4214d26d4340b34fbc5cfe5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\tString currentArg = \"\"; //$NON-NLS-1$", "+\tString currentArg = Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e0ca9cc0d13a7318852c30fb09a03e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ReturnStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\treturn optionalExpression;", "+\t\treturn this.optionalExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e18ae7a03532db1cd5d81e12c292b55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 270, "signatureBeforeChange": " \tpublic void test0625()", "signatureAfterChange": " \tpublic void test0625()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, source, \"Test.java\", project); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(getJLS3(), source, \"Test.java\", project); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e22dbdb4a6772ad4fdadd0d10c47f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e31cb69bdfb950528fada57fbb94e72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 201, "signatureBeforeChange": " public void test0196b() throws JavaModelException", "signatureAfterChange": " public void test0196b() throws JavaModelException", "diff": ["-    \t\t\"foo1[ANNOTATION_ATTRIBUTE_REF]{foo1, Ltest0196.ZZAnnot;, I, foo1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-            \"foo2[ANNOTATION_ATTRIBUTE_REF]{foo2, Ltest0196.ZZAnnot;, I, foo2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+    \t\t\"foo1[ANNOTATION_ATTRIBUTE_REF]{foo1, Ltest0196.ZZAnnot;, I, foo1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+            \"foo2[ANNOTATION_ATTRIBUTE_REF]{foo2, Ltest0196.ZZAnnot;, I, foo2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e35f6768bbc1c84b5ee6b175c4eaee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchMessagerImpl.java", "commitBeforeChange": "c862962851317aa4f8381f94c14dfd8552af8943", "commitAfterChange": "37843798fe45653980f2b49b68c9aaf82a2a678a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic BatchMessagerImpl(ProblemReporter reporter)", "signatureAfterChange": "  \tpublic BatchMessagerImpl(Main compiler)", "diff": ["-\tpublic BatchMessagerImpl(ProblemReporter reporter) {", "-\t\t//TODO: is a problem reporter what we need??  ", "-\t\t//_problemReporter = reporter;", "+", "+\tpublic BatchMessagerImpl(Main compiler) {", "+\t\t_compiler = compiler;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3f0da494b874617bf25267853853f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/FactoryPath.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static synchronized void setContainers(IJavaProject jproj, Map<FactoryContainer, Boolean> containers)  \tthrows IOException, CoreException", "signatureAfterChange": " \tpublic static synchronized void setContainers(IJavaProject jproj, Map<FactoryContainer, Boolean> containers)  \tthrows CoreException", "diff": ["-\tthrows IOException, CoreException ", "+\tthrows CoreException "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4a71872aa3bdb93d2217426f6a8da1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 692, "methodNumberAfterChange": 692, "signatureBeforeChange": " public void testDeprecationCheck7() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck7() throws JavaModelException", "diff": ["-\t\t\t\t\"foo1[FIELD_REF]{foo1, Ldeprecation.ZZZType1;, I, foo1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"foo2[FIELD_REF]{foo2, Ldeprecation.ZZZType1;, I, foo2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"foo1[FIELD_REF]{foo1, Ldeprecation.ZZZType1;, I, foo1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"foo2[FIELD_REF]{foo2, Ldeprecation.ZZZType1;, I, foo2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5ebe3be88b7916d0fb39f1b663fefe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7cc8b716f398522fb04bd2b8ecf18989910b4ee2", "commitAfterChange": "4b0e88ec5088c7c00e913a56a58f9a382d280fe7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding typeBinding)", "signatureAfterChange": " private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding typeBinding)", "diff": ["-\tif (superclass != null && superclass.id == TypeIds.T_JavaLangObject && subType.isHierarchyInconsistent()) return false;", "+//\tif (superclass != null && superclass.id == TypeIds.T_JavaLangObject && subType.isHierarchyInconsistent()) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8a28401ea1e03b491b870431270e3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tpublic void test0503f() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503f() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec1ac2f29a03912de9dcdf6b84483b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void initializeRoots()", "signatureAfterChange": " \t \tpublic void initializeRoots()", "diff": ["-\t\t\t\t\t\tclasspath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\t\t\tclasspath = project.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3edad28e6808f437585f7f2830b0ef16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "21cbb8771cc00d8e13a556404fdfae59ecdb14f8", "commitAfterChange": "0899c90ae8de27e397eab6637d91f616ff022416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptImport(int declarationStart, int declarationEnd, char[][] tokens, boolean onDemand, int modifiers)", "signatureAfterChange": " public void acceptImport(int declarationStart, int declarationEnd, char[][] tokens, boolean onDemand, int modifiers)", "diff": ["-\tJavaElementInfo parentInfo = (JavaElementInfo) this.infoStack.peek();", "-\t\tthis.importContainerInfo= new JavaElementInfo();", "-\t\tparentInfo.addChild(importContainer);", "+\t\tthis.importContainerInfo = new JavaElementInfo();", "+\t\tJavaElementInfo parentInfo = (JavaElementInfo) this.infoStack.peek();", "+\t\taddToChildren(parentInfo, importContainer);", "-\tthis.importContainerInfo.addChild(handle);", "+\taddToChildren(this.importContainerInfo, handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f271be64b84e0e22b203775449ce538", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cd68b167bcb2c40d959f9db282b6c0fe02c36af3", "commitAfterChange": "56bc267ccbb561e15a1def744b67e8208e4ddb23", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tif (exactMethod != null) {", "+\t\tif (exactMethod != null && exactMethod.typeVariables == NoTypeVariables) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f35af7c0fd7820487f8a91b574525b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "82722cc3b99f12f3da7f4aa25913a010e20b9b56", "commitAfterChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = this.manager.getIndex(this.indexPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\tIIndex index = this.manager.getIndexForUpdate(this.indexPath, true, /*reuse index file*/ true /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4e2aa7348106aa452789687f072888", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "3206b2110cd001cb4cebcd80ce087ca7f8c0be4e", "commitAfterChange": "d164ba9e4539a85a4d779b821428852717828b26", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic int getStartPosition()", "signatureAfterChange": " \tpublic int getStartPosition()", "diff": ["-\t\treturn startPosition;", "+\t\treturn this.startPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f582f0ae68b79495e9b4d1a5b506d87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "db77467719df6aeaa20c37834dfc19f40472f458", "commitAfterChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t// TODO: temporarily disabled", "-\t\tif (false && !examineOverrides()) {", "+\t\tif (!examineOverrides()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f646e1704008b336344e3c3b74fa7e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "e3822f42ca0adb637888a2b8f6caa05d9b5ce61b", "commitAfterChange": "8c0681689bb7016ae1fdf06168ac4642209638f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void addReconcileDelta(IWorkingCopy workingCopy, IJavaElementDelta delta)", "signatureAfterChange": " \tprotected void addReconcileDelta(IWorkingCopy workingCopy, IJavaElementDelta delta)", "diff": ["-\t\tHashMap reconcileDeltas = JavaModelManager.getJavaModelManager().reconcileDeltas;", "+\t\tHashMap reconcileDeltas = JavaModelManager.getJavaModelManager().deltaProcessor.reconcileDeltas;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f6ab0cc0648ce7f298fa6e91c91c34c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic AnonymousClassDeclaration getAnonymousClassDeclaration()", "signatureAfterChange": "  \tpublic AnonymousClassDeclaration getAnonymousClassDeclaration()", "diff": ["-\t\treturn optionalAnonymousClassDeclaration;", "+\t\treturn this.optionalAnonymousClassDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f6c7bbd3ec41cd0c6f8222016b0042c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 350, "signatureBeforeChange": " \tpublic void test0348() throws JavaModelException", "signatureAfterChange": " \tpublic void test0348() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f72db642e30db235712b313f3df9e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodeFinderTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f858ae8243c910a6103c238fce8a118", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 346, "methodNumberAfterChange": 346, "signatureBeforeChange": " \tpublic void test0344() throws JavaModelException", "signatureAfterChange": " \tpublic void test0344() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f9476b17b713b2928b8e9ddf3917bbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void test074()", "signatureAfterChange": " \tpublic void test074()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb33ea738dfa4e3f0e4cd79c474ec8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void close() throws IOException", "signatureAfterChange": " \tpublic void close()", "diff": ["-\tpublic void close() throws IOException {", "+\tpublic void close() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc13260133aef34679b8ac54e006078", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "8511e1c837dede4e8ea942cc67a12a9034ec7ce9", "commitAfterChange": "6e2f93466e571a328a0dc58d3612c721b57a3080", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void addAnnotationTypeDeclaration(int modifiers, char[] packageName, char[] name, char[][] enclosingTypeNames)", "signatureAfterChange": " \tpublic void addAnnotationTypeDeclaration(int modifiers, char[] packageName, char[] name, char[][] enclosingTypeNames)", "diff": ["-\t\taddIndexEntry(TYPE_DECL, TypeDeclarationPattern.createIndexKey(name, packageName, enclosingTypeNames, ENUM_SUFFIX));", "+\t\taddIndexEntry(TYPE_DECL, TypeDeclarationPattern.createIndexKey(name, packageName, enclosingTypeNames, ANNOTATION_TYPE_SUFFIX));", "-\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, null, ENUM_SUFFIX, CharOperation.concatWith(TypeConstants.JAVA_LANG_ANNOTATION_ANNOTATION, '.'), ANNOTATION_TYPE_SUFFIX));", "+\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, null, ANNOTATION_TYPE_SUFFIX, CharOperation.concatWith(TypeConstants.JAVA_LANG_ANNOTATION_ANNOTATION, '.'), ANNOTATION_TYPE_SUFFIX));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd8d164d4dde7cc5fe9628c455c4aec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic Constant optimizedBooleanConstant()", "signatureAfterChange": "  \tpublic Constant optimizedBooleanConstant()", "diff": ["-\t\t\t\tif (this.constant != NotAConstant) return this.constant;", "+\t\t\t\tif (this.constant != Constant.NotAConstant) return this.constant;", "-\t\treturn NotAConstant;", "+\t\treturn Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fecc8de3016137e2fbe257c2e9c5d9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 24, "signatureBeforeChange": " public MethodDeclaration convertToMethodDeclaration(ConstructorDeclaration c, CompilationResult compilationResult)", "signatureAfterChange": " public MethodDeclaration convertToMethodDeclaration(ConstructorDeclaration c, CompilationResult compilationResult)", "diff": ["+\tm.annotations = c.annotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4034c36e33703a5b86c3b410c23a3507", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testAddExclusionOnPrimaryWorkingCopy() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnPrimaryWorkingCopy() throws CoreException", "diff": ["-\tthis.createFolder(\"/P/src/p\");", "-\tthis.createFile(", "+\tcreateFolder(\"/P/src/p\");", "+\tcreateFile(", "-\t\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\t\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406d1eef173307fae7dba49a01241e08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 355, "methodNumberAfterChange": 355, "signatureBeforeChange": " \tpublic void test0353() throws JavaModelException", "signatureAfterChange": " \tpublic void test0353() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4088aea50b6de8e5d7b2621f7852a86e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f875f4161e47c5087f589529b7e7ee5cf66c1b26", "commitAfterChange": "3e03e3984540d3907fa7739b419f89dad9725944", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnnotationMethodDeclaration annotationTypeMemberDeclaration, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tAnnotationMethodDeclaration annotationTypeMemberDeclaration, \t\t\tClassScope scope)", "diff": ["-\t\t\t", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\t \tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t \t\tthis.scribe.space();", "-\t\t\t \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409a968320493e4291beafc01b17e7dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void testFieldReference03() throws CoreException", "signatureAfterChange": " \tpublic void testFieldReference03() throws CoreException", "diff": ["-\t\tsearch(", "-\t\t\tfield, ", "-\t\t\tREFERENCES, ", "-\t\t\tgetJavaSearchScope(), ", "-\t\t\tthis.resultCollector);", "+\t\tresultCollector.showPotential = false;", "+\t\tsearch(field, REFERENCES, getJavaSearchScope());", "-\t\t\t\"src/q8/EclipseTest.java void q8.EclipseTest.main(String[]) [test]\",", "-\t\t\tthis.resultCollector);", "+\t\t\t\"src/q8/EclipseTest.java void q8.EclipseTest.main(String[]) [test]\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409cdca66295ec9d168df820756cd1d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tprotected void elementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementAdded(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tif (hasJavaNature(delta.getResource())) {\r", "+\t\t\tif (hasJavaNature((IProject)delta.getResource())) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409fa613a9ca4b5590751be087f66559", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 261, "methodNumberAfterChange": 261, "signatureBeforeChange": " \tpublic void test0259() throws JavaModelException", "signatureAfterChange": " \tpublic void test0259() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b883fa056d1be2ff3b14ebb4e7005e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testCamelCaseField1() throws JavaModelException", "signatureAfterChange": " public void testCamelCaseField1() throws JavaModelException", "diff": ["-\t\t\t\t\"oneTwoThree[FIELD_REF]{oneTwoThree, Lcamelcase.Test;, I, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"oTTField[FIELD_REF]{oTTField, Lcamelcase.Test;, I, oTTField, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"oneTwoThree[FIELD_REF]{oneTwoThree, Lcamelcase.Test;, I, oneTwoThree, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTField[FIELD_REF]{oTTField, Lcamelcase.Test;, I, oTTField, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c63c4f65664831dc345568ee3a03c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\tif ((enclosingType.tagBits & HasNoMemberTypes) != 0)", "+\t\tif ((enclosingType.tagBits & TagBits.HasNoMemberTypes) != 0)", "-\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);", "+\t\t\treturn new ProblemReferenceBinding(typeName, memberType, ProblemReasons.NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c91e5250e291316154eb235af94985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 566, "methodNumberAfterChange": 566, "signatureBeforeChange": " \tpublic void test547()", "signatureAfterChange": " \tpublic void test547()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40efb0521f44109dbba916cace263b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void test0101() throws JavaModelException", "signatureAfterChange": " \tpublic void test0101() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, this.workingCopy, true);\t\t", "+\t\tASTNode node = runConversion(getJLS3(), this.workingCopy, true);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "410681cda6e8052b45ddb9edbbceaa1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic void test0470() throws JavaModelException", "signatureAfterChange": " \tpublic void test0470() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4123952fd301fefa04bfdcd98dac62ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/StringLiteral.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4128b4f6b817bb6b177754c23e7a2f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public FieldBinding[] fields()", "signatureAfterChange": " public FieldBinding[] fields()", "diff": ["-\t\t\tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\t\tReferenceBinding.sortFields(this.fields, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4137d7855bfaf712b55afbbbb9f654e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 328, "signatureBeforeChange": "  \tpublic void test292()", "signatureAfterChange": "  \tpublic void test292()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414c70a5e4b18cb206ed35a124a100ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void test065()", "signatureAfterChange": " \tpublic void test065()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "416e4f3737e697cac484edc83f0d2d3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \t\tpublic boolean visit(Argument argument, ClassScope scope)", "signatureAfterChange": "\r \t\tpublic boolean visit(Argument argument, ClassScope scope)", "diff": ["-\t\t\tAnnotation[] annotations = argument.annotations;\r", "-\t\t\tthis.primaryAnnotations = annotations;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "417f8048cf2f3611ba51b507d1a337f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "48fb47526f1a9507082e2d39f354c822ea1f645f", "commitAfterChange": "7bd1206944197de75e9d31f2eb3e7d005fd01ec5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t \tpublic void testPerfFullBuild() throws IOException, CoreException", "signatureAfterChange": " \t\t \tpublic void testPerfFullBuild() throws IOException, CoreException", "diff": ["+\t\tstartMeasuring();", "-\t\tenv.waitForAutoBuild();", "+\t\tstopMeasuring();", "+\t\tcommitMeasurements();", "+\t\tassertPerformance();", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a8bcb8057708b0607d518178445ceb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testAddPackage() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddPackage() throws JavaModelException, CoreException", "diff": ["-public void testAddPackage() throws JavaModelException, CoreException, IOException {", "+public void testAddPackage() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41cfe892b045f548a62bf031eaff0f32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "2dab6f90cb8beb21d7a1a4246c53767175d523bd", "commitAfterChange": "1dd7e6d9d585adb220557f3402915ea2ee179022", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tprivate void buildFields()", "signatureAfterChange": "\r \t\r \tprivate void buildFields()", "diff": ["-\t\tif (referenceContext.binding.isLocalType())\r", "-\t\t\treferenceContext.binding.fields();\r", "-\t\t// fault the types for the local type's fields now since we need them\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41d07465e00e149aa0d132c47b710110", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "commitAfterChange": "c0452100f2ed18d65cf0dd0efb6f9fc0ffa98156", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprotected void runConformTest(String[] testFiles)", "signatureAfterChange": " \tprotected void runConformTest(String[] testFiles)", "diff": ["-\t\trunConformTest(testFiles, null, null, true, null);", "+\t\trunConformTest(", "+\t\t\ttestFiles, ", "+\t\t\tnull /* no expected output string */, ", "+\t\t\tnull /* no extra class libraries */, ", "+\t\t\ttrue /* flush output directory */, ", "+\t\t\tnull /* no vm arguments */,", "+\t\t\tnull /* no custom options*/,", "+\t\t\tnull /* no custom requestor*/,", "+\t\t  \tfalse /* do not skip javac for this peculiar test */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e74b130f0cac5487b57666bc19def3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ec599e4c58cf9dcf3bb165b099eef06d3812ab2b", "commitAfterChange": "a550851d48c467f82a31f39506f0608e901f2c23", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\tpublic Object set(int index, Object element)", "signatureAfterChange": " \t\tpublic Object set(int index, Object element)", "diff": ["+\t\t\tASTNode.this.ast.preReplaceChildEvent(ASTNode.this, oldChild, newChild, this.propertyDescriptor);", "-\t\t\tASTNode.this.ast.preRemoveChildEvent(ASTNode.this, oldChild, this.propertyDescriptor);", "-\t\t\tASTNode.this.ast.postAddChildEvent(ASTNode.this, newChild, this.propertyDescriptor);", "+\t\t\tASTNode.this.ast.postReplaceChildEvent(ASTNode.this, oldChild, newChild, this.propertyDescriptor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41eba01961bce4e9aff41179beb7c736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "3df203dd14216a5a05c7609bcd2dd61cc345cbe4", "commitAfterChange": "220df3e54541b1d486d18b098bb99954035d7238", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "diff": ["+\t\t\t\t\tif (oldRootInfo(rootInfo.rootPath, rootInfo.project) == null) {", "+\t\t\t\t\t\t// root just added to the classpath", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f72ede04e8f932c2d5ad2cbc700f37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testPerfProjectFindUnknownType() throws CoreException", "signatureAfterChange": " public void testPerfProjectFindUnknownType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4210cce28d825f4cd6696de35310d691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration()", "diff": ["-\t\t\t\tfieldDeclaration.initialization = ", "-\t\t\t\t\t((AnonymousLocalTypeDeclaration)this.anonymousTypes[i].updatedTypeDeclaration()).allocation;", "+\t\t\t\tfieldDeclaration.initialization = this.anonymousTypes[i].updatedTypeDeclaration().allocation;", "-\t\tif (this.anonymousTypeCount > 0) fieldDeclaration.bits |= AstNode.HasLocalTypeMASK;", "+\t\tif (this.anonymousTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalTypeMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "422e10c34ad6bdfa14848248b0c98c58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test0066() throws JavaModelException", "signatureAfterChange": " \tpublic void test0066() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423c5aa48c4febb193e40ec65479a95c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0d14952109802f7fb16e5e68b5410c8ce4177233", "commitAfterChange": "10518f28338383dcf260412fe5f8c8c5e1a47294", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate void formatGuardClauseBlock(Block block, BlockScope scope)", "signatureAfterChange": "  \tprivate void formatGuardClauseBlock(Block block, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE, false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423dad38c03668e9d4f27032785acba0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test0409() throws JavaModelException", "signatureAfterChange": " \tpublic void test0409() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4261f86b5ae65e277efef9b8b0c7e931", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "21cbb8771cc00d8e13a556404fdfae59ecdb14f8", "commitAfterChange": "0899c90ae8de27e397eab6637d91f616ff022416", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void exitCompilationUnit(int declarationEnd)", "signatureAfterChange": " public void exitCompilationUnit(int declarationEnd)", "diff": ["+\t// set import container children", "+\tif (this.importContainerInfo != null) {", "+\t\tsetChildren(this.importContainerInfo);", "+\t}", "+\t", "+\t// set children", "+\tsetChildren(this.unitInfo);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4267ce8dbb6ab50e63c7b362ebf8e38b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void test0435() throws JavaModelException", "signatureAfterChange": " \tpublic void test0435() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4295b49b8dedcce06208b096df6f01cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "5270f34deea951955a9cf260a036c733a8732c28", "commitAfterChange": "b4eb1372f2b3883ef0dc3c4e4e547a1b95d47532", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["-\t\t\t\t\tsearchPattern = createPackagePattern(elementName.substring(0, lastDot), limitTo, EXACT_MATCH, CASE_SENSITIVE);", "+\t\t\t\t\tsearchPattern = createPackagePattern(elementName.substring(0, lastDot), limitTo, R_EXACT_MATCH, true);", "-\t\t\t\tsearchPattern = createPackagePattern(element.getElementName(), limitTo, EXACT_MATCH, CASE_SENSITIVE);", "+\t\t\t\tsearchPattern = createPackagePattern(element.getElementName(), limitTo, R_EXACT_MATCH, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d0c8fb5c8e9a2e1a720776962e561b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/FieldAccessCompletionTest.java", "commitBeforeChange": "1aa9974a3bb89f05541fe094ffda489a5a02ad41", "commitAfterChange": "a0bf8407fc852f4db46b479f5e08f38f0e4e73ff", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void testSwitchExpression()", "signatureAfterChange": " public void testSwitchExpression()", "diff": ["-\t\t\"    {\\n\" + ", "-\t\t\"      <CompleteOnMemberAccess:fred().x>;\\n\" + ", "-\t\t\"    }\\n\" + ", "+\t\t\"     <CompleteOnMemberAccess:fred().x>;\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f201d2a3dcf2823a34bc47d827074f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b6c213d292f2a14fc7e944fa6a9473734abc07ab", "commitAfterChange": "23bd27f0df8fef2c86453e5a48de14dcd7cbc8bc", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " protected void consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()", "signatureAfterChange": " protected void consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()", "diff": ["-", "-\tthis.expressionLengthPtr--;", "+\t", "-\t\t(QualifiedAllocationExpression) this.expressionStack[this.expressionPtr--];", "-\tqae.enclosingInstance = this.expressionStack[this.expressionPtr];", "-\tthis.expressionStack[this.expressionPtr] = qae;", "+\t\t(QualifiedAllocationExpression) this.expressionStack[this.expressionPtr];", "+\t", "+\tif (qae.anonymousType == null) {", "+\t\tthis.expressionLengthPtr--;", "+\t\tthis.expressionPtr--;", "+\t\tqae.enclosingInstance = this.expressionStack[this.expressionPtr];", "+\t\tthis.expressionStack[this.expressionPtr] = qae;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f5a2ad905335117a3420ffeb7bdf15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 406, "methodNumberAfterChange": 406, "signatureBeforeChange": " \tpublic void test388()", "signatureAfterChange": " \tpublic void test388()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f826e9395121acb174fcfade391cf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic List arguments()", "signatureAfterChange": "  \tpublic List arguments()", "diff": ["-\t\treturn arguments;", "+\t\treturn this.arguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43117c19e48eec14da45f4f4dc9a5ed1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "f9fa136a7bc8b0dc9f16e62f62f223a268cdfdb0", "commitAfterChange": "2efe21d843d0efc8661ee74fad07d972022126e4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "signatureAfterChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "diff": ["-\t\t\t\tMethodBinding[] castTypeMethods = ((ReferenceBinding) castType).methods();", "+\t\t\t\tMethodBinding[] castTypeMethods = getAllInheritedMethods((ReferenceBinding) castType);", "-\t\t\t\t\t((ReferenceBinding) expressionType).methods();", "+\t\t\t\t\tgetAllInheritedMethods((ReferenceBinding) expressionType);", "-\t\t\t\tfor (int i = 0, castMethodsLength = castTypeMethods.length; i < castMethodsLength; i++)", "+\t\t\t\tfor (int i = 0, castMethodsLength = castTypeMethods.length; i < castMethodsLength; i++) {", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432f9573cdd5a67303a4805bf919c442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "150efead216fdc18243fc0e0bc307f18a75e431f", "commitAfterChange": "47b0d1e5c30414e249b8aff80d628ce66272443e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \tpublic char[][] getMethodParameterNames(IMethod method)", "signatureAfterChange": "\r \tpublic char[][] getMethodParameterNames(IMethod method)", "diff": ["-\t\t\tif(hasDollar && fParameterNames.get(el) == null) {\r", "+\t\t\tif(fParameterNames.get(el) == null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4352cec2b00ca928dc96c9400d518623", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public char[] computeGenericTypeSignature(TypeVariableBinding[] typeVariables)", "signatureAfterChange": " public char[] computeGenericTypeSignature(TypeVariableBinding[] typeVariables)", "diff": ["-\tboolean isMemberOfGeneric = isMemberType() && (enclosingType().modifiers & AccGenericSignature) != 0;", "+\tboolean isMemberOfGeneric = isMemberType() && (enclosingType().modifiers & ExtraCompilerModifiers.AccGenericSignature) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438fb68f9c0b9261194736ee58d0e006", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 408, "methodNumberAfterChange": 408, "signatureBeforeChange": " \tpublic void test390()", "signatureAfterChange": " \tpublic void test390()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43a73ce5ac8fc61e366c62cdc4373db7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WildcardType.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43cf2ab56235408044812e100fa7dc20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "f7f7a56a04d63c15c3ecf4e9ea892b7456b63660", "commitAfterChange": "61bb7cec9d84760aee596143730a3411f8956386", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void addInterfaceDeclaration(int modifiers, char[] packageName, char[] name, char[][] enclosingTypeNames, char[][] superinterfaces, char[][] typeParameterSignatures)", "signatureAfterChange": " \tpublic void addInterfaceDeclaration(int modifiers, char[] packageName, char[] name, char[][] enclosingTypeNames, char[][] superinterfaces, char[][] typeParameterSignatures)", "diff": ["-\t\t\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, typeParameterSignatures, INTERFACE_SUFFIX, superinterfaces[i], INTERFACE_SUFFIX));", "+\t\t\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, typeParameterSignatures, INTERFACE_SUFFIX, superinterface, INTERFACE_SUFFIX));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d386f57e3bebe05353746f934f7ae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "75f4f0b82f02318c6c4e4bfb95c3e3b5439f0888", "commitAfterChange": "7dba3d463b518db197f1be8dba3263cfb75d33a8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic static AnnotationBinding [] getPackedAnnotationBindings(AnnotationBinding [] annotations)", "signatureAfterChange": " \tpublic static AnnotationBinding [] getPackedAnnotationBindings(AnnotationBinding [] annotations)", "diff": ["-\t\t\tif (value.returnType == null || value.returnType.leafComponentType() != annotationType)", "+\t\t\tif (value.returnType == null || value.returnType.dimensions() != 1 || value.returnType.leafComponentType() != annotationType)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d3d2088dbd042edc1fe2746c2d398d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "fb8d9fab146fe4d32454959da7e766f1123c1c97", "commitAfterChange": "e0ce50fdc60bddc794a4615c1e0ac27f63508aca", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  TypeBinding getTypeFromSignature(char[] signature, int start, int end)", "signatureAfterChange": "  TypeBinding getTypeFromSignature(char[] signature, int start, int end)", "diff": ["-\t\tbinding = getTypeFromConstantPoolName(signature, start + 1, end - 1);", "+\t\tbinding = getTypeFromConstantPoolName(signature, start + 1, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43dea4321eee51dd4aa40ca746edca0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testCommitWorkingCopy2() throws CoreException", "signatureAfterChange": " public void testCommitWorkingCopy2() throws CoreException", "diff": ["-\t\tcreateJavaProject( \"P2\", new String[] {\"src\"}, null, null, null, \"bin\", null, null, new String[][] {new String[] {\"p1/\"}});", "+\t\tcreateJavaProject( \"P2\", new String[] {\"src\"}, null, null, null, \"bin\", null, null, new String[][] {new String[] {\"p1/\"}}, \"1.4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f2dfe6b3526fcc5b19166a5eed96ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MemberTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void checkSyntheticArgsAndFields()", "signatureAfterChange": "  void checkSyntheticArgsAndFields()", "diff": ["-\tif (this != this.prototype) throw new IllegalStateException();", "+\tif (!isPrototype()) throw new IllegalStateException();", "-\tif (this != this.prototype) {", "+\tif (!isPrototype()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "441a7488acc286c8e09a9c11d15495ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "5c431427591b98c4b72a2e5ac41ca63aaf6302ff", "commitAfterChange": "83daf1ab113f238722eb665057bf137828f4e697", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "diff": ["-\t\t\tcontinue nextMethod;", "+\t\t\treturn; // do not repoort against subsequent inherited methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442b72d7c6a95df5013259016de264c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/TrackedNodePosition.java", "commitBeforeChange": "41ffae297147ec1603ce8b4a66adca6e90584cfa", "commitAfterChange": "baf61a471c1445f5510d1b5e2680fcf5a8a8600c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int getLength()", "signatureAfterChange": " \tpublic int getLength()", "diff": ["-\t\treturn TextEdit.getCoverage(this.group.getTextEdits()).getLength();", "+\t\tIRegion coverage= TextEdit.getCoverage(this.group.getTextEdits());", "+\t\tif (coverage == null) {", "+\t\t\treturn this.node.getLength();", "+\t\t}", "+\t\treturn coverage.getLength();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4437c1194b17485629359db0f6141348", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic List fragments()", "signatureAfterChange": "  \tpublic List fragments()", "diff": ["-\t\treturn variableDeclarationFragments;", "+\t\treturn this.variableDeclarationFragments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4441ba3d0a21716d403930db08a91747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void testBug22043a() throws JavaModelException", "signatureAfterChange": "  public void testBug22043a() throws JavaModelException", "diff": ["-\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+\"25}\"", "+\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "444a3f69835a135b9d95dc18b6a22411", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "8e29a05f4cbe66a9abe7c047f5bc1b643986cd51", "commitAfterChange": "e4a4b50610c646cb6bf3bb4c3d31aa510f5cd436", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, true/*isResolved*/, workingCopy.owner, this.progressMonitor);", "+\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, true/*isResolved*/, workingCopy, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4450cc47c4676ebcf2c17dac10d28afa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": " \tpublic void test0250() throws JavaModelException", "signatureAfterChange": " \tpublic void test0250() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4460745069af628c4a99ed656f558b42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic void test057()", "signatureAfterChange": " \tpublic void test057()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44993c0cfa60fdf384c71f31e1b38955", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\t * Package declaration\r\t\t */", "+\t\t * Package declaration", "+\t\t */", "-\t\t\tthis.scribe.printComment(true);", "+\t\t\tthis.scribe.printComment();", "-\t\t\tthis.scribe.printComment(true);", "+\t\t\tthis.scribe.printComment();", "-\t\t * Import statements\r\t\t */", "+\t\t * Import statements", "+\t\t */", "-\t\t * Type declarations\r\t\t */", "+\t\t * Type declarations", "+\t\t */", "-\t\tthis.scribe.printComment(false);", "+\t\tthis.scribe.printComment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a0cacf19b306214c9e5d8bcaaccd5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r public String toString()", "signatureAfterChange": "\r public String toString()", "diff": ["-\tprint.println(\" className: \" + new String(getName())); //$NON-NLS-1$\r", "-\tprint.println(\" superclassName: \" + (getSuperclassName() == null ? \"null\" : new String(getSuperclassName()))); //$NON-NLS-2$ //$NON-NLS-1$\r", "-\tprint.println(\" access_flags: \" + ClassFileStruct.printTypeModifiers(accessFlags()) + \"(\" + accessFlags() + \")\"); //$NON-NLS-1$ //$NON-NLS-3$ //$NON-NLS-2$\r", "+\tprint.println(\" this.className: \" + new String(getName())); //$NON-NLS-1$\r", "+\tprint.println(\" this.superclassName: \" + (getSuperclassName() == null ? \"null\" : new String(getSuperclassName()))); //$NON-NLS-2$ //$NON-NLS-1$\r", "+\tprint.println(\" access_flags: \" + ClassFileStruct.printTypeModifiers(this.accessFlags()) + \"(\" + this.accessFlags() + \")\"); //$NON-NLS-1$ //$NON-NLS-3$ //$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a3c9526eabec29a638dd77075a641e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/AllTests.java", "commitBeforeChange": "9f1b051d39ad6345db281e22e2a614a2f78dd564", "commitAfterChange": "8aaf5c369166203de49007a43e00fba427622d08", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\tsuite.addTestSuite(MessagerTests.class);", "+\t\t//suite.addTestSuite(MessagerTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44abeb70511151bd26cd7324b63c6a5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRef.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b81b00b4266521420e2eea563fa046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration node)", "diff": ["-\t\trewriteNodeList(node, FieldDeclaration.FRAGMENTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\trewriteNodeList(node, FieldDeclaration.FRAGMENTS_PROPERTY, pos, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bbcae8e7c059ff15031389da36eaa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 148, "signatureBeforeChange": " final public void ifnonnull(Label lbl)", "signatureAfterChange": " final public void ifnonnull(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifnonnull:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c0e618766a51f99e2fe6576ab7d3a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "635d51c73a886e470d16e7ebb8d1b4a9177433d4", "commitAfterChange": "cf0af9789637850aa518ab1064a8b714c5c05a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeMirror asType()", "signatureAfterChange": "  \tpublic TypeMirror asType()", "diff": ["-\t\t// TODO Auto-generated method stub", "-\t\treturn null;", "+\t\treturn Factory.newTypeMirror(_binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c3fa525168d7b473c2555370a1d6b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " \tpublic void test0197() throws JavaModelException", "signatureAfterChange": " \tpublic void test0197() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4504bedc2d94c6aada20785536edccc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 195, "signatureBeforeChange": " \tpublic void test0193() throws JavaModelException", "signatureAfterChange": " \tpublic void test0193() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4520bc529d2c17c62141cb67d362640b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 383, "signatureBeforeChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "signatureAfterChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "diff": ["-\t\tfieldSourceStart(field, fieldDecl),", "-\t\tfieldSourceEnd(field, fieldDecl));", "+\t\tnodeSourceStart(field, fieldDecl),", "+\t\tnodeSourceEnd(field, fieldDecl));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4547f6c152698631434850ed5051ce15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "e560c4f056e8f81d7e6811700478b4a331f39a81", "commitAfterChange": "82fb6745d0f2bc2c9b5e4740da70b2e364d6955a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t \t \tprotected void initializeArguments()", "signatureAfterChange": "\t \t \tprotected void initializeArguments()", "diff": ["-\t\tTypeVariableBinding[] typeVariables = this.type.typeVariables();", "+\t\tTypeVariableBinding[] typeVariables = genericType().typeVariables();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "458c1d8b95d41125ef69b5fde92cd5a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 216, "signatureBeforeChange": " protected boolean moveRecoveryCheckpoint()", "signatureAfterChange": " protected boolean moveRecoveryCheckpoint()", "diff": ["+\tscanner.todoCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459098962e9164502db4213020daf026", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\tenv.addRequiredProject(project2Path, project1Path, new IPath[] {new Path(\"**/api/\")}, new IPath[] {}, false);", "+\t\tenv.addRequiredProject(project2Path, project1Path, new IPath[] {new Path(\"**/api/\")}, new IPath[] {new Path(\"**\")}, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a50347064b610af9aaab7a7564a390", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "commitAfterChange": "7daad62a7da8e2cda84019954d93fab0a22e7d3c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\t// no need to index if the content has not changed\r", "+\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break;\r", "+\t\t\t\tcase IResourceDelta.ADDED:\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a594a6ccc8e90372c609c1c4c5a051", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 274, "signatureBeforeChange": " \tpublic void test0272() throws JavaModelException", "signatureAfterChange": " \tpublic void test0272() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45fdb71682165a91a53242e3f4559cca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic void test0094() throws JavaModelException", "signatureAfterChange": " \tpublic void test0094() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "461a6a31560e2a8d130f897e3aee7f86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testPerfScannerFiles() throws InvalidInputException, IOException", "signatureAfterChange": " \tpublic void testSourceParser() throws InvalidInputException, IOException", "diff": ["-\t */", "-\tpublic void testPerfScannerFiles() throws InvalidInputException, IOException {", "-\t\ttagAsSummary(\"Compile>Scan>Src:large files>Options:Default\", Dimension.CPU_TIME, false); // do NOT put in fingerprint", "-", "-//\t\tscanFiles(FILE_SIZE_THRESHOLD, 0);", "-\t\tscanFiles(FILE_SIZE_THRESHOLD, 1);", "-\t}", "+\tpublic void testSourceParser() throws InvalidInputException, IOException {", "+\t\ttagAsSummary(\"Compile>SrcParse>Parser>Default\", true); // put in fingerprint", "+\t\tparseParserFile(1); // SourceElementParser kind"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4621caf1aed665bee19254ee39ba7a6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d83fb3088f0539c83f9d571caeaab986441c3733", "commitAfterChange": "cf9c7cea96160003af34283825606edc3c2c1093", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tBlockScope scope)", "diff": ["-\t\tint dimensions = parameterizedSingleTypeReference.dimensions;", "+\t\tint dimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4630f182b07e94fcd4c3657fdf39dfdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": " \tpublic void test0559() throws JavaModelException", "signatureAfterChange": " \tpublic void test0559() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4639fbbbce6a80bf7161f2116dd419f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 356, "methodNumberAfterChange": 356, "signatureBeforeChange": " \tpublic void test0354() throws JavaModelException", "signatureAfterChange": " \tpublic void test0354() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "464633f581666beaf4ef56251ca2c7d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "c117a64cdf0af5bb1016a70197fdaaecfa29c6f9", "commitAfterChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner, IProgressMonitor monitor)", "signatureAfterChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tICompilationUnit source = (ICompilationUnit) this.requestedSources.removeKey(fileName);", "+\t\t\t\t\t\tICompilationUnit source = (ICompilationUnit) this.requestedSources.get(fileName);", "-\t\t\t\t\t\tObject key = this.requestedKeys.removeKey(fileName);", "+\t\t\t\t\t\tObject key = this.requestedKeys.get(fileName);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\t// remove at the end so that we don't resolve twice if a source and a key for the same file name have been requested", "+\t\t\t\t\t\tthis.requestedSources.removeKey(fileName);", "+\t\t\t\t\t\tthis.requestedKeys.removeKey(fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "464cc906652b09aaeaf66a55e3bae2f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private static SearchPattern createMethodPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createMethodPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, CompilerOptions.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/); ", "+\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/); ", "-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "-\t\t\t\t\t\tif (!(Scanner.TokenNameWHITESPACE == lastToken ", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:", "+\t\t\t\t\t\tif (!(TerminalTokens.TokenNameWHITESPACE == lastToken ", "-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:", "-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46562db93e36f86b733ca1da2411c804", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "465f8881f75613282800f97d5145d21a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void test0419() throws JavaModelException", "signatureAfterChange": " \tpublic void test0419() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "466abb1144ad7a9e8538158b65165bdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 284, "methodNumberAfterChange": 284, "signatureBeforeChange": " \tpublic void test0282() throws JavaModelException", "signatureAfterChange": " \tpublic void test0282() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b12d1c7493fb3b1f02d1c90e6f5716", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void testSearchConstructor() throws CoreException", "signatureAfterChange": " \tpublic void testSearchConstructor() throws CoreException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46bb3220334be0380d201e761c6a8f18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "a5f15775fe7fcb24ae5a0930116a996c10a2359a", "commitAfterChange": "6fb311673d1501ca166502c77ddfedc4e1f01c4f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit, CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit, CompilationUnitResolver resolver)", "diff": ["-\t \t\t\t\t\treturn getFieldBinding(binding);", "+\t \t\t\t\t\treturn getFieldBinding(binding.fields);", "-\t \t\t\t\t\treturn getMethodBinding(binding, resolver);", "+\t \t\t\t\t\treturn getMethodBinding(binding.methods, resolver);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46bd2c800af7568cff22f104281921d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "25a4c603c1f482ad385999879af859a3ed5010ab", "commitAfterChange": "3f67446cba99a16645f6883fe8feb16d27fba109", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": " protected void consumePackageComment()", "signatureAfterChange": " protected void consumePackageComment()", "diff": ["+\t\tif (this.modifiersSourceStart >= 0)", "+\t\t\tpushOnIntStack(this.modifiersSourceStart); // push the start position of a javadoc comment if there is one"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47010287071675e43e88850cee8473cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \t\tboolean isAtTypeStart()", "signatureAfterChange": " \t \t\tboolean isAtTypeStart()", "diff": ["-\t\t\treturn this.index+1 < this.source.length && \"LIZVCDBFJS[\".indexOf(this.source[this.index+1]) != -1; //$NON-NLS-1$", "+\t\t\treturn this.index < this.source.length && \"LIZVCDBFJS[\".indexOf(this.source[this.index]) != -1; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "471af379d54964f0026f3d13b546fe57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic void test0482() throws JavaModelException", "signatureAfterChange": " \tpublic void test0482() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "475ca6dfecb64931e0d98cadf1e29561", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 363, "signatureBeforeChange": " \tpublic void test0706() throws JavaModelException", "signatureAfterChange": " \tpublic void test0706() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47bab1d24584ac7497478e187d4aadda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "a069ec3e155df34e1c3faf73c5e321c7b4b692f7", "commitAfterChange": "6dea5cf1ef2d860c99ae96c566fbaac1cc8d1d31", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void buildTypeBindings(AccessRestriction accessRestriction)", "signatureAfterChange": " void buildTypeBindings(AccessRestriction accessRestriction)", "diff": ["+\t\tif (this.environment.isProcessingAnnotations && this.environment.isMissingType(typeDecl.name))", "+\t\t\tthrow new SourceTypeCollisionException(); // resolved a type ref before APT generated the type", "+\t\t\t// if its an unresolved binding - its fixed up whenever its needed, see UnresolvedReferenceBinding.resolve()", "+\t\t\tif (this.environment.isProcessingAnnotations)", "+\t\t\t\tthrow new SourceTypeCollisionException(); // resolved a type ref before APT generated the type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47bc49dab09383242622fac0903380d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "facdf5a5026398564c3ed7b97c965e8ab5351db6", "commitAfterChange": "74695e077c1f467c6eefdb1072c4a419061d0e20", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic boolean visit(ReturnStatement node)", "signatureAfterChange": " \tpublic boolean visit(ReturnStatement node)", "diff": ["-\t\t\trewriteNode(node, ReturnStatement.EXPRESSION_PROPERTY, offset, ASTRewriteFormatter.SPACE);", "+\t\t\t", "+\t\t\t// bug 103970", "+\t\t\tif (getChangeKind(node, ReturnStatement.EXPRESSION_PROPERTY) == RewriteEvent.REPLACED) {", "+\t\t\t\tif (!Character.isWhitespace(getDocument().getChar(offset))) {", "+\t\t\t\t\tdoTextInsert(offset, String.valueOf(' '), getEditGroup(node, ReturnStatement.EXPRESSION_PROPERTY));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\trewriteNode(node, ReturnStatement.EXPRESSION_PROPERTY, offset, ASTRewriteFormatter.SPACE);\t", "+\t    } catch (BadLocationException e) {", "+\t        handleException(e);\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d54681e0efb6c73ad99139ec39b58d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "3858f2c9f8321ffaef4bf1567165b79bc4d4383d", "commitAfterChange": "569b0dbd062b29a0a4779486160c8b5a015f8ac2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["-\tIClasspathEntry[] classpathEntries = javaProject.getExpandedClasspath(true, true, JavaBuilder.preferredClasspaths, JavaBuilder.preferredOutputs);", "+\tIClasspathEntry[] classpathEntries = javaProject.getExpandedClasspath(true, true, JavaBuilder.PreferredClasspaths, JavaBuilder.PreferredOutputs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480153eec831e3490926f8f1e556897f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480d303ce6c221e8792ade739852e770", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic ISourceType[] getSourceTypes()", "signatureAfterChange": " \tpublic ISourceType[] getSourceTypes()", "diff": ["-\t\treturn sourceTypes;", "+\t\treturn this.sourceTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48194bf5325f6c5e731ec0c9d4001af6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "3bd4baedd250e4d3a19eb5f32f5553fba8f7a1f4", "commitAfterChange": "fe6848300377e2f320c70d2b17e483820c74fa24", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printTrailingComment()", "signatureAfterChange": "  \tpublic void printTrailingComment()", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tcount++; ", "+\t\t\t\t\t\t\t\t\tcount++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487fcfa1b13008840031ba9f082cb093", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "d48348b35546aedb713110b2ed105dc5edef642d", "commitAfterChange": "af92ec761864fc440fb8211ae7d1ddf0cccd86d0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r \tprivate IBinding internalResolveNameForSimpleName(Name name)", "signatureAfterChange": "\r \r \tprivate IBinding internalResolveNameForSimpleName(Name name)", "diff": ["-\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding)singleNameReference.binding);\t\t\t\t\r", "+\t\t\t\tBinding binding = singleNameReference.binding;\r", "+\t\t\t\tif (binding != null && binding.isValidBinding()) {\r", "+\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48997b97310948cd27462e2f335fd6f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ObjectSet.java", "commitBeforeChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "commitAfterChange": "6d9cea6072b91b492f8661608c9d01337562ebef", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r \tpublic int size()", "signatureAfterChange": "\r \r \tpublic int size()", "diff": ["-\t\treturn elementSize;\r", "+\t\treturn this.elementSize;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489b15dff65d5caa8133e8053a9cb735", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "dc9f85fd525316a711403ceba4cb4dbafecac0bd", "commitAfterChange": "3c1b7e8456d7daaa27a98cf5a30f3b3c0c4ef89b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void addMissingAbstractProblemMethod(MethodDeclaration methodDeclaration, MethodBinding methodBinding, CategorizedProblem problem, CompilationResult compilationResult)", "signatureAfterChange": "  \tprivate void addMissingAbstractProblemMethod(MethodDeclaration methodDeclaration, MethodBinding methodBinding, CategorizedProblem problem, CompilationResult compilationResult)", "diff": ["+\t\tmethodBinding.modifiers |= ClassFileConstants.AccSynthetic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b8b1b3ce11fab0cda1b6cfae132954", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void test0122() throws JavaModelException", "signatureAfterChange": " \tpublic void test0122() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bb4bb2fca3cf002275d8a89889affb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 353, "methodNumberAfterChange": 353, "signatureBeforeChange": " \tpublic void test0700() throws JavaModelException", "signatureAfterChange": " \tpublic void test0700() throws JavaModelException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c22c162f353bf783dcbc04ede0a998", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "becfd4c7950515525d86bbecc192f1b37e0a8237", "commitAfterChange": "e50176ac66d1a7529fcc4f22df4fc6af9ae874e5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected File createFolder(File parent, String name) throws IOException", "signatureAfterChange": " protected File createFolder(File parent, String name)", "diff": ["-protected File createFolder(File parent, String name) throws IOException {", "+protected File createFolder(File parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48caf9af3066a9b427d56b171e9b186d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void test0033() throws JavaModelException", "signatureAfterChange": " \tpublic void test0033() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d7d3fce5e558af134bfc71bc1cefa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 314, "signatureBeforeChange": " \tpublic void test0312() throws JavaModelException", "signatureAfterChange": " \tpublic void test0312() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d88b6ef000e9eb7e011fa2d76f86e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "529de4ec6951fb3afb95f1d212d7fe68400fefe9", "commitAfterChange": "87172da45c25aa8e69083680838bc53c3286ff1c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public void beginTask(String name, int totalWork)", "signatureAfterChange": "\r public void beginTask(String name, int totalWork)", "diff": ["-\tif (fMonitor == null) return;\r", "-\tif (fMonitor instanceof SubProgressMonitor){\r", "-\t\tfMonitor.beginTask(\"\", totalWork); //$NON-NLS-1$\r", "-\t\tfMonitor.subTask(name);\r", "-\t} else {\r", "+\tif (fMonitor != null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48dabf536f92229d608fe2cb4e3f52da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "2dab6f90cb8beb21d7a1a4246c53767175d523bd", "commitAfterChange": "1dd7e6d9d585adb220557f3402915ea2ee179022", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \t\r \tprivate void buildMethods()", "signatureAfterChange": "\r \t\r \tprivate void buildMethods()", "diff": ["-\t\tif (referenceContext.binding.isLocalType())\r", "-\t\t\treferenceContext.binding.methods();\r", "-\t\t// fault the types for the local type's methods now since we need them\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ef6d29ce6ffc6184d5db61ded640ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test0010() throws JavaModelException", "signatureAfterChange": " \tpublic void test0010() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f6b71ea0db9051a7891741ce21b71f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e0b93cd9388950bd51950e07247cdecc9e3263df", "commitAfterChange": "265ec26aa6d2cbdb7df581eef4b2a30df572f94f", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  \tpublic void test111()", "signatureAfterChange": "  \tpublic void test111()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4904bd465a5b8adcbb08621cb5b16b44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 455, "signatureBeforeChange": " \tpublic void test436()", "signatureAfterChange": " \tpublic void test436()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4928abc76816c70926a754775f66a31a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/EclipseMessager.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid printWarning(SourcePosition pos, String msg, String... arguments);", "signatureAfterChange": " \tvoid printFixableWarning(SourcePosition pos, String msg, String... arguments);", "diff": ["-\tvoid printWarning(SourcePosition pos, String msg, String... arguments);", "+\tvoid printFixableWarning(SourcePosition pos, String msg, String... arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "492c9f71c99338ac8f828e35653e6995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "fdd1fbb8d5c01c75ee4454ed7f24935c847d778f", "commitAfterChange": "317375dcd13ad0504224639f193a5dbda2d2b98b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "signatureAfterChange": " private void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "diff": ["+\t\t\t\t// add a type reference ", "+\t\t\t\t", "+\t\t\t\t// also add a simple reference on each segment of the qualification (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=24741)", "+\t\t\t\tchar[][] qualification = CharOperation.splitOn('.', name);", "+\t\t\t\tfor (int j = 0, length = qualification.length; j < length; j++) {", "+\t\t\t\t\taddNameReference(qualification[j]);", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "493c9acdcd9c5d7f17ba3207b26ac38e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "c92ffdfe3a1b18fa280b7300d6f9d768cd0ff897", "commitAfterChange": "332f2b4bbc61519d48f9e1634468f589fe6ec357", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private Object getReflectionValue(final Object value, final Class targetType)         throws Throwable", "signatureAfterChange": "      private Object getReflectionValue(final Object value, final Class targetType)         throws Throwable", "diff": ["+            return array;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "493ef7817322c831051b3582fdbeafe4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionContext.java", "commitBeforeChange": "b208e61b699229b414f76c3c9bfed66b1f92d991", "commitAfterChange": "52b692ed21634a88100b21eba7894614726adbcf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean isInJavadocFormalReference()", "signatureAfterChange": " \tpublic boolean isInJavadocFormalReference()", "diff": ["-\t\treturn (this.javadoc & CompletionOnJavadoc.FORMAL_REFERENCE) != 0;", "+\t\treturn false; // default overridden by concrete implementation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499529fd2eb38d39723d1d5255be4957", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 313, "methodNumberAfterChange": 313, "signatureBeforeChange": " \tpublic void test0311() throws JavaModelException", "signatureAfterChange": " \tpublic void test0311() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49957c15ec60aecc6ab24b907f2c179c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499f6f43390c1bcbcf51e1d141922cfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "f254767d87ae8dd4ff9c37cc7b1a6fc568af9dda", "commitAfterChange": "966710fd0db4acefe960a5bfb33635812ee1ac6d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "signatureAfterChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "diff": ["-\t\t\treturn (DeclaredType)Factory.createReferenceType(resultBinding, _env);", "+\t\t\treturn Factory.createReferenceType(resultBinding, _env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a2cb330d355027ba6343e0ed23e2e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public String getName()", "signatureAfterChange": " public String getName()", "diff": ["-\t\tfor (int i=n; i<MAX_DIGITS-1; i++) {", "+\t\tfor (int i=n; i<MAX_DIGITS; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ade6251eb2b18dfe74915edd855dfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 220, "signatureBeforeChange": " public void javadocInvalidValueReference(int sourceStart, int sourceEnd, int modifiers)", "signatureAfterChange": " public void javadocInvalidValueReference(int sourceStart, int sourceEnd, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers))", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49cbb9622bda9c1f705e280ce7729b6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/TrackedNodePosition.java", "commitBeforeChange": "41ffae297147ec1603ce8b4a66adca6e90584cfa", "commitAfterChange": "baf61a471c1445f5510d1b5e2680fcf5a8a8600c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic int getStartPosition()", "signatureAfterChange": " \tpublic int getStartPosition()", "diff": ["-\t\treturn TextEdit.getCoverage(this.group.getTextEdits()).getOffset();", "+\t\tIRegion coverage= TextEdit.getCoverage(this.group.getTextEdits());", "+\t\tif (coverage == null) {", "+\t\t\treturn this.node.getStartPosition();", "+\t\t}", "+\t\treturn coverage.getOffset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49d1ebe57f4672daedde5cd1f395880a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "bd297a6cb55c56ac121bf45ea00a0a13e2fd1cf7", "commitAfterChange": "84c2b2d439389ef2bf27541bfd5429ac732732a4", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["+\t\tcase CannotThrowNull :\r", "+\t\t\tif (options.complianceLevel >= CompilerOptions.JDK1_4){\r", "+\t\t\t\treturn Ignore;\r", "+\t\t\t}\r", "+\t\t\treturn Error;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49de078c54641c987c91a6fdebdccd8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 226, "signatureBeforeChange": " public void javadocMissingReference(int sourceStart, int sourceEnd, int modifiers)", "signatureAfterChange": " public void javadocMissingReference(int sourceStart, int sourceEnd, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers))", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a065e33c9b0817f34f33a9e9dbd01c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CommentRecorderParser.java", "commitBeforeChange": "6272ddbc393added5976d56f44f1521fcf876495", "commitAfterChange": "a738cdbf5d0b40e078d2ec76d22bcb613279cff6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void initializeScanner()", "signatureAfterChange": " \tpublic void initializeScanner()", "diff": ["-\t\tthis.scanner = new CommentRecorderScanner(", "+\t\tthis.scanner = new Scanner("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a120c6070d5821fbe4c40aa91070954", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "e1e0753030e4f2c77bd2b8f4a42a1bc4bc76176e", "commitAfterChange": "238844c13883bac4a2ee2dbd36acf9d7780e81f6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r public void accept(IBinaryType binaryType, PackageBinding packageBinding)", "signatureAfterChange": "\r \r public void accept(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["-\t\r", "-\t// fault in its hierarchy...\r", "-\t\ttypeBinding.superclass();\r", "-\t\ttypeBinding.superInterfaces();\r", "+\t\tthis.remember(binaryType, typeBinding);\r", "-\t\treturn;\r", "-\t\r", "-\tremember(binaryType, typeBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a15bb9a9be409e0683ba5a38d87ba27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b6bf5b983b2bbbc4fad4d62ee0789c8de9ccd263", "commitAfterChange": "4c4da644b9422aa835502f12ebacc85ca82ad339", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r protected void consumePackageDeclarationName()", "signatureAfterChange": "\r protected void consumePackageDeclarationName()", "diff": ["+\timpt.declarationEnd = impt.declarationSourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a261314ad0184a3afcae88ed28a6bfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a41eee8db4b95b4cb53d3c53074177e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "7fb86fb96d585ee8957fc13764a67f220efdab28", "commitAfterChange": "ac9209adc3bf5bee5093a73bfc9f86fe5825e76d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected char[][][] collect() throws JavaModelException", "signatureAfterChange": "  protected char[][][] collect() throws JavaModelException", "diff": ["-\t\tthis.locator.createParser(javaProject);", "+\t\tthis.locator.initializeNameEnvironment(javaProject);", "+\t\tthis.locator.initialize(javaProject);", "-\t\t\t\t\t\t\tthis.locator.createParser(previousProject);", "+\t\t\t\t\t\t\tthis.locator.initializeNameEnvironment(previousProject);", "+\t\t\t\t\t\t\tthis.locator.initialize(previousProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a51102f38468fcb7296b309eb78b599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite, boolean tiebreakingVarargsMethods)", "signatureAfterChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, \t\t\tInvocationSite invocationSite, int inferenceLevel, boolean tiebreakingVarargsMethods)", "diff": ["-\tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite, boolean tiebreakingVarargsMethods) {", "+\tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments,", "+\t\t\tInvocationSite invocationSite, int inferenceLevel, boolean tiebreakingVarargsMethods)", "+\t{", "-\t\t\tmethod = ParameterizedGenericMethodBinding.computeCompatibleMethod(method, arguments, this, invocationSite);", "+\t\t\tmethod = ParameterizedGenericMethodBinding.computeCompatibleMethod(method, arguments, this, invocationSite, inferenceLevel);", "-\t\tif ((compatibilityLevel = myParameterCompatibilityLevel(method, arguments, tiebreakingVarargsMethods, invocationSite)) > NOT_COMPATIBLE) {", "+\t\tif ((compatibilityLevel = parameterCompatibilityLevel18(method, arguments, tiebreakingVarargsMethods, invocationSite)) > NOT_COMPATIBLE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a57d93dc703158ff10260e8f30259b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e1a4dd76a1096e4a9ca316a8229a1b7d5fbaaa3a", "commitAfterChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath() throws JavaModelException", "signatureAfterChange": " \t \tpublic IClasspathEntry[] getResolvedClasspath() throws JavaModelException", "diff": ["-\t */", "-\t\tIClasspathEntry[] resolvedClasspath = perProjectInfo.resolvedClasspath;", "+\t\tIClasspathEntry[] resolvedClasspath = perProjectInfo.getResolvedClasspath();\t", "-\t\t\tresolveClasspath(perProjectInfo);", "-\t\t\tresolvedClasspath = perProjectInfo.resolvedClasspath;", "+\t\t\tresolveClasspath(perProjectInfo, false/*don't use previous session values*/);", "+\t\t\tresolvedClasspath = perProjectInfo.getResolvedClasspath();", "-\t\t\t\tresolveClasspath(temporaryInfo);", "-\t\t\t\tresolvedClasspath = temporaryInfo.resolvedClasspath;", "+\t\t\t\tresolveClasspath(temporaryInfo, false/*don't use previous session values*/);", "+\t\t\t\tresolvedClasspath = temporaryInfo.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5b6d7d0f06cb236d873074f25544ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testRemoveExternalCompilationUnit() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemoveExternalCompilationUnit() throws JavaModelException, CoreException", "diff": ["-public void testRemoveExternalCompilationUnit() throws JavaModelException, CoreException, IOException {", "+public void testRemoveExternalCompilationUnit() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a850f7f944b8eef8c52198352d56dee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-\t\t\tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\t\tReferenceBinding.sortFields(this.fields, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae2a5a4631834b1b7404758b62f0cf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testEditImportSourceType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testEditImportSourceType() throws JavaModelException, CoreException", "diff": ["-public void testEditImportSourceType() throws JavaModelException, CoreException, IOException {", "+public void testEditImportSourceType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aef1e1007116c3d64f0efdb50e5c0b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void duplicateMethodInType(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, boolean equalParameters)", "signatureAfterChange": " public void duplicateMethodInType(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, boolean equalParameters, int severity)", "diff": ["-public void duplicateMethodInType(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, boolean equalParameters) {", "+public void duplicateMethodInType(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, boolean equalParameters, int severity) {", "+\t\t\tseverity,", "+\t\t\tseverity,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af884930f0939779a507c3bec7c95e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 389, "methodNumberAfterChange": 389, "signatureBeforeChange": " \tpublic void test0387() throws JavaModelException", "signatureAfterChange": " \tpublic void test0387() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b07bdfe2df45e7b38f2d69a88ea6e56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void test0099() throws JavaModelException", "signatureAfterChange": " \tpublic void test0099() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b288e29ff38407c45c15eb17e20bea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource)\tthrows JavaModelException", "signatureAfterChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource)\tthrows JavaModelException", "diff": ["-\t\t\tif (((IProject) getUnderlyingResource()).isOpen()) {", "+\t\t\tif (getProject().isOpen()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6524a669db418f67bcfcfb1c8a0999", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  public void testCompletionUnresolvedParameterType() throws JavaModelException", "signatureAfterChange": "  public void testCompletionUnresolvedParameterType() throws JavaModelException", "diff": ["-\t\t\"element:barPlus    completion:barPlus()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:barPlus    completion:barPlus()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6b87367ef73a4242b043f7de068d8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "58c4c99d95f495c1408134b2cc53ce1127ec5a07", "commitAfterChange": "47b2ad4e45496e4cc969a74f5f423050b55a0fd0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static void analyseCloseableAllocation(BlockScope scope, FlowInfo flowInfo, AllocationExpression allocation)", "signatureAfterChange": " \tpublic static void analyseCloseableAllocation(BlockScope scope, FlowInfo flowInfo, AllocationExpression allocation)", "diff": ["-\t\t\t\tscope.removeTrackingVar(allocation.closeTracker);", "+\t\t\t\tallocation.closeTracker.withdraw();", "-\t\t\t\t\tallocation.closeTracker.withDraw();", "+\t\t\t\t\tallocation.closeTracker.withdraw();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7f4320a9a444b783165721e9ef9f83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "5e5824d7ea08d8d2e191da403b3a3e822daf1c06", "commitAfterChange": "ee5744d2ef3d1d3d807850f5af1a1524a1b6b71d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test \tpublic void checkPresence()", "signatureAfterChange": " \t \tpublic void testCheckPresence()", "diff": ["-\t@Test", "-\tpublic void checkPresence() {", "+\tpublic void testCheckPresence() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ba41ea1ed23fc651f738f7a3cdda8b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 287, "methodNumberAfterChange": 287, "signatureBeforeChange": " \tpublic void test0285() throws JavaModelException", "signatureAfterChange": " \tpublic void test0285() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ba608c20335327b360e4c32f0fbe2a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 261, "methodNumberAfterChange": 261, "signatureBeforeChange": " public void test0260() throws JavaModelException", "signatureAfterChange": " public void test0260() throws JavaModelException", "diff": ["-\t\t\t\t\"oneTwoThree[ANNOTATION_ATTRIBUTE_REF]{oneTwoThree, Lcamelcase.Annot;, Ljava.lang.String;, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"oTTAttribute[ANNOTATION_ATTRIBUTE_REF]{oTTAttribute, Lcamelcase.Annot;, Ljava.lang.String;, oTTAttribute, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"oneTwoThree[ANNOTATION_ATTRIBUTE_REF]{oneTwoThree, Lcamelcase.Annot;, Ljava.lang.String;, oneTwoThree, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTAttribute[ANNOTATION_ATTRIBUTE_REF]{oTTAttribute, Lcamelcase.Annot;, Ljava.lang.String;, oTTAttribute, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bb55c8fec1bdf2133b23a140ad97c90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testDeleteTwoMethods() throws JavaModelException", "signatureAfterChange": " public void testDeleteTwoMethods() throws JavaModelException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bb5de495d18db20735758d5cd9dc097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CommentRecorderParser.java", "commitBeforeChange": "f27100c9a03d1ad4af3d49219ed6a35545e3cfed", "commitAfterChange": "da348589e3fa3fe0a889394dbec5343c317d63e7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void initializeScanner()", "signatureAfterChange": " \tpublic void initializeScanner()", "diff": ["-\t\t\t\tthis.options.taskPriorites/*taskPriorities*/,", "+\t\t\t\tthis.options.taskPriorities/*taskPriorities*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bbb7eb73f7e410baeb694d764332630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 260, "methodNumberAfterChange": 260, "signatureBeforeChange": " \tpublic void test0258() throws JavaModelException", "signatureAfterChange": " \tpublic void test0258() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf1a202d4eb89f73b01e3dc7ac8c969", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/EvaluationSetup.java", "commitBeforeChange": "7b8d5c7508ea719493ec332b6a663b0c9d5bf2e4", "commitAfterChange": "6329392391434b66c6ee73c60c57e78ad7f48265", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void startReader(String name, final InputStream in)", "signatureAfterChange": " protected void startReader(String name, final InputStream in, final PrintStream out)", "diff": ["-protected void startReader(String name, final InputStream in) {", "+protected void startReader(String name, final InputStream in, final PrintStream out) {", "-\t\t\t\t\tSystem.out.print((char) read);", "+\t\t\t\t\tout.print((char) read);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf1f71b6201838d56e9c0c74a899a0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf650a3a67a1b21ec84d5b0ae26b49f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "d3a75dd70755d47455161cad3e4a366e8ddf8ed2", "commitAfterChange": "838a013a73d7b6e4530eddb128999880d8ca088a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \t\r \tpublic Assignment convert(org.eclipse.jdt.internal.compiler.ast.Assignment expression)", "signatureAfterChange": "\r \t\r \tpublic Assignment convert(org.eclipse.jdt.internal.compiler.ast.Assignment expression)", "diff": ["-\t\tassignment.setSourceRange(expression.sourceStart, expression.sourceEnd - expression.sourceStart + 1);\r", "-\t\tassignment.setLeftHandSide(convert(expression.lhs));\r", "+\t\tExpression lhs = convert(expression.lhs);\r", "+\t\tassignment.setLeftHandSide(lhs);\r", "+\t\tint start = lhs.getStartPosition();\r", "+\t\tassignment.setSourceRange(start, expression.sourceEnd - start + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfd194dcdaece98786cb00a40d3ed52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String debugName()", "signatureAfterChange": " \tpublic String debugName()", "diff": ["-\t    appendNullAnnotation(nameBuffer);", "+\t    appendNullAnnotation(nameBuffer, this.environment.globalOptions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c08761359918e488ac55fd0f71e880d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 162, "signatureBeforeChange": " protected void consumeInsideCastExpressionLL1()", "signatureAfterChange": " protected void consumeInsideCastExpressionLL1()", "diff": ["+\tpushOnExpressionStack(getUnspecifiedReferenceOptimized());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c0cae5cd6451cf474efe6a4effe2e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "14e234724f203a6fef415e43d34432d323b84ca1", "commitAfterChange": "66e076adb0340dce3dd9bba5c2d65608184b470b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void resolve()", "signatureAfterChange": "  \tpublic void resolve()", "diff": ["+\t\t} else {", "+\t\t\t// resolve compilation unit javadoc package if any", "+\t\t\tif (this.javadoc != null) {", "+\t\t\t\tthis.javadoc.resolve(this.scope);", "+    \t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c4daf4f964e9e12e32ced36d7bd82f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic IPath addInternalJar(IPath projectPath, String zipName, byte[] contents, boolean isExported) throws JavaModelException", "signatureAfterChange": " \tpublic IPath addInternalJar(IPath projectPath, String zipName, byte[] contents, boolean isExported) throws JavaModelException", "diff": ["-\t\tcheckAssertion(\"zipName must end with .zip or .jar\", zipName.endsWith(\".zip\") || zipName.endsWith(\".jar\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c4fd52201873b188562ccb82c77d375", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\treturn message;", "+\t\treturn this.message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6ee59acb588869f4e92e41a13e727f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "8a17153af69ddcddcc6ac5bd94649f0b523f5b72", "commitAfterChange": "a6fddb558f09852d0df8b3655125e6a25d3ce37b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Override \tpublic Set<? extends Element> getElementsAnnotatedWith(Class<? extends Annotation> a)", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getElementsAnnotatedWith(Class<? extends Annotation> a)", "diff": ["-\t", "+", "+\t\tif (annoType == null) {", "+\t\t\treturn Collections.emptySet();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7cea28b272352f46ad66972413d707", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "5d2ad0b940570868aeb3a33317182334e9423c29", "commitAfterChange": "0f27abdc440c19d22cca8de897116ef5e59c08c4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic char[] readableName()", "signatureAfterChange": " \tpublic char[] readableName()", "diff": ["-\t\t\treadableName = CharOperation.concat(this.type.enclosingType().readableName(), sourceName, '.');", "+\t\t\treadableName = CharOperation.concat(enclosingType().readableName(), sourceName, '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8d84f18b9aaf5f60ffec622c56560f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": " private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-\t\t\t? \"\" //$NON-NLS-1$", "+\t\t\t? Util.EMPTY_STRING"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c98c63906a6f0d160c8c96248e890dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "commitAfterChange": "32a60bacedc42c981665cac45ff4a4b56eefa42c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tMap newElements,\r \t\tIResource underlyingResource)\tthrows JavaModelException", "signatureAfterChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tMap newElements,\r \t\tIResource underlyingResource)\tthrows JavaModelException", "diff": ["+\t\t\t\t} catch(JavaModelException e) {\r", "+\t\t\t\t\tUtil.log(e, \r", "+\t\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$\r", "+\t\t\t\t\t\t+\"/.classpath, will revert to default classpath\"); //$NON-NLS-1$\r", "-\t\t\t\t\t//throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ccf61b0feaa1d04e553976b80af2c11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BlockComment.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce402ec82932622aac2902bff99602a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexerRequestor.java", "commitBeforeChange": "f263f2ef7943b444a7df1ecbae4d4e44696c99a8", "commitAfterChange": "7f51e750d684686314cf957cd0a463e4558546e5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private void enterEnum(TypeInfo typeInfo)", "signatureAfterChange": " private void enterEnum(TypeInfo typeInfo)", "diff": ["-\t\t\ttypeInfo.superinterfaces[i] = CharOperation.lastSegment(typeInfo.superinterfaces[i], '.');", "+\t\t\ttypeInfo.superinterfaces[i] = getSimpleName(typeInfo.superinterfaces[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce82f25934cb322572da1ab9f55de4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(String path, String source) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(String path, String source) throws JavaModelException", "diff": ["-\treturn super.getWorkingCopy(path, source, this.owner, null);", "+\treturn super.getWorkingCopy(path, source, this.wcOwner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf5e8b4fb371c52c79cc8a92162126f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  public char[] readableName()", "signatureAfterChange": "  public char[] readableName()", "diff": ["-\tif ((typeVars = this.typeVariables()) != NoTypeVariables) {", "+\tif ((typeVars = this.typeVariables()) != Binding.NO_TYPE_VARIABLES) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf84903c0f7db72c65e432479ece247", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void parseBlockStatements(MethodDeclaration md, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parseBlockStatements(MethodDeclaration md, CompilationUnitDeclaration unit)", "diff": ["-\tif ((md.modifiers & AccSemicolonBody) != 0)", "+\tif ((md.modifiers & ExtraCompilerModifiers.AccSemicolonBody) != 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfc7b3a0a83d8b8f53011dd7e79dafd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic void test0071() throws JavaModelException", "signatureAfterChange": " \tpublic void test0071() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d05ceb4ee99cff868963b49bf9965f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " \tpublic void test0556() throws JavaModelException", "signatureAfterChange": " \tpublic void test0556() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d71bcc2aa4655ee2a1e43c1de6ec1cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void test050()", "signatureAfterChange": " \tpublic void test050()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd173ee3f5614a89d353695f1835a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "dc8046a1f26c48f37690a73dc98185cd18d7251b", "commitAfterChange": "9919a97962e85d4a4559a7d46dd083c16b4eba9e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   protected void assertResourcesEqual(String message, String expected, Object[] resources)", "signatureAfterChange": "   protected void assertResourcesEqual(String message, String expected, Object[] resources)", "diff": ["-\t\tbuffer.append(((IResource)resources[i]).getName());", "+\t\tIResource resource = (IResource)resources[i];", "+\t\tbuffer.append(resource == null ? \"<null>\" : resource.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0a52504721fdfd39d4c322b391c47c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1058825544a82a92499940b514ac89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 272, "signatureBeforeChange": " \tpublic void test0270() throws JavaModelException", "signatureAfterChange": " \tpublic void test0270() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1129a63b27b9f86a30e30551d67722", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 427, "methodNumberAfterChange": 427, "signatureBeforeChange": " \tpublic void test408()", "signatureAfterChange": " \tpublic void test408()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1defdf0dd8ebe3e291cf2b7be3f32a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tfinal public boolean isPotentiallyAssigned(LocalVariableBinding local)", "signatureAfterChange": " \tfinal public boolean isPotentiallyAssigned(LocalVariableBinding local)", "diff": ["-\t\tif (local.constant != Constant.NotAConstant) {", "+\t\tif (local.isConstantValue()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e41596f3f05263811a4e54173adffa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "1f5650f99fcfcd5f8469f0a77758c1498339ddb8", "commitAfterChange": "4ae2555a33c9cf587194575f2b75f0cd69f771d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5bb2e77408fedde2311573a0f3d8f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "f3b64ea93b19b8458537764dde9ca49ccdd1e1d5", "commitAfterChange": "d36603e234e78a5608b9d157413740c9d9579f5d", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "diff": ["-\t\t\t    if (currentType.arguments != null)", "-\t\t\t\t\treturn currentType.arguments[originalVariable.rank];", "+\t\t\t    if (currentType.arguments != null) {", "+\t\t\t    \t if (currentType.arguments.length == 0) { // diamond type", "+\t\t\t\t\t    \treturn originalVariable;", "+\t\t\t\t\t    }", "+\t\t\t    \t return currentType.arguments[originalVariable.rank];", "+\t\t\t    }\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e7b129ce9458d28142fea4da017f9bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " public void testCompletionObjectsMethodWithInterfaceReceiver() throws JavaModelException", "signatureAfterChange": " public void testCompletionObjectsMethodWithInterfaceReceiver() throws JavaModelException", "diff": ["-\t\t\"element:hashCode    completion:hashCode()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:hashCode    completion:hashCode()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e81ec5767abb020f27c47b225af5838", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected int resolveLevelForType(TypeBinding typeBinding)", "signatureAfterChange": " protected int resolveLevelForType(TypeBinding typeBinding)", "diff": ["-\t\t\tfieldPattern.typeSignature,", "+\t\t\tfieldPattern.typeArguments,", "+\t\t\t0,", "-\t\t\tfieldPattern.declaration,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ea1ca5fe8fe96e6f9d8f7478b445933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tpushIdentifier(true);", "+\t\t\t\t\t\tpushIdentifier(true, false);", "-\t\t\t\t\t\tpushIdentifier(true);", "+\t\t\t\t\t\tpushIdentifier(true, true);", "-\t\t\t\t\t\t\tpushIdentifier(false);", "+\t\t\t\t\t\t\tpushIdentifier(false, false);", "-\t\t\t\t\t\t\tpushIdentifier(false);", "+\t\t\t\t\t\t\tpushIdentifier(false, true);", "+\t\tif (this.kind == COMPLETION_PARSER) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eb91e4f67a4b4bee1892131c061a98b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 137, "signatureBeforeChange": " final public void if_icmpge(Label lbl)", "signatureAfterChange": " final public void if_icmpge(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_iacmpge:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f03593d569217227be243f24d095b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  boolean isKnownPackage(String qualifiedPackageName)", "signatureAfterChange": "  boolean isKnownPackage(String qualifiedPackageName)", "diff": ["-\t\tArrayList names = new ArrayList(typeLocations.elementSize);", "-\t\tObject[] keyTable = typeLocations.keyTable;", "+\t\tArrayList names = new ArrayList(typeLocators.elementSize);", "+\t\tObject[] keyTable = typeLocators.keyTable;", "-\tfor (int i = 0, length = knownPackageNames.length; i < length; i++)", "+\tfor (int i = 0, l = knownPackageNames.length; i < l; i++)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f05e972b10f8f81658fc3c210a9fb05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SelectionJavadocModelTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testBug171802() throws CoreException", "signatureAfterChange": " \tpublic void testBug171802() throws CoreException", "diff": ["-\t\tworkingCopies = new ICompilationUnit[2];", "-\t\tworkingCopies[0] = getWorkingCopy(\"/Tests/b171802/Y.java\",", "+\t\tthis.workingCopies = new ICompilationUnit[2];", "+\t\tthis.workingCopies[0] = getWorkingCopy(\"/Tests/b171802/Y.java\",", "-\t\t\t\"}\\n\",", "-\t\t\twcOwner,", "-\t\t\tnull/*don't compute problems*/", "+\t\t\t\"}\\n\"", "-\t\tworkingCopies[1] = getWorkingCopy(\"/Tests/b171802/X.java\",", "+\t\tthis.workingCopies[1] = getWorkingCopy(\"/Tests/b171802/X.java\",", "-\t\t\t\"}\\n\",", "-\t\t\twcOwner,", "-\t\t\tnull/*don't compute problems*/", "+\t\t\t\"}\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0767122415fd8d44fdfbb51c5b2a90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": "\r protected void consumeSingleTypeImportDeclarationName()", "signatureAfterChange": "\r protected void consumeSingleTypeImportDeclarationName()", "diff": ["+\timpt.declarationEnd = impt.declarationSourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f335f6e97f530c13d5a51b00b695092", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "ade181db7356e902754c81dd9d71430c049ed0c1", "commitAfterChange": "c3fe471c0fdcefebf95bb7bbebd413b0a2c46646", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static void analyseCloseableAllocation(BlockScope scope, FlowInfo flowInfo, AllocationExpression allocation)", "signatureAfterChange": " \tpublic static void analyseCloseableAllocation(BlockScope scope, FlowInfo flowInfo, AllocationExpression allocation)", "diff": ["-\t\t\t\t\tscope.removeTrackingVar(allocation.closeTracker);", "+\t\t\t\t\tallocation.closeTracker.withDraw();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f35cc660d9673a1c62ced083b20252d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic void test0465() throws JavaModelException", "signatureAfterChange": " \tpublic void test0465() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f547c20bd3b30fffa2852f9ce69cf08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testCompletionFindClassDefaultPackage() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindClassDefaultPackage() throws JavaModelException", "diff": ["-\t\t\"element:Default    completion:Default    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:Default    completion:Default    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f589edc4ccd9a6f37256ae488e8197d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "426a22a90156032e3e20fbefee4f250587739de2", "commitAfterChange": "98290714f73216e0b5ae011215dc9922edd33e0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["+\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6ea9a09a64f15c04d719b9459df557", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void test0445() throws JavaModelException", "signatureAfterChange": " \tpublic void test0445() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7c1685e3cf088cbe1d9b4d2f6645d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test0006() throws JavaModelException", "signatureAfterChange": " \tpublic void test0006() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8d9d78057da6dc11fcb9964ceed1a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "3aa96cd0f03615774b8ac0aa730f24089285336b", "commitAfterChange": "a6bc9b89c0f99b3b1a760aa351e68b2be5cc2b5f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r protected void removeProblemsFor(IResource resource)", "signatureAfterChange": "\r \r protected void removeProblemsFor(IResource resource)", "diff": ["-\t} catch (CoreException e) {\r", "-//@PM THIS CODE SHOULD PROBABLY HANDLE THE CORE EXCEPTION LOCALLY ?\r", "-\t\tthrow internalException(e);\r", "-\t}\r", "+\t} catch (CoreException e) {} // assume there were no problems\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f9df464efaf106237849ad1ec817448", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tpublic void test024()", "signatureAfterChange": "  \tpublic void test024()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa269a40cfd5e8bf4157082822759e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 402, "signatureBeforeChange": " \tpublic void test0400() throws JavaModelException", "signatureAfterChange": " \tpublic void test0400() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fc5af543d4153139a56d69943fd40cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "4de0afbdfacb5e6a73acacf38df6b15ebd7071ff", "commitAfterChange": "9ef16bbd886b16521464fbe002994d5fbaed976f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\t \t \tprotected final void updateModel(DialogField field)", "signatureAfterChange": "\t \t \tprotected final void updateModel(DialogField field)", "diff": ["+\t\t} else if (field == fProcessorOptionsField) {", "+\t\t\tsetValue(KEY_PROCESSOROPTIONS, fProcessorOptionsField.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff5dce60d96020ff6eb4954625fdbda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "054ef716f5c2a57e4e4c8e790ba134b6404d4f2a", "commitAfterChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["+\t\t\t\tsourceType.typeBits |= superclass.typeBits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff79e0ea07faabee97390fb68b4fc2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": " \tpublic void test0239() throws JavaModelException", "signatureAfterChange": " \tpublic void test0239() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5000e7f142f04a08ad4ca449c9ef45cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "096cb36254ba99508e014321c5d7bdf59c5845fe", "commitAfterChange": "7a7863e26d078771aa16ec2c24b37b93343d0529", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void deleteEmptyPackageFragment( \t\tIPackageFragment fragment, \t\tboolean force, \t\tIResource rootResource) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected void deleteEmptyPackageFragment( \t\tIPackageFragment fragment, \t\tboolean force, \t\tIResource rootResource) \t\tthrows JavaModelException", "diff": ["-\t\t\tif (resource.isReadOnly()) {", "-\t\t\t\tresource.setReadOnly(false);", "-\t\t\t}", "-\t\t\t\t\tif (resource.isReadOnly()) {", "-\t\t\t\t\t\tresource.setReadOnly(false);", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50242ccabc113353f32f27a3066f93d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": " \tpublic void test0555() throws JavaModelException", "signatureAfterChange": " \tpublic void test0555() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50399c58e9d7c2feb9b666eef32435fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void enterMethod( \tint declarationStart, \tint modifiers, \tchar[] returnType, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[][] parameterTypes, \tchar[][] parameterNames, \tchar[][] exceptionTypes, \tboolean isConstructor)", "signatureAfterChange": " protected void enterMethod( \tint declarationStart, \tint modifiers, \tchar[] returnType, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[][] parameterTypes, \tchar[][] parameterNames, \tchar[][] exceptionTypes, \tboolean isConstructor)", "diff": ["-\t\t\thandle = new SourceMethod((IType) parentHandle, new String(name), parameterTypeSigs);", "+\t\t\thandle = new SourceMethod(parentHandle, new String(name), parameterTypeSigs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50498456d93e4a3bc0aa6edea45e1710", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void test0028() throws JavaModelException", "signatureAfterChange": " \tpublic void test0028() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506dbcee1461814f45a9bad043b18f51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "f6928a3e7ff4d633032250ff1eeb28d81a4173fb", "commitAfterChange": "08f3ed4913599f8b8a74808e920cd923aa028f37", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void toStringInfo(int tab, StringBuffer buffer, Object info)", "signatureAfterChange": " protected void toStringInfo(int tab, StringBuffer buffer, Object info)", "diff": ["-\t\tbuffer.append(getElementName());", "+\t\ttoStringName(buffer);", "-\t\tbuffer.append(getElementName());", "+\t\ttoStringName(buffer);", "-\t\t\tbuffer.append(this.getElementName());", "+\t\t\ttoStringName(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5073ed7b2c4190a381f816bf4d286435", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " \tpublic void test0134() throws JavaModelException", "signatureAfterChange": " \tpublic void test0134() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507b336957ef7b3238d8af36cde46595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "0e45e470334a22a4640bca0d06c853602205abbd", "commitAfterChange": "fb2e3abc53624f743940363bb17ddf0720807a6d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public char[] getPackageName()", "signatureAfterChange": " public char[] getPackageName()", "diff": ["-\treturn CharOperation.subarray(this.qualification, 0, this.packageIndex);", "+\treturn internedPackageNames.add(CharOperation.subarray(this.qualification, 0, this.packageIndex));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507cd486d602d49825c3fd3410713fe5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 265, "signatureBeforeChange": " final public void ret(int index)", "signatureAfterChange": " final public void ret(int index)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tret:\"+index); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5086cb449234ca17d781d0ad23a0d360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic void test0059() throws JavaModelException", "signatureAfterChange": " \tpublic void test0059() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50b38366707c2f860c756bf16e977bae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 43, "signatureBeforeChange": " public boolean isAnnotationType()", "signatureAfterChange": "  public boolean isAnnotationType()", "diff": ["+", "-\treturn (modifiers & ClassFileConstants.AccAnnotation) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccAnnotation) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c4db426965d380b7448912717a1126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f04f8b342c7b71da1a56858ab790d24d761e7d9c", "commitAfterChange": "cb9adfe2a810fff7861c89a641a842e760d0d109", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "diff": ["-\t\t\t", "-\t\t\tIFile file = getIFileForTypeName( typeName );", "-\t\t\t//", "-\t\t\t// make sure GENERATED_SOURCE_FOLDER_NAME dir is on the cp if not already", "-\t\t\t// this dir will be created by getIFileForTypeName", "-\t\t\t//", "-\t\t\tIFolder folder = project.getFolder( GENERATED_SOURCE_FOLDER_NAME );", "-\t\t\tupdateProjectClasspath( (JavaProject)javaProject, folder, progressMonitor );", "+\t\t\tIFolder folder = ensureGeneratedSourceFolder( javaProject, progressMonitor );", "+\t\t\t", "+\t\t\tIFile file = getIFileForTypeName( typeName, javaProject, progressMonitor );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50da7ccd03ec06f9f7d907de61ba3b92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testMethodWithError3() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError3() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50e17c618e81c9fe394fcb6efc7a5bf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "2ae376eecdf009a219a3bf040a7d6efa2f2cfa1a", "commitAfterChange": "aebd1e6d77eafd999c6151df2cd165f618e2992d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "signatureAfterChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "diff": ["-\t\t\t\t\tIMarker.LINE_NUMBER},", "+\t\t\t\t\tIMarker.LINE_NUMBER,", "+\t\t\t\t\t\"readOnly\"}, //TODO: improve once IMarker constant is added //$NON-NLS-1$", "+\t\t\t\t\tnew Boolean(true),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f40c422b5f311978c6debf439bdb84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "b4479722cb720b0c4dbcd9de962474b7e0e0f573", "commitAfterChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "signatureAfterChange": " MethodBinding createMethod(AbstractMethodDeclaration method)", "diff": ["-\tif (argLength > 0 && sourceLevel >= ClassFileConstants.JDK1_5) {", "+\tif (argLength > 0) {", "-\t\tif (argument.isVarArgs())", "+\t\tif (argument.isVarArgs() && sourceLevel >= ClassFileConstants.JDK1_5)", "-\t\t\tif (argument.isVarArgs())", "+\t\t\tif (argument.isVarArgs() && sourceLevel >= ClassFileConstants.JDK1_5)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f6784cc26d9bde46653bf25f7ab7ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tpublic void testSingleVariableDeclaration()", "signatureAfterChange": " \tpublic void testSingleVariableDeclaration()", "diff": ["-\t\t\tx.extraDimensions().add(this.ast.newExtraDimension());", "+\t\t\tx.extraDimensions().add(this.ast.newDimension());", "-\t\t\t\t\tnew Property(\"ExtraDimensions\", true, ExtraDimension.class) { //$NON-NLS-1$", "+\t\t\t\t\tnew Property(\"ExtraDimensions\", true, Dimension.class) { //$NON-NLS-1$", "-\t\t\t\t\t\t\tExtraDimension result = targetAst.newExtraDimension();", "+\t\t\t\t\t\t\tDimension result = targetAst.newDimension();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50fb5ace3c66495222d0eb0767274670", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic IQueryResult[] query(String word) throws IOException", "signatureAfterChange": " \tpublic IQueryResult[] query(String word)", "diff": ["-\tpublic IQueryResult[] query(String word) throws IOException {", "+\tpublic IQueryResult[] query(String word) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511357fe4df08d7b3780df957f095574", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "b267dc5fd07e62c802290616c0cbe7abef453463", "commitAfterChange": "aa0984d79780a8b5715722d33a45cdb0c134a6fb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t|| !fieldBinding.declaringClass.canBeSeenBy(currentScope))){", "+\t\t\t\t|| !((FieldBinding)this.codegenBinding).declaringClass.canBeSeenBy(currentScope))){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5113da3fd5af3185a5835105c8f2a2ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\ttypeDeclaration.methods[0] = typeDeclaration.createsInternalConstructor(false, false);", "+\t\t\ttypeDeclaration.methods[0] = typeDeclaration.createDefaultConstructor(false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5120849e998c014073cf09d8bc76ccf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testBug79288() throws Exception", "signatureAfterChange": " public void testBug79288() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "512925b80aca1135f9fb34a7123fdefa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "aa6aecd1e85bc088f78aefc939f3035d29fdf2f7", "commitAfterChange": "caead2c6488f232c99b522820aa80d0eed7f2116", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\t  \tpublic void testEnumConstantDeclaration1() throws Exception", "signatureAfterChange": "\t  \tpublic void testEnumConstantDeclaration1() throws Exception", "diff": ["-\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.bodyDeclarations().get(0);", "+\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.enumConstants().get(0);", "-\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.bodyDeclarations().get(1);", "+\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.enumConstants().get(1);", "-\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.bodyDeclarations().get(2);", "+\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.enumConstants().get(2);", "-\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.bodyDeclarations().get(3);", "+\t\t\tEnumConstantDeclaration enumConst= (EnumConstantDeclaration) type.enumConstants().get(3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514d1b92c4a037298a38d503194406a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "0aa7dea4bc76da1cfdaf2ad3978817e9aac1014f", "commitAfterChange": "b87d35812b101296bb4ba9a7686e261bcb057a01", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tDefaultCodeFormatter codeFormatter()", "signatureAfterChange": "  \tDefaultCodeFormatter codeFormatter()", "diff": ["-\t\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(this.formatterPrefs, JAVA_PROJECT.getOptions(true));", "+\t\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(this.formatterPrefs, this.formatterOptions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5165afacd448e59cef1abf176fbf07cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic char[] findSource(String fullName)", "signatureAfterChange": " \t \tpublic char[] findSource(String fullName)", "diff": ["-\t\tif (Util.isArchiveFileName(this.sourcePath.lastSegment())) {", "+\t\tObject target = JavaModel.getTarget(this.sourcePath, true);", "+\t\tif (target instanceof IContainer) {", "+\t\t\tIResource res = ((IContainer)target).findMember(fullName);", "+\t\t\tif (res instanceof IFile) {", "+\t\t\t\ttry {", "+\t\t\t\t\tsource = org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray((IFile)res);", "+\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "-\t\t\t}", "-\t\t} else {", "-\t\t\tObject target = JavaModel.getTarget(this.sourcePath, true);", "-\t\t\tif (target instanceof IContainer) {", "-\t\t\t\tIResource res = ((IContainer)target).findMember(fullName);", "-\t\t\t\tif (res instanceof IFile) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tsource = org.eclipse.jdt.internal.core.util.Util.getResourceContentsAsCharArray((IFile)res);", "-\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t// ignore", "-\t\t\t\t\t}", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5187ef4448606989a844f1f842e805ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": " \tpublic void test0169() throws JavaModelException", "signatureAfterChange": " \tpublic void test0169() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51a0197fa7a20ad0f9fbf104c2cac357", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final boolean isImplementing()", "signatureAfterChange": " public final boolean isImplementing()", "diff": ["-\treturn (modifiers & AccImplementing) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccImplementing) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ad6050514a3117f373c3be5ce59121", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void testSuperFieldInvocation() throws Exception", "signatureAfterChange": " \t \tpublic void testSuperFieldInvocation() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(leftFieldAccess.getName(), newName, null);", "+\t\t\trewrite.replace(leftFieldAccess.getName(), newName, null);", "-\t\t\trewrite.markAsRemoved(rightFieldAccess.getQualifier(), null);", "+\t\t\trewrite.remove(rightFieldAccess.getQualifier(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51b32142671bb714e5c19de9339b1e04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "3c45dfdaa93e52d5836a3f1e183a61f2a8eac91b", "commitAfterChange": "7b5e14fca8a5cf7d78d10afc4f2876c54b0a784d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static String[] tokenize(String commandLine)", "signatureAfterChange": "  \tpublic static String[] tokenize(String commandLine)", "diff": ["-\t\tString token = \"\", lastToken; //$NON-NLS-1$", "+\t\tString token = \"\"; //$NON-NLS-1$", "-\t\t\tlastToken = token;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51c58911ebe920c4b131c0f9956d3398", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "d2fd0a411735601d08912dc407d669f4cabc6555", "commitAfterChange": "6e5a548d86606bf19201f8e25ff7972af2431caf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\t\tif (wrapper.signature[wrapper.start] == '<') {", "+\t\t\tif (wrapper.signature[wrapper.start] == Util.C_GENERIC_START) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d07f50e08379734c4552c68a1418fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0716b9527725dfa866349bcb7a45ea1d5ecddd2b", "commitAfterChange": "a544ec0a30c50b5e3390138a2a653e5667e6b6a8", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": " public void removeNotDefinitelyAssignedVariables(Scope scope, int initStateIndex)", "signatureAfterChange": " public void removeNotDefinitelyAssignedVariables(Scope scope, int initStateIndex)", "diff": ["-\tif ((this.generateAttributes & ClassFileConstants.ATTR_VARS) == 0)", "+\tif (((this.generateAttributes & ClassFileConstants.ATTR_VARS) == 0)", "+\t\t\t&& ((this.generateAttributes & ClassFileConstants.ATTR_STACK_MAP) == 0))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d1118c8fb0c47ba18c39ce0152f20e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void printTrailingComment()", "signatureAfterChange": " \tpublic void printTrailingComment()", "diff": ["-\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tprintLineComment();", "-\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource(), false);", "+\t\t\t\t\t\tprintBlockComment(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e7c48b1e57ca8d60c564498e71b28e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "commitAfterChange": "adfd584faf146517cb3e86f9f2b585f2851a3630", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": " void verify(SourceTypeBinding someType)", "signatureAfterChange": " void verify(SourceTypeBinding someType)", "diff": ["-\tthis.computeMethods();", "-\tthis.computeInheritedMethods();", "-\tthis.checkMethods();", "+\tcomputeMethods();", "+\tcomputeInheritedMethods();", "+\tcheckMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51eeb34b73494d079f2bac00f67d461c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "commitAfterChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\treturn new SuperInterfaceReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);", "+\t\t\treturn new SuperTypeReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51fb0f91fd8205f1f92c98aaab4204a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic char[] computeUniqueKey()", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-\tpublic char[] computeUniqueKey() {", "-\t\tchar[] declaringKey = this.declaringElement.computeUniqueKey();", "+\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "+\t\tchar[] declaringKey = this.declaringElement.computeUniqueKey(false/*without access flags*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "522e4a724f13cb997ebc781d332b7704", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "7cbe4f19bb1df273654d46a2c3cf3adc8bec4495", "commitAfterChange": "035bf6cdaeb6a32009f251436f6354e37769b23d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r private boolean hasNonSyntheticMethodChanges(MethodInfo[] currentMethodInfos, MethodInfo[] otherMethodInfos)", "signatureAfterChange": "\r private boolean hasNonSyntheticMethodChanges(MethodInfo[] currentMethodInfos, MethodInfo[] otherMethodInfos)", "diff": ["+\tMethodInfo m;\r", "-\t\twhile (currentMethodInfos[index1].isSynthetic()) {\r", "+\t\twhile ((m = currentMethodInfos[index1]).isSynthetic() || m.isClinit()) {\r", "-\t\twhile (otherMethodInfos[index2].isSynthetic()) {\r", "+\t\twhile ((m = otherMethodInfos[index2]).isSynthetic() || m.isClinit()) {\r", "-\t\tif (!currentMethodInfos[index1++].isSynthetic()) return true;\r", "+\t\tif (!((m = currentMethodInfos[index1++]).isSynthetic() || m.isClinit())) return true;\r", "-\t\tif (!otherMethodInfos[index2++].isSynthetic()) return true;\r", "+\t\tif (!((m = otherMethodInfos[index2++]).isSynthetic() || m.isClinit())) return true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5237f5f1555fc5608f82aa41bbc93f2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "cc52f8303a1898b339dcf4be5f768cc179ba5177", "commitAfterChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t\tprotected boolean visitNode(ASTNode node)", "signatureAfterChange": "  \t\tprotected boolean visitNode(ASTNode node)", "diff": ["+\t\t\t// Stop visit for malformed node (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=84049)", "+\t\t\tif ((node.typeAndFlags & ASTNode.MALFORMED) != 0) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526313a7b9bb5b9bf4a9a0d77e51d344", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void analyseCode(ClassScope enclosingClassScope)", "signatureAfterChange": " public void analyseCode(ClassScope enclosingClassScope)", "diff": ["-\t */", "-\tpublic void analyseCode(ClassScope enclosingClassScope) {", "-", "-\t\tif (ignoreFurtherInvestigation)", "-\t\t\treturn;", "-\t\ttry {", "-\t\t\t// propagate down the max field count", "-\t\t\tupdateMaxFieldCount();", "-\t\t\tinternalAnalyseCode(null, FlowInfo.initial(maxFieldCount));", "-\t\t} catch (AbortType e) {", "-\t\t\tthis.ignoreFurtherInvestigation = true;", "+ */", "+public void analyseCode(ClassScope enclosingClassScope) {", "+\tif (this.ignoreFurtherInvestigation)", "+\t\treturn;", "+\ttry {", "+\t\t// propagate down the max field count", "+\t\tupdateMaxFieldCount();", "+\t\tinternalAnalyseCode(null, FlowInfo.initial(this.maxFieldCount));", "+\t} catch (AbortType e) {", "+\t\tthis.ignoreFurtherInvestigation = true;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527d87488fd1643832979c98a8d12223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5292f8818d8ead8ea551363fb1c826a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 58, "signatureBeforeChange": " public final boolean isStrictfp()", "signatureAfterChange": " public final boolean isStrictfp()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccStrictfp) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccStrictfp) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b60de9e5cc820c2c5bd36c0870d9f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void test0093() throws JavaModelException", "signatureAfterChange": " \tpublic void test0093() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52becc5cdf74fa4f45af3f0d2c32fab4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 594, "methodNumberAfterChange": 594, "signatureBeforeChange": " public void testCompletionRepeatedType() throws JavaModelException", "signatureAfterChange": " public void testCompletionRepeatedType() throws JavaModelException", "diff": ["-\t\t\"element:CompletionRepeatedOtherType    completion:CompletionRepeatedOtherType    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:CompletionRepeatedType    completion:CompletionRepeatedType    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "+\t\t\"element:CompletionRepeatedOtherType    completion:CompletionRepeatedOtherType    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\"element:CompletionRepeatedType    completion:CompletionRepeatedType    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52cca15d0dc017c038ed43affa18fe5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BreakStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getLabel()", "signatureAfterChange": "  \tpublic SimpleName getLabel()", "diff": ["-\t\treturn optionalLabel;", "+\t\treturn this.optionalLabel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52dd85760a68ea2aedb0e946288ecaaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "f63db2314417880fb03b69a3a2d9f245018f9762", "commitAfterChange": "ed05e516511eea449e523a1d3b6827ca6c8a5f46", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \tprivate void output(String stringToOutput)", "signatureAfterChange": "\r \tprivate void output(String stringToOutput)", "diff": ["-\t\tupdateMappedPositions(scanner.startPosition);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ebd2134c38699f282312b284e6e160", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testRemovePackageFragmentRoots() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemovePackageFragmentRoots() throws JavaModelException, CoreException", "diff": ["-public void testRemovePackageFragmentRoots() throws JavaModelException, CoreException, IOException {", "+public void testRemovePackageFragmentRoots() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530dba23e91a1b51a7b43da21f062b03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "69322cef043ef54194e3a32f347e151e0e2870a4", "commitAfterChange": "7d0859ec775b8e65d22913e093fcc433c8eb0ab1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "diff": ["+\t\t\t\t\tif (this.options.checkDeprecation &&", "+\t\t\t\t\t\t\tconstructor.isViewedAsDeprecated() &&", "+\t\t\t\t\t\t\t!scope.isDefinedInSameUnit(constructor.declaringClass))", "+\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5337eec259c867b6958376b2c56447e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic final JavaModel getJavaModel()", "signatureAfterChange": " \tpublic final JavaModel getJavaModel()", "diff": ["-\t\treturn javaModel;", "+\t\treturn this.javaModel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5354f951b1c5da9f0dde6f05434504a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void consumeEmptyClassMemberDeclaration()", "signatureAfterChange": " protected void consumeEmptyClassMemberDeclaration()", "diff": ["-\tproblemReporter().superfluousSemicolon(endPosition+1, endStatementPosition);", "+\tproblemReporter().superfluousSemicolon(this.endPosition+1, this.endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53825a45d446b966258338ca51449c86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": " \tpublic void test0337() throws JavaModelException", "signatureAfterChange": " \tpublic void test0337() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539365329cc2d98a0691ea50d8b4cf47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testMethodWithError() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53986e31b7f7eb754c34c7e47e85f5c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": " public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53a35674b98843a9a3a1faefd8ff0015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tpublic void test0149() throws JavaModelException", "signatureAfterChange": " \tpublic void test0149() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53afd50dd1aaa04ec81216e7a0d27ea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "c99d716fa975f313809c9a758c093b0027fd52fe", "commitAfterChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected boolean mustResolve()", "signatureAfterChange": " protected boolean mustResolve()", "diff": ["-\t// would like to change this so that we only do it if generic references are found", "-\tif (this.findReferences) return true; // always resolve (in case of a simple name reference being a potential match)", "+\tif (super.mustResolve()) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53cd9a379ee40cc26741a4095c0cf8f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": " \tpublic void _test384()", "signatureAfterChange": " \tpublic void _test384()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ce1be66a548ae0b23f8e7e8c71db99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "30eb2ef8deb6c1a80cc8122027f34a4da5360729", "commitAfterChange": "2f6e64cbbbc83dfd41e2988704a66b1a58193e8d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic boolean isTypeAccess()", "signatureAfterChange": "  \tpublic boolean isTypeAccess()", "diff": ["-\t\treturn false;", "+\t\treturn !this.haveReceiver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d3358e310f826f23cd96fd9484a655", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "584757da660f01c30e15c07d21edc380f5f7902a", "commitAfterChange": "6b2e4c5497ea9620691a5604ce0c6622b360a0ae", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex, int bodyIndex, int statementIndex)", "signatureAfterChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex, int bodyIndex, int statementIndex)", "diff": ["-\t\tBodyDeclaration bodyDeclaration = (BodyDeclaration)((TypeDeclaration)unit.types().get(typeIndex)).bodyDeclarations().get(bodyIndex);", "+\t\tBodyDeclaration bodyDeclaration = (BodyDeclaration) getASTNode(unit, typeIndex, bodyIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53dc2de483842ceff2de6d02aa71d548", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53f84df7302a68525eb9e93bdfe812be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " \tpublic void test0554() throws JavaModelException", "signatureAfterChange": " \tpublic void test0554() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "542f03270e7a2be4c7d4a7d0c603be09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TextElement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5443b86233efdf9fad37bb8a79e68c37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprivate static TypeDeclaration convert(\r \t\tISourceType sourceType,\r \t\tboolean needFieldsAndMethods,\r \t\tboolean needMemberTypes)", "signatureAfterChange": "\r \tprivate static TypeDeclaration convert(\r \t\tISourceType sourceType,\r \t\tboolean needFieldsAndMethods,\r \t\tboolean needMemberTypes)", "diff": ["+\t\ttype.bodyEnd = type.declarationSourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544c75462b8d863b713c9fc40d2640a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 341, "signatureBeforeChange": " \tpublic void test0693() throws JavaModelException", "signatureAfterChange": " \tpublic void test0693() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545c200fd5a17007943059464c336a5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileObject.java", "commitBeforeChange": "ba3f3515e414cf41bff76ad382644021240dc399", "commitAfterChange": "0fef9e356bfc246dbfd0c9cfea1ba0d8941a3dcb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic NestingKind getNestingKind()", "signatureAfterChange": " \t@Override \tpublic NestingKind getNestingKind()", "diff": ["+\t@Override", "-\t\tswitch(kind) {", "+\t\tswitch(this.kind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5493ef35c4534e61b5902f735399db3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "ba3f3515e414cf41bff76ad382644021240dc399", "commitAfterChange": "0fef9e356bfc246dbfd0c9cfea1ba0d8941a3dcb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, JavaFileManager fileManager, DiagnosticListener<? super JavaFileObject> someDiagnosticListener, Iterable<String> options, Iterable<String> classes, Iterable<? extends JavaFileObject> compilationUnits)", "diff": ["-\tpublic CompilationTask getTask(Writer out,", "-\t\t\tJavaFileManager fileManager,", "-\t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener,", "-\t\t\tIterable<String> options,", "-\t\t\tIterable<String> classes,", "-\t\t\tIterable<? extends JavaFileObject> compilationUnits) {", "-", "+\tpublic CompilationTask getTask(Writer out, JavaFileManager fileManager, DiagnosticListener<? super JavaFileObject> someDiagnosticListener, Iterable<String> options, Iterable<String> classes, Iterable<? extends JavaFileObject> compilationUnits) {", "-\t\teclipseCompiler2.diagnosticListener = diagnosticListener;", "+\t\teclipseCompiler2.diagnosticListener = someDiagnosticListener;", "-\t\t\teclipseCompiler2.fileManager = this.getStandardFileManager(diagnosticListener, null, null);", "+\t\t\teclipseCompiler2.fileManager = this.getStandardFileManager(someDiagnosticListener, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b8824a8e097f50c1a06c5b97726fbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic TypeDeclaration referenceType()", "signatureAfterChange": " \tpublic TypeDeclaration referenceType()", "diff": ["-\t\treturn referenceContext;", "+\t\treturn this.referenceContext;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b971c9dbe590a5545277aff82d85ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  private void addDefaultAbstractMethods()", "signatureAfterChange": "  private void addDefaultAbstractMethods()", "diff": ["-\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c03a0f51f211c91b177f493065aadb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void testCompletionPrefixMethodName1() throws JavaModelException", "signatureAfterChange": "   public void testCompletionPrefixMethodName1() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:xBar    completion:xBar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d8f6b096d817cf43535ae49246e5b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test0034() throws JavaModelException", "signatureAfterChange": " \tpublic void test0034() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e6d7e43b0e065b790e1372d8a2b495", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " protected void consumePushModifiers()", "signatureAfterChange": " protected void consumePushModifiers()", "diff": ["-\tpushOnIntStack(modifiers); // modifiers", "-\tpushOnIntStack(modifiersSourceStart);", "+\tpushOnIntStack(this.modifiers); // modifiers", "+\tpushOnIntStack(this.modifiersSourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e730ce1028ae277f909c329107003d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "42eeb9f34b7d22509ce713827c332d7ec73b6e80", "commitAfterChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testAddZIPArchive4() throws CoreException", "signatureAfterChange": " public void testAddZIPArchive4() throws CoreException", "diff": ["+\t\trefreshExternalArchives(p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54ea9b00747a0ad37b180b67630d5cff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 249, "signatureBeforeChange": " \tpublic void test0610() throws JavaModelException", "signatureAfterChange": " \tpublic void test0610() throws JavaModelException", "diff": ["-\t\tfinal ASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tfinal ASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5515d650a1498d883365e58c1acd32bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ec6df7d4c471e5dbef077b14779058e1a50feb58", "commitAfterChange": "fbe322c82218a8bf3231e05cf5ac45c51090fa72", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \r \tprivate String extractDestinationPathFromSourceFile(CompilationResult result)", "signatureAfterChange": "\r \r \tprivate String extractDestinationPathFromSourceFile(CompilationResult result)", "diff": ["+\t\t\tif (lastIndex == -1) {\r", "+\t\t\t\treturn System.getProperty(\"user.dir\"); //$NON-NLS-1$\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55357bd8cd31ed5f21ab455b9b2f3f46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 221, "signatureBeforeChange": " \tpublic void test0219() throws JavaModelException", "signatureAfterChange": " \tpublic void test0219() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5555c54feddafbe8adaa52eb87d648ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " \tpublic void test0147() throws JavaModelException", "signatureAfterChange": " \tpublic void test0147() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55703b82f28f86b280b30509ad75068b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "0899c90ae8de27e397eab6637d91f616ff022416", "commitAfterChange": "f22829683aa12c28f7526d2be664d40749221fc2", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public org.eclipse.jdt.core.dom.CompilationUnit reconcile( \tint astLevel, \tboolean forceProblemDetection, \tboolean enableStatementsRecovery, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "signatureAfterChange": " public org.eclipse.jdt.core.dom.CompilationUnit reconcile( \tint astLevel, \tboolean forceProblemDetection, \tboolean enableStatementsRecovery, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "diff": ["-\top.runOperation(monitor);", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\ttry {", "+\t\tmanager.cacheZipFiles(); // cache zip files for performance (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=134172)", "+\t\top.runOperation(monitor);", "+\t} finally {", "+\t\tmanager.flushZipFiles();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55761f3891c2269a75e62413bab83aae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test0001() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0001() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c99e998ed93397973fbbabbf6990cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AssertStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56431807284e0579cb4daca52249f984", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  public void testCompletionUnresolvedFieldType() throws JavaModelException", "signatureAfterChange": "  public void testCompletionUnresolvedFieldType() throws JavaModelException", "diff": ["-\t\t\"element:barPlus    completion:barPlus()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:barPlus    completion:barPlus()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5644bb6967c85ea9ccef2e02421dfc37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void test0502h() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502h() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564bbbcc0b7fa945b34f97f0ca5e7b46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testBug3270a() throws JavaModelException", "signatureAfterChange": " public void testBug3270a() throws JavaModelException", "diff": ["-\t\t\"InterruptedException[TYPE_REF]{InterruptedException, java.lang, Ljava.lang.InterruptedException;, null, null, \"+this.positions+(40+R_INLINE_TAG)+\"}\\n\" + ", "-\t\t\"IllegalMonitorStateException[TYPE_REF]{IllegalMonitorStateException, java.lang, Ljava.lang.IllegalMonitorStateException;, null, null, \"+this.positions+\"41}\"", "+\t\t\"InterruptedException[TYPE_REF]{InterruptedException, java.lang, Ljava.lang.InterruptedException;, null, null, \"+this.positions+R_DICUNREEET+\"}\\n\" + ", "+\t\t\"IllegalMonitorStateException[TYPE_REF]{IllegalMonitorStateException, java.lang, Ljava.lang.IllegalMonitorStateException;, null, null, \"+this.positions+R_DICUNRE+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5657d4bae35122cdb1f44f0f8a5e57e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "8c257f407da3168f528da10142cc5a6786c803d6", "commitAfterChange": "1505d6b4655f1428d6059c29c9d919c21116a2ec", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "diff": ["-\t\tif ((method.isPrivate() || method.declaringClass.isLocalType()) && !scope.isDefinedInMethod(method)) {", "+\t\t// ignore references insing Javadoc comments", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "+\t\t\t\t(method.isPrivate() || method.declaringClass.isLocalType()) && !scope.isDefinedInMethod(method)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5668b316e7a0c39be77db66ce155c4cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 164, "signatureBeforeChange": " protected void consumeFormalParameter(boolean isVarArgs)", "signatureAfterChange": " protected void consumeFormalParameter(boolean isVarArgs)", "diff": ["-\t\tif (options.sourceLevel < ClassFileConstants.JDK1_5 &&", "+\t\tif (!this.statementRecoveryActivated &&", "+\t\t\t\toptions.sourceLevel < ClassFileConstants.JDK1_5 &&", "-\t\t} else if (extendedDimensions > 0) {", "+\t\t} else if (!this.statementRecoveryActivated &&", "+\t\t\t\textendedDimensions > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5689037a5dda6b5c07d5d82b06981476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "12b1e5875f7cb2a3f64b814e5e7b2c6c8563e988", "commitAfterChange": "b592d345303d7808b56670b5117114aed9144310", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 350, "signatureBeforeChange": " protected NameReference getUnspecifiedReferenceOptimized()", "signatureAfterChange": " protected NameReference getUnspecifiedReferenceOptimized()", "diff": ["-\t\tif (this.scanner.gotNonNullTag) {", "-\t\t\tref.markAsNonNull();", "-\t\t}", "-\tif (this.scanner.gotNonNullTag) {", "-\t\tref.markAsNonNull();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56980e8ac5a6ce9327853e60593e3eec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "eca2879f8ac15a8e7e3e718f05394e00e64857c4", "commitAfterChange": "b9de5f3466a9b4d6687de837720c445097067b16", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tpublic MethodBinding findMethodInSuperInterfaces(\r \t\tReferenceBinding currentType,\r \t\tchar[] selector,\r \t\tObjectVector found,\r \t\tMethodBinding matchingMethod)", "signatureAfterChange": "\r \r \tpublic MethodBinding findMethodInSuperInterfaces(\r \t\tReferenceBinding currentType,\r \t\tchar[] selector,\r \t\tObjectVector found,\r \t\tMethodBinding matchingMethod)", "diff": ["-\t\t\t\t\t\t\tif (found.size == 0 && matchingMethod != null) {\r", "+\t\t\t\t\t\t\tif (matchingMethod != null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ab0f852a7336a04685722eeb3d5808", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "0fcbdf3f242eca695398990480b5252f47b13157", "commitAfterChange": "bdb5fd6b326428cc9f0c1c9c5974b9a701aacf91", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate ICompilationUnit createNewWorkingCopy(IFile parentFile, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor) \t\tthrows JavaModelException", "signatureAfterChange": " \t \tprivate ICompilationUnit createNewWorkingCopy(IFile parentFile, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor) \t\tthrows JavaModelException", "diff": ["-\t\tIFolder folder = getGeneratedSourceFolder();", "+\t\tIFolder folder = _gsfm.getFolder();", "-\t\tIPackageFragmentRoot root = _aptProject.getJavaProject().getPackageFragmentRoot(folder);", "+\t\tIPackageFragmentRoot root = _jProject.getPackageFragmentRoot(folder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b172a2ae17c2b4c15f7b8cfbdc19a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java", "commitBeforeChange": "d9396647e280a0cdb636c94fae9233a7a2475f6f", "commitAfterChange": "09617092d586fc57d56d7255b395176bf3d6b1e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tif (workingCopy.getResource().isAccessible()) {", "-\t\t\t\t// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy", "-\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "-\t\t\t\tdelta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "-\t\t\t\taddDelta(delta);", "-\t\t\t} else {", "-\t\t\t\t// report an ADDED delta", "-\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "-\t\t\t\tdelta.added(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "-\t\t\t\taddDelta(delta);", "+\t\t\tIResource resource = workingCopy.getResource();", "+\t\t\tif (resource != null) {", "+\t\t\t\tif (resource.isAccessible()) {", "+\t\t\t\t\t// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy", "+\t\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "+\t\t\t\t\tdelta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "+\t\t\t\t\taddDelta(delta);", "+\t\t\t\t} else {", "+\t\t\t\t\t// report an ADDED delta", "+\t\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "+\t\t\t\t\tdelta.added(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "+\t\t\t\t\taddDelta(delta);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b21598850ab14bd2efdc4336569b5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "1e3d7a95c39c7aac1cb5e09a719efdb30a9bf701", "commitAfterChange": "1df126b77b08d354ebfd5eda6a44830d9266b61e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testLocalVariableMemento3()", "signatureAfterChange": " public void testLocalVariableMemento3()", "diff": ["-\tILocalVariable localVar = new LocalVariable((JavaElement)initializer, \"var\", 1, 2, 3, 4, \"Z\", null);", "+\tILocalVariable localVar = new LocalVariable((JavaElement)initializer, \"var\", 1, 2, 3, 4, \"Z\", null, 0, false);", "-\t\t\"=P/src<p{X.java[X|1@var!1!2!3!4!Z\",", "+\t\t\"=P/src<p{X.java[X|1@var!1!2!3!4!Z!0!false\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c47f60a7ce86d8de6eccc2defa5416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  public void testCompletionVariableInitializerInMethod4() throws JavaModelException", "signatureAfterChange": "  public void testCompletionVariableInitializerInMethod4() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e452270ea4b83d93dc68696f77ddf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ec9084d599b9524463c7572d9d6b8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a34a6a0ba4a1353d99ccd1ab5ffa346abf5dc5a5", "commitAfterChange": "a9a682e2620a7d259588cf514f2222df31cd2757", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding, boolean isEnum)", "signatureAfterChange": " private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding, boolean isEnum)", "diff": ["+", "+\tif (isEnum && (field.getModifiers() & ClassFileConstants.AccEnum) != 0) {", "+\t\tfieldBinding.tagBits |= TagBits.AnnotationNonNull;", "+\t\treturn; // we know it's nonnull, no need to look for null *annotations* on enum constants.", "+\t}", "+", "-\t}", "-\tif (isEnum) {", "-\t\tif ((field.getModifiers() & ClassFileConstants.AccEnum) != 0) {", "-\t\t\tfieldBinding.tagBits |= TagBits.AnnotationNonNull;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f059b6d7a74a2f186e26696bbc551b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tpublic void test0138() throws JavaModelException", "signatureAfterChange": " \tpublic void test0138() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f77b70e764f902dd68e288b356c07d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void testRemoveExternalPackage() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemoveExternalPackage() throws JavaModelException, CoreException", "diff": ["-public void testRemoveExternalPackage() throws JavaModelException, CoreException, IOException {", "+public void testRemoveExternalPackage() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "570941c7bfaec92cd315c220b3aa2a72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/FactoryLoaderTests.java", "commitBeforeChange": "04ac73525421db342cbea7b61068c93b1fac3e50", "commitAfterChange": "4748f10b5a3e791bc8e4784d261c474bbab1449a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testExternalJarLoader() throws Exception", "signatureAfterChange": " \t \tpublic void testExternalJarLoader() throws Exception", "diff": ["+\t\t", "+\t\t// This file will be locked until GC takes care of unloading", "+\t\t// the annotation processor classes.", "+\t\t_extJar.deleteOnExit();", "+\t\t_extJar = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57143ec3508898518bf62677fb79c6ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tpublic void test0127() throws JavaModelException", "signatureAfterChange": " \tpublic void test0127() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571847aa6601374e44d6b162bbf284e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FileNameEnvironment.java", "commitBeforeChange": "26246adf380e69c31de951eed4c0173edaa96dd1", "commitAfterChange": "2c076bc353a2d83c198fbf8764d9fb723677890e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ClasspathJar getClasspathJar(File file) throws IOException", "signatureAfterChange": "  public ClasspathJar getClasspathJar(File file) throws IOException", "diff": ["-\t\treturn new JavaModelClasspathJar(zipFile);", "+\t\treturn new ClasspathJar(zipFile, false);", "-\t\treturn super.getClasspathJar(file);", "+\t\treturn super.getClasspathJar(file, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5723f9884cd90480868fa224519850d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57327c626261a8fafcff373f9ec5912a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 225, "signatureBeforeChange": " \tpublic void test0223() throws JavaModelException", "signatureAfterChange": " \tpublic void test0223() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57399d85e8ad7974e571bfb20f057aed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 366, "signatureBeforeChange": " public void unqualifiedFieldAccess(NameReference reference, FieldBinding field)", "signatureAfterChange": " public void unqualifiedFieldAccess(NameReference reference, FieldBinding field)", "diff": ["-\t\tfieldSourceStart(field, reference),", "-\t\tfieldSourceEnd(field, reference));", "+\t\tnodeSourceStart(field, reference),", "+\t\tnodeSourceEnd(field, reference));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5740c296845294dd01868777369fedb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void testBug22043b() throws JavaModelException", "signatureAfterChange": "  public void testBug22043b() throws JavaModelException", "diff": ["-\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+\"25}\"", "+\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5740cee1dc465ab351a81986ec5054d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 299, "signatureBeforeChange": " \tpublic void test0655()", "signatureAfterChange": " \tpublic void test0655()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574b174a06631b8c0a7e7abb43feaf02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\tworkingCopy.openWhenClosed(workingCopy.createElementInfo(), progressMonitor);", "+\t\tworkingCopy.openWhenClosed(workingCopy.createElementInfo(), this.progressMonitor);", "-\t\tresultElements = new IJavaElement[] {workingCopy};", "+\t\tthis.resultElements = new IJavaElement[] {workingCopy};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "575a4e3b4b2194f40f881ed644933b1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["+\t\t\tif (this.annotations != null) {", "+\t\t\t\tint annotationsLength = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t}", "-\t\t\tif (initialization != null)", "-\t\t\t\tinitialization.traverse(visitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5769ccf98b0e23c15a0298ebe3f64309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void test0044() throws JavaModelException", "signatureAfterChange": " \tpublic void test0044() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "576e6ee40f09474cd17176c91b1dad27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic void test026b()", "signatureAfterChange": "  \tpublic void test026b()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5789124c33c2950c31598ab29ad325cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic void test0082() throws JavaModelException", "signatureAfterChange": " \tpublic void test0082() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57aa69d46a5e177e164d9a28ec181e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic Object getConstantValue()", "signatureAfterChange": " \tpublic Object getConstantValue()", "diff": ["-\t\tif (!this.binding.isConstantValue() || this.binding.constant == null) {", "-\t\t\treturn null;", "-\t\t}", "-\t\tConstant c = this.binding.constant;", "+\t\tif (!this.binding.isConstantValue()) return null;", "+\t\tConstant c = this.binding.constant();", "+\t\tif (c == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57cb714aa9a75feb19aacd9014fab9d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 472, "methodNumberAfterChange": 472, "signatureBeforeChange": " \tpublic void test453()", "signatureAfterChange": " \tpublic void test453()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57cd4c5dfe13ba167034b50f1d761c2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "37d67ed9fa27dc85b6112e216c3af6d687e12530", "commitAfterChange": "8924c9453af0fcfcdde960b7165abadc76ad272e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tprivate ILocalVariableTableEntry getEntryFor( \t\tint localIndex, \t\tILocalVariableTableEntry[] entries)", "signatureAfterChange": "  \tprivate ILocalVariableTableEntry getEntryFor(final int index, final ILocalVariableTableEntry[] entries)", "diff": ["-\t */", "-\tprivate ILocalVariableTableEntry getEntryFor(", "-\t\tint localIndex,", "-\t\tILocalVariableTableEntry[] entries) {", "-\t\t\t", "-\t\t\tfor (int i = 0, max = entries.length; i < max; i++) {", "-\t\t\t\tILocalVariableTableEntry entry = entries[i];", "-\t\t\t\tif (localIndex == entry.getIndex()) {", "-\t\t\t\t\treturn entry;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn null;", "-\t}", "+", "+\tprivate ILocalVariableTableEntry getEntryFor(final int index, final ILocalVariableTableEntry[] entries) {", "+\t\tfor (int i = 0, max = entries.length; i < max; i++) {", "+\t\t\tILocalVariableTableEntry entry = entries[i];", "+\t\t\tif (index == entry.getIndex()) {", "+\t\t\t\treturn entry;", "+\t\t\t}", "+\t\t}", "+\t\treturn null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57de0e6f401680d3d3364f1a5c277f80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "3858f2c9f8321ffaef4bf1567165b79bc4d4383d", "commitAfterChange": "569b0dbd062b29a0a4779486160c8b5a015f8ac2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public static void finishedBuilding()", "signatureAfterChange": "  public static void finishedBuilding()", "diff": ["-\tpreferredClasspaths = null;", "-\tpreferredOutputs = null;", "+\tPreferredClasspaths = null;", "+\tPreferredOutputs = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ed72d5f1c2fdc5d71532686d401238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 293, "signatureBeforeChange": " \tpublic void test0291() throws JavaModelException", "signatureAfterChange": " \tpublic void test0291() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fa47d60d5786acbc85b29ed45cd5c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "135f9386299e3566f4114db01233357ab2291b11", "commitAfterChange": "391f791bfc062c8038e2d943e7b32d7fd90d00ef", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void checkProjectReferenceChange(IProject project, JavaProject javaProject)", "signatureAfterChange": "  \tprivate void checkProjectReferenceChange(IProject project, JavaProject javaProject)", "diff": ["-\t\tClasspathChange change = (ClasspathChange) this.classpathChanges.get(project);", "+\t\tClasspathChange change = this.state.getClasspathChange(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "582246b0574ea04103718ac14f25b2c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "09344c3511ec65da3ebc80e49387be9bef2842c9", "commitAfterChange": "784fb3dfd6aad9e1272ee168af202a1a299ea44b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic IJavaElementDelta mergeDeltas(Collection deltas)", "signatureAfterChange": " \tpublic IJavaElementDelta mergeDeltas(Collection deltas)", "diff": ["-\t\tIJavaElement javaModel = this.getJavaModel();", "-\t\tJavaElementDelta rootDelta = new JavaElementDelta(javaModel);", "+\t\tJavaElementDelta rootDelta = new JavaElementDelta(this.javaModel);", "-\t\t\tif (javaModel.equals(element)) {", "+\t\t\tif (this.javaModel.equals(element)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58847ddc6e4c1767fb7ccb035b4ebf93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "09e46ad014ecabc563acbb635bcc6beb1f18e3c1", "commitAfterChange": "78de444780e2ad9c5a16d7d12a0ae4a2d9e81714", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void _test0655()", "signatureAfterChange": " \tpublic void test0655()", "diff": ["-\tpublic void _test0655() {", "+\tpublic void test0655() {", "-\t\t\tassertTrue(isMalformed(statement));", "+\t\t\tif (statement.getNodeType() == ASTNode.EXPRESSION_STATEMENT) {", "+\t\t\t\t// only the expression statements are recovered. The others are considered as valid blocks.", "+\t\t\t\tassertTrue(isRecovered(statement));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58985538072828a67d4c4a789bc5b06f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, MethodScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, MethodScope scope)", "diff": ["+\t\t\tif (this.javadoc != null) {", "+\t\t\t\tthis.javadoc.traverse(visitor, scope);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a5154517fbd33d1e2cb47f36656c3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void test0002() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0002() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ac8aa0dfeef7ec1e53da3d0c3b9eb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 249, "signatureBeforeChange": " \tpublic void test0247() throws JavaModelException", "signatureAfterChange": " \tpublic void test0247() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58df7496753323d048a2f91db4708ff0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "b08e7596febaa49e23faa81f4a4f9ae399c9aefb", "commitAfterChange": "24cf10e27c63373d484417e95718811352f381da", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tExpression expression = this.codeSnippetParsingUtil.parseExpression(source.toCharArray(), this.options, true);", "+\t\tExpression expression = this.codeSnippetParsingUtil.parseExpression(source.toCharArray(), getDefaultCompilerOptions(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e8d62fb3160d1a6cb41d6fd22243e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void test0027() throws JavaModelException", "signatureAfterChange": " \tpublic void test0027() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58fd1f1957948acb0a6ee2f4e883c8ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "397253fa7cf7d0509ffaa48aff6b8a5dde06129d", "commitAfterChange": "bf0328478aa051113a9962f47734688c8e2ec095", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public IType[] getAllSuperInterfaces(IType type)", "signatureAfterChange": " public IType[] getAllSuperInterfaces(IType type)", "diff": ["-\tArrayList supers = new ArrayList();", "-\tif (this.typeToSuperInterfaces.get(type) == null) {", "+\tArrayList supers = getAllSuperInterfaces0(type, null);", "+\tif (supers == null)", "-\t}", "-\tgetAllSuperInterfaces0(type, supers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597b10fa00b68565047eb8d656c84f9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testCodeSnippetAssistForBug132665() throws JavaModelException", "signatureAfterChange": " public void testCodeSnippetAssistForBug132665() throws JavaModelException", "diff": ["-\t\t\"foo1[METHOD_REF]{foo1(), Lbug132665.Bug132665;, ()V, foo1, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "-\t\t\"foo3[METHOD_REF]{foo3(), Lbug132665.Bug132665;, ()V, foo3, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\"foo1[METHOD_REF]{foo1(), Lbug132665.Bug132665;, ()V, foo1, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\"foo3[METHOD_REF]{foo3(), Lbug132665.Bug132665;, ()V, foo3, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597f0508b20c815864f104f628716f97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic IPath getPath()", "signatureAfterChange": " \tpublic IPath getPath()", "diff": ["-\t\tif (fResource == null) {", "+\t\tif (isExternal()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598c47e396205d74e2a042118e369260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic MethodDeclaration addMissingAbstractMethodFor(MethodBinding methodBinding)", "signatureAfterChange": " \tpublic MethodDeclaration addMissingAbstractMethodFor(MethodBinding methodBinding)", "diff": ["-\t\tmethodDeclaration.modifiers = methodBinding.getAccessFlags() & ~AccAbstract;", "+\t\tmethodDeclaration.modifiers = methodBinding.getAccessFlags() & ~ClassFileConstants.AccAbstract;", "-\t\t\t\targuments[i] = new Argument((baseName + i).toCharArray(), 0L, null /*type ref*/, AccDefault);", "+\t\t\t\targuments[i] = new Argument((baseName + i).toCharArray(), 0L, null /*type ref*/, ClassFileConstants.AccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59bf57846d4634513dc6f0816586d432", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "528d8fc589253148b12ff615e989162fcd5beabc", "commitAfterChange": "e684e6a21ba6785236f2750955d595e2406bc4cc", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled || compilerOptions.processAnnotations)", "+\tif (compilerOptions.storeAnnotations)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c00727341d95384ea410d1eb0da163", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": " \tpublic void test0232() throws JavaModelException", "signatureAfterChange": " \tpublic void test0232() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d93b5fc496a9e750ad044211ee1da8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic static String bind(String id, String[] arguments)", "signatureAfterChange": " public static String bind(String id, String[] arguments)", "diff": ["-\t */", "-\tpublic static String bind(String id, String[] arguments) {", "-\t\tif (id == null)", "-\t\t\treturn \"No message available\"; //$NON-NLS-1$", "-\t\tString message = null;", "-\t\ttry {", "-\t\t\tmessage = bundle.getString(id);", "-\t\t} catch (MissingResourceException e) {", "-\t\t\t// If we got an exception looking for the message, fail gracefully by just returning", "-\t\t\t// the id we were looking for.  In most cases this is semi-informative so is not too bad.", "-\t\t\treturn \"Missing message: \" + id + \" in: \" + bundleName; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t}", "-\t\treturn MessageFormat.format(message, arguments);", "-\t}", "+ */", "+public static String bind(String id, String[] arguments) {", "+\tif (id == null)", "+\t\treturn \"No message available\"; //$NON-NLS-1$", "+\tString message = null;", "+\ttry {", "+\t\tmessage = Main.bundle.getString(id);", "+\t} catch (MissingResourceException e) {", "+\t\t// If we got an exception looking for the message, fail gracefully by just returning", "+\t\t// the id we were looking for.  In most cases this is semi-informative so is not too bad.", "+\t\treturn \"Missing message: \" + id + \" in: \" + Main.bundleName; //$NON-NLS-2$ //$NON-NLS-1$", "+\t}", "+\treturn MessageFormat.format(message, arguments);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e7e4d6b1195d8511ec589ce3cd221f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void test0036() throws JavaModelException", "signatureAfterChange": " \tpublic void test0036() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a1222a3b0603eb161ca53c0e7d5b00b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 96, "signatureBeforeChange": "  \tpublic void test061()", "signatureAfterChange": "  \tpublic void test061()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a22eb52688578224bdd7a00447d8b0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void cannotAssignToFinalField(FieldBinding field, ASTNode location)", "signatureAfterChange": " public void cannotAssignToFinalField(FieldBinding field, ASTNode location)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a297329ddfa5df4fce76d2a0f40c2f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 381, "signatureBeforeChange": " \tpublic void test0379() throws JavaModelException", "signatureAfterChange": " \tpublic void test0379() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a4949253b1f680941c1e17c3446a13d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " \tpublic void test0607() throws JavaModelException", "signatureAfterChange": " \tpublic void test0607() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a4cc060854efd5a0dda9d17c4a341f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CharacterLiteral.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a68087833297863620fba4b97b3490c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e1a4dd76a1096e4a9ca316a8229a1b7d5fbaaa3a", "commitAfterChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedEntry) throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedEntry) throws JavaModelException", "diff": ["-\t\t\tresolvedClasspath = perProjectInfo.resolvedClasspath;", "+\t\t\tresolvedClasspath = perProjectInfo.getResolvedClasspath();", "-\t\t\tresolveClasspath(perProjectInfo);", "+\t\t\tresolveClasspath(perProjectInfo, false/*don't use previous session values*/);", "-\t\t\t\tresolvedClasspath = perProjectInfo.resolvedClasspath;", "+\t\t\t\tresolvedClasspath = perProjectInfo.getResolvedClasspath();", "-\t\t\t\tresolveClasspath(temporaryInfo);", "-\t\t\t\tresolvedClasspath = temporaryInfo.resolvedClasspath;", "+\t\t\t\tresolveClasspath(temporaryInfo, false/*don't use previous session values*/);", "+\t\t\t\tresolvedClasspath = temporaryInfo.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a76be2c5a7549e8194b2a154ab6c88c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\t \t \tpublic void testVariableDeclarationFragment() throws Exception", "signatureAfterChange": "\t \t \tpublic void testVariableDeclarationFragment() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(fragment.getName(), name, null);", "+\t\t\trewrite.replace(fragment.getName(), name, null);", "-\t\t\trewrite.markAsRemoved(fragment.getInitializer(), null);", "+\t\t\trewrite.remove(fragment.getInitializer(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a9d0a90f945fb618c8ce5dabc9ae92f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "d95feda7fc2f9a6563596c0e4c31ae322f705773", "commitAfterChange": "8477130b01f048bfc1fd1f484a88902aeefb2f38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "diff": ["-\t\t\t\t\tproblemReporter().duplicateInheritedMethods(this.type, concreteMethod, methods[i]);", "+\t\t\t\t\tproblemReporter().duplicateInheritedMethods(this.type, concreteMethod, methods[i],", "+\t\t\t\t\t\t\t\t\t\t\tthis.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac3cfcbda5ebdc813204fcc0745341e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aa3d82b2032803d21f830f8406e40626fbfe58f8", "commitAfterChange": "d6cba97b5461ec2afa3b4dbf6bdb862595fd6246", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["+\t\t\t\t\tif (field.declaringClass.isInterface())\r", "+\t\t\t\t\t\tif (otherField.declaringClass.implementsInterface(field.declaringClass, true))\r", "+\t\t\t\t\t\t\tcontinue next;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5acc8ec79eb489306ba7374733cf424a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " \tpublic void test0550() throws JavaModelException", "signatureAfterChange": " \tpublic void test0550() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad54e43f941b4c95390e023c5db930e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "0ef15ab3e77b7c293b04de9a99ac186cbe5a3c0f", "commitAfterChange": "dd6bc11628a6724c7599b64bbc9d6dfcf59daa40", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\tFlowInfo elseFlowInfo = flowInfo.initsWhenFalse().copy();", "+\t\tif (isConditionOptimizedTrue) {", "+\t\t\telseFlowInfo.setReachMode(FlowInfo.UNREACHABLE); ", "+\t\t}", "+\t\tthis.condition.checkNullComparison(currentScope, flowInfo, thenFlowInfo, elseFlowInfo);", "-\t\tFlowInfo elseFlowInfo = flowInfo.initsWhenFalse().copy();", "-\t\tif (isConditionOptimizedTrue) {", "-\t\t\telseFlowInfo.setReachMode(FlowInfo.UNREACHABLE); ", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af1d751fe89a052f18ae264fa6e1429", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/BuildNotifier.java", "commitBeforeChange": "68411191fd2fb3b65bf8b6264bfef38a3741d731", "commitAfterChange": "8f24f368e69bed9e4b36a93446aef6cecc69e3d1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r public void subTask(String message)", "signatureAfterChange": "\r \r public void subTask(String message)", "diff": ["-\tif (JavaBuilder.DEBUG)\r", "-\t\tSystem.out.println(msg);\r", "+\t//if (JavaBuilder.DEBUG) System.out.println(msg);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b16892d194ab3829b05b9cff9530ea2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "48c0206f59a95efbb976200637285517a0fbd5c7", "commitAfterChange": "bb3b4a8bf46458872103649a4d446af9df19a0f8", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " public void uninitializedLocalVariable(LocalVariableBinding binding, ASTNode location)", "signatureAfterChange": " public void uninitializedLocalVariable(LocalVariableBinding binding, ASTNode location)", "diff": ["+\tbinding.tagBits |= TagBits.NotInitialized;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b19e05a7fcdcdc782b91da677007b50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test0121() throws JavaModelException", "signatureAfterChange": " \tpublic void test0121() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b727e633c5c8cf24962f9ab3df7b16e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["-\t\t\t\trewriteNodeList(node, ClassInstanceCreation.ARGUMENTS_PROPERTY, startpos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\trewriteNodeList(node, ClassInstanceCreation.ARGUMENTS_PROPERTY, startpos, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b9bd714d9b96438301b438a4ac80e44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void traverse(ASTVisitor visitor,\tClassScope classScope)", "signatureAfterChange": "  public void traverse(ASTVisitor visitor,\tClassScope classScope)", "diff": ["+\t\tif (this.javadoc != null) {", "+\t\t\tthis.javadoc.traverse(visitor, this.scope);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b9c1515ea049659aa7e605ab9b28b3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testAddProject() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddProject() throws JavaModelException, CoreException", "diff": ["-public void testAddProject() throws JavaModelException, CoreException, IOException {", "+public void testAddProject() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bad7cd876231418390b0bfdce0c8fbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayInitializer.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcb8edaab9a579217c1275cf90d0ece", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrefixExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getOperand()", "signatureAfterChange": "  \tpublic Expression getOperand()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcc3f4a0be1efa219f676bf90ec0f49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 365, "signatureBeforeChange": " \tpublic void test0363() throws JavaModelException", "signatureAfterChange": " \tpublic void test0363() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bccfaef0b5a0bda88974b04d4e72e73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprotected boolean internalRecordNullityMismatch(Expression expression, int nullStatus, TypeBinding expectedType, int checkType)", "signatureAfterChange": "  \tprotected boolean internalRecordNullityMismatch(Expression expression, TypeBinding providedType, int nullStatus, TypeBinding expectedType, int checkType)", "diff": ["-\tprotected boolean internalRecordNullityMismatch(Expression expression, int nullStatus, TypeBinding expectedType, int checkType) {", "-\t\trecordExpectedType(expectedType, this.nullCount);", "+\tprotected boolean internalRecordNullityMismatch(Expression expression, TypeBinding providedType, int nullStatus, TypeBinding expectedType, int checkType) {", "+\t\trecordProvidedExpectedTypes(providedType, expectedType, this.nullCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bea3fb5f500bf149765f809b27d8c19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " \tpublic void test0286() throws JavaModelException", "signatureAfterChange": " \tpublic void test0286() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5beaeed6dbd50bc010ede21f62f01c3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "a40cb3ef59ebbd67185c7faac7fb4434fed79ef4", "commitAfterChange": "ee62bf9b530a584a4251f975aa510ac6ec2f5d0f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\t \t\tpublic ASTNode getStartNode()", "signatureAfterChange": " \t\t \t\tpublic ASTNode getStartNode()", "diff": ["-\t\t\treturn first;", "+\t\t\treturn this.first;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf801b4e61f71973070ab1ee685a0f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public MethodBinding(int modifiers, char[] selector, TypeBinding returnType, TypeBinding[] args, ReferenceBinding[] exceptions, ReferenceBinding declaringClass)", "signatureAfterChange": " public MethodBinding(int modifiers, char[] selector, TypeBinding returnType, TypeBinding[] parameters, ReferenceBinding[] thrownExceptions, ReferenceBinding declaringClass)", "diff": ["-public MethodBinding(int modifiers, char[] selector, TypeBinding returnType, TypeBinding[] args, ReferenceBinding[] exceptions, ReferenceBinding declaringClass) {", "+public MethodBinding(int modifiers, char[] selector, TypeBinding returnType, TypeBinding[] parameters, ReferenceBinding[] thrownExceptions, ReferenceBinding declaringClass) {", "-\tthis.parameters = (args == null || args.length == 0) ? NoParameters : args;", "-\tthis.thrownExceptions = (exceptions == null || exceptions.length == 0) ? NoExceptions : exceptions;", "+\tthis.parameters = (parameters == null || parameters.length == 0) ? NoParameters : parameters;", "+\tthis.thrownExceptions = (thrownExceptions == null || thrownExceptions.length == 0) ? NoExceptions : thrownExceptions;", "-", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2f9bd0edb8948d4d806d45c2410d0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": " \tpublic void test0557() throws JavaModelException", "signatureAfterChange": " \tpublic void test0557() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c404eff43d73bd4be8948fa24f4e78d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "0b996c62d78a14d0f0ee5313e3a85270bb3aeb0f", "commitAfterChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void close()", "signatureAfterChange": "     public void close()", "diff": ["-\t\t_allGeneratedFiles = null;", "-\t\t_modifiedGeneratedFiles = null;", "+\t\t_allGeneratedSourceFiles = null;", "+\t\t_modifiedGeneratedSourceFiles = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c4a823253e2f5bdbe31e93f2581cb47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " private void initialize()", "signatureAfterChange": " private void initialize()", "diff": ["-\tthis.putOldPosition(this.javaElement, new ListItem(null, null));", "-\tthis.putNewPosition(this.javaElement, new ListItem(null, null));\t", "-\tthis.added = new ArrayList(5);", "-\tthis.removed = new ArrayList(5);", "+\tthis.oldPositions.put(this.javaElement, new ListItem(null, null));", "+\tthis.newPositions.put(this.javaElement, new ListItem(null, null));\t", "+\tthis.added = new HashSet(5);", "+\tthis.removed = new HashSet(5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5d7818830e38792b2bd5e54459d559", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "b5c1652db351290a42a75d3cdd3241441a4413e2", "commitAfterChange": "43bc355f1a88457ab70fc9f06fe5c67fac23d207", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate Expression parseMemberValue(char[] memberValue)", "signatureAfterChange": " \t \tprivate Expression parseMemberValue(char[] memberValue)", "diff": ["-\t\tif (memberValue == null) {", "-\t\t\treturn null;", "-\t\t}", "+\t\t// memberValue must not be null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c664cb6e4473fc1c617a13c574f871e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 409, "methodNumberAfterChange": 409, "signatureBeforeChange": " \tpublic void test391()", "signatureAfterChange": " \tpublic void test391()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c741320c17351a28a39ef2066927c44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e0b93cd9388950bd51950e07247cdecc9e3263df", "commitAfterChange": "265ec26aa6d2cbdb7df581eef4b2a30df572f94f", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void test069()", "signatureAfterChange": " \tpublic void test069()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c74acd8ac970608c5f9785617f7c50d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/OptimizedReplaceEdit.java", "commitBeforeChange": "572021b99f292f39a76e81c2ea834ac6a839b00b", "commitAfterChange": "727d8ca46d64642ad4f629f81ba37e76e7ae8c85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\treturn (this.valid ? \"(\" : \"X(\") + this.offset + \", length \" + this.length + \" :>\" + this.replacement + \"<\"; //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$ //$NON-NLS-5$", "+\t\treturn \"(\" + this.offset + \", length \" + this.length + \" :>\" + this.replacement + \"<\"; //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c99b9dc46ee3f241e8a0a808fd2b6ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testAddPackageFragmentRoot() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddPackageFragmentRoot() throws JavaModelException, CoreException", "diff": ["-public void testAddPackageFragmentRoot() throws JavaModelException, CoreException, IOException {", "+public void testAddPackageFragmentRoot() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca0e056d9c9f9f0cf802dc86debe4f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "079d4f0cdda421575b36836f629d20d2f8604c62", "commitAfterChange": "ab04bd8242b8fae5405da93b1573f8d7c03eade9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r protected void addAffectedSourceFiles()", "signatureAfterChange": "\r \r protected void addAffectedSourceFiles()", "diff": ["-\t\t\t\t\t\tString sourceLocation = sourceFolders[j].getLocation().toString();\r", "+\t\t\t\t\t\tString sourceLocation = sourceFolders[j].getLocation().toString() + '/';\r", "-\t\t\t\t\t\t\ttypeNames.add(location.substring(sourceLocation.length() + 1, location.length() - 5)); // length of \".java\"\r", "+\t\t\t\t\t\t\ttypeNames.add(location.substring(sourceLocation.length(), location.length() - 5)); // length of \".java\"\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca955035b9796e942758a2f375b5a9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void test0100() throws JavaModelException", "signatureAfterChange": " \tpublic void test0100() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cac452f33be6d3fec62b25db48d2177", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "67be753fec1b8f88653e28d3d4d4837dd29cdece", "commitAfterChange": "c76b87d837ed14384819cb84439501329f23edce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r \tprivate QualifiedName setQualifiedNameNameAndSourceRanges(char[][] typeName, long[] positions, AstNode node)", "signatureAfterChange": "\r \r \tprivate QualifiedName setQualifiedNameNameAndSourceRanges(char[][] typeName, long[] positions, AstNode node)", "diff": ["-\t\tif (this.resolveBindings && newPart != null) {\r", "-\t\t\trecordNodes(newPart, node);\r", "-\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd0ba5bdfdd5202a6164b287e5ff599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t\t \t\tpublic void printErr(String s)", "signatureAfterChange": " \t\tprivate void printErr(String s)", "diff": ["-\t\tpublic void printErr(String s) {", "+\t\t}", "+\t\tprivate void printErr(String s) {", "-\t\t\tif (this.log != null) {", "-\t\t\t\tthis.log.print(s);", "+\t\t\tif (!this.isXml) {", "+\t\t\t\tif (this.log != null) {", "+\t\t\t\t\tthis.log.print(s);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd8be1457e3cb7f40aff5b257a80d57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 159, "signatureBeforeChange": " public void indirectAccessToStaticField(ASTNode location, FieldBinding field)", "signatureAfterChange": " public void indirectAccessToStaticField(ASTNode location, FieldBinding field)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cde724e992789d53666f09813988358", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "f5abb716de8ce6d7aaee3cf06a3285e91953dad7", "commitAfterChange": "335c03b3031530891f91251d3361337281d509cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\tif (flowInfo.isPotentiallyAssigned(localBinding)) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned(localBinding) || (this.bits & ASTNode.IsCapturedOuterLocal) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cfee24a1802d5525f6a843cf041a21f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic FieldBinding findField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite, \t\tboolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite, \t\tboolean needResolve)", "diff": ["-\t\t\t\tNonStaticReferenceInConstructorInvocation);", "+\t\t\t\tProblemReasons.NonStaticReferenceInConstructorInvocation);", "-\t\t\t\t\tNonStaticReferenceInConstructorInvocation);", "+\t\t\t\t\tProblemReasons.NonStaticReferenceInConstructorInvocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cfeee9f67e86a409e4534e70b410fc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "82fb6745d0f2bc2c9b5e4740da70b2e364d6955a", "commitAfterChange": "c295624cf25dea9fdc929a62413bd288dbeb35d7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tpublic String toString()", "signatureAfterChange": "  \t@Override \tpublic String toString()", "diff": ["-\t\t// TODO: use object type determined in c'tor", "-\t\treturn String.valueOf(getValue());", "+\t\tif (null == _value) {", "+\t\t\treturn \"null\"; //$NON-NLS-1$", "+\t\t}", "+\t\treturn _value.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d208dddeeb7a88efed31b94420a3e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBindingsTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "   \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d258a79b6c6a36d8cff0c2bbdb16d9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testAddExtendsSourceType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddExtendsSourceType() throws JavaModelException, CoreException", "diff": ["-public void testAddExtendsSourceType() throws JavaModelException, CoreException, IOException {", "+public void testAddExtendsSourceType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4dd59bf764ba836357622b757d6727", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 199, "signatureBeforeChange": " final public void jsr_w(Label lbl)", "signatureAfterChange": " final public void jsr_w(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tjsr_w\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8eefaa7b71655b1dd65f8926d0fe2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 368, "signatureBeforeChange": " \tpublic void test0366() throws JavaModelException", "signatureAfterChange": " \tpublic void test0366() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dbaca7a790b8ff98f546aeb7b6e9b00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "7b4fdf4780132144ccc7c2e7370ef3841befc3d9", "commitAfterChange": "6a5ede81dc60cc482d4fde0564e95e20c9055fee", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected boolean pushThrowName(Object typeRef, boolean real)", "signatureAfterChange": " \tprotected boolean pushThrowName(Object typeRef, boolean real)", "diff": ["-\t\t\tthrowsTag.setTagName(STR_TAG_THROWS);", "+\t\t\tthrowsTag.setTagName(TagElement.TAG_THROWS);", "-\t\t\tthrowsTag.setTagName(STR_TAG_EXCEPTION);", "+\t\t\tthrowsTag.setTagName(TagElement.TAG_EXCEPTION);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc84cdec0e8f2f6bdbbe0699479a660", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "45f26d79341dbd73cc50656614a5963b62874264", "commitAfterChange": "86c7acc5355b94788ffb4eef74e62958a8338696", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tstatic boolean isEqual(VariableBinding variableBinding, VariableBinding variableBinding2)", "signatureAfterChange": "  \tstatic boolean isEqual(VariableBinding variableBinding, VariableBinding variableBinding2)", "diff": ["-\t\t\t\t&& isEqual(variableBinding.type, variableBinding2.type);", "+\t\t\t\t&& isEqual(variableBinding.type, variableBinding2.type)", "+\t\t\t\t&& (variableBinding.id == variableBinding2.id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dcee02082c73c04094ce17e4a434f13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " \tpublic void testSuperMethodReference()", "signatureAfterChange": " \tpublic void testSuperMethodReference()", "diff": ["-\t\tSuperMethodReference x1 = this.ast.newSuperMethodReference(this.N2);", "+\t\tSuperMethodReference x1 = this.ast.newSuperMethodReference();", "+\t\tx1.setName(this.N2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd76ff47b15a1a55b76fd748f0c23a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "38cb224047de4121a0ae69054f2ef8e6cd34249a", "commitAfterChange": "053392445b1e4386796a9119a1bee84b8fe1860f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "signatureAfterChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "diff": ["-\tIProblem[] problems = result.getProblems(); // contains both true problems and todo tasks", "-\tif (problems == null && markers.length == 0 && JavaBuilder.getTasksFor(sourceFile.resource).length == 0) return;", "+\tIProblem[] problems = result.getProblems();", "+\tif (problems == null && markers.length == 0) return;", "-\tJavaBuilder.removeProblemsAndTasksFor(sourceFile.resource);", "+\tJavaBuilder.removeProblemsFor(sourceFile.resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de0b2cb9016e5b13fc8b2d2d9b9982b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 395, "signatureBeforeChange": " \tpublic void test0393() throws JavaModelException", "signatureAfterChange": " \tpublic void test0393() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df20bcb1a77cbe2ac79cd3958fa5b6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "73cb911baa8db75db819f7327ce2bb8d1c8537b4", "commitAfterChange": "8eb8a403023f2b292819a8553addbce778b506a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void attachSource(IPath zipPath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tpublic void attachSource(IPath zipPath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tmapper= new SourceMapper(zipPath, rootPath.toOSString(), (JavaModel) getJavaModel());\r", "+\t\t\t\tmapper= new SourceMapper(zipPath, rootPath.toOSString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e169fac503d6a8dbd4fc476e9612632", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " public void invokeStringIntern()", "signatureAfterChange": " public void invokeStringIntern()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangStringConstantPoolName,", "-\t\t\tQualifiedNamesConstants.Intern,", "-\t\t\tQualifiedNamesConstants.InternSignature);", "+\t\t\tConstantPool.JavaLangStringConstantPoolName,", "+\t\t\tConstantPool.Intern,", "+\t\t\tConstantPool.InternSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1d93b84305fa4cf7dca793a43de5f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test0502i() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502i() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1f0e08e0eb8db6455365b6c395cbe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceSubstitution.java", "commitBeforeChange": "ff2fe8665a4cc197831509bf8ec85eecac35f7cf", "commitAfterChange": "b035f7a4c467249c63cc869fd5f75e4bad8cf303", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t\tvariable.nullHints |= originalType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled && originalType.hasNullTypeAnnotations())", "+\t\t\t\t\treturn this.environment.createAnnotatedType(variable.withoutToplevelNullAnnotation(), originalType.getTypeAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3ea253cdd7ea050bfa9ed6648f26b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic IBinaryType getBinaryType()", "signatureAfterChange": " \tpublic IBinaryType getBinaryType()", "diff": ["-\t\treturn binaryType;", "+\t\treturn this.binaryType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6e62881b93267a93a80c8276131b4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e0b93cd9388950bd51950e07247cdecc9e3263df", "commitAfterChange": "265ec26aa6d2cbdb7df581eef4b2a30df572f94f", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 365, "signatureBeforeChange": " \tpublic void test347()", "signatureAfterChange": " \tpublic void test347()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7ab3093108419e1d34a2c2d5a89ba7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e937a7958d91035ed455d2d63eb5f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test0021() throws JavaModelException", "signatureAfterChange": " public void test0021() throws JavaModelException", "diff": ["-\t\t\t\"Z0021Z[TYPE_REF]{Z0021Z, test0021, Ltest0021.Z0021Z;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"Z0021ZZ[TYPE_REF]{Z0021ZZ, test0021, Ltest0021.Z0021ZZ;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"Z0021Z[TYPE_REF]{Z0021Z, test0021, Ltest0021.Z0021Z;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"Z0021ZZ[TYPE_REF]{Z0021ZZ, test0021, Ltest0021.Z0021ZZ;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e95e9603e88af0724f7e0eb667015f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "b20adaa54a1f0442c43a2cc76eca5492041fd65f", "commitAfterChange": "bbfd6abe2f4d57b10264c574b936bd7028ec5f17", "methodNumberBeforeChange": 852, "methodNumberAfterChange": 852, "signatureBeforeChange": " public void testNameWithUnresolvedReferences018() throws JavaModelException", "signatureAfterChange": " public void testNameWithUnresolvedReferences018() throws JavaModelException", "diff": ["-\t\t\t\"zzzz1[LOCAL_VARIABLE_REF]{zzzz1, null, Z, zzzz1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_RESOLVED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"zzzz2[LOCAL_VARIABLE_REF]{zzzz2, null, Z, zzzz2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_RESOLVED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzzz1[LOCAL_VARIABLE_REF]{zzzz1, null, Z, zzzz1, null, \" + (R_DEFAULT + R_INTERESTING + R_EXACT_EXPECTED_TYPE + R_CASE + R_UNQUALIFIED + R_RESOLVED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"zzzz2[LOCAL_VARIABLE_REF]{zzzz2, null, Z, zzzz2, null, \" + (R_DEFAULT + R_INTERESTING + R_EXACT_EXPECTED_TYPE + R_CASE + R_UNQUALIFIED + R_RESOLVED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ecb7783a6090c15d12f03f7e4df359a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\treturn new ProblemMethodBinding(candidates[i].selector, candidates[i].parameters, Ambiguous);", "+\t\t\t\t\t\t\treturn new ProblemMethodBinding(candidates[i].selector, candidates[i].parameters, ProblemReasons.Ambiguous);", "-\t\t\treturn new ProblemMethodBinding(candidates[0], candidates[0].selector, candidates[0].parameters, NotVisible);", "+\t\t\treturn new ProblemMethodBinding(candidates[0], candidates[0].selector, candidates[0].parameters, ProblemReasons.NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed69b528ceb42bb8ed0e17e917b70e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void test0057() throws JavaModelException", "signatureAfterChange": " \tpublic void test0057() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5edd972a6e0c31201a3fdc4ebcc7ec96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "d2fd0a411735601d08912dc407d669f4cabc6555", "commitAfterChange": "6e5a548d86606bf19201f8e25ff7972af2431caf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": " public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["-\tthis.typeVariables = typeSignature != null && typeSignature.length > 0 && typeSignature[0] == '<'", "+\tthis.typeVariables = typeSignature != null && typeSignature.length > 0 && typeSignature[0] == Util.C_GENERIC_START"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efd915ee5042b4a046f0a23c6faa5e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalXor( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalXor( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((condConst = left.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\tif ((condConst = left.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\tif ((condConst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\tif ((condConst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1c1b58cb78595d9974bcada8bbe71a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testSearchMethod() throws CoreException", "signatureAfterChange": " \tpublic void testSearchMethod() throws CoreException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f24875d5bdf83bf94d35188a09d5e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": " public char[] getFileName()", "signatureAfterChange": " public char[] getFileName()", "diff": ["-\treturn fileName;", "+\treturn this.fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2a7d78e27c31d9438ce0a576efaa8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "f7f7a56a04d63c15c3ecf4e9ea892b7456b63660", "commitAfterChange": "61bb7cec9d84760aee596143730a3411f8956386", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void addEnumDeclaration(int modifiers, char[] packageName, char[] name, char[][] enclosingTypeNames, char[][] superinterfaces)", "signatureAfterChange": " \tpublic void addEnumDeclaration(int modifiers, char[] packageName, char[] name, char[][] enclosingTypeNames, char[][] superinterfaces)", "diff": ["-\t\t\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, null, ENUM_SUFFIX, superinterfaces[i], INTERFACE_SUFFIX));", "+\t\t\t\t\t\tmodifiers, packageName, name, enclosingTypeNames, null, ENUM_SUFFIX, superinterface, INTERFACE_SUFFIX));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f30a6c985250cf52b6b2ef37b5efde5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void testWorkingCopy06() throws CoreException", "signatureAfterChange": " public void testWorkingCopy06() throws CoreException", "diff": ["-\tthis.workingCopy = clazz.becomeWorkingCopy(null/*no problem requestor*/, owner, null/*no progress*/);", "+\tthis.workingCopy = clazz.getWorkingCopy(owner, null/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3432637b8b5fb4b066fe212924e12d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "bce0dbd9dd489d3038652b337b4b76bb1f2246a4", "commitAfterChange": "f04ae71cc7d18b0e34f184a3124e4f7f58dafcf3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": "  public TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\tif (isFieldUseDeprecated(fieldBinding, scope, (this.bits & ASTNode.IsStrictlyAssigned) !=0))", "+\tif (isFieldUseDeprecated(fieldBinding, scope, this.bits))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3af205d1df962ec8dd622357801215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b60c1aaae3fe11d43d607ff3301c889050e228cc", "commitAfterChange": "0dab5b92938c7a7a005a5ebe5da911d162ac69ca", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "signatureAfterChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "diff": ["+\t\tremoveExtraBlanks(type);", "-\t\t\tcastExpression.setType(convertType((TypeReference)expression.type));", "+\t\t\tcastExpression.setType(convertType((TypeReference)type));", "-\t\t\tcastExpression.setType(convertToType((NameReference)expression.type));", "+\t\t\tcastExpression.setType(convertToType((NameReference)type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f5c220766a4060923962f70d3ad3611", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void traverse(ASTVisitor visitor, BlockScope blockScope)", "signatureAfterChange": " public void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["-\t\t\t\tthis.javadoc.traverse(visitor, scope);", "+\t\t\t\tthis.javadoc.traverse(visitor, this.scope);", "-\t\t\t\t\tthis.annotations[i].traverse(visitor, this.scope);", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, this.staticInitializerScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f63c2ea65714291494e3b8c3dc6bf5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public SyntheticAccessMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "signatureAfterChange": "  public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "diff": ["-public SyntheticAccessMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess) {", "+public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess) {", "-\tSyntheticAccessMethodBinding accessMethod = null;", "-\tSyntheticAccessMethodBinding[] accessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(targetMethod);", "+\tSyntheticMethodBinding accessMethod = null;", "+\tSyntheticMethodBinding[] accessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(targetMethod);", "-\t\taccessMethod = new SyntheticAccessMethodBinding(targetMethod, isSuperAccess, this);", "-\t\tsynthetics[METHOD_EMUL].put(targetMethod, accessors = new SyntheticAccessMethodBinding[2]);", "+\t\taccessMethod = new SyntheticMethodBinding(targetMethod, isSuperAccess, this);", "+\t\tsynthetics[METHOD_EMUL].put(targetMethod, accessors = new SyntheticMethodBinding[2]);", "-\t\t\taccessMethod = new SyntheticAccessMethodBinding(targetMethod, isSuperAccess, this);", "+\t\t\taccessMethod = new SyntheticMethodBinding(targetMethod, isSuperAccess, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6fce99f135b590ebce7f19ce07f98e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 303, "signatureBeforeChange": "  \tpublic void test267()", "signatureAfterChange": "  \tpublic void test267()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f735b7f5367468b422e827187f987c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic int getExtraDimensions()", "signatureAfterChange": "  \tpublic int getExtraDimensions()", "diff": ["-\t\treturn extraArrayDimensions;", "+\t\treturn this.extraArrayDimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f737cf8cbb3923bd5aac9b42bf3a170", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public int accessFlags()", "signatureAfterChange": "\r public int accessFlags()", "diff": ["-\treturn accessFlags;\r", "+\treturn this.accessFlags;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f81df087c887c23c2e50d0accb5cf5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic synchronized boolean isGeneratedFile( IFile f )", "signatureAfterChange": " \tpublic synchronized boolean isGeneratedFile(IFile f)", "diff": ["-\t */", "-\tpublic synchronized boolean isGeneratedFile( IFile f )", "-\t{", "-\t\tSet<IFile> s = _generatedFile2ParentFiles.get( f ); ", "-\t\tif ( s == null || s.isEmpty() )", "-\t\t\treturn false;", "-\t\telse", "-\t\t\treturn true;", "-\t}", "+\tpublic synchronized boolean isGeneratedFile(IFile f)", "+\t{", "+\t\treturn _parentToGenFiles.containsValue(f);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f90d4905ca5a7d1db224f9c813a2c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testPerfNameLookupFindKnownSecondaryType() throws CoreException", "signatureAfterChange": " public void testPerfNameLookupFindKnownSecondaryType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fbe4bbbad99a2ac890942357dba686d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": "\t \t \tpublic void test155()", "signatureAfterChange": "\t \t \tpublic void test155()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602178eca1f79602658dabbbf247cb5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void test0420() throws JavaModelException", "signatureAfterChange": " \tpublic void test0420() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602c75b6c898c78b9e522974ec29c3f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": "     \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "+\tpublic char[] computeUniqueKey(boolean isLeaf) {", "-\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*without access flags*/);", "+\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*not a leaf*/);", "-\t\t     sig.append(this.type.signature()); // erasure", "+\t\t     sig.append(this.type.computeUniqueKey(false/*not a leaf*/));", "-\t\tif (withAccessFlags) {", "+\t\tif (isLeaf) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602e8d510a8afaf343dad5b7a32afef9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void setFirstFile() throws IOException", "signatureAfterChange": " \tprotected void setFirstFile()", "diff": ["-\tprotected void setFirstFile() throws IOException {", "+\tprotected void setFirstFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60303f5cdf4f62a4f24c7d6925cff9be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 396, "methodNumberAfterChange": 396, "signatureBeforeChange": " \tpublic void test0394() throws JavaModelException", "signatureAfterChange": " \tpublic void test0394() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6053b3f08d3280a222b48d0d633e1f9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "  \t\t@Override \t\tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t@Override", "-\t\t\tsynchronized (AnnotationProcessorFactoryLoader.this) {", "-\t\t\t\tswitch (event.getType()) {", "-\t\t\t\t", "-\t\t\t\t// Project deletion", "-\t\t\t\tcase (IResourceChangeEvent.PRE_DELETE) :", "-\t\t\t\t\tIResource project = event.getResource();", "-\t\t\t\t\tif (project != null && project instanceof IProject) {", "-\t\t\t\t\t\tIJavaProject jproj = JavaCore.create((IProject)project);", "-\t\t\t\t\t\tif (jproj != null) {", "-\t\t\t\t\t\t\tuncacheProject(jproj);", "-\t\t\t\t\t\t}", "+\t\t\tswitch (event.getType()) {", "+\t\t\t", "+\t\t\t// Project deletion", "+\t\t\tcase (IResourceChangeEvent.PRE_DELETE) :", "+\t\t\t\tIResource project = event.getResource();", "+\t\t\t\tif (project != null && project instanceof IProject) {", "+\t\t\t\t\tIJavaProject jproj = JavaCore.create((IProject)project);", "+\t\t\t\t\tif (jproj != null) {", "+\t\t\t\t\t\tuncacheProject(jproj);", "-\t\t\t\t\tbreak;", "-\t\t\t\t\t", "-\t\t\t\t// Changes to jar files or .factorypath files", "-\t\t\t\tcase (IResourceChangeEvent.PRE_BUILD) :", "-\t\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "-\t\t\t\t\tFactoryPathDeltaVisitor visitor = new FactoryPathDeltaVisitor();", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\trootDelta.accept(visitor);", "-\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\tAptPlugin.log(e, \"Unable to determine whether resource change affects annotation processor factory path\"); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tSet<IJavaProject> affected = visitor.getAffectedProjects();", "-\t\t\t\t\tif (affected != null) {", "-\t\t\t\t\t\tprocessChanges(affected, failureHandlers);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t", "+\t\t\t\tbreak;", "+\t\t\t\t", "+\t\t\t// Changes to jar files or .factorypath files", "+\t\t\tcase (IResourceChangeEvent.PRE_BUILD) :", "+\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "+\t\t\t\tFactoryPathDeltaVisitor visitor = new FactoryPathDeltaVisitor();", "+\t\t\t\ttry {", "+\t\t\t\t\trootDelta.accept(visitor);", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\tAptPlugin.log(e, \"Unable to determine whether resource change affects annotation processor factory path\"); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tSet<IJavaProject> affected = visitor.getAffectedProjects();", "+\t\t\t\tif (affected != null) {", "+\t\t\t\t\tprocessChanges(affected, failureHandlers);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60695e7563a499da00c97967867d8470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic void test0229() throws JavaModelException", "signatureAfterChange": " \tpublic void test0229() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a177775e7a111e67698b6c13c3304f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCreateResourceExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateResourceExcludedCompilationUnit() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "-\tthis.createFolder(\"/P/src/p\");", "+\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\tcreateFolder(\"/P/src/p\");", "-\tthis.createFile(", "+\tcreateFile("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cb1134a53b1595f1f7c3b3bfadbbe9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testAccessRestriction14() throws Exception", "signatureAfterChange": " public void testAccessRestriction14() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cf24e0fa7508788df5cc189cf501ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f2f45b09c61cdc4a3bb7702f92f8e4fdcb969052", "commitAfterChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "diff": ["-\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), true, false);", "+\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), true);", "-\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), modified, false);", "+\t\t\t\tresult = new FileGenerationResult((IFile)workingCopy.getResource(), modified);", "-\t\treturn new FileGenerationResult((IFile)workingCopy.getResource(), true, false);", "+\t\treturn new FileGenerationResult((IFile)workingCopy.getResource(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e3938fe73cf7532011425dd72f4306", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic String[] getRequiredProjectNames() throws JavaModelException", "signatureAfterChange": " \tpublic String[] getRequiredProjectNames() throws JavaModelException", "diff": ["-\t\treturn this.projectPrerequisites(getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/));", "-\t}", "+\t\treturn this.projectPrerequisites(getResolvedClasspath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e6789a7e461e15f55249c547d1f309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " \tpublic void test0142() throws JavaModelException", "signatureAfterChange": " \tpublic void test0142() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f009116a6293c78d06d6c431dcdb6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " public void testCompletionFindMethod2() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindMethod2() throws JavaModelException", "diff": ["-\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED),", "+\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f86c820e4edf8d4295e800e3318bb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "82208f61237e714f45fa0ec35023823563f997ac", "commitAfterChange": "c36806bf795aa69e23f027117b2ebc1cb99bee93", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testJavadocFieldStringReferenceWithJavadoc() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocFieldStringReferenceWithJavadoc() throws CoreException", "diff": ["-\t\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [javadocSearchedVar] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [javadocSearchedVar] POTENTIAL_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fc1f328fbce67dff2d435b1539c1ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void testSearchField() throws CoreException", "signatureAfterChange": " \tpublic void testSearchField() throws CoreException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61158be77ba5acd802894d8fa2a8533d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CharArrayCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void remove(char[] key)", "signatureAfterChange": " public void remove(char[] key)", "diff": ["-\twhile (keyTable[index] != null) {", "-\t\tif (CharOperation.equals(keyTable[index], key)) {", "-\t\t\tvalueTable[index] = 0;", "-\t\t\tkeyTable[index] = null;", "+\twhile (this.keyTable[index] != null) {", "+\t\tif (CharOperation.equals(this.keyTable[index], key)) {", "+\t\t\tthis.valueTable[index] = 0;", "+\t\t\tthis.keyTable[index] = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6153c8f5f14a0e9aeafce4bccda1c96d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FileNameEnvironment.java", "commitBeforeChange": "71ca7b096c04e123348cb13b19efbd2de402f9f2", "commitAfterChange": "6872e25fe154a5852fcd3ac0c49b686e5e81ec7b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ClasspathJar getClasspathJar(File file) throws IOException", "signatureAfterChange": "  public ClasspathJar getClasspathJar(File file) throws IOException", "diff": ["-\t\treturn new JavaModelClasspathJar(zipFile);", "+\t\treturn new ClasspathJar(zipFile, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6158362fbb74ec2404e7bb37efcbca03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test0443() throws JavaModelException", "signatureAfterChange": " \tpublic void test0443() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61584b8fc1faef46639ff4d681dfdf94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Block getBody()", "signatureAfterChange": "  \tpublic Block getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "615d5fa87e6e87c18a6e00b0047dfa96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t\tpublic Object next()", "signatureAfterChange": " \t\tpublic Object next()", "diff": ["-\t\t\t\treturn ((CopySourceInfo) this.sourceNodeIter.next()).getStartNode();", "+\t\t\t\treturn ((CopySourceInfo) this.sourceNodeIter.next()).getNode();", "-\t\t\t\treturn ((CopySourceInfo) this.rangeNodeIter.next()).parent;", "+\t\t\t\treturn ((PropertyLocation) this.rangeNodeIter.next()).getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a32c97974c61dcc1a44fc0d06560d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "bde9840f9573d77080a23dfde60bdb51dc549649", "commitAfterChange": "e5950298e29dbaf979a85e6f3f4a27d3f4b008e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void seekTypes(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tpublic void seekTypes(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\tif (matchName.indexOf('.') >= 0) { //looks for member type A.B", "-\t\t\tmatchName= matchName.replace('.', '$');", "-\t\t}", "+\t\t\t\t\tmatchName= matchName.replace('.', '$');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b07dfa21218413c92e9fb70705e823", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "ccba0e6d5ed46c001fcab0417d4f7460c796674d", "commitAfterChange": "027a5942c1f8a8df8288ac0e347e39e4a0c4c335", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t\trecordSuppressWarnings(typeDeclaration.compilationResult(), typeDeclaration.declarationSourceStart, typeDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t\trecordSuppressWarnings(typeDeclaration.compilationResult(), typeDeclaration.declarationSourceStart, typeDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);", "-\t\t\t\t\t\t\trecordSuppressWarnings(methodDeclaration.compilationResult(), methodDeclaration.declarationSourceStart, methodDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t\trecordSuppressWarnings(methodDeclaration.compilationResult(), methodDeclaration.declarationSourceStart, methodDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);", "-\t\t\t\t\t\t\trecordSuppressWarnings(sourceType.scope.referenceContext.compilationResult(), fieldDeclaration.declarationSourceStart, fieldDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t\trecordSuppressWarnings(sourceType.scope.referenceContext.compilationResult(), fieldDeclaration.declarationSourceStart, fieldDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);", "-\t\t\t\t\t\t\trecordSuppressWarnings(scope.referenceContext().compilationResult(), localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t\trecordSuppressWarnings(scope.referenceContext().compilationResult(), localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61cc3cac26f544cb61911170a42ad23c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 279, "signatureBeforeChange": " \tpublic void test0634() throws JavaModelException", "signatureAfterChange": " \tpublic void test0634() throws JavaModelException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61d9f31ca6eebfcf4e5cde3c4b01300d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic void test0120() throws JavaModelException", "signatureAfterChange": " \tpublic void test0120() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621fbe76f986932a438921e8691d44eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "+\tpublic char[] computeUniqueKey(boolean isLeaf) {", "-\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*without access flags*/);", "+\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*not a leaf*/);", "-\t\t\tchar[] typeSig = enclosing.signature();", "+\t\t\tchar[] typeSig = enclosing.computeUniqueKey(false/*not a leaf*/);", "-\t\t    char[] typeSig = this.type.signature();", "+\t\t    char[] typeSig = this.type.computeUniqueKey(false/*not a leaf*/);", "-\t\t        sig.append(this.arguments[i].computeUniqueKey(false/*without access flags*/));", "+\t\t        sig.append(this.arguments[i].computeUniqueKey(false/*not a leaf*/));", "-\t\tif (withAccessFlags) {", "+\t\tif (isLeaf) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6231bce7c7ebf147a9d6e1a4238cd7f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void test0503a() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503a() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62437beb1bbae4703938237b1e174131", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b7ea5744525df388c37b95455e0adfb081a232d5", "commitAfterChange": "f5007b7c0d4ff2d3bb6b4378ddf1e0e19d140cdd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid addDependentProjects(IPath projectPath, HashSet result)", "signatureAfterChange": " \tvoid addDependentProjects(IPath projectPath, HashSet result)", "diff": ["-\t\t\tIJavaProject[] projects = JavaModelManager.getJavaModelManager().getJavaModel().getJavaProjects();", "+\t\t\tIJavaProject[] projects = this.manager.getJavaModel().getJavaProjects();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62589d1dcbe10d37d2d6274523ed66bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic void test0065() throws JavaModelException", "signatureAfterChange": " \tpublic void test0065() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6264f5cdbd28a0854003f9cf6a3dcf22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "ead8e814ab499b7622eb426e1befbcf339b11ce8", "commitAfterChange": "557b79fe942a0c2ecd096efec77764eeda1e9de9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "signatureAfterChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "diff": ["-\t\t} else if (inheritedTypeVariable.boundCheck(substitute, argument) != TypeConstants.OK) {", "+\t\t} else if (inheritedTypeVariable.boundCheck(substitute, argument, this.type.scope) != TypeConstants.OK) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626560fa6bd1065f79d794bb6e5f8c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test0029() throws JavaModelException", "signatureAfterChange": " \tpublic void test0029() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6286c07f973ad06e53deb1df02e22d00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceCompletionTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void complete( \t\t\tString projectName, \t\t\tString packageName, \t\t\tString unitName, \t\t\tString completeAt, \t\t\tString completeBehind, \t\t\tint[] ignoredKinds, \t\t\tint warmupCount, \t\t\tint iterationCount) throws JavaModelException", "signatureAfterChange": " \tprivate void complete( \t\t\tString projectName, \t\t\tString packageName, \t\t\tString unitName, \t\t\tString completeAt, \t\t\tString completeBehind, \t\t\tint[] ignoredKinds, \t\t\tint warmupCount, \t\t\tint iterationCount) throws JavaModelException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62996ff65e318b21e4a340d92663bcee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void forbiddenReference(FieldBinding field, ASTNode location,  \t\tString messageTemplate, int problemId)", "signatureAfterChange": " public void forbiddenReference(FieldBinding field, ASTNode location,  \t\tString messageTemplate, int problemId)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a62be39ca84c6d0681455c9bccc192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "ad2b9e82c9aafa1082bb24fe4ac142c2def6633b", "commitAfterChange": "705390b3d4e931310269932c3d040a1bf61dd26b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["+\t\t} else if (this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t\tcheckInheritedDefaultMethods(methods, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62c08ef3002f57eb0035f1aaec5635e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic IQueryResult[] queryFilesReferringToPrefix(char[] prefix) throws IOException", "signatureAfterChange": " \tpublic IQueryResult[] queryFilesReferringToPrefix(char[] prefix)", "diff": ["-\tpublic IQueryResult[] queryFilesReferringToPrefix(char[] prefix) throws IOException {", "+\tpublic IQueryResult[] queryFilesReferringToPrefix(char[] prefix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e2f1bad3e84aa3bd54a086ad20bba9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "18117c19f72c2371b4731ee20c2330f8e794dc46", "commitAfterChange": "ccba397e4e9d73802c009a4349e321c86584df94", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r protected void scrubOutputFolder() throws CoreException", "signatureAfterChange": "\r \r protected void scrubOutputFolder() throws CoreException", "diff": ["+\t\tnotifier.checkCancel();\r", "+\tnotifier.checkCancel();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62ebad7cc96c63e9edb274488269c7df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "commitAfterChange": "7e5c821becbfd893dc049f65559e27ad95e7a9ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding[] raisedExceptions,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "signatureAfterChange": "\r \t\r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding[] raisedExceptions,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t// only required for actually thrown exceptions\r", "-\t\t\t\t\t\t\t\t\tif (!flowInfo.isDeadEnd() && !flowInfo.isFakeReachable()){\r", "-\t\t\t\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r", "-\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630155244e9419366e42d66d15e5e8cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 317, "signatureBeforeChange": " \tpublic void test0669() throws JavaModelException", "signatureAfterChange": " \tpublic void test0669() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630efe12669c86a863ca228f60cccdac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public IResource getUnderlyingResource() throws JavaModelException", "signatureAfterChange": " public IResource getUnderlyingResource() throws JavaModelException", "diff": ["-\t\tString[] segs = Signature.getSimpleNames(this.name);", "+\t\tString[] segs = this.names;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63151041eb71acc301f88b9d57e52680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f75c17944c4c71209b764f81c95e01660c006557", "commitAfterChange": "df0fa796190e96b7d9058439ec45269a2791bacf", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "diff": ["-\t\t\t\t\t\tif (this.preferences.remove_unnecessary_semicolon) {", "-\t\t\t\t\t\t\tthis.scribe.consumeNextToken();", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631b6116556eb257c81372f6ea10a704", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "d185eab4c1939e466ec2dc39c6957f5f96655610", "commitAfterChange": "3dc1bc05d190d32f0485aff7f7ba0e75f5ac20a4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element, int eventType)", "diff": ["-protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element) {", "+protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element, int eventType) {", "-\t\treturn super.isAffectedByOpenable(delta, element);", "+\t\treturn super.isAffectedByOpenable(delta, element, eventType);", "-\t\treturn super.isAffectedByOpenable(delta, element);", "+\t\treturn super.isAffectedByOpenable(delta, element, eventType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "632bdffc81e7dc7fc69a99dc180476d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+\tsuper.checkNPE(scope, flowContext, flowInfo);", "-\treturn true; // done all possible checking"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "632e85f7fb11a711cdad5eaabb1afdd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 147, "signatureBeforeChange": " final public void ifne(Label lbl)", "signatureAfterChange": " final public void ifne(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifne:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "634055293213d8473d0e5a0c86cbb3ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": " \tpublic void test0209() throws JavaModelException", "signatureAfterChange": " \tpublic void test0209() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63762874e2aaaf7fab61fd0ad5f00622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \t \tpublic void test063()", "signatureAfterChange": " \t \tpublic void test063()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "639fa8106356bec85b6552c50c286209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrimitiveType.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c9726e96e61157856df2441d324b16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 578, "methodNumberAfterChange": 578, "signatureBeforeChange": " \tpublic void test559()", "signatureAfterChange": " \tpublic void test559()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ce3b807303b57bba4e611126a33dcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "41de7547cd0b25c1246589b4554509ae324d796a", "commitAfterChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\r", "+\t\tif(parser.assistNodeParent != null) {\r", "+\t\t\tcomputeExpectedTypes(parser.assistNodeParent, scope);\r", "+\t\t}\r", "-\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "+\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding, scope);\r", "-\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding);\r", "+\t\t\t\t\t\t\t\t\t\t\t\tfindClassField(token, (TypeBinding) qualifiedBinding, scope);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6401f27941298155e15099620f8620fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": " \tpublic void testSuperMethodReference()", "signatureAfterChange": " \tpublic void testSuperMethodReference()", "diff": ["-\t\tSuperMethodReference x1 = this.ast.newSuperMethodReference(this.N2);", "+\t\tSuperMethodReference x1 = this.ast.newSuperMethodReference();", "+\t\tx1.setName(this.N2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64051daf135c09008bcf676f2259344b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingJavadocTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void testTagRemove3() throws Exception", "signatureAfterChange": " \t \tpublic void testTagRemove3() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsRemoved((ASTNode) tags.get(1), null);", "+\t\t\trewrite.remove((ASTNode) tags.get(1), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640935ffe656fcc21a68046f04067575", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6435343530fea0de5c1815d80f956aa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public final boolean hasRestrictedAccess()", "signatureAfterChange": "  public final boolean hasRestrictedAccess()", "diff": ["-\treturn (modifiers & AccRestrictedAccess) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccRestrictedAccess) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643778f6b4eb88cbe312afcbe1d31245", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParameterizedType.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64433321efa5b6296650dfc2f3c628f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 235, "methodNumberAfterChange": 235, "signatureBeforeChange": " \tpublic void test0233() throws JavaModelException", "signatureAfterChange": " \tpublic void test0233() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "645ed16b2a039658ed34c13049e24beb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": " public final int sourceEnd()", "signatureAfterChange": " public final int sourceEnd()", "diff": ["+}", "-\treturn scope.referenceContext.sourceEnd;", "+\treturn this.scope.referenceContext.sourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64643b76ba6bcfb575861e7614339849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ErrorTypeImpl.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " ErrorTypeImpl(BaseProcessingEnvImpl env)", "signatureAfterChange": " ErrorTypeImpl(BaseProcessingEnvImpl env, ReferenceBinding binding)", "diff": ["-\t/* package */ ErrorTypeImpl(BaseProcessingEnvImpl env) {", "-\t\tsuper(env, null);", "+\t/* package */ ErrorTypeImpl(BaseProcessingEnvImpl env, ReferenceBinding binding) {", "+\t\tsuper(env, binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c44e21e648a146c4da748fcd72c928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6f7aa3244a45bbb743daca21515cdff8265190d5", "commitAfterChange": "be26f089c0f3f72db1f135f30599168ca702cc38", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "\r public void parseError(\r \tint startPosition, \r \tint endPosition, \r \tchar[] currentTokenSource, \r \tString errorTokenName, \r \tString[] possibleTokens,\r \tReferenceContext context,\r \tCompilationResult compilationResult)", "signatureAfterChange": "\r public void parseError(\r \tint startPosition, \r \tint endPosition, \r \tchar[] currentTokenSource, \r \tString errorTokenName, \r \tString[] possibleTokens)", "diff": ["-\tString[] possibleTokens,\r", "-\tReferenceContext context,\r", "-\tCompilationResult compilationResult) {\r", "+\tString[] possibleTokens) {\r", "-\t\t\t\tendPosition,\r", "-\t\t\t\tcontext,\r", "-\t\t\t\tcompilationResult);\r", "+\t\t\t\tendPosition);\r", "-\t\t\t\tendPosition,\r", "-\t\t\t\tcontext, \r", "-\t\t\t\tcompilationResult);\r", "+\t\t\t\tendPosition);\r", "-\t\t\tendPosition,\r", "-\t\t\tcontext,\r", "-\t\t\tcompilationResult);\r", "+\t\t\tendPosition);\r", "-\t\tendPosition,\r", "-\t\tcontext,\r", "-\t\tcompilationResult);\r", "+\t\tendPosition);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ea79ea3044e404643e794ec25c0da7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ca0a8d2a8dcbdca4c1d22b2aafd247d22556e537", "commitAfterChange": "1155b311a647fc5f126edd0c5e6b818f225baee0", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": " protected void annotateTypeReference(TypeReference ref)", "signatureAfterChange": " protected void annotateTypeReference(Wildcard ref)", "diff": ["-protected void annotateTypeReference(TypeReference ref) {", "+protected void annotateTypeReference(Wildcard ref) {", "+\tif (ref.bound != null) {", "+\t\tref.bits |= (ref.bound.bits & ASTNode.HasTypeAnnotations);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6509042e34061e7150863a84ce4c5a7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testAccessRestriction7() throws Exception", "signatureAfterChange": " public void testAccessRestriction7() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "652b04cb3ebb2c99a587cc43bfdb69e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": " \tpublic void test0174() throws JavaModelException", "signatureAfterChange": " \tpublic void test0174() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653c8c6dca429a0bb07d84ac01902ea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": " \tpublic void test0202() throws JavaModelException", "signatureAfterChange": " \tpublic void test0202() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6544ddf71d2bf97221417872631dea16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 200, "signatureBeforeChange": " public void javadocDeprecatedField(FieldBinding field, ASTNode location, int modifiers)", "signatureAfterChange": " public void javadocDeprecatedField(FieldBinding field, ASTNode location, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654d5c632723d5f4279c206806aa9f4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public final boolean isUsed()", "signatureAfterChange": "  public final boolean isUsed()", "diff": ["-\treturn (modifiers & AccLocallyUsed) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccLocallyUsed) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "656e08ca87e0803e68a9665f6eeb442a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t&& ((ProblemMethodBinding) this.binding).problemId() == NotVisible) {", "+\t\t\t&& ((ProblemMethodBinding) this.binding).problemId() == ProblemReasons.NotVisible) {", "-\t\t\t\tthis.delegateThis = scope.getField(scope.enclosingSourceType(), DELEGATE_THIS, this);", "+\t\t\t\tthis.delegateThis = scope.getField(scope.enclosingSourceType(), EvaluationConstants.DELEGATE_THIS, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65749c3264d83366622bd6ccac2aa74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e31e89499c545f3404d7787f4d333516631375ec", "commitAfterChange": "0eef8a719c726a9948e73db62c7f81adbce0f319", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 70, "signatureBeforeChange": " public ReferenceBinding[] superInterfaces()", "signatureAfterChange": "  public ReferenceBinding[] superInterfaces()", "diff": ["+", "+\tif (this != this.prototype)", "+\t\treturn this.superInterfaces = this.prototype.superInterfaces();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657cca2e3c94f7469dd68c45d6191694", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": " \tpublic void test0371() throws JavaModelException", "signatureAfterChange": " \tpublic void test0371() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658e093636791007eed115ed7e71114d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 360, "methodNumberAfterChange": 360, "signatureBeforeChange": " \tpublic void test0703() throws JavaModelException", "signatureAfterChange": " \tpublic void test0703() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e18738f2f7ab86b898f95676b28f00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 318, "signatureBeforeChange": " \tpublic void test0316() throws JavaModelException", "signatureAfterChange": " \tpublic void test0316() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66066103251eaf8f8e19d72797677898", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "16d2f227c83166edb0478b06ddca92e3871fed38", "commitAfterChange": "e914ff2196f00fd15aeda854332ebec940816655", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["+ */", "+public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tReferenceBinding allocatedTypeErasure = (ReferenceBinding) binding.declaringClass.erasure();", "+", "+\t// perform some emulation work in case there is some and we are inside a local type only", "+\tif (allocatedTypeErasure.isNestedType()", "+\t\t&& currentScope.enclosingSourceType().isLocalType()) {", "+", "+\t\tif (allocatedTypeErasure.isLocalType()) {", "+\t\t\t((LocalTypeBinding) allocatedTypeErasure).addInnerEmulationDependent(currentScope, false);", "+\t\t\t// request cascade of accesses", "+\t\t\t// locally propagate, since we already now the desired shape for sure", "+\t\t\tcurrentScope.propagateInnerEmulation(allocatedTypeErasure, false);", "+\t\t\t// request cascade of accesses", "+\t}", "+}", "-\t */", "-\tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo) {", "-", "-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "-\t\tReferenceBinding allocatedTypeErasure = (ReferenceBinding) binding.declaringClass.erasure();", "-", "-\t\t// perform some emulation work in case there is some and we are inside a local type only", "-\t\tif (allocatedTypeErasure.isNestedType()", "-\t\t\t&& currentScope.enclosingSourceType().isLocalType()) {", "-", "-\t\t\tif (allocatedTypeErasure.isLocalType()) {", "-\t\t\t\t((LocalTypeBinding) allocatedTypeErasure).addInnerEmulationDependent(currentScope, false);", "-\t\t\t\t// request cascade of accesses", "-\t\t\t} else {", "-\t\t\t\t// locally propagate, since we already now the desired shape for sure", "-\t\t\t\tcurrentScope.propagateInnerEmulation(allocatedTypeErasure, false);", "-\t\t\t\t// request cascade of accesses", "-\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "660de8b9ea84a927075b9abb6cdef733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "42e53b3c82f631cac5341438af4d88461f281652", "commitAfterChange": "d8ceda9e2c634a0a60e12aec6892fc13a5bff2e9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["-\t\tint throwsTagsNbre = thrownExceptions == null ? 0 : thrownExceptions.length;", "-\t\tfor (int i = 0; i < throwsTagsNbre; i++) {", "+\t\tint throwsTagsLength = thrownExceptions == null ? 0 : thrownExceptions.length;", "+\t\tfor (int i = 0; i < throwsTagsLength; i++) {", "-\t\tint seeTagsNbre = references == null ? 0 : references.length;", "-\t\tfor (int i = 0; i < seeTagsNbre; i++) {", "+\t\tint seeTagsLength = references == null ? 0 : references.length;", "+\t\tfor (int i = 0; i < seeTagsLength; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "660eaaddfcd8bcc391abedc9e3ff4e4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "b171a3cb32409185b8e78b9cb506987b409517f9", "commitAfterChange": "d0465303a3f06c207d587b10c6ee53d0a8c1e8db", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "signatureAfterChange": " protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "diff": ["-\tif (this.returnType != null && hasNonNullDefaultFor(DefaultLocationReturnType, true)) {", "-\t\tif (this.returnType.acceptsNonNullDefault() && (this.returnType.tagBits & TagBits.AnnotationNullMASK) == 0) {", "+\tif (this.returnType != null && hasNonNullDefaultFor(DefaultLocationReturnType, true) && this.returnType.acceptsNonNullDefault()) {", "+\t\tif ((this.returnType.tagBits & TagBits.AnnotationNullMASK) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6611007f20b848dd245a96887bf16ae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 338, "methodNumberAfterChange": 338, "signatureBeforeChange": " \tpublic void test0336() throws JavaModelException", "signatureAfterChange": " \tpublic void test0336() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661e50ebbce6b1404c09ec2c3942e6cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 381, "signatureBeforeChange": " \tpublic void test0722() throws JavaModelException", "signatureAfterChange": " \tpublic void test0722() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663d29b85c5957c0ae5058fa85f0de41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "fc95d954bcabaedefa30195cc35eead97957861e", "commitAfterChange": "8e83340f2e10ea3038452a57a0ab217b975748ef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void compileAndDeploy(String source, String className)", "signatureAfterChange": " public void compileAndDeploy(String source, String className)", "diff": ["-\t\t.append(\";\")", "+\t\t.append(File.pathSeparatorChar)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6644a539b06269f09e3eac6a935917b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleMemberAnnotation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getValue()", "signatureAfterChange": "  \tpublic Expression getValue()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667a36c4df3c9c7447321a523e425859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, local, nullStatus, this.expression);", "+\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, local, nullStatus, this.expression, this.expression.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6680cbc950170d374bce296ecd28dba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic void test0503i() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503i() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668e33188339da9471dc4a6b43cbc470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test0159() throws JavaModelException", "signatureAfterChange": " \tpublic void test0159() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e22b0409e6eabc182b09ed5ccf21d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "ab98a9939a975b86dfdde2e7a0a6d2de49a261f2", "commitAfterChange": "2bcb3d0c9fa104ef6edd7e53ba16f8b7aff57348", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACE);", "+\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACE, this.preferences.insert_space_before_opening_brace_in_array_initializer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6724ce136fa6864ea1c89ae7dfb6ccca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void test0058() throws JavaModelException", "signatureAfterChange": " \tpublic void test0058() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6750f393a48276c63e447b6413f3b920", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "5c25bc24b238851bade1684c837193693f04d597", "commitAfterChange": "4af63c78a97854459ffdb3bdd8ea245bbfdb48a7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testAllTypeNames3() throws CoreException", "signatureAfterChange": " public void testAllTypeNames3() throws CoreException", "diff": ["-\t\t\tResourcesPlugin.getWorkspace(),", "-\t\t\tSearchPattern.R_PREFIX_MATCH,", "-\t\t\tfalse, // case insensitive", "+\t\t\tSearchPattern.R_PREFIX_MATCH, // case insensitive"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6756b57824e2b61fa0fba11ccafbac94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WhileStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6765661d55bbd51ce6da40f8ff386a34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "121da1ed9487cd06624131be60f7fed861a83829", "commitAfterChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void performCompilation()", "signatureAfterChange": " public void performCompilation()", "diff": ["-\t\tthis.logger.loggingExtraProblems(this);", "+\t\tloggingExtraProblems();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67694e4da507fdf11cf48ae2c830db94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarFactoryContainer.java", "commitBeforeChange": "a08b4c389632f0f20a50182ded68880addc0de18", "commitAfterChange": "5cb40e1ad24651b50221770b935dfa647cb41f4d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected List<String> loadFactoryNames()", "signatureAfterChange": " \t\t \t@Override \tprotected List<String> loadFactoryNames()", "diff": ["+\t\t", "+\t@Override", "-\t\treturn getServiceClassnamesFromJar( _jarFile );", "-\t}", "+\t\treturn getServiceClassnamesFromJar( getJarFile() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676fb891faa13c25279aba1fb575e3d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 316, "methodNumberAfterChange": 316, "signatureBeforeChange": " \tpublic void test0314() throws JavaModelException", "signatureAfterChange": " \tpublic void test0314() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6773335d0e4e1cb06f34f5b1718f0ad1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic Name getName()", "signatureAfterChange": " \tpublic Name getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678cf2cded09cef47471668185b8fd48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "53dea3bbb0a8d720e7abd4d3f9b54cc5dbdaecb6", "commitAfterChange": "d16e32b1bfbbab8deee5f229ab908fe246be9b08", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "diff": ["-\t\t\t\tIPath typePath = resource.getFullPath().removeFirstSegments(segmentCount).removeFileExtension();", "-\t\t\t\tif (newState.isKnownType(typePath.toString())) {", "-\t\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\t\tSystem.out.println(\"MOST DO FULL BUILD. Found change to class file \" + typePath); //$NON-NLS-1$", "-\t\t\t\t\treturn false;", "+\t\t\t\tif (this.makeOutputFolderConsistent) {", "+\t\t\t\t\tIPath typePath = resource.getFullPath().removeFirstSegments(segmentCount).removeFileExtension();", "+\t\t\t\t\tif (newState.isKnownType(typePath.toString())) {", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\t\tSystem.out.println(\"MOST DO FULL BUILD. Found change to class file \" + typePath); //$NON-NLS-1$", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678e76ea2fca94445595199c865e6771", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void test0298() throws JavaModelException", "signatureAfterChange": " \tpublic void test0298() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b64f2a38c523127fd8dc7934567d50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 232, "methodNumberAfterChange": 232, "signatureBeforeChange": " \tpublic void test0230() throws JavaModelException", "signatureAfterChange": " \tpublic void test0230() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b7e6991b215c3c03b4241fab7c9b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testMemberTypeOfOtherProject() throws JavaModelException", "signatureAfterChange": " \tpublic void testMemberTypeOfOtherProject() throws JavaModelException", "diff": ["+\t\tenv.removeProject(projectPath1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67bcbf7478081ed125c9f02e3de52dd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "96e4278a6c1307ee0d3c5091e2d41c810a3207e4", "commitAfterChange": "0e54e4ea4ffd60f229f31ee41365e4739addddb6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findImport(char[][] compoundName, int length)", "signatureAfterChange": " private Binding findImport(char[][] compoundName, int length)", "diff": ["-\t\tif (this.environment.defaultPackage == null || compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "+\t\tif (compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ce3d92d4c9e270fad0b206ade056b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testGeneral() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testGeneral() throws JavaModelException, CoreException", "diff": ["-public void testGeneral() throws JavaModelException, CoreException, IOException {", "+public void testGeneral() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d4c89c4e163bf8d6f5737c3519c6ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "10eb4fe1c3f61da399332d4475de97a7108327b6", "commitAfterChange": "a177bb7fe17619982bbbfa40c9b97d8a1fb8bcb9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public ReferenceBinding[] memberTypes()", "signatureAfterChange": " public ReferenceBinding[] memberTypes()", "diff": ["-\treturn memberTypes;", "+\treturn this.memberTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ea5c7ede90245d4a1b48610dee1ae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "130bf52e6e6a6b2abae63509dc107f8c8574de74", "commitAfterChange": "da8395b2f47f9ea261a2eac4c2a9b0e0621ba41a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"SearchDocument for \" + this.documentPath; //$NON-NLS-1$", "+\t\treturn \"SearchDocument for \" + getPath(); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f4e2805932511561f794e218c0bd14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic List parameters()", "signatureAfterChange": "  \tpublic List parameters()", "diff": ["-\t\treturn parameters;", "+\t\treturn this.parameters;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6812092ea499e9f9914bb6a2ddde32eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic int getID()", "signatureAfterChange": " \tpublic int getID()", "diff": ["-\t\treturn id;", "+\t\treturn this.id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681e1607804e09df2f7c5e662fc0a227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean isGenericType()", "signatureAfterChange": " public boolean isGenericType()", "diff": ["-    return this.typeVariables != NoTypeVariables;", "+    return this.typeVariables != Binding.NO_TYPE_VARIABLES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681f708a2d9db6f0ad6476a4321539ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public final boolean isUsed()", "signatureAfterChange": " public final boolean isUsed()", "diff": ["-\treturn (modifiers & AccLocallyUsed) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccLocallyUsed) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6845bbfc7466a84677065737226fd3b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "702f3607f34c342d430627a0345b867b36454eed", "commitAfterChange": "0e15d25fa751194c4a730be8311430c1b5672143", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["+\tif (DEBUG)\r", "+\t\tSystem.out.println(\"\\nStarting build of \" + currentProject.getName()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68917e29754ab0359def06e92aea3ca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRefParameter.java", "commitBeforeChange": "c0fb6d2b67dfdf597d878261fa4ba21d4a23918e", "commitAfterChange": "7c71bd67364ddd3b380d51d2f4e9afb3c139dbb2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\treturn optionalParameterName;", "+\t\treturn this.optionalParameterName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ad8be37ea4ba5bd5e2c58dc40a8aa5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test0422() throws JavaModelException", "signatureAfterChange": " \tpublic void test0422() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c30d1757029b0852be40c61aab7c08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "877d1c925f96fd1468669263e6d8fde7ccbe8c86", "commitAfterChange": "5f2c1ea3affced840286a6c8b813c60b56c847c3", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 245, "signatureBeforeChange": " public void localVariableCanOnlyBeNull(LocalVariableBinding local, ASTNode location)", "signatureAfterChange": " public void localVariableCanOnlyBeNull(LocalVariableBinding local, ASTNode location)", "diff": ["-\t\tlocation.sourceEnd);", "+\t\tlocalSourceEnd(local, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c947957c5b7c0d8cd63c50c88b4074", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void test040()", "signatureAfterChange": " public void test040()", "diff": ["-\t\t\"    18  astore_1 [o]\\n\" + ", "+\t\t\"    18  astore_1\\n\" + ", "-\t\t\"        [pc: 0, pc: 29] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\"        [pc: 19, pc: 28] local: o index: 1 type: java.lang.Object\\n\";", "+\t\t\"        [pc: 0, pc: 29] local: args index: 0 type: java.lang.String[]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69036656231686e4bef1df9a64db5f41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testCamelCaseLocalVariable1() throws JavaModelException", "signatureAfterChange": " public void testCamelCaseLocalVariable1() throws JavaModelException", "diff": ["-\t\t\t\t\"oneTwoThree[LOCAL_VARIABLE_REF]{oneTwoThree, null, I, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"oTTLocal[LOCAL_VARIABLE_REF]{oTTLocal, null, I, oTTLocal, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"oneTwoThree[LOCAL_VARIABLE_REF]{oneTwoThree, null, I, oneTwoThree, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTLocal[LOCAL_VARIABLE_REF]{oTTLocal, null, I, oTTLocal, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "694a14cc64659867da14489975fdae1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["-\t\t\t\tString prefix= \"\"; //$NON-NLS-1$", "+\t\t\t\tString prefix= Util.EMPTY_STRING; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69570d52ef8e938ea7ad38c2e1719579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "16e3cfb0a84cb0cd2c8901e2eb0295b42a63a54e", "commitAfterChange": "ab21422ac410052acb8d938b526b4111358a1452", "methodNumberBeforeChange": 555, "methodNumberAfterChange": 555, "signatureBeforeChange": " \tpublic void test527()", "signatureAfterChange": " \tpublic void test527()", "diff": ["+\t\tpreferences.alignment_for_arguments_in_annotation = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696333bb0f4cc4c1240aaf9396072b4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void test0416() throws JavaModelException", "signatureAfterChange": " \tpublic void test0416() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6973e607f997e89e5c3640aea5218cf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "d50f599c69eb795e78c16e3acf0ec69b29313628", "commitAfterChange": "2d29c79891a705ebdda86325f5eda79a45a41b75", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public OrPattern(SearchPattern leftPattern, SearchPattern rightPattern)", "signatureAfterChange": "\r public OrPattern(SearchPattern leftPattern, SearchPattern rightPattern)", "diff": ["+\tthis.matchMode = Math.min(leftPattern.matchMode, rightPattern.matchMode);\r", "+\tthis.isCaseSensitive = leftPattern.isCaseSensitive || rightPattern.isCaseSensitive;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69824d659265946d7827b35caf77375a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void test0101() throws JavaModelException", "signatureAfterChange": " \tpublic void test0101() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6990deccdc6ac0270061dd6ec4c87884", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testAddPartialMethod1and2() throws JavaModelException", "signatureAfterChange": " public void testAddPartialMethod1and2() throws JavaModelException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "699a2ddd8723f73e1b557490d67faec6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "0b7acd17e6eef2f223228752e14e0589f5cac72e", "commitAfterChange": "63c8a2ec89eae9c5f71458dc20e19fe16c16341b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "diff": ["-\t// No need to check the results table for duplicacy while processing the ", "+\t// No need to check the results table for duplicates while processing the", "-\tif (results == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a84233a1074ebd44d93e375229257e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0716b9527725dfa866349bcb7a45ea1d5ecddd2b", "commitAfterChange": "a544ec0a30c50b5e3390138a2a653e5667e6b6a8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void addDefinitelyAssignedVariables(Scope scope, int initStateIndex)", "signatureAfterChange": " public void addDefinitelyAssignedVariables(Scope scope, int initStateIndex)", "diff": ["-\tif ((this.generateAttributes & ClassFileConstants.ATTR_VARS) == 0)", "+\tif (((this.generateAttributes & ClassFileConstants.ATTR_VARS) == 0)", "+\t\t\t&& ((this.generateAttributes & ClassFileConstants.ATTR_STACK_MAP) == 0))", "-/*\tif (initStateIndex == lastInitStateIndexWhenAddingInits)", "-\t\treturn;", "-\tlastInitStateIndexWhenAddingInits = initStateIndex;", "-\tif (lastInitStateIndexWhenRemovingInits != initStateIndex){", "-\t\tlastInitStateIndexWhenRemovingInits = -2; // reinitialize remove index ", "-\t\t// remove(1)-add(1)-remove(1) -> ignore second remove", "-\t\t// remove(1)-add(2)-remove(1) -> perform second remove", "-\t}", "-\t", "-*/\tfor (int i = 0; i < visibleLocalsCount; i++) {", "+\tfor (int i = 0; i < visibleLocalsCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ee0aaf27af075e24a8f92728df8295", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " protected IStatus validateOnClasspath()", "signatureAfterChange": " protected IStatus validateOnClasspath()", "diff": ["-\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);\t", "+\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fae7982ed6ec62c4de10ca00f3cfaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "10602e047e367cd079244f747e70d9745d54ecf5", "commitAfterChange": "a7966be35d90fbccc28cc69c2a68d5da1f8603bb", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void fullBuild(String projectName)", "signatureAfterChange": " \tpublic void fullBuild(String projectName)", "diff": ["-\t\twaitForAutoBuild();", "-\t\tfWasBuilt = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0df841b548498ee8819046d22b1fa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic void tagAsHavingErrors()", "signatureAfterChange": "  \tpublic void tagAsHavingErrors()", "diff": ["-", "-\t\tif (shouldShutup()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a163804caf1f6c71076565c316893d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate IPackageFragmentRoot getJarPkgFragmentRoot( \t\tIPath jarPath, \t\tObject target, \t\tIJavaProject[] projects)", "signatureAfterChange": " \t \tprivate IPackageFragmentRoot getJarPkgFragmentRoot( \t\tIPath jarPath, \t\tObject target, \t\tIJavaProject[] projects)", "diff": ["-\t\t\t\tIClasspathEntry[] classpathEntries= javaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\tIClasspathEntry[] classpathEntries= javaProject.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a25b9f354e979dbf4a2a60e6cefa7c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected boolean internalRecordNullityMismatch(Expression expression, int nullStatus, TypeBinding expectedType, int checkType)", "signatureAfterChange": " protected boolean internalRecordNullityMismatch(Expression expression, TypeBinding providedType, int nullStatus, TypeBinding expectedType, int checkType)", "diff": ["-protected boolean internalRecordNullityMismatch(Expression expression, int nullStatus, TypeBinding expectedType, int checkType) {", "+protected boolean internalRecordNullityMismatch(Expression expression, TypeBinding providedType, int nullStatus, TypeBinding expectedType, int checkType) {", "-\t\trecordExpectedType(expectedType, this.nullCount);", "+\t\trecordProvidedExpectedTypes(providedType, expectedType, this.nullCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a40ea618e58ca8e5e9f6adf27667f6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test$InTypeName() throws JavaModelException", "signatureAfterChange": " \tpublic void test$InTypeName() throws JavaModelException", "diff": ["+\t\tenv.removeProject(projectPath1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7bfaa16f0cf9d4ecafb02a84d93c9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "271111afe31b0fe18fd45b364ad4d26653cb3b0c", "commitAfterChange": "865a2729990a2ae736e7ffd8626234177de33631", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\tthis.collection.computeConversion(scope, collectionType, collectionType);", "+\t\t\t\t\t// add #array secret variable (of collection type)", "+\t\t\t\t\tthis.collectionVariable = new LocalVariableBinding(SecretCollectionVariableName, collectionType, AccDefault, false);", "+\t\t\t\t\tscope.addLocalVariable(this.collectionVariable);", "+\t\t\t\t\tthis.collectionVariable.setConstant(NotAConstant); // not inlinable", "-\t\t\t// add #array secret variable (of collection type)", "-\t\t\tthis.collectionVariable = new LocalVariableBinding(SecretCollectionVariableName, collectionType, AccDefault, false);", "-\t\t\tscope.addLocalVariable(this.collectionVariable);", "-\t\t\tthis.collectionVariable.setConstant(NotAConstant); // not inlinable"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a8c3e8c919b554b265d70a08ba5c7fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "763e42ee77f843bf78751f85365c5a74eb47696c", "commitAfterChange": "525a282931680472e1c4e0ea3a9d163e6052ec36", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public boolean execute()", "signatureAfterChange": "\r public boolean execute()", "diff": ["-\t\t\t\tmanager.add((IFile)value);\r", "+\t\t\t\tmanager.add((IFile)value, this.project);\r", "-\t\t\t\tmanager.remove(name, project);\r", "+\t\t\t\tmanager.remove(name, this.project);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac0f8729f70ebd9fd17f063fd5e1b40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DeleteTests.java", "commitBeforeChange": "e7fbe3d2e46c3f4c5a40be9178ef6e8a36680f90", "commitAfterChange": "01f17876d50bd632100cd19774bf74ad112ea3f6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testDeleteCompilationUnit3() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testDeleteCompilationUnit3() throws CoreException", "diff": ["-public void testDeleteCompilationUnit3() throws JavaModelException, CoreException, IOException {", "-\tcreateFile(", "-\t\t\"P/X.java\",", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tfinal ICompilationUnit cu = getCompilationUnit(\"P/X.java\");", "-\t", "-\t// force the cu to be opened", "-\tcu.open(null);", "-\t", "+public void testDeleteCompilationUnit3() throws CoreException {", "+\t\tcreateFile(", "+\t\t\t\"P/X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tfinal ICompilationUnit cu = getCompilationUnit(\"P/X.java\");", "+\t\t", "+\t\t// force the cu to be opened", "+\t\tcu.open(null);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac8c2f1487b391771a3351a44db3e4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testWorkingCopy07() throws CoreException", "signatureAfterChange": " public void testWorkingCopy07() throws CoreException", "diff": ["-\tthis.workingCopy = clazz.becomeWorkingCopy(null/*no problem requestor*/, owner, null/*no progress*/);", "+\tthis.workingCopy = clazz.getWorkingCopy(owner, null/*no progress*/);", "-\t\t\"public class X {\\n\" + ", "+\t\t\"public class X {\\n\" +", "-\t\t\"Unexpected children\", ", "-\t\t\"[Working copy] X.class\\n\" + ", "-\t\t\"  package workingcopy\\n\" + ", "-\t\t\"  class X\\n\" + ", "+\t\t\"Unexpected children\",", "+\t\t\"[Working copy] X.class\\n\" +", "+\t\t\"  package workingcopy\\n\" +", "+\t\t\"  class X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad4eb1a77dd8b9fd6af9b591dc09139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void test0161() throws JavaModelException", "signatureAfterChange": " \tpublic void test0161() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae31e602f0c45121702e992f96e1832", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 310, "signatureBeforeChange": " \tpublic void test0308() throws JavaModelException", "signatureAfterChange": " \tpublic void test0308() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aeea016a976ce2874a76eb3587d908c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "cbf4d8b0c602d0860355a0bb315f58708fa257d2", "commitAfterChange": "0d8c4f28f9db6373751aa6d7cffbf4e0fcb51948", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void addTypeReference(char[] typeName)", "signatureAfterChange": " public void addTypeReference(char[] typeName)", "diff": ["-}", "-public void addTypeReference(char[] typeName){", "-", "-\tthis.output.addRef(CharOperation.concat(TYPE_REF, CharOperation.lastSegment(typeName, '.')));", "-}", "+public void addTypeReference(char[] typeName) {", "+\tthis.output.addRef(TypeReferencePattern.createReference(CharOperation.lastSegment(typeName, '.')));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b02ab16489f94638ff0c152429ecabf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void exitClass(int declarationEnd)", "signatureAfterChange": " public void exitClass(int declarationEnd)", "diff": ["- */", "+\texitType(declarationEnd);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b168236d2a84267b0add046aba1bbf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tint computeRelevanceForRestrictions(boolean hasRestrictedAccess)", "signatureAfterChange": " \tint computeRelevanceForRestrictions(int accessRuleKind)", "diff": ["-\tint computeRelevanceForRestrictions(boolean hasRestrictedAccess) {", "-\t\tif(!hasRestrictedAccess) {", "+\tint computeRelevanceForRestrictions(int accessRuleKind) {", "+\t\tif(accessRuleKind == IAccessRule.K_ACCESSIBLE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b474645c74b1cb07f08bbabff595773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptPlugin.java", "commitBeforeChange": "67568cf7908374a12b930ce4d634e4a484a346ae", "commitAfterChange": "7c614d1e063fcf9f7927d45e5d481818530396ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void stop(BundleContext context) throws Exception", "signatureAfterChange": "  \tpublic void stop(BundleContext context) throws Exception", "diff": ["+", "+\t\t// unregister debug options listener", "+\t\tdebugRegistration.unregister();", "+\t\tdebugRegistration = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b4e2fa3dc6f2bf555a98496435eed77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchParticipantTests.java", "commitBeforeChange": "fd0504187710664987bccb5815b9698ab298b089", "commitAfterChange": "70d42608bed3150dd9a40e8b285f6ced849887c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprotected void setUp() throws Exception", "signatureAfterChange": "  \tprotected void setUp() throws Exception", "diff": ["-\t\tif (this.restart) {", "-\t\t\tsimulateRestart();", "-\t\t\tthis.restart = false;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b512ab662993a9c2eb09d8df7eeef69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 680, "methodNumberAfterChange": 680, "signatureBeforeChange": " public void testDeprecationCheck11() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck11() throws JavaModelException", "diff": ["-\t\t\t\t\"bar1[FIELD_REF]{bar1, Ldeprecation.Test;, I, bar1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"bar2[FIELD_REF]{bar2, Ldeprecation.Test;, I, bar2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"bar1[FIELD_REF]{bar1, Ldeprecation.Test;, I, bar1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"bar2[FIELD_REF]{bar2, Ldeprecation.Test;, I, bar2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b66ae39bd2834547eafa694e30d22f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 565, "methodNumberAfterChange": 565, "signatureBeforeChange": " \tpublic void test546()", "signatureAfterChange": " \tpublic void test546()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(options);", "+ \t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(options);", "+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b970a0edf84ae3fc939cca8e6663840", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "252a053aebccd2d3a93400ae4c9f1b4e28158727", "commitAfterChange": "272d89e2710b1b25c157dda1019ac9d84fa9215b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t\t \t\tSortMultipleFieldDeclaration(SortFieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t\t \t\tSortMultipleFieldDeclaration(SortFieldDeclaration fieldDeclaration)", "diff": ["+\t\t\tfieldDeclaration.sourceEnd = fieldDeclaration.previousSourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ba12e46613b98b06de5a473b26f2207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic List fragments()", "signatureAfterChange": "  \tpublic List fragments()", "diff": ["-\t\treturn variableDeclarationFragments;", "+\t\treturn this.variableDeclarationFragments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bdcad19e23f93963ccf1c3f764da671", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": " \tpublic void test0578() throws JavaModelException", "signatureAfterChange": " \tpublic void test0578() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3ef277e21d0c24d3608a549108db40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 301, "signatureBeforeChange": " \tpublic void test0299() throws JavaModelException", "signatureAfterChange": " \tpublic void test0299() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4fe84a2b98ebfaa659db3ee21e9890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "56830c17e66457aea8be20b8f54387cc72e1cce5", "commitAfterChange": "eb1ad230c9c491b2e0477a9cf9abc1e6e195f535", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void traverse( \t\tIAbstractSyntaxTreeVisitor visitor, \t\tCompilationUnitScope scope)", "signatureAfterChange": "  \tpublic void traverse( \t\tIAbstractSyntaxTreeVisitor visitor, \t\tCompilationUnitScope scope)", "diff": ["+\t\t\t\tif (currentPackage != null) {", "+\t\t\t\t\tcurrentPackage.traverse(visitor, scope);", "+\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < importLength; i++)", "+\t\t\t\t\tfor (int i = 0; i < importLength; i++) {", "+\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < typesLength; i++)", "+\t\t\t\t\tfor (int i = 0; i < typesLength; i++) {", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5894ad0d2d10c457e4b35404bf6bee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 51, "signatureBeforeChange": " public final boolean isFinal()", "signatureAfterChange": " public final boolean isFinal()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccFinal) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccFinal) != 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5e8e04a6108e515b02886f15c2ffe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "4cb58ab533c79220136a132032afc1404604a700", "commitAfterChange": "c6eb7c253f30ad97be4157d7b386bdebd6f05934", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic synchronized IFolder getGeneratedSourceFolder()", "signatureAfterChange": " \tpublic synchronized IFolder getGeneratedSourceFolder()", "diff": ["-\t\tif ( _generatedSourceFolder == null)", "-\t\t{", "+\t\t//", "+\t\t// don't set _generatedSourceFolder in here, let that happen in ", "+\t\t// ensureGeneratedSourceFolder. we use a non-null _generatedSourceFolder ", "+\t\t// as an indicator that as an indicator that the folder has been created", "+\t\t// and added to the project's source path.", "+\t\t//", "+\t\t\t", "+\t\tif ( _generatedSourceFolder != null)", "+\t\t\treturn _generatedSourceFolder;", "+\t\telse", "-\t\t\t_generatedSourceFolder = _project.getFolder( GENERATED_SOURCE_FOLDER_NAME );", "-\t\t}", "-", "-\t\treturn _generatedSourceFolder;", "+\t\t\treturn _project.getFolder( _generatedSourceFolderName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c69cabf2bd25a7d784ebcf12fe8685a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void test0006() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0006() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6c02d3e4fc8ec2c4990b2cf532c6d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void test060()", "signatureAfterChange": " \tpublic void test060()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c961aabe53e2e084259d1429f7f9e0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public MethodBinding getExactConstructor(TypeBinding[] argumentTypes)", "signatureAfterChange": " public MethodBinding getExactConstructor(TypeBinding[] argumentTypes)", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c98435358b7750492b9752f9b88b503", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic void test0516() throws JavaModelException", "signatureAfterChange": " \tpublic void test0516() throws JavaModelException", "diff": ["-\t\tassertNotNull(\"No comments\", compilationUnit.getCommentTable());", "-\t\tassertEquals(\"Wrong size\", 3, compilationUnit.getCommentTable().length);", "+\t\tassertNotNull(\"No comments\", compilationUnit.getCommentList());", "+\t\tassertEquals(\"Wrong size\", 3, compilationUnit.getCommentList().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9847d797134c52a9ebf783e8e6a2e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclarationStatement.java", "commitBeforeChange": "84bab690fce0d07b753bfc05c56b8e56d168a1a6", "commitAfterChange": "72404957161b9a06b0beff261255d6fcbe542913", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeDeclaration getTypeDeclaration()", "signatureAfterChange": "  \tpublic TypeDeclaration getTypeDeclaration()", "diff": ["-\t// TODO (jeem) When JLS3 support is complete (post 3.0) - deprecated In the JLS3 API, this method is replaced by <code>getDeclaration</code>, which returns <code>AbstractTypeDeclaration</code> instead of <code>TypeDeclaration</code>.", "-\t    supportedOnlyIn2();", "+\t\treturn internalGetTypeDeclaration();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca3df888c90adba2edddaf26022ab49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 562, "methodNumberAfterChange": 565, "signatureBeforeChange": " \tpublic void test527b()", "signatureAfterChange": " \tpublic void test527b()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cab19c95d20a08985fb59960363dbfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "commitAfterChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["-\t\t\t}", "-\t\t\tif (this.javadocParser.notNull) {", "-\t\t\t\tcheckAndSetModifiers(ExtraCompilerModifiers.AccNotNull);", "-\t\t\t}", "-\t\t\tif (this.javadocParser.nullable) { // no else on purpose", "-\t\t\t\tcheckAndSetModifiers(ExtraCompilerModifiers.AccNullable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cafd8f077696df07eba45d0a4bf5163", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void test0035() throws JavaModelException", "signatureAfterChange": " \tpublic void test0035() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cb3dbc50b9ac0dab5b6fde34d748603", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test0053() throws JavaModelException", "signatureAfterChange": " \tpublic void test0053() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ccd7240aa8db8e9bfd3addaa81ee3da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": " \tpublic void test0220() throws JavaModelException", "signatureAfterChange": " \tpublic void test0220() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cda9c2e4c5c4e151ff71610181025c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 575, "methodNumberAfterChange": 575, "signatureBeforeChange": " \tpublic void test556()", "signatureAfterChange": " \tpublic void test556()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cdeb23bfeeeeb7e2352f79ae4736d09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic void test0503c() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503c() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf3aff0c3a9235bd51e410aa43e95d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeLiteral.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfb4be47f81fb70528f5917ac2dee14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 372, "signatureBeforeChange": " \tpublic void test0370() throws JavaModelException", "signatureAfterChange": " \tpublic void test0370() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d007f08338613a6ef9e3833ff2fc555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " \tpublic void test0274() throws JavaModelException", "signatureAfterChange": " \tpublic void test0274() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d039052f5da35b93a486dac62209710", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST4_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 381, "signatureBeforeChange": " \tpublic void test0722() throws JavaModelException", "signatureAfterChange": " \tpublic void test0722() throws JavaModelException", "diff": ["-\t\t\t\tAST.JLS3,", "+\t\t\t\tAST.JLS3_INTERNAL,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d1933764636b603dd46303872410d0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 240, "signatureBeforeChange": "  \tpublic void test204()", "signatureAfterChange": "  \tpublic void test204()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d1e651c2134fd081704a865bb579482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List imports()", "signatureAfterChange": "  \tpublic List imports()", "diff": ["-\t\treturn imports;", "+\t\treturn this.imports;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2b439ba9018718fbf0768b671074e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "7cfd16cce02bf6c15cc69b5ed56b855234dd7ed5", "commitAfterChange": "95a3577e20e21c393d791bf9201b4e713942cf20", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void test105()", "signatureAfterChange": " public void test105()", "diff": ["-\t\t\"  {\\n\" +", "-\t\t\"  }\\n\" +", "-\t\t\"  {\\n\" +", "-\t\t\"  }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d388757ac22b28b6fc20a0605e52396", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \t\tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": "\r \t\tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\t\tAnnotation[] annotations = fieldDeclaration.annotations;\r", "-\t\t\tthis.primaryAnnotations = annotations;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6b1faebbc998ef02b2aa504df05b41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic ExpressionMethodReference newExpressionMethodReference(Expression expression, SimpleName name)", "signatureAfterChange": " \tpublic ExpressionMethodReference newExpressionMethodReference()", "diff": ["-\tpublic ExpressionMethodReference newExpressionMethodReference(Expression expression, SimpleName name) {", "+\tpublic ExpressionMethodReference newExpressionMethodReference() {", "-\t\tresult.setExpression(expression);", "-\t\tresult.setName(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6d4a3f2528e4a0b57b42fb7b55f0ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "223ac176333d2fadca381dedcd267fe1a5e5fa31", "commitAfterChange": "908f55d6ba77993f6a6683ec18032e11ce9fef34", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " protected void consumeInstanceOfExpression()", "signatureAfterChange": " protected void consumeInstanceOfExpression()", "diff": ["+\t// to handle https://bugs.eclipse.org/bugs/show_bug.cgi?id=261534", "+\tif (topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_IF_AND_RIGHT_PAREN) {", "+\t\tpushOnElementStack(K_BETWEEN_INSTANCEOF_AND_RPAREN, IF, this.expressionStack[this.expressionPtr]);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6e9e0022097f2ace4e4fba592445b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "7dfd6fd26982b29a78f21f34e409b8e0ced9dd05", "commitAfterChange": "95427331bb49c7a61529453199fb23bbc6427400", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " private ICompilationUnit[] getWorkingCopies()", "signatureAfterChange": " private ICompilationUnit[] getWorkingCopies()", "diff": ["-\t\t\t\t\t|| !copy.isBasedOn(copy.getResource())) {", "+\t\t\t\t\t|| copy.hasResourceChanged()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d770aade6cdecee4fe3f8cee1853a64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/inherited/InheritedAnnoProc.java", "commitBeforeChange": "bc3154a88622fd1fe4ab2af9cb2ca0fdb63f2ca8", "commitAfterChange": "328b96ccc83cc05344fcf5e229f60ad26e9b1961", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t\treturn false;", "+\t\t\t// temporarily disabled", "+\t\t\t// return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7ac1e072ed4a9a6993e41bed05bf24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "signatureAfterChange": "  void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding)", "diff": ["+\tif (this.environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+// \t\tFIXME(stephan): the following code could be used as a stop-gap measure to hook type annotation tagBits into our existing analysis:", "+//\t\tfieldBinding.tagBits |= (fieldBinding.type.tagBits & TagBits.AnnotationNullMASK);", "+\t\treturn; // not using fieldBinding.tagBits when we have type annotations.", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7f72b03a3d09b3f874d92e755f75dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 216, "signatureBeforeChange": " \tpublic void test0214() throws JavaModelException", "signatureAfterChange": " \tpublic void test0214() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d869534a17efece9282fb0b2e87ef72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " \tpublic void test0244() throws JavaModelException", "signatureAfterChange": " \tpublic void test0244() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6da49aa89af9b05d1ba1e7ac68bfe840", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "033291a6d478e99ae6be2de7dfd3b9c5883c00b3", "commitAfterChange": "eeb96daf24c4db27bdb24d91e7864411a9c30223", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "signatureAfterChange": "\r \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "diff": ["-\t\t\t\t\t\tif (packageFragment.exists())\r", "-\t\t\t\t\t\t\tresult[resultLength++] = packageFragment;\r", "+\t\t\t\t\t\tresult[resultLength++] = packageFragment;\r", "-\t\t\t// Return only fragments that exists\r", "-\t\t\t\t\tif (packageFragment.exists())\r", "-\t\t\t\t\t\tresult[resultLength++] = packageFragment;\r", "+\t\t\t\t\tresult[resultLength++] = packageFragment;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd08cc82cde613419d6b2d1da9da40f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testPerfNameLookupFindKnownType() throws CoreException", "signatureAfterChange": " public void testPerfNameLookupFindKnownType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de028c3143b56bb14ddb2b537358771", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "5ec4215ec4f52f55dcb6e314c5f755ceba34fff6", "commitAfterChange": "5a4580d346b40161405692269366aba5f28266bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "signatureAfterChange": "\r public void build(boolean computeSubtypes) throws JavaModelException, CoreException", "diff": ["-\tif (computeSubtypes) {\r", "-\t\tString[] allPossibleSubtypes = this.determinePossibleSubTypes();\r", "-\t\tif (allPossibleSubtypes != null) {\r", "-\t\t\tthis.hierarchy.initialize(allPossibleSubtypes.length);\r", "-\t\t\tbuildFromPotentialSubtypes(allPossibleSubtypes);\r", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "+\ttry {\r", "+\t\t// optimize access to zip files while building hierarchy\r", "+\t\tmanager.cacheZipFiles();\r", "+\t\t\t\t\r", "+\t\tif (computeSubtypes) {\r", "+\t\t\tString[] allPossibleSubtypes = this.determinePossibleSubTypes();\r", "+\t\t\tif (allPossibleSubtypes != null) {\r", "+\t\t\t\tthis.hierarchy.initialize(allPossibleSubtypes.length);\r", "+\t\t\t\tbuildFromPotentialSubtypes(allPossibleSubtypes);\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tthis.hierarchy.initialize(1);\r", "+\t\t\tthis.buildSupertypes();\r", "-\t} else {\r", "-\t\tthis.hierarchy.initialize(1);\r", "-\t\tthis.buildSupertypes();\r", "+\t} finally {\r", "+\t\tmanager.flushZipFiles();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de2d5e4a3bf7a97bc3316b93ee23576", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "b8c2347031edf431b74ee176b67b65bece3e7d69", "commitAfterChange": "bafbb633d88463daeda3b6346c0ba869c26d4bef", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tbinding,", "+\t\t\t\t\t\t\t(ReferenceBinding) binding,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de50524e8897919432d17f846c38399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "5121c9e56fe5f00b9263f63c8225d577bc580b73", "commitAfterChange": "ff119e6fb7d599c80d7b7bf4e0ea59e3938447d5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  protected void findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "signatureAfterChange": "  protected void findSourceFiles(IResourceDelta sourceDelta, ClasspathMultiDirectory md, int segmentCount) throws CoreException", "diff": ["-\tif (md.binaryFolder.equals(resource)) return; // skip nested output folder when the project is a source folder", "-\t\tcase IResource.PROJECT :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de5b23409576d94854354ec9df0dede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateReceiver(CodeStream codeStream)", "signatureAfterChange": " public void generateReceiver(CodeStream codeStream)", "diff": ["-\tif (delegateThis != null) {", "-\t\tcodeStream.getfield(delegateThis); // delegated field access", "+\tif (this.delegateThis != null) {", "+\t\tcodeStream.getfield(this.delegateThis); // delegated field access"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de997388c9fc0803a8015a49fd59077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic void test0096() throws JavaModelException", "signatureAfterChange": " \tpublic void test0096() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dec12d435aa8812bcb8ab86751a20d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " \tpublic void test0518() throws JavaModelException", "signatureAfterChange": " \tpublic void test0518() throws JavaModelException", "diff": ["-\t\tassertNotNull(\"No comments\", compilationUnit.getCommentTable());", "-\t\tassertEquals(\"Wrong size\", 3, compilationUnit.getCommentTable().length);", "+\t\tassertNotNull(\"No comments\", compilationUnit.getCommentList());", "+\t\tassertEquals(\"Wrong size\", 3, compilationUnit.getCommentList().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df3ab57764cb453185a751e57cfa8f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["+\tif (this.hasTypeAnnotations())", "+\t\treturn annotatedDebugName() + \" (local)\"; //$NON-NLS-1$", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e09158e54f9b12260297bc224633fd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void test0018() throws JavaModelException", "signatureAfterChange": " \tpublic void test0018() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e094f9fc57bdaa4bfccb9b94b828ecc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 375, "signatureBeforeChange": " \tpublic void test0717() throws JavaModelException", "signatureAfterChange": " \tpublic void test0717() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2b5dc45db79243713787a0379be39d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "41800ceef1e22df640004021a2ad024169ee7b90", "commitAfterChange": "1a73dcb985d562a276db9afb81d6d46ae1c7e093", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\tCompilationResult result = new CompilationResult(sourceTypes[0].getFileName(), 1, 1, 0);", "+\tCompilationResult compilationResult = new CompilationResult(sourceTypes[0].getFileName(), 1, 1, 0);", "-\t\t\tresult);", "+\t\t\tcompilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e919927ab88528ab6e98cbe75e21620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "b1452558bd50522b2bf4ab34c091ea5d019aa3a7", "commitAfterChange": "952a8f00712464f9940d368f1eba6708e04044a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public RecoveredElement add(FieldDeclaration newFieldDeclaration, int bracketBalance)", "signatureAfterChange": "\r public RecoveredElement add(FieldDeclaration newFieldDeclaration, int bracketBalance)", "diff": ["-\t\tthis.updateSourceEndIfNecessary(this.previousAvailableLineEnd(newFieldDeclaration.declarationSourceStart - 1));\r", "-\t\treturn this.parent.add(newFieldDeclaration, bracketBalance);\r", "+\t\tif (this.parent == null) {\r", "+\t\t\treturn this; // ignore\r", "+\t\t} else {\r", "+\t\t\tthis.updateSourceEndIfNecessary(this.previousAvailableLineEnd(newFieldDeclaration.declarationSourceStart - 1));\r", "+\t\t\treturn this.parent.add(newFieldDeclaration, bracketBalance);\r", "+\t\t}\r", "-\t\treturn this.parent.add(newFieldDeclaration, bracketBalance);\r", "+\t\tif (this.parent == null) {\r", "+\t\t\treturn this; // ignore\r", "+\t\t} else {\r", "+\t\t\treturn this.parent.add(newFieldDeclaration, bracketBalance);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9c92c3dc57b0bde12c54304fcca0f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 201, "signatureBeforeChange": " \tpublic void test0199() throws JavaModelException", "signatureAfterChange": " \tpublic void test0199() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ea1d5f5ace28aa44ccd163be8797ffa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "2e3b506bd16c2dfca1b01615ff44e6bfc5c42dab", "commitAfterChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public  final boolean atEnd()", "signatureAfterChange": "  public  final boolean atEnd()", "diff": ["-\treturn source.length == currentPosition;", "+\treturn this.source.length == this.currentPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec6e5bb0e85581b9a019bbe796919b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void test0020() throws JavaModelException", "signatureAfterChange": " \tpublic void test0020() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec75dd4e1c31ec731d7d6a1de35a4fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": " \tpublic void test0696() throws JavaModelException", "signatureAfterChange": " \tpublic void test0696() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec8f76030736930b14583e1ec2d2156", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 336, "signatureBeforeChange": " \tpublic void test0688() throws JavaModelException", "signatureAfterChange": " \tpublic void test0688() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed682b4c2b942813f01c7e9756c57ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "  public void testBug424637_comment3()", "signatureAfterChange": "  public void testBug424637_comment3()", "diff": ["-\trunConformTest(", "+\trunConformTestWithLibs(", "-\t\t\t\"  @SuppressWarnings(\\\"unused\\\") public static void main(String[] argv) {\\n\" + ", "+\t\t\t\"  public static void main(String[] argv) {\\n\" + ", "-\t\t});", "+\t\t},", "+\t\tnull,", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f02b1d32f42e960e45b86e7607981f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 346, "methodNumberAfterChange": 349, "signatureBeforeChange": "  \tpublic void test313()", "signatureAfterChange": "  \tpublic void test313()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f02dc84f5f4259b40cb0e09de78898e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "605463bb98397b59c78b7fc56ee33e7e22fd8367", "commitAfterChange": "7428bd3b18a16b1860e6a1a28fbc6cd63967fdc6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void printComment()", "signatureAfterChange": " \tpublic void printComment()", "diff": ["-\t\t\t\t\t\tif (this.formatJavadocComment) {", "+\t\t\t\t\t\tif (includesJavadocComments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f55c5a5d27ff70f2fa728f879429a68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/Indents.java", "commitBeforeChange": "3c5f4a72fa40d161c5df0c986d4c60e32d52f863", "commitAfterChange": "98204916425a6241634af08472ba583f090f0116", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, String newIndent)", "signatureAfterChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, int indentWidth, String newIndent)", "diff": ["-\tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, String newIndent) {", "+\tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, int indentWidth, String newIndent) {", "-\t\t\t\tint length= Indents.computeIndentLength(line, sourceIndentLevel, tabWidth);", "+\t\t\t\tint length= Indents.computeIndentLength(line, sourceIndentLevel, tabWidth, indentWidth);", "-\t\t\t\t\tlength= Indents.computeIndent(line, tabWidth);", "+\t\t\t\t\tlength= Indents.computeIndentUnits(line, tabWidth, indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f6beee2c71eb0dd682973629493854f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 332, "methodNumberAfterChange": 332, "signatureBeforeChange": " \tpublic void test0330() throws JavaModelException", "signatureAfterChange": " \tpublic void test0330() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f7767fdbb00e9f41b140b7bb2039726", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "7e84ddff8020699085c19f62a855c62b5f709c81", "commitAfterChange": "226043f9dd3d1e9322a49e57d09a88a325e9c26a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tfinal void preReplaceChild(ASTNode oldChild, ASTNode newChild, ChildPropertyDescriptor property)", "signatureAfterChange": "  \tfinal void preReplaceChild(ASTNode oldChild, ASTNode newChild, ChildPropertyDescriptor property)", "diff": ["+\t\t} else {", "+\t\t\tthis.ast.preAddChildEvent(this, newChild, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f856ab78d8bf2acc85534dd9152bebd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "aee2ac8296aa79245cc75711562bd6a00b176447", "commitAfterChange": "315ce9a011cee567be6f07062a1610fb2e8116d3", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tprotected void runOperation(JavaModelOperation operation, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected void runOperation(JavaModelOperation operation, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tthis.getJavaModel().getWorkspace().run(operation, monitor);", "+\t\t\t\tResourcesPlugin.getWorkspace().run(operation, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa0f67886afd0129eb79fbe4f88879e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 198, "methodNumberAfterChange": 198, "signatureBeforeChange": " \tpublic void test0567() throws JavaModelException", "signatureAfterChange": " \tpublic void test0567() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa50f1ad1b0e27149c808113fc02f88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic void test0491() throws JavaModelException", "signatureAfterChange": " \tpublic void test0491() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fdb9c102dbef5561a3e0826a8976e37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public final void anewarray(TypeBinding typeBinding)", "signatureAfterChange": " public final void anewarray(TypeBinding typeBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tanewarray: \" + typeBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ff4007d33f36b3828a939fe390bde3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c544e8aca3ff7f9d6886fd7bcbef9ea930f61f35", "commitAfterChange": "8afaaca5766c1f6e8e3ebc65b81ef88fc8332ccf", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "diff": ["-\t\t\t\t\tif (elseStatement != null && (this.preferences.insert_new_line_before_else_in_if_statement || this.preferences.insert_new_line_in_control_statements)) {", "+\t\t\t\t\tif (elseStatement != null && (this.preferences.insert_new_line_before_else_in_if_statement)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffd972801e7fc6a4cdf9625bde2bf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testCorrespondingResourceNonExistingClassFile() throws CoreException", "signatureAfterChange": " public void testCorrespondingResourceNonExistingClassFile() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"lib\"}, \"bin\");", "-\t\tIClassFile classFile = this.getClassFile(\"/P/lib/X.class\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"lib\"}, \"bin\");", "+\t\tIClassFile classFile = getClassFile(\"/P/lib/X.class\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffe97949b347e6aba74bbfb4be5594b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic void test0068() throws JavaModelException", "signatureAfterChange": " \tpublic void test0068() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701dbb74d798afd398e708cfeee14a16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LabeledStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getLabel()", "signatureAfterChange": "  \tpublic SimpleName getLabel()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "702396cbf328c2efedaac97cec4c7e3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "df26c679ec361eae61785b6b440639645b574764", "commitAfterChange": "7e822612c4ed17c5f501a36859d0f7cd7f1c210d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic AddJarFileToIndex(IFile resource, IndexLocation indexFile, IndexManager manager)", "signatureAfterChange": "  \tpublic AddJarFileToIndex(IFile resource, IndexLocation indexFile, IndexManager manager)", "diff": ["+\t\tthis(resource, indexFile, manager, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "702d133089d6013a48a4fc1c0ad94a82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "e944f831810e143e8894d05428eb208a2cd78cce", "commitAfterChange": "45b2548f21c6553964603037785b1fef0bb3e0d3", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tprivate boolean isValidEdit(OptimizedReplaceEdit edit)", "signatureAfterChange": "  \tprivate boolean isValidEdit(OptimizedReplaceEdit edit)", "diff": ["-\t\t\tIRegion covering = getCoveringRegion(editOffset, (editOffset + editLength - 1));", "+\t\t\tIRegion covering = getCoveringAdaptedRegion(editOffset, (editOffset + editLength - 1));", "-\t\t\tIRegion starting = getRegionAt(editOffset + editLength);", "+\t\t\tIRegion starting = getAdaptedRegionAt(editOffset + editLength);", "-\t\tIRegion covering = getCoveringRegion(editOffset, editOffset);", "+\t\tIRegion covering = getCoveringAdaptedRegion(editOffset, editOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "703ebafbc67d3b80e1e1a2030a6f8735", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "40ff73b7071407f455ce167883a827d5d0333258", "commitAfterChange": "20607cc9da90bd1294c224d1eff6327bec9954ac", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " private void classHeaderExtendsOrImplements(boolean isInterface)", "signatureAfterChange": " private void classHeaderExtendsOrImplements(boolean isInterface)", "diff": ["-\t\t\t\t\t\tcompletionOnKeyword.canCompleteEmptyToken = true;", "-\t\t\t\t\t\tcompletionOnKeyword.canCompleteEmptyToken = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704e2935618f260025f0b2e7d67fefb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void deprecatedField(FieldBinding field, ASTNode location)", "signatureAfterChange": " public void deprecatedField(FieldBinding field, ASTNode location)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7077fc62adb33616ff33918db9f6a7b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static IClassFileReader createDefaultClassFileReader(String zipFileName, String zipEntryName, int decodingFlag)", "signatureAfterChange": " \tpublic static IClassFileReader createDefaultClassFileReader(String zipFileName, String zipEntryName, int decodingFlag)", "diff": ["-\t\t\tif (!zipEntryName.toLowerCase().endsWith(\".class\")) {//$NON-NLS-1$", "+\t\t\tif (!zipEntryName.toLowerCase().endsWith(SuffixConstants.SUFFIX_STRING_class)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70832e16f8aa9a45d65b4df2b37113aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7084c924f07d552da5706bf37ec1b3f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "3aa96cd0f03615774b8ac0aa730f24089285336b", "commitAfterChange": "a6bc9b89c0f99b3b1a760aa351e68b2be5cc2b5f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected IMarker[] getProblemsFor(IResource resource)", "signatureAfterChange": "\r \r protected IMarker[] getProblemsFor(IResource resource)", "diff": ["-\t} catch (CoreException e) {\r", "-//@PM THIS CODE SHOULD PROBABLY HANDLE THE CORE EXCEPTION LOCALLY ?\r", "-\t\tthrow internalException(e);\r", "-\t}\r", "+\t} catch (CoreException e) {} // assume there are no problems\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70851a72c3d56c8c3a7fcbc22e8e1aba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tif ((this.bits & IsMemberValueReference) != 0 && fieldBinding.id == methodScope.lastVisibleFieldID) {", "+\t\t\t\t\t\tif (methodScope.insideTypeAnnotation && fieldBinding.id == methodScope.lastVisibleFieldID) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f1612adeeffccb8dd7dce6cdaf89e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 455, "signatureBeforeChange": " \tpublic void test436()", "signatureAfterChange": " \tpublic void test436()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f3868596683b5ee2362cf8863efe90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "189e4902a8cd4c72cdcb57f23d61ddb627236e43", "commitAfterChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic String getTypeQualifiedName(char enclosingTypeSeparator, boolean showParameters) throws JavaModelException", "signatureAfterChange": "  \tpublic String getTypeQualifiedName(char enclosingTypeSeparator, boolean showParameters) throws JavaModelException", "diff": ["-\t\tString simpleName = this.name.length() == 0 ? Integer.toString(this.occurrenceCount) : this.name;", "+\t\tString simpleName = this.name.length() == 0 ? getOccurrenceCountSignature() : this.name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70ffcb8939cdb049b5111249b71b3bb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 375, "signatureBeforeChange": " \tpublic void test0373() throws JavaModelException", "signatureAfterChange": " \tpublic void test0373() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7121fcb5df4bc71c8fadaa2e8cf83359", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test0043() throws JavaModelException", "signatureAfterChange": " \tpublic void test0043() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7132ab20b3e54da2cc82429cc0ff3c70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "dbb21f9a082cc8b4fc9a756e4b7778384b3f408c", "commitAfterChange": "bbd2ac48b173a123c7419ce013244d878b152c22", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "  DefaultCodeFormatter codeFormatter()", "signatureAfterChange": "  DefaultCodeFormatter codeFormatter()", "diff": ["-\tDefaultCodeFormatterOptions preferences = DefaultCodeFormatterOptions.getEclipseDefaultSettings();", "-\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(preferences);", "+\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(this.preferences, getDefaultCompilerOptions());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713fa7fecafaabe9e670a111cea5ac88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "04fb6202efdc761094aeadbfae786f791930dbc9", "commitAfterChange": "574419ea1bfec3547ee209064f26cc8514bc0721", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": " public void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\t\tfilterWorkingCopies(this.workingCopies, pattern.focus, pattern.isPolymorphicSearch())", "+\t\t\tworkingCopiesThatCanSeeFocus(pattern.focus, pattern.isPolymorphicSearch())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7144b9396653d819b2a6567d6b3cf7cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": " \tpublic void test0157() throws JavaModelException", "signatureAfterChange": " \tpublic void test0157() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7153a5ee0d97a16e58f1f1b6d14470a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "3f131825dfbebcd2d9846517fd8419ae56311784", "commitAfterChange": "ede87229fe271e061ecd80820c468f7956351f61", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] warningOptionNames()", "signatureAfterChange": " \tpublic static String[] warningOptionNames()", "diff": ["-\t\t\tOPTION_ReportUnclosedCloseable,", "-\t\t\tOPTION_ReportPotentiallyUnclosedCloseable,", "-\t\t\tOPTION_ReportExplicitlyClosedAutoCloseable,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7157a763693e15bb31fecd0a5d91c8f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "commitAfterChange": "5570f0e247bd18a17332042e143b22a635cf26df", "methodNumberBeforeChange": 906, "methodNumberAfterChange": 906, "signatureBeforeChange": " public void test0886()", "signatureAfterChange": " public void test0886()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"\",", "-\t\tnull,", "-\t\ttrue,", "-\t\tnull,", "-\t\tcustomOptions,", "-\t\tnull/*no custom requestor*/);", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t//\tnull /* do not check compiler log */,", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\tnull /* do not check error string */,", "+\t\t// javac options", "+\t\tnew JavacTestOptions(\"-source 1.4\") /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7180eedd6c27ca3f74771f002b0ebdf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\t\tclasspath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\tclasspath = project.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71ab96ce75fc78785632aca2cfa1727e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "5c25bc24b238851bade1684c837193693f04d597", "commitAfterChange": "4af63c78a97854459ffdb3bdd8ea245bbfdb48a7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void assertAllTypes(String message, IJavaProject project, int waitingPolicy, IProgressMonitor progressMonitor, String expected) throws JavaModelException", "signatureAfterChange": " protected void assertAllTypes(String message, IJavaProject project, int waitingPolicy, IProgressMonitor progressMonitor, String expected) throws JavaModelException", "diff": ["-\t\tResourcesPlugin.getWorkspace(),", "-\t\tSearchPattern.R_PATTERN_MATCH,", "-\t\tfalse, // case insensitive", "+\t\tSearchPattern.R_PATTERN_MATCH, // case insensitive"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b28584a2e717baf5ce1b8e01e7495a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "7e3ae729940a65c5f5f03d0fb56637373c7bfc23", "commitAfterChange": "02cc64df4385bc61fb77b2d8dd1b8a5552aa0965", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testAddExtendsSourceType() throws JavaModelException, CoreException", "signatureAfterChange": " public void testAddExtendsSourceType1() throws CoreException", "diff": ["-public void testAddExtendsSourceType() throws JavaModelException, CoreException {", "+public void testAddExtendsSourceType1() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d69bab6c8e5adabf391c059eb37cdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void test0016() throws JavaModelException", "signatureAfterChange": " \tpublic void test0016() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71dcad5139ca8d396815fbf76faf6053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 343, "signatureBeforeChange": " \tpublic void test0695() throws JavaModelException", "signatureAfterChange": " \tpublic void test0695() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "720112108f5d51fc17d933139578e4ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 350, "signatureBeforeChange": " \tpublic void test0699() throws JavaModelException", "signatureAfterChange": " \tpublic void test0699() throws JavaModelException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7222d1ce4d88e875b741aabf3736f1a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "e94247ea6ac5ec863496bda9d3658e2dc349e6ab", "commitAfterChange": "9448736fbeb476ae8eacb15d6ea8788cf2db77a1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private String expectedFormattedSource(String source)", "signatureAfterChange": "  private String expectedFormattedSource(String source)", "diff": ["-\tDefaultCodeFormatter codeFormatter = codeFormatter();", "-\tScanner scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_4/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "-\tCompilationUnitDeclaration compilationUnitDeclaration = codeSnippetParsingUtil.parseCompilationUnit(source.toCharArray(), getDefaultCompilerOptions(), true);", "-\tscanner.setSource(source.toCharArray());", "-\tscanner.lineEnds = codeSnippetParsingUtil.recordedParsingInformation.lineEnds;", "-\tint[][] commentsPositions = compilationUnitDeclaration.comments;", "-\tint length = commentsPositions == null ? 0 : commentsPositions.length;", "-\tString[] formattedComments = new String[length];", "-\tfor (int i=0; i<length; i++) {", "-\t\tint[] positions = commentsPositions[i];", "-\t\tint commentKind = CodeFormatter.K_JAVA_DOC;", "-\t\tint commentStart = positions [0];", "-\t\tint commentEnd = positions [1];", "-\t\tif (commentEnd < 0) { // line or block comments have negative end position", "-\t\t\tcommentEnd = -commentEnd;", "-\t\t\tif (commentStart > 0) { // block comments have positive start position", "-\t\t\t\tcommentKind = CodeFormatter.K_MULTI_LINE_COMMENT;", "-\t\t\t} else {", "-\t\t\t\tcommentStart = -commentStart;", "-\t\t\t\tcommentKind = CodeFormatter.K_SINGLE_LINE_COMMENT;", "-\t\t\t}", "-\t\t}", "-\t\tint indentationLevel = getIndentationLevel(scanner, commentStart);", "-\t\tformattedComments[i] = runFormatter(codeFormatter, source.substring(commentStart, commentEnd), commentKind, indentationLevel, 0, commentEnd - commentStart, LINE_SEPARATOR);", "-\t}", "-\tSimpleDocument document = new SimpleDocument(source);", "-\tfor (int i=length-1; i>=0; i--) {", "-\t\tif (formattedComments[i] != null) {", "+\tboolean enableNewCommentFormatter = DefaultCodeFormatter.ENABLE_NEW_COMMENTS_FORMAT;", "+\ttry {", "+\t\tDefaultCodeFormatter.ENABLE_NEW_COMMENTS_FORMAT = false;", "+\t\tDefaultCodeFormatter codeFormatter = codeFormatter();", "+\t\tScanner scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_4/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "+\t\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "+\t\tCompilationUnitDeclaration compilationUnitDeclaration = codeSnippetParsingUtil.parseCompilationUnit(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tscanner.setSource(source.toCharArray());", "+\t\tscanner.lineEnds = codeSnippetParsingUtil.recordedParsingInformation.lineEnds;", "+\t\tint[][] commentsPositions = compilationUnitDeclaration.comments;", "+\t\tint length = commentsPositions == null ? 0 : commentsPositions.length;", "+\t\tString[] formattedComments = new String[length];", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tint commentKind = CodeFormatter.K_JAVA_DOC;", "-\t\t\t\tif (commentStart < 0) { // line comments have negative start position", "+\t\t\t\tif (commentStart > 0) { // block comments have positive start position", "+\t\t\t\t\tcommentKind = CodeFormatter.K_MULTI_LINE_COMMENT;", "+\t\t\t\t} else {", "+\t\t\t\t\tcommentKind = CodeFormatter.K_SINGLE_LINE_COMMENT;", "-\t\t\tdocument.replace(commentStart, commentEnd - commentStart, formattedComments[i]);", "+\t\t\tint indentationLevel = getIndentationLevel(scanner, commentStart);", "+\t\t\tformattedComments[i] = runFormatter(codeFormatter, source.substring(commentStart, commentEnd), commentKind, indentationLevel, 0, commentEnd - commentStart, LINE_SEPARATOR);", "+\t\tSimpleDocument document = new SimpleDocument(source);", "+\t\tfor (int i=length-1; i>=0; i--) {", "+\t\t\tif (formattedComments[i] != null) {", "+\t\t\t\tint[] positions = commentsPositions[i];", "+\t\t\t\tint commentStart = positions [0];", "+\t\t\t\tint commentEnd = positions [1];", "+\t\t\t\tif (commentEnd < 0) { // line or block comments have negative end position", "+\t\t\t\t\tcommentEnd = -commentEnd;", "+\t\t\t\t\tif (commentStart < 0) { // line comments have negative start position", "+\t\t\t\t\t\tcommentStart = -commentStart;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tdocument.replace(commentStart, commentEnd - commentStart, formattedComments[i]);", "+\t\t\t}", "+\t\t}", "+\t\tString newSource = document.get();", "+\t\tString oldResult = runFormatter(codeFormatter, newSource, CodeFormatter.K_COMPILATION_UNIT, 0, 0, newSource.length(), null);", "+\t\treturn oldResult == null ? newSource : oldResult;", "-\tString newSource = document.get();", "-\tString oldResult = runFormatter(codeFormatter, newSource, CodeFormatter.K_COMPILATION_UNIT, 0, 0, newSource.length(), null);", "-\treturn oldResult == null ? newSource : oldResult;", "+\tfinally {", "+\t\tDefaultCodeFormatter.ENABLE_NEW_COMMENTS_FORMAT = enableNewCommentFormatter;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725f64c1b48be00e10cb27e936d85dc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference.java", "commitBeforeChange": "c40d37b31933df685287603b7876ab2876472c95", "commitAfterChange": "3971d8f8a2e5e579f01de85b01589311701c58f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding internalResolveType(Scope scope)", "diff": ["+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=211054", "+\t\t\t\t// allow references to current package only. All other package references should be reported as invalid", "+\t\t\t\tif (scope.compilationUnitScope().fPackage != this.packageBinding) {", "+\t\t\t\t\tscope.problemReporter().javadocInvalidReference(this.sourceStart, this.sourceEnd);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72734af345c9dffb2d09f9819663f9d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " \tpublic void test0211() throws JavaModelException", "signatureAfterChange": " \tpublic void test0211() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7296303f04ccfab44892a661195eeeda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic IndexManager getIndexManager()", "signatureAfterChange": " \tpublic IndexManager getIndexManager()", "diff": ["-\t\treturn this.deltaProcessor.indexManager;", "+\t\treturn this.indexManager;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72cb3084af4fb41e672961a228c1e229", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public char[] getSuperclassName()", "signatureAfterChange": "\r public char[] getSuperclassName()", "diff": ["-\treturn superclassName;\r", "+\treturn this.superclassName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d2da21996b9f3ce7cb7fad9ad194ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 411, "signatureBeforeChange": " \tpublic void test393()", "signatureAfterChange": " \tpublic void test393()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72eb1a2a49f0d07779276eedd5f496d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ImportDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f1342fb500051d97d118cbf71c790b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ExpressionStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f89a8d80d7f7954bf8c7def7bd1f29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "8f1a95e5900cf1bf71049d8b9899635ac35610ff", "commitAfterChange": "7c0534e311ca23dad63801edecab8ecfaf54c055", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r \tpublic ContinueStatement convert(Continue statement)", "signatureAfterChange": "\r \r \tpublic ContinueStatement convert(Continue statement)", "diff": ["-\t\t\tcontinueStatement.setLabel(this.ast.newSimpleName(new String(statement.label)));\r", "+\t\t\tSimpleName name = this.ast.newSimpleName(new String(statement.label));\r", "+\t\t\tretrieveIdentifierAndSetPositions(statement.sourceStart, statement.sourceEnd, name);\r", "+\t\t\tcontinueStatement.setLabel(name);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730162cc568ebb94a6f79c7ea1eb65ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 397, "methodNumberAfterChange": 397, "signatureBeforeChange": " \tpublic void test0395() throws JavaModelException", "signatureAfterChange": " \tpublic void test0395() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7306c8b6fe0fe73cb05e88daf2e787cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void set(Map optionsMap)", "signatureAfterChange": "  \tpublic void set(Map optionsMap)", "diff": ["+\t\t\tthis.storeAnnotations = true;", "-\t\t\t\tthis.storeAnnotations = false;", "+\t\t\t\tif (!this.isAnnotationBasedNullAnalysisEnabled)", "+\t\t\t\t\tthis.storeAnnotations = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7311ecd8e26fb9761be6e6465a44116b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic void test0007() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0007() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73211de2bd2020631f5407f13ab7c055", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "5e5824d7ea08d8d2e191da403b3a3e822daf1c06", "commitAfterChange": "ee5744d2ef3d1d3d807850f5af1a1524a1b6b71d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@BeforeClass \tpublic static void initializeJavaCompiler()", "signatureAfterChange": " \tpublic void testInitializeJavaCompiler()", "diff": ["-\t@BeforeClass", "-\tpublic static void initializeJavaCompiler() {", "+\t */", "+\tpublic void testInitializeJavaCompiler() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7327cf499eef195d73add0968b89f186", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\t\t\tNameLookup lookup = ((JavaProject) getJavaProject()).getNameLookup();", "+\t\t\tNameLookup lookup = ((JavaProject) getJavaProject()).newNameLookup(DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735003b509942cb18022dd8a6f63c335", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": " \tpublic void test0175() throws JavaModelException", "signatureAfterChange": " \tpublic void test0175() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735d83ee2ff4ef8918c72e5abe5959f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736653bb64c50b2d3177fe5299291527", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "2f5322fdab953564bb94640aef6b85bdf7bdfd2c", "commitAfterChange": "c06e332a4a8d96cbec68b65b824c43b3c28a59b1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testExternalJarChanged4() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged4() throws CoreException, IOException", "diff": ["+\t\twaitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739705ec7b9c6b17d98cd9cc095d260e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationExpression node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationExpression node)", "diff": ["-\t\trewriteNodeList(node, VariableDeclarationExpression.FRAGMENTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\trewriteNodeList(node, VariableDeclarationExpression.FRAGMENTS_PROPERTY, pos, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a9d6d69003e0c07d26134c2359e053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "ac8aee31f97e2c1940f8d6cadbe50fd220994724", "commitAfterChange": "f36b7aff05b621706a3d6dcd7b341e0eb0241032", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic boolean atConflictScenario(int token)", "signatureAfterChange": "  \tpublic boolean atConflictScenario(int token)", "diff": ["-\t\treturn this.lexStream.atConflictScenario(token);", "+\t\treturn (token == TokenNameLPAREN || (token == TokenNameLESS && !this.lexStream.awaitingColonColon()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b49aa896f1fd54909ffd45a35d193d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\treturn optionalExpression;", "+\t\treturn this.optionalExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b50c871982c8a6ed6ba106f4f44795", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif (((this.bits & ASTNode.DepthMASK) == 0) || (this.constant != Constant.NotAConstant)) {", "+\tif (((this.bits & ASTNode.DepthMASK) == 0 && (this.bits & ASTNode.IsCapturedOuterLocal) == 0) || (this.constant != Constant.NotAConstant)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ba981f8891b061b5a449a1e76d693e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  public void test047() throws JavaModelException", "signatureAfterChange": "  public void test047() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73c0528b78723a7f64abcd0dd127fdfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 516, "methodNumberAfterChange": 516, "signatureBeforeChange": "  \tpublic void test497()", "signatureAfterChange": "  \tpublic void test497()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73e0aef616e694f56e618724e71670ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe2.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\t \t \tpublic String getEmptyLines(int linesNumber)", "signatureAfterChange": "\t \t \tpublic String getEmptyLines(int linesNumber)", "diff": ["-\t\t\treturn EMPTY_STRING;", "+\t\t\treturn Util.EMPTY_STRING;", "-\t\t\t\treturn EMPTY_STRING;", "+\t\t\t\treturn Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74085d399629924fc98f547e4542c339", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "ee8099c3ec35bd16fde9c1edf1cbb0dd9d874457", "commitAfterChange": "6e96499a020636690c9b2250cb54a984e6ff9a77", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \tprivate void initFormatterCommentParser()", "signatureAfterChange": "  \tprivate void initFormatterCommentParser()", "diff": ["+\t\tthis.formatterCommentParser.parseHtmlTags = this.formatter.preferences.comment_format_html;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "744ce516aa3f04dfa5a04b6d7205986b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746059272fc5f20f83fcc3cf6dd04c22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "089badac3a8a0209e6db9e45831031dae9c203f2", "commitAfterChange": "ead8e814ab499b7622eb426e1befbcf339b11ce8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate FakedTrackingVariable(BlockScope scope, ASTNode location, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": " \tprivate FakedTrackingVariable(BlockScope scope, ASTNode location, FlowInfo flowInfo, int nullStatus)", "diff": ["-\t\tsuper(\"<unassigned Closeable value>\".toCharArray(), location.sourceStart, location.sourceEnd); //$NON-NLS-1$", "+\t\tsuper(UNASSIGNED_CLOSEABLE_NAME, location.sourceStart, location.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7464a4cfccebb3975a03cff67240845f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic String toString(int tab)", "signatureAfterChange": " \t \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "+", "+\t\tprintIndent(tab, output).append(label).append(\": \"); //$NON-NLS-1$", "+\t\tif (this.statement == null) ", "+\t\t\toutput.append(';');", "+\t\telse ", "+\t\t\tthis.statement.printStatement(0, output); ", "+\t\treturn output;", "+\t}", "-\t", "-\tpublic String toString(int tab) {", "-\t\tString s = tabString(tab);", "-\t\ts += new String(label) + \": \" + (this.statement == null ? \"; \" : this.statement.toString(0)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\treturn s;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746cb0556c1c2a0ab8e0f533d0dda091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public final int getAccessFlags()", "signatureAfterChange": " public final int getAccessFlags()", "diff": ["-\treturn modifiers & AccJustFlag;", "+\treturn modifiers & ExtraCompilerModifiers.AccJustFlag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7489a9a26947bc96917d4b9e3034b056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " public void test0197b() throws JavaModelException", "signatureAfterChange": " public void test0197b() throws JavaModelException", "diff": ["-    \t\t\"foo1[ANNOTATION_ATTRIBUTE_REF]{foo1, Ltest0197.ZZAnnot;, I, foo1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-            \"foo2[ANNOTATION_ATTRIBUTE_REF]{foo2, Ltest0197.ZZAnnot;, I, foo2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+    \t\t\"foo1[ANNOTATION_ATTRIBUTE_REF]{foo1, Ltest0197.ZZAnnot;, I, foo1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+            \"foo2[ANNOTATION_ATTRIBUTE_REF]{foo2, Ltest0197.ZZAnnot;, I, foo2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "748a69a73741937dde8752b7890c2e92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "749633ae4269e0ba6bffd68089759c51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 365, "signatureBeforeChange": " \tpublic void test0708() throws JavaModelException", "signatureAfterChange": " \tpublic void test0708() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a1d7017a0796e39a7c1909c84d2c6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRefParameter.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f12ffe16a81c62ec849b0d157ace0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic void test0503g() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503g() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f80e11f6b76af3bb1a81c75d3a4bfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "commitAfterChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public void generateOptimizedStringBufferCreation(BlockScope blockScope, CodeStream codeStream, int typeID)", "signatureAfterChange": "\r public void generateOptimizedStringBufferCreation(BlockScope blockScope, CodeStream codeStream, int typeID)", "diff": ["-\t\t\tcodeStream.recordPositionsFrom(pc, left);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, left.sourceStart);\r", "-\t\t\tcodeStream.recordPositionsFrom(pc, right);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, right.sourceStart);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "752c62937fc0ef0639d2db23cddb35ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 62, "signatureBeforeChange": " public final boolean isViewedAsDeprecated()", "signatureAfterChange": " public final boolean isViewedAsDeprecated()", "diff": ["-\treturn (modifiers & (ClassFileConstants.AccDeprecated | ExtraCompilerModifiers.AccDeprecatedImplicitly)) != 0;", "+\treturn (this.modifiers & (ClassFileConstants.AccDeprecated | ExtraCompilerModifiers.AccDeprecatedImplicitly)) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7558b5dd179df4a68e375ca796e9ea51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "133e081382658fdf4b2c93257a825d3355922192", "commitAfterChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic Expression enclosingInstance()", "signatureAfterChange": "  \tpublic Expression enclosingInstance()", "diff": ["-\t\treturn enclosingInstance;", "+\t\treturn this.enclosingInstance;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755c120fca6a65e1d4b7e3dc0f9e4c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["+ */\r", "+protected void executeOperation() throws JavaModelException {\r", "+\tbeginTask(Util.bind(\"operation.createUnitProgress\"/*nonNLS*/), 2);\r", "+\tJavaElementDelta delta = newJavaElementDelta();\r", "+\tICompilationUnit unit = getCompilationUnit();\r", "+\tIPackageFragment pkg = (IPackageFragment) getParentElement();\r", "+\tIContainer folder = (IContainer) pkg.getUnderlyingResource();\r", "+\tInputStream stream = new ByteArrayInputStream(BufferManager.stringToBytes(fSource));\r", "+\tworked(1);\r", "+\tcreateFile(folder, unit.getElementName(), stream, fForce);\r", "+\tworked(1);\r", "+\tfResultElements = new IJavaElement[] {getCompilationUnit()};\r", "+\tfor (int i = 0; i < fResultElements.length; i++) {\r", "+\t\tdelta.added(fResultElements[i]);\r", "-\t */\r", "-\tprotected void executeOperation() throws JavaModelException {\r", "-\t\tbeginTask(\"Creating a compilation unit...\", 2);\r", "-\t\tJavaElementDelta delta = newJavaElementDelta();\r", "-\t\tICompilationUnit unit = getCompilationUnit();\r", "-\t\tIPackageFragment pkg = (IPackageFragment) getParentElement();\r", "-\t\tIContainer folder = (IContainer) pkg.getUnderlyingResource();\r", "-\t\tInputStream stream =\r", "-\t\t\tnew ByteArrayInputStream(BufferManager.stringToBytes(fSource));\r", "-\t\tworked(1);\r", "-\t\tcreateFile(folder, unit.getElementName(), stream, fForce);\r", "-\t\tworked(1);\r", "-\t\tfResultElements = new IJavaElement[] { getCompilationUnit()};\r", "-\t\tfor (int i = 0; i < fResultElements.length; i++) {\r", "-\t\t\tdelta.added(fResultElements[i]);\r", "-\t\t}\r", "-\t\taddDelta(delta);\r", "-\t\tdone();\r", "+\taddDelta(delta);\r", "+\tdone();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75759af05a8875c4c70c07b9eb5ce7d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tSourceTypeBinding receiverType = classScope.referenceContext.binding;", "+\t\t\t\t\tReferenceBinding receiverType = classScope.enclosingReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757648966cdbcecf7f71071f06fab18b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "105e13630a8bb467bc36445e7061e963f615f79b", "commitAfterChange": "c76d746cb37ee26e445adfa9082cf0532abc2efb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tunit = CompilationUnitProblemFinder.process(workingCopy, contents, this.workingCopyOwner, problemRequestor, false/*don't cleanup cu*/, this.progressMonitor);", "+\t\t\t\t\t\t\tunit = CompilationUnitProblemFinder.process(workingCopy, contents, this.workingCopyOwner, problemRequestor, !this.createAST/*reset env if not creating AST*/, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75778f8c90575528d23258b14db81a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "29bba5ec8d05a9cd1832ad934d2530b41087b676", "commitAfterChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["-\t\t\t\t\tparentElement = createElement(scope.parent, elementPosition, unit, existingElements, knownScopes);", "-\t\t\t\t\tnewElement = new org.eclipse.jdt.internal.core.LambdaExpression((JavaElement) parentElement, (LambdaExpression) scope.referenceContext()).getMethod();", "-\t\t\t\t\tknownScopes.put(scope, newElement);", "-\t\t\t\t\treturn newElement;", "+\t\t\t\t\tLambdaExpression expression = (LambdaExpression) scope.referenceContext();", "+\t\t\t\t\tif (expression.binding != null && expression.binding.isValidBinding()) { // chain in lambda element only if resolved properly.", "+\t\t\t\t\t\tparentElement = createElement(scope.parent, elementPosition, unit, existingElements, knownScopes);", "+\t\t\t\t\t\tnewElement = new org.eclipse.jdt.internal.core.LambdaExpression((JavaElement) parentElement, expression).getMethod();", "+\t\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t\t\treturn newElement;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a812d5dca69da2395457d8e116c098", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 304, "signatureBeforeChange": "  \tpublic void test268()", "signatureAfterChange": "  \tpublic void test268()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75aef0bebc625eb9650d260e366c180e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected void setFirstWord() throws IOException", "signatureAfterChange": " \tprotected void setFirstWord()", "diff": ["-\tprotected void setFirstWord() throws IOException {", "+\tprotected void setFirstWord() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75b4facda259361251f9ebb0b9a8572a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": " \tpublic void test0184() throws JavaModelException", "signatureAfterChange": " \tpublic void test0184() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75b8c5396b53cdd30fee3fa4e3002faa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " File createDirectory(File parent, String name) throws IOException", "signatureAfterChange": " File createDirectory(File parent, String name)", "diff": ["-File createDirectory(File parent, String name) throws IOException {", "+File createDirectory(File parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75f03514b14eeb2191a1fc17c0536640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test0047() throws JavaModelException", "signatureAfterChange": " \tpublic void test0047() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fa87fc879f0b27151e9d7e9724707c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "3eb54501d04c06d548e0703970c7c1e0fb48a24c", "commitAfterChange": "c56ed3bd74492c5179e95d29b48fda6c6cba2ca8", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 345, "signatureBeforeChange": " public void _test449330() throws Exception", "signatureAfterChange": " public void test449330a() throws Exception", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=449330 - [1.6]Eclipse compiler doesn't compile annotations in class files", "-public void _test449330() throws Exception {", "-\tString[] testFiles = new String[] {", "-\t\t\"p/X.java\",", "-\t\t\"package p;\\n\" +", "-\t\t\"@java.lang.annotation.Target(value={java.lang.annotation.ElementType.TYPE})\\n\" +", "-\t\t\"@interface X { public java.lang.String name(); }\\n\",", "-\t\t\"p/package-info.java\",", "-\t\t\"@X(name=\\\"HELLO\\\")\\n\" +", "-\t\t\"package p;\\n\"", "-\t};", "-\tif (this.complianceLevel <= ClassFileConstants.JDK1_6) {", "-\t\tthis.runConformTest(testFiles, \"\");", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"p/package-info.class\", \"\", \"HELLO\");", "-\t} else {", "-\t\tthis.runNegativeTest(testFiles,", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in p\\\\package-info.java (at line 1)\\n\" +", "-\t\t\t\"\t@X(name=\\\"HELLO\\\")\\n\" +", "-\t\t\t\"\t^^\\n\" +", "-\t\t\t\"The annotation @X is disallowed for this location\\n\" +", "-\t\t\t\"----------\\n\");", "-}", "+//Retention Policy set to RUNTIME", "+public void test449330a() throws Exception {", "+\tString[] testFiles = new String[] {", "+\t\t\"p/X.java\",", "+\t\t\"package p;\\n\" +", "+\t\t\"@java.lang.annotation.Target(value={java.lang.annotation.ElementType.TYPE})\\n\" +", "+\t\t\"@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)\\n\" +", "+\t\t\"@interface X { public java.lang.String name(); }\\n\",", "+\t\t\"p/package-info.java\",", "+\t\t\"@X(name=\\\"HELLO\\\")\\n\" +", "+\t\t\"package p;\\n\"", "+\t};", "+\tif (this.complianceLevel <= ClassFileConstants.JDK1_6) {", "+\t\tthis.runConformTest(testFiles, \"\");", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"p/package-info.class\", \"\", \"HELLO\");", "+\t} else {", "+\t\tthis.runNegativeTest(testFiles,", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in p\\\\package-info.java (at line 1)\\n\" +", "+\t\t\t\"\t@X(name=\\\"HELLO\\\")\\n\" +", "+\t\t\t\"\t^^\\n\" +", "+\t\t\t\"The annotation @X is disallowed for this location\\n\" +", "+\t\t\t\"----------\\n\");", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "760767af7e3654d6ef14691b6ac4b364", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testCorrespondingResourceNonExistingPkgFragment() throws CoreException", "signatureAfterChange": " public void testCorrespondingResourceNonExistingPkgFragment() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tIPackageFragment pkg = this.getPackage(\"/P/src/nonExisting\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tIPackageFragment pkg = getPackage(\"/P/src/nonExisting\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7626404f9fcf61435a765dc31c6bee19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "a3663876ebeeba0873385de1d4baec07c1c9b5d8", "commitAfterChange": "d9c5650b5cbddab2c4722e719615cd4c4df0f60d", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " \tpublic void _ldc_w(int pc, int index, IConstantPoolEntry constantPoolEntry)", "signatureAfterChange": " \tpublic void _ldc_w(int pc, int index, IConstantPoolEntry constantPoolEntry)", "diff": ["-\t\t\t\t\tconstantPoolEntry.getStringValue()", "+\t\t\t\t\tDisassembler.escapeString(constantPoolEntry.getStringValue())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7634eabfed647310f8e8d3f8cea230d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic List statements()", "signatureAfterChange": "  \tpublic List statements()", "diff": ["-\t\treturn statements;", "+\t\treturn this.statements;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7635914d3fb787e8f05a382e0b94fef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 209, "signatureBeforeChange": " \tpublic void test0207() throws JavaModelException", "signatureAfterChange": " \tpublic void test0207() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "764070553977d4524243b2128ad34ebc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testNonExistingClassFile() throws CoreException", "signatureAfterChange": " public void testNonExistingClassFile1() throws CoreException", "diff": ["-public void testNonExistingClassFile() throws CoreException {", "+public void testNonExistingClassFile1() throws CoreException {", "-\t\tassertOpenFails(classFile);", "+\t\tassertOpenFails(", "+\t\t\t\"X.class [in <default> [in lib [in P]]] does not exist\", ", "+\t\t\tclassFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7672779d9e9764078a57d2466af562b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "fb501c24a3207cb0f14cd1498d97d7099d6695b8", "commitAfterChange": "fb4f10bbc7b8e80ed14ebf725505f0096ec6e137", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tpublic MethodBinding findMethod(\r \t\tReferenceBinding receiverType,\r \t\tchar[] selector,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tpublic MethodBinding findMethod(\r \t\tReferenceBinding receiverType,\r \t\tchar[] selector,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tif (found.size == 0) {\r", "-\t\t\t\t\tif (matchingMethod != null)\r", "-\t\t\t\t\t\tfound.add(matchingMethod);\r", "-\t\t\t\t}\r", "+\t\t\t\tif (found.size == 0 && matchingMethod != null)\r", "+\t\t\t\t\tfound.add(matchingMethod);\r", "-\t\t\tif (!relyOnDefaultAbstractMethods && currentType.isAbstract()) {\r", "+\t\t\tif (!relyOnDefaultAbstractMethods && currentType.isAbstract())\r", "-\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7673377f6df4c76d7df2a7d3053b2b3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "517b8ee23b27e5d235651538485ef446b1c4d0e3", "commitAfterChange": "198d94bedf8984594355707af3b11dd0e060bd78", "methodNumberBeforeChange": 889, "methodNumberAfterChange": 889, "signatureBeforeChange": " public void _test0868()", "signatureAfterChange": " public void test0868()", "diff": ["-public void _test0868() {", "+public void test0868() {", "-\t\t\tITERABLE_RAW_WITHOUT_IS_EMPTY_IMPL_JRE8 +", "+\t\t\tITERABLE_RAW_IMPL_JRE8 +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767c6af42179eb8edfbd6ad5ff591f0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchParticipant.java", "commitBeforeChange": "2638a8a6d4751271169096529a6fc19d8fa90ca4", "commitAfterChange": "efce8046efa31604f536ed11b6b7bbf7a3c045a5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void scheduleDocumentIndexing(SearchDocument document, IPath indexPath)", "signatureAfterChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "diff": ["-\t//\t TODO (jerome) - spec should clarify whether index paths are relative or absolute, workspace or file system", "-\tpublic void scheduleDocumentIndexing(SearchDocument document, IPath indexPath) {", "-\t\tJavaModelManager.getJavaModelManager().getIndexManager().scheduleDocumentIndexing(document, indexPath, this);", "+\tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation) {", "+\t\tJavaModelManager.getJavaModelManager().getIndexManager().scheduleDocumentIndexing(document, indexLocation, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7690fda7f1682e0995a8e825fa762c56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public void updateSourceEndIfNecessary(int sourceEnd)", "signatureAfterChange": "\r public void updateSourceEndIfNecessary(int sourceEnd)", "diff": ["+\t\tthis.methodDeclaration.bodyEnd = sourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76baf7ab75e7b819260c83f5e44ca364", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 572, "methodNumberAfterChange": 572, "signatureBeforeChange": " \tpublic void test553()", "signatureAfterChange": " \tpublic void test553()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f21663863ade5218437a6465b09758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "c99e3bd7df24eb7b0133eb18cfef3f12a0f60a4d", "commitAfterChange": "639c767e46ba1affc29fe53d2703bf4af137793b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic CodeSnippetCompiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "signatureAfterChange": " \tpublic CodeSnippetCompiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions compilerOptions, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tEvaluationContext evaluationContext, \t\tint codeSnippetStart, \t\tint codeSnippetEnd)", "diff": ["-\t\tMap settings,", "+\t\tCompilerOptions compilerOptions,", "-\t\tsuper(environment, policy, settings, requestor, problemFactory, true);", "+\t\tsuper(environment, policy, compilerOptions, requestor, problemFactory);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "770359fefe0e1f5df84d897b0fd77d07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "93ae272625cf7aea539e03a762b5190105386996", "commitAfterChange": "c6f78f890c1ca00b0157b632da091fae2c781833", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 350, "signatureBeforeChange": " \tpublic void test330()", "signatureAfterChange": " \tpublic void test330()", "diff": ["-\t\tpreferences.use_tab = true;", "+\t\tpreferences.tab_char = DefaultCodeFormatterOptions.TAB;", "+\t\tpreferences.keep_empty_array_initializer_on_one_line = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "770c288f08adff81d059ef6312fed46f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 562, "methodNumberAfterChange": 562, "signatureBeforeChange": " \t \tpublic void test543()", "signatureAfterChange": " \t \tpublic void test543()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "770c76f302d536f894bc5c9674d941c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "d651be7766f1aad04a5e2274e1cfb4a13affa340", "commitAfterChange": "900392dc83f32684036212f916a5915ba3721662", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test004() throws JavaModelException", "signatureAfterChange": " \tpublic void test004() throws JavaModelException", "diff": ["-//\t\tString[] paramNames = method.getParameterNames();", "-//\t\tassertNotNull(paramNames);", "-//\t\tassertEquals(\"Wrong size\", 3, paramNames.length); //$NON-NLS-1$", "-//\t\tassertEquals(\"Wrong name for first param\", \"i\", paramNames[0]); //$NON-NLS-1$ //$NON-NLS-2$", "-//\t\tassertEquals(\"Wrong name for second param\", \"l\", paramNames[1]); //$NON-NLS-1$ //$NON-NLS-2$", "-//\t\tassertEquals(\"Wrong name for third param\", \"s\", paramNames[2]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tString[] paramNames = method.getParameterNames();", "+\t\tassertNotNull(paramNames);", "+\t\tassertEquals(\"Wrong size\", 3, paramNames.length); //$NON-NLS-1$", "+\t\tassertEquals(\"Wrong name for first param\", \"i\", paramNames[0]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertEquals(\"Wrong name for second param\", \"l\", paramNames[1]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertEquals(\"Wrong name for third param\", \"s\", paramNames[2]); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7717cb9d9266cf5717f860c7df3640bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "8873795d3456fd4eb978570ebf0c2587e004407c", "commitAfterChange": "811f4b05d58ca33710b13af0352652814cf9e788", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic String getMethodDoc(IMethod child) throws JavaModelException", "signatureAfterChange": " \tpublic String getMethodDoc(IMethod child) throws JavaModelException", "diff": ["-\t\t\treturn this.content.substring(range[0], range[1]);", "+\t\t\treturn String.valueOf(CharOperation.subarray(this.content, range[0], range[1]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "771af657e0413bb3fd1ccf32cc6f93e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic void test0497() throws JavaModelException", "signatureAfterChange": " \tpublic void test0497() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7748d3cfacab35690d5becbfd1b6c2ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " \tpublic void test0146() throws JavaModelException", "signatureAfterChange": " \tpublic void test0146() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7757377c46b10f6f1d45f42779b0203f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "1b80cae94595518122618b458eed60915f76d171", "commitAfterChange": "92d6141bb346285ff13c588faa5a059cb9f83b3d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic boolean isSubRoutineEscaping()", "signatureAfterChange": "  \tpublic boolean isSubRoutineEscaping()", "diff": ["-\t\treturn isSubRoutineEscaping;", "+\t\treturn this.isSubRoutineEscaping;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777358d705d7593f358f2b2c9b100427", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 410, "methodNumberAfterChange": 410, "signatureBeforeChange": " \tpublic void test392()", "signatureAfterChange": " \tpublic void test392()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77974804b5680e10678d13cca3986b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testEditFieldSourceType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testEditFieldSourceType() throws JavaModelException, CoreException", "diff": ["-public void testEditFieldSourceType() throws JavaModelException, CoreException, IOException {", "+public void testEditFieldSourceType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779907ca50de3fae30c9256fda859c15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "68de41a5362a8d3d60d4e792fdccc20855996fe8", "commitAfterChange": "bcce9ee16ff0ee90548a3a85ac47f57f1df6c6fc", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "signatureAfterChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "diff": ["+\t\t\t.append(constantInterfaceMethodref.getMethodName())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a474d065c07d540ac16076d8d400ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "2e3baf50607a4426a80f8c93b7d0bda7665643c2", "commitAfterChange": "b8ee682cc8f6581e7f30b7c9d3f08d3b297bfd04", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " public void uninitializedBlankFinalField(FieldBinding binding, ASTNode location)", "signatureAfterChange": " public void uninitializedBlankFinalField(FieldBinding binding, ASTNode location)", "diff": ["-\t\tlocation.sourceEnd);", "+\t\tfieldLocation(binding, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a981bc6b088fb4cd11541d63b2c855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "90515f177fc66ff94534d5266cc647dd7b47561f", "commitAfterChange": "d48c25cb976d99917f58b366198a77010dd2d678", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public char getChar(int position)", "signatureAfterChange": " public char getChar(int position)", "diff": ["+\t    if (this.contents == null) return Character.MIN_VALUE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77be6d635422cdff64455c14d5ccac53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "faf7022339bfa34110b04d77b13d3b7d7c4de43f", "commitAfterChange": "da80cfa9ed625bab885e849d64ff277d071e3e84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\tif (inheritedMethod.returnType.leafComponentType().isParameterizedType()) {", "-\t\t\tif (currentMethod.returnType.leafComponentType().isRawType())", "-\t\t\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, originalInherited, this.type);", "+\t\tif (inheritedMethod.returnType.leafComponentType().isParameterizedType() && currentMethod.returnType.leafComponentType().isRawType()) {", "+\t\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, originalInherited, this.type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c88975e020d12ae5f3a6b0e31dd48b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 93, "signatureBeforeChange": "  \tpublic void test058()", "signatureAfterChange": "  \tpublic void test058()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d912b2fd0afdd8b46447ac337e3692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibrary.java", "commitBeforeChange": "a9ee87c83d7d756655063cf50477aa2c78c21e73", "commitAfterChange": "fcb6b52dfb91300241dc1cd9c915f45219747f35", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static UserLibrary createFromString(Reader reader) throws IOException", "signatureAfterChange": " static UserLibrary createFromString(Reader reader) throws IOException", "diff": ["-\t\t\t\t\tres.add(JavaCore.newLibraryEntry(new Path(path), sourceAttach, sourceAttachRoot));", "+\t\t\t\t\tIClasspathAttribute[] extraAttributes = ClasspathEntry.decodeExtraAttributes(element);", "+\t\t\t\t\tIAccessRule[] accessRules = ClasspathEntry.decodeAccessRules(element);", "+\t\t\t\t\tIClasspathEntry entry = JavaCore.newLibraryEntry(new Path(path), sourceAttach, sourceAttachRoot, accessRules, extraAttributes, false/*not exported*/);", "+\t\t\t\t\tres.add(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77e971d287fc8c29d1752c9b30050078", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Block getFinally()", "signatureAfterChange": "  \tpublic Block getFinally()", "diff": ["-\t\treturn optionalFinallyBody;", "+\t\treturn this.optionalFinallyBody;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780043e6dfa271f5264db4d46e3eef1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2253f3dfcbdf32f3d1a5ff419b874f53e57d43c1", "commitAfterChange": "32a60bacedc42c981665cac45ff4a4b56eefa42c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["+\t\t} catch(JavaModelException e) {\r", "+\t\t\tUtil.log(e, \r", "+\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$\r", "+\t\t\t\t+\"/.classpath, will revert to default classpath\"); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7813fbfa2b91bb738b0c36dfd4a2d317", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 381, "signatureBeforeChange": " \tpublic void _test0348() throws JavaModelException", "signatureAfterChange": " \tpublic void _test0348() throws JavaModelException", "diff": ["-\t\tASTParser parser= ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser= ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7814ba951b0f03057d8444ffa88d8856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "4cba6159f283363f8bd747cb4e532be44a8b1a70", "commitAfterChange": "83ac320f656827a9d8ea883f97b343912fdaf3c7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic Element newElement(Binding binding)", "signatureAfterChange": " \t \tpublic Element newElement(Binding binding)", "diff": ["+\t\tif (binding == null) {", "+\t\t\treturn new ErrorTypeElement(this._env);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7858c8b17e9a7acf7d24166ddab7e165", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isConditionOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785ea256ec188e4dea0b89119156ed1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f17c516ffb59700ac11c5647ba8dad2e881fec28", "commitAfterChange": "e151159a2ae9fc4c625fdf794781406e3106bfec", "methodNumberBeforeChange": 538, "methodNumberAfterChange": 538, "signatureBeforeChange": " public void testCompletionLocalType1() throws JavaModelException", "signatureAfterChange": " public void testCompletionLocalType1() throws JavaModelException", "diff": ["-\t\t\"element:ZZZZ    completion:ZZZZ    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:ZZZZ    completion:ZZZZ    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785fcbfdd6c3b3aa71aaa7556927cf56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "commitAfterChange": "8963c675854a4d25e2dd13b9b3101b015fe978eb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r public IWorkspace getWorkspace()", "signatureAfterChange": "\r public IWorkspace getWorkspace()", "diff": ["-\treturn this.workspace;\r", "+\treturn ResourcesPlugin.getWorkspace();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78674bf062693a2f4a86d4cc8f2a4188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "432a9d5974b55509eb3dfbf8ecd190ef7ce8af61", "commitAfterChange": "6babe48369a471c3e35e8fc01b1af25fdd70c8bf", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t \tpublic void reset(SourceTypeBinding typeBinding)", "signatureAfterChange": "  \tpublic void reset(SourceTypeBinding typeBinding)", "diff": ["-\t", "-\t\tthis.numberOfInnerClasses = 0;", "+\t\tif (this.innerClassesBindings != null) {", "+\t\t\tthis.innerClassesBindings.clear();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "786dea965c08d0f8edacf761c8ef05f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testAddCompilationUnit2() throws CoreException, IOException", "signatureAfterChange": " public void testAddCompilationUnit2() throws CoreException", "diff": ["-public void testAddCompilationUnit2() throws CoreException, IOException {", "+public void testAddCompilationUnit2() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78751deac5bc6c33e5aaa83420efc6c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 391, "signatureBeforeChange": " \tpublic void test0389() throws JavaModelException", "signatureAfterChange": " \tpublic void test0389() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78b234bb8089f268df94c9873ab8d33b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "f790750ec986a60ef92ab62210a60e7bfe7f2a9e", "commitAfterChange": "5acc9f38696ecf93bf41e3ef5e2738b55bfe04e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "\r \r \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\t\t\tnew LocalVariableBinding(this.name, typeBinding, modifierFlag, true));\r", "+\t\t\t\t\tnew LocalVariableBinding(this, typeBinding, modifierFlag, true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78b79dd1823d496f8c31f155259dac89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r protected IType getHandle(IGenericType genericType)", "signatureAfterChange": "\r protected IType getHandle(IGenericType genericType)", "diff": ["-\tif (genericType == null) return null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c8531afd4be90d30a2429bf30d10bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "0c9a854e999600755e2d89f23fa8aea882a9fa22", "commitAfterChange": "dbaf85c304b59aaa4612a89a3a53e2acefb3bfb7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testContents() throws CoreException", "signatureAfterChange": " public void testContents() throws CoreException", "diff": ["-\tassertTrue(\"source code of copy should still be original\", this.copy.getSource().equals(originalSource));", "+\tassertSourceEquals(\"source code of copy should still be original\", originalSource, this.copy.getSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d35d59227f971def5c1d8d98d0e2ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "07a11e1e272139637f646eb5763c54327cd4bc46", "commitAfterChange": "64048b0f093f9425eaa40658b41da232045fddbb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tIFile parentFile, \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tBuildEnv processorEnv, \t\t\tCollection<IFile> deleted)", "signatureAfterChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tIFile parentFile, \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tBuildEnv processorEnv, \t\t\tCollection<IFile> deleted)", "diff": ["-\t\tgfm.deleteObsoleteFilesAfterBuild(parentFile, newGeneratedFiles);", "+\t\tdeleted.addAll(gfm.deleteObsoleteFilesAfterBuild(parentFile, newGeneratedFiles));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d5b2c07d3c63f4cabfe264d6909dfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testCompletionFindLocalVariable() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindLocalVariable() throws JavaModelException", "diff": ["-\t\t\"element:var    completion:var    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:var    completion:var    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78db50f8ce0de29da24b33a9e371cf3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptBuilderTests.java", "commitBeforeChange": "03b8fcceb4a4a286fa7eb927dfdca9d5456d0c31", "commitAfterChange": "b5012cbf5bbeb60257503c05374665bf1738c502", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testCaching()", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testCaching()", "diff": ["-\t\tIPath srcRoot = getSourcePath();", "+\t\tIPath srcRoot = getSourcePath( getProjectName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78fe8cdd19a80fea323e26d491bdd706", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "314be86a62cb23e4add94210ca0a317454243e7c", "commitAfterChange": "4f3f39945f1ee27fc0ddd600cc6447ef1dfcd7a8", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": " private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding, boolean isEnum, ITypeAnnotationWalker externalAnnotationWalker)", "signatureAfterChange": " private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding, boolean isEnum, ITypeAnnotationWalker externalAnnotationWalker)", "diff": ["-\t\t\tchar[][] typeName = CharOperation.splitOn('/', annotationTypeName, 1, annotationTypeName.length-1); // cut of leading 'L' and trailing ';'", "+\t\t\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "792c3c77220855ce3dd864f2063f8627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 364, "signatureBeforeChange": " \tpublic void test0362() throws JavaModelException", "signatureAfterChange": " \tpublic void test0362() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79377d73512f7910fbde411b540082ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794301ee70cd1a2a8e13fe021ba81b9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceCompletionTests.java", "commitBeforeChange": "7e90b152d794472f9ccdc34291f34d9ac4acf6e7", "commitAfterChange": "8db2a22a82e2d4efc29edee16188f254a9d47da3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testCompleteMemberAccess() throws JavaModelException", "signatureAfterChange": " \tpublic void testCompleteMemberAccess() throws JavaModelException", "diff": ["-\t\tthis.complete(", "+\t\tcomplete(true, // put in fingerprint", "+\t\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79513efa7b5892fc634ccc871195ff29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "5344fc95a8ffa5df4111075eeefc076a7057ea0f", "commitAfterChange": "921b5e991fdbdef88866cb0936d3d208a470ed6b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tpublic Message[] getMessages()", "signatureAfterChange": "\r \tpublic Message[] getMessages()", "diff": ["-\t\tif (this.messages == null) {\r", "-\t\t\tthis.messages = EMPTY_MESSAGES;\r", "-\t\t}\r", "-\t\treturn this.messages;\r", "+\t\treturn messages;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796c23b7ba338db5679c51bd4e184dd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void test0072() throws JavaModelException", "signatureAfterChange": " \tpublic void test0072() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796ffd57b33d746aa3c75e74307d1b2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a107a93c33b9fbfeb3c58f06a397400d87b64e14", "commitAfterChange": "ac57d09afd251c5c3e8f5a329155e4ee05cc3840", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic SyntheticArgumentBinding[] syntheticOuterLocalVariables()", "signatureAfterChange": " \tpublic SyntheticArgumentBinding[] syntheticOuterLocalVariables()", "diff": ["-\t\treturn this.type.syntheticOuterLocalVariables();", "+\t\treturn genericType().syntheticOuterLocalVariables();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79737a908885f54d837deee946632393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PostfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic PostfixExpression.Operator getOperator()", "signatureAfterChange": "  \tpublic PostfixExpression.Operator getOperator()", "diff": ["-\t\treturn operator;", "+\t\treturn this.operator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7977c7c001b7f2b3463ea5ce1d2bcf4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "fcbd3395448d733c2144c89303ce7acab2aee489", "commitAfterChange": "2b78feed3b2d4661985406de5dd37370d4fb2759", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, boolean checkTypeVariables)", "diff": ["-\t\t\t\t\treturn isEqual(captureBinding.wildcard, captureBinding2.wildcard, checkTypeVariables);", "+\t\t\t\t\treturn captureBinding.position == captureBinding2.position", "+\t\t\t\t\t\t&& isEqual(captureBinding.wildcard, captureBinding2.wildcard, checkTypeVariables);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797856e65fa55f37448d0095bba08b65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\t\t\tif (typeVariables == NoTypeVariables) { // check generic", "+\t\t\t\tif (typeVariables == Binding.NO_TYPE_VARIABLES) { // check generic"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797e2c066d17b5bb8c7883d1569aec99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedEntry) throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedEntry) throws JavaModelException", "diff": ["-\t\t\t\tPerProjectInfo temporaryInfo = new PerProjectInfo(getProject());", "+\t\t\t\tPerProjectInfo temporaryInfo = newTemporaryInfo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7987d7fc2f93d5d5ff6af5d7e4495b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/AptPlugin.java", "commitBeforeChange": "69d976ecb2b4a910a78fb1eaf551e2775a0ff256", "commitAfterChange": "6e7138933a7b0a4bb6f562a7b0b5324e7f7fa604", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void start(BundleContext context) throws Exception", "signatureAfterChange": " \t \tpublic void start(BundleContext context) throws Exception", "diff": ["+\t\t\t\t\tif(DEBUG)", "+\t\t\t\t\t\ttrace(\"updating project \" + proj.getName() ); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "799ee173a79312c9be9d80453a7e9049", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testAddExclusionOnFolderUnderProject() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnFolderUnderProject() throws CoreException", "diff": ["-\t\tIJavaProject javaProject = this.createJavaProject(\"P1\", new String[] {\"\"}, \"\");", "-\t\tthis.createFolder(\"/P1/doc\");", "+\t\tIJavaProject javaProject = createJavaProject(\"P1\", new String[] {\"\"}, \"\");", "+\t\tcreateFolder(\"/P1/doc\");", "-\t\tthis.deleteProject(\"P1\");", "+\t\tdeleteProject(\"P1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79bc047831f886f64e6f9461260ab011", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "0ef1f03317785416dba062a8ca80956e1b37365f", "commitAfterChange": "197dfad13f5a76600395f35c6937ea2ac7e02df8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t", "+\t\t// special case for re-entrant source types (selection, code assist, etc)...", "+\t\t// can request additional types during hierarchy walk that are found as source types that also 'need' to connect their hierarchy", "+\t\tif (this.superclass == null)", "+\t\t\treturn TypeConstants.OK;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f33b093f403f5b098a9b5946aa9564", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tTypeDeclaration(AST ast)", "signatureAfterChange": " \tTypeDeclaration(AST ast)", "diff": ["-\t\t\tthis.superInterfaceNames = new ASTNode.NodeList(false, Name.class);", "+\t\t\tthis.superInterfaceNames = new ASTNode.NodeList(SUPER_INTERFACES_PROPERTY);", "-\t\t\tthis.typeParameters = new ASTNode.NodeList(false, TypeParameter.class);", "-\t\t\tthis.superInterfaceTypes = new ASTNode.NodeList(false, Type.class);", "+\t\t\tthis.typeParameters = new ASTNode.NodeList(TYPE_PARAMETERS_PROPERTY);", "+\t\t\tthis.superInterfaceTypes = new ASTNode.NodeList(SUPER_INTERFACE_TYPES_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a136589a6d79e0ac09dfedcb14f333b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "605463bb98397b59c78b7fc56ee33e7e22fd8367", "commitAfterChange": "7428bd3b18a16b1860e6a1a28fbc6cd63967fdc6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t \tpublic void printEndOfCompilationUnit()", "signatureAfterChange": " \t \tpublic void printEndOfCompilationUnit()", "diff": ["-\t\t\t\t\t\tif (this.formatJavadocComment) {", "+\t\t\t\t\t\tif (includesJavadocComments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1c754835ec216f8c088ce028c605ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " \tpublic void test0397() throws JavaModelException", "signatureAfterChange": " \tpublic void test0397() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a20ad822bdf452b076ff8d30bf76320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalOr( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalOr( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((condConst = left.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\tif ((condConst = left.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\tif ((condConst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\tif ((condConst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a28626f66824c165f22ea47b5129fd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod)", "signatureAfterChange": " boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod)", "diff": ["-\tif (method.typeVariables != NoTypeVariables || !substituteMethod.hasSubstitutedParameters())", "+\tif (method.typeVariables != Binding.NO_TYPE_VARIABLES || !substituteMethod.hasSubstitutedParameters())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a35b7e4844960db773a13e66ec916df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 401, "methodNumberAfterChange": 401, "signatureBeforeChange": " \tpublic void test0399() throws JavaModelException", "signatureAfterChange": " \tpublic void test0399() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3bdbda18acb3d128bf6bddaea0e816", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void test0023() throws JavaModelException", "signatureAfterChange": " \tpublic void test0023() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8cfb705d3b7b6e04041a82b1c8ac63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "2a762b85f858691a63d4547af177cc649d7b1329", "commitAfterChange": "7675c409a4b3b1e15b1cc476a0a66b988b5fb4a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void traverseDelta( \t\tIJavaElementDelta delta, \t\tIPackageFragmentRoot root, \t\tIJavaProject project)", "signatureAfterChange": " \tprotected void traverseDelta( \t\tIJavaElementDelta delta, \t\tIPackageFragmentRoot root, \t\tIJavaProject project)", "diff": ["-\t\t\t\telementChanged(element);", "+\t\t\t\tif ((delta.getFlags() & IJavaElementDelta.F_CONTENT) != 0){", "+\t\t\t\t\telementChanged(element);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aad02dafc8ac4425bee97ffc2a3990e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b49d561020d10002b6ddc1f793743b3d47408d93", "commitAfterChange": "61d2e9bd09460e9985288e8ef72cfc838f3c761c", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  \tvoid redoMemberAlignment(AlignmentException e)", "signatureAfterChange": "  \tvoid redoMemberAlignment(AlignmentException e)", "diff": ["-\t\tthis.formatter.lastLocalDeclarationSourceStart = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab566d304b59beb8189d4a87456bbea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "ab04bd8242b8fae5405da93b1573f8d7c03eade9", "commitAfterChange": "1dec85ea09a3081652a77f24f3beedef5b89ba6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r protected void checkBuilderState() throws JavaModelException", "signatureAfterChange": "\r protected void checkBuilderState() throws JavaModelException", "diff": ["+\t\r", "+\tif (JavaModelManager.USING_NEW_BUILDER){\r", "+\t\treturn;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab95b229eedfcefa93dc3afce0bac98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "d651be7766f1aad04a5e2274e1cfb4a13affa340", "commitAfterChange": "900392dc83f32684036212f916a5915ba3721662", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test007() throws JavaModelException", "signatureAfterChange": " \tpublic void test007() throws JavaModelException", "diff": ["-//\t\tString[] paramNames = method.getParameterNames();", "-//\t\tassertNotNull(paramNames);", "-//\t\tassertEquals(\"Wrong size\", 1, paramNames.length); //$NON-NLS-1$", "-//\t\tassertEquals(\"Wrong name for first param\", \"f\", paramNames[0]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tString[] paramNames = method.getParameterNames();", "+\t\tassertNotNull(paramNames);", "+\t\tassertEquals(\"Wrong size\", 1, paramNames.length); //$NON-NLS-1$", "+\t\tassertEquals(\"Wrong name for first param\", \"f\", paramNames[0]); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1adfd875a8784df33278527dd4a6c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "2b146679d3d17750c10e2b9415f98c6ca3cc39ec", "commitAfterChange": "b584041c55393f6044beb5ed98f7b741088ab318", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static String[] annotateParameterType(String originalSignature, String annotatedType, int paramIdx, MergeStrategy mergeStrategy)", "signatureAfterChange": " \tpublic static String[] annotateParameterType(String originalSignature, String annotatedType, int paramIdx, MergeStrategy mergeStrategy)", "diff": ["-\t\twrapper.start = 1;", "+\t\twrapper.start = CharOperation.indexOf('(', wrapper.signature) + 1; // possibly skip type parameters"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1c7b6e2c15fe5c71aa9f4e57f8c061", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b6c213d292f2a14fc7e944fa6a9473734abc07ab", "commitAfterChange": "23bd27f0df8fef2c86453e5a48de14dcd7cbc8bc", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " protected void consumeClassInstanceCreationExpressionQualified()", "signatureAfterChange": " protected void consumeClassInstanceCreationExpressionQualified()", "diff": ["-\tthis.expressionLengthPtr--;", "-\t\t(QualifiedAllocationExpression) this.expressionStack[this.expressionPtr--];", "-\tqae.enclosingInstance = this.expressionStack[this.expressionPtr];", "-\tthis.expressionStack[this.expressionPtr] = qae;", "+\t\t(QualifiedAllocationExpression) this.expressionStack[this.expressionPtr];", "+\t", "+\tif (qae.anonymousType == null) {", "+\t\tthis.expressionLengthPtr--;", "+\t\tthis.expressionPtr--;", "+\t\tqae.enclosingInstance = this.expressionStack[this.expressionPtr];", "+\t\tthis.expressionStack[this.expressionPtr] = qae;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b238101723dd1041772fb75387d27a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tIWorkspace workspace, \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchMode,  \t\tfinal boolean isCaseSensitive, \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tIWorkspace workspace, \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchMode,  \t\tfinal boolean isCaseSensitive, \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\tnew JavaSearchParticipant(getWorkingCopies()), // Java search only", "+\t\t\t\t\tgetDefaultSearchParticipant(), // Java search only"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b31e6120bf43bc7eaa47203c53211b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testSearchType() throws CoreException", "signatureAfterChange": " \tpublic void testSearchType() throws CoreException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6d99e755e81b54d16f4b55d787f464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "7e47f9acc3454f5babc44432d7650b471f5736c6", "commitAfterChange": "75c0ccb1e2c68587a8e2efbb2a478d71f7d635f3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": "\r \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["+\t\t\t\t\t\t\t\t// from 1.4 on, the JLS 8.5.1 is followed\r", "+\t\t\t\t\t\t\t\tif (environment().options.complianceLevel >= CompilerOptions.JDK1_4){\r", "+\t\t\t\t\t\t\t\t\treturn memberType;\r", "+\t\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b783884eaef7a1a57e1c42755d4f1a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 584, "methodNumberAfterChange": 584, "signatureBeforeChange": " \tpublic void test566()", "signatureAfterChange": " \tpublic void test566()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b85c4eba87f217191d53e65e232f773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " public void goForCompilationUnit()", "signatureAfterChange": " public void goForCompilationUnit()", "diff": ["+\tscanner.todoCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b91d344b060f64bee6ea210018ddc14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\t\t\t\t\t\telement = new RecoveredInitializer((Initializer) field, null, 1, this);", "+\t\t\t\t\t\telement = new RecoveredInitializer(field, null, 1, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb910c1eb686bd3bb37d98f2ab4bcaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "d3244b9b1f07dec23fc8a11bdb05cd710c7b96c6", "commitAfterChange": "ed58872582a38f521f8bc7cc18b9c76c2c6fa7a1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " public IType getHandle()", "signatureAfterChange": " public IType getHandle()", "diff": ["-\treturn fHandle;", "+\treturn this.fHandle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd2c671d442d8a29b70d3f2f425c903", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\tif ((inline = right.constant) != NotAConstant) {", "+\t\tif ((inline = right.constant) != Constant.NotAConstant) {", "-\t\tif ((inline = left.constant) != NotAConstant) {", "+\t\tif ((inline = left.constant) != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c07e7125c63a17f6255d036e704adca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "43c55ec0fd64bd306ef21c4d7e4780f0acc5640d", "commitAfterChange": "4ce45fe71444f9feef181a590f2dd1b839b0e917", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 380, "signatureBeforeChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult, \tint start, \tint end)", "signatureAfterChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult, \tint start, \tint end)", "diff": ["-\t\t\tthis.problemReporter().cannotReadSource(this.compilationUnit, abortException);", "+\t\t\tthis.problemReporter().cannotReadSource(this.compilationUnit, abortException, this.options.verbose);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c3bbeefec2b2be0346bfcb52403d6c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tpublic void test0171() throws JavaModelException", "signatureAfterChange": " \tpublic void test0171() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong type\", IPackageBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$", "+\t\tassertEquals(\"wrong type\", IBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5b14644edcb60d6d7ad600cdc3a065", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateImpl.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprotected void buildInitialPackageMap()", "signatureAfterChange": "\r \tprotected void buildInitialPackageMap()", "diff": ["-\t\tfPackageMap = new PackageMap();\r", "+\t\tfPackageMap= new PackageMap();\r", "-\t\t\tIPackageFragmentRoot[] roots = getPackageFragmentRootsInClassPath();\r", "-\t\t\tIPath outputLocation = getJavaProject().getOutputLocation();\r", "-\t\t\tfor (int i = 0; i < roots.length; ++i) {\r", "-\t\t\t\tIPackageFragmentRoot root = roots[i];\r", "-\t\t\t\tif (root.exists()) {\r", "-\t\t\t\t\t((PackageFragmentRoot) root).refreshChildren();\r", "-\t\t\t\t\tIJavaElement[] frags = root.getChildren();\r", "-\t\t\t\t\tfor (int j = 0; j < frags.length; ++j) {\r", "-\t\t\t\t\t\tIPackageFragment frag = (IPackageFragment) frags[j];\r", "-\t\t\t\t\t\tif (frag.exists()) {\r", "-\t\t\t\t\t\t\tString pkgName = frag.getElementName();\r", "-\t\t\t\t\t\t\tIPackage pkg =\r", "-\t\t\t\t\t\t\t\tpkgName.length() == 0\r", "-\t\t\t\t\t\t\t\t\t? defaultPackageForProject()\r", "-\t\t\t\t\t\t\t\t\t: fDevelopmentContext.getImage().getPackageHandle(pkgName, false);\r", "-\t\t\t\t\t\t\tIPath path =\r", "-\t\t\t\t\t\t\t\troot.isArchive() ? root.getPath() : frag.getUnderlyingResource().getFullPath();\r", "+\t\t\tIPackageFragmentRoot[] roots= getPackageFragmentRootsInClassPath();\r", "+\t\t\tIPath outputLocation= getJavaProject().getOutputLocation();\r", "+\t\t\tfor (int i= 0; i < roots.length; ++i) {\r", "+\t\t\t\tPackageFragmentRoot root= (PackageFragmentRoot)roots[i];\r", "+\t\t\t\tif (root.exists0()) {\r", "+\t\t\t\t\troot.refreshChildren();\r", "+\t\t\t\t\tIJavaElement[] frags= root.getChildren();\r", "+\t\t\t\t\tfor (int j= 0; j < frags.length; ++j) {\r", "+\t\t\t\t\t\tIPackageFragment frag= (IPackageFragment) frags[j];\r", "+//\t\t\t\t\t\tif (frag.exists()) {\r", "+\t\t\t\t\t\t\tString pkgName= frag.getElementName();\r", "+\t\t\t\t\t\t\tIPackage pkg= pkgName.length() == 0 ? defaultPackageForProject() : fDevelopmentContext.getImage().getPackageHandle(pkgName, false);\r", "+\t\t\t\t\t\t\tIPath path= root.isArchive() ? root.getPath() : frag.getUnderlyingResource().getFullPath();\r", "-\t\t\t\t\t\t}\r", "+//\t\t\t\t\t\t}\r", "-\t\tfPathMap = new PathMap(fPackageMap);\r", "+\t\tfPathMap= new PathMap(fPackageMap);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5b97a8608de382abd094a150583f79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b49d561020d10002b6ddc1f793743b3d47408d93", "commitAfterChange": "61d2e9bd09460e9985288e8ef72cfc838f3c761c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tvoid redoAlignment(AlignmentException e)", "signatureAfterChange": "  \tvoid redoAlignment(AlignmentException e)", "diff": ["-\t\tthis.formatter.lastLocalDeclarationSourceStart = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5bffde00f3d645d56646a505d0b107", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 232, "signatureBeforeChange": "  \tpublic void test195()", "signatureAfterChange": "  \tpublic void test195()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c69f854c33b2ddf5b78d809e3d27936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 115, "signatureBeforeChange": " final public void goto_w(Label lbl)", "signatureAfterChange": "  final public void goto_w(Label lbl)", "diff": ["-}", "+\tif (DEBUG) System.out.println(position + \"\\t\\tgotow:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7caef003484a3ceb7399c85ebef60681", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "69be5036bec0741cc4d4f5a1817c4386c68c7f87", "commitAfterChange": "02ec7693122bc81c642df1242d757ff1ae2691e1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn suite(ClasspathTests.class, null);", "+//\treturn buildTestSuite(ClasspathTests.class);", "+\treturn buildTestSuite(ClasspathTests.class, \"testClasspathValidation\", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccd0c758d5a0447f3bb6e247d9b2f78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project)", "signatureAfterChange": "  \tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project)", "diff": ["-\t\tASTParser parser = ASTParser.newParser(this.astLevel);", "+\t\tASTParser parser = ASTParser.newParser(astLevel);", "-\t\tparser.setResolveBindings(this.resolveBinding);", "+\t\tparser.setResolveBindings(resolveBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce7524b00dbe84dab51599f3866d0b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\tenv.addRequiredProject(project2Path, project1Path, new IPath[] {new Path(\"**/api/\")}, new IPath[] {}, false);", "+\t\tenv.addRequiredProject(project2Path, project1Path, new IPath[] {new Path(\"**/api/\")}, new IPath[] {new Path(\"**\")}, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cfb49938da482f48a5a2dd1b81a5d90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tpublic void test0139() throws JavaModelException", "signatureAfterChange": " \tpublic void test0139() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d1501704bf2a1bf8809a85ab3ae372c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void test0462() throws JavaModelException", "signatureAfterChange": " \tpublic void test0462() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2d460f46f9a05af23d2ef3f8b5a1a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 368, "signatureBeforeChange": " \tpublic void test0710() throws JavaModelException", "signatureAfterChange": " \tpublic void test0710() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d47eb90e53edf2c4371dacbaf9ed79b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a1b95807b51dd3bce9c0bff1093436d199739dfa", "commitAfterChange": "5065596af9972ad4b58342e36b5c4c0a73ff9708", "methodNumberBeforeChange": 217, "methodNumberAfterChange": 217, "signatureBeforeChange": " \tpublic void _test0569() throws JavaModelException", "signatureAfterChange": " \tpublic void _test0569() throws JavaModelException", "diff": ["-\t\t\tASTParser.USE_NEW_DOM_PARSER = true;", "+\t\t\t// TODO (olivier) uncomment when static final is added", "+\t\t\t// ASTParser.USE_NEW_DOM_PARSER = true;", "-\t\t\tASTParser.USE_NEW_DOM_PARSER = false;", "+\t\t\t// TODO (olivier) uncomment when static final is added", "+\t\t\t// ASTParser.USE_NEW_DOM_PARSER = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4cf867d2bcaca1605e5645d34f676f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic static String[] getTrimmedSimpleNames(String name)", "signatureAfterChange": " \tpublic static String[] getTrimmedSimpleNames(String name)", "diff": ["-\t\tif (result == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d6dce87816d29dde811ed6edaaacdbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "a12821fa8f0e23855d8771487235dddff394d6b5", "commitAfterChange": "baae0f4356d0ca1422911e1d8ce9e7acb7dfd713", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tBranchLabel trueLabel, \t\tBranchLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\t|| ((this.valueIfTrue.implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) != T_boolean) { // non boolean values", "+\t\t\t|| ((this.valueIfTrue.implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) != T_boolean", "+\t\t\t|| ((this.valueIfFalse.implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) != T_boolean) { // non boolean values"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9fcb8d1d92d188cba49ba97d9dfd58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "167e0a563c0934d033fb860086f34607180326b0", "commitAfterChange": "27ab9447fb0786cab5fb449fe90ffd060e3fc9d0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkForInheritedNameClash(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "signatureAfterChange": " void checkForInheritedNameClash(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "diff": ["-\tif (!inheritedMethod.declaringClass.isInterface() && !inheritedMethod.isStatic())", "-\t\tdetectInheritedNameClash(inheritedMethod, otherInheritedMethod);", "+\tif (inheritedMethod.declaringClass.isInterface() || inheritedMethod.isStatic()) return;", "+", "+\tdetectInheritedNameClash(inheritedMethod, otherInheritedMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da79da35beff8b0a0c29ec847c9de8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void test045() throws JavaModelException", "signatureAfterChange": "  public void test045() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db2bff97cf715dc6d1093bc6bc9a1e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\tboolean needToApplyNonNullDefault = currentMethod.hasNonNullDefault();", "+\t\t\tlong sourceLevel = scope.compilerOptions().sourceLevel;", "+\t\t\tboolean needToApplyNonNullDefault = currentMethod.hasNonNullDefaultFor(Binding.DefaultLocationParameter|Binding.DefaultLocationReturnType,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsourceLevel >= ClassFileConstants.JDK1_8);", "-\t\t\t\tlong sourceLevel = scope.compilerOptions().sourceLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db839a6c97997d8c304582c5648b015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 393, "signatureBeforeChange": " \tpublic void test0391() throws JavaModelException", "signatureAfterChange": " \tpublic void test0391() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dee4ad2107c6fe6cce7554b44b8116e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/LongCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int size()", "signatureAfterChange": " public int size()", "diff": ["-\treturn elementSize;", "+\treturn this.elementSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df010207aef8d8d9f57f0af08747902", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexRequest.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean belongsTo(String projectName)", "signatureAfterChange": " \tpublic boolean belongsTo(String projectNameOrJarPath)", "diff": ["-\tpublic boolean belongsTo(String projectName) {", "-\t\treturn projectName.equals(this.indexPath.segment(0));", "+\tpublic boolean belongsTo(String projectNameOrJarPath) {", "+\t\t// used to remove pending jobs because the project was deleted... not to delete index files", "+\t\t// can be found either by project name or JAR path name", "+\t\treturn projectNameOrJarPath.equals(this.containerPath.segment(0))", "+\t\t\t|| projectNameOrJarPath.equals(this.containerPath.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfe159f7d3b9ba194bf517022af5a3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "396ca10810550c7712741dd65ea60d50dccc4f9c", "commitAfterChange": "5942739e510eee0fb38fa2f7a6c0a4bcc3408c60", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["+\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not save classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\t\t\t\tproject.setRawClasspath(\r", "-\t\t\t\t\t\t\t\t\t\t\tfileEntries, \r", "-\t\t\t\t\t\t\t\t\t\t\toutputLocation, \r", "-\t\t\t\t\t\t\t\t\t\t\tnull, // monitor\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue, // canChangeResource\r", "-\t\t\t\t\t\t\t\t\t\t\tfalse, // forceSave\r", "-\t\t\t\t\t\t\t\t\t\t\tproject.getResolvedClasspath(true), // ignoreUnresolvedVariable\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue, // needCycleCheck\r", "-\t\t\t\t\t\t\t\t\t\t\ttrue); // needValidation\r", "-\t\t\t\t\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\tproject.setRawClasspath(\r", "+\t\t\t\t\t\t\t\t\t\tfileEntries, \r", "+\t\t\t\t\t\t\t\t\t\toutputLocation, \r", "+\t\t\t\t\t\t\t\t\t\tnull, // monitor\r", "+\t\t\t\t\t\t\t\t\t\ttrue, // canChangeResource\r", "+\t\t\t\t\t\t\t\t\t\tfalse, // forceSave\r", "+\t\t\t\t\t\t\t\t\t\tproject.getResolvedClasspath(true), // ignoreUnresolvedVariable\r", "+\t\t\t\t\t\t\t\t\t\ttrue, // needCycleCheck\r", "+\t\t\t\t\t\t\t\t\t\ttrue); // needValidation\r", "-\t\t\t\t\t\t\t\t\tUtil.log(e, \"Exception updating classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\t// setRawClasspath might fire a delta, and a listener may throw an exception\r", "-\t\t\t\t\t\t\t\t\tUtil.log(e, \"Exception updating classpath for \"+ project.getPath()); //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t\t// happens if the .classpath could not be written to disk\r", "+\t\t\t\t\t\t\t\t\tUtil.log(e, \"Could not set classpath for \"+ project.getPath()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e2356435ebe89af7ac8165592826ba2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tsynchronized IBinding resolveName(Name name)", "signatureAfterChange": " \tsynchronized IBinding resolveName(Name name)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) this.bindingTables.compilerBindingsToASTBindings.get(exactBinding);", "-\t\t\t\t\t\t\t\t\t\t\tif (variableBinding != null) {", "+\t\t\t\t\t\t\t\t\t\t\tif (exactBinding.type != null) {", "+\t\t\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) this.bindingTables.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\t\tif (variableBinding != null) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\treturn variableBinding;", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\t\tvariableBinding = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(exactBinding, variableBinding);", "-\t\t\t\t\t\t\t\t\t\t\tvariableBinding = new VariableBinding(this, exactBinding);", "-\t\t\t\t\t\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(exactBinding, variableBinding);", "-\t\t\t\t\t\t\t\t\t\t\treturn variableBinding;", "-\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.bindingTables.compilerBindingsToASTBindings.get(exactBinding);", "-\t\t\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "+\t\t\t\t\t\t\t\t\t\tif (exactBinding.type != null) {", "+\t\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.bindingTables.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "+\t\t\t\t\t\t\t\t\t\t\t\treturn variableBinding2;", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "-\t\t\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "-\t\t\t\t\t\t\t\t\t\tthis.bindingTables.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "-\t\t\t\t\t\t\t\t\t\treturn variableBinding2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e24760e12fdd48e9fc9af6cac86d127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 567, "methodNumberAfterChange": 567, "signatureBeforeChange": " \tpublic void test548()", "signatureAfterChange": " \tpublic void test548()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e38466b95056df49ca6f6f61e374655", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void testCompletionFindField3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindField3() throws JavaModelException", "diff": ["-\t\t\"element:bar    completion:bar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:bar    completion:bar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3c845fd21eecfe52d00c9ff47e8a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testCompletionAmbiguousFieldName4() throws JavaModelException", "signatureAfterChange": "   public void testCompletionAmbiguousFieldName4() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e546bdbe63b3688dd0ad1ed3a549fa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "314be86a62cb23e4add94210ca0a317454243e7c", "commitAfterChange": "4f3f39945f1ee27fc0ddd600cc6447ef1dfcd7a8", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding)", "signatureAfterChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["-\t\t\tchar[][] typeName = CharOperation.splitOn('/', annotationTypeName, 1, annotationTypeName.length-1); // cut of leading 'L' and trailing ';'", "+\t\t\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e567fe5f8077817a4d9ac748a9fcd1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 176, "signatureBeforeChange": " public void invalidField(NameReference nameRef, FieldBinding field)", "signatureAfterChange": " public void invalidField(NameReference nameRef, FieldBinding field)", "diff": ["-\t\t\t\tfieldSourceStart(field, nameRef),", "-\t\t\t\tfieldSourceEnd(field, nameRef));\t\t\t\t", "+\t\t\t\tnodeSourceStart(field, nameRef),", "+\t\t\t\tnodeSourceEnd(field, nameRef));\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e9feace98a76c02cbed265c9a3b6801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NonFatalErrorTest.java", "commitBeforeChange": "f874c6b5077c159b72bb8e4b8aad8ed303fb1894", "commitAfterChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void test002()", "signatureAfterChange": " \t \tpublic void test002()", "diff": ["-\t\t\t\"Unexpected target error running resulting class file for X.java:\\n\" + ", "-\t\t\t\"java.lang.Error: Unresolved compilation problem: \\n\" + ", "+\t\t\tnull /* expectedOutputString */,", "+\t\t\t\"java.lang.Error: Unresolved compilation problem: \\n\" + /* expectedErrorString */ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ecbf25d86cc2e056ba46c06e4820136", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedType.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7edc2f3d54987c0c9fd0d7dfa4526aa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 564, "methodNumberAfterChange": 564, "signatureBeforeChange": " \tpublic void test545()", "signatureAfterChange": " \tpublic void test545()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7edd1c8a3cbe80a6397eadef433daf1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IEntryResult[] queryEntriesPrefixedBy(char[] prefix) throws IOException", "signatureAfterChange": " \tpublic IEntryResult[] queryEntriesPrefixedBy(char[] prefix)", "diff": ["-\tpublic IEntryResult[] queryEntriesPrefixedBy(char[] prefix) throws IOException {", "+\tpublic IEntryResult[] queryEntriesPrefixedBy(char[] prefix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eded92dcf2c5c121682c8fd4b2431cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test0001() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0001() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ef07e585c5592f0cd0bf1804c82a13b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void invokeArrayNewInstance()", "signatureAfterChange": " protected void invokeArrayNewInstance()", "diff": ["-\t\t\tQualifiedNamesConstants.JAVALANGREFLECTARRAY_CONSTANTPOOLNAME,", "-\t\t\tQualifiedNamesConstants.NewInstance,", "-\t\t\tQualifiedNamesConstants.NewInstanceSignature);", "+\t\t\tConstantPool.JAVALANGREFLECTARRAY_CONSTANTPOOLNAME,", "+\t\t\tConstantPool.NewInstance,", "+\t\t\tConstantPool.NewInstanceSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f03126fb544b98329b1dd281c324ea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getLeftHandSide()", "signatureAfterChange": "  \tpublic Expression getLeftHandSide()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f10f512a513dffc4c8b889c3232b585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testDiscardWorkingCopy3() throws CoreException", "signatureAfterChange": " \tpublic void testDiscardWorkingCopy3() throws CoreException", "diff": ["-\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null, null);", "-\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null, null);", "-\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null, null);", "+\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null);", "+\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null);", "+\t\t\tthis.workingCopy = cu.getWorkingCopy(owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f271273e65aa63948744bc35a95a83d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "2987741f8d7ae6ba7c6ecdc8fdc499128b4382c3", "commitAfterChange": "d5c11be7e543c7f93752fc5fbb5d286f2c5ca773", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\t\t\t\t((JavaProject) element.getJavaProject()).resetCaches();", "+\t\t\t\t\t\t\tdeltaProcessor.projectCachesToReset.add(element.getJavaProject());", "+\t\t\t\tdeltaProcessor.resetProjectCaches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f324aa97ccf306c00fe76442e977e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexerRequestor.java", "commitBeforeChange": "f263f2ef7943b444a7df1ecbae4d4e44696c99a8", "commitAfterChange": "7f51e750d684686314cf957cd0a463e4558546e5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " private void enterInterface(TypeInfo typeInfo)", "signatureAfterChange": " private void enterInterface(TypeInfo typeInfo)", "diff": ["-\t\t\ttypeInfo.superinterfaces[i] = CharOperation.lastSegment(typeInfo.superinterfaces[i], '.');", "+\t\t\ttypeInfo.superinterfaces[i] = getSimpleName(typeInfo.superinterfaces[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f5550644e100b2767c9e26a0bbb28c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRefParameter.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80107e49069723625eae7956b787b7b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIJavaElement searchedElement)", "signatureAfterChange": " \tpublic ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIJavaElement searchedElement)", "diff": ["-\t\t\tparser = new SourceElementParser(this, factory, new CompilerOptions(JavaCore.getOptions()), doFullParse);", "+\t\t\tparser = new SourceElementParser(this, factory, new CompilerOptions(this.options), doFullParse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8014311e5a14fd0b2c09d5bb8509be1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tpublic void test0225() throws JavaModelException", "signatureAfterChange": " \tpublic void test0225() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801d7bd13a82014b1b0fe249da0e13ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 287, "methodNumberAfterChange": 290, "signatureBeforeChange": "  \tpublic void test254()", "signatureAfterChange": "  \tpublic void test254()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "802000f25852be22883c904db5443a1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "529f18963921708d494a4beb205635d63f23af75", "commitAfterChange": "42e32af12f3c1d5373a125984ae516872123a10c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public static void startingBuilding(Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": "  public static void startingBuilding(Map preferredClasspaths, Map preferredOutputs)", "diff": ["-\tPreferredClasspaths = preferredClasspaths;", "-\tPreferredOutputs = preferredOutputs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80276a660e5249d37b41256b290ed5e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8056f9ac6847e0022afbbf8f48a10f6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "ec3d2b8d7bc5e4b4b2d91a6a1cfd252341798462", "commitAfterChange": "dfdf5cdb33faed31f1d77a512774b27d49c87683", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "signatureAfterChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "diff": ["-\tif (fields != null && typeInHierarchy) {", "+\tif (fields != null) {", "-\tif (methods != null && typeInHierarchy) {", "+\tif (methods != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8078d8efc4dcf6b9e04c8a4f3cfd3fd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void test0495() throws JavaModelException", "signatureAfterChange": " \tpublic void test0495() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807a50cf97a78c0180474334f1efc4ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public boolean isEnum()", "signatureAfterChange": "  public boolean isEnum()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccEnum) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccEnum) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "808d859f5f3da978a1168fff69f05f64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 305, "methodNumberAfterChange": 305, "signatureBeforeChange": "  \tpublic void test0659() throws CoreException, JavaModelException", "signatureAfterChange": "  \tpublic void test0659() throws CoreException, JavaModelException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "808e284f2d90240833fbe890b54ff126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 275, "signatureBeforeChange": " \tpublic void test0630() throws JavaModelException", "signatureAfterChange": " \tpublic void test0630() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a71e62a1adee09bf4588f64642a687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ObjectVector.java", "commitBeforeChange": "119fb61720952839453ade6e48fab76b7b943cab", "commitAfterChange": "f8065ae134834f9481154dc34f90c12640c5c175", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public boolean contains(Object element)", "signatureAfterChange": "\r \tpublic boolean contains(Object element)", "diff": ["-}\r", "-public boolean contains(Object element) {\r", "-\tfor (int i = size; --i >= 0;)\r", "-\t\tif (element == elements[i])\r", "-\t\t\treturn true;\r", "-\treturn false;\r", "-}\r", "+\t */\r", "+\tpublic boolean contains(Object element) {\r", "+\r", "+\t\tfor (int i = this.size; --i >= 0;)\r", "+\t\t\tif (element == this.elements[i])\r", "+\t\t\t\treturn true;\r", "+\t\treturn false;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b2c935dae89e03e7e33c8cc65042c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ExpressionStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d1aea462dd4fa15948544fb7c570ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " \tpublic void testBug165525() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug165525() throws JavaModelException", "diff": ["-\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true);", "+\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(getJLS3(), this.workingCopies[0], true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d4f45ed7308a4b441a648fae0268bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "4f3cb4506b570faea11a184c16ddcb866109910f", "commitAfterChange": "792a8c6c3e374444dc583ac6a4c04af5f3cf356d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object convertToMirrorType(Object value, TypeBinding type, int kind[])", "signatureAfterChange": " \tprivate Object convertToMirrorType(Object value, TypeBinding type, int kind[])", "diff": ["-\t\t\t\treturn (VariableElement) _env.getFactory().newElement((FieldBinding) value);", "+\t\t\t\treturn _env.getFactory().newElement((FieldBinding) value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8106ca04866691198c86f3713f74b545", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " final public void bipush(byte b)", "signatureAfterChange": " final public void bipush(byte b)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tbipush \"+b); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8115f17faea4fd48f8cb4bdd47c00170", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test0004() throws JavaModelException", "signatureAfterChange": " \tpublic void test0004() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8117def56359d5ce3bfc7204a53cb23c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d182faf3c9939796c87e77e82df5eea1b2c4bb75", "commitAfterChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["-\t\tformatArrayInitializer(arrayInitializer, scope, this.preferences.insert_space_before_opening_brace_in_array_initializer || this.preferences.insert_space_after_assignment_operator);", "+\t\tformatArrayInitializer(arrayInitializer, scope, this.preferences.insert_space_before_opening_brace_in_array_initializer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81250d11e544640751d9556b9aeadf2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 358, "methodNumberAfterChange": 358, "signatureBeforeChange": " \tpublic void test0356() throws JavaModelException", "signatureAfterChange": " \tpublic void test0356() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816f55618548d207527edb92595939fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic void test0148() throws JavaModelException", "signatureAfterChange": " \tpublic void test0148() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8172e257d59d44858074fbd4efe75b66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds, int location)", "diff": ["-\tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds) {", "+\tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds, int location) {", "-\t\t\tresolveAnnotations(scope);", "+\t\t\tresolveAnnotations(scope, 0); // no defaultNullness for buggy type", "-\t\t\treturn null;\t\t\t\t\t\t\t// no useful type, but still captured dimensions into this.resolvedType", "+\t\t\treturn null;\t\t\t\t\t\t\t// (1) no useful type, but still captured dimensions into this.resolvedType", "-\t\t\t\tresolveAnnotations(scope);", "+\t\t\t\tresolveAnnotations(scope, 0); // no defaultNullness for buggy type", "-\t\t\t\treturn type;\t\t\t\t\t\t// found some error, but could recover useful type (like closestMatch)", "+\t\t\t\treturn type;\t\t\t\t\t\t// (2) found some error, but could recover useful type (like closestMatch)", "-\t\t\t\tthis.resolvedType = type; \t// no complaint, keep fully resolved type (incl. dimensions)", "-\t\t\t\tresolveAnnotations(scope);", "+\t\t\t\tthis.resolvedType = type; \t\t\t// (3) no complaint, keep fully resolved type (incl. dimensions)", "+\t\t\t\tresolveAnnotations(scope, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817c7292d7c572a05ec03082707438f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  public  String toString()", "signatureAfterChange": "  public  String toString()", "diff": ["-\tString s = \"\"; //$NON-NLS-1$", "+\tString s = Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8199671dca6ab95491001b8a01f5803a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SynchronizedStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a2e8d75362a3971e36a51fe36d87b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "af92ec761864fc440fb8211ae7d1ddf0cccd86d0", "commitAfterChange": "60205bed5116ad3496dacec47d060779de36e647", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "signatureAfterChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "diff": ["-\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null, true);\r", "+\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c5c45ae8f396bca422769056c6dfd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 217, "methodNumberAfterChange": 218, "signatureBeforeChange": " public void javadocInvalidThrowsClassName(TypeReference typeReference, int modifiers)", "signatureAfterChange": " public void javadocInvalidThrowsClassName(TypeReference typeReference, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d4686fbc97c88ed92c73d0c6ae40bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " \tpublic void test0507() throws JavaModelException", "signatureAfterChange": " \tpublic void test0507() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d869a752317d0d547a6bbaaef2acc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayCreation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic ArrayType getType()", "signatureAfterChange": "  \tpublic ArrayType getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "820865a21edb16a34d6262d62c422663", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalAnd( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalAnd( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((condConst = left.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\tif ((condConst = left.optimizedBooleanConstant()) != Constant.NotAConstant) {", "-\t\t\tif ((condConst = right.optimizedBooleanConstant()) != NotAConstant) {", "+\t\t\tif ((condConst = right.optimizedBooleanConstant()) != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "821b3969cb41642efaba724f0100fb3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "083b2c1b1ee5dda1ed44dee87f75d3006cc056c9", "commitAfterChange": "576df9e6dd9d0250a6c004ddb85431e8407887aa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  private void print()", "signatureAfterChange": "  private void print()", "diff": ["-\tMAX_DIGITS = maxFiles[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "822e2f4e228a22d6a786747b522e12e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void addAll(String[] elements)", "signatureAfterChange": "  public void addAll(SourceFile[] elements)", "diff": ["-public void addAll(String[] elements) {", "-\tfor (int i = 0, length = elements.length; i < length; i++)", "+public void addAll(SourceFile[] elements) {", "+\tfor (int i = 0, l = elements.length; i < l; i++)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8247bff7ab0a69b90b419d8cca234ac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "6ec2bf68626c3baaf2de76ad471eae21612974d2", "commitAfterChange": "5f8cfe2efe8d090091876dd299bd5bd9c4957228", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t(currentCharacter == ' ') || isWhitespace(currentCharacter); ", "+\t\t\t\t\t\t(currentCharacter == ' ') || CharOperation.isWhitespace(currentCharacter); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826bdd99da8b78284dd95be4ccb49c86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "cbf4d8b0c602d0860355a0bb315f58708fa257d2", "commitAfterChange": "0d8c4f28f9db6373751aa6d7cffbf4e0fcb51948", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void addFieldReference(char[] fieldName)", "signatureAfterChange": " public void addFieldReference(char[] fieldName)", "diff": ["+}", "+public void addFieldReference(char[] fieldName) {", "+\tthis.output.addRef(FieldPattern.createReference(fieldName));", "+}", "-}", "-public void addFieldReference(char[] fieldName){", "-\tthis.output.addRef(CharOperation.concat(FIELD_REF, fieldName));\t", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82818232512abbc8792aa799d7924cfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "9d652ce7c89dd14104c16f2c1f66d223a8b82d5f", "commitAfterChange": "88bd9c51ebfccd9b68ad18488d485e1a7c491cf8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r \r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t&& (receiver != ThisReference.ThisImplicit || !binding.isStatic()))\r", "+\t\t\t\t&& (receiver != ThisReference.ThisImplicit || !binding.isStatic())\r", "+\t\t\t\t&& binding.declaringClass.id != T_Object) // no change for Object methods\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "828723aa66ee07ba0417daa14e8015a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 177, "signatureBeforeChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "diff": ["-\t\t\t\tfieldSourceStart(field, nameRef), ", "-\t\t\t\tfieldSourceEnd(field, nameRef));\t\t\t\t", "+\t\t\t\tnodeSourceStart(field, nameRef), ", "+\t\t\t\tnodeSourceEnd(field, nameRef));\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b7d5623335c18779b04976eab68a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "91f3edc5382142e13f8351418b65563536c6670f", "commitAfterChange": "8beb6c014c6d79a132720a5abe8725a7bc30bf83", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\tcreateArgumentBindings(method, compilerOptions); // need annotations resolved already at this point", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled || compilerOptions.processAnnotations)", "+\t\tcreateArgumentBindings(method, compilerOptions); // need annotations resolved already at this point"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b8beee26f476d132bbaddd72c5bbed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " public static Test setupSuite(Class clazz)", "signatureAfterChange": " \tpublic static Test setupSuite(Class clazz)", "diff": ["+\tpublic static Test setupSuite(Class clazz) {", "+\t\tArrayList testClasses = new ArrayList();", "+\t\ttestClasses.add(clazz);", "+\t\treturn AbstractCompilerTest.suite(clazz.getName(), CompilerTestSetup.class, testClasses);", "-}", "-public static Test setupSuite(Class clazz) {", "-\treturn new RegressionTestSetup(suite(clazz));", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c895de88855340abb66db8ab996592", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 356, "methodNumberAfterChange": 380, "signatureBeforeChange": "  public MethodDeclaration convertToMethodDeclaration(ConstructorDeclaration c, CompilationResult compilationResult)", "signatureAfterChange": "  public MethodDeclaration convertToMethodDeclaration(ConstructorDeclaration c, CompilationResult compilationResult)", "diff": ["+\tm.bits = c.bits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f57521a1d87a238fa6ed4c98bf3f91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void test0656()", "signatureAfterChange": " \tpublic void test0656()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83037ab8e1473ea19066efc14441990c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "324a534b3baa7412f36ded559b05fd1012caae2a", "commitAfterChange": "6189612c7867cb146b37cc778fa8ccb247e44019", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Set<Modifier> getModifiers()", "signatureAfterChange": "  \t@Override \tpublic Set<Modifier> getModifiers()", "diff": ["+\t@Override", "-\t\t// TODO Auto-generated method stub", "-\t\treturn null;", "+\t\t// Most subclasses implement this; this default is appropriate for ", "+\t\t// PackageElement and TypeParameterElement.", "+\t\treturn Collections.emptySet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834147f9acb317bc3963eb2135191632", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void test0045() throws JavaModelException", "signatureAfterChange": " \tpublic void test0045() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8365a4dba33a22ff88c479a42b9ea70b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public void testCompletionAmbiguousFieldName() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAmbiguousFieldName() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836ff37d94f87043b65f7f67d9737305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "ff9a6e62a59125d22e135ed22d6c05fa88f30c0a", "commitAfterChange": "259b70375e2d2697a5ee4ee85873f3b8ffc6f0d8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public ReferenceBinding getMemberType(char[] typeName)", "signatureAfterChange": " public ReferenceBinding getMemberType(char[] typeName)", "diff": ["-\t\t\tif (name.length == (prefixLength + typeName.length)) { // enclosing $ typeName", "-\t\t\t\tif (CharOperation.fragmentEquals(typeName, name, prefixLength, true)) { // only check trailing portion", "-\t\t\t\t\tmemberType = ((UnresolvedReferenceBinding) memberType).resolve(environment);", "-\t\t\t\t\treturn this.memberTypes[i] = memberType;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tif (name.length == (prefixLength + typeName.length)) // enclosing $ typeName", "+\t\t\t\tif (CharOperation.fragmentEquals(typeName, name, prefixLength, true)) // only check trailing portion", "+\t\t\t\t\treturn this.memberTypes[i] = ((UnresolvedReferenceBinding) memberType).resolve(environment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8370bc45f47e982feabd8df6d162eede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryManager.java", "commitBeforeChange": "6d532e3e6bb5f869c4cf89800d8c25d215a96667", "commitAfterChange": "cea94298f193240b6230178dfa939e55ae1ab853", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void initialize()", "signatureAfterChange": "  \tprivate void initialize()", "diff": ["+\t\t\t\t\t} catch (ClasspathEntry.AssertionFailedException e) {", "+\t\t\t\t\t\tUtil.log(e, \"Exception while initializing user library \" + libName); //$NON-NLS-1$", "+\t\t\t\t\t\tinstancePreferences.remove(propertyName);", "+\t\t\t\t\t\tpreferencesNeedFlush = true;", "+\t\t\t\t\t\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837209dde121bf76ed13c0639f440ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void test0055() throws JavaModelException", "signatureAfterChange": " \tpublic void test0055() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a3ca1a0cfc4f5b64cd04e090205213", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleType.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b33b74b0832a17ecbede489af2e6b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "3aeda49982d529a7b3b4520a8ddfc77c62e6f6ba", "commitAfterChange": "756bb6bed26516f6a7f37d505e2052383d6cc457", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public int kind()", "signatureAfterChange": "  public int kind()", "diff": ["-\tif (this.typeVariables != NoTypeVariables) return GENERIC_TYPE;", "-\treturn TYPE;", "+\tif (this.typeVariables != NoTypeVariables) return Binding.GENERIC_TYPE;", "+\treturn Binding.TYPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d1ca8dd4c08ec220edf68b533fec7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "0050ce1e7f4e1aa09d2a0680eb2a656c745b9584", "commitAfterChange": "c557f8e28df32d4f3742c65d1f4547b281353194", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic IndexedFile addDocument(IDocument document)", "signatureAfterChange": "\r \tpublic IndexedFile addDocument(IDocument document)", "diff": ["-\t\tIndexedFile indexedFile= new IndexedFile(document, this.files.size() + 1);\r", "-\t\tthis.files.add(indexedFile);\r", "+\t\tIndexedFile indexedFile= this.files.add(document);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d32cd678a574565056b5045749e50a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "c2862088078b3d0bc7ba3af4b4865ffe4ca72da7", "commitAfterChange": "945521c99c895e07ea8e1e22071b43333b314109", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\tgenerateReadSequence(currentScope, codeStream, true);", "+\tgenerateReadSequence(currentScope, codeStream);", "-\t\t\t\tgenerateReadSequence(currentScope, codeStream, true);", "+\t\t\t\tgenerateReadSequence(currentScope, codeStream);", "-\t\t\t\tgenerateReadSequence(currentScope, codeStream, true);", "+\t\t\t\tgenerateReadSequence(currentScope, codeStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d50374b117a5ac7372e8cda57d28e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void test0064() throws JavaModelException", "signatureAfterChange": " \tpublic void test0064() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e06094eca38262a93502599431940d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "commitAfterChange": "89b6b4d9cc0c0dba647129d352a752277e787a7f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic DefaultCodeFormatter(Map options)", "signatureAfterChange": "  \tpublic DefaultCodeFormatter(Map options)", "diff": ["-\t\tthis(DefaultCodeFormatterOptions.getDefault(), options == null ? JavaCore.getOptions() : options);", "+\t\tthis(null, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83fb0671a0d90048f633d1f917dd238b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TagElement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842478068919666e21d8d06ea928be88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "2c216d62729c7bf0a533819d86bda0a688a39a26", "commitAfterChange": "789f8ee3dc78aa2cb74e4e857fb2da09cf6b5b4e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic ReferenceBinding[] superInterfaces()", "signatureAfterChange": " \tpublic ReferenceBinding[] superInterfaces()", "diff": ["-\t\treturn superInterfaces;", "+\t\treturn this.superInterfaces;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842c7b2f6f9d984bf7b46137f7ba919d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "9db26c7bea8b081f74e04400ef73e415034114ae", "commitAfterChange": "3ee5245339c28c9f118b2d56a8158cb4aa75c312", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public boolean isWarning()", "signatureAfterChange": " public boolean isWarning()", "diff": ["-\treturn (this.severity & ProblemSeverities.Error) == 0;", "+\treturn (this.severity & ProblemSeverities.Error) == 0", "+\t\t\t&& (this.severity & ProblemSeverities.Info) == 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "844bbe38d8780a91ca8655a3593f0397", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "d651be7766f1aad04a5e2274e1cfb4a13affa340", "commitAfterChange": "900392dc83f32684036212f916a5915ba3721662", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test005() throws JavaModelException", "signatureAfterChange": " \tpublic void test005() throws JavaModelException", "diff": ["-//\t\tString[] paramNames = method.getParameterNames();", "-//\t\tassertNotNull(paramNames);", "-//\t\tassertEquals(\"Wrong size\", 1, paramNames.length); //$NON-NLS-1$", "-//\t\tassertEquals(\"Wrong name for first param\", \"i\", paramNames[0]);\t\t //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tString[] paramNames = method.getParameterNames();", "+\t\tassertNotNull(paramNames);", "+\t\tassertEquals(\"Wrong size\", 1, paramNames.length); //$NON-NLS-1$", "+\t\tassertEquals(\"Wrong name for first param\", \"i\", paramNames[0]);\t\t //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8478fbe7e8bbfc20ec53eaf849ba48f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " \tpublic void test0166() throws JavaModelException", "signatureAfterChange": " \tpublic void test0166() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "849c546131762b4e3da4a884b9eacf8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void testCompletionAmbiguousFieldName2() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAmbiguousFieldName2() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "851243066688dc94644102aa45a19da9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "commitAfterChange": "5f9b5f6bde6ddbfdbfa46be3b81806de99313773", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\t \t \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": "\t \t \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus)", "diff": ["-\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "-\t\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NON_NULL, flowInfo);", "-\t\t\t\t\t}", "+\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NULL, flowInfo);", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NULL, flowInfo);", "-\t\t\t\t\t}", "+\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NON_NULL, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85311889e6436fc02b0677fec526a35a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test054()", "signatureAfterChange": " \tpublic void test054()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8553f712d3a27e472a0fce47f321c386", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeDetector.java", "commitBeforeChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "commitAfterChange": "f08042169ed40835df5f51519ff1fa8d2ac0cd70", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic boolean containsCompletionNode()", "signatureAfterChange": " \t \tpublic boolean containsCompletionNode()", "diff": ["-\t\treturn result;", "+\t\treturn this.result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8577324aef2477f7966655d6702f29c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 489, "methodNumberAfterChange": 489, "signatureBeforeChange": " \tpublic void test470()", "signatureAfterChange": " \tpublic void test470()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858e3eb5aac3ab66e6f756ceea31cb8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ReturnStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8597853c77cad58e6f5c80a90f760c90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \t \tpublic void test051()", "signatureAfterChange": " \t \tpublic void test051()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859a91f0ce9393565f47047b2848f575", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/SimpleNameVector.java", "commitBeforeChange": "119fb61720952839453ade6e48fab76b7b943cab", "commitAfterChange": "f8065ae134834f9481154dc34f90c12640c5c175", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public boolean contains(char[] element)", "signatureAfterChange": "\r \t\r \tpublic boolean contains(char[] element)", "diff": ["-}\r", "-public boolean contains(char[] element) {\r", "-\tfor (int i = size; --i >= 0;)\r", "-\t\tif (CharOperation.equals(element, elements[i]))\r", "-\t\t\treturn true;\r", "-\treturn false;\r", "-}\r", "+\t\r", "+\tpublic boolean contains(char[] element) {\r", "+\t\t\r", "+\t\tfor (int i = this.size; --i >= 0;)\r", "+\t\t\tif (CharOperation.equals(element, this.elements[i]))\r", "+\t\t\t\treturn true;\r", "+\t\treturn false;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859be2d87a8d28bf2bfcfb233b3c9eab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "40e5e462287b79ef847047a4bab6d5d9140df3cb", "commitAfterChange": "f9a29367ea8f3c4c9489072b937e0b301d28ae36", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \t \tprivate void completionOnSingleNameReference(ASTNode astNode, ASTNode astNodeParent, Scope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate void completionOnSingleNameReference(ASTNode astNode, ASTNode astNodeParent, Scope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false, false);", "+\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a7cc13f2f125dd60bf0e2fa8d3cb81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testNonJavaProject() throws CoreException", "signatureAfterChange": " public void testNonJavaProject() throws CoreException", "diff": ["-\t\tthis.createProject(\"P\");", "-\t\tIProject project = this.getProject(\"P\");", "+\t\tcreateProject(\"P\");", "+\t\tIProject project = getProject(\"P\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85aa109abd2ea2f532a79d7ce5d8a8b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 217, "methodNumberAfterChange": 217, "signatureBeforeChange": " \tpublic void test0215() throws JavaModelException", "signatureAfterChange": " \tpublic void test0215() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85aad76a365d9ac2a531c0006703e418", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void test0478() throws JavaModelException", "signatureAfterChange": " \tpublic void test0478() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c876828776d5bb1f789ef785147dc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "8e29a05f4cbe66a9abe7c047f5bc1b643986cd51", "commitAfterChange": "e4a4b50610c646cb6bf3bb4c3d31aa510f5cd436", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\torg.eclipse.jdt.core.dom.CompilationUnit cu = AST.convertCompilationUnit(astLevel, unit, contents, options, computeProblems, this.owner, pm);", "+\t\t\torg.eclipse.jdt.core.dom.CompilationUnit cu = AST.convertCompilationUnit(astLevel, unit, contents, options, computeProblems, this, pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e299d49199d8788c16339fbe201b4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ForStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f07a9792efb391d85c0cf227b28652", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  public void testCompletionAssignmentInMethod4() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAssignmentInMethod4() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f7e36754bf12634e39fc2d14123a6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected int matchLevel(ImportReference importRef)", "signatureAfterChange": "  protected int matchLevel(ImportReference importRef)", "diff": ["-\tif (this.pattern.qualification != null) {", "+\tif (this.pattern.qualification == null) {", "+\t\tif (this.pattern.simpleName == null) return ACCURATE_MATCH;", "-\t\tchar[] patternName = this.pattern.simpleName == null", "+\t\tfor (int i = 0, length = tokens.length; i < length; i++)", "+\t\t\tif (matchesName(this.pattern.simpleName, tokens[i])) return ACCURATE_MATCH;", "+\t} else {", "+\t\tchar[][] tokens = importRef.tokens;", "+\t\tchar[] qualifiedPattern = this.pattern.simpleName == null", "-\t\t\t\tif (CharOperation.prefixEquals(patternName, qualifiedTypeName, this.isCaseSensitive)) return POSSIBLE_MATCH;", "+\t\t\t\tif (CharOperation.prefixEquals(qualifiedPattern, qualifiedTypeName, this.isCaseSensitive)) return POSSIBLE_MATCH;", "-\t\t\t\tif (CharOperation.match(patternName, qualifiedTypeName, this.isCaseSensitive)) return POSSIBLE_MATCH;", "+\t\t\t\tif (CharOperation.match(qualifiedPattern, qualifiedTypeName, this.isCaseSensitive)) return POSSIBLE_MATCH;", "-\t} else {", "-\t\tif (this.pattern.simpleName == null) return ACCURATE_MATCH;", "-\t\tchar[][] tokens = importRef.tokens;", "-\t\tfor (int i = 0, length = tokens.length; i < length; i++)", "-\t\t\tif (matchesName(this.pattern.simpleName, tokens[i])) return ACCURATE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85fb610934968e1a5b2c3a7b930640e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void test041() throws JavaModelException", "signatureAfterChange": "  public void test041() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85fdf2baa857f0f4167cdf35521c1d79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "2b3acbf04ca04c733316af44132ec605de080f66", "commitAfterChange": "6afa93473446fb2c6b874f92c72045670997535f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tstatic boolean isAnnotationTargetAllowed(Annotation annotation, BlockScope scope, TypeBinding annotationType, int kind)", "signatureAfterChange": "  \tstatic boolean isAnnotationTargetAllowed(Annotation annotation, BlockScope scope, TypeBinding annotationType, int kind)", "diff": ["+\t\t\t\tif (scope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_8) {", "+\t\t\t\t\t// already reported as syntax error; don't report secondary problems", "+\t\t\t\t\treturn true;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ff72e2141b9f5141d8a22afb54601d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected boolean pushParamName()", "signatureAfterChange": " \tprotected boolean pushParamName()", "diff": ["-\t\t\t\t\t// store param references in specific array", "-\t\t\t\t\tif (this.invParamsPtr == -1l) {", "-\t\t\t\t\t\tthis.invParamsStack = new JavadocSingleNameReference[10];", "+\t\t\t\t\t// store invalid param references in specific array", "+\t\t\t\t\tif (this.invalidParamReferencesPtr == -1l) {", "+\t\t\t\t\t\tthis.invalidParamReferencesStack = new JavadocSingleNameReference[10];", "-\t\t\t\t\tint stackLength = this.invParamsStack.length;", "-\t\t\t\t\tif (++this.invParamsPtr >= stackLength) {", "+\t\t\t\t\tint stackLength = this.invalidParamReferencesStack.length;", "+\t\t\t\t\tif (++this.invalidParamReferencesPtr >= stackLength) {", "-\t\t\t\t\t\t\tthis.invParamsStack, 0,", "-\t\t\t\t\t\t\tthis.invParamsStack = new JavadocSingleNameReference[stackLength + AstStackIncrement], 0,", "+\t\t\t\t\t\t\tthis.invalidParamReferencesStack, 0,", "+\t\t\t\t\t\t\tthis.invalidParamReferencesStack = new JavadocSingleNameReference[stackLength + AstStackIncrement], 0,", "-\t\t\t\t\tthis.invParamsStack[this.invParamsPtr] = nameRef;", "+\t\t\t\t\tthis.invalidParamReferencesStack[this.invalidParamReferencesPtr] = nameRef;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "861bd2a131278bf691642dea34d78b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "983dc1544046316781836eb9dd37d3b1722ca24c", "commitAfterChange": "24ddb13fa55439ee887ccd883eea3b4cf5fd42fb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void readModifierRelatedAttributes()", "signatureAfterChange": " private void readModifierRelatedAttributes()", "diff": ["-\t\t\t\t\tif (CharOperation.equals(attributeName, DeprecatedName))", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.DeprecatedName))", "-\t\t\t\t\tif (CharOperation.equals(attributeName, SyntheticName))", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.SyntheticName))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8622b37acba389babb01889a36c2114f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "ca1557fedc40b4830cee4a8ab2e4e25aa2f10f0a", "commitAfterChange": "71cf21d1f82b6e6d4f06e9ca9787ac93cc80bb37", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r protected void privateRemoveEntry(LRUCacheEntry entry, boolean shuffle, boolean external)", "signatureAfterChange": "\r protected void privateRemoveEntry(LRUCacheEntry entry, boolean shuffle, boolean external)", "diff": ["-\t\t\t// close will return here with external==true when\r", "-\t\t\t// notifying buffer close() if able to do so.\r", "-\t\t\tclose(entry);\r", "-\t\t\treturn;\r", "+\t\t\tif (!close(entry)) return;\r", "+\t\t\t// buffer close will recursively call #privateRemoveEntry with external==true\r", "+\t\t\t// thus entry will already be removed if reaching this point.\r", "+\t\t\tif (fEntryTable.get(entry) == null) return;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863e12f9c5bc7babb2a066f3fc5e6ea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 321, "signatureBeforeChange": " \tpublic void test0319() throws JavaModelException", "signatureAfterChange": " \tpublic void test0319() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "864fd532897de22d6f9e0b7e323c0e16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3212eccc80f7f5dabd17714699b5e01450bb4d75", "commitAfterChange": "f6c083b00fa1a8b6478dcf6ebef3275913d79e66", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression expression)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression expression)", "diff": ["-\t\t\t\t&& ((expression.left.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.ParenthesizedMASK) == 0)) {", "+\t\t\t\t&& ((expression.left.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.ParenthesizedMASK) == 0)", "+\t\t\t\t&& (OperatorIds.PLUS == expressionOperatorID)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8650c4649a428de7db9341df9ef1ec66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " private final void concatNodeLists()", "signatureAfterChange": " private final void concatNodeLists()", "diff": ["-\tastLengthStack[astLengthPtr - 1] += astLengthStack[astLengthPtr--];", "+\tthis.astLengthStack[this.astLengthPtr - 1] += this.astLengthStack[this.astLengthPtr--];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86556c2179bbfba24d4102ce64cb8c4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test0040() throws JavaModelException", "signatureAfterChange": " \tpublic void test0040() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a1c27538585a190d2dbe0a03149550", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void test0010() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0010() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c4c2722144bb2d89ad059c261a78a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public MethodBinding[] getMethods(char[] selector)", "signatureAfterChange": " public MethodBinding[] getMethods(char[] selector)", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86dc7acf8328b6a770a31f6dfd7b45eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "b8c2347031edf431b74ee176b67b65bece3e7d69", "commitAfterChange": "bafbb633d88463daeda3b6346c0ba869c26d4bef", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic final Binding getBinding( \t\tchar[][] compoundName, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic final Binding getBinding( \t\tchar[][] compoundName, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tbinding, ", "+\t\t\t\t\t\t\t(ReferenceBinding) binding, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e8c7f41b5c6c3c49dea106f18b0d82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test0446() throws JavaModelException", "signatureAfterChange": " \tpublic void test0446() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f24c59ce70ef2776128c3f3d97acd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 312, "signatureBeforeChange": " public void test232_sourcepath_vs_classpath()", "signatureAfterChange": " public void test232_sourcepath_vs_classpath()", "diff": ["-\t\tfalse /* shouldFlushOutputDirectory */);", "+\t\tfalse /* shouldFlushOutputDirectory */,", "+\t\tnull /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f7d09856af9b65e6f71f3e54b925a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testRemoveExclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testRemoveExclusionOnPackage() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"p\"});", "-\tthis.createFolder(\"/P/src/p\");", "+\tsetClasspath(new String[] {\"/P/src\", \"p\"});", "+\tcreateFolder(\"/P/src/p\");", "-\tthis.setClasspath(new String[] {\"/P/src\", \"\"});", "+\tsetClasspath(new String[] {\"/P/src\", \"\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "870e91bc70a78b8b2a42af7bdae06b47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 53, "signatureBeforeChange": "  public boolean isInterface()", "signatureAfterChange": "  public boolean isInterface()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccInterface) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccInterface) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8716f3e9a0591b3d77b27e6459dddc10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic StringBuffer printBody(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printBody(int indent, StringBuffer output)", "diff": ["-\t\tif (isAbstract() || (this.modifiers & AccSemicolonBody) != 0) ", "+\t\tif (isAbstract() || (this.modifiers & ExtraCompilerModifiers.AccSemicolonBody) != 0) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871ec3fedd51893c391f2d0243f96da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 258, "signatureBeforeChange": " public void test0248() throws JavaModelException", "signatureAfterChange": " public void test0248() throws JavaModelException", "diff": ["-\t\t\t\t\"oneTwoThree[METHOD_REF]{oneTwoThree(), Lcamelcase.ImportedType;, ()V, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"oTTMethod[METHOD_REF]{oTTMethod(), Lcamelcase.ImportedType;, ()V, oTTMethod, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"oneTwoThree[METHOD_REF]{oneTwoThree(), Lcamelcase.ImportedType;, ()V, oneTwoThree, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTMethod[METHOD_REF]{oTTMethod(), Lcamelcase.ImportedType;, ()V, oTTMethod, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87273afc822425175ceada58ef37f6a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 73, "signatureBeforeChange": " public char[] sourceName()", "signatureAfterChange": " public char[] sourceName()", "diff": ["-\treturn sourceName;", "+\treturn this.sourceName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "872cc702dbb60062de754342043ca7ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " \tpublic void test0572() throws JavaModelException", "signatureAfterChange": " \tpublic void test0572() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8750fb4f8b3ff6acb3f73e2916d581d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "402653abbf6df07a839776c5127b35c1c823b730", "commitAfterChange": "5dab0398c0d6854f764e312cc3cc66813d6d2f2e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t(currentCharacter == ' ') || Character.isWhitespace(currentCharacter); ", "+\t\t\t\t\t\t(currentCharacter == ' ') || isWhitespace(currentCharacter); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8761629c096e98048e61e664b18410ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic ASTNode getParent()", "signatureAfterChange": "  \tpublic ASTNode getParent()", "diff": ["-\t\treturn parent;", "+\t\treturn this.parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878bc1d4c1763ac378f9efa4eb06ec4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void test0475() throws JavaModelException", "signatureAfterChange": " \tpublic void test0475() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878c622ff3baed05c6e67d7577450440", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tsynchronized IBinding resolveReference(MemberRef ref)", "signatureAfterChange": " \tsynchronized IBinding resolveReference(MemberRef ref)", "diff": ["-\t\t/*", "-\t\tif (ref.getParent() != null) {", "-\t\t\tJavadoc docComment = ref.getJavadoc();", "-\t\t\tif (docComment != null) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Javadoc javadoc = (org.eclipse.jdt.internal.compiler.ast.Javadoc) this.newAstToOldAst.get(docComment);", "-\t\t\t\tif (javadoc != null) {", "-\t\t\t\t\tint start = ref.getStartPosition();", "-\t\t\t\t\t// search for compiler ast nodes with same position", "-\t\t\t\t\tif (ref.getName() == null) {", "-\t\t\t\t\t\tfor (int i=0; i<javadoc.thrownExceptions.length; i++) {", "-\t\t\t\t\t\t\tTypeReference typeRef = javadoc.thrownExceptions[i];", "-\t\t\t\t\t\t\tif (typeRef.sourceStart==start) {", "-\t\t\t\t\t\t\t\treturn getTypeBinding(typeRef.resolvedType);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tfor (int i=0; i<javadoc.references.length; i++) {", "-\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = javadoc.references[i];", "-\t\t\t\t\t\tif (expression.sourceStart==start) {", "-\t\t\t\t\t\t\tif (expression instanceof TypeReference) {", "-\t\t\t\t\t\t\t\treturn getTypeBinding(expression.resolvedType);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\telse if (expression instanceof JavadocFieldReference) {", "-\t\t\t\t\t\t\t\treturn getVariableBinding(((JavadocFieldReference)expression).binding);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\t*/", "-\t\t\treturn getVariableBinding(((JavadocFieldReference)expression).binding);", "+\t\t\tJavadocFieldReference fieldRef = (JavadocFieldReference) expression;", "+\t\t\tif (fieldRef.methodBinding != null) {", "+\t\t\t\treturn getMethodBinding(fieldRef.methodBinding);", "+\t\t\t}", "+\t\t\treturn getVariableBinding(fieldRef.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b148af555e910ac8a776b11f213bf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void test0460() throws JavaModelException", "signatureAfterChange": " \tpublic void test0460() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b1961de30875aed2007d240a32bc9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 275, "signatureBeforeChange": " \tpublic void test0273() throws JavaModelException", "signatureAfterChange": " \tpublic void test0273() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b8d1a9dd2d3fb8a1abeb748fe06d2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": " \tpublic void test0210() throws JavaModelException", "signatureAfterChange": " \tpublic void test0210() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c402a19f898d497ef9d3db3b38ca15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "fc721b0d05a1b41882a9e789b6c18dcfadfbf732", "commitAfterChange": "69458def708eedff53dace674666304d76a16916", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testDefaultFlag2() throws JavaModelException", "signatureAfterChange": " public void testPackageDefaultFlag2() throws JavaModelException", "diff": ["- */", "-public void testDefaultFlag2() throws JavaModelException {", "-\tIType type = this.cu.getType(\"X\");", "-\tassertTrue(\"X should have flags\", !Flags.isDefault(type.getFlags()));", "-}", "+ */", "+public void testPackageDefaultFlag2() throws JavaModelException {", "+\tIType type = this.cu.getType(\"X\");", "+\tassertTrue(\"X should not be package default\", !Flags.isPackageDefault(type.getFlags()));", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ec1bffebcfa8596a1b783faf3fc9c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 198, "methodNumberAfterChange": 198, "signatureBeforeChange": " \tpublic void test0196() throws JavaModelException", "signatureAfterChange": " \tpublic void test0196() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f22cde8b73a7a52c1a6fabd4b1370e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "43191caefaa8fabb3434b14cf3063f1b06673205", "commitAfterChange": "7484e25e299b8203b28cf436ac2de883b2f5dd8e", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  private MethodBinding [] getInterfaceAbstractContracts(Scope scope) throws InvalidInputException", "signatureAfterChange": "  private MethodBinding [] getInterfaceAbstractContracts(Scope scope) throws InvalidInputException", "diff": ["-\t\tfor (int j = 0; j < contractsCount; j++) {", "-\t\t\tif (contracts[j] == null)", "-\t\t\t\tcontinue;", "-\t\t\tif (MethodVerifier.doesMethodOverride(method, contracts[j], scope.environment())) {", "+\t\tfor (int j = 0; j < contractsCount;) {", "+\t\t\tif ( contracts[j] != null && MethodVerifier.doesMethodOverride(method, contracts[j], scope.environment())) {", "-\t\t\t\tif (j < contractsCount)", "+\t\t\t\tif (j < contractsCount) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\tj++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87fa0121e3c8c1299b7bbb5dfbf01d19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "c9d2c7d4276b8b0f65a3b8bbfa4009e8632940f9", "commitAfterChange": "a7597c75bca1c45f4d8e783f2e1e4c373a32d9bf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "signatureAfterChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "diff": ["-\t\t\t\treturn project.getPackageFragmentRoot(this.containerPaths[index]);", "+\t\t\t\tIResource resource = JavaModel.getWorkspaceTarget(new Path(jarPath));", "+\t\t\t\tif (resource != null)", "+\t\t\t\t\treturn project.getPackageFragmentRoot(resource);", "+\t\t\t\treturn project.getPackageFragmentRoot(jarPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8806c397f437ec089d9e7d3db03906f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\tif (typeVariables == NoTypeVariables) { // check generic", "+\t\tif (typeVariables == Binding.NO_TYPE_VARIABLES) { // check generic"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881c3f33f3482f1657c3747ff7aba1df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3212eccc80f7f5dabd17714699b5e01450bb4d75", "commitAfterChange": "f6c083b00fa1a8b6478dcf6ebef3275913d79e66", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 258, "signatureBeforeChange": " \tpublic void _test0618() throws JavaModelException", "signatureAfterChange": " \tpublic void test0618() throws JavaModelException", "diff": ["-\tpublic void _test0618() throws JavaModelException {", "+\tpublic void test0618() throws JavaModelException {", "-\t\t\tassertEquals(\"Wrong operator\", InfixExpression.Operator.PLUS, infixExpression.getOperator());", "+\t\t\tassertEquals(\"Wrong operator\", InfixExpression.Operator.PLUS, infixExpression2.getOperator());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "882b80c19de2efd543dd75ff63b7c8c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "be2cc93d845983531740f996d21ff395fe56b532", "commitAfterChange": "e28f43e10ef52ae9d2879a1a39bdff7cce868319", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 256, "signatureBeforeChange": " \tpublic void test0617() throws JavaModelException", "signatureAfterChange": " \tpublic void test0617() throws JavaModelException", "diff": ["-\t\t\tASTNode node = buildAST(", "-\t\t\t\tcontents,", "-\t\t\t\tworkingCopy);", "+\t\t\tworkingCopy.getBuffer().setContents(contents.toCharArray());", "+\t\t\tASTNode node = runConversion(AST.JLS3, workingCopy, true);\t\t\t", "-\t\t\tassertProblemsSize(unit, 0);", "+\t\t\tString expectedOutput = \"Dead code\";", "+\t\t\tassertProblemsSize(unit, 1, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883004831c66ac151c806b5289df16ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testRenameResourceExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameResourceExcludedCompilationUnit() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tIFile file = this.createFile(", "+\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tIFile file = createFile("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883c8ae06c26e8bd0aaa79c5af1ca80a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "bdb5fd6b326428cc9f0c1c9c5974b9a701aacf91", "commitAfterChange": "b32e19a51dc51c8f48a8148ad21af35d765d650d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "signatureAfterChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "diff": ["-    \tOutputStream binaryOut = new BinaryFileOutputStream(file, _env);", "+    \tOutputStream binaryOut = new EncodedFileOutputStream(file, _env, charsetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8888db223d42364935ab9814b6a01551", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t */", "-\tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException {", "-\t\tNameLookup lookup = newNameLookup(owner);", "-\t\treturn lookup.findType(", "-\t\t\ttypeQualifiedName, ", "-\t\t\tpackageName,", "-\t\t\tfalse,", "-\t\t\tNameLookup.ACCEPT_ALL);", "-\t}\t", "+\t */", "+\tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException {", "+\t\tNameLookup lookup = newNameLookup(owner);", "+\t\treturn findType(", "+\t\t\tpackageName,", "+\t\t\ttypeQualifiedName, ", "+\t\t\tlookup,", "+\t\t\tfalse, // do not consider secondary types", "+\t\t\tnull);", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88bff5c494e7bce01d2479570559dfc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 319, "methodNumberAfterChange": 319, "signatureBeforeChange": " \tpublic void test0317() throws JavaModelException", "signatureAfterChange": " \tpublic void test0317() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e86f969a7ea70dac6498f11be34420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "7315a9946428ac17ed2f3c53c5f292f76322b904", "commitAfterChange": "62f8132aa6e66bc79d2cfcc69b7efa69d325d62b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "signatureAfterChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "diff": ["-\t\t\t\tboolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0 || FORCE_NEW_COMMENTS_FORMAT;", "+\t\t\t\tboolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0; // || FORCE_NEW_COMMENTS_FORMAT;", "-\t\t\t\tincludeComments =  (kind & F_INCLUDE_COMMENTS) != 0 || FORCE_NEW_COMMENTS_FORMAT;", "+\t\t\t\tincludeComments =  (kind & F_INCLUDE_COMMENTS) != 0; // || FORCE_NEW_COMMENTS_FORMAT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8908e492dd98c6844bf4c07a52e4aee9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "c768bb705d25a055607160ce11d239f196ca5653", "commitAfterChange": "7daedb60ca274e13e941cb615b58a6c663d3ad95", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\t\tboolean mustResolve = ((InternalSearchPattern)this.pattern).mustResolve || possibleMatch.nodeSet.mustResolve;", "-\t\tif (bindingsWereCreated &&  mustResolve) {", "+\t\tboolean mustResolve = (((InternalSearchPattern)this.pattern).mustResolve || possibleMatch.nodeSet.mustResolve) && bindingsWereCreated;", "+\t\tif (mustResolve) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "892535347fc1c0dce623acc3297fcaa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic void test0090() throws JavaModelException", "signatureAfterChange": " \tpublic void test0090() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8927a92fe5a8658a3f2ba4af532dab45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic void test0566() throws JavaModelException", "signatureAfterChange": " \tpublic void test0566() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893293c4265d41adea525fa588ac88f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 48, "signatureBeforeChange": " public final boolean isDefault()", "signatureAfterChange": " public final boolean isDefault()", "diff": ["-\treturn (modifiers & (ClassFileConstants.AccPublic | ClassFileConstants.AccProtected | ClassFileConstants.AccPrivate)) == 0;", "+\treturn (this.modifiers & (ClassFileConstants.AccPublic | ClassFileConstants.AccProtected | ClassFileConstants.AccPrivate)) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "894aea56828ea257f8fbe1152b5732d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean compoundAssignment)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean compoundAssignment)", "diff": ["-\tif (this.resolvedType != null && (this.resolvedType.tagBits & TagBits.AnnotationNonNull) != 0) {", "+\tif ((this.resolvedType.tagBits & TagBits.AnnotationNonNull) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895e4b44784d19c7fca4b8a6cff80e7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": "  public void invokeJavaLangClassGetComponentType()", "signatureAfterChange": "  public void invokeJavaLangClassGetComponentType()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangClassConstantPoolName,", "-\t\t\tQualifiedNamesConstants.GetComponentType,", "-\t\t\tQualifiedNamesConstants.GetComponentTypeSignature);", "+\t\t\tConstantPool.JavaLangClassConstantPoolName,", "+\t\t\tConstantPool.GetComponentType,", "+\t\t\tConstantPool.GetComponentTypeSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897305297ca865decd063ac399b96d80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BaseTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\treturn new String(this.constantPoolName) + \" (id=\" + this.id + \")\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\treturn this.hasTypeAnnotations() ? annotatedDebugName() : new String(readableName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89757bf27361a790152ab0156fb01c4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": " \tpublic void test0377() throws JavaModelException", "signatureAfterChange": " \tpublic void test0377() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899fc80fff2c0a986340cb80545698b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void test0464() throws JavaModelException", "signatureAfterChange": " \tpublic void test0464() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ac26dca9fc6cf67e9c6cc16b1e6e18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testUnderlyingResourceNonExistingPkgFragment() throws CoreException", "signatureAfterChange": " public void testUnderlyingResourceNonExistingPkgFragment() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tIPackageFragment pkg = this.getPackage(\"/P/src/nonExisting\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tIPackageFragment pkg = getPackage(\"/P/src/nonExisting\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b4bf783ae88b1a4ded74a0771163e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic IQueryResult[] queryInDocumentNames(String word) throws IOException", "signatureAfterChange": " \tpublic IQueryResult[] queryInDocumentNames(String word)", "diff": ["-\tpublic IQueryResult[] queryInDocumentNames(String word) throws IOException {", "+\tpublic IQueryResult[] queryInDocumentNames(String word) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89d47b63b5e241ac0ddeb1e40c008503", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " public void initialize()", "signatureAfterChange": " public void initialize()", "diff": ["+\tscanner.todoCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89dc0894849bd3281247a9bbbfb80cf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": " \tpublic void test0720() throws JavaModelException", "signatureAfterChange": " \tpublic void test0720() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89fc30f0599df35c3eb05f79052ce4df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "2b517264b2aba8f263e96f0bb8dc3d5ae288c823", "commitAfterChange": "1db6cbd08071fd387d5c2eab07da46a873d0aaff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tif (this.binding.declaringClass.isMemberType() && !this.binding.declaringClass.isStatic()) {", "+\t\t// allocating a non-static member type without an enclosing instance of parent type", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=335845", "+\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ff71fc3a08c84739746e282b731a6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a045af3857954e0ce90d214286ec8aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "72b8f19c3980f43b00de7d8f8caf37994b284012", "commitAfterChange": "96795c16869fdfb5393518bf63e67bf064e0333e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\tif (true) {", "-\t\t\treturn allTests();", "-\t\t}", "-\t\treturn setUpTest(new ASTRewritingMethodDeclTest(\"testMethodDeclChanges\"));", "+\t\treturn allTests();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a10a97d991a633d2cfacb77b6b155f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/IncrementalTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testMoveMemberType() throws JavaModelException", "signatureAfterChange": "  \tpublic void testMoveMemberType() throws JavaModelException", "diff": ["+\t\tenv.removeProject(projectPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a75e5c7f6d52d2263bf67c07f76a10f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\tif (!currentMethod.isStatic())", "-\t\t\t\tcheckNullContractCompatibility(currentMethod, inheritedMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8d472ca823a57255d02e6f60769a3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 230, "signatureBeforeChange": " public void javadocUndeclaredParamTagName(char[] token, int sourceStart, int sourceEnd, int modifiers)", "signatureAfterChange": " public void javadocUndeclaredParamTagName(char[] token, int sourceStart, int sourceEnd, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9602d3598b48d81ea753fc1a8ecdea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 518, "methodNumberAfterChange": 518, "signatureBeforeChange": " \t \tpublic void test499()", "signatureAfterChange": " \t \tpublic void test499()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa9393e70a724c80f1da83ca8740e87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 35, "signatureBeforeChange": " public boolean hasModifiedResource()", "signatureAfterChange": " \tpublic boolean hasModifiedResource()", "diff": ["- */", "-public boolean hasModifiedResource() {", "-\treturn !this.isReadOnly() && this.hasModifiedResource;", "-}", "+\t */", "+\tpublic boolean hasModifiedResource() {", "+\t\treturn !this.isReadOnly() && this.getAttribute(\"hasModifiedResource\") != null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab58d94d46dd81b09e463174608429a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " public void invokeJavaLangIllegalArgumentExceptionStringConstructor()", "signatureAfterChange": " public void invokeJavaLangIllegalArgumentExceptionStringConstructor()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangIllegalArgumentExceptionConstantPoolName,", "-\t\t\tQualifiedNamesConstants.Init,", "-\t\t\tQualifiedNamesConstants.StringConstructorSignature);", "+\t\t\tConstantPool.JavaLangIllegalArgumentExceptionConstantPoolName,", "+\t\t\tConstantPool.Init,", "+\t\t\tConstantPool.StringConstructorSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aba07ad6c81d642ecfda44668c05010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testCompletionOnClassFile() throws JavaModelException", "signatureAfterChange": " public void testCompletionOnClassFile() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8abc98ce8a9b357e5a939eb1de8d2d96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/PostfixExpression.java", "commitBeforeChange": "5b6dd37b3f6594fcb6694566bc7450985b1bde55", "commitAfterChange": "cd2b61036e3927f1fe000c47bcd4c2b236df73f6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String operatorToString()", "signatureAfterChange": "  public String operatorToString()", "diff": ["-", "-\tpublic String operatorToString() {", "-\t\tswitch (operator) {", "-\t\t\tcase PLUS :", "-\t\t\t\treturn \"++\"; //$NON-NLS-1$", "-\t\t\tcase MINUS :", "-\t\t\t\treturn \"--\"; //$NON-NLS-1$", "-\t\t} ", "-\t\treturn \"unknown operator\"; //$NON-NLS-1$", "-\t}", "+public String operatorToString() {", "+\tswitch (this.operator) {", "+\t\tcase PLUS :", "+\t\t\treturn \"++\"; //$NON-NLS-1$", "+\t\tcase MINUS :", "+\t\t\treturn \"--\"; //$NON-NLS-1$", "+\treturn \"unknown operator\"; //$NON-NLS-1$", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ad8a5c944a7ab0a3c7ae6055d0ffaa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 214, "signatureBeforeChange": " \tpublic void test0212() throws JavaModelException", "signatureAfterChange": " \tpublic void test0212() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af26d6ca08e6a1072bee10d691941b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "168490e50ca546e3f1ae8e13e13d000625f50b16", "commitAfterChange": "e282ddab29d814ffa1b5ad524aead5edb8a36955", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public boolean isBoundParameterizedType()", "signatureAfterChange": " public boolean isBoundParameterizedType()", "diff": ["-\treturn (this.tagBits & TagBits.IsBoundParameterizedType) != 0;", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b4b18870dc7997a17a7e2751d4c2f48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 198, "signatureBeforeChange": " final public void jsr(Label lbl)", "signatureAfterChange": " final public void jsr(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tjsr\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5bdd97cd7b83f826975a53e249bed5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/BlocksIndexInput.java", "commitBeforeChange": "bdfcbb6fac28ce2d615a792c6b96756fd4d8d082", "commitAfterChange": "d285a739d23e3f82b667be77d5bebf56b7f90214", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void moveToNextFile() throws IOException", "signatureAfterChange": " \tpublic void moveToNextFile()", "diff": ["-\tpublic void moveToNextFile() throws IOException {", "+\tpublic void moveToNextFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b62d16f8e36dabe448758a4690e8f38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ad417ea6305840d17e55c8bdbbc5a3a9cd7742d3", "commitAfterChange": "5f4d09d81cc02220ed58c513d25ed70f79b83bf4", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " protected void consumeClassBodyopt()", "signatureAfterChange": " protected void consumeClassBodyopt()", "diff": ["-\tthis.endPosition = this.scanner.startPosition - 1;", "+\tthis.endPosition = this.rParenPos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7a648e3688277c523bfe38f2df75b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void test0037() throws JavaModelException", "signatureAfterChange": " \tpublic void test0037() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8246e3881ebf154c961124bd4e04b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "af330be1052a8d3b1a31b10596d367fb42f89f79", "commitAfterChange": "b3a6b4ddf9d5bd5365b7e897739a001bb2ff860b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " void checkMethods()", "signatureAfterChange": " void checkMethods()", "diff": ["-\t\t\t\t\tif (doesSubstituteMethodOverride(inheritedMethod, otherInheritedMethod)) {", "-\t\t\t\t\t\tmatchingInherited[++index] = otherInheritedMethod;", "-\t\t\t\t\t\tfoundMatch[j] = 1; // cannot null out inherited methods", "+\t\t\t\t\tif (inheritedMethod.declaringClass != otherInheritedMethod.declaringClass", "+\t\t\t\t\t\t&& doesSubstituteMethodOverride(inheritedMethod, otherInheritedMethod)) {", "+\t\t\t\t\t\t\tmatchingInherited[++index] = otherInheritedMethod;", "+\t\t\t\t\t\t\tfoundMatch[j] = 1; // cannot null out inherited methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9220ac7f7c319236794de4e2d3c1a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "580c728201df4f59e1400e6feeeb245b12a49163", "commitAfterChange": "a43591ed0206cd23fd90053f7c1436df8e9d56a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\t\t\tif (raisedException.isCompatibleWith(scope.getJavaLangRuntimeException())", "-\t\t\t\t\t\t|| raisedException.isCompatibleWith(scope.getJavaLangError()))", "+\t\t\t\t\tif (raisedException.isUncheckedException(false))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9286b633c47cb0ff7428ce0c999298", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testBug91772() throws Exception", "signatureAfterChange": " public void testBug91772() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9348b7e2f7c4eb2a7e3841e6dd66a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 219, "signatureBeforeChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "signatureAfterChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "diff": ["-\t\tif (!this.options.ignoreMethodBodies) {", "-\t\t\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "+\t\tif ((length = this.astLengthStack[this.astLengthPtr--]) != 0) {", "+\t\t\tif (this.options.ignoreMethodBodies) {", "+\t\t\t\tthis.astPtr -= length;", "+\t\t\t} else {", "-\t\t} else {", "-\t\t\tlength = this.astLengthStack[this.astLengthPtr--];", "-\t\t\tthis.astPtr -= length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc3eb0582bd87ac3e0e07637362f636", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "f5104ea8b01f4418b9868445123db4c689077583", "commitAfterChange": "93bd13e4d18eed8c7512ddd895c27daf962fe66c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private void rebuildIndex(String indexName, IPath path)", "signatureAfterChange": " private void rebuildIndex(String indexName, IPath path)", "diff": ["+\tif (VERBOSE)", "+\t\tJobManager.verbose(\"-> request to rebuild index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bca11c35b648b8fec7224c0a87860e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 515, "methodNumberAfterChange": 515, "signatureBeforeChange": " \tpublic void test496()", "signatureAfterChange": " \tpublic void test496()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bd1ea1f4d98a1567fb36e92610f594b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testAddExternalPackage() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddExternalPackage() throws JavaModelException, CoreException", "diff": ["-public void testAddExternalPackage() throws JavaModelException, CoreException, IOException {", "+public void testAddExternalPackage() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0705a485c327c97dcc73e1bd18246d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testMethodWithError3() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError03() throws CoreException", "diff": ["-public void testMethodWithError3() throws JavaModelException, CoreException {", "+public void testMethodWithError03() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c15aeff58cc8254fe1ff1b05052ed60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " \tpublic void test0509() throws JavaModelException", "signatureAfterChange": " \tpublic void test0509() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4c65a9410c87c72bf3493283e87534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/JarFileEntryDocument.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public byte[] getByteContent() throws IOException", "signatureAfterChange": " public byte[] getByteContent()", "diff": ["-public byte[] getByteContent() throws IOException {", "+public byte[] getByteContent() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c576ea00764aa8a2c9814769e534d27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "0b02c3d2ffd584756ad422cfb82a686c4f949459", "commitAfterChange": "27ae7cc0d5a75c1449565f71fee06411744b67e7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate void assertBindingCreated(String[] pathAndSources, final String expectedKey) throws JavaModelException", "signatureAfterChange": " \tprivate void assertBindingCreated(String[] pathAndSources, final String expectedKey) throws JavaModelException", "diff": ["-\t\t\t\tresolveASTs(dummyWorkingCopies, new String[] {}, requestor, this.owner);", "+\t\t\t\tresolveASTs(dummyWorkingCopies, new String[] {}, requestor, getJavaProject(\"P\"), this.owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c7e4430b943d405f6d041ed2e9c122a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " \tpublic void test0158() throws JavaModelException", "signatureAfterChange": " \tpublic void test0158() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c91fb7c792878aa92c1623955894e6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BodyDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void setModifiers(int modifiers)", "signatureAfterChange": "  \tpublic void setModifiers(int modifiers)", "diff": ["+\t\t// more efficient than just calling supportedOnlyIn2() to check", "+\t\tif (this.modifiers != null) {", "+\t\t\tsupportedOnlyIn2();", "+\t\t}", "-\t\tthis.modifiers = modifiers;", "+\t\tthis.modifierFlags = modifiers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd057a5f6d7b378ec5f2008e4048dff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void test0451() throws JavaModelException", "signatureAfterChange": " \tpublic void test0451() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd147a91b8d36999a46aa45b26ae672", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnumDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cdef55ece8c69198bc95d77cdc4a9a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ThisExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf1b7eded8033cc11eeaab6156872aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "bf04e838cc334e741daafee97024413585e12e6c", "commitAfterChange": "fce7b673537005f0506a47431fe9e778017314b4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  private static File createMemLogFile()", "signatureAfterChange": "  private static File createMemLogFile()", "diff": ["+\tPrintStream stream = null;", "-\t\tPrintStream stream = new PrintStream(new FileOutputStream(logFile, true));", "-\t\tif (stream != null) {", "-\t\t\tif (fileExist) {", "-\t\t\t\tstream.println();", "-\t\t\t}", "-\t\t\t// Log date and time", "-\t\t\tDate date = new Date(System.currentTimeMillis());", "-\t\t\tstream.println(\"Tests:\\t\" + STORE_MEMORY);", "-\t\t\tstream.println(\"Date:\\t\" + DateFormat.getDateInstance(3).format(date));", "-\t\t\tstream.println(\"Time:\\t\" + DateFormat.getTimeInstance(3).format(date));", "-\t\t\t// Log columns title", "-\t\t\tstream.print(\"Class\");", "-\t\t\tif (ALL_TESTS_LOG) stream.print(\"\\tTest\");", "-\t\t\tstream.print(\"\\tUsed\\tTotal\\tMax\");", "+\t\tstream = new PrintStream(new FileOutputStream(logFile, true));", "+\t\tif (fileExist) {", "-\t\t\tstream.close();", "-\t\t\tSystem.out.println(\"Log file \" + logFile.getPath() + \" opened.\");", "-\t\t\treturn logFile;", "-\t\t} else {", "-\t\t\tSystem.err.println(\"Cannot open file \" + logFile.getPath());", "+\t\t// Log date and time", "+\t\tDate date = new Date(System.currentTimeMillis());", "+\t\tstream.println(\"Tests:\\t\" + STORE_MEMORY);", "+\t\tstream.println(\"Date:\\t\" + DateFormat.getDateInstance(3).format(date));", "+\t\tstream.println(\"Time:\\t\" + DateFormat.getTimeInstance(3).format(date));", "+\t\t// Log columns title", "+\t\tstream.print(\"Class\");", "+\t\tif (ALL_TESTS_LOG) stream.print(\"\\tTest\");", "+\t\tstream.print(\"\\tUsed\\tTotal\\tMax\");", "+\t\tstream.println();", "+\t\tstream.close();", "+\t\tSystem.out.println(\"Log file \" + logFile.getPath() + \" opened.\");", "+\t\treturn logFile;", "+\t\tSystem.err.println(\"Cannot open file \" + logFile.getPath());", "+\t} finally {", "+\t\tif (stream != null) {", "+\t\t\tstream.close();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d504bf2e169d89f9e1d547bb8d324e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d64c4f5450853b75dfff9c739fd6240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionRecoveryTest.java", "commitBeforeChange": "523ea3b2c64428d6b9f9d9783cbb0776a4263765", "commitAfterChange": "19e8b378f3973cba5b6ddd20330ed251678b8a37", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test15()", "signatureAfterChange": " public void test15()", "diff": ["-\t\tNONE,", "+\t\t\"\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d886eb05fdca3b6a700dabca43eb0b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "69622d139cf7be8059928288f19c2f5b2d55bdc5", "commitAfterChange": "bd0b42da240c9e3160dab0f23f741fededbd0813", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public  final boolean atEnd()", "signatureAfterChange": "  public  final boolean atEnd()", "diff": ["-\treturn source.length == currentPosition;", "+\treturn this.source.length == this.currentPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db763707dc3308ca1c8aefb691ef099", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dc1ad2815fac9e89e05c7cb46ce9b7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void buildTypeBindings(AccessRestriction accessRestriction)", "signatureAfterChange": " void buildTypeBindings(AccessRestriction accessRestriction)", "diff": ["-\t\t\t\tcontinue nextType;", "+\t\t\t\t// tolerate faulty main type name (91091), allow to proceed into type construction"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dc4b01daf55a0025fec812298d8e4f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t\t\t\tReferenceBinding superclassBound = hasSubstitution ? (ReferenceBinding)Scope.substitute(substitution, this.superclass) : this.superclass;", "+\t\t\t\t\tif (wildcardBound == this) ", "+\t\t\t\t\t\treturn TypeConstants.OK;", "+\t\t\t\t\tReferenceBinding superclassBound = hasSubstitution ? (ReferenceBinding)Scope.substitute(substitution, this.superclass) : this.superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8deaf01272d08bac4288bd78895da853", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void exitEnum(int declarationEnd)", "signatureAfterChange": " public void exitEnum(int declarationEnd)", "diff": ["- */", "-\tcurrentType.setDeclarationSourceEnd(declarationEnd);", "-\tif (currentType.parent != null) {", "-\t\tcurrentType = currentType.parent;", "-\t}", "+\texitType(declarationEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e163e52901eed386bc4154bcd23d584", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchMultipleProjectsTests.java", "commitBeforeChange": "e2d62be5919e0afa7d0c6b706f45d3f762e7e319", "commitAfterChange": "ecbb0b192bb25bb894c5523fc7cb552ef6ea8144", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testMethodOccurences() throws CoreException", "signatureAfterChange": " public void testMethodOccurences() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSearchResults(", "-\t\t\tresultCollector.toString());", "+\t\t\tresultCollector);", "+\t} finally {", "+\t\tdeleteProject(\"P1\");", "+\t\tdeleteProject(\"P2\");", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e2dab9e03e6850fdc27ac1e96343c2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "0b02c3d2ffd584756ad422cfb82a686c4f949459", "commitAfterChange": "27ae7cc0d5a75c1449565f71fee06411744b67e7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void resolveASTs(ICompilationUnit[] cus, TestASTRequestor requestor)", "signatureAfterChange": " \t \tprivate void resolveASTs(ICompilationUnit[] cus, TestASTRequestor requestor)", "diff": ["-\t\tresolveASTs(cus, new String[0], requestor, this.owner);", "+\t\tresolveASTs(cus, new String[0], requestor, getJavaProject(\"P\"), this.owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e39568e5581b5c6c9869bd8deb530dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \t \tprivate ASTNode createTargetNode(ASTNode first, ASTNode last, boolean isMove)", "signatureAfterChange": " \t \t \tprivate ASTNode createTargetNode(ASTNode first, ASTNode last, boolean isMove)", "diff": ["-\t\tCopySourceInfo info= getRewriteStore().markAsRangeCopySource(parent, childProperty, first, last, isMove);", "+\t\tCopySourceInfo info= getRewriteStore().markAsRangeCopySource(this.parent, this.childProperty, first, last, isMove);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3bbb8c51f2ddbdb6be1a6d0a3da37d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\tif (this.typeVariables != NoTypeVariables) {", "+\tif (this.typeVariables != Binding.NO_TYPE_VARIABLES) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e4379c7277b1e5ff0e074dba240ae3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "25c51203fa7d4fa749cfa4587853bbf2ef950d7b", "commitAfterChange": "89e62e603e7ffb3443f38c2ffe0957cf9e555f67", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " boolean mustImplementAbstractMethod(ReferenceBinding declaringClass)", "signatureAfterChange": " boolean mustImplementAbstractMethod(ReferenceBinding declaringClass)", "diff": ["-\tif (!super.mustImplementAbstractMethod(declaringClass)) return false;", "-", "-\tif (!this.type.isEnum() || this.type.isAnonymousType()) return true; // want to test the actual enum type only", "-\tif (this.type.isAbstract()) return false; // is an enum that has since been tagged as abstract by the code below", "+\tif (!this.type.isEnum())", "+\t\treturn super.mustImplementAbstractMethod(declaringClass);", "+\tif (this.type.isAnonymousType())", "+\t\treturn true; // body of enum constant must implement any inherited abstract methods", "+\tif (this.type.isAbstract())", "+\t\treturn false; // is an enum that has since been tagged as abstract by the code below"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e51e82d63fca43308cb1e5b716dc641", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a727125e8febab4dfedf84454a394010a0adb383", "commitAfterChange": "9c0f466d3a1091abcce132530971b41684c74f20", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t} else {", "+\t\t\tif (this.binding.declaringClass.superclass().isMemberType() && !this.binding.declaringClass.superclass().isStatic()) {", "+\t\t\t\t// creating an anonymous type of a non-static member type without an enclosing instance of parent type", "+\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e61298d091b6b9c325fcd436bfa8db7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e723a8688a976761e648797457098c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["+\tif(this.complianceLevel.compareTo(COMPLIANCE_1_5) > 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e726997435038cf7143cb6cebf44e6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "e560c4f056e8f81d7e6811700478b4a331f39a81", "commitAfterChange": "82fb6745d0f2bc2c9b5e4740da70b2e364d6955a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": "     \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\t     sig.append(this.type.computeUniqueKey(false/*not a leaf*/));", "+\t\t     sig.append(genericType().computeUniqueKey(false/*not a leaf*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e93ef1a4a1d59864cc9b7c145afe680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 406, "methodNumberAfterChange": 406, "signatureBeforeChange": " \tpublic void _test387()", "signatureAfterChange": " \tpublic void _test387()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec48fa7eaf6df4603cf269bf094707f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "60205bed5116ad3496dacec47d060779de36e647", "commitAfterChange": "af3a6832e3b1c1003f856c7a02d77d240881ed44", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r public IJavaElement getWorkingCopy() throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getWorkingCopy() throws JavaModelException", "diff": ["-public IJavaElement getWorkingCopy() throws JavaModelException {\r", "-\treturn this.getWorkingCopy(null, null, false);\r", "-}\r", "+ */\r", "+public IJavaElement getWorkingCopy() throws JavaModelException {\r", "+\treturn this.getWorkingCopy(null, null);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eca44a4c38f75cb40c444011be365f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ed63664239f28eb98c26b18433fb762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "fa0cb692ee03c2c22dc8e7a47c124e2e56a14c69", "commitAfterChange": "ce2a602e5903899f3f01940374b55132aa4bf67e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "diff": ["+\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;", "-\t\t\t\tif (needValue) {", "+\t\t\t\tif (needValue || complyTo14) {", "-\t\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee8acaf026cee53a659e812d40ec8d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r     public TypeDeclaration getTypeDeclaration(String name)", "signatureAfterChange": "      public TypeDeclaration getTypeDeclaration(String name)", "diff": ["-\r", "-    public TypeDeclaration getTypeDeclaration(String name)\r", "-    {\r", "-\t\tcheckValid();\r", "-\t\tif( name == null ) return null;\r", "-\t\t// first look into the current compilation unit\r", "-\t\tfinal String typeKey = BindingKey.createTypeBindingKey(name);\r", "-\t\tfinal ASTNode node = _astCompilationUnit.findDeclaringNode(typeKey);\r", "-\t\tITypeBinding typeBinding = null;\r", "-\t\tif( node != null ){\r", "-\t\t\tfinal int nodeType = node.getNodeType();\r", "-\t\t\tif( nodeType == ASTNode.TYPE_DECLARATION || \r", "-\t\t\t\tnodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||\r", "-\t\t\t\tnodeType == ASTNode.ENUM_DECLARATION )\r", "-\t\t\ttypeBinding = ((AbstractTypeDeclaration)node).resolveBinding();\r", "-\t\t}\r", "-\t\tif( typeBinding != null )\r", "-\t\t\treturn Factory.createReferenceType(typeBinding, this);\t\t \r", "-\t \r", "-\t\t// then go search for it else where.\r", "-\t\ttypeBinding = getTypeBinding(name);\t\r", "-\t\tif( typeBinding != null ){\r", "-\t\t\t//TODO: (theodora) record dependency on 'name'\r", "-\t\t\t// addDependency(name);\r", "-\t\t\treturn Factory.createReferenceType(typeBinding, this);\r", "-\t\t}\t\r", "-\t\r", "-\t\treturn null;\t\t\r", "-    }\r", "+", "+    public TypeDeclaration getTypeDeclaration(String name)", "+    {", "+\t\tcheckValid();", "+\t\tif( name == null ) return null;", "+\t\t// first look into the current compilation unit", "+\t\tfinal String typeKey = BindingKey.createTypeBindingKey(name);", "+\t\tfinal ASTNode node = _astCompilationUnit.findDeclaringNode(typeKey);", "+\t\tITypeBinding typeBinding = null;", "+\t\tif( node != null ){", "+\t\t\tfinal int nodeType = node.getNodeType();", "+\t\t\tif( nodeType == ASTNode.TYPE_DECLARATION || ", "+\t\t\t\tnodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||", "+\t\t\t\tnodeType == ASTNode.ENUM_DECLARATION )", "+\t\t\ttypeBinding = ((AbstractTypeDeclaration)node).resolveBinding();", "+\t\t}", "+\t\tif( typeBinding != null )", "+\t\t\treturn Factory.createReferenceType(typeBinding, this);\t\t ", "+\t ", "+\t\t// then go search for it else where.", "+\t\ttypeBinding = getTypeBinding(typeKey);\t", "+\t\tif( typeBinding != null ){", "+\t\t\taddTypeDependency( name );", "+\t\t\treturn Factory.createReferenceType(typeBinding, this);", "+\t\t}\t", "+\t", "+\t\treturn null;\t\t", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef6665f75ef6067f30203301610e5c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Requestor.java", "commitBeforeChange": "43f74f2641268dab605a152f25dcf07a245dabe8", "commitAfterChange": "6bace42b575464817bea9d0627df89cce9af5b42", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptResult(CompilationResult compilationResult)", "signatureAfterChange": " public void acceptResult(CompilationResult compilationResult)", "diff": ["-\t\t\t\tbuffer.append(\" in \" + new String(problems[i].getOriginatingFileName()));", "+\t\t\t\tbuffer.append(\" in \" + new String(problems[i].getOriginatingFileName()).replace('/', '\\\\'));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef990be3defad4509e400cc8180e197", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public FieldBinding[] availableFields()", "signatureAfterChange": "  public FieldBinding[] availableFields()", "diff": ["-\t\t\tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\t\tReferenceBinding.sortFields(this.fields, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f01f85a810a1de0ce3f381236885a15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "73072a493445774e509d0c21f3c359a527fa380b", "commitAfterChange": "c9651dd760925de2ad18a518e1aebff7786be226", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIJavaElement elementToFind)", "signatureAfterChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIJavaElement elementToFind)", "diff": ["+\t\t\tparser.javadocParser.checkDocComment = false; // disable javadoc parsing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f184e2900a3107a0941f18965a9a75b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 306, "signatureBeforeChange": " \tpublic void test0304() throws JavaModelException", "signatureAfterChange": " \tpublic void test0304() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f219bc4bc1e06084fb1f2d97b9ceee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "4e7d80d803019c9cbbce06f634dd1223d67a083e", "commitAfterChange": "38da22e8213d4f5c54891a39142da4a7e5d02dfb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected void setSourceComment(char[] source) throws ArrayIndexOutOfBoundsException", "signatureAfterChange": " \tprotected void setSourceComment(char[] source) throws ArrayIndexOutOfBoundsException", "diff": ["-\t\t\t\t\t\t\tcomment = this.LINE_COMMENT;", "+\t\t\t\t\t\t\tcomment = LINE_COMMENT;", "-\t\t\t\t\t\tcomment = this.BLOCK_COMMENT;", "+\t\t\t\t\t\tcomment = BLOCK_COMMENT;", "-\t\t\t\t\tcomment = this.DOC_COMMENT;", "+\t\t\t\t\tcomment = DOC_COMMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f340e8ae99612e4cf4c3447ab12d754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "e3822f42ca0adb637888a2b8f6caa05d9b5ce61b", "commitAfterChange": "8c0681689bb7016ae1fdf06168ac4642209638f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected void addDelta(IJavaElementDelta delta)", "signatureAfterChange": " \tprotected void addDelta(IJavaElementDelta delta)", "diff": ["-\t\tJavaModelManager.getJavaModelManager().registerJavaModelDelta(delta);", "+\t\tJavaModelManager.getJavaModelManager().deltaProcessor.registerJavaModelDelta(delta);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f58182eb5bbb672314369e47b1a1c27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testCompletionFindExceptions2() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindExceptions2() throws JavaModelException", "diff": ["-\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION),", "+\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f60d078f40e9696f1d4058ecf68dc23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrefixExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f687ce7f7784e5669d702b315305096", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testIsOnClasspath2() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath2() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tIFile file = this.createFile(", "+\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tIFile file = createFile("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f76b5eddb29eb6f14645ef45e5e1c80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void test0424() throws JavaModelException", "signatureAfterChange": " \tpublic void test0424() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc356ec2dd78d83026d6979e1056410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2548efb91bb743c25fd3bab3833473b467f314a0", "commitAfterChange": "f4a6a4aada4b614e2acc0db0bdcfb1edac95da6d", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector methodsFound, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": "  \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector methodsFound, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t}", "-", "+\t\t", "+\t\tcheckCancel();", "+\t\t", "-\t\t\t\tfalse,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc933117703e2ebe82409cd3b3a9aea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\treturn optionalQualifier;", "+\t\treturn this.optionalQualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe0be79ad70a9b7bc9877da7ca8ef74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void test0050() throws JavaModelException", "signatureAfterChange": " \tpublic void test0050() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe5c3b6f3335584c6ab7d98b895b8c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 264, "signatureBeforeChange": " public void testBug110060_TypePattern08() throws CoreException", "signatureAfterChange": " public void testBug110060_TypePattern08() throws CoreException", "diff": ["-\tsearch(\"aa\", TYPE, REFERENCES, SearchPattern.R_CAMEL_CASE_MATCH | SearchPattern.R_PREFIX_MATCH);", "+\tsearch(\"Aaa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\t// Invalid camel case pattern => replace the camel case flag by prefix  match one (case insensitive)", "-\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\\n\" + ", "-\t\t\"src/b110060/Test.java b110060.Test.a4 [AAxx] EXACT_MATCH\"", "+\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\"", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff545e3bf3ba7fca85ddd5d17995048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "580c728201df4f59e1400e6feeeb245b12a49163", "commitAfterChange": "a43591ed0206cd23fd90053f7c1436df8e9d56a7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void checkExceptions(MethodBinding newMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " void checkExceptions(MethodBinding newMethod, MethodBinding inheritedMethod)", "diff": ["-\t\t\tif (!(newException.isCompatibleWith(runtimeException()) || newException.isCompatibleWith(errorException())))", "+\t\t\tif (!newException.isUncheckedException(false))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90094ebfed8f71f524056c5b00a179c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "287694006bdaf0b6f3b2df3bdb8b96ae9adb1129", "commitAfterChange": "e23731bfbef54b7b257bcd8302a58a01db83c05d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public RecoveredElement updateOnClosingBrace(int braceStart, int braceEnd)", "signatureAfterChange": " public RecoveredElement updateOnClosingBrace(int braceStart, int braceEnd)", "diff": ["-\t\t\t\tupdateSourceEndIfNecessary(braceEnd - 1);", "+\t\t\t\tupdateSourceEndIfNecessary(braceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900d90c485677770c0e19b7798e2cc07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t \t\tboolean isAtWildCardStart()", "signatureAfterChange": " \t\t \t\tboolean isAtWildCardStart()", "diff": ["-\t\t\treturn this.index+1 < this.source.length && \"*+-\".indexOf(this.source[this.index+1]) != -1; //$NON-NLS-1$", "+\t\t\treturn this.index < this.source.length && \"*+-\".indexOf(this.source[this.index]) != -1; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9015e78f6513224e6814fb3f0ad86e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public char[][] getInterfaceNames()", "signatureAfterChange": " public char[][] getInterfaceNames()", "diff": ["-\tif (this.handle.getElementName().length() == 0) { // if anonymous type", "+\tif (isAnonymous()) { // if anonymous type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "901961e4257e71226cc194e23ccdad9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void test0430() throws JavaModelException", "signatureAfterChange": " \tpublic void test0430() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9019b3ee78baa989400b2c70c29c9b62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "be2cc93d845983531740f996d21ff395fe56b532", "commitAfterChange": "e28f43e10ef52ae9d2879a1a39bdff7cce868319", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " \tpublic void test0616() throws JavaModelException", "signatureAfterChange": " \tpublic void test0616() throws JavaModelException", "diff": ["-\t\t\tASTNode node = buildAST(", "-\t\t\t\tcontents,", "-\t\t\t\tworkingCopy);", "+\t\t\tworkingCopy.getBuffer().setContents(contents.toCharArray());", "+\t\t\tASTNode node = runConversion(AST.JLS3, workingCopy, true);", "-\t\t\tassertProblemsSize(unit, 0);", "+\t\t\tassertProblemsSize(unit, 1, \"Dead code\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "901d5ac40569a8774f128e6ac7d59a2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "\t \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tboolean cleanUp, \t\tchar[] source) \t\tthrows JavaModelException", "signatureAfterChange": "\t \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner) \t\tthrows JavaModelException", "diff": ["-\t\tchar[] source)", "+\t\tchar[] source,", "+\t\tWorkingCopyOwner owner)", "-\t\tIJavaProject project = unitElement.getJavaProject();", "+\t\tJavaProject project = (JavaProject) unitElement.getJavaProject();", "-\t\t\t\tgetNameEnvironment(unitElement),", "+\t\t\t\tproject.newSearchableNameEnvironment(owner),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9046a52f2fd9fe428bf9f9561b00080c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 149, "signatureBeforeChange": " final public void ifnull(Label lbl)", "signatureAfterChange": " final public void ifnull(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifnull:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9054cfaedcf69c186f7acf1a449d65b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic void test0086() throws JavaModelException", "signatureAfterChange": " \tpublic void test0086() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b54d8868f55ee810d4478649877e3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testAddCompilationUnit1() throws CoreException, IOException", "signatureAfterChange": " public void testAddCompilationUnit1() throws CoreException", "diff": ["-public void testAddCompilationUnit1() throws CoreException, IOException {", "+public void testAddCompilationUnit1() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b9a95cab7aca51a9732b247d2cacc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected Object parseQualifiedName(boolean reset) throws InvalidInputException", "signatureAfterChange": " \tprotected Object parseQualifiedName(boolean reset) throws InvalidInputException", "diff": ["-\t\t\t\t\tpushIdentifier(iToken == 0);", "+\t\t\t\t\tpushIdentifier(iToken == 0, false);", "-\t\t\t\t\tpushIdentifier(true);", "+\t\t\t\t\tpushIdentifier(true, false);", "-\t\t\t\t\t\t\t\treturn invalidSyntax(INVALID_QUALIFIED_NAME, null);", "+\t\t\t\t\t\t\t\treturn syntaxRecoverQualifiedName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c3745e2d5955b3243beee323abf1d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": " \t \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["+\t\t\tif (this.typeArguments != null) {", "+\t\t\t\tfor (int i = 0, typeArgumentsLength = this.typeArguments.length; i < typeArgumentsLength; i++) {", "+\t\t\t\t\tthis.typeArguments[i].traverse(visitor, scope);", "+\t\t\t\t}\t\t\t\t\t", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c9b8a9816e0540ebc346a8b6e47ce5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 92, "signatureBeforeChange": "  \tpublic void test057()", "signatureAfterChange": "  \tpublic void test057()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e983dfd5ae844eafd84ac153585567", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "0bb8dba3efca9a5500b67c37770710de86a06c2e", "commitAfterChange": "6726a5eb1723cea7dfdb4d1905ca215391f75d8e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["+\t\t\tsourceType.typeBits |= superInterface.typeBits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914dd511e86db24c3b43c6b626291ce2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["+ */\r", "+protected void executeOperation() throws JavaModelException {\r", "+\tbeginTask(Util.bind(\"workingCopy.commit\"/*nonNLS*/), 2);\r", "+\tICompilationUnit copy = getCompilationUnit();\r", "+\tICompilationUnit original = (ICompilationUnit) copy.getOriginalElement();\r", "-\t */\r", "-\tprotected void executeOperation() throws JavaModelException {\r", "-\t\tbeginTask(\"Committing working copy...\", 2);\r", "-\t\tICompilationUnit copy = getCompilationUnit();\r", "-\t\tICompilationUnit original = (ICompilationUnit) copy.getOriginalElement();\r", "+\t\r", "+\t// creates the delta builder (this remembers the content of the cu)\t\r", "+\tJavaElementDeltaBuilder deltaBuilder = new JavaElementDeltaBuilder(original);\r", "-\t\t// creates the delta builder (this remembers the content of the cu)\t\r", "-\t\tJavaElementDeltaBuilder deltaBuilder = new JavaElementDeltaBuilder(original);\r", "+\t// save the cu\r", "+\toriginal.getBuffer().setContents(copy.getBuffer().getCharacters());\r", "+\toriginal.save(fMonitor, fForce);\r", "-\t\t// save the cu\r", "-\t\toriginal.getBuffer().setContents(copy.getBuffer().getCharacters());\r", "-\t\toriginal.save(fMonitor, fForce);\r", "+\t// make sure working copy is in sync\r", "+\tcopy.restore();\r", "+\tworked(1);\r", "-\t\t// make sure working copy is in sync\r", "-\t\tcopy.restore();\r", "-\t\tworked(1);\r", "+\t// build the deltas\r", "+\tdeltaBuilder.buildDeltas();\r", "-\t\t// build the deltas\r", "-\t\tdeltaBuilder.buildDeltas();\r", "-\r", "-\t\t// add the deltas to the list of deltas created during this operation\r", "-\t\tif (deltaBuilder.delta != null) {\r", "-\t\t\taddDelta(deltaBuilder.delta);\r", "-\t\t}\r", "-\t\tworked(1);\r", "-\r", "-\t\tdone();\r", "-\t\t//\tcheckPackageDeclaration(original);\r", "+\t// add the deltas to the list of deltas created during this operation\r", "+\tif (deltaBuilder.delta != null) {\r", "+\t\taddDelta(deltaBuilder.delta);\r", "+\tworked(1);\r", "+\t\r", "+\tdone();\r", "+//\tcheckPackageDeclaration(original);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91541e5fc1f1270c8e6908e67d7b3ea1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, char[] name)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, char[] name)", "diff": ["-\treturn camelCaseMatch(pattern, 0, pattern.length, name, 0, name.length, true/*prefix match*/);", "+\treturn camelCaseMatch(pattern, 0, pattern.length, name, 0, name.length, false/*not the same count of parts*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a136430d0e65e391caf5fc2dd70750", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testCorrespondingResourceNonExistingPkgFragmentRoot() throws CoreException", "signatureAfterChange": " public void testCorrespondingResourceNonExistingPkgFragmentRoot() throws CoreException", "diff": ["-\t\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tIFolder folder = this.createFolder(\"/P/nonExistingRoot\");", "+\t\tIJavaProject project = createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tIFolder folder = createFolder(\"/P/nonExistingRoot\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91aa8e1e21f1a94a6fbf027180f2364e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSkeleton.java", "commitBeforeChange": "31a48ee40204ffe042de7198e7d9c7bb19736730", "commitAfterChange": "d73a14c609f427beaa0b1b6df904bdb56d0e6b4a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \t\tpublic BinaryMethodSkeleton(char[] selector, char[] methodDescriptor, char[][] exceptionTypeNames, boolean isConstructor)", "signatureAfterChange": " \t\t \t\tpublic BinaryMethodSkeleton(char[] selector, char[] methodDescriptor, char[][] exceptionTypeNames, boolean isConstructor)", "diff": ["-\t\t\tthis.isConstructor = this.isConstructor;", "+\t\t\tthis.isConstructor = isConstructor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91cdeeb05faa9f38ecff40b9c1043800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "7e5be365074b33481ef62dd48f6cd0d39e341472", "commitAfterChange": "f36e322ad03d5099709a00be20eb1b709bb0eac1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tCompilerOptions.OPTION_ReportConstructorParameterHidingField,", "-\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\t\tCompilerOptions.OPTION_ReportSpecialParameterHidingField,", "+\t\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\t\t\t} else if (token.equals(\"constrParamHidingField\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"specialParamHiding\")) { //$NON-NLS-1$", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportConstructorParameterHidingField,", "-\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSpecialParameterHidingField,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91eacada5cef07239368753f02caa653", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3acd0c7c3783a0971d4796127903b77eaaaa4fe8", "commitAfterChange": "34c10732bc825eb0d60f9ca451e5bffcde825629", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": "  \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\t\t\t\tcreateMethodSignature(", "-\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "-\t\t\t\t\t\t\t\t\tOBJECT));", "+\t\t\t\t\t\t\tthis.compilerOptions.sourceLevel > ClassFileConstants.JDK1_4 && receiverType.isArrayType() ?", "+\t\t\t\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tgetSignature(receiverType)) :", "+\t\t\t\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "+\t\t\t\t\t\t\t\t\t\t\tOBJECT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91f62542335cf7054e823499ba622185", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public AstNode parseTree()", "signatureAfterChange": " public AstNode parseTree()", "diff": ["-\treturn unitDeclaration;", "+\treturn this.unitDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920ad0e3e9e29285faa898a6bd9fec4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void addExternalJar(IPath projectPath, String jar, boolean isExported) throws JavaModelException", "signatureAfterChange": " \tpublic void addExternalJar(IPath projectPath, String jar, boolean isExported) throws JavaModelException", "diff": ["-\t\tcheckAssertion(\"file name must end with .zip or .jar\", jar.endsWith(\".zip\") || jar.endsWith(\".jar\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92293f4875008a96d6847ba7acccd0ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testAccessRestriction9() throws Exception", "signatureAfterChange": " public void testAccessRestriction9() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9242583e99e6ae7b528ad0c411fefda3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "b246de6fdcd5a901a16dcaeba98ae727a49eb635", "commitAfterChange": "56d15386ff3f6926c8a8ed7999b62e707baad4f8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testIndexing() throws CoreException", "signatureAfterChange": " \tpublic void testIndexing() throws CoreException", "diff": ["-\t\ttagAsSummary(\"Search indexes building\", true); // put in fingerprint", "+\t\ttagAsSummary(\"Indexing all workspace projects\", false); // do NOT put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924341a67188a780ee938b8fc7524717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": " \tpublic void test0164() throws JavaModelException", "signatureAfterChange": " \tpublic void test0164() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "926b11e88ce9b27f6a4bb11818684cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ForStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic List updaters()", "signatureAfterChange": "  \tpublic List updaters()", "diff": ["-\t\treturn updaters;", "+\t\treturn this.updaters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92776abe9f52fa381c74191684c5ec2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": " \tpublic void test0187() throws JavaModelException", "signatureAfterChange": " \tpublic void test0187() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9279d66daac1f9f87729f95f000627b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateMembersTests.java", "commitBeforeChange": "e035148b9444d0518bf3898533bfd924c233db5b", "commitAfterChange": "6606ab1413877282566ca689ee40aa524c774ee2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void test001() throws JavaModelException", "signatureAfterChange": "  \tpublic void test001() throws JavaModelException", "diff": ["-\t", "-\t\tString expectedSource = \"public class A\\n\" +", "+\t\tString expectedSource = ", "+\t\t\t\"public class A\\n\" +", "-\t\tassertArraysEquals(type.getSource(), expectedSource);", "+\t\tassertSourceEquals(\"Unexpected source\", expectedSource, type.getSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a6fd4bf9267fcc35e570038152d0f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "f65225afa9896daa624936de0f87dc55afc93a95", "commitAfterChange": "f3d8a1de54faa12eecbb020be7bedaefd2d7827a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public SyntheticFieldBinding addSyntheticFieldForSwitchEnum(char[] fieldName, String key)", "signatureAfterChange": " public SyntheticFieldBinding addSyntheticFieldForSwitchEnum(char[] fieldName, String key)", "diff": ["-\t\t\tAccPrivate | AccStatic | AccSynthetic | AccFinal,", "+\t\t\tAccPrivate | AccStatic | AccSynthetic,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92d19d6222937fe48c537d8bb690eb2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void test0502d() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502d() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f5887a36afa4c19dc9b484d1964afd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "f1f8d0b10a3f2cd848499ed766e0186c0d53a439", "commitAfterChange": "78859c0e317e109636f77a46e3f95c8d4b8c24ec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static CodeFormatter createCodeFormatter(Map options)", "signatureAfterChange": " \tpublic static CodeFormatter createCodeFormatter(Map options)", "diff": ["+\t\treturn createCodeFormatter(options, 0);", "+\t}", "-\t\treturn new DefaultCodeFormatter(options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92ffdff79e9e6e2fc5acaf06a9d2028e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "a3663876ebeeba0873385de1d4baec07c1c9b5d8", "commitAfterChange": "d9c5650b5cbddab2c4722e719615cd4c4df0f60d", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void _ldc(int pc, int index, IConstantPoolEntry constantPoolEntry)", "signatureAfterChange": " \tpublic void _ldc(int pc, int index, IConstantPoolEntry constantPoolEntry)", "diff": ["-\t\t\t\t\tconstantPoolEntry.getStringValue()", "+\t\t\t\t\tDisassembler.escapeString(constantPoolEntry.getStringValue())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9307ecd1f8bb46b02193c7be1bae90b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "09d58a6e319cfeec520d29fd7c2c24967ab4e499", "commitAfterChange": "3f9786eb97e62b9a5f765764dcc08a631a4e6afe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic final boolean isConstructorReference()", "signatureAfterChange": "  \tpublic final boolean isConstructorReference()", "diff": ["-\t\treturn CharOperation.equals(this.method.token,  ConstantPool.Init);", "+\t\treturn CharOperation.equals(this.selector,  ConstantPool.Init);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930a8e5b872b4e90d5327087dc47f450", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test0429() throws JavaModelException", "signatureAfterChange": " \tpublic void test0429() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930fd32e2fe2cb4ef861d83714308748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935c6ecb46f9e8e133d1337143a20c46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": " \tpublic void test0261() throws JavaModelException", "signatureAfterChange": " \tpublic void test0261() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "937fed150fdff40e466edea8abcd2942", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " \tpublic void test0189() throws JavaModelException", "signatureAfterChange": " \tpublic void test0189() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9385d7a88b54e96d648c9c49da99c2b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CatchClause.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Block getBody()", "signatureAfterChange": "  \tpublic Block getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93882c031eb0827d6a3d607963ee28d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer node)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer node)", "diff": ["-\t\trewriteNodeList(node, ArrayInitializer.EXPRESSIONS_PROPERTY, startPos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\trewriteNodeList(node, ArrayInitializer.EXPRESSIONS_PROPERTY, startPos, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "938e4a6565ab7a97ce02f39f45bde69e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ManifestAnalyzer.java", "commitBeforeChange": "c1dc3100cbeb76012e0bcbde498d9c2d70bc26ef", "commitAfterChange": "edf1aa4b220fec20b2ea6b3588c59f7c04f1c931", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean analyzeManifestContents(Reader reader) throws IOException", "signatureAfterChange": " \tpublic boolean analyzeManifestContents(InputStream inputStream) throws IOException", "diff": ["-\tpublic boolean analyzeManifestContents(Reader reader) throws IOException {", "-\t\tint state = START, substate = 0;", "-\t\tStringBuffer currentJarToken = new StringBuffer();", "-\t\tint currentChar;", "-\t\tthis.classpathSectionsCount = 0;", "-\t\tthis.calledFilesNames = null;", "-\t\tfor (;;) {", "-\t\t\tcurrentChar = reader.read();", "-\t\t\tif (currentChar == '\\r')  // skip \\r, will consider \\n later (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=251079 )", "+\t */", "+\tpublic boolean analyzeManifestContents(InputStream inputStream) throws IOException {", "+\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, Charset.forName(Util.UTF_8)));", "+\t\ttry {", "+\t\t\tint state = START, substate = 0;", "+\t\t\tStringBuffer currentJarToken = new StringBuffer();", "+\t\t\tint currentChar;", "+\t\t\tthis.classpathSectionsCount = 0;", "+\t\t\tthis.calledFilesNames = null;", "+\t\t\tfor (;;) {", "-\t\t\tswitch (state) {", "-\t\t\t\tcase START:", "-\t\t\t\t\tif (currentChar == -1) {", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t} else if (currentChar == CLASSPATH_HEADER_TOKEN[0]) {", "-\t\t\t\t\t\tstate = IN_CLASSPATH_HEADER;", "-\t\t\t\t\t\tsubstate = 1;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tstate = SKIP_LINE;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IN_CLASSPATH_HEADER:", "-\t\t\t\t\tif (currentChar == -1) {", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t} else if (currentChar == '\\n') {", "-\t\t\t\t\t\tstate = START;", "-\t\t\t\t\t} else if (currentChar != CLASSPATH_HEADER_TOKEN[substate++]) {", "-\t\t\t\t\t\tstate = SKIP_LINE;", "-\t\t\t\t\t} else if (substate == CLASSPATH_HEADER_TOKEN.length) {", "-\t\t\t\t\t\tstate = PAST_CLASSPATH_HEADER;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase PAST_CLASSPATH_HEADER:", "-\t\t\t\t\tif (currentChar == ' ') {", "-\t\t\t\t\t\tstate = SKIPPING_WHITESPACE;", "-\t\t\t\t\t\tthis.classpathSectionsCount++;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SKIPPING_WHITESPACE:", "-\t\t\t\t\tif (currentChar == -1) {", "-\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t} else if (currentChar == '\\n') {", "-\t\t\t\t\t\tstate = CONTINUING;", "-\t\t\t\t\t} else if (currentChar != ' ') {", "-\t\t\t\t\t\tcurrentJarToken.append((char) currentChar);", "-\t\t\t\t\t\tstate = READING_JAR;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase CONTINUING:", "-\t\t\t\t\tif (currentChar == -1) {", "-\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t} else if (currentChar == '\\n') {", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t\tstate = START;", "-\t\t\t\t\t} else if (currentChar == ' ') {", "-\t\t\t\t\t\tstate = SKIPPING_WHITESPACE;", "-\t\t\t\t\t} else if (currentChar == CLASSPATH_HEADER_TOKEN[0]) {", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t\tstate = IN_CLASSPATH_HEADER;", "-\t\t\t\t\t\tsubstate = 1;", "-\t\t\t\t\t} else if (this.calledFilesNames == null) {", "-\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t\tstate = START;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "-\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\t\tstate = SKIP_LINE;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SKIP_LINE:", "-\t\t\t\t\tif (currentChar == -1) {", "-\t\t\t\t\t\tif (this.classpathSectionsCount != 0) {", "-\t\t\t\t\t\t\tif (this.calledFilesNames == null) {", "-\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t\t}", "+\t\t\t\tif (currentChar == '\\r')  // skip \\r, will consider \\n later (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=251079 )", "+\t\t\t\t\tcurrentChar = reader.read();", "+\t\t\t\tswitch (state) {", "+\t\t\t\t\tcase START:", "+\t\t\t\t\t\tif (currentChar == -1) {", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} else if (currentChar == CLASSPATH_HEADER_TOKEN[0]) {", "+\t\t\t\t\t\t\tstate = IN_CLASSPATH_HEADER;", "+\t\t\t\t\t\t\tsubstate = 1;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tstate = SKIP_LINE;", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t} else if (currentChar == '\\n') {", "-\t\t\t\t\t\tstate = START;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase READING_JAR:", "-\t\t\t\t\tif (currentChar == -1) {", "-\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t\t} else if (currentChar == '\\n') {", "-\t\t\t\t\t\t// appends token below", "-\t\t\t\t\t\tstate = CONTINUING;", "-\t\t\t\t\t\t// >>>>>>>>>>> Add a break to not add the jar yet as it can continue on the next line", "-\t\t\t\t\t} else if (currentChar == ' ') {", "-\t\t\t\t\t\t// appends token below", "-\t\t\t\t\t\tstate = SKIPPING_WHITESPACE;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcurrentJarToken.append((char) currentChar);", "+\t\t\t\t\tcase IN_CLASSPATH_HEADER:", "+\t\t\t\t\t\tif (currentChar == -1) {", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} else if (currentChar == '\\n') {", "+\t\t\t\t\t\t\tstate = START;", "+\t\t\t\t\t\t} else if (currentChar != CLASSPATH_HEADER_TOKEN[substate++]) {", "+\t\t\t\t\t\t\tstate = SKIP_LINE;", "+\t\t\t\t\t\t} else if (substate == CLASSPATH_HEADER_TOKEN.length) {", "+\t\t\t\t\t\t\tstate = PAST_CLASSPATH_HEADER;", "+\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "-\t\t\t\t\tbreak;", "+\t\t\t\t\tcase PAST_CLASSPATH_HEADER:", "+\t\t\t\t\t\tif (currentChar == ' ') {", "+\t\t\t\t\t\t\tstate = SKIPPING_WHITESPACE;", "+\t\t\t\t\t\t\tthis.classpathSectionsCount++;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase SKIPPING_WHITESPACE:", "+\t\t\t\t\t\tif (currentChar == -1) {", "+\t\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} else if (currentChar == '\\n') {", "+\t\t\t\t\t\t\tstate = CONTINUING;", "+\t\t\t\t\t\t} else if (currentChar != ' ') {", "+\t\t\t\t\t\t\tcurrentJarToken.append((char) currentChar);", "+\t\t\t\t\t\t\tstate = READING_JAR;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase CONTINUING:", "+\t\t\t\t\t\tif (currentChar == -1) {", "+\t\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} else if (currentChar == '\\n') {", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t\tstate = START;", "+\t\t\t\t\t\t} else if (currentChar == ' ') {", "+\t\t\t\t\t\t\tstate = SKIPPING_WHITESPACE;", "+\t\t\t\t\t\t} else if (currentChar == CLASSPATH_HEADER_TOKEN[0]) {", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t\tstate = IN_CLASSPATH_HEADER;", "+\t\t\t\t\t\t\tsubstate = 1;", "+\t\t\t\t\t\t} else if (this.calledFilesNames == null) {", "+\t\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t\tstate = START;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "+\t\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\t\tstate = SKIP_LINE;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase SKIP_LINE:", "+\t\t\t\t\t\tif (currentChar == -1) {", "+\t\t\t\t\t\t\tif (this.classpathSectionsCount != 0) {", "+\t\t\t\t\t\t\t\tif (this.calledFilesNames == null) {", "+\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} else if (currentChar == '\\n') {", "+\t\t\t\t\t\t\tstate = START;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase READING_JAR:", "+\t\t\t\t\t\tif (currentChar == -1) {", "+\t\t\t\t\t\t\t// >>>>>>>>>>>>>>>>>> Add the latest jar read", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t} else if (currentChar == '\\n') {", "+\t\t\t\t\t\t\t// appends token below", "+\t\t\t\t\t\t\tstate = CONTINUING;", "+\t\t\t\t\t\t\t// >>>>>>>>>>> Add a break to not add the jar yet as it can continue on the next line", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t} else if (currentChar == ' ') {", "+\t\t\t\t\t\t\t// appends token below", "+\t\t\t\t\t\t\tstate = SKIPPING_WHITESPACE;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcurrentJarToken.append((char) currentChar);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\taddCurrentTokenJarWhenNecessary(currentJarToken);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t} finally {", "+\t\t\treader.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939e6eb6c398ccf9870e2f558d3c32bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic boolean contains(IResource resource)", "signatureAfterChange": " \tpublic boolean contains(IResource resource)", "diff": ["-\t\t\tclasspath = getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\tclasspath = getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93c06a70cf9072ca7833eada6494e6cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "2638a8a6d4751271169096529a6fc19d8fa90ca4", "commitAfterChange": "efce8046efa31604f536ed11b6b7bbf7a3c045a5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate IFile getFile()", "signatureAfterChange": " \tprivate IFile getFile()", "diff": ["-\t\t\tthis.file = (IFile) ResourcesPlugin.getWorkspace().getRoot().findMember(new Path(getPath()));", "+\t\t\tthis.file = ResourcesPlugin.getWorkspace().getRoot().getFile(new Path(getPath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93ce5ce1071131de300db45677c6745e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic boolean isInterface()", "signatureAfterChange": "  \tpublic boolean isInterface()", "diff": ["-\t\treturn isInterface;", "+\t\treturn this.isInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93dbf8700db1623a044fd30d8e5ab1c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e0b93cd9388950bd51950e07247cdecc9e3263df", "commitAfterChange": "265ec26aa6d2cbdb7df581eef4b2a30df572f94f", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "  \tpublic void test112()", "signatureAfterChange": "  \tpublic void test112()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e1c10119ee8e979ad116db424d3122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "d4c371a1d5a37d3364d0e834a4122f2f818fd8b5", "commitAfterChange": "adfa537400b4334152a32e50aeab72eec7b97a4a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic Set<IFile> getJava6GeneratedFiles()", "signatureAfterChange": " \tpublic Set<IFile> getJava6GeneratedFiles()", "diff": ["+\t */", "+\t\tif (null == _java6GeneratedFiles) {", "+\t\t\treturn Collections.emptySet();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94159639486c35616aa312ef09de8e7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 560, "methodNumberAfterChange": 560, "signatureBeforeChange": " \tpublic void test541()", "signatureAfterChange": " \tpublic void test541()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942a05b800befab5ec13844167f8af90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void test0067() throws JavaModelException", "signatureAfterChange": " \tpublic void test0067() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943ea50b08a1fe26ceb8cfe6788fb620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "9b845d774c1c19314da22ed0751cec3d607d5455", "commitAfterChange": "649631b834e755f12bf40b9c916ce9dfc765a8d0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["-\t\tcleanUp();", "+\t\tif (JavaBuilder.SHOW_STATS)", "+\t\t\tprintStats();", "+\t\tcleanUp();\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9446e5a4ea4d8b6ca249ab251027571a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "093ab4b3428c0cfbf5dcade43c17848dfc0c032d", "commitAfterChange": "bd06acbb422b55f9ecb9c9bcd746632c5a7adeef", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tthis.expression.generateCode(currentScope, codeStream, valueRequired || needRuntimeCheckcast);", "+\tthis.expression.generateCode(currentScope, codeStream, annotatedCast || valueRequired || needRuntimeCheckcast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9456de753ff0f453b8c97a2dbc78a4c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " public void testCompletionReturnInInitializer() throws JavaModelException", "signatureAfterChange": " public void testCompletionReturnInInitializer() throws JavaModelException", "diff": ["-\t\t\"element:equals    completion:equals()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:equals    completion:equals()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "945ce6d47a5b1042cc58dd3266f14b21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Block.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949af1342f029d8a670721ecc0343293", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void test046() throws JavaModelException", "signatureAfterChange": "  public void test046() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949f753f93604eb54ccbbf620094253a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString, IJavaSearchScope scope)", "signatureAfterChange": " \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString, IJavaSearchScope scope)", "diff": ["-\t\t\t\tclasspathEntries = javaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\tclasspathEntries = javaProject.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94a3ba6ef658e5f0239aaea2ed059d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ImportDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b7baf214c12aa30240dd9522460277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testIncompatibleJdkLEvelOnWksp() throws JavaModelException", "signatureAfterChange": " public void testIncompatibleJdkLEvelOnWksp() throws JavaModelException", "diff": ["+\t\tenv.waitForAutoBuild();", "+\t\tenv.waitForManualRefresh();", "-", "+\t\tenv.waitForAutoBuild();", "+\t\tenv.waitForManualRefresh();", "-", "+\t\tenv.waitForAutoBuild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9520345216f8105c706847f25f0abecd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": " \tpublic void test0681() throws JavaModelException", "signatureAfterChange": " \tpublic void test0681() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode node = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9525dfc099421691d76e278b3a9ade8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/IntegerCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int size()", "signatureAfterChange": " public int size()", "diff": ["-\treturn elementSize;", "+\treturn this.elementSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95265c82118844af51f54c848e490876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "bce0dbd9dd489d3038652b337b4b76bb1f2246a4", "commitAfterChange": "f04ae71cc7d18b0e34f184a3124e4f7f58dafcf3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (isFieldUseDeprecated(fieldBinding, scope, (this.bits & ASTNode.IsStrictlyAssigned) !=0)) {", "+\tif (isFieldUseDeprecated(fieldBinding, scope, this.bits)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9566207481da494c55506dd07be7457f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 230, "signatureBeforeChange": " \tpublic void test0228() throws JavaModelException", "signatureAfterChange": " \tpublic void test0228() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9574fc5786e0a26e2677637a8c689d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 372, "signatureBeforeChange": " public void unsafeRawFieldAssignment(FieldBinding field, TypeBinding expressionType, ASTNode location)", "signatureAfterChange": " public void unsafeRawFieldAssignment(FieldBinding field, TypeBinding expressionType, ASTNode location)", "diff": ["-\t\tfieldSourceStart(field,location),", "-\t\tfieldSourceEnd(field, location)); ", "+\t\tnodeSourceStart(field,location),", "+\t\tnodeSourceEnd(field, location)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957fd1515ee9d140d7bde1c7f00530ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "48ffa7038afae816b3d5e3197cd75340b42c9f20", "commitAfterChange": "f801f37028872919602586a9190e898b8b91bec5", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r \tpublic static void setOptions(Hashtable newOptions)", "signatureAfterChange": "\r \tpublic static void setOptions(Hashtable newOptions)", "diff": ["+\t\t\r", "+\t\t// persist options\r", "+\t\tgetPlugin().savePluginPreferences();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95bd3cac4a5927334e5620f6a076b430", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic ICompilationUnit getCompilationUnit()", "signatureAfterChange": " public ICompilationUnit getCompilationUnit()", "diff": ["-\t */", "-\tpublic ICompilationUnit getCompilationUnit(){", "-\t\treturn compilationUnit;", "-\t}", "+ */", "+public ICompilationUnit getCompilationUnit(){", "+\treturn this.compilationUnit;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c06038db033d73bd046d196078d4d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic abstract void addIndexEntry(char[] category, char[] key, SearchDocument document);", "signatureAfterChange": " public void addIndexEntry(char[] category, char[] key, SearchDocument document)", "diff": ["-\t */", "-\tpublic abstract void addIndexEntry(char[] category, char[] key, SearchDocument document);", "+}", "+public void addIndexEntry(char[] category, char[] key, SearchDocument document) {", "+\tthis.memoryIndex.addIndexEntry(category, key, document);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c88a83491b329d152654e269491fa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TaskTags, \"\"); //$NON-NLS-1$", "+\t\t\tthis.customDefaultOptions.put(CompilerOptions.OPTION_TaskTags, Util.EMPTY_STRING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9611729b1107e396c0ca6cd3459b68b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "219e865534d999f23867ea9a6805e3371bca9713", "commitAfterChange": "e3743cf0e6fb8ccaafe6a89e00b8264bcb1af8d6", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\t\t\t\tthis.result.append(' ');", "+\t\t\t\t\tthis.result.append(';');", "+\t\t\tprev= d;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "965a7275f688c8d0eb8adc7c7af5e2f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "2f4a2c5f4e85be10c6f8a803a860cb198c96e808", "commitAfterChange": "6e078f72aac803cfa7a439337ace93b9202fe191", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public char[] getSuperclassName()", "signatureAfterChange": "\r public char[] getSuperclassName()", "diff": ["-\treturn superclass;\r", "+\treturn this.superclass;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969fb42b02d67fdbd0ea8796ab050d5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test0404() throws JavaModelException", "signatureAfterChange": " \tpublic void test0404() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a99b74e831aa9d350bff0ec0213685", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic int getExtraDimensions()", "signatureAfterChange": "  \tpublic int getExtraDimensions()", "diff": ["-\t\treturn extraArrayDimensions;", "+\t\treturn this.extraArrayDimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96c1e34f879daeda13a38e83054a9d2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f1ecb4b2d8ea593a495f1608bdd4d8fccb10a732", "commitAfterChange": "575694a4feaf3caf1988ca9a05c237c3a23369b5", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " public void javadocDeprecatedType(TypeBinding type, ASTNode location, int modifiers)", "signatureAfterChange": " public void javadocDeprecatedType(TypeBinding type, ASTNode location, int modifiers)", "diff": ["-\t\t\tIProblem.UsingDeprecatedType|IProblem.Javadoc,", "+\t\t\tIProblem.JavadocUsingDeprecatedType,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ce1ae30d3645b130745b7a02195cc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 209, "signatureBeforeChange": " public void javadocInvalidField(int sourceStart, int sourceEnd, Binding fieldBinding, TypeBinding searchedType, int modifiers)", "signatureAfterChange": " public void javadocInvalidField(int sourceStart, int sourceEnd, Binding fieldBinding, TypeBinding searchedType, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96f28a3e614becc249061d2845d865ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 256, "signatureBeforeChange": " \tpublic void test0617() throws JavaModelException", "signatureAfterChange": " \tpublic void test0617() throws JavaModelException", "diff": ["-\t\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, workingCopy, true);\t\t\t", "+\t\t\tASTNode node = runConversion(getJLS3(), workingCopy, true);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97186c8499bed92c016b7e71cd90282c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor)", "diff": ["-public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {", "+public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97315fa19ee5bb24d468e8a4010be9d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tJavaElementDelta delta = new JavaElementDelta(this.getJavaModel());", "+\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "-\t\t\t\tJavaElementDelta delta = new JavaElementDelta(this.getJavaModel());", "+\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973496084b355d3d2f8a77fc52908758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testMoveMember() throws JavaModelException", "signatureAfterChange": " public void testMoveMember() throws JavaModelException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97477ee4ec4d86a16f5314a7819d1629", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " \tpublic void test0535() throws JavaModelException", "signatureAfterChange": " \tpublic void test0535() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979655bcb07baa1f6e1d3f761075a757", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": " \tpublic void test0218() throws JavaModelException", "signatureAfterChange": " \tpublic void test0218() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cf3723869616271469017b38b39790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Annotation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Name getTypeName()", "signatureAfterChange": "  \tpublic Name getTypeName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97daf7060a1f88f25017d28dbc1b85f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "56242f2c4a4e3fdfdcffa7d9541655946a7953f8", "commitAfterChange": "40f76b3d0fb01a4a7fa1aad4b09c356c31458c94", "methodNumberBeforeChange": 542, "methodNumberAfterChange": 542, "signatureBeforeChange": " public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, int severity)", "signatureAfterChange": " public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, int severity)", "diff": ["+\tif (providedType.id == TypeIds.T_null) {", "+\t\tnullityMismatchIsNull(expression, requiredType);", "+\t\treturn;", "+\t}", "-\tint problemId = severity == 2 ? IProblem.NullityUncheckedTypeAnnotationDetail : IProblem.NullityMismatchingTypeAnnotation;\t\t\t", "+\tint problemId = severity == 1 ? IProblem.NullityUncheckedTypeAnnotationDetail : IProblem.NullityMismatchingTypeAnnotation;\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97ea8b8bbaec72bd36aa1116504dd33c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 333, "methodNumberAfterChange": 333, "signatureBeforeChange": " \tpublic void test0331() throws JavaModelException", "signatureAfterChange": " \tpublic void test0331() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97ec4c70fab04bc67f14317387557dc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "commitAfterChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public void generateOptimizedStringBuffer(BlockScope blockScope, CodeStream codeStream, int typeID)", "signatureAfterChange": "\r public void generateOptimizedStringBuffer(BlockScope blockScope, CodeStream codeStream, int typeID)", "diff": ["-\t\t\tcodeStream.recordPositionsFrom(pc, left);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, left.sourceStart);\r", "-\t\t\tcodeStream.recordPositionsFrom(pc, right);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, right.sourceStart);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97fcca0112edd22da6443d3e1167b649", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  public char[] shortReadableName()", "signatureAfterChange": "  public char[] shortReadableName()", "diff": ["-\tif ((typeVars = this.typeVariables()) != NoTypeVariables) {", "+\tif ((typeVars = this.typeVariables()) != Binding.NO_TYPE_VARIABLES) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98008c6dd35de2c75c5b0582453e096f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryField.java", "commitBeforeChange": "f6928a3e7ff4d633032250ff1eeb28d81a4173fb", "commitAfterChange": "08f3ed4913599f8b8a74808e920cd923aa028f37", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void toStringInfo(int tab, StringBuffer buffer, Object info)", "signatureAfterChange": " protected void toStringInfo(int tab, StringBuffer buffer, Object info)", "diff": ["-\t\tbuffer.append(getElementName());", "+\t\ttoStringName(buffer);", "-\t\tbuffer.append(getElementName());", "+\t\ttoStringName(buffer);", "-\t\t\tbuffer.append(this.getElementName());", "+\t\t\ttoStringName(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9803e2211eeaeb59652c82727001821b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tvoid buildAnonymousTypeBinding(SourceTypeBinding enclosingType, ReferenceBinding supertype)", "signatureAfterChange": "  \tvoid buildAnonymousTypeBinding(SourceTypeBinding enclosingType, ReferenceBinding supertype)", "diff": ["+\t\tanonymousType.modifiers |= ExtraCompilerModifiers.AccLocallyUsed; // tag all anonymous types as used locally"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980a0e194d77bb32f335c1b3fa6ef4f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-\t\t\t\t\t\tNotFound);", "+\t\t\t\t\t\tProblemReasons.NotFound);", "-\t\t\t\t\tNotVisible);", "+\t\t\t\t\tProblemReasons.NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9826c7f89c87dbd190355fbc8e697d21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tpublic void test0549() throws JavaModelException", "signatureAfterChange": " \tpublic void test0549() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9828a0001e3101ad11c798f780135baa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  public void testCompletionUnresolvedReturnType() throws JavaModelException", "signatureAfterChange": "  public void testCompletionUnresolvedReturnType() throws JavaModelException", "diff": ["-\t\t\"element:barPlus    completion:barPlus()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:barPlus    completion:barPlus()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "982a263f66015b31ee37eb1dfc73f852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElement.java", "commitBeforeChange": "3d562d40da4e348a144afbbe3f8416f78f2d7aa4", "commitAfterChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "diff": ["-\t} else {", "-\t\tthrow newNotPresentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983656e52f74fbb00e96e733e15d3748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler2()", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler2()", "diff": ["-\t\tStandardJavaFileManager manager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\tStandardJavaFileManager manager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "- \t\tCompilationTask task = Compiler.getTask(printWriter, forwardingJavaFileManager, null, options, null, units);", "+ \t\tCompilationTask task = compiler.getTask(printWriter, forwardingJavaFileManager, null, options, null, units);", "-\t\ttask = Compiler.getTask(printWriter, forwardingJavaFileManager, null, options, null, units);", "+\t\ttask = compiler.getTask(printWriter, forwardingJavaFileManager, null, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983adfd14d1690d31e34893ceeafd35a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "42eeb9f34b7d22509ce713827c332d7ec73b6e80", "commitAfterChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void testRemoveZIPArchive4() throws CoreException", "signatureAfterChange": " public void testRemoveZIPArchive4() throws CoreException", "diff": ["+\t\trefreshExternalArchives(p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9844a29159dd1fa9210a29ac1d6abd9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "diff": ["-\t\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9845cabdd8fad03cf2aec3acd9bfc842", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ForStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChildren(visitor, initializers);", "+\t\t\tacceptChildren(visitor, this.initializers);", "-\t\t\tacceptChildren(visitor, updaters);", "+\t\t\tacceptChildren(visitor, this.updaters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9858a93a48da0082ba403c6cf536a6ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void test073()", "signatureAfterChange": " \tpublic void test073()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985ef29f59d75e6f3cdb91bfdb929de5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testWorkingCopy10() throws CoreException", "signatureAfterChange": " public void testWorkingCopy10() throws CoreException", "diff": ["-\t\tIClassFile classFile = this.jarRoot.getPackageFragment(\"workingcopy\").getClassFile(\"Y.class\");", "-\t\tassertNull(\"Should not have source attached\", classFile.getSource());", "-\t\tthis.workingCopy = classFile.becomeWorkingCopy(null/*no problem requestor*/, null/*primary owner*/, null/*no progress*/);", "+\t\tIClassFile clazz = this.jarRoot.getPackageFragment(\"workingcopy\").getClassFile(\"Y.class\");", "+\t\tassertNull(\"Should not have source attached\", clazz.getSource());", "+\t\tthis.workingCopy = clazz.becomeWorkingCopy(null/*no problem requestor*/, null/*primary owner*/, null/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9869222f8b48b21e4e75cea43758ed20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "commitAfterChange": "f62f69d3982b6e2fc2dc316ce0db86aefbf4ba82", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public boolean existsUsingJarTypeCache()", "signatureAfterChange": " public boolean existsUsingJarTypeCache()", "diff": ["+\t\t// info is null", "-\t\t\tinfo = null;", "-\t\t\tinfo = null;", "-\t\t\tinfo = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98847caa07c68bef4bd4d8b5a6f218ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": " \tpublic void test0205() throws JavaModelException", "signatureAfterChange": " \tpublic void test0205() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "988a613cca7e26369a1df68ff793c794", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "4404777119ebb1c8cae6d7a210f7ea976b67879c", "commitAfterChange": "41fe30d0273f5089ef76e570928ab7cb2dabbec3", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " public void uninitializedLocalVariable(LocalVariableBinding binding, ASTNode location)", "signatureAfterChange": " public void uninitializedLocalVariable(LocalVariableBinding binding, ASTNode location)", "diff": ["+\tbinding.tagBits |= TagBits.NotInitialized;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98ae4871b542ce6e88faad8de8606e50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public FieldBinding fieldBinding()", "signatureAfterChange": "  public FieldBinding fieldBinding()", "diff": ["-\treturn binding;", "+\treturn this.binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98dcb449d05052e97bd5f76944b75a63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test0017() throws JavaModelException", "signatureAfterChange": " \tpublic void test0017() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98eb3d4cb8f63b63d75f8e7dd5f01e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic List arguments()", "signatureAfterChange": "  \tpublic List arguments()", "diff": ["-\t\treturn arguments;", "+\t\treturn this.arguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991e0f83629419153edd1fe0e5235621", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testCreateBindings01() throws JavaModelException", "signatureAfterChange": " \tpublic void testCreateBindings01() throws JavaModelException", "diff": ["-\t\t\towner, false);", "+\t\t\towner", "+\t\t);", "-\t\t\towner, false);", "+\t\t\towner", "+\t\t);", "-\t\t\towner, false);", "+\t\t\towner", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991f9a88fdbae486871bd5dc122bbb6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "0e15d25fa751194c4a730be8311430c1b5672143", "commitAfterChange": "373572294c0206d4123f7c006b857ced3a95ec2e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private void buildAll()", "signatureAfterChange": "\r \r private void buildAll()", "diff": ["-\tif (DEBUG)\r", "-\t\tSystem.out.println(\"FULL build\"); //$NON-NLS-1$\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "995aabdd1911f03dc912ba31aafa44c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "c7be658dca7e295ef1036016cec7a2dce2d8927a", "commitAfterChange": "54677808987f266b0a0ff99ba5060706de22d06d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-", "-\t\tif (true) {", "-\t\t\treturn allTests();", "-\t\t}", "-\t\treturn setUpTest(new ASTRewritingTypeDeclTest(\"testEnumDeclaration\"));", "+\t\treturn allTests();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99683cb676ab1e4f8e871afc7bb2d00a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tpublic void test0528() throws JavaModelException", "signatureAfterChange": " \tpublic void test0528() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "996a06482ff2ca44c6e537565861268a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tpublic void test0163() throws JavaModelException", "signatureAfterChange": " \tpublic void test0163() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9972d17db017a6a9ae2f1a4ac88a9988", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "8a0b8147f0cecac2ce3556609ced767532ecf02f", "commitAfterChange": "f7ac9a023a19399b6d2bc4bf79cc66ebc7cf056e", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void testBug103304a()", "signatureAfterChange": " \tpublic void testBug103304a_public()", "diff": ["-\tpublic void testBug103304a() {", "-\t\trunNegativeTest(", "-\t\t\tnew String[] {", "+\tpublic void testBug103304a_public() {", "+\t\tString[] units = new String[] {", "-\t\t\t},", "-\t\t\t//boden\\TestValid.java:8: warning - Tag @see: reference not found: ValidationException", "-\t\t\t//boden\\TestValid.java:12: warning - Tag @see: reference not found: ValidationException#IAFAState.ValidationException(String, IAFAState)", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in boden\\\\TestValid.java (at line 4)\\n\" + ", "-\t\t\t\"\t* @see ValidationException\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in boden\\\\TestValid.java (at line 9)\\n\" + ", "-\t\t\t\"\t* @see ValidationException#IAFAState.ValidationException(String, IAFAState)\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t};", "+\t\tif (complianceLevel.equals(COMPLIANCE_1_3) || complianceLevel.equals(COMPLIANCE_1_4)) {", "+\t\t\trunNegativeTest(units,", "+\t\t\t\t//boden\\TestValid.java:8: warning - Tag @see: reference not found: ValidationException", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in boden\\\\TestValid.java (at line 4)\\n\" + ", "+\t\t\t\t\"\t* @see ValidationException\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in boden\\\\TestValid.java (at line 9)\\n\" + ", "+\t\t\t\t\"\t* @see ValidationException#IAFAState.ValidationException(String, IAFAState)\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Invalid member type qualification\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t);", "+\t\t} else {", "+\t\t\trunConformTest(units);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99a543f3d024f70afd9968bfdb4f4236", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 138, "signatureBeforeChange": " final public void if_icmpgt(Label lbl)", "signatureAfterChange": " final public void if_icmpgt(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_iacmpgt:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b06170bd0ab2752585d977dc55dbad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void test0112() throws JavaModelException", "signatureAfterChange": " \tpublic void test0112() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99bd0103e9b2e42e515b8e725bbb523f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WhileStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement getBody()", "signatureAfterChange": "  \tpublic Statement getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d0a01690f0a8f4fc8c7d8eda4e2982", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f5ba3eda07b1ea41890a7ce793b9da47e6b4d63e", "commitAfterChange": "af33a2b5d21704fd80790ca573818492aac6d737", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo)", "diff": ["-\t\t\t\tif (rootInfo != null && (rootInfo.project.getProject().getFullPath().isPrefixOf(res.getFullPath()))) {", "+\t\t\t\tif (rootInfo != null && rootInfo.isRootOfProject(res.getFullPath())) {", "-\t\t\t\t\treturn NON_JAVA_RESOURCE; // not yet in a package fragment root", "+\t\t\t\t\treturn NON_JAVA_RESOURCE; // not yet in a package fragment root or root of another project"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e1590734972a11c4eb472c6f7a8eec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode( \tBlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode( \tBlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo)", "diff": ["+\tthis.preSynchronizedInitStateIndex =", "+\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+", "+\tthis.mergedSynchronizedInitStateIndex =", "+\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ebd6ee29a6608c6dbe5c5f46187439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["-\t\t\t\trewriteNodeList(node, NormalAnnotation.VALUES_PROPERTY, startOffset, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\trewriteNodeList(node, NormalAnnotation.VALUES_PROPERTY, startOffset, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99fb840ff123537745726bed579e64ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "72316be54b9086b28cc8ddca3e0761905b39515b", "commitAfterChange": "995fcf13bc3ad1e9b32a28fa575739b0c1b6aa41", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "-\t\t\t\tproject.updatePackageFragmentRoots();\r", "+\t\t\t\tthis.projectsToUpdate.add(element.getJavaProject());\r", "-\t\t\t\tproject = (JavaProject) element.getJavaProject();\r", "+\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a014038cdcca376f8a1c3762802509b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 377, "signatureBeforeChange": " public void parse(MethodDeclaration md, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parse(MethodDeclaration md, CompilationUnitDeclaration unit)", "diff": ["-\tif ((md.modifiers & AccSemicolonBody) != 0)", "+\tif ((md.modifiers & ExtraCompilerModifiers.AccSemicolonBody) != 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0d5c56f0e9b2e69718665405cb2ea0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ProcessTaskManager.java", "commitBeforeChange": "0a4e091036fc111fccab2545e3cb076fb9fe9ddc", "commitAfterChange": "2812d86d568ba2c20ada48601e951ea64c90a8dd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void run()", "signatureAfterChange": "  public void run()", "diff": ["+\t\t\t\tif (this.unitToProcess.compilationResult.hasBeenAccepted)", "+\t\t\t\t\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a250c52ad0fe3e531e2d87fcd8879d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void testCompletionPrefixFieldName1() throws JavaModelException", "signatureAfterChange": "   public void testCompletionPrefixFieldName1() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a30b0f21aa49f5992f27584a3fa4e05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 273, "signatureBeforeChange": " \tpublic void test0271() throws JavaModelException", "signatureAfterChange": " \tpublic void test0271() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a33013f9800d580879f3047b5e58d9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "2ac5935e329f05252aa80d99bbc2b0ab777d1cf5", "commitAfterChange": "cab0d5a61247dd56c3860148ec39ed228f1ede1b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic boolean isRawMethod()", "signatureAfterChange": " \tpublic boolean isRawMethod()", "diff": ["-\t\treturn !(this.binding instanceof ParameterizedGenericMethodBinding);", "+\t\treturn !isParameterizedMethod() && !isGenericMethod();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a43e65b6d2713d14a6d20e669b3a8e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "96e4278a6c1307ee0d3c5091e2d41c810a3207e4", "commitAfterChange": "0e54e4ea4ffd60f229f31ee41365e4739addddb6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private Binding findSingleImport(char[][] compoundName, int mask, boolean findStaticImports)", "signatureAfterChange": " private Binding findSingleImport(char[][] compoundName, int mask, boolean findStaticImports)", "diff": ["-\t\tif (this.environment.defaultPackage == null || compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)", "+\t\tif (compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a49f17d3e99c62523e45ab86503f9e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testAccessRestriction8() throws Exception", "signatureAfterChange": " public void testAccessRestriction8() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a5ae73bf290e0c794a7c9147dc2a0f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 424, "methodNumberAfterChange": 424, "signatureBeforeChange": " \tpublic void test405()", "signatureAfterChange": " \tpublic void test405()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8b9d188696bc32d8f5978272656d42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  public void testCompletionMethodThrowsClause() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodThrowsClause() throws JavaModelException", "diff": ["-\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION),", "+\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8c0dcea3a6ddf27deccb42bb9a651c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tpublic void test0323() throws JavaModelException", "signatureAfterChange": " \tpublic void test0323() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab87b09d3e222d4e0f4ba66cf36cc2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " \tpublic void test0183() throws JavaModelException", "signatureAfterChange": " \tpublic void test0183() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af763f211e037e7f6b9cf07a178a109", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " \tprotected void setUp () throws Exception", "signatureAfterChange": " \tprotected void setUp () throws Exception", "diff": ["-\t\tif (this.discard) {", "-\t\t\tthis.workingCopies = null;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b279aef99cdf778461f181a36a1af7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\treturn optionalExpression;", "+\t\treturn this.optionalExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5a071f266faa68a8065fc044d343d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "98c49c7e442095e4ddf2a6384735e696e7050501", "commitAfterChange": "182b54f27909efda960637e81e9fbc3f1f6ab16a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\t\t\t// we want to force an line number entry to get an end position after the switch statement", "+\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b6dcc848e9be7bf9831015f8d3d1d96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnumConstantDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b946d785c2eb761f7a3ab8f238c034b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testAccessRestriction3() throws Exception", "signatureAfterChange": " public void testAccessRestriction3() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9baeaa22eeb8c96ca89b15abb2a9c695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Statement getBody()", "signatureAfterChange": "  \tpublic Statement getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd0f4465d18f887b6aa9de1af4664b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionContextTests.java", "commitBeforeChange": "72a4987e03f2b3b01c1f1fa7e641153e8b607b6e", "commitAfterChange": "1da80432c78bbaea0a8998b6847ad81e0d9c87be", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void test0132() throws JavaModelException", "signatureAfterChange": " public void test0132() throws JavaModelException", "diff": ["-\tint tokenStart = -1;", "-\tint tokenEnd = -1;", "+\tint tokenStart = str.lastIndexOf(\"ZZZZ\");", "+\tint tokenEnd = tokenStart + \"ZZZZ\".length() - 1;", "-\t\t\"completion token=null\\n\" +", "-\t\t\"completion token kind=TOKEN_KIND_UNKNOWN\\n\" +", "+\t\t\"completion token=\\\"ZZZZ\\\"\\n\" +", "+\t\t\"completion token kind=TOKEN_KIND_NAME\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd6346b44d911cf41ab2b982ca3f222", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic TextEdit rewriteAST() throws JavaModelException, IllegalArgumentException", "signatureAfterChange": " \tpublic TextEdit rewriteAST() throws JavaModelException, IllegalArgumentException", "diff": ["-\t\treturn internalRewriteAST(content, lineInfo, lineDelim, astRoot.getCommentList(), options, rootNode);", "+\t\treturn internalRewriteAST(content, lineInfo, lineDelim, astRoot.getCommentList(), options, rootNode, (RecoveryScannerData)astRoot.getStatementsRecoveryData());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9be31c10ae3a5e965d07bd4c293b08ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "8758dd14429783f320e9886f9e8b83edae58524b", "commitAfterChange": "5d659b26c6aa5eb4fc698fe62dca975ceee0bdfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public PublicScanner()", "signatureAfterChange": "  public PublicScanner()", "diff": ["-\tthis(false /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, false /*strict comment*/, null/*taskTag*/, null/*taskPriorities*/);", "+\tthis(false /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, null/*taskTag*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bf147085dfa9e91b133eb902ecdc300", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 324, "signatureBeforeChange": " \tpublic void test0322() throws JavaModelException", "signatureAfterChange": " \tpublic void test0322() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c177137f5b01acfcfc14578b7b7204b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "40ff73b7071407f455ce167883a827d5d0333258", "commitAfterChange": "20607cc9da90bd1294c224d1eff6327bec9954ac", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tprivate void completionOnSingleNameReference(ASTNode astNode, ASTNode astNodeParent, Scope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate void completionOnSingleNameReference(ASTNode astNode, ASTNode astNodeParent, Scope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false, false);", "+\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2ae6249fc6a3b07da623a27be884fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void test0009() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0009() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c42893e436967981798180f0d5edf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, char[] name)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, char[] name)", "diff": ["-\treturn camelCaseMatch(pattern, 0, pattern.length, name, 0, name.length);", "+\treturn camelCaseMatch(pattern, 0, pattern.length, name, 0, name.length, true/*prefix match*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c48881cf59806b23da2ea447d8bbde4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "6b523d8b142e7961940f74fda0096160e5c68ef8", "commitAfterChange": "8427980767e9f9fbfd153bda7df26918914a7430", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \t \tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t \tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "diff": ["-\t\t\tvariableDeclarationFragment.setFlags(ASTNode.MALFORMED);", "+\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c50111ce48d92c54eec43fdd50020d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTPositionsTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c54fa28dd40e3184c60e38907b0f4b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "signatureAfterChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "diff": ["-\t\t\tif (this.astLevel == AST.JLS3_INTERNAL) {", "+\t\t\tif (this.astLevel == getJLS3()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c6afad7e0314de34728452cb868a41a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 533, "methodNumberAfterChange": 536, "signatureBeforeChange": "  \tpublic void test499()", "signatureAfterChange": "  \tpublic void test499()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c983274857b3f15cda42021805519bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": " \tpublic void test0383() throws JavaModelException", "signatureAfterChange": " \tpublic void test0383() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca9bab7430617c33bdc81b94a7eadc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/FileListBlock.java", "commitBeforeChange": "bdfcbb6fac28ce2d615a792c6b96756fd4d8d082", "commitAfterChange": "d285a739d23e3f82b667be77d5bebf56b7f90214", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic IndexedFile getFile(int fileNum) throws IOException", "signatureAfterChange": " \tpublic IndexedFile getFile(int fileNum)", "diff": ["-\tpublic IndexedFile getFile(int fileNum) throws IOException {", "+\tpublic IndexedFile getFile(int fileNum) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cae941afa8aec7f7f22e99fe90d88a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "2e45e13022b2a9411380e4e0b6133d9f38ca8be4", "commitAfterChange": "d11ec20c5ee631d9416842868616675440352aca", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void seekTypes(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tpublic void seekTypes(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\t\t\tmatchName= matchName.replace('$', '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cb258889624056ca390932419a06684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void test0427() throws JavaModelException", "signatureAfterChange": " \tpublic void test0427() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cb2c360e0ba346cecf9804381bd1d5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": " \tpublic void test0251() throws JavaModelException", "signatureAfterChange": " \tpublic void test0251() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cc2ada0eec8489994dadf42ce4d481d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": " public IType getSuperclass(IType type)", "signatureAfterChange": " public IType getSuperclass(IType type)", "diff": ["-\treturn (IType) this.classToSuperclass.get(type);", "+\treturn this.classToSuperclass.get(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d00064aeb5d7135cd0d6edc8add709c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void addType(ReferenceBinding element)", "signatureAfterChange": " void addType(ReferenceBinding element)", "diff": ["-\tif (element.isAnnotationType() || element instanceof UnresolvedReferenceBinding) // unresolved types don't yet have the modifiers set", "-\t\tcheckIfNullAnnotationType(element);", "+\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled)", "+\t\tif (element.isAnnotationType() || element instanceof UnresolvedReferenceBinding) // unresolved types don't yet have the modifiers set", "+\t\t\tcheckIfNullAnnotationType(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1079f41b3519db871639f724f3d6f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test0403() throws JavaModelException", "signatureAfterChange": " \tpublic void test0403() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2068c78c75aca0e0d6280dad3c0a15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void test056() throws JavaModelException", "signatureAfterChange": "  public void test056() throws JavaModelException", "diff": ["-\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+\"25}\"", "+\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d442ee461f4a3eea20fd724700c62b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " \tpublic void test352()", "signatureAfterChange": " \tpublic void test352()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d4b86774af3f8f580d53a9bf21284d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 561, "methodNumberAfterChange": 564, "signatureBeforeChange": " \tpublic void test527()", "signatureAfterChange": " \tpublic void test527()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d79465d9d39b11cb35695488bf211e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "3bd4baedd250e4d3a19eb5f32f5553fba8f7a1f4", "commitAfterChange": "fe6848300377e2f320c70d2b17e483820c74fa24", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tpublic void printModifiers()", "signatureAfterChange": "  \tpublic void printModifiers()", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tcount++; ", "+\t\t\t\t\t\t\t\t\tcount++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dc1e0c3bb4ed83b1ab907746bc8c812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 332, "methodNumberAfterChange": 332, "signatureBeforeChange": " \tpublic void test0684() throws JavaModelException", "signatureAfterChange": " \tpublic void test0684() throws JavaModelException", "diff": ["-\t\tASTNode node = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode node = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dc33a66e787c931ccedea9cf9c30210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 317, "signatureBeforeChange": " \tpublic void test0315() throws JavaModelException", "signatureAfterChange": " \tpublic void test0315() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df2a21aa7840ea80b1eb179480c606d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LabeledStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement getBody()", "signatureAfterChange": "  \tpublic Statement getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e04384ca46eec9b0d23ec5f74dce04c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic void test0092() throws JavaModelException", "signatureAfterChange": " \tpublic void test0092() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e11f1759a2bfa4096c242d1ad191f8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(String path, String source) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(String path, String source) throws JavaModelException", "diff": ["-\treturn super.getWorkingCopy(path, source, this.owner, null);", "+\treturn super.getWorkingCopy(path, source, this.wcOwner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1985421dc868d56c98b81578ca5e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "8abd75076e932cee4c42294e09e5c3451d79df9f", "commitAfterChange": "e864d30567ba5eac714ba35046546cbeb9eaf23a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void copyQueryResults(HashtableOfObject categoryToWords, int newPosition) throws IOException", "signatureAfterChange": " private void copyQueryResults(HashtableOfObject categoryToWords, int newPosition)", "diff": ["-private void copyQueryResults(HashtableOfObject categoryToWords, int newPosition) throws IOException {", "+private void copyQueryResults(HashtableOfObject categoryToWords, int newPosition) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e5ff607b2626c80134a349fc21b81dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Constant optimizedBooleanConstant()", "signatureAfterChange": "  public Constant optimizedBooleanConstant()", "diff": ["-\tpublic Constant optimizedBooleanConstant() {", "-\t\tswitch (this.resolvedType.id) {", "-\t\t\tcase T_boolean :", "-\t\t\tcase T_JavaLangBoolean :\t\t", "-\t\t\t\treturn this.constant != NotAConstant ? this.constant : this.binding.constant();", "-\t\t\tdefault :", "-\t\t\t\treturn NotAConstant;", "+", "+public Constant optimizedBooleanConstant() {", "+\tswitch (this.resolvedType.id) {", "+\t\tcase T_boolean :", "+\t\tcase T_JavaLangBoolean :\t\t", "+\t\t\treturn this.constant != Constant.NotAConstant ? this.constant : this.binding.constant();", "+\t\tdefault :", "+\t\t\treturn Constant.NotAConstant;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea6a6bfaa87d7c886e9463f35a27bf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 175, "signatureBeforeChange": " \tpublic boolean visit(ParameterizedType node)", "signatureAfterChange": " \tpublic boolean visit(ParameterizedType node)", "diff": ["-\t\t\t\trewriteNodeList(node, ParameterizedType.TYPE_ARGUMENTS_PROPERTY, startOffset, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\trewriteNodeList(node, ParameterizedType.TYPE_ARGUMENTS_PROPERTY, startOffset, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eb7655421dc0b17659f7ceadd0e85d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "bdfcbb6fac28ce2d615a792c6b96756fd4d8d082", "commitAfterChange": "d285a739d23e3f82b667be77d5bebf56b7f90214", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void moveToNextWordEntry() throws IOException", "signatureAfterChange": " \tpublic void moveToNextWordEntry()", "diff": ["-\tpublic void moveToNextWordEntry() throws IOException {", "+\tpublic void moveToNextWordEntry() /* throws IOException */ {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f12140e57611769ca6e1214d4a2083f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "48cc83ca64e25de154567688d6d5a836b273bee1", "commitAfterChange": "fdcb8050ac88fb7d983b388fab655bdfe87bdbf6", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void test088()", "signatureAfterChange": " public void test088()", "diff": ["-\tif (System.getProperty(\"java.version\").startsWith(\"1.6\")) {", "+\tif (isJRELevel(\"1.6\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f121a29114c838e4ddb006d2a5c3c59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testCompletionFindMethodInThis() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindMethodInThis() throws JavaModelException", "diff": ["-\t\t\"element:foobar    completion:foobar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:foobar    completion:foobar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f42214d7fcae6a9f4bbcd1fed4f7709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": " \tpublic void test0561() throws JavaModelException", "signatureAfterChange": " \tpublic void test0561() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f5f5ac9b2925b06c354486c872cee4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "80e40b4c60040fa0aa8e1c95f16e2597f3f0acf0", "commitAfterChange": "f9277e3d6f326ff6a770d54a63a8fe0127208bbc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic Element newElement(Binding binding)", "signatureAfterChange": " \t \tpublic Element newElement(Binding binding)", "diff": ["-\t\t\treturn new VariableElementImpl(_env, binding);", "+\t\t\treturn new VariableElementImpl(_env, (VariableBinding) binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f630b4a4cf1e998aa088bd46dd36070", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "f5dedbad023ed535da8140c4ada528c2bf574f20", "commitAfterChange": "b7dcee8ec99a66c7cd3b7ec7ac6ac22c9994d5db", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testEditExtendsSourceType() throws JavaModelException, CoreException", "signatureAfterChange": " public void testEditExtendsSourceType() throws JavaModelException, CoreException", "diff": ["-\t\tthis.assertOneChange(h);", "+\t\tassertOneChange(h);", "-\t\tthis.reset();", "+\t\treset();", "-\t\tthis.assertOneChange(h);", "+\t\tassertOneChange(h);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f76e4b5f93177a0f9060a7dce052a1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "78767901d49aa2d91e25d7e6e9bbe4431dd2b2d2", "commitAfterChange": "1e987287dbfcdfe82625a14fee2d7b9a8fa8f056", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static String updateSignature(String originalSignature, String annotatedSignature, int updatePosition, MergeStrategy mergeStrategy)", "signatureAfterChange": "  \tprivate static String updateSignature(String originalSignature, String annotatedSignature, int updatePosition, MergeStrategy mergeStrategy)", "diff": ["-\t\t\t\t\twrapper.start = wrapper.computeEnd() + 1;", "+\t\t\t\t\twrapper.start = wrapper.skipAngleContents(wrapper.computeEnd()) + 1;", "-\t\t\t\tint end = wrapper.computeEnd();", "-\t\t\t\tend = wrapper.skipAngleContents(end);", "+\t\t\t\tint end = wrapper.skipAngleContents(wrapper.computeEnd());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f7bb1dec51bae3fbc9f4361361f7cf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ForStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Statement getBody()", "signatureAfterChange": "  \tpublic Statement getBody()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f7fd7a45b6d3ce595a5ef7ada905188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/TypeNameMatch.java", "commitBeforeChange": "c93b7fc02953335388042ab5bd4ec34f70464821", "commitAfterChange": "c9213ae595dd32af0d2b3bd7c31b733e8b1d0dd1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": " public final int getModifiers()", "signatureAfterChange": " public int getModifiers()", "diff": ["-public final int getModifiers() {", "-\treturn modifiers;", "-}", "+public int getModifiers() {", "+\treturn this.modifiers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f8d60f0afda06b5e47d5ac951078753", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 576, "methodNumberAfterChange": 576, "signatureBeforeChange": " \tpublic void test557()", "signatureAfterChange": " \tpublic void test557()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9faf73739d7a395d8265116e2c7ecfc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "a40cb3ef59ebbd67185c7faac7fb4434fed79ef4", "commitAfterChange": "ee62bf9b530a584a4251f975aa510ac6ec2f5d0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\t \t\tpublic ASTNode getEndNode()", "signatureAfterChange": " \t\t \t\tpublic ASTNode getEndNode()", "diff": ["-\t\t\treturn last;", "+\t\t\treturn this.last;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc1b530ae611f5c348eca9783e5a743", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc2ddf316e2169ce30855e0898c225c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 326, "methodNumberAfterChange": 326, "signatureBeforeChange": " \tpublic void test0324() throws JavaModelException", "signatureAfterChange": " \tpublic void test0324() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc771001ed76bfe205cfe73906e6040", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["-\t\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], (short) offset);", "+\t\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], offset);", "-\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], (short) offset);", "+\t\t\t\tcodeStream.writeSignedShort(forwardReferences[i], offset);", "-\t\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, (short) offset);", "+\t\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, offset);", "-\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, (short) offset);", "+\t\t\t\t\t\t\t\tcodeStream.writeSignedShort(forwardPosition, offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fd828d9cb13624e74fd6e37b5a11af4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public boolean equals(Object o)", "signatureAfterChange": "  public boolean equals(Object o)", "diff": ["+\t\t&& CharOperation.equals(inclusionPatterns, md.inclusionPatterns)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ff3b6c91522d7cc5a926f120caa2508", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " \tpublic void test156()", "signatureAfterChange": " \tpublic void test156()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00daef2afb6c7ef843940139ab8ac36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "commitAfterChange": "0c80d88773ddbe1e035accca9dfc037266a710bf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateSubRoutineInvocation( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream)", "signatureAfterChange": " \tpublic void generateSubRoutineInvocation( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream)", "diff": ["-\t\t\tif (currentScope.environment().options.targetJDK < ClassFileConstants.JDK_DEFERRED) { ", "+\t\t\tif (currentScope.environment().options.useJsrBytecode) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a024ec4f888137653eee71b2cfce1124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void endVisit(TryStatement node)", "signatureAfterChange": " \tpublic void endVisit(AnnotationTypeDeclaration node)", "diff": ["+\t */", "+\tpublic void endVisit(AnnotationTypeDeclaration node) {", "+\t\tadd(node);", "+\t\tnode.setName(node.getAST().newSimpleName(\"XXX\")); //$NON-NLS-1$", "+\t\tdetachedListElement(node.bodyDeclarations());", "+\t}", "-\t */", "-\tpublic void endVisit(TryStatement node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0293a8604f84b6a466c4ee9d9b38bc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CastExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a038e1a63d34f142bb711e79287d2776", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "03026f75f39f11c89ea1f29e4a5f2b9760be3045", "commitAfterChange": "fa3a52963a70298064a79818b9188ed1e3795a34", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["+\tthis.useEnumAsAnIndentifier = false;", "+\t\t\t\t\t\t\t\tthis.useEnumAsAnIndentifier = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a05af956fbb9a61ae07d90cc36e31c15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "1a9cac53d4ac29d3f80117ac2f0972315a7c6461", "commitAfterChange": "16bbff04917b9cd9bd7cceaf4adfc1563daef0bc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "signatureAfterChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "diff": ["+\t\t\t\t\t\t\tinfCtx18.stepCompleted = InferenceContext18.APPLICABILITY_INFERRED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a092e2318c8d9233da536271e5b59e7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "fa0cb692ee03c2c22dc8e7a47c124e2e56a14c69", "commitAfterChange": "ce2a602e5903899f3f01940374b55132aa4bf67e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "signatureAfterChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "diff": ["+\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;", "-\t\t\t\tif (needValue) {", "+\t\t\t\tif (needValue || complyTo14) {", "-\t\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0c4c0b887bbd5de47c0be8530b7f1a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "7f04146f7ecfc97ac8decbf845cb74d2c5fd9ef2", "commitAfterChange": "904675358dc0c5cf51f156f5fad299110702a532", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 28, "signatureBeforeChange": " public static char[][] getThrownExceptionTypes(char[] methodSignature) throws IllegalArgumentException", "signatureAfterChange": " public static char[][] getThrownExceptionTypes(char[] methodSignature) throws IllegalArgumentException", "diff": ["-\tint exceptionStart = scanTypeSignature(methodSignature, paren+1) + 1;", "+\tint exceptionStart = Util.scanTypeSignature(methodSignature, paren+1) + 1;", "-\t\ti = scanTypeSignature(methodSignature, i) + 1;", "+\t\ti = Util.scanTypeSignature(methodSignature, i) + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0c6312f55342ea2e4d9690c91347a97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "8238d4886dd5cc2d15b3226c07195562e9c81134", "commitAfterChange": "d1facd69b9dc2127e7162415007081afa0f4348b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tTypeBound(InferenceVariable inferenceVariable, TypeBinding typeBinding, int relation)", "signatureAfterChange": " \tTypeBound(InferenceVariable inferenceVariable, TypeBinding typeBinding, int relation)", "diff": ["-\t\tthis.right = typeBinding != null && typeBinding.isLocalType() ? typeBinding.superclass() : typeBinding;", "+\t\tthis.right = safeType(typeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e468901015a952870b1f3ca0c4e4d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic Type getReturnType2()", "signatureAfterChange": "  \tpublic Type getReturnType2()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1061e2c25c6182caacf5930c697cb68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void analyseCode(CompilationUnitScope unitScope)", "signatureAfterChange": " public void analyseCode(CompilationUnitScope unitScope)", "diff": ["-\t */", "-\tpublic void analyseCode(CompilationUnitScope unitScope) {", "-", "-\t\tif (ignoreFurtherInvestigation)", "-\t\t\treturn;", "-\t\ttry {", "-\t\t\tinternalAnalyseCode(null, FlowInfo.initial(maxFieldCount));", "-\t\t} catch (AbortType e) {", "-\t\t\tthis.ignoreFurtherInvestigation = true;", "-\t\t}", "+ */", "+public void analyseCode(CompilationUnitScope unitScope) {", "+\tif (this.ignoreFurtherInvestigation)", "+\t\treturn;", "+\ttry {", "+\t\tinternalAnalyseCode(null, FlowInfo.initial(this.maxFieldCount));", "+\t} catch (AbortType e) {", "+\t\tthis.ignoreFurtherInvestigation = true;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a13b689afcfc34da392d64209b3b887e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test053() throws JavaModelException", "signatureAfterChange": "  public void test053() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+\"25}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a156c02e7f764a9b666904b9f968f192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f5ba3eda07b1ea41890a7ce793b9da47e6b4d63e", "commitAfterChange": "af33a2b5d21704fd80790ca573818492aac6d737", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes, int eventType)", "signatureAfterChange": " \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes, int eventType)", "diff": ["-\t\t\t\t\tif (rootInfo != null && (rootInfo.project.getProject().getFullPath().isPrefixOf(res.getFullPath()))) {", "+\t\t\t\t\tif (rootInfo != null && rootInfo.isRootOfProject(res.getFullPath())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f529ff64e4ab5e50ee6b2059683fd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 517, "methodNumberAfterChange": 517, "signatureBeforeChange": " \t \tpublic void test498()", "signatureAfterChange": " \t \tpublic void test498()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ffc7340b724f6b709ac05cf29365d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PostfixExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21e7922299b7ab819220eda8b839593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 441, "methodNumberAfterChange": 441, "signatureBeforeChange": " \tpublic void test422()", "signatureAfterChange": " \tpublic void test422()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21ed411470da6fb751fcf5d229c6b2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t\t \t \tpublic void testRemove1() throws Exception", "signatureAfterChange": "\t\t \t \tpublic void testRemove1() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\trewrite.markAsRemoved((ASTNode) statements.get(0), null);", "+\t\trewrite.remove((ASTNode) statements.get(0), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a225b81b8499dba44043fc376c4f9374", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 285, "signatureBeforeChange": " \tpublic void test0283() throws JavaModelException", "signatureAfterChange": " \tpublic void test0283() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a228343a284817fba7ad6e4d32e0b175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tIJavaProject project = (IJavaProject) element;", "+\t\t\t\t\t\tJavaProject project = (JavaProject) element;", "-\t\t\t\t\t\t\tclasspath = project.getResolvedClasspath(true);", "+\t\t\t\t\t\t\tclasspath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "-\t\t\t\t\t\t\tproject = projects[j];", "+\t\t\t\t\t\t\tproject = (JavaProject) projects[j];", "-\t\t\t\t\t\t\t\tclasspath = project.getResolvedClasspath(true);", "+\t\t\t\t\t\t\t\tclasspath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "-\t\t\tIJavaProject project = projects[i];", "+\t\t\tJavaProject project = (JavaProject) projects[i];", "-\t\t\t\tentries = project.getResolvedClasspath(true);", "+\t\t\t\tentries = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2349feaa8ece160987d134fb927a442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ForStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic List initializers()", "signatureAfterChange": "  \tpublic List initializers()", "diff": ["-\t\treturn initializers;", "+\t\treturn this.initializers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f03de973b482e0ec853fe45f72bd8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testParseCompilationUnit3() throws CoreException, IOException", "signatureAfterChange": " \tpublic void testParseCompilationUnit3() throws CoreException", "diff": ["-\tpublic void testParseCompilationUnit3() throws CoreException, IOException {", "+\tpublic void testParseCompilationUnit3() throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f9528dca1b58f3eadc62218f2f2e50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \t\tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": "\r \t\tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\t\tAnnotation[] annotations = argument.annotations;\r", "-\t\t\tthis.primaryAnnotations = annotations;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f9c09ca3568935ca622fdd59376b9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\t\t\t\t\telement = new RecoveredInitializer((Initializer) field, null, 1, this);", "+\t\t\t\t\telement = new RecoveredInitializer(field, null, 1, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a301d57e75cc7936515bd6af27e586e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate int computeRelevanceForException(char[] proposalName)", "signatureAfterChange": "\r \tprivate int computeRelevanceForException(char[] proposalName)", "diff": ["-\t\t\t(CharOperation.match(EXCEPTION, proposalName, false) ||\r", "-\t\t\tCharOperation.match(ERROR, proposalName, false))) { \r", "-\t\t\treturn EXCEPTIONRELEVANCE;\r", "+\t\t\t(CharOperation.match(EXCEPTION_PATTERN, proposalName, false) ||\r", "+\t\t\tCharOperation.match(ERROR_PATTERN, proposalName, false))) { \r", "+\t\t\treturn R_EXCEPTION;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a30ec1fda11b7fac66f58f8bbb2c4977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "6136184df5d87b2fe6ebeec9fd9dcf39b1b92cb1", "commitAfterChange": "0c80d88773ddbe1e035accca9dfc037266a710bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t} else if (scope.environment().options.targetJDK < ClassFileConstants.JDK_DEFERRED) {", "+\t\t\t} else if (scope.environment().options.useJsrBytecode) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31b7680f5cfb12ff1d5cc8f787d1b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceCompletionTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tpublic void accept(CompletionProposal proposal)", "signatureAfterChange": " \t\tpublic void accept(CompletionProposal proposal)", "diff": ["-\t\t\tproposalCount++;", "+\t\t\tPROPOSAL_COUNTS[TESTS_LENGTH-TESTS_COUNT]++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a320be915733550bb6127df44bdc1ffe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LabeledStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a332b1258185ba335106d4f02def7be0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tpublic void test0167() throws JavaModelException", "signatureAfterChange": " \tpublic void test0167() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3349b8aecedfd62e9ab7dd61fb6b369", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b7ea5744525df388c37b95455e0adfb081a232d5", "commitAfterChange": "f5007b7c0d4ff2d3bb6b4378ddf1e0e19d140cdd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "signatureAfterChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "diff": ["-\t\t\t\t\t\tJavaModelManager.getJavaModelManager().removePerProjectInfo((JavaProject) element);", "+\t\t\t\t\t\tthis.manager.removePerProjectInfo((JavaProject) element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a33edee2071d1be0851768415cc126e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic String getIdentifier()", "signatureAfterChange": "  \tpublic String getIdentifier()", "diff": ["-\t\treturn identifier;", "+\t\treturn this.identifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a35ca7ed1d419e6ae88b4e80d1a32f6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "c50c590bab482d39145c20debd2941d0e0bbc56e", "commitAfterChange": "ff8854dc7ced090ef02c4af9dd40d2f94e485bfd", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(IfStatement ifStatement, BlockScope scope)", "diff": ["-\t\t\t\t\tthenStatement.traverse(this, scope);", "+\t\t\t\t\tif (thenStatement instanceof Block) {", "+\t\t\t\t\t\tthenStatement.traverse(this, scope);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t\t\tthis.scribe.indent();", "+\t\t\t\t\t\tthenStatement.traverse(this, scope);", "+\t\t\t\t\t\tthis.scribe.unIndent();", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37700a34907a65efec43113a271335c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testBug403216_1()", "signatureAfterChange": " \tpublic void testBug403216_1()", "diff": ["-\t\trunConformTest(", "+\t\trunConformTestWithLibs(", "-\t\t\t});", "+\t\t\t},", "+\t\t\tnull,", "+\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a38cbd797ca02299dcc23b03b6c14924", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testCorrespondingResourceNonExistingCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCorrespondingResourceNonExistingCompilationUnit() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tICompilationUnit compilationUnit = this.getCompilationUnit(\"/P/src/X.java\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tICompilationUnit compilationUnit = getCompilationUnit(\"/P/src/X.java\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a38e4e1f48a156c15edde5d8649d9d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void test0052() throws JavaModelException", "signatureAfterChange": " \tpublic void test0052() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a39939da2b83cbb3a992595caa99b7c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 190, "signatureBeforeChange": "  \tpublic void test155()", "signatureAfterChange": "  \tpublic void test155()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3ed69bd5ceb119517d2d4f7459b28fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 682, "methodNumberAfterChange": 682, "signatureBeforeChange": " public void testDeprecationCheck13() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck13() throws JavaModelException", "diff": ["-\t\t\t\t\"Test.Inner1[TYPE_REF]{Inner1, deprecation, Ldeprecation.Test$Inner1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"Test.Inner2[TYPE_REF]{Inner2, deprecation, Ldeprecation.Test$Inner2;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"Test.Inner1[TYPE_REF]{Inner1, deprecation, Ldeprecation.Test$Inner1;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"Test.Inner2[TYPE_REF]{Inner2, deprecation, Ldeprecation.Test$Inner2;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3fa338c313e540488f48ac35c32c7b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int matchLevel(Binding binding)", "signatureAfterChange": " public int matchLevel(Binding binding)", "diff": ["+ */", "+public int matchLevel(Binding binding) {", "+\tif (binding == null) return INACCURATE_MATCH;", "+\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;", "+", "+\tTypeBinding typeBinding = (TypeBinding) binding;", "+\tif (typeBinding instanceof ArrayBinding)", "+\t\ttypeBinding = ((ArrayBinding) typeBinding).leafComponentType;", "+\tif (typeBinding instanceof ProblemReferenceBinding) return INACCURATE_MATCH;", "+", "+\twhile (typeBinding != null) {", "+\t\tint level = this.matchLevelForType(this.simpleName, this.qualification, typeBinding);", "+\t\tif (level != IMPOSSIBLE_MATCH) return level;", "+\t\tif (typeBinding instanceof ReferenceBinding)", "+\t\t\ttypeBinding = ((ReferenceBinding) typeBinding).enclosingType();", "+\t\telse return IMPOSSIBLE_MATCH;", "+\t}", "+\treturn IMPOSSIBLE_MATCH;", "+}", "- */", "-public int matchLevel(Binding binding) {", "-\tif (binding == null) return INACCURATE_MATCH;", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;", "-\tTypeBinding typeBinding = (TypeBinding)binding;", "-\tif (typeBinding instanceof ArrayBinding) typeBinding = ((ArrayBinding)typeBinding).leafComponentType;", "-\tif (typeBinding instanceof ProblemReferenceBinding) return INACCURATE_MATCH;", "-", "-\twhile (typeBinding != null ) {", "-\t\tint level = this.matchLevelForType(this.simpleName, this.qualification, typeBinding);", "-\t\tif (level != IMPOSSIBLE_MATCH) {", "-\t\t\treturn level;", "-\t\t}", "-\t\tif (typeBinding instanceof ReferenceBinding){", "-\t\t\ttypeBinding = ((ReferenceBinding)typeBinding).enclosingType();", "-\t\t} else {", "-\t\t\ttypeBinding = null;", "-\t\t}", "-\t}", "-\treturn IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40e93441bd081aba9161a919b368b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCamelCaseMethod1() throws JavaModelException", "signatureAfterChange": " public void testCamelCaseMethod1() throws JavaModelException", "diff": ["-\t\t\t\t\"oneTwoThree[METHOD_REF]{oneTwoThree(), Lcamelcase.Test;, ()V, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"oTTMethod[METHOD_REF]{oTTMethod(), Lcamelcase.Test;, ()V, oTTMethod, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"oneTwoThree[METHOD_REF]{oneTwoThree(), Lcamelcase.Test;, ()V, oneTwoThree, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTMethod[METHOD_REF]{oTTMethod(), Lcamelcase.Test;, ()V, oTTMethod, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4286c8ce10506241cc0183dbf614e60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " public boolean hasResourceChanged()", "signatureAfterChange": " public boolean hasResourceChanged()", "diff": ["-\treturn ((CompilationUnitElementInfo)info).timestamp != getResource().getModificationStamp();", "+\tIResource resource = getResource();", "+\tif (resource == null) return false;", "+\treturn ((CompilationUnitElementInfo)info).timestamp != resource.getModificationStamp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4378d9c5f86472409a2fa9c2a11b680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testIsOnClasspath3() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath3() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tIFile file = this.createFile(\"/P/src/p/readme.txt\", \"\");", "+\tsetClasspath(new String[] {\"/P/src\", \"\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tIFile file = createFile(\"/P/src/p/readme.txt\", \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43babc403c056b951071dc6b871d555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a444787a750e74d169a47c0031bd588d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic char[] genericTypeSignature()", "signatureAfterChange": " \tpublic char[] genericTypeSignature()", "diff": ["+\t\t\tif (isAnnotatedTypeWithoutArguments())", "+\t\t\t\treturn this.genericTypeSignature = this.type.genericTypeSignature();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a45de35a26aa79effed76ea1f804844f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "8d4ab5644565c055b67fa7745388cbe96026e76a", "commitAfterChange": "d40d65cc310f8b80e4964046fc88b861b3de2b63", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tpublic IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["+\t\t\t\t\tparentElement = createElement(scope.parent, elementPosition, unit, existingElements, knownScopes);", "-\t\t\t\t\t\tparentElement = createElement(scope.parent, elementPosition, unit, existingElements, knownScopes);", "+\t\t\t\t\treturn parentElement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a46fdcc30a8db5b736708ba8608696c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": " \tpublic void test0181() throws JavaModelException", "signatureAfterChange": " \tpublic void test0181() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b9388b3d62722965e84e0bf19b1344", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ForStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\treturn optionalConditionExpression;", "+\t\treturn this.optionalConditionExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4bb38aabbbb6dd8618a017a1117395a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "3aeda49982d529a7b3b4520a8ddfc77c62e6f6ba", "commitAfterChange": "756bb6bed26516f6a7f37d505e2052383d6cc457", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public int kind()", "signatureAfterChange": "  public int kind()", "diff": ["-\tif (this.typeVariables != NoTypeVariables) return GENERIC_TYPE;", "-\treturn TYPE;", "+\tif (this.typeVariables != NoTypeVariables) return Binding.GENERIC_TYPE;", "+\treturn Binding.TYPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4cb8ed3a7a171b2b96aa519af3cc363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " \tpublic void test0529() throws JavaModelException", "signatureAfterChange": " \tpublic void test0529() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d799cc855151c3f5f47a9a2ebabf11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " public void testCompletionFindMethod1() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindMethod1() throws JavaModelException", "diff": ["-\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED),", "+\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED)+\"\\n\" +", "+\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5213a0de5d1c957979572c8b8536b88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "7e84ddff8020699085c19f62a855c62b5f709c81", "commitAfterChange": "226043f9dd3d1e9322a49e57d09a88a325e9c26a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tfinal void preValueChange(SimplePropertyDescriptor property)", "signatureAfterChange": "  \tfinal void preValueChange(SimplePropertyDescriptor property)", "diff": ["+\t\tthis.ast.preValueChangeEvent(this, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a52864416c92011a81d313d99360745e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "ae980cab0e47f9f9109f15f27f7ea765847cf9bc", "commitAfterChange": "4d657d16dcce8d103534cfb60b4be82696664aa1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tthis.returnAddressVariable =", "-\t\t\t\t\tnew LocalVariableBinding(SecretReturnName, upperScope.getJavaLangObject(), AccDefault, false);", "-\t\t\t\tfinallyScope.addLocalVariable(returnAddressVariable);", "-\t\t\t\tthis.returnAddressVariable.constant = NotAConstant; // not inlinable", "+\t\t\t\tif (upperScope.environment().options.targetJDK < ClassFileConstants.JDK1_5) {", "+\t\t\t\t\tthis.returnAddressVariable =", "+\t\t\t\t\t\tnew LocalVariableBinding(SecretReturnName, upperScope.getJavaLangObject(), AccDefault, false);", "+\t\t\t\t\tfinallyScope.addLocalVariable(returnAddressVariable);", "+\t\t\t\t\tthis.returnAddressVariable.constant = NotAConstant; // not inlinable", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5492e2652d788a5e910cf6c188e0099", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(\".java\"); //$NON-NLS-1$", "+\t\t\tStringBuffer buffer = new StringBuffer(SuffixConstants.SUFFIX_STRING_java);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5771764491bc07575cbe00e02335e04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a6946fbab8602e54efee057db28173", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": "   \tprivate void runTest(String packageName, String compilationUnitName)", "signatureAfterChange": "   \tprivate void runTest(String packageName, String compilationUnitName)", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a6da73252798bb698e6c5d11c4c839", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "0e15d25fa751194c4a730be8311430c1b5672143", "commitAfterChange": "373572294c0206d4123f7c006b857ced3a95ec2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r private void buildDeltas(SimpleLookupTable deltas)", "signatureAfterChange": "\r \r private void buildDeltas(SimpleLookupTable deltas)", "diff": ["-\tif (DEBUG)\r", "-\t\tSystem.out.println(\"INCREMENTAL build\"); //$NON-NLS-1$\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5c2f1a59949d21a67d76af583493b93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "c29ff6f3ca53453d86d6a9de68da632d3d253455", "commitAfterChange": "c11e4d3823cd197ba20b5c4c8ef1ddf1ca70b418", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " protected void consumeInsideCastExpressionLL1WithBounds()", "signatureAfterChange": " protected void consumeInsideCastExpressionLL1WithBounds()", "diff": ["-\t\t\t\tExpression typeReference = this.expressionStack[this.expressionPtr];", "-\t\t\t\tif (!isAlreadyPotentialName(typeReference.sourceStart)) {", "-\t\t\t\t\taddPotentialName(null, typeReference.sourceStart, typeReference.sourceEnd);", "+\t\t\t\tint length =  this.expressionLengthStack[this.expressionLengthPtr];", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tExpression typeReference = this.expressionStack[this.expressionPtr - length + i + 1];", "+\t\t\t\t\tif (!isAlreadyPotentialName(typeReference.sourceStart)) {", "+\t\t\t\t\t\taddPotentialName(null, typeReference.sourceStart, typeReference.sourceEnd);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d13b147c9a73986e21cbe16beb7f9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void test0480() throws JavaModelException", "signatureAfterChange": " \tpublic void test0480() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d405cabd60004d848bec6eede46c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeLiteral.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6048247c832465c50bb72049ccff147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": " \tpublic void test0242() throws JavaModelException", "signatureAfterChange": " \tpublic void test0242() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a618ef768319a3b9c418b930e92129e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateMethodOperation.java", "commitBeforeChange": "b6eb3741928f7f60040cd62cb39c2031ea7f1375", "commitAfterChange": "045fcd6169ea322b1f182f37db0e04a62252f1e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected IDOMNode generateElementDOM() throws JavaModelException", "signatureAfterChange": " protected IDOMNode generateElementDOM() throws JavaModelException", "diff": ["+// TODO - JDOM - remove once model ported off of JDOM", "-\t\tif (fAlteredName != null && fDOMNode != null) {", "+\t\tif (fAlteredName != null && isDOMNodeNull()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a640b0da7752cabe3938399c488b2258", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "d13c29854b213f0b9bf42c0b6fd84d7b06118971", "commitAfterChange": "aa09f996ba3976f6c56ffa1ab64f257431d65d06", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-//\t\tthis.returnLocationsCount = 0;", "-//\t\tthis.returnLocationLabels = null;", "-\t\tfinal int FINALLY_EMULATE_RET = 4;\t\t\t\t\t// finally ret is emulated since cannot use jsr/ret bytecodes >1.5 (NOT WORKING)", "+", "-\t\t\tCompilerOptions options = currentScope.compilerOptions();", "-//\t\t\t} else if (options.noJSRBytecode) {", "-//\t\t\t\tfinallyMode = FINALLY_EMULATE_RET;", "-\t\t\t} else if (options.inlineJsrBytecode) {", "+\t\t\t} else if (currentScope.compilerOptions().inlineJsrBytecode) {", "-\t\t\t\t\tcase FINALLY_EMULATE_RET :", "-\t\t\t\t\t\t\tcase FINALLY_EMULATE_RET :", "-\t\t\tExceptionLabel naturalExitExceptionHandler = requiresNaturalExit && (finallyMode == FINALLY_SUBROUTINE || finallyMode == FINALLY_EMULATE_RET) ", "+\t\t\tExceptionLabel naturalExitExceptionHandler = requiresNaturalExit && (finallyMode == FINALLY_SUBROUTINE) ", "-\t\t\t\t\tcase FINALLY_EMULATE_RET :", "-\t\t\t\t\t\t// any exception handler", "-//\t\t\t\t\t\tcodeStream.store(this.anyExceptionVariable, false);", "-//\t\t\t\t\t\tCaseLabel returnLocationLabel = recordReturnLocation(codeStream);", "-//\t\t\t\t\t\tcodeStream.generateInlinedValue(this.returnLocationsCount-1);", "-//\t\t\t\t\t\tcodeStream.store(this.returnAddressVariable, false);", "-//\t\t\t\t\t\tcodeStream.goto_(this.subRoutineStartLabel);", "-//\t\t\t\t\t\tcodeStream.recordPositionsFrom(finallySequenceStartPC, this.finallyBlock.sourceStart);", "-//\t\t\t\t\t\treturnLocationLabel.place();", "-//\t\t\t\t\t\tposition = codeStream.position;\t\t\t\t\t\t", "-//\t\t\t\t\t\tcodeStream.throwAnyException(this.anyExceptionVariable);", "-//\t\t\t\t\t\tcodeStream.recordPositionsFrom(position, this.finallyBlock.sourceEnd);", "-//\t\t\t\t\t\t// subroutine", "-//\t\t\t\t\t\tthis.subRoutineStartLabel.place();", "-//\t\t\t\t\t\tcodeStream.pushOnStack(this.scope.getJavaLangThrowable());", "-//\t\t\t\t\t\tposition = codeStream.position;\t", "-//\t\t\t\t\t\tthis.finallyBlock.generateCode(this.scope, codeStream);", "-//\t\t\t\t\t\tposition = codeStream.position;", "-//\t\t\t\t\t\t// RET emulation", "-//\t\t\t\t\t\tnaturalExitReturnLocationLabel = recordReturnLocation(codeStream);", "-//\t\t\t\t\t\tSystem.arraycopy(this.returnLocationLabels, 0, this.returnLocationLabels = new CaseLabel[this.returnLocationsCount], 0, this.returnLocationsCount);", "-//\t\t\t\t\t\tint[] sortedIndexes = new int[this.returnLocationsCount];", "-//\t\t\t\t\t\tfor (int i = 0; i < this.returnLocationsCount; i++) {", "-//\t\t\t\t\t\t\tsortedIndexes[i] = i;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tdefaultReturnLocationLabel = new CaseLabel(codeStream);", "-//\t\t\t\t\t\tcodeStream.load(this.returnAddressVariable);", "-//\t\t\t\t\t\tcodeStream.tableswitch(defaultReturnLocationLabel, 0, this.returnLocationsCount-1, sortedIndexes, sortedIndexes, this.returnLocationLabels);", "-//\t\t\t\t\t\tcodeStream.recordPositionsFrom(", "-//\t\t\t\t\t\t\tposition,", "-//\t\t\t\t\t\t\tthis.finallyBlock.sourceEnd);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t// the tableswitch bytecode is part of the subroutine\t\t\t\t\t\t", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase FINALLY_EMULATE_RET :", "-//\t\t\t\t\t\t\tposition = codeStream.position;", "-//\t\t\t\t\t\t\tnaturalExitExceptionHandler.placeStart();", "-//\t\t\t\t\t\t\tcodeStream.generateInlinedValue(this.returnLocationsCount);", "-//\t\t\t\t\t\t\tcodeStream.store(this.returnAddressVariable, false);", "-//\t\t\t\t\t\t\tcodeStream.goto_(this.subRoutineStartLabel);", "-//\t\t\t\t\t\t\tnaturalExitExceptionHandler.placeEnd();", "-//\t\t\t\t\t\t\tnaturalExitReturnLocationLabel.place();", "-//\t\t\t\t\t\t\tcodeStream.recordPositionsFrom(", "-//\t\t\t\t\t\t\t\tposition,", "-//\t\t\t\t\t\t\t\tthis.finallyBlock.sourceEnd);\t", "-//\t\t\t\t\t\t\tdefaultReturnLocationLabel.place();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6473d908e3514c896b62344f48bcb58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "5cac886161ad93567169c0b3c216bd70522b0c7e", "commitAfterChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public boolean isPackage(String qualifiedPackageName)", "signatureAfterChange": "  public boolean isPackage(String qualifiedPackageName)", "diff": ["-\t\tthis.knownPackageNames = findPackageSet(this.zipFile);", "+\t\tthis.knownPackageNames = findPackageSet(this);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6485d988f80e8ba904e664affdcc6c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "4f8203818eae84aa9b2839be10eb10037835da39", "commitAfterChange": "3bd4baedd250e4d3a19eb5f32f5553fba8f7a1f4", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate void printBlockComment(char[] s, boolean isJavadoc)", "signatureAfterChange": " \tprivate void printBlockComment(char[] s, boolean isJavadoc)", "diff": ["+\t\t\tthis.scanner.currentPosition = nextCharacterStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6511969988029e13d34c08e1a8151af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "2c216d62729c7bf0a533819d86bda0a688a39a26", "commitAfterChange": "789f8ee3dc78aa2cb74e4e857fb2da09cf6b5b4e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic ReferenceBinding superclass()", "signatureAfterChange": " \tpublic ReferenceBinding superclass()", "diff": ["-\t\treturn superclass;", "+\t\treturn this.superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6612fd9fdd23cba99bdd354a79ccf88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public Binding getTypeOrPackage(char[] name)", "signatureAfterChange": "  public Binding getTypeOrPackage(char[] name)", "diff": ["-\t\t\treturn new ProblemReferenceBinding(name, typeBinding, InternalNameProvided);", "+\t\t\treturn new ProblemReferenceBinding(name, typeBinding, ProblemReasons.InternalNameProvided);", "-\t\t\t\treturn new ProblemReferenceBinding(name, typeBinding, InternalNameProvided);", "+\t\t\t\treturn new ProblemReferenceBinding(name, typeBinding, ProblemReasons.InternalNameProvided);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a66a3b06a86ef6b45658064b8ad54ac0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "46f0bf33fc17707f84a4651387bf3026d6bae545", "commitAfterChange": "4d6296b6ebb5111ab8825f79519da9de471cce30", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\t\tif (this.selector != null && this.parameterCount >= 0)", "+\t\t\tif (!this.varargs && this.selector != null && this.parameterCount >= 0)", "-\t\t\tif (this.parameterCount >= 0)", "+\t\t\tif (!this.varargs && this.parameterCount >= 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6823e1ffd5d515f411dcbcb35114c07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1de4b4e3b8ec35df71e570f058c8d7726752e872", "commitAfterChange": "9359ba8e380aaa366dda637da6a8c80a24875b62", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 171, "signatureBeforeChange": " \t \tprivate Set getClasspathListCache(String cacheName) throws CoreException", "signatureAfterChange": " \t \tprivate Set getClasspathListCache(String cacheName) throws CoreException", "diff": ["-\t\telse if (cacheName == INVALID_ARCHIVES_CACHE)", "-\t\t\treturn this.invalidArchives;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a690a5416bcca9c78e7f7eed7e917dd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t\tvoid update(int index, int delta)", "signatureAfterChange": " \t\t\tvoid update(int index, int delta)", "diff": ["-\t\t\t\tif (position > index) {", "+\t\t\t\tif (this.position > index) {", "-\t\t\t\t\tposition += delta;", "+\t\t\t\t\tthis.position += delta;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6bee1cd8d8b5165b8bca65dc7efb995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 224, "signatureBeforeChange": " public void javadocMissingParamName(int sourceStart, int sourceEnd, int modifiers)", "signatureAfterChange": " public void javadocMissingParamName(int sourceStart, int sourceEnd, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers))", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6cc427aead663b458f5f4977914c7d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " \tpublic void test0137() throws JavaModelException", "signatureAfterChange": " \tpublic void test0137() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d4e1309cf7e9453c2cae812ac50db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": " \tpublic void test0216() throws JavaModelException", "signatureAfterChange": " \tpublic void test0216() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f38a19d9165aeb5f41d7cd06f145eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "d403fee10cf1886b380b6ecbf370adade993a35a", "commitAfterChange": "01d53eeea22960a2cb18e011e021cabf057355e4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\tboolean standardBody(ASTNode receiver, Object other, boolean superMatchResult)", "signatureAfterChange": "  \t\tboolean standardBody(ASTNode receiver, Object other, boolean superMatchResult)", "diff": ["-\t\t\tthis.receiver = receiver;", "-\t\t\tthis.other = other;", "+\t\t\tthis.receiverNode = receiver;", "+\t\t\tthis.otherNode = other;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f843f04430371a10dcb65b204eeae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 514, "methodNumberAfterChange": 514, "signatureBeforeChange": " \tpublic void test495()", "signatureAfterChange": " \tpublic void test495()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a710923247ea520a22dc843bf5e211c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     public AnnotationType getAnnotationType()", "signatureAfterChange": " \t     public AnnotationType getAnnotationType()", "diff": ["-\r", "-    public AnnotationType getAnnotationType()\r", "-    {\r", "-        final ITypeBinding binding = _annoAstNode.resolveTypeBinding();\r", "-        if( binding.isAnnotation() )\r", "-            return (AnnotationType)Factory.createReferenceType(binding, _env);\r", "-        else\r", "-            return Factory.createErrorAnnotationType(binding);\r", "-    }\r", "+\t", "+    public AnnotationType getAnnotationType()", "+    {\t\t", "+        final ITypeBinding binding = _domAnnotation.getAnnotationType();", "+\t\treturn (AnnotationType)Factory.createReferenceType(binding, _env);        ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a74683d9ec4d53325e649cedbd88b936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/CheckDebugAttributes.java", "commitBeforeChange": "9bf6bc13bcdb7ce75dc596ffb856b885e2aef573", "commitAfterChange": "626e0f4ca560af90af18cf20db784d6a66b5bffe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void execute() throws BuildException", "signatureAfterChange": " \t \tpublic void execute() throws BuildException", "diff": ["-\t\t\t\tthis.project.setUserProperty(this.property, \"has debug\"); //$NON-NLS-1$", "+\t\t\t\tgetProject().setUserProperty(this.property, \"has debug\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a791c521a7ac46aa62278214abc6caac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public MethodBinding(int modifiers, TypeBinding[] args, ReferenceBinding[] exceptions, ReferenceBinding declaringClass)", "signatureAfterChange": " public MethodBinding(int modifiers, TypeBinding[] parameters, ReferenceBinding[] thrownExceptions, ReferenceBinding declaringClass)", "diff": ["-public MethodBinding(int modifiers, TypeBinding[] args, ReferenceBinding[] exceptions, ReferenceBinding declaringClass) {", "-\tthis(modifiers, ConstructorDeclaration.ConstantPoolName, VoidBinding, args, exceptions, declaringClass);", "+public MethodBinding(int modifiers, TypeBinding[] parameters, ReferenceBinding[] thrownExceptions, ReferenceBinding declaringClass) {", "+\tthis(modifiers, ConstructorDeclaration.ConstantPoolName, VoidBinding, parameters, thrownExceptions, declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7933f82dae2e6b0a6954fb1cdad0d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test0031() throws JavaModelException", "signatureAfterChange": " \tpublic void test0031() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7c97c0c67587fdb2efa11173de4ab93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "commitAfterChange": "65ea78ccf732b2fce9a73969b46bac043c656dfc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["-\t\t\tFieldBinding[] newFieldBindings = new FieldBinding[knownFieldNames.size() - 1];", "+\t\t\tFieldBinding[] newFieldBindings = new FieldBinding[fieldBindings.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d5756f1a8884cc4d9f4e00b58b8cfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "1745fe20399b6a7284c025a8e1750403718486c9", "commitAfterChange": "40b177ed1cffb3406a990cdf2a508e3f3e6fc42f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\tupperScope.problemReporter().undocumentedEmptyBlock(this);", "+\t\t\tupperScope.problemReporter().undocumentedEmptyBlock(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7dd591cce2419454415361209dd6557", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic void test0503d() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503d() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7e6ce41a806d61a3993e15041db0f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SynchronizedStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7ea3fb6361aa354a6211e363f32768b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void test0500() throws JavaModelException", "signatureAfterChange": " \tpublic void test0500() throws JavaModelException", "diff": ["-\t\t\tCompilationUnit result = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tCompilationUnit result = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7fdd3f5b2e31271c311f4bad55ddca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "730ec55536b5ef142bbace222c0f6429c2cdd532", "commitAfterChange": "7b8b5171c862e2fd7e3a610686386f5127430137", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic CompletionEngine( \t\t\tSearchableEnvironment nameEnvironment, \t\t\tCompletionRequestor requestor, \t\t\tMap settings, \t\t\tIJavaProject javaProject, \t\t\tWorkingCopyOwner owner, \t\t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic CompletionEngine( \t\t\tSearchableEnvironment nameEnvironment, \t\t\tCompletionRequestor requestor, \t\t\tMap settings, \t\t\tIJavaProject javaProject, \t\t\tWorkingCopyOwner owner, \t\t\tIProgressMonitor monitor)", "diff": ["+\t\tthis.sourceLevel = javaProject.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\tthis.complianceLevel = javaProject.getOption(JavaCore.COMPILER_COMPLIANCE, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a80ca4934d1053b6556d9c529c5cee78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCompiler.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tMap settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "signatureAfterChange": "\r public CodeSnippetCompiler(\r \t\tINameEnvironment environment, \r \t\tIErrorHandlingPolicy policy, \r \t\tMap settings, \r \t\tICompilerRequestor requestor, \r \t\tIProblemFactory problemFactory,\r \t\tEvaluationContext evaluationContext,\r \t\tint codeSnippetStart,\r \t\tint codeSnippetEnd)", "diff": ["-\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.getAssertMode(), codeSnippetStart, codeSnippetEnd);\r", "+\t\tnew CodeSnippetParser(problemReporter, evaluationContext, this.options.parseLiteralExpressionsAsConstants, this.options.assertMode, codeSnippetStart, codeSnippetEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86149bf81ea03048ea360bd9fa23a2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, TypeDeclaration typeDecl)", "signatureAfterChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, TypeDeclaration typeDecl)", "diff": ["-\t", "-\tprivate void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, TypeDeclaration typeDecl) {", "-\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(nextMemberDeclaration));", "-//\t\ttypeDecl.setJavadoc(convert(typeDeclaration.javadoc));", "+\t", "+\tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, TypeDeclaration typeDecl) {", "+\t\t// add body declaration in the lexical order", "+\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] members = typeDeclaration.memberTypes;", "+\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields = typeDeclaration.fields;", "+\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods = typeDeclaration.methods;", "+\t\t", "+\t\tint fieldsLength = fields == null? 0 : fields.length;", "+\t\tint methodsLength = methods == null? 0 : methods.length;", "+\t\tint membersLength = members == null ? 0 : members.length;", "+\t\tint fieldsIndex = 0;", "+\t\tint methodsIndex = 0;", "+\t\tint membersIndex = 0;", "+\t\t", "+\t\twhile ((fieldsIndex < fieldsLength)", "+\t\t\t|| (membersIndex < membersLength)", "+\t\t\t|| (methodsIndex < methodsLength)) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration nextFieldDeclaration = null;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration nextMethodDeclaration = null;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration nextMemberDeclaration = null;", "+\t\t", "+\t\t\tint position = Integer.MAX_VALUE;", "+\t\t\tint nextDeclarationType = -1;", "+\t\t\tif (fieldsIndex < fieldsLength) {", "+\t\t\t\tnextFieldDeclaration = fields[fieldsIndex];", "+\t\t\t\tif (nextFieldDeclaration.declarationSourceStart < position) {", "+\t\t\t\t\tposition = nextFieldDeclaration.declarationSourceStart;", "+\t\t\t\t\tnextDeclarationType = 0; // FIELD", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (methodsIndex < methodsLength) {", "+\t\t\t\tnextMethodDeclaration = methods[methodsIndex];", "+\t\t\t\tif (nextMethodDeclaration.declarationSourceStart < position) {", "+\t\t\t\t\tposition = nextMethodDeclaration.declarationSourceStart;", "+\t\t\t\t\tnextDeclarationType = 1; // METHOD", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (membersIndex < membersLength) {", "+\t\t\t\tnextMemberDeclaration = members[membersIndex];", "+\t\t\t\tif (nextMemberDeclaration.declarationSourceStart < position) {", "+\t\t\t\t\tposition = nextMemberDeclaration.declarationSourceStart;", "+\t\t\t\t\tnextDeclarationType = 2; // MEMBER", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tswitch (nextDeclarationType) {", "+\t\t\t\tcase 0 :", "+\t\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, fieldsIndex, typeDecl.bodyDeclarations());", "+\t\t\t\t\tfieldsIndex++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 1 :", "+\t\t\t\t\tmethodsIndex++;", "+\t\t\t\t\tif (!nextMethodDeclaration.isDefaultConstructor() && !nextMethodDeclaration.isClinit()) {", "+\t\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 2 :", "+\t\t\t\t\tmembersIndex++;", "+\t\t\t\t\tASTNode node = convert(nextMemberDeclaration);", "+\t\t\t\t\tif (node == null) {", "+\t\t\t\t\t\ttypeDecl.setFlags(typeDecl.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttypeDecl.bodyDeclarations().add(node);", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tconvert(typeDeclaration.javadoc, typeDecl);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8bded041d063a319f12cc7f87b73250", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 44, "signatureBeforeChange": " public final boolean isBinaryBinding()", "signatureAfterChange": "  public final boolean isBinaryBinding()", "diff": ["+", "-\treturn (tagBits & TagBits.IsBinaryBinding) != 0;", "+\treturn (this.tagBits & TagBits.IsBinaryBinding) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c7e3c7c7ad72c4dd234d24065b6f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void test0441() throws JavaModelException", "signatureAfterChange": " \tpublic void test0441() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8dbf592ace3d6e36fc044b845721f64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MarkerAnnotation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ee6a5387e4b84ce9ada808eab481e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 454, "methodNumberAfterChange": 454, "signatureBeforeChange": " \tpublic void test435()", "signatureAfterChange": " \tpublic void test435()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f8b962862e2329c9fcf6f9446d36f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "8739fac6b0362a32fbe52c714ff661e202a84e1e", "commitAfterChange": "a383b8a74cd6aa6df7e09b603786c84e4f93bb28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int ttlForFieldCheck)", "diff": ["-public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo) {", "+public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int ttlForFieldCheck) {", "-\treturn checkNullableFieldDereference(scope, this.binding, this.nameSourcePosition);", "+\treturn checkNullableFieldDereference(scope, this.binding, this.nameSourcePosition, flowContext, ttlForFieldCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8fca8f746005fd0b6cad3df5b1e0f50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a914928f7cba1c2885fa5193d3123e65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "0854fe8445ddc30ed993c5f051a33b881d287e7a", "commitAfterChange": "2b2e643f40d1ddff10efda4a07c1923734a6a584", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testBug237469b() throws Exception", "signatureAfterChange": " public void testBug237469b() throws Exception", "diff": ["-\t\tthis.deleteFile(externalJar1);", "-\t\tthis.deleteFile(externalJar2);", "+\t\tthis.deleteExternalFile(externalJar1);", "+\t\tthis.deleteExternalFile(externalJar2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9166276017c50d6544cda8bac091233", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " \tpublic void test0133() throws JavaModelException", "signatureAfterChange": " \tpublic void test0133() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9387f6a2b46b6019d90e2d362e6dddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "be2cc93d845983531740f996d21ff395fe56b532", "commitAfterChange": "e28f43e10ef52ae9d2879a1a39bdff7cce868319", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test0101() throws JavaModelException", "signatureAfterChange": " \tpublic void test0101() throws JavaModelException", "diff": ["-\t\tASTNode node = buildAST(", "-\t\t\tcontents,", "-\t\t\tthis.workingCopy);", "+\t\tthis.workingCopy.getBuffer().setContents(contents.toCharArray());", "+\t\tASTNode node = runConversion(AST.JLS3, this.workingCopy, true);\t\t", "-\t\tassertProblemsSize(compilationUnit, 0);", "+\t\tString expectedOutput = \"Dead code\";", "+\t\tassertProblemsSize(compilationUnit, 1, expectedOutput);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9412e615f90a1fba42fc8cf1d263320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 441, "methodNumberAfterChange": 441, "signatureBeforeChange": " \tpublic void test422()", "signatureAfterChange": " \tpublic void test422()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a94cea358b16d096ce7a9e3137efa7f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 268, "signatureBeforeChange": " \tpublic void test0266() throws JavaModelException", "signatureAfterChange": " \tpublic void test0266() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a955ef6a451488ff73b47b069ad33e75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public SyntheticAccessMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "signatureAfterChange": "  public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "diff": ["-public SyntheticAccessMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess) {", "+public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess) {", "-\tSyntheticAccessMethodBinding accessMethod = null;", "-\tSyntheticAccessMethodBinding[] accessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(targetField);", "+\tSyntheticMethodBinding accessMethod = null;", "+\tSyntheticMethodBinding[] accessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(targetField);", "-\t\taccessMethod = new SyntheticAccessMethodBinding(targetField, isReadAccess, this);", "-\t\tsynthetics[METHOD_EMUL].put(targetField, accessors = new SyntheticAccessMethodBinding[2]);", "+\t\taccessMethod = new SyntheticMethodBinding(targetField, isReadAccess, this);", "+\t\tsynthetics[METHOD_EMUL].put(targetField, accessors = new SyntheticMethodBinding[2]);", "-\t\t\taccessMethod = new SyntheticAccessMethodBinding(targetField, isReadAccess, this);", "+\t\t\taccessMethod = new SyntheticMethodBinding(targetField, isReadAccess, this);", "+\t\t}", "+\t}", "+\treturn accessMethod;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95a28aab22a5c85ea058db1c182d495", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tboolean isLeftOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isLeftOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isLeftOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isLeftOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96331d7232d65fc015f95b1e5eb2a2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "0790094c582259a11cb5775cf9802758597e2f7f", "commitAfterChange": "8631fe374a0c007fcac770c2d9427a82a5e04a3d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic AddJarFileToIndex(IFile resource, IndexLocation indexFile, IndexManager manager)", "signatureAfterChange": "  \tpublic AddJarFileToIndex(IFile resource, IndexLocation indexFile, IndexManager manager)", "diff": ["+\t\tthis(resource, indexFile, manager, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a997941b69ff8456842d74d58362c0b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void reportTypeDeclaration( \t\tTypeDeclaration typeDeclaration, \t\tIJavaElement parent, \t\tint accuracy) \t\tthrows CoreException", "signatureAfterChange": " public void reportTypeDeclaration(TypeDeclaration typeDeclaration, IJavaElement parent, int accuracy) throws CoreException", "diff": ["-\t */", "-\tpublic void reportTypeDeclaration(", "-\t\tTypeDeclaration typeDeclaration,", "-\t\tIJavaElement parent,", "-\t\tint accuracy)", "-\t\tthrows CoreException {", "-\t\t// accept class or interface declaration", "-\t\tthis.report(", "-\t\t\ttypeDeclaration.sourceStart,", "-\t\t\ttypeDeclaration.sourceEnd,", "-\t\t\t(parent == null) ?", "-\t\t\t\tthis.createTypeHandle(typeDeclaration.name) :", "-\t\t\t\t(parent instanceof IType) ?", "-\t\t\t\t\tthis.createTypeHandle((IType)parent, typeDeclaration.name) :", "-\t\t\t\t\tparent,", "-\t\t\taccuracy);", "+ */", "+public void reportTypeDeclaration(TypeDeclaration typeDeclaration, IJavaElement parent, int accuracy) throws CoreException {", "+\treport(", "+\t\ttypeDeclaration.sourceStart,", "+\t\ttypeDeclaration.sourceEnd,", "+\t\t(parent == null)", "+\t\t\t? createTypeHandle(typeDeclaration.name)", "+\t\t\t: ((parent instanceof IType)", "+\t\t\t\t? createTypeHandle((IType) parent, typeDeclaration.name)", "+\t\t\t\t: parent),", "+\t\taccuracy);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b1900c138181db74ad6f476150cfe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/readannotation/ReadAnnotationProcessor.java", "commitBeforeChange": "39ba98be39d071668a6de3e8fa86c213405fcffe", "commitAfterChange": "fa5043035008baa87658a861702929b4e6cc6033", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void assertAnnotation(final String[] expected, Collection<AnnotationMirror> annotations)", "signatureAfterChange": " \t \tprivate void assertAnnotation(final String[] expected, Collection<AnnotationMirror> annotations)", "diff": ["-\t\t\t\tTestCase.assertEquals(EMPTY_STRING, mirror.toString());", "+\t\t\t\tTestCase.assertEquals(\"\", mirror.toString()); //$NON-NLS-1$", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b8d732e0d29098be38036bef5abd99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "0e45e470334a22a4640bca0d06c853602205abbd", "commitAfterChange": "fb2e3abc53624f743940363bb17ddf0720807a6d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void decodeIndexKey(char[] key)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-\tthis.pkg = slash == start ? CharOperation.NO_CHAR : CharOperation.subarray(key, start, slash);", "+\tthis.pkg = slash == start ? CharOperation.NO_CHAR : internedPackageNames.add(CharOperation.subarray(key, start, slash));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9dfaf99ad707bf4621a3939e482a182", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 388, "signatureBeforeChange": " \tpublic void test352()", "signatureAfterChange": " \tpublic void test352()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e836dc3dff4db9dd1055612b42b1ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "16a26bc49f78acb9a7d0c10a9d6bedce29952111", "commitAfterChange": "e70f557904c0f4a9dab2a8974c294cadedac3b10", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\r public void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\t\r", "-\t\tif (((bits & DepthMASK) != 0) \r", "-\t\t\t|| currentScope.enclosingSourceType() != binding.declaringClass){\r", "+\r", "+\t\t// depth is set for both implicit and explicit access (see MethodBinding#canBeSeenBy)\t\t\r", "+\t\tif (currentScope.enclosingSourceType() != binding.declaringClass){\r", "-\t\t// need emulation always\r", "+\t\t// qualified super need emulation always\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f47b0cb937bb43d55639a008d38205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarEntryDirectory.java", "commitBeforeChange": "adda76dd8bf9eeacb64e3f4f77b7d994b5e9cb4d", "commitAfterChange": "bad954afb2676759183aeb6e67aac62fcd10e156", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t", "-\t\treturn \"JarEntryDirectory[\"+this.path+\"]\"; //$NON-NLS-1$ //$NON-NLS-2$ ", "+\t\treturn \"JarEntryDirectory[\"+getEntryName()+\"]\"; //$NON-NLS-1$ //$NON-NLS-2$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f7516d93a846cfe0cf454d1c2cbb2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void test0020() throws JavaModelException", "signatureAfterChange": " \tpublic void test0020() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9fbf9d3518a5ad6a69ef540c2193412", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic PerWorkingCopyInfo getPerWorkingCopyInfo(CompilationUnit workingCopy,boolean create, boolean recordUsage, IProblemRequestor problemRequestor)", "signatureAfterChange": " \tpublic PerWorkingCopyInfo getPerWorkingCopyInfo(CompilationUnit workingCopy,boolean create, boolean recordUsage, IProblemRequestor problemRequestor)", "diff": ["-\t\tsynchronized(perWorkingCopyInfos) { // use the perWorkingCopyInfo collection as its own lock", "+\t\tsynchronized(this.perWorkingCopyInfos) { // use the perWorkingCopyInfo collection as its own lock"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa03b6c1e5ea5a23ae7ad39cea537231", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\tIPath path, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\tIPath path, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tboolean isExported)", "diff": ["+\t\t\tnull, // specific output folder", "+\t\t\tfalse, // clean"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa185740429e33e3368d378888c7f812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic int hashCode()", "signatureAfterChange": " \tpublic int hashCode()", "diff": ["-\t\treturn Util.combineHashCodes(this.name.hashCode(), this.parent.hashCode());", "+\t\treturn Util.combineHashCodes(getElementName().hashCode(), this.parent.hashCode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2cf91b7ebe7f73641826261d0b12ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "d185eab4c1939e466ec2dc39c6957f5f96655610", "commitAfterChange": "3dc1bc05d190d32f0485aff7f7ba0e75f5ac20a4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void processDelta(IJavaElementDelta delta)", "signatureAfterChange": " public void processDelta(IJavaElementDelta delta, int eventType)", "diff": ["-public void processDelta(IJavaElementDelta delta) {", "+public void processDelta(IJavaElementDelta delta, int eventType) {", "-\t\t\t\tthis.processDelta(child);", "+\t\t\t\tthis.processDelta(child, eventType);", "-\t\t\t\t\t\t\tthis.processDelta(child);", "+\t\t\t\t\t\t\tthis.processDelta(child, eventType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa34244799ac34ce5bb36f502bf51112", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BodyDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Javadoc getJavadoc()", "signatureAfterChange": " \tpublic Javadoc getJavadoc()", "diff": ["-\t\treturn optionalDocComment;", "+\t\treturn this.optionalDocComment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa3838da224d8158ea0be185fa788a5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "  public void testCompletionFieldInitializer4() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFieldInitializer4() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa832f7f1dab446308facf7e39037dda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["+\t\t\tif (this.annotations != null) {", "+\t\t\t\tint annotationsLength = this.annotations.length;", "+\t\t\t\tfor (int i = 0; i < annotationsLength; i++)", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, scope);", "+\t\t\t}", "-\t\t\tif (initialization != null)", "-\t\t\t\tinitialization.traverse(visitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9ebc60d75320e24038bec81a5b32b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "59d8a0feb0d96332a528d9d76a1f28e19c1be438", "commitAfterChange": "b4bc4d88e04a755d9bb08f1d54047fbd90019a4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["+\t\tdefaultOptions.put(", "+\t\t\tCompilerOptions.OPTION_TargetPlatform, ", "+\t\t\tCompilerOptions.VERSION_1_1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9ff7b0f89b05bb4c098fa0540ecf98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void invokeAccessibleObjectSetAccessible()", "signatureAfterChange": " protected void invokeAccessibleObjectSetAccessible()", "diff": ["-\t\t\tQualifiedNamesConstants.JAVALANGREFLECTACCESSIBLEOBJECT_CONSTANTPOOLNAME,", "-\t\t\tQualifiedNamesConstants.SETACCESSIBLE_NAME,", "-\t\t\tQualifiedNamesConstants.SETACCESSIBLE_SIGNATURE);", "+\t\t\tConstantPool.JAVALANGREFLECTACCESSIBLEOBJECT_CONSTANTPOOLNAME,", "+\t\t\tConstantPool.SETACCESSIBLE_NAME,", "+\t\t\tConstantPool.SETACCESSIBLE_SIGNATURE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aacce8747c1341e04629f35e74825a6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tfinal public boolean isDefinitelyAssigned(LocalVariableBinding local)", "signatureAfterChange": " \tfinal public boolean isDefinitelyAssigned(LocalVariableBinding local)", "diff": ["-\t\tif (local.constant != Constant.NotAConstant) {", "+\t\tif (local.isConstantValue()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aad95fe84b43cf0a43a25229007fb1ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tClassScope classScope)", "signatureAfterChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tClassScope classScope)", "diff": ["+\t\t\tif (this.javadoc != null) {", "+\t\t\t\tthis.javadoc.traverse(visitor, scope);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf348552fa2ccd51a897ae1e07bdf9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean encloses(IJavaElement element)", "signatureAfterChange": " \tpublic boolean encloses(IJavaElement element)", "diff": ["-\t\t\t\t\t\t&& (original = (IType)type.getCompilationUnit().getOriginal(type)) != null) {", "+\t\t\t\t\t\t&& (original = (IType)type.getPrimaryElement()) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafd7b9d887a6329e5ee8dc00eaf9331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "e22e2c1ba1368e41fa599371960d0d811ab185bb", "commitAfterChange": "07c386f81277f4ad5842be17241abc2c1fd53ef0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void indexFile(IDocument document) throws IOException", "signatureAfterChange": " protected void indexFile(IDocument document)", "diff": ["-protected void indexFile(IDocument document) throws IOException {", "+protected void indexFile(IDocument document) /* throws IOException */ {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0c66a44daca2810e2ac5c9dfc62f61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": " \tpublic void test0653() throws JavaModelException", "signatureAfterChange": " \tpublic void test0653() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab100fe23639ca2ac4fd71b3cc6e4877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PostfixExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getOperand()", "signatureAfterChange": "  \tpublic Expression getOperand()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2a2f9feb9e8f6d2f6cbea686a64d97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "5f50bdefde0681c0b86dd1a08511c9f401fa4088", "commitAfterChange": "0692800a5dc1979e2e0bddb8fc1f50c3d12ab9f5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "signatureAfterChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "diff": ["-\t\t\tdeleteEmptyPackageFragment(frag, false, frag.getParent().getResource());", "+\t\t\tIResource fragResource =  frag.getResource();", "+\t\t\tif (fragResource != null) {", "+\t\t\t\tdeleteEmptyPackageFragment(frag, false, fragResource.getParent());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3139fae6b37b35103b83b3ef76cbc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "\r public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t&& ((operation.implicitConversion >> 4) != T_String)) { // exclude string concatenation which would occur backwards\r", "+\t\t\t&& ((operation.left.implicitConversion >> 4) != T_String)) { // exclude string concatenation which would occur backwards\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab658f5ca6b36ea77a20ce517d6bcaac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 350, "signatureBeforeChange": "  \tpublic void test314()", "signatureAfterChange": "  \tpublic void test314()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab65a9ee35c475c9796b4e61e5dee94a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "0580b12603e025516ea827d181150b0daae85b9b", "commitAfterChange": "f6e646cfd67462923a3ee7e8121ae224b9177415", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tCompletionProposal(int kind, int completionLocation)", "signatureAfterChange": " \tCompletionProposal(int kind, int completionLocation)", "diff": ["-\t\t\tthrow new IllegalArgumentException();", "+\t\t\t// Work around for bug 132558 (https://bugs.eclipse.org/bugs/show_bug.cgi?id=132558).", "+\t\t\t// completionLocation can be -1 if the completion occur at the start of a file or", "+\t\t\t// the start of a code snippet but this API isn't design to support negative position.", "+\t\t\tif(this.completion == null || completionLocation != -1) {", "+\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t}", "+\t\t\tcompletionLocation = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab80d474344bf332332548fc1ecd2685", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "signatureAfterChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "diff": ["-\t\tif (Util.isArchiveFileName(this.sourcePath.lastSegment())) {", "+\t\tObject target = JavaModel.getTarget(this.sourcePath, true);", "+\t\tif (target instanceof IContainer) {", "+\t\t\tcomputeRootPath((IContainer)target, firstLevelPackageNames, containsADefaultPackage, tempRoots);", "+\t\t} else {", "-\t\t\t}", "-\t\t} else {", "-\t\t\tObject target = JavaModel.getTarget(this.sourcePath, true);", "-\t\t\tif (target instanceof IContainer) {", "-\t\t\t\tcomputeRootPath((IContainer)target, firstLevelPackageNames, containsADefaultPackage, tempRoots);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abaeee0542b606294ff08b0d6c41a332", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": " \tpublic void test0191() throws JavaModelException", "signatureAfterChange": " \tpublic void test0191() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abdab1b108832ec0a98206ce895b51e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingTest.java", "commitBeforeChange": "330aeaad59d1633d10c0cd3a9ee9ac57073b385f", "commitAfterChange": "960ce528d76bd309a28ce655fc14cff77629ffa5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\tTestSuite suite =  new TestSuite();", "+\t\tTestSuite suite =  new TestSuite(ASTRewritingModifyingTest.class.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe4804235f06095fdae8073a2f2db3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test0014() throws JavaModelException", "signatureAfterChange": " \tpublic void test0014() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe83b8d60432a455933548aece269da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic boolean visit(MethodRef node)", "signatureAfterChange": " \tpublic boolean visit(MethodRef node)", "diff": ["-\t\t\t\trewriteNodeList(node, MethodRef.PARAMETERS_PROPERTY, startOffset, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\trewriteNodeList(node, MethodRef.PARAMETERS_PROPERTY, startOffset, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abea2c09dbf797dd4288729166c11c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t\tpublic void test0021() throws JavaModelException", "signatureAfterChange": " \t\tpublic void test0021() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf3d4bdc7d3bb91e11a29073308b1bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void enterField( \tint declarationStart, \tint modifiers, \tchar[] type, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd)", "signatureAfterChange": " public void enterField( \tint declarationStart, \tint modifiers, \tchar[] type, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd)", "diff": ["-\t\t\thandle = new SourceField((IType) parentHandle, new String(name));", "+\t\t\thandle = new SourceField(parentHandle, new String(name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abff5ef64e56872b49700b585cc096d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test0011() throws JavaModelException", "signatureAfterChange": " \tpublic void test0011() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac12601b366d6db5b5642a926af530c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void test0469() throws JavaModelException", "signatureAfterChange": " \tpublic void test0469() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac32ae2017e7374a20465c5c0a2a019c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/EntryResult.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getWord()", "signatureAfterChange": " public char[] getWord()", "diff": ["-\treturn word;", "+\treturn this.word;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6367e3a42e06053bda80d1ec60bbda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " \tpublic void test0165() throws JavaModelException", "signatureAfterChange": " \tpublic void test0165() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6a446f5c3a373fea7484e7d974bfc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "ec3d2b8d7bc5e4b4b2d91a6a1cfd252341798462", "commitAfterChange": "dfdf5cdb33faed31f1d77a512774b27d49c87683", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "signatureAfterChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "diff": ["-\tif (fields != null && typeInHierarchy) {", "+\tif (fields != null) {", "-\tif (methods != null && typeInHierarchy) {", "+\tif (methods != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac78d9e3f692a50dae234460ceff1a60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchCase.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca8008ffbddc11215f0b153d7482fab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 361, "signatureBeforeChange": " \tpublic void test0704() throws JavaModelException", "signatureAfterChange": " \tpublic void test0704() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb2d52b120cc1ba1c9c71a461f72747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchProcessingEnvImpl.java", "commitBeforeChange": "57effdfbf8500b1bf7932afcc270c4183c0fd5bb", "commitAfterChange": "aeba50ed8bce5da37b3a88a633f33265f2c2db1c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Override \tpublic Map<String, String> getOptions()", "signatureAfterChange": "  \t@Override \tpublic Map<String, String> getOptions()", "diff": ["-\t\t// TODO return options", "-\t\treturn null;", "+\t\treturn Collections.unmodifiableMap(_processorOptions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc6aa31384e5a1dcb3e6aa913bd1544", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MultiTypeDeclarationPattern.java", "commitBeforeChange": "e85ef31dfa86374477953b5334cffc5119f2feae", "commitAfterChange": "8a1e311af393ccdbbaab4d3836c703deb332d624", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["+\tif (this.simpleNames == null) {", "+\t\t// if no simple names then return all possible ones from index", "+\t\treturn index.query(getIndexCategories(), null, -1); // match rule is irrelevant when the key is null", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf1830e7a168b65024f614ef9a3a51d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "a6c305278505a2164af34e14c561e142d097d5d6", "commitAfterChange": "0479f01c6428d0088c42770df3ff043af3c8388e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t\t\t\t\tJavaModelManager.resourceTreeIsLocked();", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tJavaModelManager.resourceTreeIsUnlocked();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf9b8ec32f0be91507f8cd047e0d29f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "f1505ea73a4c385cc68bb3efc775c9981bdc8375", "commitAfterChange": "177fd9822ac759c8cb57ee9f89031f69ca941b42", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic void _getstatic(int pc, int index, IConstantPoolEntry constantFieldref)", "signatureAfterChange": " \tpublic void _getstatic(int pc, int index, IConstantPoolEntry constantFieldref)", "diff": ["+\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad04d379ce76a46bff1a046d90a421f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a53e0f6f60b988e927d553381431ae6a40286252", "commitAfterChange": "2d9b05bb71b127652760933dafce873a5ec0cb28", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " void checkMethods()", "signatureAfterChange": " void checkMethods()", "diff": ["+}", "+\t\t\t\t\tif (currentMethod.declaringClass.isInterface())", "+\t\t\t\t\t\tcheckInheritedReturnTypes(matchingInherited, index + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0eb3cee5f4a903c81bc1bd40a1b674", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 425, "methodNumberAfterChange": 425, "signatureBeforeChange": " \tpublic void test407()", "signatureAfterChange": " \tpublic void test407()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad117d627eb540f2817cfd2ebc31b628", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "e7089f5e0d97e74b7f75a25fca154e1ec701e9a1", "commitAfterChange": "2df458f51b70c24746e3ff959e17875a1e4746d6", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic static void log(Throwable e, String message)", "signatureAfterChange": " \tpublic static void log(Throwable e, String message)", "diff": ["-\t\t\tJavaCore.getPlugin().getDescriptor().getUniqueIdentifier(), ", "+\t\t\tJavaCore.PLUGIN_ID, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1b76d4a972d2e1e47d14f8429f149d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "ded90d967b480e6d7d22b3283d60f4ed44ccc489", "commitAfterChange": "18c83b91d182e52feafdad6b2c46eb79ffb0e002", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testBatchCompilerAllWarning() throws IOException", "signatureAfterChange": " \tpublic void testBatchCompilerAllWarnings() throws IOException", "diff": ["-\tpublic void testBatchCompilerAllWarning() throws IOException {", "+\tpublic void testBatchCompilerAllWarnings() throws IOException {", "-\t\t\t\"tasks(TODO|FIX|XXX),\" +", "-\t\t\t\"typeHiding,\";", "+\t\t\t\"tasks(TODO|FIX|XXX)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1bc907da80d64774f0b25684ecd1a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 208, "signatureBeforeChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "signatureAfterChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "diff": ["-\tif (!javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) return;", "+\tif (!javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad20dfe0b7cbf22998bf2c1f8f39290c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "ea035aff9493ec8381c8d6bd9548845ad9f81e22", "commitAfterChange": "3c8b95412c50bb73a8372fbf9db9df68231cc311", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate static void checkContainingAnnotationTarget(ASTNode markerNode, Scope scope, ReferenceBinding container, ReferenceBinding repeatableAnnotation)", "signatureAfterChange": " \tprivate static void checkContainingAnnotationTarget(ASTNode markerNode, Scope scope, ReferenceBinding container, ReferenceBinding repeatableAnnotation)", "diff": ["+\t\t\t\trepeatableAnnotation.tagAsHavingDefectiveContainerType();", "+\t\t\t\t\t\trepeatableAnnotation.tagAsHavingDefectiveContainerType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad2d7bf29411d49856d6bcde1657fea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic CompilationResult compilationResult()", "signatureAfterChange": " \t \tpublic CompilationResult compilationResult()", "diff": ["-\t\treturn compilationResult;", "+\t\treturn this.compilationResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3416a15c30eb0383a69f879aefab65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generateOptimizedLessThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLessThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad466efde6aa24741ddb5144b3fc3d50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void indexDocument(SearchDocument searchDocument, SearchParticipant searchParticipant, Index index, IPath indexPath) throws IOException", "signatureAfterChange": " public void indexDocument(SearchDocument searchDocument, SearchParticipant searchParticipant, Index index, IPath indexPath) throws IOException", "diff": ["-}", "-\t\t((org.eclipse.jdt.internal.core.index.impl.IndexImpl) index).indexDocument(searchDocument, searchParticipant, indexPath);", "-// to be replaced by", "-//\t\tsearchParticipant.indexDocument(searchDocument, indexPath);", "+\t\tsearchParticipant.indexDocument(searchDocument, indexPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad4715e551648070ec8b2df2b999715e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\tif ((this.modifiers & AccGenericSignature) == 0) return null;", "+\tif ((this.modifiers & ExtraCompilerModifiers.AccGenericSignature) == 0) return null;", "-\t\tif((this.thrownExceptions[i].modifiers & AccGenericSignature) != 0) {", "+\t\tif((this.thrownExceptions[i].modifiers & ExtraCompilerModifiers.AccGenericSignature) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad7645598ee436023c0c78b629a925d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6acdb4510909317e02bb4ba566a6d0b5f09916da", "commitAfterChange": "9b7b19bdcdbcea831580c60277f290356f5e2da7", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " protected void disableAll(int severity)", "signatureAfterChange": " protected void disableAll(int severity)", "diff": ["-\t\t\tthis.options.put(entry.getKey(), CompilerOptions.IGNORE);", "+\t\t\tthis.options.put((String) entry.getKey(), CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8da49fce6d28ee4c48d08c84742932", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public void testCompletionAmbiguousFieldName3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAmbiguousFieldName3() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad99e9c8a56fe1c607bdd265dd743b6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic void test0503e() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503e() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adf3d9c5a5a8a006c10deaec32f39d1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FileNameEnvironment.java", "commitBeforeChange": "06f23e3e171e1532838272ad3cfed1dbf476c295", "commitAfterChange": "fd83708e4f6c48e5f68b55d90ce222d8723ca6ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public ClasspathJar getClasspathJar(File file) throws IOException", "signatureAfterChange": "  public ClasspathJar getClasspathJar(File file) throws IOException", "diff": ["-\t\treturn new ClasspathJar(zipFile, false);", "+\t\treturn new JavaModelClasspathJar(zipFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae000c22e07800080e16f058ef5e965a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void traverse(ASTVisitor visitor, BlockScope blockScope)", "signatureAfterChange": " public void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["-", "+\t\tLocalDeclaration[] localDeclarations = this.resources;", "+\t\tfor (int i = 0, max = localDeclarations.length; i < max; i++) {", "+\t\t\tlocalDeclarations[i].traverse(visitor, this.scope);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae152cb19f973553106676a202502f95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "150efead216fdc18243fc0e0bc307f18a75e431f", "commitAfterChange": "47b0d1e5c30414e249b8aff80d628ce66272443e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \tpublic SourceRange getNameRange(IJavaElement element)", "signatureAfterChange": "\r \tpublic SourceRange getNameRange(IJavaElement element)", "diff": ["-\t\t\tif(hasDollar && fSourceRanges.get(el) == null) {\r", "+\t\t\tif(fSourceRanges.get(el) == null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2ee6ab1faf3ceb1cd25055f1d6439d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test0407() throws JavaModelException", "signatureAfterChange": " \tpublic void test0407() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae38e1ef518e83a91ccb34ad5d446bcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 518, "methodNumberAfterChange": 518, "signatureBeforeChange": " \t \tpublic void test499()", "signatureAfterChange": " \t \tpublic void test499()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5f76f9b58459987afb0ad339c46205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r public char[] sourceFileName()", "signatureAfterChange": "\r public char[] sourceFileName()", "diff": ["-\treturn sourceFileName;\r", "+\treturn this.sourceFileName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae94e3726d5501d7264b255e9edc8341", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "837e74414fb9b240932cd6afae3110277fb777db", "commitAfterChange": "a966ab9bd6f1a46289abe3e77d65d881ca0ea764", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": "\r protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\t\tif (anonymousTypeDeclaration.allocation != null) {\r", "-\t\t\tanonymousTypeDeclaration.allocation.sourceEnd = endStatementPosition;\r", "-\t\t}\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9694a162abee7a0f9da90c384fd65c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif (((this.bits & ASTNode.DepthMASK) == 0) || (this.constant != Constant.NotAConstant)) {", "+\tif (((this.bits & ASTNode.DepthMASK) == 0 && (this.bits & ASTNode.IsCapturedOuterLocal) == 0) || (this.constant != Constant.NotAConstant)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae98f6c99e9c7781f4145ae4f94d73b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "130bf52e6e6a6b2abae63509dc107f8c8574de74", "commitAfterChange": "da8395b2f47f9ea261a2eac4c2a9b0e0621ba41a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate IFile getFile()", "signatureAfterChange": " \tprivate IFile getFile()", "diff": ["-\t\t\tthis.file = (IFile) ResourcesPlugin.getWorkspace().getRoot().findMember(new Path(this.documentPath));", "+\t\t\tthis.file = (IFile) ResourcesPlugin.getWorkspace().getRoot().findMember(new Path(getPath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9aaef6f9fb008fd891c6e0bcc0e42f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test0473() throws JavaModelException", "signatureAfterChange": " \tpublic void test0473() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea982d6c258d0c836f73935375f0774", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "6b523d8b142e7961940f74fda0096160e5c68ef8", "commitAfterChange": "8427980767e9f9fbfd153bda7df26918914a7430", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t\t \tpublic MethodDeclaration convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \t\t \tpublic MethodDeclaration convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\t\tmethodDecl.setFlags(ASTNode.MALFORMED);", "+\t\t\t\tmethodDecl.setFlags(methodDecl.getFlags() | ASTNode.MALFORMED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec0549cab2070c61aea495fbdaa4168", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": "  \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\t\t\t\t\t\tcontextAccepted = complete(e.astNode, this.parser.assistNodeParent, e.qualifiedBinding, e.scope, e.insideTypeAnnotation);", "+\t\t\t\t\t\t\tcontextAccepted =", "+\t\t\t\t\t\t\t\tcomplete(", "+\t\t\t\t\t\t\t\t\te.astNode,", "+\t\t\t\t\t\t\t\t\tthis.parser.assistNodeParent,", "+\t\t\t\t\t\t\t\t\tthis.parser.enclosingNode,", "+\t\t\t\t\t\t\t\t\te.qualifiedBinding,", "+\t\t\t\t\t\t\t\t\te.scope,", "+\t\t\t\t\t\t\t\t\te.insideTypeAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec2f57179d5c6819cb13b4e691a49a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void completionIdentifierCheck()", "signatureAfterChange": " public void completionIdentifierCheck()", "diff": ["-\tif (checkCatchClause()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee41b73ca2a9bb8315ee9caa2a89fa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "952d6b17244ae1d0ee2f63b42ee4e3a1ef3411a9", "commitAfterChange": "9e99dfd97eaf9264bcdd3b675b4c9f32dbc2a956", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprotected void appendProposal(CompletionProposal proposal, StringBuffer buffer)", "signatureAfterChange": "  \tprotected void appendProposal(CompletionProposal proposal, StringBuffer buffer)", "diff": ["-\t\t\tbuffer.append(proposal.getDeclarationUniqueKey() == null ? NULL_LITERAL : proposal.getDeclarationUniqueKey());", "+\t\t\tbuffer.append(proposal.getDeclarationKey() == null ? NULL_LITERAL : proposal.getDeclarationKey());", "-\t\t\tbuffer.append(proposal.getUniqueKey() == null ? NULL_LITERAL : proposal.getUniqueKey());", "+\t\t\tbuffer.append(proposal.getKey() == null ? NULL_LITERAL : proposal.getKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeed052c8a0ce5aac2f4b189074dde6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "8c257f407da3168f528da10142cc5a6786c803d6", "commitAfterChange": "1505d6b4655f1428d6059c29c9d919c21116a2ec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "signatureAfterChange": "  \tpublic final boolean isFieldUseDeprecated(FieldBinding field, Scope scope, boolean isStrictlyAssigned)", "diff": ["-", "-\t\tif (!isStrictlyAssigned && (field.isPrivate() || (field.declaringClass != null && field.declaringClass.isLocalType())) && !scope.isDefinedInField(field)) {", "+\t\t// ignore references insing Javadoc comments", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "+\t\t\t\t!isStrictlyAssigned && ", "+\t\t\t\t(field.isPrivate() || (field.declaringClass != null && field.declaringClass.isLocalType())) && !scope.isDefinedInField(field)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af11d924fb91fe8d0a95db56f827d768", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void tearDownSuite() throws Exception", "signatureAfterChange": " public void tearDownSuite() throws Exception", "diff": ["-\tthis.deleteProject(\"Reconciler\");", "+\tdeleteProject(\"Reconciler\");", "+\tdeleteProject(\"Reconciler15\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1323f2288ef09564b59236c5899dbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateOptimizedGreaterThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedGreaterThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1878506799d387c0c4f0193c1d18d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "cbf4d8b0c602d0860355a0bb315f58708fa257d2", "commitAfterChange": "0d8c4f28f9db6373751aa6d7cffbf4e0fcb51948", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected char[] indexEntryPrefix()", "signatureAfterChange": " protected char[] indexEntryPrefix()", "diff": ["-\treturn AbstractIndexer.bestReferencePrefix(", "-\t\tREF,", "-\t\tthis.segments[this.currentSegment],", "-\t\tmatchMode,", "-\t\tisCaseSensitive);", "+\treturn indexEntryPrefix(REF, this.segments[this.currentSegment]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1cec1fec4f7908635b86e0931fa77b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 694, "methodNumberAfterChange": 694, "signatureBeforeChange": " public void testDeprecationCheck9() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck9() throws JavaModelException", "diff": ["-\t\t\t\t\"bar1[METHOD_REF]{bar1(), Ldeprecation.Test;, ()V, bar1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"bar2[METHOD_REF]{bar2(), Ldeprecation.Test;, ()V, bar2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"bar1[METHOD_REF]{bar1(), Ldeprecation.Test;, ()V, bar1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"bar2[METHOD_REF]{bar2(), Ldeprecation.Test;, ()V, bar2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af222a4bb37fd71eab0b667cf2ee2550", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "e560c4f056e8f81d7e6811700478b4a331f39a81", "commitAfterChange": "82fb6745d0f2bc2c9b5e4740da70b2e364d6955a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\t\t\tsuperType = ((RawTypeBinding) superType).type;", "+\t\t\tsuperType = ((RawTypeBinding) superType).genericType();", "-\t\t\t\t\tparentType = ((ParameterizedTypeBinding) parentType).type;", "+\t\t\t\t\tparentType = ((ParameterizedTypeBinding) parentType).genericType();", "-\t\t\t\t\t\tanInterface = ((ParameterizedTypeBinding) anInterface).type;", "+\t\t\t\t\t\tanInterface = ((ParameterizedTypeBinding) anInterface).genericType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6d56c5f848a02bd70ebbf7ea85df4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 400, "methodNumberAfterChange": 400, "signatureBeforeChange": " \tpublic void test0398() throws JavaModelException", "signatureAfterChange": " \tpublic void test0398() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af7356ffbbaf24335ff9dcb05da54d2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "3173183ca505114300551e373ce548965cf4d11c", "commitAfterChange": "7b754e3ae5340db64c28110761a59666c3f7fbe9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public ASTNode findNode(org.eclipse.jdt.core.dom.CompilationUnit ast)", "signatureAfterChange": " public ASTNode findNode(org.eclipse.jdt.core.dom.CompilationUnit ast)", "diff": ["+\t// For enum constant declaration, we return the node directly", "+\tif (node.getNodeType() == ASTNode.ENUM_CONSTANT_DECLARATION) {", "+\t\treturn node;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af91bcb3fc7d49e2bb5ccaf170b55bc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testWorkingCopy02() throws CoreException", "signatureAfterChange": " public void testWorkingCopy02() throws CoreException", "diff": ["-\t\tIClassFile classFile = this.jarRoot.getPackageFragment(\"workingcopy\").getClassFile(\"X.class\");", "-\t\tassertNull(\"Should not have source attached\", classFile.getSource());", "-\t\tthis.workingCopy = classFile.becomeWorkingCopy(null/*no problem requestor*/, null/*primary owner*/, null/*no progress*/);", "+\t\tIClassFile clazz = this.jarRoot.getPackageFragment(\"workingcopy\").getClassFile(\"X.class\");", "+\t\tassertNull(\"Should not have source attached\", clazz.getSource());", "+\t\tthis.workingCopy = clazz.becomeWorkingCopy(null/*no problem requestor*/, null/*primary owner*/, null/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af93a8895f3e86d92453444ea47c0e31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "commitAfterChange": "3032de1870d006c819c7d178849a7bb1bd98ddbe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic long modificationCount()", "signatureAfterChange": " \tpublic long modificationCount()", "diff": ["-\t\treturn modCount;", "+\t\treturn this.modCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af96fc0117ff91b4daa57e6d5b81fc03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/quickfix/APTQuickFixProcessor.java", "commitBeforeChange": "6bea0f6636d15fbdebc7403f71192f16cc7a0c9c", "commitAfterChange": "779b290a6c79f0f2918d9fe1a3ca959140f48502", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "                 public List<V> get(K key)", "signatureAfterChange": "                 public List<V> get(K key)", "diff": ["-            return list != null ? list : Collections.EMPTY_LIST;", "+            return list != null ? list : Collections.<V>emptyList();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa74e04cf312df429c52a6404231219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 233, "signatureBeforeChange": " public void testEnum06() throws CoreException", "signatureAfterChange": " \tpublic void testEnum06() throws CoreException", "diff": ["-}", "-public void testEnum06() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch15\", \"src\", \"e1\", \"T.java\").getType(\"T\");", "-\tIMethod method = type.getMethod(\"setRole\", new String[] { \"Z\" });", "-\tsearch(method, REFERENCES, getJavaSearchScope15(), this.resultCollector);", "-\tassertSearchResults(", "-\t\t\"src/e1/X.java void e1.X.main(String[]) [setRole(t.isManager())]\",", "-\t\tthis.resultCollector);", "-}", "+\t}", "+\tpublic void testEnum06() throws CoreException {", "+\t\tIType type = getCompilationUnit(\"JavaSearch15\", \"src\", \"e1\", \"Team.java\").getType(\"Team\");", "+\t\tIMethod method = type.getMethod(\"setRole\", new String[] { \"Z\" });", "+\t\tsearch(method, REFERENCES, getJavaSearchScope15(\"e1\", false), this.resultCollector);", "+\t\tassertSearchResults(", "+\t\t\t\"src/e1/Test.java void e1.Test.main(String[]) [setRole(t.isManager())]\",", "+\t\t\tthis.resultCollector);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc0e765e22f32fd155c7678fd667a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public final int getAccessFlags()", "signatureAfterChange": " public final int getAccessFlags()", "diff": ["-", "-\treturn modifiers & ExtraCompilerModifiers.AccJustFlag;", "+\treturn this.modifiers & ExtraCompilerModifiers.AccJustFlag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afca931d1203326628e498aa72814bea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 407, "methodNumberAfterChange": 407, "signatureBeforeChange": " \tpublic void test389()", "signatureAfterChange": " \tpublic void test389()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd930540094e01dc2e5d207a88b9966", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "397253fa7cf7d0509ffaa48aff6b8a5dde06129d", "commitAfterChange": "bf0328478aa051113a9962f47734688c8e2ec095", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public IType[] getAllSupertypes(IType type)", "signatureAfterChange": " public IType[] getAllSupertypes(IType type)", "diff": ["-\tArrayList supers = new ArrayList();", "-\tif (this.typeToSuperInterfaces.get(type) == null) {", "+\tArrayList supers = getAllSupertypes0(type, null);", "+\tif (supers == null)", "-\t}", "-\tgetAllSupertypes0(type, supers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe2a999b6e35794c2dbd129e1196797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "f254767d87ae8dd4ff9c37cc7b1a6fc568af9dda", "commitAfterChange": "966710fd0db4acefe960a5bfb33635812ee1ac6d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public DeclaredType getContainingType()", "signatureAfterChange": "      public DeclaredType getContainingType()", "diff": ["-        return (DeclaredType)Factory.createReferenceType(outer, _env);", "+        return Factory.createReferenceType(outer, _env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe3e0ea54893e4d6bfdaf0bccefb9bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void test0432() throws JavaModelException", "signatureAfterChange": " \tpublic void test0432() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afedb61f3c1af09520d147115ffea787", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "3de7df3c8285dd5ccd5607560340925a143c9a94", "commitAfterChange": "ec0896f6be6c41a0353321bffc1f242fe4e5e1b4", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " \tpublic void setSharedProperty(String key, String value) throws CoreException", "signatureAfterChange": " \tpublic void setSharedProperty(String key, String value) throws CoreException", "diff": ["-\t\t\t\tResourcesPlugin.getWorkspace().validateEdit(new IFile[]{rscFile}, null);", "+\t\t\t\tResourcesPlugin.getWorkspace().validateEdit(new IFile[]{rscFile}, IWorkspace.VALIDATE_PROMPT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff121cacf201dbf35d7469ff46e047d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic void test0074() throws JavaModelException", "signatureAfterChange": " \tpublic void test0074() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff69160577e1f7e3cbf565e230b3516", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tif (matchingMethod.typeVariables != NoTypeVariables && invocationSite.genericTypeArguments() == null)", "+\t\t\t\t\t\t\tif (matchingMethod.typeVariables != Binding.NO_TYPE_VARIABLES && invocationSite.genericTypeArguments() == null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b001f339524e947ff4222cf908ea2f89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "8577a754772ce76aa29c2d77e116e6709724c4d0", "commitAfterChange": "3d562d40da4e348a144afbbe3f8416f78f2d7aa4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public AstNode parseTree()", "signatureAfterChange": " public AstNode parseTree()", "diff": ["-\treturn blockDeclaration;", "+\treturn this.blockDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b019c0485b79fd8e34b58bb5f7846616", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "7fb86fb96d585ee8957fc13764a67f220efdab28", "commitAfterChange": "ac9209adc3bf5bee5093a73bfc9f86fe5825e76d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"HierarchyScope on \" + ((JavaElement)fHierarchy.getType()).toStringWithAncestors(); //$NON-NLS-1$", "+\t\treturn \"HierarchyScope on \" + ((JavaElement)this.focusType).toStringWithAncestors(); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b028c41fd5dcada9ad694c0f3c23c6c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f1ecb4b2d8ea593a495f1608bdd4d8fccb10a732", "commitAfterChange": "575694a4feaf3caf1988ca9a05c237c3a23369b5", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void javadocDeprecatedField(FieldBinding field, ASTNode location, int modifiers)", "signatureAfterChange": " public void javadocDeprecatedField(FieldBinding field, ASTNode location, int modifiers)", "diff": ["-\t\t\tIProblem.UsingDeprecatedField|IProblem.Javadoc,", "+\t\t\tIProblem.JavadocUsingDeprecatedField,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b033281a51ce59fbc8a1491334f761c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "df7db86dfdaff61d3ebc9328b44d180f263988fe", "commitAfterChange": "d781dcbe8a593d5ba6dc04230bf23771b905f7bd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "signatureAfterChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "diff": ["-\t\t\tif (!isDigit(this.currentCharacter)) {", "+\t\t\tif (!ScannerHelper.isDigit(this.currentCharacter)) {", "-\t\t\tif (!isDigit(this.currentCharacter)) {", "+\t\t\tif (!ScannerHelper.isDigit(this.currentCharacter)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03f28438edc82a0c71ec1601136d078", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 308, "methodNumberAfterChange": 308, "signatureBeforeChange": " \tpublic void test0306()", "signatureAfterChange": " \tpublic void test0306()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, source, \"Object.java\", project, true); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(getJLS3(), source, \"Object.java\", project, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0501b0dba5df451c609e17584fa17ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void test0489() throws JavaModelException", "signatureAfterChange": " \tpublic void test0489() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0585831f0106b942bf55431b04d385a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NumberLiteral.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b07381a97a580a0e55f75ffdfd3ffb6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "1201fcd02c6275517e348d64f378096381dec769", "commitAfterChange": "84721977f318065445b04a4a72863a1fb6d0ab9a", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void testMemberTypeReference() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMemberTypeReference() throws JavaModelException, CoreException", "diff": ["-\t\t\"src/MemberTypeReference/Azz.java MemberTypeReference.Azz$AzzMember [BMember] EXACT_MATCH\\n\" +", "+\t\t\"src/MemberTypeReference/Azz.java MemberTypeReference.Azz$AzzMember [BMember] EXACT_MATCH\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0756f07b80050031f5c56de417c11bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "25a403db69e943c2e7ff56a35060dda77dc8988e", "commitAfterChange": "702e8c000f2670613f66a2fdca7428fa36da58d0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  protected void cleanOutputFolders() throws CoreException", "signatureAfterChange": "  protected void cleanOutputFolders() throws CoreException", "diff": ["+\t\t\t\tnotifier.checkCancel();", "-\t\t\t\tif (!isOutputFolder)", "+\t\t\t\tif (!isOutputFolder) {", "+\t\t\t\t\tnotifier.checkCancel();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0ae63840e880dbbb5edd87fb852505a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, CompilerOptions.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/); ", "+\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/); ", "-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "-\t\t\t\t\t\tif (!(Scanner.TokenNameWHITESPACE == lastToken ", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:", "+\t\t\t\t\t\tif (!(TerminalTokens.TokenNameWHITESPACE == lastToken "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0b14851c88cf5e159c245d2c1ae8ef1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  protected TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  protected TypeBinding internalResolveType(Scope scope, int location)", "diff": ["-protected TypeBinding internalResolveType(Scope scope) {", "+protected TypeBinding internalResolveType(Scope scope, int location) {", "-\t\tresolveAnnotations(scope);\t\t", "+\t\tresolveAnnotations(scope, 0); // don't apply null defaults to buggy type", "-\t\tresolveAnnotations(scope);", "+\t\tresolveAnnotations(scope, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c0c131782917b40e19cd4ab26edabc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "diff": ["-\t\t\t\t\t: ((JavaProject)project).getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\t\t: ((JavaProject)project).getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d6d6e86bd6cd3f1ded8fd9151e8161", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " \tpublic void test0631() throws JavaModelException", "signatureAfterChange": " \tpublic void test0631() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d7948c8af897ba6526c039c1863f87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test0401() throws JavaModelException", "signatureAfterChange": " \tpublic void test0401() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1211e5f8d917473ad911030332d4c46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 744, "methodNumberAfterChange": 747, "signatureBeforeChange": " \tpublic void test711()", "signatureAfterChange": " \tpublic void test711()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1403c140a502f116708bf34c47e04a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": " \tpublic void test0562() throws JavaModelException", "signatureAfterChange": " \tpublic void test0562() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b142ce6ea027c4b6dcd432f5892efd20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void analyseCode(ClassScope enclosingClassScope)", "signatureAfterChange": " public void analyseCode(ClassScope enclosingClassScope)", "diff": ["-\t\tinternalAnalyseCode(null, FlowInfo.initial(this.scope.outerMostClassScope().referenceType().maxFieldCount));", "+\t\t// propagate down the max field count", "+\t\tupdateMaxFieldCount();", "+\t\tinternalAnalyseCode(null, FlowInfo.initial(this.maxFieldCount));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b143094addd3dd6c7b305624a65261ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "bd7343199b4bc0fe1543353d82fa97e4de0d5c10", "commitAfterChange": "0f2da5d7f1d68e304cd61daaea3ae2598576cbec", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic static String[] getTrimmedSimpleNames(String name)", "signatureAfterChange": " \tpublic static String[] getTrimmedSimpleNames(String name)", "diff": ["-\t\tString[] result = Signature.getSimpleNames(name);", "+\t\tString[] result = splitOn(Signature.C_DOT, name, 0, name.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a5f165d4bd1b7fd3944f03b853bde3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 280, "signatureBeforeChange": " \tpublic void test0278() throws JavaModelException", "signatureAfterChange": " \tpublic void test0278() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ad5d30b2cb2501850101ae5f8d4f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " \tpublic void test0382() throws JavaModelException", "signatureAfterChange": " \tpublic void test0382() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b572155ff1f68555db63f4af6e5fa5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e31e89499c545f3404d7787f4d333516631375ec", "commitAfterChange": "0eef8a719c726a9948e73db62c7f81adbce0f319", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 69, "signatureBeforeChange": " public ReferenceBinding superclass()", "signatureAfterChange": "  public ReferenceBinding superclass()", "diff": ["+", "+\tif (this != this.prototype)", "+\t\treturn this.superclass = this.prototype.superclass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f88b1933532f42816e54a34a62fd1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "f7bc2ee5d62baf64b6f044f322b40cdaa75e5dcc", "commitAfterChange": "bde9840f9573d77080a23dfde60bdb51dc549649", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public boolean exists()", "signatureAfterChange": " public boolean exists()", "diff": ["-\treturn isPrimary() && super.exists() && validateCompilationUnit().isOK();", "+\treturn isPrimary() && validateCompilationUnit(getResource()).isOK();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fe274beca8f4e981bfd55997e001ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "2430a281333449aecffa1fcade92c26003c5a2cb", "commitAfterChange": "8a9626e6249aa5eb23c4206d02454f4ba02ae107", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t \tvoid sort()", "signatureAfterChange": " \t \tvoid sort()", "diff": ["+\t\tif (this.positionsToMap != null) {", "+\t\t\tcompilationUnit.traverseChildrenFirst(new SortJavaElement.PositionsMapper(this.positionsToMap));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b219aa31c2233b9a6a8ba30277f4739e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void testSingleWildcardExtendsStringPattern04() throws CoreException", "signatureAfterChange": " \tpublic void testSingleWildcardExtendsStringPattern04() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen_thr [MemberGeneric<? super RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_wld [MemberGeneric<?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_thr [MemberGeneric<? super RuntimeException>] EXACT_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen_wld [MemberGeneric<?>] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b22b0fab9578049e8b985443b79f194b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "2a1e455dd4c823fdae35f395f819afea5a811300", "commitAfterChange": "abe8251aa6e26809de7a863f06fc8ed89302ea78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate boolean examineNoType()", "signatureAfterChange": " \tprivate boolean examineNoType()", "diff": ["-\t\tif (!\"<none>\".equals(noType.toString())) {", "-\t\t\treportError(\"NoType has the wrong name: \" + noType.toString());", "+\t\tString noTypeString = noType.toString();", "+\t\tif (!(\"none\".equals(noTypeString) || \"<none>\".equals(noTypeString))) {", "+\t\t\treportError(\"NoType has the wrong name: \" + noTypeString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2692ab7df4837d55d0e2d1a07868d76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 328, "signatureBeforeChange": " \tpublic void test0326() throws JavaModelException", "signatureAfterChange": " \tpublic void test0326() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27712c611359f76232a3a95b7d33abf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CatchClause.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration getException()", "signatureAfterChange": "  \tpublic SingleVariableDeclaration getException()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27fc0b82a54ebb8c2b3c14b63212ef3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "877d1c925f96fd1468669263e6d8fde7ccbe8c86", "commitAfterChange": "5f2c1ea3affced840286a6c8b813c60b56c847c3", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 247, "signatureBeforeChange": " public void localVariableMayBeNull(LocalVariableBinding local, ASTNode location)", "signatureAfterChange": " public void localVariableMayBeNull(LocalVariableBinding local, ASTNode location)", "diff": ["-\t\tlocation.sourceEnd);", "+\t\tlocalSourceEnd(local, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b29765a84de24f8f1349ac7f75d4bcd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 203, "signatureBeforeChange": " public void javadocDuplicatedParamTag(char[] token, int sourceStart, int sourceEnd, int modifiers)", "signatureAfterChange": " public void javadocDuplicatedParamTag(char[] token, int sourceStart, int sourceEnd, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c96449ab8eb3c871bf30a9eb77b34d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "03026f75f39f11c89ea1f29e4a5f2b9760be3045", "commitAfterChange": "fa3a52963a70298064a79818b9188ed1e3795a34", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": " public void goForCompilationUnit()", "signatureAfterChange": " public void goForCompilationUnit()", "diff": ["-\tthis.scanner.linePtr = -1;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d2b5281f1c5aab69b522ed595a63de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 245, "signatureBeforeChange": " final public void newarray(int array_Type)", "signatureAfterChange": " final public void newarray(int array_Type)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tnewarray:\"+array_Type); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2dd6687e8ddee9e33abbcd7b8097246", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConstructorInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List arguments()", "signatureAfterChange": "  \tpublic List arguments()", "diff": ["-\t\treturn arguments;", "+\t\treturn this.arguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2ee68f8cfb661754168ce56561e1bb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  public void testCompletionThrowStatement() throws JavaModelException", "signatureAfterChange": "  public void testCompletionThrowStatement() throws JavaModelException", "diff": ["-\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION),", "+\t\t\"element:Exception    completion:Exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f4ab6fe95bd34468a044d34e41014e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 198, "methodNumberAfterChange": 198, "signatureBeforeChange": " public final int getFirstToken()", "signatureAfterChange": " public final int getFirstToken()", "diff": ["-\treturn firstToken;", "+\treturn this.firstToken;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2fb806d4d153b02c627577b9fe7c154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "d6baee173fab87cec38e2d53f527709865586d3e", "commitAfterChange": "e945be9572deb0e6312998e6924bb86e3cded80b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\tif (this.binding != null && this.binding.isValidBinding()) {", "+\t\t\tif ((this.bits & Binding.FIELD) != 0 && this.binding != null && this.binding.isValidBinding()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2fef814daec8d7cce8c0c3ecf7dc5de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/JarFileDocument.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic byte[] getByteContent() throws IOException", "signatureAfterChange": " \tpublic byte[] getByteContent()", "diff": ["-\tpublic byte[] getByteContent() throws IOException {", "+\tpublic byte[] getByteContent() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b305885afb3af203c25ef06e603fc790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "0b02c3d2ffd584756ad422cfb82a686c4f949459", "commitAfterChange": "27ae7cc0d5a75c1449565f71fee06411744b67e7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate void assertRequestedBindingFound(String[] pathAndSources, final String expectedKey) throws JavaModelException", "signatureAfterChange": " \tprivate void assertRequestedBindingFound(String[] pathAndSources, final String expectedKey) throws JavaModelException", "diff": ["-\t\t\tresolveASTs(workingCopies, new String[] {expectedKey}, requestor, this.owner);", "+\t\t\tresolveASTs(workingCopies, new String[] {expectedKey}, requestor, getJavaProject(\"P\"), this.owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3068100875e824e4d4b886162c6bce2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic String getEmptyLines(int linesNumber)", "signatureAfterChange": "  \tpublic String getEmptyLines(int linesNumber)", "diff": ["-\t\t\treturn EMPTY_STRING;", "+\t\t\treturn Util.EMPTY_STRING;", "-\t\t\t\treturn EMPTY_STRING;", "+\t\t\t\treturn Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b319d8f4c3569b0fd9d8b2f25cb0ea1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testSearchPackageDeclarations() throws CoreException", "signatureAfterChange": " \tpublic void testSearchPackageDeclarations() throws CoreException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32078b42ab328c5f7badc8753b05827", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic void test0085() throws JavaModelException", "signatureAfterChange": " \tpublic void test0085() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b34893584185954e4fd6658eba2384d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "11132934987e84219ca80fa47f5c2b4b4040e5de", "commitAfterChange": "f1df490ec0d248b686e20ddd372b10f6c06ffe43", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+    \t\tthis.lhs.computeConversion(scope, lhsType, lhsType);", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b35aad1006b9311a221452c3f72ceecb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b36e032f0ebc088736fa3ac2bbe971e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b83655ab7102ef0f787678a4957731059edf4b5b", "commitAfterChange": "158a80e7963daa635e315faff648f7e8d16cf898", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": "\r \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "diff": ["-\t\t\t\t\tthrow (JavaModelException) e;\r", "+\t\t\t\t\t// problem with class path: it could not find base classes\r", "+\t\t\t\t\t// continue and try next matching openable\r", "+\t\t\t\t\t// core exception thrown by client's code: let it through\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37298036594fcbbeb7d97d240ada72c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public ITypeHierarchy newSupertypeHierarchy(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ITypeHierarchy newSupertypeHierarchy(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treturn this.newSupertypeHierarchy(null, monitor);", "+\treturn this.newSupertypeHierarchy(DefaultWorkingCopyOwner.PRIMARY, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37d5b21adc07d7029458fce4439fca0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "c50c590bab482d39145c20debd2941d0e0bbc56e", "commitAfterChange": "ff8854dc7ced090ef02c4af9dd40d2f94e485bfd", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic boolean visit(WhileStatement whileStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(WhileStatement whileStatement, BlockScope scope)", "diff": ["-\t\t\taction.traverse(this, scope);", "+\t\t\tif (action instanceof Block) {", "+\t\t\t\taction.traverse(this, scope);", "+\t\t\t} else {", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\tthis.scribe.indent();", "+\t\t\t\taction.traverse(this, scope);", "+\t\t\t\tthis.scribe.unIndent();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3850b0bb46d07b4929a16c28ee75264", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tpublic void test0145() throws JavaModelException", "signatureAfterChange": " \tpublic void test0145() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ad91664c763d569cc7e9d4b4d7215e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateMethodOperation.java", "commitBeforeChange": "b6eb3741928f7f60040cd62cb39c2031ea7f1375", "commitAfterChange": "045fcd6169ea322b1f182f37db0e04a62252f1e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected String[] convertDOMMethodTypesToSignatures()", "signatureAfterChange": " protected String[] convertDOMMethodTypesToSignatures()", "diff": ["+// TODO - JDOM - remove once model ported off of JDOM", "-\t\tif (fDOMNode != null) {", "+\t\tif (isDOMNodeNull()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3af141e35544e0f842d5ae0869b6580", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ContinueStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["-\tpublic String toString(int tab) {", "+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "-\t\tString s = tabString(tab);", "-\t\ts += \"continue \"; //$NON-NLS-1$", "-\t\tif (label != null)", "-\t\t\ts += new String(label);", "-\t\treturn s;", "+\t\tprintIndent(tab, output).append(\"continue \"); //$NON-NLS-1$", "+\t\tif (label != null) output.append(label);", "+\t\treturn output.append(';');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3b839031c1d1255ce5ae3c343fccac4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "7594e7e641998e4b739042718fe64988f6b36839", "commitAfterChange": "c50c590bab482d39145c20debd2941d0e0bbc56e", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "diff": ["-\t\t\taction.traverse(this, scope);", "+\t\t\tif (action instanceof Block) {", "+\t\t\t\taction.traverse(this, scope);", "+\t\t\t} else {", "+\t\t\t\tthis.scribe.indent();", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\taction.traverse(this, scope);", "+\t\t\t\tthis.scribe.unIndent();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d4ed25beeb7563386cedc0c2cec330", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tpublic IPackageFragmentRoot[] getAllPackageFragmentRoots(Map rootToResolvedEntries) throws JavaModelException", "signatureAfterChange": "  \tpublic IPackageFragmentRoot[] getAllPackageFragmentRoots(Map rootToResolvedEntries) throws JavaModelException", "diff": ["-\t", "+", "-\t\treturn computePackageFragmentRoots(getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/), true/*retrieveExportedRoots*/, rootToResolvedEntries);", "+\t\treturn computePackageFragmentRoots(getResolvedClasspath(), true/*retrieveExportedRoots*/, rootToResolvedEntries);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3f345e55834ffadbe3f1a26a6dd0a9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-\t\t\tReferenceBinding.sortFields(this.fields, 0, length - 1);", "+\t\t\tReferenceBinding.sortFields(this.fields, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40550ea0caaa9ef717e9966361246a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": " public SyntheticAccessMethodBinding[] syntheticAccessMethods()", "signatureAfterChange": " public SyntheticMethodBinding[] syntheticMethods()", "diff": ["-public SyntheticAccessMethodBinding[] syntheticAccessMethods() {", "+public SyntheticMethodBinding[] syntheticMethods() {", "-\tSyntheticAccessMethodBinding[] bindings = new SyntheticAccessMethodBinding[1];", "+\tSyntheticMethodBinding[] bindings = new SyntheticMethodBinding[1];", "-\t\t\tSyntheticAccessMethodBinding[] methodAccessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "+\t\t\tSyntheticMethodBinding[] methodAccessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "-\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticAccessMethodBinding[index + numberOfAccessors]), 0, index);", "+\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticMethodBinding[index + numberOfAccessors]), 0, index);", "-\t\t\tSyntheticAccessMethodBinding[] fieldAccessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "+\t\t\tSyntheticMethodBinding[] fieldAccessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(fieldOrMethod);", "-\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticAccessMethodBinding[index + numberOfAccessors]), 0, index);", "+\t\t\t\tSystem.arraycopy(bindings, 0, (bindings = new SyntheticMethodBinding[index + numberOfAccessors]), 0, index);", "-\tSyntheticAccessMethodBinding[] sortedBindings = new SyntheticAccessMethodBinding[length = bindings.length];", "+\tSyntheticMethodBinding[] sortedBindings = new SyntheticMethodBinding[length = bindings.length];", "-\t\tSyntheticAccessMethodBinding binding = bindings[i];", "+\t\tSyntheticMethodBinding binding = bindings[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b430479d0fc7c551454eff4b4d08a43c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, CompilerOptions.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/); ", "+\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/); ", "-\t\t\tcase Scanner.TokenNameWHITESPACE:", "+\t\t\tcase TerminalTokens.TokenNameWHITESPACE:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4460facd68de51e917ffcd8edfd0b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic static GeneratedFileManager getGeneratedFileManager()", "signatureAfterChange": " \t \tpublic static synchronized List<GeneratedFileManager> getGeneratedFileManagers()", "diff": ["-\tpublic static GeneratedFileManager getGeneratedFileManager() ", "+\tpublic static synchronized List<GeneratedFileManager> getGeneratedFileManagers() {", "+\t\treturn new ArrayList(MANAGERS_MAP.values());", "+\t}", "-\t\treturn _generatedFileManagerInstance;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b44a9af4f08b49ef3fbd6c8fe55f6afb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46934747d5cd13d2e8b36c07ca741f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void test053()", "signatureAfterChange": " \tpublic void test053()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46a87a91be52543d738173825ef07f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 212, "signatureBeforeChange": " final public void ldc(float constant)", "signatureAfterChange": " final public void ldc(float constant)", "diff": ["-\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$", "+\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc_w:\"+constant); //$NON-NLS-1$", "+\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b47d626f023b4ab458f8ef01a290a480", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "7dfd6fd26982b29a78f21f34e409b8e0ced9dd05", "commitAfterChange": "95427331bb49c7a61529453199fb23bbc6427400", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic IJavaModelStatus verify()", "signatureAfterChange": " \tpublic IJavaModelStatus verify()", "diff": ["-\t\tICompilationUnit cu = getCompilationUnit();", "+\t\tCompilationUnit cu = getCompilationUnit();", "-\t\tif (!cu.isBasedOn(resource) && !fForce) {", "+\t\tif (cu.hasResourceChanged() && !fForce) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b47d98062596bcc26e37c24282cf71b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/Options.java", "commitBeforeChange": "ba3f3515e414cf41bff76ad382644021240dc399", "commitAfterChange": "0fef9e356bfc246dbfd0c9cfea1ba0d8941a3dcb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static int processOptionsFileManager(String option)", "signatureAfterChange": " \tpublic static int processOptionsFileManager(String option)", "diff": ["-\t\tif (FILE_MANAGER_OPTIONS.contains(option)) {", "+\t\tif (Options.FILE_MANAGER_OPTIONS.contains(option)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b482015714d00e8c3277749e07756ae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/VariableBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic final boolean isBlankFinal()", "signatureAfterChange": " \t \tpublic final boolean isBlankFinal()", "diff": ["-\t\treturn (modifiers & AccBlankFinal) != 0;", "+\t\treturn (modifiers & ExtraCompilerModifiers.AccBlankFinal) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b497a3160720d3191cff202671f2d600", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "8da7bfb257556f8a461744b38ac4cda420972b74", "commitAfterChange": "0b29e3e291fcb69cbd668b09f597694d50edc0fe", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\treturn one.typeVariables.length > 0 && !one.areTypeVariableErasuresEqual(substituteTwo.original());", "+\treturn one.typeVariables != NoTypeVariables && !one.areTypeVariableErasuresEqual(substituteTwo.original());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b49ff313dbc06c6b52344ecbc33c684f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " public void invokeJavaLangErrorConstructor()", "signatureAfterChange": " public void invokeJavaLangErrorConstructor()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangErrorConstantPoolName,", "-\t\t\tQualifiedNamesConstants.Init,", "-\t\t\tQualifiedNamesConstants.StringConstructorSignature);", "+\t\t\tConstantPool.JavaLangErrorConstantPoolName,", "+\t\t\tConstantPool.Init,", "+\t\t\tConstantPool.StringConstructorSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c27c98632a402a9e604b7dd4b0a124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 630, "methodNumberAfterChange": 633, "signatureBeforeChange": " \tpublic void test596()", "signatureAfterChange": " \tpublic void test596()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e02ccba4dbc9d5683a0d8882600bca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic int getSourceLineNumber()", "signatureAfterChange": " \tpublic int getSourceLineNumber()", "diff": ["-\t\treturn line;", "+\t\treturn this.line;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b506d7f2b85d424a297795e814f45d71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "837e74414fb9b240932cd6afae3110277fb777db", "commitAfterChange": "a966ab9bd6f1a46289abe3e77d65d881ca0ea764", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": "\r protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\t\tif (anonymousTypeDeclaration.allocation != null) {\r", "-\t\t\tanonymousTypeDeclaration.allocation.sourceEnd = endStatementPosition;\r", "-\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b52e6fa1a92c754834425a49edf69d9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IResource getUnderlyingResource() throws JavaModelException", "signatureAfterChange": " \tpublic IResource getUnderlyingResource() throws JavaModelException", "diff": ["-\t\tif (fResource == null) {", "+\t\tif (isExternal()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54d56e191f1747f667e7c665012a5d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": " \tpublic void test0237() throws JavaModelException", "signatureAfterChange": " \tpublic void test0237() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b558735fbf91f41889e88577a09388e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t\tCastExpression cast = new CastExpression(expression, castType);", "+\t\t\t\t\tCastExpression cast = new CastExpression(expression, (TypeReference) castType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d1fbfa7ef35af89094753703e3e8a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayQualifiedTypeReference.java", "commitBeforeChange": "63121f8a68bfd228bc6742938987e0cf9cf1fef7", "commitAfterChange": "40126076d34b975b2659595fc332b592e8785df2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " public TypeBinding getTypeBinding(Scope scope)", "diff": ["+\tif (dimensions > 255) {", "+\t\tscope.problemReporter().tooManyDimensions(this);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5fce2503a55975f5d5b3bfbddeb553a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean isEnabled()", "signatureAfterChange": " \tpublic boolean isEnabled()", "diff": ["-\t\treturn enabled;", "+\t\treturn this.enabled;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b604807fb17b7f497cf5f9b68919ffbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test0502g() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502g() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68bc820fc4e2dd615033b87aff40d32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayTypeReference.java", "commitBeforeChange": "63121f8a68bfd228bc6742938987e0cf9cf1fef7", "commitAfterChange": "40126076d34b975b2659595fc332b592e8785df2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " public TypeBinding getTypeBinding(Scope scope)", "diff": ["+\tif (dimensions > 255) {", "+\t\tscope.problemReporter().tooManyDimensions(this);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b70b7567eb05357416d5f395b9617d79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "  public void test157() throws JavaModelException", "signatureAfterChange": "  public void test157() throws JavaModelException", "diff": ["-\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+\"25}\"", "+\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7177109b3e56ee941197225d8a88660", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test0504() throws JavaModelException", "signatureAfterChange": " \tpublic void test0504() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72e47c48694615fc9defc6daac366ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "signatureAfterChange": " public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "diff": ["-\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "+\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i, 0);", "-\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "+\t\t\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i, 0);", "-\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i);", "+\t\t\tproblems[0] = problemFactory.createProblem(importDeclaration, IProblem.ImportNotFound, arguments, arguments, ProblemSeverities.Warning, 0, importDeclaration.length - 1, i, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b745bf79e2a779dd2c1766e89d6fa818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/mirrortest/MirrorTestAnnotationProcessor.java", "commitBeforeChange": "39ba98be39d071668a6de3e8fa86c213405fcffe", "commitAfterChange": "fa5043035008baa87658a861702929b4e6cc6033", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate void testDeclarationsUtil(TypeDeclaration typeDecl)", "signatureAfterChange": " \t \tprivate void testDeclarationsUtil(TypeDeclaration typeDecl)", "diff": ["-\t\tDeclarations utils = env.getDeclarationUtils();", "-\t\tTypeDeclaration objType = env.getTypeDeclaration(\"java.lang.Object\");", "+\t\tDeclarations utils = _env.getDeclarationUtils();", "+\t\tTypeDeclaration objType = _env.getTypeDeclaration(\"java.lang.Object\");", "-\t\tassertTrue(\"Class hides Object\", !utils.hides(typeDecl, objType));", "+\t\tProcessorTestStatus.assertTrue(\"Class hides Object\", !utils.hides(typeDecl, objType));", "-\t\tassertTrue(\"inner's staticMethod() should hide MirrorTestClass'\", utils.hides(innerMethod, outerMethod));", "+\t\tProcessorTestStatus.assertTrue(\"inner's staticMethod() should hide MirrorTestClass'\", utils.hides(innerMethod, outerMethod));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b784fe8505f726b6291eec97ad921e8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": " \tpublic void test0343() throws JavaModelException", "signatureAfterChange": " \tpublic void test0343() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7b27a883cdfcb103e95ba3b3f89da25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "41f0e0054ad6ecc1ea34b869c24b09b45fb10ff6", "commitAfterChange": "57f71dbcbb6986e1c76d51b49e788951c6fe709e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r public void restore() throws JavaModelException", "signatureAfterChange": "\r public void restore() throws JavaModelException", "diff": ["-\tif (!isDestroyed) {\r", "+\tif (this.managedCount > 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c45c0c179b2617a1e781d80a853a4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "56dbcf2a723a2496d9406a9295b337384afdff1d", "commitAfterChange": "356ef270158cfd8719df7baf47652712175545cd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private Binding findSingleStaticImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleStaticImport(char[][] compoundName)", "diff": ["-\tif (field != null && field.isValidBinding() && field.isStatic() && field.canBeSeenBy(fPackage))", "+\tif (field != null && field.isValidBinding() && field.isStatic() && field.canBeSeenBy(type, null, this))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ca65867c0127a03ac4954ded14d534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test0406() throws JavaModelException", "signatureAfterChange": " \tpublic void test0406() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ea7fb151a7771ffa72a051ec2be6e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "c99d716fa975f313809c9a758c093b0027fd52fe", "commitAfterChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testAllTypeNames1() throws CoreException", "signatureAfterChange": " public void testAllTypeNames1() throws CoreException", "diff": ["-\tassertEquals(", "+\tassertSearchResults(", "-\t\trequestor.toString());", "+\t\trequestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b805ea9e74c9116101cdc4446e7dfe8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclarationStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic AbstractTypeDeclaration getDeclaration()", "signatureAfterChange": "  \tpublic AbstractTypeDeclaration getDeclaration()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80ac15d632df2e91a5d81dba033f44f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testCorrespondingResourceNonExistingType() throws CoreException", "signatureAfterChange": " public void testCorrespondingResourceNonExistingType() throws CoreException", "diff": ["-\t\tthis.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tthis.createFile(", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tcreateFile(", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b823b02eec3c872d7e434a878e266171", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83367ac3788155bf95b59aca06e47b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": " \tpublic void test0537c() throws JavaModelException", "signatureAfterChange": " \tpublic void test0537c() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85ead6c1f0848ccbae5cdc8339495f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 320, "methodNumberAfterChange": 320, "signatureBeforeChange": " \tpublic void test0318() throws JavaModelException", "signatureAfterChange": " \tpublic void test0318() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8823f699a7c1a12ce2e4b1dc933e7f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\t\t\t\t\t\t\tif (expressions[i].constant == NotAConstant) {", "+\t\t\t\t\t\t\t\tif (expressions[i].constant == Constant.NotAConstant) {", "-\t\t\t\t\t} else if (this.value.constant == NotAConstant) {", "+\t\t\t\t\t} else if (this.value.constant == Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8955321de222e2c876d4c3cdb3e5aaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration expression, AnonymousClassDeclaration anonymousClassDeclaration)", "signatureAfterChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration expression, AnonymousClassDeclaration anonymousClassDeclaration)", "diff": ["+\t", "+\tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration expression, AnonymousClassDeclaration anonymousClassDeclaration) {", "+\t\t// add body declaration in the lexical order", "+\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] members = expression.memberTypes;", "+\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields = expression.fields;", "+\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods = expression.methods;", "+\t\t", "+\t\tint fieldsLength = fields == null? 0 : fields.length;", "+\t\tint methodsLength = methods == null? 0 : methods.length;", "+\t\tint membersLength = members == null ? 0 : members.length;", "+\t\tint fieldsIndex = 0;", "+\t\tint methodsIndex = 0;", "+\t\tint membersIndex = 0;", "+\t\t", "+\t\twhile ((fieldsIndex < fieldsLength)", "+\t\t\t|| (membersIndex < membersLength)", "+\t\t\t|| (methodsIndex < methodsLength)) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration nextFieldDeclaration = null;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration nextMethodDeclaration = null;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration nextMemberDeclaration = null;", "+\t\t", "+\t\t\tint position = Integer.MAX_VALUE;", "+\t\t\tint nextDeclarationType = -1;", "+\t\t\tif (fieldsIndex < fieldsLength) {", "+\t\t\t\tnextFieldDeclaration = fields[fieldsIndex];", "+\t\t\t\tif (nextFieldDeclaration.declarationSourceStart < position) {", "+\t\t\t\t\tposition = nextFieldDeclaration.declarationSourceStart;", "+\t\t\t\t\tnextDeclarationType = 0; // FIELD", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (methodsIndex < methodsLength) {", "+\t\t\t\tnextMethodDeclaration = methods[methodsIndex];", "+\t\t\t\tif (nextMethodDeclaration.declarationSourceStart < position) {", "+\t\t\t\t\tposition = nextMethodDeclaration.declarationSourceStart;", "+\t\t\t\t\tnextDeclarationType = 1; // METHOD", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (membersIndex < membersLength) {", "+\t\t\t\tnextMemberDeclaration = members[membersIndex];", "+\t\t\t\tif (nextMemberDeclaration.declarationSourceStart < position) {", "+\t\t\t\t\tposition = nextMemberDeclaration.declarationSourceStart;", "+\t\t\t\t\tnextDeclarationType = 2; // MEMBER", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tswitch (nextDeclarationType) {", "+\t\t\t\tcase 0 :", "+\t\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, fieldsIndex, anonymousClassDeclaration.bodyDeclarations());", "+\t\t\t\t\tfieldsIndex++;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 1 :", "+\t\t\t\t\tmethodsIndex++;", "+\t\t\t\t\tif (!nextMethodDeclaration.isDefaultConstructor() && !nextMethodDeclaration.isClinit()) {", "+\t\t\t\t\t\tanonymousClassDeclaration.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 2 :", "+\t\t\t\t\tmembersIndex++;", "+\t\t\t\t\tASTNode node = convert(nextMemberDeclaration);", "+\t\t\t\t\tif (node == null) {", "+\t\t\t\t\t\tanonymousClassDeclaration.setFlags(anonymousClassDeclaration.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tanonymousClassDeclaration.bodyDeclarations().add(node);", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "-\tprivate void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration expression, AnonymousClassDeclaration anonymousClassDeclaration) {", "-\t\t// add body declaration in the lexical order", "-\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] members = expression.memberTypes;", "-\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields = expression.fields;", "-\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods = expression.methods;", "-\t\tint fieldsLength = fields == null? 0 : fields.length;", "-\t\tint methodsLength = methods == null? 0 : methods.length;", "-\t\tint membersLength = members == null ? 0 : members.length;", "-\t\tint fieldsIndex = 0;", "-\t\tint methodsIndex = 0;", "-\t\tint membersIndex = 0;", "-\t\twhile ((fieldsIndex < fieldsLength)", "-\t\t\t|| (membersIndex < membersLength)", "-\t\t\t|| (methodsIndex < methodsLength)) {", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration nextFieldDeclaration = null;", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration nextMethodDeclaration = null;", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration nextMemberDeclaration = null;", "-\t\t", "-\t\t\tint position = Integer.MAX_VALUE;", "-\t\t\tint nextDeclarationType = -1;", "-\t\t\tif (fieldsIndex < fieldsLength) {", "-\t\t\t\tnextFieldDeclaration = fields[fieldsIndex];", "-\t\t\t\tif (nextFieldDeclaration.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextFieldDeclaration.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 0; // FIELD", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (methodsIndex < methodsLength) {", "-\t\t\t\tnextMethodDeclaration = methods[methodsIndex];", "-\t\t\t\tif (nextMethodDeclaration.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextMethodDeclaration.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 1; // METHOD", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (membersIndex < membersLength) {", "-\t\t\t\tnextMemberDeclaration = members[membersIndex];", "-\t\t\t\tif (nextMemberDeclaration.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextMemberDeclaration.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 2; // MEMBER", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tswitch (nextDeclarationType) {", "-\t\t\t\tcase 0 :", "-\t\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, fieldsIndex, anonymousClassDeclaration.bodyDeclarations());", "-\t\t\t\t\tfieldsIndex++;", "-\t\t\t\tcase 1 :", "-\t\t\t\t\tmethodsIndex++;", "-\t\t\t\t\tif (!nextMethodDeclaration.isDefaultConstructor() && !nextMethodDeclaration.isClinit()) {", "-\t\t\t\t\t\tanonymousClassDeclaration.bodyDeclarations().add(convert(nextMethodDeclaration));", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase 2 :", "-\t\t\t\t\tmembersIndex++;", "-\t\t\t\t\tanonymousClassDeclaration.bodyDeclarations().add(convert(nextMemberDeclaration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a6582eeb1fb5f6f0fd1fbd785ed46d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void generateMethodInfoHeader(MethodBinding methodBinding, int accessFlags)", "signatureAfterChange": " \tpublic void generateMethodInfoHeader(MethodBinding methodBinding, int accessFlags)", "diff": ["-\t\t    accessFlags &= ~AccSynthetic;", "+\t\t    accessFlags &= ~ClassFileConstants.AccSynthetic;", "-\t\t\taccessFlags &= ~AccPrivate;", "+\t\t\taccessFlags &= ~ClassFileConstants.AccPrivate;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8aec1dc1ec1ab17bf29a12d4fd0fcaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void test0452() throws JavaModelException", "signatureAfterChange": " \tpublic void test0452() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d9ea3e8dd4122dcaf7b19fa95d31e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic void test0533() throws JavaModelException", "signatureAfterChange": " \tpublic void test0533() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90755bfded90858f8f4349404a7ce4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void testMissingLibrary2() throws JavaModelException", "signatureAfterChange": "  public void testMissingLibrary2() throws JavaModelException", "diff": ["+\tenv.waitForAutoBuild();", "+\tenv.waitForAutoBuild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92d0c6aff7252e8bd3914c8950308a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14df50722199cd72c578c54d9a05cc83731f2e32", "commitAfterChange": "85c7cff1360bd81398e5c21f0560acd7376e740e", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  protected void addNewEntry(ArrayList paths, String currentClasspathName,  \t\tArrayList currentRuleSpecs, String customEncoding,  \t\tString destPath, boolean isSourceOnly,  \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "signatureAfterChange": "  protected void addNewEntry(ArrayList paths, String currentClasspathName,  \t\tArrayList currentRuleSpecs, String customEncoding,  \t\tString destPath, boolean isSourceOnly,  \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "diff": ["-    \t\t// we go on anyway", "-    \t\tthis.logger.logIncorrectClasspath(currentClasspathName);", "+     \t\tif (currentClasspathName.length() != 0) {", "+     \t   \t\t// we go on anyway", "+    \t\t\tthis.logger.logIncorrectClasspath(currentClasspathName);", "+    \t\t}", "-\t} else {", "+\t} else if (currentClasspathName.length() != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b93dad74694c40cf0b256779e5ba456b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "40e5e462287b79ef847047a4bab6d5d9140df3cb", "commitAfterChange": "f9a29367ea8f3c4c9489072b937e0b301d28ae36", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " private void classHeaderExtendsOrImplements(boolean isInterface)", "signatureAfterChange": " private void classHeaderExtendsOrImplements(boolean isInterface)", "diff": ["-\t\t\t\t\t\tcompletionOnKeyword.canCompleteEmptyToken = true;", "-\t\t\t\t\t\tcompletionOnKeyword.canCompleteEmptyToken = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95175edef01db94a0dbd99c68093da6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BodyDeclaration.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tBodyDeclaration(AST ast)", "signatureAfterChange": " \tBodyDeclaration(AST ast)", "diff": ["-\t\t\tthis.modifiers = new ASTNode.NodeList(true, ExtendedModifier.class);", "+\t\t\tthis.modifiers = new ASTNode.NodeList(internalModifiers2Property());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95294e76c0810e3e2223e89fd4d20cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test0004() throws JavaModelException", "signatureAfterChange": " \tpublic void test0004() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9577ef342a972cd4cd593f85521302e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "a0ce71d7ab49e8ddd5d142c1d2197d4b672a20fd", "commitAfterChange": "70350f443769ef3b32d3d529ad874f676fe4cf67", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate boolean isAffectedBy(IResourceDelta rootDelta)", "signatureAfterChange": " \tprivate boolean isAffectedBy(IResourceDelta rootDelta)", "diff": ["+\t\t\t\tprivate static final long serialVersionUID = 7137113252936111022L; // backward compatible"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a333ac438664a62b5295c3510cf541", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 295, "methodNumberAfterChange": 295, "signatureBeforeChange": " \tpublic void test0293() throws JavaModelException", "signatureAfterChange": " \tpublic void test0293() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cb25a82dff2d4f18065245a586747a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic void test0114() throws JavaModelException", "signatureAfterChange": " \tpublic void test0114() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cfde08e6d7d8090f1bd1230e7e9157", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "1745fe20399b6a7284c025a8e1750403718486c9", "commitAfterChange": "40b177ed1cffb3406a990cdf2a508e3f3e6fc42f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "signatureAfterChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "diff": ["-\t\t\tgivenScope.problemReporter().undocumentedEmptyBlock(this);", "+\t\t\tgivenScope.problemReporter().undocumentedEmptyBlock(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9d79eabd44048b3a9550dccf3141dbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 288, "signatureBeforeChange": "  \tpublic void test252()", "signatureAfterChange": "  \tpublic void test252()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9de28066742508985bbac24bbb4581c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " public void testCompletionExpectedTypeIsNotValid() throws JavaModelException", "signatureAfterChange": " public void testCompletionExpectedTypeIsNotValid() throws JavaModelException", "diff": ["-\t\t\"element:CompletionExpectedTypeIsNotValid    completion:CompletionExpectedTypeIsNotValid    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:CompletionExpectedTypeIsNotValid    completion:CompletionExpectedTypeIsNotValid    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba05be3f59aac169df8516aedfd773a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void test0418() throws JavaModelException", "signatureAfterChange": " \tpublic void test0418() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0f031cf715b414081655d929f8fe12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "diff": ["+\t\t\t\t\t\t\tint newLineBeforeChunk = isChunkStart ? this.preferences.blank_lines_before_new_chunk : 0;", "+\t\t\t\t\t\t\tif (newLineBeforeChunk > 0) {", "+\t\t\t\t\t\t\t\tthis.scribe.printNewLines(newLineBeforeChunk);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba193df46c1cc9f7143321fd336a8c19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean isError()", "signatureAfterChange": " \tpublic boolean isError()", "diff": ["-\t\treturn (severity & ProblemSeverities.Error) != 0;", "+\t\treturn (this.severity & ProblemSeverities.Error) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba4461602a27a40423559c9460fa1bdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": " public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba4bceacc11e306b58d250989c3f5d86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "dc1affe9e611f769ec98b19997bf2c83ebae3b73", "commitAfterChange": "e6f7bb520f03ff7b62eb7f4afa4e1000be9cfb18", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "signatureAfterChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "diff": ["-\t\tlevel = this.matchLevelAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification);\r", "+\t\t// Note there is no dynamic lookup for field access\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, receiverBinding);\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverBinding);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba6b3a12d42ba7f24a6f8365f32928b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " protected void consumeEmptyTypeDeclaration()", "signatureAfterChange": " protected void consumeEmptyTypeDeclaration()", "diff": ["-\tproblemReporter().superfluousSemicolon(endPosition+1, endStatementPosition);", "+\tproblemReporter().superfluousSemicolon(this.endPosition+1, this.endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba72682e0850224e5065a355d30c4bdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "\r public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t&& ((operation.implicitConversion >> 4) != T_String)) { // exclude string concatenation which would occur backwards\r", "+\t\t\t&& ((operation.left.implicitConversion >> 4) != T_String)) { // exclude string concatenation which would occur backwards\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba747c918404cf8221b7fa2b22b49849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static void copy(String sourcePath, String destPath)", "signatureAfterChange": " public static void copy(String sourcePath, String destPath)", "diff": ["-\t\t\tif (destFile.exists() && !destFile.delete()) {", "-\t\t\t\tthrow new IOException(destFile + \" is in use\");", "+\t\t\tif (destFile.exists()) {", "+\t\t\t\tif (!Util.delete(destFile)) {", "+\t\t\t\t\tthrow new IOException(destFile + \" is in use\");", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba908ef1ec89b60b9fd1f5a246cf4f15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic void test0070() throws JavaModelException", "signatureAfterChange": " \tpublic void test0070() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bac5ddedabded38f1ba0082ed7284ede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "c99d716fa975f313809c9a758c093b0027fd52fe", "commitAfterChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAllTypeNames2() throws CoreException", "signatureAfterChange": " public void testAllTypeNames2() throws CoreException", "diff": ["-\tassertEquals(", "+\tassertSearchResults(", "-\t\trequestor.toString());", "+\t\trequestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf01f6525db5f52203ca9a1a544e7d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/Java8ElementProcessor.java", "commitBeforeChange": "87c02024c35caa7b296fc7c28fa066d1219c7ebd", "commitAfterChange": "00ed17ebccd11fb6934f754c05c5ab1e0f58152f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t\t\tsuper.reportSuccess();", "+\t\t\t\tif (this.reportSuccessAlready) {", "+\t\t\t\t\tsuper.reportSuccess();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf90b8a1a6f7839a0f4041a2433da70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isLeftOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isLeftOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isLeftOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isLeftOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0b73909d0f48f7820cfc71a222e147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " public void invokeThrowableGetMessage()", "signatureAfterChange": " public void invokeThrowableGetMessage()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangThrowableConstantPoolName,", "-\t\t\tQualifiedNamesConstants.GetMessage,", "-\t\t\tQualifiedNamesConstants.GetMessageSignature);", "+\t\t\tConstantPool.JavaLangThrowableConstantPoolName,", "+\t\t\tConstantPool.GetMessage,", "+\t\t\tConstantPool.GetMessageSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb34c0e36f51ab5189506319edfca71a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 683, "methodNumberAfterChange": 683, "signatureBeforeChange": " public void testDeprecationCheck14() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck14() throws JavaModelException", "diff": ["-\t\t\t\t\"Test.Inner1[TYPE_REF]{Inner1, deprecation, Ldeprecation.Test$Inner1;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"Test.Inner2[TYPE_REF]{Inner2, deprecation, Ldeprecation.Test$Inner2;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"Test.Inner1[TYPE_REF]{Inner1, deprecation, Ldeprecation.Test$Inner1;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"Test.Inner2[TYPE_REF]{Inner2, deprecation, Ldeprecation.Test$Inner2;, null, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6817e92b07be1e3a579a8a228acd40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": " \tpublic void test0691() throws JavaModelException", "signatureAfterChange": " \tpublic void test0691() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb8868e5158491b1ce5410e0ce5c0ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic Compiler(\r \t\tINameEnvironment environment,\r \t\tIErrorHandlingPolicy policy,\r \t\tMap settings,\r \t\tICompilerRequestor requestor,\r \t\tIProblemFactory problemFactory)", "signatureAfterChange": "\r \tpublic Compiler(\r \t\tINameEnvironment environment,\r \t\tIErrorHandlingPolicy policy,\r \t\tMap settings,\r \t\tICompilerRequestor requestor,\r \t\tIProblemFactory problemFactory)", "diff": ["-\t\t\t\tthis.options.getAssertMode());\r", "+\t\t\t\tthis.options.assertMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb96058c0d8a3a16dd90932076b90205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 747, "methodNumberAfterChange": 750, "signatureBeforeChange": " \tpublic void test714()", "signatureAfterChange": " \tpublic void test714()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb96f91d4f74438292836d019b611ae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "b08e7596febaa49e23faa81f4a4f9ae399c9aefb", "commitAfterChange": "24cf10e27c63373d484417e95718811352f381da", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), this.options, true);", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba6cead593e778d09c3fde652e7759b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticAccessMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "diff": ["-public SyntheticAccessMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "+public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "-\tSyntheticAccessMethodBinding accessMethod = null;", "-\tSyntheticAccessMethodBinding[] accessors = (SyntheticAccessMethodBinding[]) synthetics[METHOD_EMUL].get(inheritedMethodToBridge);", "+\tSyntheticMethodBinding accessMethod = null;", "+\tSyntheticMethodBinding[] accessors = (SyntheticMethodBinding[]) synthetics[METHOD_EMUL].get(inheritedMethodToBridge);", "-\t\taccessMethod = new SyntheticAccessMethodBinding(inheritedMethodToBridge, localTargetMethod);", "-\t\tsynthetics[METHOD_EMUL].put(inheritedMethodToBridge, accessors = new SyntheticAccessMethodBinding[2]);", "+\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\tsynthetics[METHOD_EMUL].put(inheritedMethodToBridge, accessors = new SyntheticMethodBinding[2]);", "-\t\t\taccessMethod = new SyntheticAccessMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe073aed4c788ccc959b4ffb6f27215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": " \tpublic void test0194() throws JavaModelException", "signatureAfterChange": " \tpublic void test0194() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc03f2f34ecf4eb8982d064d34d6e399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "bec882b73e7c0461cc0585cc90fdee9b599b323f", "commitAfterChange": "2d93f702c418ae37553e53fb53a22c5fb9d1c19a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public TypeDeclaration updatedTypeDeclaration()", "signatureAfterChange": "\r public TypeDeclaration updatedTypeDeclaration()", "diff": ["-\t\t\ttypeDeclaration.createsInternalConstructor(true, true);\r", "+\t\t\ttypeDeclaration.createsInternalConstructor(!parser().diet, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc07b1ecc4412c250017ea23c476a6d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 73, "signatureBeforeChange": "  \tpublic void printTrailingComment(int numberOfNewLinesToInsert)", "signatureAfterChange": "  \tpublic void printTrailingComment(int numberOfNewLinesToInsert)", "diff": ["-\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tprintLineComment();", "-\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource(), false);", "+\t\t\t\t\t\tprintBlockComment(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc16568d95f99559986117545ddf7c93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r protected IType getHandle(IGenericType genericType)", "signatureAfterChange": "\r protected IType getHandle(IGenericType genericType)", "diff": ["-\tif (genericType == null) return null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2d3fc77626638ad5057382de64724e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "15354ef30ff1d65c0145e0a7585cb94774313c51", "commitAfterChange": "f49cf7529ae8b80cdf3f120143dad37a4f24e498", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public void setUpSuite() throws Exception", "signatureAfterChange": "  public void setUpSuite() throws Exception", "diff": ["-\tPROJECT_SETUP = true; // do not copy Converter* directories", "+//\tPROJECT_SETUP = true; // do not copy Converter* directories", "-\tsetUpJCLClasspathVariables(\"1.5\");", "+//\tsetUpJCLClasspathVariables(\"1.5\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc315e8b3e78f25fd209b0a24db43e7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t */", "-\tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream) {", "+ */", "+void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream) {", "+\tthis.offset = initOffset;", "+\tthis.maxOffset = initOffset;", "-\t\tthis.offset = initOffset;", "-\t\tthis.maxOffset = initOffset;", "+\t// local variable init", "+\tint maxLocals = this.localIndex;", "+\tboolean hasMoreVariables = ilocal < maxLocals;", "-\t\t// local variable init", "-\t\tint maxLocals = this.localIndex;", "-\t\tboolean hasMoreVariables = ilocal < maxLocals;", "+\t// scope init", "+\tint iscope = 0, maxScopes = this.subscopeCount;", "+\tboolean hasMoreScopes = maxScopes > 0;", "-\t\t// scope init", "-\t\tint iscope = 0, maxScopes = this.subscopeCount;", "-\t\tboolean hasMoreScopes = maxScopes > 0;", "-", "-\t\t// iterate scopes and variables in parallel", "-\t\twhile (hasMoreVariables || hasMoreScopes) {", "-\t\t\tif (hasMoreScopes", "-\t\t\t\t&& (!hasMoreVariables || (subscopes[iscope].startIndex() <= ilocal))) {", "-\t\t\t\t// consider subscope first", "-\t\t\t\tif (subscopes[iscope] instanceof BlockScope) {", "-\t\t\t\t\tBlockScope subscope = (BlockScope) subscopes[iscope];", "-\t\t\t\t\tint subOffset = subscope.shiftScopes == null ? this.offset : subscope.maxShiftedOffset();", "-\t\t\t\t\tsubscope.computeLocalVariablePositions(0, subOffset, codeStream);", "-\t\t\t\t\tif (subscope.maxOffset > this.maxOffset)", "-\t\t\t\t\t\tthis.maxOffset = subscope.maxOffset;", "-\t\t\t\t}", "-\t\t\t\thasMoreScopes = ++iscope < maxScopes;", "-\t\t\t} else {", "+\t// iterate scopes and variables in parallel", "+\twhile (hasMoreVariables || hasMoreScopes) {", "+\t\tif (hasMoreScopes", "+\t\t\t&& (!hasMoreVariables || (this.subscopes[iscope].startIndex() <= ilocal))) {", "+\t\t\t// consider subscope first", "+\t\t\tif (this.subscopes[iscope] instanceof BlockScope) {", "+\t\t\t\tBlockScope subscope = (BlockScope) this.subscopes[iscope];", "+\t\t\t\tint subOffset = subscope.shiftScopes == null ? this.offset : subscope.maxShiftedOffset();", "+\t\t\t\tsubscope.computeLocalVariablePositions(0, subOffset, codeStream);", "+\t\t\t\tif (subscope.maxOffset > this.maxOffset)", "+\t\t\t\t\tthis.maxOffset = subscope.maxOffset;", "+\t\t\t}", "+\t\t\thasMoreScopes = ++iscope < maxScopes;", "+\t\t} else {", "+\t\t\t", "+\t\t\t// consider variable first", "+\t\t\tLocalVariableBinding local = this.locals[ilocal]; // if no local at all, will be locals[ilocal]==null", "+\t\t\t", "+\t\t\t// check if variable is actually used, and may force it to be preserved", "+\t\t\tboolean generateCurrentLocalVar = (local.useFlag == LocalVariableBinding.USED && local.constant() == Constant.NotAConstant);", "-\t\t\t\t// consider variable first", "-\t\t\t\tLocalVariableBinding local = locals[ilocal]; // if no local at all, will be locals[ilocal]==null", "-\t\t\t\t", "-\t\t\t\t// check if variable is actually used, and may force it to be preserved", "-\t\t\t\tboolean generateCurrentLocalVar = (local.useFlag == LocalVariableBinding.USED && local.constant() == Constant.NotAConstant);", "+\t\t\t// do not report fake used variable", "+\t\t\tif (local.useFlag == LocalVariableBinding.UNUSED", "+\t\t\t\t&& (local.declaration != null) // unused (and non secret) local", "+\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0)) { // declaration is reachable", "-\t\t\t\t// do not report fake used variable", "-\t\t\t\tif (local.useFlag == LocalVariableBinding.UNUSED", "-\t\t\t\t\t&& (local.declaration != null) // unused (and non secret) local", "-\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0)) { // declaration is reachable", "-\t\t\t\t\t\t", "-\t\t\t\t\tif (!(local.declaration instanceof Argument))  // do not report unused catch arguments", "-\t\t\t\t\t\tthis.problemReporter().unusedLocalVariable(local.declaration);", "+\t\t\t\tif (!(local.declaration instanceof Argument))  // do not report unused catch arguments", "+\t\t\t\t\tthis.problemReporter().unusedLocalVariable(local.declaration);", "+\t\t\t}", "+\t\t\t", "+\t\t\t// could be optimized out, but does need to preserve unread variables ?", "+\t\t\tif (!generateCurrentLocalVar) {", "+\t\t\t\tif (local.declaration != null && compilerOptions().preserveAllLocalVariables) {", "+\t\t\t\t\tgenerateCurrentLocalVar = true; // force it to be preserved in the generated code", "+\t\t\t\t\tlocal.useFlag = LocalVariableBinding.USED;", "-\t\t\t\t", "-\t\t\t\t// could be optimized out, but does need to preserve unread variables ?", "-\t\t\t\tif (!generateCurrentLocalVar) {", "-\t\t\t\t\tif (local.declaration != null && compilerOptions().preserveAllLocalVariables) {", "-\t\t\t\t\t\tgenerateCurrentLocalVar = true; // force it to be preserved in the generated code", "-\t\t\t\t\t\tlocal.useFlag = LocalVariableBinding.USED;", "-\t\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\t// allocate variable", "+\t\t\tif (generateCurrentLocalVar) {", "+", "+\t\t\t\tif (local.declaration != null) {", "+\t\t\t\t\tcodeStream.record(local); // record user-defined local variables for attribute generation", "-\t\t\t\t", "-\t\t\t\t// allocate variable", "-\t\t\t\tif (generateCurrentLocalVar) {", "+\t\t\t\t// assign variable position", "+\t\t\t\tlocal.resolvedPosition = this.offset;", "-\t\t\t\t\tif (local.declaration != null) {", "-\t\t\t\t\t\tcodeStream.record(local); // record user-defined local variables for attribute generation", "-\t\t\t\t\t}", "-\t\t\t\t\t// assign variable position", "-\t\t\t\t\tlocal.resolvedPosition = this.offset;", "-", "-\t\t\t\t\tif ((local.type == TypeBinding.LONG) || (local.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\tthis.offset += 2;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.offset++;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (this.offset > 0xFFFF) { // no more than 65535 words of locals", "-\t\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForLocal(", "-\t\t\t\t\t\t\tlocal, ", "-\t\t\t\t\t\t\tlocal.declaration == null ? (ASTNode)this.methodScope().referenceContext : local.declaration);", "-\t\t\t\t\t}", "+\t\t\t\tif ((local.type == TypeBinding.LONG) || (local.type == TypeBinding.DOUBLE)) {", "+\t\t\t\t\tthis.offset += 2;", "-\t\t\t\t\tlocal.resolvedPosition = -1; // not generated", "+\t\t\t\t\tthis.offset++;", "-\t\t\t\thasMoreVariables = ++ilocal < maxLocals;", "-\t\t\t}", "-\t\t}", "-\t\tif (this.offset > this.maxOffset)", "-\t\t\tthis.maxOffset = this.offset;", "-\t}", "+\t\t\t\tif (this.offset > 0xFFFF) { // no more than 65535 words of locals", "+\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForLocal(", "+\t\t\t\t\t\tlocal, ", "+\t\t\t\t\t\tlocal.declaration == null ? (ASTNode)this.methodScope().referenceContext : local.declaration);", "+\t\t\t\t}", "+\t\t\t\tlocal.resolvedPosition = -1; // not generated", "+\t\t\thasMoreVariables = ++ilocal < maxLocals;", "+\tif (this.offset > this.maxOffset)", "+\t\tthis.maxOffset = this.offset;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc31975d61e137e658925c76fecf5899", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "877d1c925f96fd1468669263e6d8fde7ccbe8c86", "commitAfterChange": "5f2c1ea3affced840286a6c8b813c60b56c847c3", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": " public void localVariableCannotBeNull(LocalVariableBinding local, ASTNode location)", "signatureAfterChange": " public void localVariableCannotBeNull(LocalVariableBinding local, ASTNode location)", "diff": ["-\t\tlocation.sourceEnd);", "+\t\tlocalSourceEnd(local, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc48e85b36d4075edabe20268941043b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "7e19b2ce556935381f34169a0c54d53d18418c5d", "commitAfterChange": "de244ed59d5ac31bccdb26cdf94fcbe6724c20b4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "+\t\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocUnexpectedTag((int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "-\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5dc9004b7015127b04e3a0715a81d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/CommentRegion.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic CommentRegion(final IDocument document, final Position position, final CodeFormatterVisitor formatter)", "signatureAfterChange": " \tpublic CommentRegion(final IDocument document, final Position position, final CodeFormatterVisitor formatter)", "diff": ["-\t\t", "-\t\tfClear= this.preferences.comment_clear_blank_lines;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc60af8ecedeacb0b0ef06e9cbbc958d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testEditExternalSourceType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testEditExternalSourceType() throws JavaModelException, CoreException", "diff": ["-public void testEditExternalSourceType() throws JavaModelException, CoreException, IOException {", "+public void testEditExternalSourceType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc679df92bfc8c1c2068f63c6d07ecad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 245, "signatureBeforeChange": " \tpublic void test0243() throws JavaModelException", "signatureAfterChange": " \tpublic void test0243() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc7bdd65d7ac40132ecdb33fc222142e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElement.java", "commitBeforeChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "commitAfterChange": "93f02dc8fee116123b433670b020252814159420", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public boolean equals(Object o)", "signatureAfterChange": " public boolean equals(Object o)", "diff": ["-\tif (!super.equals(o)) return false;", "-\treturn this.occurrenceCount == ((SourceRefElement)o).occurrenceCount;", "+\treturn this.occurrenceCount == ((SourceRefElement)o).occurrenceCount &&", "+\t\t\tsuper.equals(o);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce5c88ef142de69f3f3ffe491dfb737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "commitAfterChange": "55350d5af8386833b94a470ab6a0d389ee3fc665", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "diff": ["+\t\t\t\tnull/*no inclusion pattern*/,", "+\t\t\t\tnull/*no exclusion pattern*/,", "+\t\t\t\tnull/*no inclusion pattern*/,", "+\t\t\t\tnull/*no exclusion pattern*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd092a7d79029cc38c2f5aae06f8b2ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public void test052() throws JavaModelException", "signatureAfterChange": "  public void test052() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd20718a9f00de691ba314a9a084fb3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5fb3e7af0d956528c2016b90338048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public MethodBinding[] getMethods(char[] selector)", "signatureAfterChange": " public MethodBinding[] getMethods(char[] selector)", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6bea0e7234a9cb3f5d53f8b278f944", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus)", "signatureAfterChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus)", "diff": ["-\t\t\tflowContext.recordNullityMismatch(scope, this.expression, nullStatus, methodBinding.returnType);", "+\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, nullStatus);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd94d66e40b44b9324135ae1e3512714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "078ea5e078bf6c35d6fcde3633044edd92c88e9e", "commitAfterChange": "b7c179ce8d198d23a081719a8015e8909a6c26b0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["+\t\t} catch (RuntimeException e) {", "+\t\t\tUtil.log(e, \"Indexer crashed on document \" + this.document.getPath()); //$NON-NLS-1$", "+\t\t\tthrow e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdc74f8eee23a48b36e30fba8c96951f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ContinueStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getLabel()", "signatureAfterChange": "  \tpublic SimpleName getLabel()", "diff": ["-\t\treturn optionalLabel;", "+\t\treturn this.optionalLabel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcf7d5b01c753149e53539e5799bd04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "93064d94293a0408d3fca5808908fb56902798a3", "commitAfterChange": "b18d6adb25f48ecf7c7eab00f32abaea5a8b60ae", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "signatureAfterChange": "  \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "diff": ["+\t\t\t\tif (this.environment().isProcessingAnnotations && this.environment().isMissingType(memberContext.name)) {", "+\t\t\t\t\tthrow new SourceTypeCollisionException(); // resolved a type ref before APT generated the type", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1f6b72233a0971a29a2bd041351d30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "50dfb922a580f9f268a713fa98ab3771f1da2c22", "commitAfterChange": "84120f0b3d7bb847f565c6a8b215e525ff95e94c", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tfinal static public String toString(char[][] array)", "signatureAfterChange": " \tfinal static public String toString(char[][] array)", "diff": ["+\t */", "-\t\tif (result == null)", "-\t\t\treturn \"\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be2edd2e6323f66ded9fccd2c716c64c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": " \tpublic void test0235() throws JavaModelException", "signatureAfterChange": " \tpublic void test0235() throws JavaModelException", "diff": ["-\t\t\t\tfalse);", "+\t\t\t\tfalse,", "+\t\t\t\tfalse,", "+\t\t\t\ttrue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be323d30df148bd3df3949376b19d72e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "55e73883e7d976f9cccec7b53550d84ac74291b1", "commitAfterChange": "dc04cc3af6415e31629b43b683998ef4771a1c6c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasReturnNonNullDefault, boolean hasParameterNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasReturnNonNullDefault, boolean hasParameterNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\t\t\tif (hasReturnNonNullDefault) { // conflict with inheritance already checked", "+\t\t\t\tif (hasReturnNonNullDefault && currentMethod.returnType.acceptsNonNullDefault()) { // conflict with inheritance already checked", "-\t\t\t\t\telse", "+\t\t\t\t\telse if (currentMethod.parameters[i].acceptsNonNullDefault())", "+\t\t\t\t\telse", "+\t\t\t\t\t\tcurrentNonNullNess = null; // cancel if parameter doesn't accept the default"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be376d838844a0949401a4a42a80eb86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "605f37cabeca98d22b45a43a25e1b721e06fc06d", "commitAfterChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\tJavaBuilder.startingBuilding(preferredClasspaths, preferredOutputs);", "+\t\t\t\t\t\tJavaBuilder.buildStarting();", "-\t\t\t\t\tJavaBuilder.finishedBuilding();", "+\t\t\t\t\tJavaBuilder.buildFinished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be3ad99eb4fc02e985903474e50c9871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test0005() throws JavaModelException", "signatureAfterChange": " \tpublic void test0005() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be43b712f9328004eef9fe7be4cdb28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/BinaryExpressionFragmentBuilder.java", "commitBeforeChange": "9e908010b1ae204dd6593c56e3ea43d5cb25cbdb", "commitAfterChange": "7913a078c30037cd5dca62ff4eaac30e820ed2ca", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope)", "signatureAfterChange": "  \tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope)", "diff": ["-\t\t\treturn false;", "-\t\t\treturn false;", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be53478c8348dd6b1bbc1bea259b013c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "210c33ffd65c7b115af821c05e78f62b6d5c9778", "commitAfterChange": "64439b6da14f1b2a3b51bd71fd70f4dc58d2b2a9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void testSearchMethod() throws CoreException", "signatureAfterChange": " \tpublic void testSearchMethod() throws CoreException", "diff": ["-\t\tsetComment(Performance.EXPLAINS_DEGRADATION_COMMENT, SEARCH_DEGRADATION_COMMENT);", "+\t\tsetComment(Performance.EXPLAINS_DEGRADATION_COMMENT, \"Test is not enough stable and will be rewritten...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8a5ca0f067098f327866655f89a55d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "2f4a2c5f4e85be10c6f8a803a860cb198c96e808", "commitAfterChange": "6e078f72aac803cfa7a439337ace93b9202fe191", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public int getModifiers()", "signatureAfterChange": "\r public int getModifiers()", "diff": ["-\treturn modifiers;\r", "+\treturn this.modifiers;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bedb28eec50ade18fd2f9a4321f32594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": "\r protected void consumeUnaryExpression(int op, boolean post)", "signatureAfterChange": "\r protected void consumeUnaryExpression(int op, boolean post)", "diff": ["-\t\t\t\t\tendPosition + 1); \r", "+\t\t\t\t\tscanner.startPosition - 1); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bef592e81be3f92deb09812359e8b1aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public int[] getConstantPoolOffsets()", "signatureAfterChange": "\r public int[] getConstantPoolOffsets()", "diff": ["-\treturn constantPoolOffsets;\r", "+\treturn this.constantPoolOffsets;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0c95cfa6fadf4e79a9c2a185f66c0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "commitAfterChange": "90329a8061aecf116ef817e3a00ea13f48a88e85", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t@Override \tpublic PrimitiveType getPrimitiveType(TypeKind kind)", "signatureAfterChange": " \t@Override \tpublic PrimitiveType getPrimitiveType(TypeKind kind)", "diff": ["-\t\t// TODO Auto-generated method stub", "-\t\treturn null;", "+\t\treturn Factory.getPrimitiveType(kind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf11c24782a18f7e4920917f4eae3110", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 348, "signatureBeforeChange": " \tpublic void test0346() throws JavaModelException", "signatureAfterChange": " \tpublic void test0346() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf38c093effe4a42ec8be84957287c91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public RecoveredElement updateOnOpeningBrace(int braceStart, int braceEnd)", "signatureAfterChange": " public RecoveredElement updateOnOpeningBrace(int braceStart, int braceEnd)", "diff": ["-\t\t\tinit = new Initializer(block, AccDefault);", "+\t\t\tinit = new Initializer(block, ClassFileConstants.AccDefault);", "-\t\t\tinit = new Initializer(block, AccStatic);", "+\t\t\tinit = new Initializer(block, ClassFileConstants.AccStatic);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf5ab9d7f91102bcd475f3945677b0ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "1317e9ebe26807b45d83a46701194241e6f648d5", "commitAfterChange": "3649f3f6d703fd53c9c12b41cdc037f657d98134", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t// create buffer\r", "-\tIBuffer buffer = this.bufferFactory.createBuffer(this);\r", "+\t// create buffer - working copies may use custom buffer factory\r", "+\tIBuffer buffer = getBufferFactory().createBuffer(this);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfdadc9bd27cc59f6a79fb60e5878221", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfef742b1a3783fbd8d534976e816d68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "6c797406271c70e354dc360e4e2b55dc743bf914", "commitAfterChange": "6bb034ac24fec033a91d15d668c7ba33f5039fc9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected boolean parseParam()", "signatureAfterChange": " \tprotected boolean parseParam()", "diff": ["-\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMissingParamName(start, end);", "+\t\tif (this.sourceParser != null) {", "+\t\t\tthis.sourceParser.problemReporter().javadocMissingParamName(start, end, this.sourceParser.modifiers);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0080e5944f5abc967ab3594e9d16ce9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "ea7357803f7625c89fd0063c616a1f7a28c12a8c", "commitAfterChange": "2b786bffa4dd1bffe658313335c4deb92d85d228", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate boolean examineGetDeclaredTypeNested()", "signatureAfterChange": " \tprivate boolean examineGetDeclaredTypeNested()", "diff": ["+\t\tArrayType numberArrayType = _typeUtils.getArrayType(numberType);", "-\t\t// HashMap<String, Number>", "-\t\tDeclaredType outerType = _typeUtils.getDeclaredType(mapDecl, stringType, numberType);", "+\t\t// HashMap<String, Number[]>", "+\t\tDeclaredType outerType = _typeUtils.getDeclaredType(mapDecl, stringType, numberArrayType);", "-\t\t// HashMap<String, Number>.HashIterator<Number>", "-\t\tDeclaredType decl = _typeUtils.getDeclaredType(outerType, iterDecl, new DeclaredType[] { numberType });", "+\t\t// HashMap<String, Number[]>.HashIterator<Number[]>", "+\t\tDeclaredType decl = _typeUtils.getDeclaredType(outerType, iterDecl, new TypeMirror[] { numberArrayType });", "-\t\t\treportError(\"Map<String, Number>.EntryIterator<Number> should have one argument but decl.getTypeArguments() returned \" + args.size());", "+\t\t\treportError(\"Map<String, Number[]>.EntryIterator<Number[]> should have one argument but decl.getTypeArguments() returned \" + args.size());", "-\t\tif (!_typeUtils.isSameType(numberType, args.get(0))) {", "-\t\t\treportError(\"First arg of Map<String, Number>.EntryIterator<Number> was expected to be Number, but was: \" + args.get(0));", "+\t\tif (!_typeUtils.isSameType(numberArrayType, args.get(0))) {", "+\t\t\treportError(\"First arg of Map<String, Number[]>.EntryIterator<Number[]> was expected to be Number[], but was: \" + args.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c012c14b95f395f077f92415c8820333", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "adb31abd7b76aacf34a5241ce11f6a5ccfcea015", "commitAfterChange": "d9a97d862b475eea227de958d835b86e43eefc95", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testSearchAllTypeNames() throws CoreException", "signatureAfterChange": " \tpublic void testSearchAllTypeNames() throws CoreException", "diff": ["+\t\t\tcleanCategoryTableCache(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01cc543756bb145e4bb525d456ccb8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " \tpublic void test0176() throws JavaModelException", "signatureAfterChange": " \tpublic void test0176() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c03263ab6cc26fd9ed794c19f022bf22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic boolean isInsideDeprecatedCode()", "signatureAfterChange": "  \tpublic boolean isInsideDeprecatedCode()", "diff": ["-\t\tswitch(kind){", "+\t\tswitch(this.kind){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c03d8b994f11a55adebc382ddd7ee32a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void test0493() throws JavaModelException", "signatureAfterChange": " \tpublic void test0493() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c054665f81d7e0897307031767467b7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "8758dd14429783f320e9886f9e8b83edae58524b", "commitAfterChange": "5d659b26c6aa5eb4fc698fe62dca975ceee0bdfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public Scanner()", "signatureAfterChange": "  public Scanner()", "diff": ["-\tthis(false /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, false /*strict comment*/, null/*taskTag*/, null/*taskPriorities*/);", "+\tthis(false /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, null/*taskTag*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c091e649c5af53f8ab0e34e0922b19e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "84d8452b11f7f1dbffe45bb844b66b076accc297", "commitAfterChange": "af6cae9b91f809f73ea558ff53d58801e2b581f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tthis.exception.checkNPE(currentScope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c09805922a1df1b06dac8f2d37c40c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "b246de6fdcd5a901a16dcaeba98ae727a49eb635", "commitAfterChange": "56d15386ff3f6926c8a8ed7999b62e707baad4f8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testIndexingOneProject() throws CoreException", "signatureAfterChange": " \tpublic void testIndexingOneProject() throws CoreException", "diff": ["-\t\ttagAsSummary(\"Search JDT/Core indexes building\", false); // do NOT put in fingerprint", "+\t\ttagAsSummary(\"Indexing JDT/Core project\", true); // put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b9f939f3a02899c7cf445324472e65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "788c169eda00b669155eb0f9164eec17e1ef661d", "commitAfterChange": "7898c4b8cd615bc3892adbc0bebbcfa8bbac8b39", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public TypeDeclaration updatedTypeDeclaration()", "signatureAfterChange": " public TypeDeclaration updatedTypeDeclaration()", "diff": ["-\t\tif (!hasConstructor && kind != TypeDeclaration.INTERFACE_DECL && kind != TypeDeclaration.ANNOTATION_TYPE_DECL) {// if was already reduced, then constructor", "+\t\tif (!hasConstructor &&", "+\t\t\t\tkind != TypeDeclaration.INTERFACE_DECL &&", "+\t\t\t\tkind != TypeDeclaration.ANNOTATION_TYPE_DECL &&", "+\t\t\t\ttypeDeclaration.allocation == null) {// if was already reduced, then constructor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c52ec1d87f3e84a2c437c2fdc0a7e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "f9ea1202585c52eab9fbf39ace7b180e05641d22", "commitAfterChange": "b937013867304581ed64efe453c75af32eec6086", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " public void testTypeReference10() throws CoreException", "signatureAfterChange": " public void testTypeReference10() throws CoreException", "diff": ["-\tthis.resultCollector.showAccuracy = true;", "+\tthis.resultCollector.showAccuracy(true);", "-\tthis.resultCollector.showAccuracy = true;", "+\tthis.resultCollector.showAccuracy(true);", "-\tthis.resultCollector.showAccuracy = true;", "+\tthis.resultCollector.showAccuracy(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11892953cbe0ebb5b521c2df4b0691e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate boolean doesNotCompleteNormally()", "signatureAfterChange": "  \tprivate boolean doesNotCompleteNormally()", "diff": ["-\t\t\treturn this.original.valueCompatible;", "+\t\t\treturn this.valueCompatible;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c128f9504d48b7502164c914857fe3f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, CompilerOptions.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/);", "+\tScanner scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null /*taskTags*/, null/*taskPriorities*/);", "-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:", "-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1299af0ed904d5d05190a4fdf8698f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic Type getReturnType()", "signatureAfterChange": " \tpublic Type getReturnType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1498f951f9cab264d12a6ca086cf14d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "69322cef043ef54194e3a32f347e151e0e2870a4", "commitAfterChange": "7d0859ec775b8e65d22913e093fcc433c8eb0ab1", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["-", "+\t\t\t", "+\t\t\tif (this.options.checkDeprecation &&", "+\t\t\t\t\tmethod.isViewedAsDeprecated() &&", "+\t\t\t\t\t!scope.isDefinedInSameUnit(method.declaringClass))", "+\t\t\t\tcontinue next;", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b8eea52e520d5760e90a2c63b81413", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "8f1a95e5900cf1bf71049d8b9899635ac35610ff", "commitAfterChange": "7c0534e311ca23dad63801edecab8ecfaf54c055", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r \t\r \tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement)", "signatureAfterChange": "\r \t\r \tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement)", "diff": ["-\t\tlabeledStatement.setLabel(this.ast.newSimpleName(new String(statement.label)));\r", "+\t\tSimpleName name = this.ast.newSimpleName(new String(statement.label));\r", "+\t\tretrieveIdentifierAndSetPositions(statement.sourceStart, statement.sourceEnd, name);\r", "+\t\tlabeledStatement.setLabel(name);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1c063e6b32ade67628bed6f2d1bf960", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test0456() throws JavaModelException", "signatureAfterChange": " \tpublic void test0456() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d4fbfa6e8fe85bacb0713e06d3a5dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "1bff5bc2e7a5e7ac5d3ee0da5a9ec7d300bbef95", "commitAfterChange": "6de1b7c94d541a45c4088424e916b6d1d95dbbdc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\tboolean isWhiteSpace;", "+\t\t\tboolean isWhiteSpace, hasWhiteSpaces = false;", "+\t\t\tint offset = 0;", "+\t\t\t\t\toffset = 6;", "+\t\t\t\t\toffset = 1;", "+\t\t\t\tif (isWhiteSpace) {", "+\t\t\t\t\thasWhiteSpaces = true;", "+\t\t\t\t}", "-\t\t\tif (tokenizeWhiteSpace && (whiteStart != currentPosition - 1)) {", "+\t\t\tif (tokenizeWhiteSpace && hasWhiteSpaces) {", "-\t\t\t\tcurrentPosition--;", "+\t\t\t\tcurrentPosition-=offset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f02b8f2834c0976cf045b724bd20f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "fcea29988ed692db00839aa74edd7fda8cc73655", "commitAfterChange": "25a0c02d6979e76d70832f78f8eb60bd371c0ad1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate FakedTrackingVariable(BlockScope scope, ASTNode location, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": " \tprivate FakedTrackingVariable(BlockScope scope, ASTNode location, FlowInfo flowInfo, int nullStatus)", "diff": ["-\t\tsuper(\"<unassigned Closeable value>\".toCharArray(), location.sourceStart, location.sourceEnd); //$NON-NLS-1$", "+\t\tsuper(UNASSIGNED_CLOSEABLE_NAME, location.sourceStart, location.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c25cdfdd2f3bf288cf345c58ba4ab2f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a107a93c33b9fbfeb3c58f06a397400d87b64e14", "commitAfterChange": "ac57d09afd251c5c3e8f5a329155e4ee05cc3840", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic ReferenceBinding[] syntheticEnclosingInstanceTypes()", "signatureAfterChange": " \tpublic ReferenceBinding[] syntheticEnclosingInstanceTypes()", "diff": ["-\t\treturn this.type.syntheticEnclosingInstanceTypes();", "+\t\treturn genericType().syntheticEnclosingInstanceTypes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a0c86094b340f9ebb96775b8371261", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": " \tpublic void test0367() throws JavaModelException", "signatureAfterChange": " \tpublic void test0367() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a8e12be3944395c9579c8b3b2828d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 146, "signatureBeforeChange": " final public void iflt(Label lbl)", "signatureAfterChange": " final public void iflt(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tiflt:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2aacd40a485923e9ad76b8d1def26c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b7ea5744525df388c37b95455e0adfb081a232d5", "commitAfterChange": "f5007b7c0d4ff2d3bb6b4378ddf1e0e19d140cdd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void elementRemoved(Openable element, IResourceDelta delta, RootInfo rootInfo)", "signatureAfterChange": " \tprotected void elementRemoved(Openable element, IResourceDelta delta, RootInfo rootInfo)", "diff": ["-\t\t\t\tJavaModelManager.getJavaModelManager().removePerProjectInfo(", "+\t\t\t\tthis.manager.removePerProjectInfo("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b60203ec7cf66433a03031a0e5da04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " \tpublic void test0234_2() throws JavaModelException", "signatureAfterChange": " \tpublic void test0234_2() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true, false);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ba292d9f0e238721d5a1439bce2eb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static boolean conflictsWithOutputLocation(IPath folderPath, JavaProject project)", "signatureAfterChange": " \tpublic static boolean conflictsWithOutputLocation(IPath folderPath, JavaProject project)", "diff": ["-\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e8d7ae9eccab091b9fde96057f77cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": " \tpublic void test0541() throws JavaModelException", "signatureAfterChange": " \tpublic void test0541() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2eccf61a88e6f4c700904174bfcc8a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "5c1a1419e358395c13f4e301161f744852d3ac49", "commitAfterChange": "98e04796f67b009be6b2990d61d59926eaa1e6f0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tprotected JavaModelOperation popOperation()", "signatureAfterChange": " \tprotected JavaModelOperation popOperation()", "diff": ["+\t\t\tif (size == 1) { // top level operation ", "+\t\t\t\toperationStacks.setCurrent(null); // release reference (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=33927)", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2fbaa6ac76fa2598006e58708ac8c7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void test0025() throws JavaModelException", "signatureAfterChange": " \tpublic void test0025() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31d9dea6126027c1df53bd560559c87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NonFatalErrorTest.java", "commitBeforeChange": "f874c6b5077c159b72bb8e4b8aad8ed303fb1894", "commitAfterChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void test004()", "signatureAfterChange": " \t \tpublic void test004()", "diff": ["+\t\t\tnull /* expectedErrorString */,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c339fac24fb7347cfcccc9bbaf5b89cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testAccessRestriction13() throws Exception", "signatureAfterChange": " public void testAccessRestriction13() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3451699b377e7bf7e10d92350cf88e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/FactoryPath.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static synchronized void removeContainer( \t\t\tIJavaProject jproj, FactoryContainer container)  \t\t\tthrows IOException, CoreException", "signatureAfterChange": " \tpublic static synchronized void removeContainer( \t\t\tIJavaProject jproj, FactoryContainer container)  \t\t\tthrows CoreException", "diff": ["-\t\t\tthrows IOException, CoreException {", "+\t\t\tthrows CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34d8d7938b38e754edb45066ec87e54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void test0080() throws JavaModelException", "signatureAfterChange": " \tpublic void test0080() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c367e45c35d3378b2dc2547eb8eac16d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": " public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t&& (operation.left.constant != NotAConstant) // exclude non constant expressions, since could have side-effect", "+\t\t\t&& (operation.left.constant != Constant.NotAConstant) // exclude non constant expressions, since could have side-effect", "-\t\t\t\tif (assignment.expression.constant != NotAConstant) {", "+\t\t\t\tif (assignment.expression.constant != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38594f353c75ff5a2692850b55e092b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 271, "methodNumberAfterChange": 271, "signatureBeforeChange": " \tpublic void test0626()", "signatureAfterChange": " \tpublic void test0626()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, source, \"Object.java\", project); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(getJLS3(), source, \"Object.java\", project); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3945400f5e89ec2f4a302ec6d26e278", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "57bbae793b080e332ffbe7d9a1eee58929157c9e", "commitAfterChange": "b217112507f53a311f9d32f09e4f736a9ed00294", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\t  \tpublic TextEdit getRootEdit()", "signatureAfterChange": "\t  \tpublic TextEdit getRootEdit()", "diff": ["+\t\tif (CodeFormatterVisitor.DEBUG) {", "+\t\t\t// sanity check", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3bf046a36f54e4246e815f182247ec1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "8973e89f54391c88fecba174a2ca6f208cadbd27", "commitAfterChange": "48ceb5ac4a314c1ce7f6900fe3c64b02824b66f2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public Constant optimizedBooleanConstant()", "signatureAfterChange": "  public Constant optimizedBooleanConstant()", "diff": ["+\tif (this.resolvedType == null)", "+\t\treturn Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ea7b2fda4217dbdc902b825f02e62d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "8c44460411942a16aad4cdd569d521a9db8691de", "commitAfterChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void delete(IJavaElement[] elements, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void delete(IJavaElement[] elements, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\trunOperation(new DeleteResourceElementsOperation(elements, force), monitor);", "+\t\tnew DeleteResourceElementsOperation(elements, force).runOperation(monitor);", "-\t\trunOperation(new DeleteElementsOperation(elements, force), monitor);", "+\t\tnew DeleteElementsOperation(elements, force).runOperation(monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3ee027c40bdce99929d454c21af44e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "bb58594beea7321f1a2a3673bab3e26af89ead20", "commitAfterChange": "7376fb10956e4a03cc528e86b634b5ca73ef755b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tcodeStream.updateLastRecordedEndPC(position);", "+\t\t\t\tcodeStream.updateLastRecordedEndPC((this.thenStatement instanceof Block) ? ((Block) this.thenStatement).scope : currentScope, position);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f70ab1d69e092413d008d113d34668", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ErrorTypeElement.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tErrorTypeElement(BaseProcessingEnvImpl env)", "signatureAfterChange": " \t \tErrorTypeElement(BaseProcessingEnvImpl env, ReferenceBinding binding)", "diff": ["-\tErrorTypeElement(BaseProcessingEnvImpl env) {", "-\t\tsuper(env, null, null);", "+\tErrorTypeElement(BaseProcessingEnvImpl env, ReferenceBinding binding) {", "+\t\tsuper(env, binding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f8350dd223bcfce7b6a4032ab896b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 532, "methodNumberAfterChange": 535, "signatureBeforeChange": "  \tpublic void test498()", "signatureAfterChange": "  \tpublic void test498()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4170df7b9a4a2ce87594707ccdb6f22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "995521865cfd6e568bdd12bfb7d4a59fc50611ab", "commitAfterChange": "3efbae02af9125c723d4c2de65767b20d72aaa7a", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "signatureAfterChange": "  public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "diff": ["-\treturn s.isCompatibleWith(t);", "+\treturn s.isCompatibleWith(t) && !s.needsUncheckedConversion(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41a7b805c12463aa01b2131469c3121", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 455, "methodNumberAfterChange": 455, "signatureBeforeChange": " \tpublic void test436()", "signatureAfterChange": " \tpublic void test436()", "diff": ["-\t\tpreferences.type_declaration_brace_position = DefaultCodeFormatterConstants.NEXT_LINE;", "-\t\tpreferences.method_declaration_brace_position = DefaultCodeFormatterConstants.NEXT_LINE;", "-\t\tpreferences.block_brace_position = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\tpreferences.brace_position_for_type_declaration = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\tpreferences.brace_position_for_method_declaration = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\tpreferences.brace_position_for_constructor_declaration = DefaultCodeFormatterConstants.NEXT_LINE;", "+\t\tpreferences.brace_position_for_block = DefaultCodeFormatterConstants.NEXT_LINE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c448a43d18e05e8ae9d6088e3e980060", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 388, "signatureBeforeChange": " \tpublic void test0386() throws JavaModelException", "signatureAfterChange": " \tpublic void test0386() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c44e65911104b202dfc0f58ed76ed95e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 202, "signatureBeforeChange": " public void javadocDeprecatedType(TypeBinding type, ASTNode location, int modifiers)", "signatureAfterChange": " public void javadocDeprecatedType(TypeBinding type, ASTNode location, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c475c82f528e254ea5873df04154b5b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "8d8cc91b7aba4777ee9418a3cef6e1e163bfbf27", "commitAfterChange": "d0534e0376f1634b8fe35d19dde78d7433440f37", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tif ((closestMatchOriginal.isPrivate() || closestMatchOriginal.declaringClass.isLocalType()) && !scope.isDefinedInMethod(closestMatchOriginal)) {", "+\t\t\t\t\t\tif (closestMatchOriginal.isOrEnclosedByPrivateType() && !scope.isDefinedInMethod(closestMatchOriginal)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4774a34357a47c6fd9409182749397b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tpublic void test0503h() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503h() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c48e164d933918fdd459f7cae052e8c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic void test0132() throws JavaModelException", "signatureAfterChange": " \tpublic void test0132() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c48ff689683e897f07c23562fce95a8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "c5887d07050c9433ef244b9fc8d660e0afd1c02c", "commitAfterChange": "57b394813576bd0089aca541b5b581458c1b6d75", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void storeProblemsFor(SourceFile sourceFile, CategorizedProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(SourceFile sourceFile, CategorizedProblem[] problems) throws CoreException", "diff": ["-\t\t\tint end = problem.getSourceEnd();", "-\t\t\tallValues[index++] = new Integer(end > 0 ? end + 1 : end); // end", "+\t\t\tallValues[index++] = new Integer(problem.getSourceEnd() + 1); // end"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4937b67b1f6ed275414444e90476f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "251f99acbb8995bd23d5e9a86fb5718901825772", "commitAfterChange": "b82e4a0e1d547d361495e1d72928b04c339786b5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testCycle4() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle4() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\tfullBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p2.Y\", \"p3.Z\", \"p2.Y\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "-\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"X cannot be resolved (or is not a valid return type) for the method zork\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"X cannot be resolved or is not a type\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\texpectingOnlySpecificProblemsFor(p3,new Problem[]{", "-\t\t\tnew Problem(\"p3\", \"X cannot be resolved (or is not a valid return type) for the method foo\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-", "-\t\tenv.addClass(root1, \"p1\", \"X\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p1;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"import p2.Y;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class X {\\n\"+ //$NON-NLS-1$", "-\t\t\t\"  public void bar(Y y){\\n\"+ //$NON-NLS-1$", "-\t\t\t\"    y.zork();\\n\"+ //$NON-NLS-1$", "-\t\t\t\"  }\\n\"+ //$NON-NLS-1$", "-\t\t\t\"}\\n\" //$NON-NLS-1$", "-\t\t\t);", "-\t\tincrementalBuild();", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ ", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "-", "-\t\tJavaCore.setOptions(options);", "+\t\ttry {", "+\t\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "+\t\t\tfullBuild();", "+\t\t\t", "+\t\t\texpectingCompilingOrder(new String[]{\"p2.Y\", \"p3.Z\", \"p2.Y\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "+\t\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved (or is not a valid return type) for the method zork\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved or is not a type\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\texpectingOnlySpecificProblemsFor(p3,new Problem[]{", "+\t\t\t\tnew Problem(\"p3\", \"X cannot be resolved (or is not a valid return type) for the method foo\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t", "+\t\t\tenv.addClass(root1, \"p1\", \"X\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\"package p1;\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"import p2.Y;\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"public class X {\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"  public void bar(Y y){\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"    y.zork();\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"  }\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"}\\n\" //$NON-NLS-1$", "+\t\t\t\t);", "+\t\t\tincrementalBuild();", "+\t\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ ", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t", "+\t\t\tJavaCore.setOptions(options);", "+\t\t} finally {", "+\t\t\tenv.setBuildOrder(null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4b6159f55f4933975e93a325f8ee559", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClassFileTests.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testTypeParameter() throws CoreException", "signatureAfterChange": " public void testTypeParameter() throws CoreException", "diff": ["-\tIClassFile classFile = this.jarRoot.getPackageFragment(\"generic\").getClassFile(\"X.class\");", "-\tITypeParameter typeParameter = classFile.getType().getTypeParameter(\"T\");", "-\tclassFile.close();", "+\tIClassFile clazz = this.jarRoot.getPackageFragment(\"generic\").getClassFile(\"X.class\");", "+\tITypeParameter typeParameter = clazz.getType().getTypeParameter(\"T\");", "+\tclazz.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4bfb63f141091ff65c67f63ad982683", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void remove(String documentName) throws IOException", "signatureAfterChange": " \tpublic void remove(String documentName)", "diff": ["-\tpublic void remove(String documentName) throws IOException {", "+\tpublic void remove(String documentName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e05a7b3af96b3a98919b4358bfdcff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitVisitor.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic static void visit( \t\tICompilationUnit unitElement, \t\tASTVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static void visit( \t\tICompilationUnit unitElement, \t\tASTVisitor visitor) \t\tthrows JavaModelException", "diff": ["-\t\tIJavaProject project = unitElement.getJavaProject();", "+\t\tJavaProject project = (JavaProject) unitElement.getJavaProject();", "-\t\t\t\tgetNameEnvironment(unitElement),", "+\t\t\t\tproject.newSearchableNameEnvironment(unitElement.getOwner()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f3f3391bbbdcbe38577f409d641ca9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " \tpublic void test0260() throws JavaModelException", "signatureAfterChange": " \tpublic void test0260() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50d456f8917a43c014df649814b6622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody()", "diff": ["-\tthis.invocationPtr--; // NB: This can be decremented below -1 only if in diet mode and not in field initializer", "-\tthis.pushNotInInitializer();", "-\tthis.pushNotInMethod();", "+\tpopElement(K_SELECTOR);", "+\tpushOnElementStack(K_TYPE_DELIMITER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5415cac4802ac32f7c1029ff8dadba2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  protected boolean checkNullableFieldDereference(Scope scope, FieldBinding field, long sourcePosition)", "signatureAfterChange": "  protected boolean checkNullableFieldDereference(Scope scope, FieldBinding field, long sourcePosition)", "diff": ["-\tif (field.type != null && (field.type.tagBits & TagBits.AnnotationNullable) != 0) {", "+\tif ((field.type.tagBits & TagBits.AnnotationNullable) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57b88d35b57156aaf48b3064a9ee0c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void acceptLocalType(TypeBinding typeBinding)", "signatureAfterChange": " public void acceptLocalType(TypeBinding typeBinding)", "diff": ["-\t\tif(typeBinding.isParameterizedType()) {", "-\t\t\tres = new ParameterizedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.computeUniqueKey()));", "-\t\t}", "+\t\tres = new ResolvedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.computeUniqueKey()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59b05f8547237cfce5bc94a11f61c4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t\t \t\tprivate int getNewLines(int nodeIndex)", "signatureAfterChange": " \t\t \t\tprivate int getNewLines(int nodeIndex)", "diff": ["-\t\t\tfor (int i= 0; i < fList.length; i++) {", "-\t\t\t\tASTNode elem= (ASTNode) fList[i].getOriginalValue();", "+\t\t\tfor (int i= 0; i < this.list.length; i++) {", "+\t\t\t\tASTNode elem= (ASTNode) this.list[i].getOriginalValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b648cdae3788b8375f0f5e5e2cd371", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 256, "signatureBeforeChange": " final public void putstatic(FieldBinding fieldBinding)", "signatureAfterChange": " final public void putstatic(FieldBinding fieldBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tputstatic:\"+fieldBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d5830d4e41c23c17f48b779f1c6eae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void test059()", "signatureAfterChange": " \tpublic void test059()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f2a80093af423108986c40d12350a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public final int getAccessFlags()", "signatureAfterChange": "  public final int getAccessFlags()", "diff": ["-\treturn modifiers & AccJustFlag;", "+\treturn modifiers & ExtraCompilerModifiers.AccJustFlag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f3be4ddc1be1de44e118c3273aac82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void test099()", "signatureAfterChange": " \tpublic void test099()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5fc216e1204e166f16e23fbd7f2b604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "ddd808d168fb534eabceec59ee71a1ab6bb9aa2f", "commitAfterChange": "152c9f5bc26833df7f866102ab1cb2e2da100205", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags)", "signatureAfterChange": " \tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes)", "diff": ["+\t */", "+\tpublic IType findType(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes) {", "+\t\tIType type = findType(name, pkg, partialMatch, acceptFlags);", "+\t\tif (type == null && considerSecondaryTypes) {", "+\t\t\ttype = findSecondaryType(pkg.getElementName(), name, pkg.getJavaProject(), false, null);", "+\t\t}", "+\t\treturn type;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61743e838822b1d8c93d16043e6c445", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " \tpublic void test0560() throws JavaModelException", "signatureAfterChange": " \tpublic void test0560() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6388fc1bcac60535f3fd9c4c4cc32fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic AST getAST()", "signatureAfterChange": "  \tpublic AST getAST()", "diff": ["-\t\treturn owner;", "+\t\treturn this.owner;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c648f70238f53580dfb6f25b7ee64c35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ThisExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\treturn optionalQualifier;", "+\t\treturn this.optionalQualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64a428451f5dfa5d0b276442c5f1c8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 357, "methodNumberAfterChange": 357, "signatureBeforeChange": " \tpublic void test0355() throws JavaModelException", "signatureAfterChange": " \tpublic void test0355() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64a5464f89162955ffa07fdbecb9e0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void test0060() throws JavaModelException", "signatureAfterChange": " \tpublic void test0060() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6517ed0ba4c3721cdb9092ecf7ac044", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberRef.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6975becd9d93d4e8ac0fcc07ab4514e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NonFatalErrorTest.java", "commitBeforeChange": "f874c6b5077c159b72bb8e4b8aad8ed303fb1894", "commitAfterChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void test003()", "signatureAfterChange": " \t \tpublic void test003()", "diff": ["+\t\t\tnull /* expectedErrorString */,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b9ba5516e2f0a2f90c4d7329c75b40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 516, "methodNumberAfterChange": 516, "signatureBeforeChange": "  \tpublic void test497()", "signatureAfterChange": "  \tpublic void test497()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6ba6fac7488cdded1836112edb102c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d4b8f1437bd894de59822a00977399b8af50c7a1", "commitAfterChange": "00e190bf5f96c54b05d4853702eef90ea6dc4747", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void consumeArrayCreationExpression()", "signatureAfterChange": "  protected void consumeArrayCreationExpressionWithInitializer()", "diff": ["-protected void consumeArrayCreationExpression() {", "-\t// ArrayCreationExpression ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializeropt", "-\t// ArrayCreationExpression ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializeropt", "-\tif (expressionLengthStack[expressionLengthPtr] != 0) {", "-\t\texpressionLengthPtr -- ;", "-\t\taae.initializer = (ArrayInitializer) expressionStack[expressionPtr--];", "-\t\texpressionLengthPtr--;", "+", "+protected void consumeArrayCreationExpressionWithInitializer() {", "+\t// ArrayCreationWithArrayInitializer ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializer", "+\t// ArrayCreationWithArrayInitializer ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializer", "+", "+\tint length;", "+\tArrayAllocationExpression aae = new ArrayAllocationExpression();", "+\texpressionLengthPtr -- ;", "+\taae.initializer = (ArrayInitializer) expressionStack[expressionPtr--];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bed219e1e85fb443eff574b70c3d2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f85cbff0a8c84975a3b665c611b840", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void test0075() throws JavaModelException", "signatureAfterChange": " \tpublic void test0075() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71183dcaaa062e4fead156a311374ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "e1bbbbf1f45db75737d023fc31cf4b7aa3bfdbe2", "commitAfterChange": "827898bad98d434efacabec83ce1fea9231b54d7", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " \tpublic boolean visit(Wildcard wildcard, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(Wildcard wildcard, ClassScope scope)", "diff": ["-\t\t\t\tif (this.preferences.insert_space_after_question_in_wilcard) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tif (this.preferences.insert_space_after_question_in_wilcard) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c718549d004ce38933305a20fdb640b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "92e572400d76e87cd8a411b61ccd6995a99fb8ae", "commitAfterChange": "461abfc9125d1c5c723168274721daaac193d010", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic static JavaElement getUnresolvedJavaElement(MethodBinding methodBinding, WorkingCopyOwner workingCopyOwner, BindingsToNodesMap bindingsToNodes)", "signatureAfterChange": " \tpublic static JavaElement getUnresolvedJavaElement(MethodBinding methodBinding, WorkingCopyOwner workingCopyOwner, BindingsToNodesMap bindingsToNodes)", "diff": ["-\t\t\tboolean isInnerBinaryTypeConstructor = isBinary && original.isConstructor() && enclosingType != null;", "+\t\t\t// Static inner types' constructors don't get receivers (https://bugs.eclipse.org/bugs/show_bug.cgi?id=388137)", "+\t\t\tboolean isInnerBinaryTypeConstructor = isBinary && original.isConstructor() && !original.declaringClass.isStatic() && enclosingType != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71c5fb0eb656a7613d6e10290bfed70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "314be86a62cb23e4add94210ca0a317454243e7c", "commitAfterChange": "4f3f39945f1ee27fc0ddd600cc6447ef1dfcd7a8", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " int getNonNullByDefaultValue(IBinaryAnnotation annotation)", "signatureAfterChange": " int getNonNullByDefaultValue(IBinaryAnnotation annotation)", "diff": ["-\tchar[][] typeName = CharOperation.splitOn('/', annotationTypeName, 1, annotationTypeName.length-1); // cut of leading 'L' and trailing ';'", "+\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c73c32f77bd6a135588a1ac25a5e3b83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "f4cb865e1f04bf961ca3a68cb4f4bc900980b5bb", "commitAfterChange": "5ed0fe55ab93b48b8fc37110d3bc6b639f852eee", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " MethodVerifier(LookupEnvironment environment)", "signatureAfterChange": " MethodVerifier(LookupEnvironment environment)", "diff": ["-\tthis.runtimeException = null;", "-\tthis.errorException = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7682474e4fa08e3cd9b5582f58da352", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tpublic void test0144() throws JavaModelException", "signatureAfterChange": " \tpublic void test0144() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7771b640d60b7ef8a2cce04f70f00fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedType.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getQualifier()", "signatureAfterChange": "  \tpublic Type getQualifier()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ad5ae8a55a3b67466e174e1ba1cc6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "5f2d3bb5e60ed5385a17683111c5f94f6d59a54d", "commitAfterChange": "c6d8653f7b02b7c96240bcfc39273c0c2437a2e9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["-\t\tboolean optimizedBranch = false;", "+\t\tboolean isOptimizedBranch = false;", "-\t\t\tif (optimizedBranch = (forwardReferences[forwardReferenceCount - 1] + 2 == position) && (codeStream.bCodeStream[codeStream.classFileOffset - 3] == CodeStream.OPC_goto)) {", "+\t\t\tisOptimizedBranch = (forwardReferences[forwardReferenceCount - 1] + 2 == position) && (codeStream.bCodeStream[codeStream.classFileOffset - 3] == CodeStream.OPC_goto);", "+\t\t\tif (isOptimizedBranch) {", "-\t\tif (optimizedBranch) {", "+\t\tif (isOptimizedBranch) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c6c927b86fd59ee1bdd5571d4e3dcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CastExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f47a74fcd837de2797b6c47aed6e1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " \tpublic void test0610() throws CoreException", "signatureAfterChange": " \tpublic void test0610() throws CoreException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c822e63f93e38a18be3647c19402a7b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "3a6992f0f835b649e3e581c505ac07c2b8552257", "commitAfterChange": "0b856577479acf0f63c7396b5cc3686a45d7196c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected int matchLevelAsSubtype(char[] simpleNamePattern, char[] qualificationPattern, ReferenceBinding type)", "signatureAfterChange": " protected int matchLevelAsSubtype(char[] simpleNamePattern, char[] qualificationPattern, ReferenceBinding type)", "diff": ["-\tint level = this.matchLevelForType(simpleNamePattern, qualificationPattern, type);", "+\tint level = matchLevelForType(simpleNamePattern, qualificationPattern, type);", "-\t\tlevel = this.matchLevelAsSubtype(simpleNamePattern, qualificationPattern, type.superclass());", "+\t\tlevel = matchLevelAsSubtype(simpleNamePattern, qualificationPattern, type.superclass());", "-\t\tlevel = this.matchLevelAsSubtype(simpleNamePattern, qualificationPattern, interfaces[i]);", "+\t\tlevel = matchLevelAsSubtype(simpleNamePattern, qualificationPattern, interfaces[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c85c2ee8e56af478b442a2909b42baa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif (!this.binding.isUsed() &&", "-\t\t\t\t\t(this.binding.isPrivate()", "-\t\t\t\t\t\t|| (((this.binding.modifiers & (ExtraCompilerModifiers.AccOverriding|ExtraCompilerModifiers.AccImplementing)) == 0) && this.binding.declaringClass.isLocalType()))) {", "-\t\t\t\tif (!classScope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "-\t\t\t\t\tthis.scope.problemReporter().unusedPrivateMethod(this);", "+\t\t\tif (!this.binding.isUsed()) {", "+\t\t\t\tif (this.binding.isPrivate()", "+\t\t\t\t\t|| (((this.binding.modifiers & (ExtraCompilerModifiers.AccOverriding|ExtraCompilerModifiers.AccImplementing)) == 0)", "+\t\t\t\t\t\t&& this.binding.isOrEnclosedByPrivateType())) {", "+\t\t\t\t\tif (!classScope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\t\t\t\t\tthis.scope.problemReporter().unusedPrivateMethod(this);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c869885376c66eea5061efd94c7d81be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " \tpublic void test0231() throws JavaModelException", "signatureAfterChange": " \tpublic void test0231() throws JavaModelException", "diff": ["-\t\tASTParser parser= ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser= ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87ed140899c8102b088ab258107ebbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic void test0081() throws JavaModelException", "signatureAfterChange": " \tpublic void test0081() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c890357c260882a089063a16dab6503f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/Options.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static int processOptionsFileManager(String option)", "signatureAfterChange": " \tpublic static int processOptionsFileManager(String option)", "diff": ["-\t\tif (FILE_MANAGER_OPTIONS.contains(option)) {", "+\t\tif (Options.FILE_MANAGER_OPTIONS.contains(option)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b86395ebaf5dbd63747c6082809832", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "9ea0d26717077cc31f78561d1f110949d5e1c944", "commitAfterChange": "31225f931c10340b8616c3f4ecc6725f368df84c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void test_nonnull_parameter_012()", "signatureAfterChange": " public void test_nonnull_parameter_012()", "diff": ["-\t\tmismatch_NonNull_Null(\"Object\", \"T\") +", "+\t\t\"Null type mismatch: required \\'@NonNull Object' but the provided value is null\\n\"  +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8c8f22ff51a4e5d6e098cfab5f3222e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "09d58a6e319cfeec520d29fd7c2c24967ab4e499", "commitAfterChange": "3f9786eb97e62b9a5f765764dcc08a631a4e6afe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int tab, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int tab, StringBuffer output)", "diff": ["-\t\t\tthis.method.print(0, output);", "+\t\t\toutput.append(this.selector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d33b18f2842f13568c333cc59f2de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "030294305389e5486e7f63658830617d44acd9c2", "commitAfterChange": "3f4495ecc3a42cb049fa3e01aeaf49a7722af380", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t \tfinal TokenScanner getScanner()", "signatureAfterChange": " \t\t \tfinal TokenScanner getScanner()", "diff": ["-\t\t\tscanner.setSource(getDocument().get().toCharArray());", "-\t\t\tthis.tokenScanner= new TokenScanner(scanner, getDocument());", "+\t\t\tscanner.setSource(this.content);", "+\t\t\tthis.tokenScanner= new TokenScanner(scanner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8dd517cffce821fb976092b8a707053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "be28c707007790646fb850eb239db7444413aebf", "commitAfterChange": "e6d6339b3a5be71e0efdab3acd9718592e63361e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic IPackageFragmentRoot[] computePackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": " \tpublic IPackageFragmentRoot[] computePackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\t\treturn computePackageFragmentRoots(new IClasspathEntry[] {entry}, false);", "+\t\t\treturn computePackageFragmentRoots(getResolvedClasspath(new IClasspathEntry[] {entry}, true, false), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e53ac71c06653a961ab4e9cb6be1c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 94, "signatureBeforeChange": "  \tpublic void test059()", "signatureAfterChange": "  \tpublic void test059()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f4b53ee0d17472785902d4a596e7a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptPlugin.java", "commitBeforeChange": "458dca4c2b9da6278d150eba84339274fccc6057", "commitAfterChange": "01d995488d5e309c6b243da146c63894a6df881d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void start(BundleContext context) throws Exception", "signatureAfterChange": " \t \tpublic void start(BundleContext context) throws Exception", "diff": ["-\t\tint mask = IResourceChangeEvent.PRE_BUILD | IResourceChangeEvent.PRE_CLOSE | IResourceChangeEvent.PRE_DELETE;", "+\t\tint mask = ", "+\t\t\tIResourceChangeEvent.PRE_BUILD | ", "+\t\t\tIResourceChangeEvent.PRE_CLOSE | ", "+\t\t\tIResourceChangeEvent.PRE_DELETE | ", "+\t\t\tIResourceChangeEvent.POST_CHANGE;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c912bf59a8da5c28b1718ef0eb7f6d46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 540, "methodNumberAfterChange": 543, "signatureBeforeChange": " \tpublic void test506()", "signatureAfterChange": " \tpublic void test506()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c914e1c1aba61e4b263cf9a4da72ea43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler4() throws IOException", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler4() throws IOException", "diff": ["-\t\tCompilationTask task = Compiler.getTask(null, null, null, options, null, units);", "+\t\tCompilationTask task = compiler.getTask(null, null, null, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91852fded1f214b78bb0c8a624573e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic void test0502j() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502j() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9424475b331b1100ee5624e1d9933da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "02e41bd22396d523c7a0e7b774bb557781eb6970", "commitAfterChange": "4e3cdd53887918496e5ba73e90ca2f99858ae83c", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": "\r protected void consumeUnaryExpression(int op, boolean post)", "signatureAfterChange": "\r protected void consumeUnaryExpression(int op, boolean post)", "diff": ["-\t\t\t\t\tscanner.startPosition - 1); \r", "+\t\t\t\t\tendPosition); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c952dc55ec68602b221fc74822ad264e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayCreation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic List dimensions()", "signatureAfterChange": "  \tpublic List dimensions()", "diff": ["-\t\treturn dimensions;", "+\t\treturn this.dimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c960a709f24b9acfe2905ca8fc11d221", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void test0049() throws JavaModelException", "signatureAfterChange": " \tpublic void test0049() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97ba42f485063a38e46be49e9af84b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void test0011() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0011() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9981de7c757ef31078152bdf40319e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public final int getAccessFlags()", "signatureAfterChange": "  public final int getAccessFlags()", "diff": ["-\treturn modifiers & AccJustFlag;", "+\treturn modifiers & ExtraCompilerModifiers.AccJustFlag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9dcda5ab98fd3a71d1ed4417c72dbe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 214, "signatureBeforeChange": " final public void ldc(String constant)", "signatureAfterChange": " final public void ldc(String constant)", "diff": ["-\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$", "+\t\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc_w:\"+constant); //$NON-NLS-1$", "+\t\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$", "-\t\tnewStringBuffer();", "+\t\tnewStringContatenation();", "-\t\tinvokeStringBufferStringConstructor();", "+\t\tinvokeStringConcatenationStringConstructor();", "-\t\t\tinvokeStringBufferAppendForType(T_String);", "+\t\t\tinvokeStringConcatenationAppendForType(T_String);", "-\t\tinvokeStringBufferToString();", "+\t\tinvokeStringConcatenationToString();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f07340c592c27470fb9d5e7fd7a97c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void test0128() throws JavaModelException", "signatureAfterChange": " \tpublic void test0128() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0035007317333d832b9a52dfcc12c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test0073() throws JavaModelException", "signatureAfterChange": " \tpublic void test0073() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca004db51d61518845e9fbe99b74ae7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/TypeNameMatchRequestorWrapper.java", "commitBeforeChange": "a41e619c58860e4fb0ad103984917e455aa47d4f", "commitAfterChange": "6166acc1a72eef4415ab90fa4d71205848f659db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path, AccessRestriction access)", "signatureAfterChange": " public void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path, AccessRestriction access)", "diff": ["-\t\t\tthis.requestor.acceptTypeNameMatch(new JavaSearchTypeNameMatch(type, modifiers));", "+\t\t\t// hierarchy scopes require one more check:", "+\t\t\tif (!(this.scope instanceof HierarchyScope) || ((HierarchyScope)this.scope).enclosesFineGrained(type)) {", "+\t\t\t\tthis.requestor.acceptTypeNameMatch(new JavaSearchTypeNameMatch(type, modifiers));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0094de8b4950340b4ba60803bb152f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testPerfProjectFindKnownMemberType() throws CoreException", "signatureAfterChange": " public void testPerfProjectFindKnownMemberType() throws CoreException", "diff": ["-\twaitUntilIndexesReady();", "+\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0763534b0a95004d4dbbdec6830f9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b49d561020d10002b6ddc1f793743b3d47408d93", "commitAfterChange": "61d2e9bd09460e9985288e8ef72cfc838f3c761c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void enterAlignment(Alignment alignment)", "signatureAfterChange": " \t \tpublic void enterAlignment(Alignment alignment)", "diff": ["+\t\talignment.location.lastLocalDeclarationSourceStart = this.formatter.lastLocalDeclarationSourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca19a6732bc7821096f12186430c9ea0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, this.binding, nullStatus, this.initialization);", "+\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, this.binding, nullStatus, this.initialization, this.initialization.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4a9d7d2fad8010ce6c60329411f419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void consumeNonParameterizedType()", "signatureAfterChange": " \t \tpublic void consumeRawType()", "diff": ["-\tpublic void consumeNonParameterizedType() {", "-\t\tif (this.typeBinding == null) return;", "-\t\tif (this.typeBinding.typeVariables().length > 0) {", "-\t\t\t// raw type", "-\t\t\tthis.typeBinding = this.environment.createRawType((ReferenceBinding) this.typeBinding, null/*no enclosing type*/);", "-\t\t}", "-\t}", "+\tpublic void consumeRawType() {", "+\t\tif (this.typeBinding == null) return;", "+\t\tthis.typeBinding = this.environment.createRawType((ReferenceBinding) this.typeBinding, null/*no enclosing type*/);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca8d57db47622fd9d58c14b40f1eb410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "f9ea1202585c52eab9fbf39ace7b180e05641d22", "commitAfterChange": "b937013867304581ed64efe453c75af32eec6086", "methodNumberBeforeChange": 582, "methodNumberAfterChange": 582, "signatureBeforeChange": " public void testBug216875h() throws CoreException", "signatureAfterChange": " public void testBug216875h() throws CoreException", "diff": ["-\tthis.resultCollector.showSelection = true;", "-\tthis.resultCollector.showAccess = true;", "-\tthis.resultCollector.showAccuracy = false;", "+\tthis.resultCollector.showSelection();", "+\tthis.resultCollector.showAccess();", "+\tthis.resultCollector.showAccuracy(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca920a472af283e79cff528aab79679b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic Expression getInitializer()", "signatureAfterChange": "  \tpublic Expression getInitializer()", "diff": ["-\t\treturn optionalInitializer;", "+\t\treturn this.optionalInitializer;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca969b6446e23cd2fdebc76829971f8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " \tpublic void test0135() throws JavaModelException", "signatureAfterChange": " \tpublic void test0135() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca980af5cc2a10da63ed44a27a7e87a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 51, "signatureBeforeChange": "  public void test059() throws JavaModelException", "signatureAfterChange": "  public void test059() throws JavaModelException", "diff": ["-\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca98523956186df2a0fbc6a9226a588f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic List catchClauses()", "signatureAfterChange": "  \tpublic List catchClauses()", "diff": ["-\t\treturn catchClauses;", "+\t\treturn this.catchClauses;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac004f5de605de7a9b645b51a0f83d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bc331c3c1c9987384cec8a101a070b308c8c75c4", "commitAfterChange": "5c9c9d13f21ca2b350289c522fa9a28827d49ab1", "methodNumberBeforeChange": 556, "methodNumberAfterChange": 556, "signatureBeforeChange": " \tpublic void test527b()", "signatureAfterChange": " \tpublic void test527b()", "diff": ["+\t\tpreferences.alignment_for_arguments_in_annotation = Alignment.M_COMPACT_SPLIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac9a55c98474e2a6acffadfca1cbfe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test0431() throws JavaModelException", "signatureAfterChange": " \tpublic void test0431() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cad909774a1f59f4330b92d0765023db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CatchClause.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cadfefeb274555f8a1da97c17b3bdc02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "915adeadf0a77f488d15bb1d0bf2559201b1f96d", "commitAfterChange": "e8c4bcb175c9fa83d7e57124058ee64597b70965", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void testRemoveAddBinaryProject() throws CoreException", "signatureAfterChange": " public void testRemoveAddBinaryProject() throws CoreException", "diff": ["-\t\t\t\"\t/P/lib.jar[*]: {REMOVED FROM CLASSPATH}\\n\" + ", "+\t\t\t\"\t/P/lib.jar[-]: {}\\n\" + ", "-\t\t\t\"\tResourceDelta(/P/.project)[*]\\n\" + ", "-\t\t\t\"\tResourceDelta(/P/lib.jar)[-]\"", "+\t\t\t\"\tResourceDelta(/P/.project)[*]\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caee2a91dd7a369685734a83a71df0a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "96878bc07e7a9647f60558b58f70b91ca3d6868a", "commitAfterChange": "34ca02c6d1887aae160c10b2b918eb81e9cd0b34", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "signatureAfterChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "diff": ["+\t\t\t\tthis.checkNullStatus(currentScope, flowContext, flowInfo, FlowInfo.NON_NULL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafa9ca4f745c4f475fd03513bdea565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic void test0481() throws JavaModelException", "signatureAfterChange": " \tpublic void test0481() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafef504d5b16a0ea18f861993cd081e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "9247f5a1413614555183073da9b25dcae829dcbb", "commitAfterChange": "ec2243f132866e54d9401c9f64dee23249b2b464", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  ClasspathDirectory(File directory, String encoding, int mode, AccessRuleSet accessRuleSet)", "signatureAfterChange": "  ClasspathDirectory(File directory, String encoding, int mode, AccessRuleSet accessRuleSet)", "diff": ["-\tif (mode == 0){", "-\t\tthis.mode = SOURCE | BINARY;", "-\t}", "-\telse {", "-\t    this.mode = mode;", "-\t}", "+\tthis.mode = mode;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb28c28aedc72198d684e6fbfdd64491", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "130bf52e6e6a6b2abae63509dc107f8c8574de74", "commitAfterChange": "da8395b2f47f9ea261a2eac4c2a9b0e0621ba41a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate IPath getLocation()", "signatureAfterChange": " \tprivate IPath getLocation()", "diff": ["-\t\treturn new Path(this.documentPath); // external file", "+\t\treturn new Path(getPath()); // external file"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb54e979056d33b3215110b1c7c92109", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "8abd75076e932cee4c42294e09e5c3451d79df9f", "commitAfterChange": "e864d30567ba5eac714ba35046546cbeb9eaf23a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void indexDocument(SearchDocument searchDocument, SearchParticipant searchParticipant, Index index, IPath indexLocation) throws IOException", "signatureAfterChange": " public void indexDocument(SearchDocument searchDocument, SearchParticipant searchParticipant, Index index, IPath indexLocation)", "diff": ["-public void indexDocument(SearchDocument searchDocument, SearchParticipant searchParticipant, Index index, IPath indexLocation) throws IOException {", "+public void indexDocument(SearchDocument searchDocument, SearchParticipant searchParticipant, Index index, IPath indexLocation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb5ac5c09aeb509654733d97ff786d53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void printError(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printError(ASTNode node, String msg)", "diff": ["-\t\taddMarker(_env.getFile(), start, node.getLength() + start, IMarker.SEVERITY_ERROR, msg, line );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Error, msg, line );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb5e3367b8f5d039dcf16620815620c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "8abd75076e932cee4c42294e09e5c3451d79df9f", "commitAfterChange": "e864d30567ba5eac714ba35046546cbeb9eaf23a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void stopQuery() throws IOException", "signatureAfterChange": " public void stopQuery()", "diff": ["-public void stopQuery() throws IOException {", "+public void stopQuery() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb795016c68d676c9a41489c041fe006", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "e94247ea6ac5ec863496bda9d3658e2dc349e6ab", "commitAfterChange": "9448736fbeb476ae8eacb15d6ea8788cf2db77a1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void updateDocComment()", "signatureAfterChange": " protected void updateDocComment()", "diff": ["-\t\tif (formatJavadoc.lineStart == firstBlock.lineStart) {", "-\t\t\tfirstBlock.flags |= FormatJavadocBlock.ON_HEADER_LINE;", "-\t\t}", "+\t\tfirstBlock.setHeaderLine(formatJavadoc.lineStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7d4a4160a44a7fcc34265ee3010ec9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "023cc39732253ba12561183cd2939bd86444b19a", "commitAfterChange": "5e5523e13b821734aff66b4f4011996446b2a5b6", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  \tprivate void printLineComment()", "signatureAfterChange": "  \tprivate void printLineComment()", "diff": ["-\t\t\t\t\t(!this.formatter.preferences.comment_format_line_comment_starting_on_first_column ||", "+\t\t\t\t\t((includesLineComments && !this.formatter.preferences.comment_format_line_comment_starting_on_first_column) ||"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7fef756e661ff08a5384df9810ff01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \tpublic void test0143() throws JavaModelException", "signatureAfterChange": " \tpublic void test0143() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba8088a24205b02cceb2eb9968063bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "10602e047e367cd079244f747e70d9745d54ecf5", "commitAfterChange": "a7966be35d90fbccc28cc69c2a68d5da1f8603bb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void fullBuild()", "signatureAfterChange": " \tpublic void fullBuild()", "diff": ["-\t\twaitForAutoBuild();", "-\t\tfWasBuilt = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbf8aec5cf5137c394bfcfc6eeb9decc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 273, "methodNumberAfterChange": 269, "signatureBeforeChange": " public void needToEmulateFieldAccess(FieldBinding field, ASTNode location, boolean isReadAccess)", "signatureAfterChange": " public void needToEmulateFieldAccess(FieldBinding field, ASTNode location, boolean isReadAccess)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbfeefa4f3f5e05092a41a7b92afbdba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " \tpublic void test0369() throws JavaModelException", "signatureAfterChange": " \tpublic void test0369() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc1220ae87b13da54410dd48210d600f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "1a566fcd89ced93f8e379cfc5e2e1a135054940b", "commitAfterChange": "c78ae90435e271183889e2076b6ed785c3685f3c", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  private boolean isProvableDistinctSubType(TypeBinding otherType, boolean isClassLiteral)", "signatureAfterChange": "  private boolean isProvableDistinctSubType(TypeBinding otherType, boolean isClassLiteral)", "diff": ["-\t\t\t\t|| isClassLiteral // https://bugs.eclipse.org/bugs/show_bug.cgi?id=322531", "+\t\t\t//\t|| isClassLiteral // https://bugs.eclipse.org/bugs/show_bug.cgi?id=322531", "-\t\t\t\t\t|| isClassLiteral // https://bugs.eclipse.org/bugs/show_bug.cgi?id=322531", "+\t\t\t\t//\t|| isClassLiteral // https://bugs.eclipse.org/bugs/show_bug.cgi?id=322531"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc173fdd3f8d60c30dd8174854e54223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 392, "signatureBeforeChange": " \tpublic void test0390() throws JavaModelException", "signatureAfterChange": " \tpublic void test0390() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2591afabc639040a93f0a617fe6823", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "1c31a7fff0cc8835ae64e9ca2b725dd17671f56d", "commitAfterChange": "e904c305ca90791affdf53d9a39d1eff99285d6c", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputsInfo outputsInfo)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputsInfo outputsInfo)", "diff": ["-\t\t\treturn elementType != NON_JAVA_RESOURCE || oneChildOnClasspath;", "+\t\t\treturn elementType != NON_JAVA_RESOURCE; // TODO: (jerome) do we still need to return? (check could be done by caller)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4baf80dcf97a7bcff7ea6201eb481e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "58f6afc12cba62ef8d27c501894e3dd000ed5c7a", "commitAfterChange": "c077066d38e166a56e4eb4a0d6b6c8b7125fd6f2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\tcreateArgumentBindings(method);", "+\tif (this.scope.compilerOptions().isAnnotationBasedNullAnalysisEnabled)", "+\t\tcreateArgumentBindings(method); // need annotations resolved already at this point"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5f2355eb5b69e5cde349172617e0a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic void test0118() throws JavaModelException", "signatureAfterChange": " \tpublic void test0118() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc82dad7481bd32a4878e14dee5abf85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprivate void findImports(CompletionOnImportReference importReference, boolean findMembers)", "signatureAfterChange": "  \tprivate void findImports(CompletionOnImportReference importReference, boolean findMembers)", "diff": ["-\t\t\tthis.nameEnvironment.findTypes(importName, findMembers && PROPOSE_MEMBER_TYPES, this);", "+\t\t\tthis.nameEnvironment.findTypes(", "+\t\t\t\t\timportName,", "+\t\t\t\t\tfindMembers && PROPOSE_MEMBER_TYPES, ", "+\t\t\t\t\tthis.options.camelCaseMatch,", "+\t\t\t\t\tthis);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca1e8c47edb74015d7cf3a6df66bfcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 266, "methodNumberAfterChange": 266, "signatureBeforeChange": " \tpublic void test0264() throws JavaModelException", "signatureAfterChange": " \tpublic void test0264() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccc207556cf2e223de7eadfb82fb0baa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resetStateForCodeGeneration()", "signatureAfterChange": "  \tpublic void resetStateForCodeGeneration()", "diff": ["-", "-\t\tthis.breakLabel.resetStateForCodeGeneration();", "-\t\tthis.continueLabel.resetStateForCodeGeneration();", "+\t\tif (this.breakLabel != null) {", "+\t\t\tthis.breakLabel.resetStateForCodeGeneration();", "+\t\t}", "+\t\tif (this.continueLabel != null) {", "+\t\t\tthis.continueLabel.resetStateForCodeGeneration();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd054ad7eef6cb554475dc29cc0ac86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "ec654acb2b0d784f0b5dd9a8d411b88442e8fd96", "commitAfterChange": "523ea3b2c64428d6b9f9d9783cbb0776a4263765", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t@Override \tprotected void cacheOriginalValues()", "signatureAfterChange": " \t@Override \tprotected void cacheOriginalValues()", "diff": ["-\t\tfOriginallyProjectSpecific = AptConfig.hasProjectSpecificFactoryPath(fJProj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd30fea45927bbbe96b14d75e3ee6b9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "3206b2110cd001cb4cebcd80ce087ca7f8c0be4e", "commitAfterChange": "d164ba9e4539a85a4d779b821428852717828b26", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic int getFlags()", "signatureAfterChange": " \tpublic int getFlags()", "diff": ["-\t\treturn flags;", "+\t\treturn this.flags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4163968f1e199da2c29173ff0e3d61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 219, "signatureBeforeChange": " \tpublic void test0217() throws JavaModelException", "signatureAfterChange": " \tpublic void test0217() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd42703868721083458794171f13786b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "2a851009aaa407c5e4c32cb132dfb84271f2e7fd", "commitAfterChange": "2d801bf770aaf09259e660518c988fbfdf829ec5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate boolean inheritsAnno(ReferenceBinding element, ReferenceBinding anno)", "signatureAfterChange": " \tprivate boolean inheritsAnno(ReferenceBinding element, ReferenceBinding anno)", "diff": ["-\t\t\tAnnotationBinding[] annos = searchedElement.getAnnotations();", "+\t\t\tAnnotationBinding[] annos = Factory.getPackedAnnotationBindings(searchedElement.getAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd63a22cbe38445899eb09fa821e2238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb23e2c5e0edf7c48cebce1d9eed0ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "commitAfterChange": "aa6078ae8b56e2dd94bf0e99bd049422ccaa24f4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "signatureAfterChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "diff": ["-\t\t\t\t// TODO(Stephan): Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "-\t\t\t\t// this.parameters[i] = env.createAnnotatedType(parameter, TagBits.AnnotationNonNull);", "+\t\t\t\tthis.parameters[i] = env.createAnnotatedType(parameter, new AnnotationBinding[]{env.getNonNullAnnotation()});", "-\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "-\t\t// this.returnType = env.createAnnotatedType(this.returnType, TagBits.AnnotationNonNull);", "+\t\tthis.returnType = env.createAnnotatedType(this.returnType, new AnnotationBinding[]{env.getNonNullAnnotation()});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdbd393b5fcb4321ca5ef1a887049b31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testAccessRestriction6() throws Exception", "signatureAfterChange": " public void testAccessRestriction6() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc39b40933ef55e9c6911f6f1e0e775", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "3c07df5b27f3cc9bb0f32fc7f0a08746454bdc9d", "commitAfterChange": "6de7ced9858f2246a9379efd0dd8834bcae6044c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static final Constant computeConstantOperation(Constant cst, int id, int operator)", "signatureAfterChange": " \t \tpublic static final Constant computeConstantOperation(Constant cst, int id, int operator)", "diff": ["-\t\t\tcase PLUS\t:\treturn cst; ", "+\t\t\tcase PLUS\t:", "+\t\t\t\t\t\t\treturn computeConstantOperationPLUS(Zero,T_int,cst,id);", "-\t\t\t\t\t\t\treturn computeConstantOperationMINUS(Zero,T_int,operator,cst,id);", "+\t\t\t\t\t\t\treturn computeConstantOperationMINUS(Zero,T_int,cst,id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce00f175bd09b6841b758218d95cdffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f75c17944c4c71209b764f81c95e01660c006557", "commitAfterChange": "df0fa796190e96b7d9058439ec45269a2791bacf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tprivate void formatEmptyStatement()", "signatureAfterChange": " \t \tprivate void formatEmptyStatement()", "diff": ["-\t\tif (this.preferences.remove_unnecessary_semicolon) {", "-\t\t\tthis.scribe.consumeNextToken();", "-\t\t} else {", "-\t\t\tif (this.preferences.put_empty_statement_on_new_line) {", "-\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t}", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\tif (this.preferences.put_empty_statement_on_new_line) {", "+\t\t\tthis.scribe.printNewLine();", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce034711decc77135fc1dc1500140bd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic MethodBinding[] getMethods(char[] selector)", "signatureAfterChange": " \tpublic MethodBinding[] getMethods(char[] selector)", "diff": ["-\t\t\t\t\tReferenceBinding.sortMethods(temp, 0, total-1); // resort to ensure order is good", "+\t\t\t\t\tReferenceBinding.sortMethods(temp, 0, total); // resort to ensure order is good"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce43427313ccd78b7e74e595d7de9d7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void testMissingProject() throws JavaModelException", "signatureAfterChange": "  public void testMissingProject() throws JavaModelException", "diff": ["+\tenv.waitForAutoBuild();", "+\tenv.waitForAutoBuild();", "+\tenv.waitForManualRefresh();", "+\tenv.waitForAutoBuild();", "+\tenv.waitForAutoBuild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce54c4fabd1854b1992067232e3be915", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "054ef716f5c2a57e4e4c8e790ba134b6404d4f2a", "commitAfterChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] warningOptionNames()", "signatureAfterChange": " \tpublic static String[] warningOptionNames()", "diff": ["+\t\t\tOPTION_ReportUnclosedCloseable,", "+\t\t\tOPTION_ReportPotentiallyUnclosedCloseable,", "+\t\t\tOPTION_ReportExplicitlyClosedAutoCloseable,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce65cfa55c33b2c7d5da2f5d66203c5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 368, "signatureBeforeChange": " \tpublic void test349()", "signatureAfterChange": " \tpublic void test349()", "diff": ["-\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;", "+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;", "+        preferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce7809e8ecbbe67291bbb618ba3d3005", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BasicCompilationUnit.java", "commitBeforeChange": "0c30c509f770e7e3596eca8733ca9dd62ac37742", "commitAfterChange": "e42deb57e6190d97c310bfecdaaf1fc0d7432060", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public char[] getMainTypeName()", "signatureAfterChange": "\r public char[] getMainTypeName()", "diff": ["-\treturn mainTypeName;\r", "+\treturn this.mainTypeName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce8d15d07515faca5f70b69ba7968033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic IndexedFile getIndexedFile(IDocument document) throws IOException", "signatureAfterChange": " \tpublic IndexedFile getIndexedFile(IDocument document)", "diff": ["-\tpublic IndexedFile getIndexedFile(IDocument document) throws IOException {", "+\tpublic IndexedFile getIndexedFile(IDocument document) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea6980ddc489a875b3b03ed6b5d45b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": " public void invokeJavaUtilIteratorNext()", "signatureAfterChange": " public void invokeJavaUtilIteratorNext()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaUtilIteratorConstantPoolName,", "-\t\t\tQualifiedNamesConstants.Next,", "-\t\t\tQualifiedNamesConstants.NextSignature);", "+\t\t\tConstantPool.JavaUtilIteratorConstantPoolName,", "+\t\t\tConstantPool.Next,", "+\t\t\tConstantPool.NextSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedff541393429eb717e04105d1e571d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "2e3baf50607a4426a80f8c93b7d0bda7665643c2", "commitAfterChange": "b8ee682cc8f6581e7f30b7c9d3f08d3b297bfd04", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " public void staticFieldAccessToNonStaticVariable(ASTNode location, FieldBinding field)", "signatureAfterChange": " public void staticFieldAccessToNonStaticVariable(ASTNode location, FieldBinding field)", "diff": ["-\t\tlocation.sourceEnd); ", "+\t\tfieldLocation(field, location)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cee55887f682c5e803d8c569ecbdafc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "150efead216fdc18243fc0e0bc307f18a75e431f", "commitAfterChange": "47b0d1e5c30414e249b8aff80d628ce66272443e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \tpublic SourceRange getSourceRange(IJavaElement element)", "signatureAfterChange": "\r \tpublic SourceRange getSourceRange(IJavaElement element)", "diff": ["-\t\t\tif(hasDollar && fSourceRanges.get(el) == null) {\r", "+\t\t\tif(fSourceRanges.get(el) == null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef277a07c4318a2b8228b62a7f348d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic void test0140() throws JavaModelException", "signatureAfterChange": " \tpublic void test0140() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0145dcdd5f3f32da13649afc815df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 734, "methodNumberAfterChange": 737, "signatureBeforeChange": " \tpublic void test701()", "signatureAfterChange": " \tpublic void test701()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf145f0f9c1fb58b9e440a1b4c161c19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic static void isTypeUseCompatible(TypeReference reference, Scope scope, Annotation[] annotations)", "signatureAfterChange": " \tpublic static void isTypeUseCompatible(TypeReference reference, Scope scope, Annotation[] annotations)", "diff": ["+\t\tif (scope.environment().globalOptions.sourceLevel < ClassFileConstants.JDK1_8)", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1f0e1d8e8a65f21cb7ae73f92fe0c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/CompilationProcessorEnv.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\t \t \tpublic void close()", "signatureAfterChange": "\t \t \tpublic void close()", "diff": ["+\t\t_typeCache.clear();", "+\t\t_packageRootsCache = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4888287eec24cf282c1c7aaf1f2d98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testAccessRestriction5() throws Exception", "signatureAfterChange": " public void testAccessRestriction5() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf62261fb74a41675ac48de97947a235", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 741, "methodNumberAfterChange": 744, "signatureBeforeChange": " \tpublic void test708()", "signatureAfterChange": " \tpublic void test708()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf6d4867fb12550eb4d96f365afb6ae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "06c86ebaf539434118008e0f3dcda7b72678c52a", "commitAfterChange": "4349b932d46f8b2c1b106bdcc040df2601c49076", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public int hashCode()", "signatureAfterChange": "  public int hashCode()", "diff": ["-\treturn this.resource.hashCode();", "+\treturn getResource().hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf6f63e997e8155ce98434f36f7e3a78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "e560c4f056e8f81d7e6811700478b4a331f39a81", "commitAfterChange": "82fb6745d0f2bc2c9b5e4740da70b2e364d6955a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic char[] genericTypeSignature()", "signatureAfterChange": " \tpublic char[] genericTypeSignature()", "diff": ["-\t\t\t     this.genericTypeSignature = this.type.signature(); // erasure", "+\t\t\t     this.genericTypeSignature = genericType().signature(); // erasure"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf71ca7e1a1b1bc59c1dc932a6b76263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static final boolean camelCaseMatch(String pattern, String name)", "signatureAfterChange": " public static final boolean camelCaseMatch(String pattern, String name)", "diff": ["-\treturn camelCaseMatch(pattern, 0, pattern.length(), name, 0, name.length(), true/*prefix match*/);", "+\treturn camelCaseMatch(pattern, 0, pattern.length(), name, 0, name.length(), false/*not the same count of parts*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf735198758e057554d8cb2a54503500", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "78767901d49aa2d91e25d7e6e9bbe4431dd2b2d2", "commitAfterChange": "1e987287dbfcdfe82625a14fee2d7b9a8fa8f056", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static String[] annotateParameterType(String originalSignature, String annotatedType, int paramIdx, MergeStrategy mergeStrategy)", "signatureAfterChange": " \tpublic static String[] annotateParameterType(String originalSignature, String annotatedType, int paramIdx, MergeStrategy mergeStrategy)", "diff": ["-\t\t\twrapper.start = wrapper.computeEnd() + 1;", "+\t\t\twrapper.start = wrapper.skipAngleContents(wrapper.computeEnd()) + 1;", "-\t\tint end = wrapper.computeEnd();", "-\t\tend = wrapper.skipAngleContents(end);", "+\t\tint end = wrapper.skipAngleContents(wrapper.computeEnd());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9627a38957018f4c53c71cfab630d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "122386dad13a4daa4a6eb3fe318a2c079a2655ef", "commitAfterChange": "7b1f83fe367075f02121c3b433d12b860b12c546", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r \tprivate IBinding internalResolveNameForSimpleType(Name name)", "signatureAfterChange": "\r \r \tprivate IBinding internalResolveNameForSimpleType(Name name)", "diff": ["-\t\t\treturn this.getTypeBinding(((TypeReference) node).binding.leafComponentType());\r", "+\t\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding binding = ((TypeReference) node).binding;\r", "+\t\t\tif (binding == null) {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "+\t\t\treturn this.getTypeBinding(binding.leafComponentType());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfa9e57af383927fa6153f62655ce9d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testBug93891() throws Exception", "signatureAfterChange": " public void testBug93891() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfac24777d6881d609dfc43efc2f2b8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "c8d6b01292fd993c39b64afaf6111306da02b683", "commitAfterChange": "9eeed8229f525e28410b8c63eb935e1578fd1a6d", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " public boolean isConsistent()", "signatureAfterChange": " public boolean isConsistent()", "diff": ["-\treturn JavaModelManager.getJavaModelManager().getElementsOutOfSynchWithBuffers().get(this) == null;", "+\treturn !JavaModelManager.getJavaModelManager().getElementsOutOfSynchWithBuffers().contains(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbb7e7b468762697672e59fa74336e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " \tpublic void test0182() throws JavaModelException", "signatureAfterChange": " \tpublic void test0182() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbc26f1e72f14e096f769ca02600193", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "cd48f3bd12dbe43d04717362699a8ce411f9ff23", "commitAfterChange": "9ae1051ee3a5e378bfb16bbfa50647f96766ccd2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int getKind()", "signatureAfterChange": " \tpublic int getKind()", "diff": ["-\t\treturn PARAMETER;", "+\t\treturn (this.bits & ASTNode.IsArgument) != 0 ? PARAMETER : LOCAL_VARIABLE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc992b689c01963a3d3b1b31b4fa995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void enumStaticFieldUsedDuringInitialization(FieldBinding field, ASTNode location)", "signatureAfterChange": " public void enumStaticFieldUsedDuringInitialization(FieldBinding field, ASTNode location)", "diff": ["-\t\tfieldSourceStart(field, location),", "-\t\tfieldSourceEnd(field, location));", "+\t\tnodeSourceStart(field, location),", "+\t\tnodeSourceEnd(field, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe7ff688ed55424100418373e13fd7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "135f9386299e3566f4114db01233357ab2291b11", "commitAfterChange": "391f791bfc062c8038e2d943e7b32d7fd90d00ef", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void checkExternalFolderChange(IProject project, JavaProject javaProject)", "signatureAfterChange": "  \tprivate void checkExternalFolderChange(IProject project, JavaProject javaProject)", "diff": ["-\t\tClasspathChange change = (ClasspathChange) this.classpathChanges.get(project);", "+\t\tClasspathChange change = this.state.getClasspathChange(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffefeb871f3fbc471a0148a2f97c422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findSingleImport(char[][] compoundName, boolean findStaticImports)", "signatureAfterChange": " private Binding findSingleImport(char[][] compoundName, boolean findStaticImports)", "diff": ["-\t\t\treturn new ProblemReferenceBinding(compoundName, null, NotFound);", "+\t\t\treturn new ProblemReferenceBinding(compoundName, null, ProblemReasons.NotFound);", "-\t\t\treturn new ProblemReferenceBinding(compoundName, null, NotFound);", "+\t\t\treturn new ProblemReferenceBinding(compoundName, null, ProblemReasons.NotFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d00150d9bb9553b3d76b7e8e7dcf7411", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 372, "methodNumberAfterChange": 372, "signatureBeforeChange": " \tpublic void test0714() throws JavaModelException", "signatureAfterChange": " \tpublic void test0714() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0188ac6a57d68e9cebc71df2b75a120", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "82208f61237e714f45fa0ec35023823563f997ac", "commitAfterChange": "c36806bf795aa69e23f027117b2ebc1cb99bee93", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void testJavadocFieldStringReference() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocFieldStringReference() throws CoreException", "diff": ["-\t\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [javadocSearchedVar] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [javadocSearchedVar] POTENTIAL_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d02aac5947f59f7ccc2835d676e04dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "59449ee231c1cab95a8f7ec24b57c991cddf580d", "commitAfterChange": "bc925ba6701debb5a04c4a1992325a0824778169", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void enterField(FieldInfo fieldInfo)", "signatureAfterChange": " public void enterField(FieldInfo fieldInfo)", "diff": ["-\t", "-\t\thandle = new SourceField(parentHandle, new String(fieldInfo.name));", "+\t\tString fieldName = JavaModelManager.getJavaModelManager().intern(new String(fieldInfo.name));", "+\t\thandle = new SourceField(parentHandle, fieldName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03fbbdffe1cf32ab11c576072c67f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompilerImpl.java", "commitBeforeChange": "ba3f3515e414cf41bff76ad382644021240dc399", "commitAfterChange": "0fef9e356bfc246dbfd0c9cfea1ba0d8941a3dcb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic IProblemFactory getProblemFactory()", "signatureAfterChange": "  \t@Override \tpublic IProblemFactory getProblemFactory()", "diff": ["+\t@Override", "-\t\t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener = EclipseCompilerImpl.this.diagnosticListener;", "-\t\t\t\tif (diagnosticListener != null) {", "-\t\t\t\t\tdiagnosticListener.report(new Diagnostic<JavaFileObject>() {", "+\t\t\t\tDiagnosticListener<? super JavaFileObject> diagListener = EclipseCompilerImpl.this.diagnosticListener;", "+\t\t\t\tif (diagListener != null) {", "+\t\t\t\t\tdiagListener.report(new Diagnostic<JavaFileObject>() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06966955793acaf3fb2559dd9f5c754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test0011() throws JavaModelException", "signatureAfterChange": " \tpublic void test0011() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0802749d031b8c185bdd9c14d7e6c6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "69be5036bec0741cc4d4f5a1817c4386c68c7f87", "commitAfterChange": "02ec7693122bc81c642df1242d757ff1ae2691e1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn suite(testClass(), null);", "+\treturn buildTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c02d13ef9d77dc1e3e1588acf70a43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DoStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c5c1b2f7a92c20c266316973bfbbbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void endVisit(Assignment node)", "signatureAfterChange": " \tpublic void endVisit(EnumConstantDeclaration node)", "diff": ["-\t */", "-\tpublic void endVisit(Assignment node) {", "-\t}", "+\tpublic void endVisit(EnumConstantDeclaration node) {", "+\t\tadd(node);", "+\t\tnode.setName(node.getAST().newSimpleName(\"XXX\")); //$NON-NLS-1$", "+\t\tdetachedListElement(node.bodyDeclarations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d0644208bdbe69bda88d7f264d9ce4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void exitInterface(int declarationEnd)", "signatureAfterChange": " public void exitInterface(int declarationEnd)", "diff": ["- */", "-\tcurrentType.setDeclarationSourceEnd(declarationEnd);", "-\tif (currentType.parent != null) {", "-\t\tcurrentType = currentType.parent;", "-\t}", "+\texitType(declarationEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d3819f96b9bcf26298483e63186ab0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public ClasspathJar(ZipFile zipFile, boolean closeZipFileAtEnd) throws IOException", "signatureAfterChange": " public ClasspathJar(ZipFile zipFile, boolean closeZipFileAtEnd)", "diff": ["-public ClasspathJar(ZipFile zipFile, boolean closeZipFileAtEnd) throws IOException {", "+public ClasspathJar(ZipFile zipFile, boolean closeZipFileAtEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e795db76f1f22cb6215f3c5eb58f15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": " \tpublic void test0374() throws JavaModelException", "signatureAfterChange": " \tpublic void test0374() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0eea1ce8860f42713eecad7d45b2a12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getComponentType()", "signatureAfterChange": "  \tpublic Type getComponentType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f1b7e30754e51f77e720cd03f57c94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void cannotUseQualifiedEnumConstantInCaseLabel(Reference location, FieldBinding field)", "signatureAfterChange": " public void cannotUseQualifiedEnumConstantInCaseLabel(Reference location, FieldBinding field)", "diff": ["-\t\t\tfieldSourceStart(field, location),", "-\t\t\tfieldSourceEnd(field, location)); ", "+\t\t\tnodeSourceStart(field, location),", "+\t\t\tnodeSourceEnd(field, location)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f825e8371d1d6e1e8425a3d682d5ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void testCycleReport() throws CoreException", "signatureAfterChange": " public void testCycleReport() throws CoreException", "diff": ["-\t\t// Ensure a cycle is reported on one of the projects", "-\t\t// Ensure no cycle reported", "+\t\twaitForAutoBuild(); // wait for cycle markers to be created", "-\t\t\tcycleMarkerCount += this.numberOfCycleMarkers(projects[i]);", "+\t\t\tcycleMarkerCount += numberOfCycleMarkers(projects[i]);", "-\t\tassertTrue(\"Should have 3 projects involved in a classpath cycle\", cycleMarkerCount == 3);", "+\t\tassertEquals(\"Unexpected number of projects involved in a classpath cycle\", 3, cycleMarkerCount);", "-\t\tthis.deleteProjects(new String[] {\"P1\", \"P2\", \"P3\"});", "+\t\tdeleteProjects(new String[] {\"P1\", \"P2\", \"P3\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1178f30b3c60bab1b8bddb8c59f6f36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int previousComplaintLevel)", "signatureAfterChange": " public int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int previousComplaintLevel)", "diff": ["-\t\tthis.bits &= ~ASTNode.IsReachable;", "+\t\tif ((flowInfo.reachMode() & FlowInfo.UNREACHABLE_OR_DEAD) != 0)", "+\t\t\tthis.bits &= ~ASTNode.IsReachable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11798d4f3f226d4b04ffdf7276c0470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 351, "methodNumberAfterChange": 351, "signatureBeforeChange": " \tpublic void test0349() throws JavaModelException", "signatureAfterChange": " \tpublic void test0349() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d121773a44f5bf44a9d9497e602ad732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] computeUniqueKey()", "signatureAfterChange": " public char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-public char[] computeUniqueKey() {", "+public char[] computeUniqueKey(boolean withAccessFlags) {", "-\treturn CharOperation.concat(brackets, this.leafComponentType.computeUniqueKey());", "+\treturn CharOperation.concat(brackets, this.leafComponentType.computeUniqueKey(false/*without access flags*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d153378daf20d6b05a567e5702911530", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "a4cacbfb8be6276f1bbe9130c20576048fe33408", "commitAfterChange": "89164a4f2799019330cb196378d315ac3165840b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic synchronized IFolder removeFolder(IPath externalFolderPath)", "signatureAfterChange": " \t \tpublic synchronized IFolder removeFolder(IPath externalFolderPath)", "diff": ["-\t\treturn (IFolder) this.folders.remove(externalFolderPath);", "+\t\treturn (IFolder) getFolders().remove(externalFolderPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d15a356727787d18b237ffe0dfc1a583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e2422311047b85902980920dda1eeedf124d520c", "commitAfterChange": "c107fdebcaaafcbea0a28f68e9b229afba9f7c4f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "diff": ["-\t} else if (inheritedMethod.declaringClass.findSuperTypeOriginatingFrom(otherInheritedMethod.declaringClass) != null) {", "-\t\t// skip it if inheritedMethod is defined by a subtype of otherInheritedMethod declaringClass", "-\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d15cb6a6c087b4d7cdf823646bd4f176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void getAllAnnotationContexts(int targetType, List allAnnotationContexts)", "signatureAfterChange": "  \tpublic void getAllAnnotationContexts(int targetType, List allAnnotationContexts)", "diff": ["-\t\tAnnotationCollector collector = new AnnotationCollector(this, targetType, allAnnotationContexts);", "+\t\tAnnotationCollector collector = new AnnotationCollector(this.returnType, targetType, allAnnotationContexts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16507b900e23ac2438e256bf99d23ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 380, "signatureBeforeChange": " \tpublic void test0378() throws JavaModelException", "signatureAfterChange": " \tpublic void test0378() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d17022e39a4bc85504db2b91beefec38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void testCommentDelimiter2()", "signatureAfterChange": "  \tpublic void testCommentDelimiter2()", "diff": ["-\t\tString expected = PREFIX + \"test\" + DELIMITER + DELIMITER + DELIMITER;", "-\t\tassertEquals(expected, testFormat(PREFIX + \"\\ttest \" + DELIMITER + DELIMITER + DELIMITER));", "+\t\tString expected = PREFIX + \"test\" + DELIMITER + DELIMITER ;", "+\t\tassertEquals(expected, testFormat(PREFIX + \"test \" + DELIMITER + DELIMITER + DELIMITER)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d19f5e085cb1991d36ae497bf6701a52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "9d652ce7c89dd14104c16f2c1f66d223a8b82d5f", "commitAfterChange": "88bd9c51ebfccd9b68ad18488d485e1a7c491cf8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t&& binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1afd833f9b92938abe4ef44dab55455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 74, "signatureBeforeChange": " public IProblemFactory getProblemFactory()", "signatureAfterChange": " public IProblemFactory getProblemFactory()", "diff": ["-\treturn new DefaultProblemFactory(Locale.getDefault());", "+\treturn new DefaultProblemFactory(this.compilerLocale);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bfbc4db8c4e035506def69de7b9b8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "251f99acbb8995bd23d5e9a86fb5718901825772", "commitAfterChange": "b82e4a0e1d547d361495e1d72928b04c339786b5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void testCycle3() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle3() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\tfullBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ //$NON-NLS-6$//$NON-NLS-7$", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t", "-\t\tenv.addClass(root1, \"p1\", \"X\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p1;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"import p2.Y;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class X {\\n\"+ //$NON-NLS-1$", "-\t\t\t\"  public void bar(Y y, int i){\\n\"+ //$NON-NLS-1$", "-\t\t\t\"    y.zork();\\n\"+ //$NON-NLS-1$", "-\t\t\t\"  }\\n\"+ //$NON-NLS-1$", "-\t\t\t\"}\\n\" //$NON-NLS-1$", "-\t\t\t);", "-\t\tincrementalBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "-\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "-", "-\t\tJavaCore.setOptions(options);", "+\t\ttry {", "+\t\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "+\t\t\tfullBuild();", "+\t\t\t", "+\t\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ //$NON-NLS-6$//$NON-NLS-7$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t", "+\t\t\tenv.addClass(root1, \"p1\", \"X\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\"package p1;\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"import p2.Y;\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"public class X {\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"  public void bar(Y y, int i){\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"    y.zork();\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"  }\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"}\\n\" //$NON-NLS-1$", "+\t\t\t\t);", "+\t\t\tincrementalBuild();", "+\t\t\t", "+\t\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "+\t\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t", "+\t\t\tJavaCore.setOptions(options);", "+\t\t} finally {", "+\t\t\tenv.setBuildOrder(null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c99cc4a1b159b593682bd51eaa4092", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "0a4e091036fc111fccab2545e3cb076fb9fe9ddc", "commitAfterChange": "2812d86d568ba2c20ada48601e951ea64c90a8dd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic synchronized CompilationUnitDeclaration getUnitToProcess(int next)", "signatureAfterChange": "  \tpublic synchronized CompilationUnitDeclaration getUnitToProcess(int next)", "diff": ["-\t\t\tthis.unitsToProcess[next] = null; // release reference to processed unit declaration", "+\t\t\tif (this.annotationProcessorManager == null || next < this.annotationProcessorStartIndex) {", "+\t\t\t\tthis.unitsToProcess[next] = null; // release reference to processed unit declaration", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ee4067eaa5e67ba84858346255334e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation)", "signatureAfterChange": "  \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation)", "diff": ["-\t\tif (insideQualifiedReference", "+\t\tif (this.insideQualifiedReference"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f53425ae3edc71a68deefdd2f87f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "7bf8b664251457ee19a0ca0f4e524593e5cebbd2", "commitAfterChange": "c844b42e53f5e6c13f3c402081599074b3dd58c2", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " public void testBug92264c() throws CoreException", "signatureAfterChange": " public void testBug92264c() throws CoreException", "diff": ["-\t\tgetJavaSearchScopeBugs(),", "+\t\tgetJavaSearchScope(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d235bf1418cd0ea2aa743bea60a4111d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": " \tpublic void test0327() throws JavaModelException", "signatureAfterChange": " \tpublic void test0327() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d258072bf866dc85090a761ec34431c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 323, "methodNumberAfterChange": 323, "signatureBeforeChange": " \tpublic void test0321() throws JavaModelException", "signatureAfterChange": " \tpublic void test0321() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2747eb840f9f946d9788e8c43491ca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7162220fe225bff3d6012292a1f7c8c096d98948", "commitAfterChange": "3c5f4a72fa40d161c5df0c986d4c60e32d52f863", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\t\t\t\tboolean paramsMatch = complyTo15", "-\t\t\t\t\t\t\t? methodTypeErasure == (method2.returnType == null ? null : method2.returnType.erasure()) // see 87956 & 88094", "-\t\t\t\t\t\t\t\t\t&& method.areParameterErasuresEqual(method2)", "+\t\t\t\t\t\tboolean paramsMatch = complyTo15 && methodTypeErasure == (method2.returnType == null ? null : method2.returnType.erasure()) // see 87956 & 88094", "+\t\t\t\t\t\t\t? method.areParameterErasuresEqual(method2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d28778c551879ef1022c31b3753498c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "dd2a270d4bfbb4f228adb22be7333923f86c77e9", "commitAfterChange": "ba1917d8323b975c43d151520213a593a77dc7c0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic IJavaElement[] getChildren() throws JavaModelException", "signatureAfterChange": " \tpublic IJavaElement[] getChildren() throws JavaModelException", "diff": ["-\t\treturn getElementInfo().getChildren();", "+\t\treturn ((JavaElementInfo)getElementInfo()).getChildren();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d28a96fb8fafe729fc10ea5cc69cc964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "fb8d9fab146fe4d32454959da7e766f1123c1c97", "commitAfterChange": "e0ce50fdc60bddc794a4615c1e0ac27f63508aca", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end)", "signatureAfterChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end)", "diff": ["-\t\tend = signature.length - 1;", "+\t\tend = signature.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2991be27ad90d62f0c8ebd0d2e4d964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a3ba7fbcca6db305bf663cc71dd27d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": " \tpublic void test0548() throws JavaModelException", "signatureAfterChange": " \tpublic void test0548() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a650b5aee6f61b7880f71df2501e74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void test0054() throws JavaModelException", "signatureAfterChange": " \tpublic void test0054() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2aa595dde068f535a6ce070f4280f79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 &&", "-\t\t\t\t(refType.isPrivate() || refType.isLocalType()) && !scope.isDefinedInType(refType)) {", "-\t\t\t// ignore cases where type is used from within inside itself", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) == 0 && refType.isOrEnclosedByPrivateType() && !scope.isDefinedInType(refType)) {", "+\t\t\t// ignore cases where type is used from inside itself"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d31200c55d43e7b8ad8a94f0a2804958", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 198, "methodNumberAfterChange": 199, "signatureBeforeChange": " public void javadocAmbiguousMethodReference(int sourceStart, int sourceEnd, Binding fieldBinding, int modifiers)", "signatureAfterChange": " public void javadocAmbiguousMethodReference(int sourceStart, int sourceEnd, Binding fieldBinding, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d335ca003e34c10df6cce49508b992f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "26501026de1c4c7bda5338ea9bd040304ee9609c", "commitAfterChange": "d5e226826f638855a6944d96769571e8b855e42f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void testEnumDeclaration() throws Exception", "signatureAfterChange": "  \tpublic void testEnumDeclaration() throws Exception", "diff": ["-\t        List enumBody= enumD.bodyDeclarations();", "+\t        List enumStatements= enumD.enumConstants();", "-\t            enumBody.add(constDecl);", "+\t            enumStatements.add(constDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d36c899a7a5acd89ede6bb4e826895f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": " \tpublic void test0231() throws JavaModelException", "signatureAfterChange": " \tpublic void test0231() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38b727941fd31b4477b6663236865e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 238, "signatureBeforeChange": " public void localVariableHiding(LocalDeclaration local, Binding hiddenVariable, boolean  isSpecialArgHidingField)", "signatureAfterChange": " public void localVariableHiding(LocalDeclaration local, Binding hiddenVariable, boolean  isSpecialArgHidingField)", "diff": ["-\t\tif (isSpecialArgHidingField && !this.options.reportSpecialParameterHidingField){", "+\t\tif (isSpecialArgHidingField && !customOptions().reportSpecialParameterHidingField){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38ceffee64b8fa2bbaf46d510bf81c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tprivate String getPreserveEmptyLines(int count)", "signatureAfterChange": " \tprivate String getPreserveEmptyLines(int count)", "diff": ["+\t\tif (this.blank_lines_between_import_groups >= 0) {", "+\t\t\treturn getEmptyLines(this.blank_lines_between_import_groups);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38f093d845bcaf221ae7cde5b7c8717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Modifier.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d397dad1d8361179e2470c03a7305814", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8cc940e0f7737c5f198b9632e86ecfcd6479e105", "commitAfterChange": "cb998bf2848dbe13467716ab126d457f7b87a36f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \tpublic MethodBinding findDefaultAbstractMethod(\r \t\tReferenceBinding receiverType, \r \t\tchar[] selector,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite,\r \t\tReferenceBinding classHierarchyStart,\r \t\tMethodBinding matchingMethod,\r \t\tObjectVector found)", "signatureAfterChange": "\r \tpublic MethodBinding findDefaultAbstractMethod(\r \t\tReferenceBinding receiverType, \r \t\tchar[] selector,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite,\r \t\tReferenceBinding classHierarchyStart,\r \t\tMethodBinding matchingMethod,\r \t\tObjectVector found)", "diff": ["-\t\tObjectVector found){\r", "+\t\tObjectVector found) {\r", "-\t\t\r", "-\t\twhile (currentType != null){\r", "+\t\twhile (currentType != null) {\r", "-\t\tif (foundSize == startFoundSize) {\r", "-\t\t\tif (matchingMethod != null) return matchingMethod;\r", "-\t\t\treturn null; \r", "-\t\t}\t\t\r", "-\t\tMethodBinding[] candidates = new MethodBinding[foundSize-startFoundSize];\r", "-\t\tint candidatesCount = 0;\r", "+\t\tif (foundSize == startFoundSize) return matchingMethod; // maybe null\r", "+\t\tMethodBinding[] candidates = new MethodBinding[foundSize - startFoundSize];\r", "+\t\tint candidatesCount = 0;\r", "-\t\tif (candidatesCount == 1){\r", "+\t\tif (candidatesCount == 1) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d25a7f1f4b09c1eb9ea039032cfc6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "cc44d533509199a22dee3cb03412b30282a18add", "commitAfterChange": "dee23bd4f5a65ed282a3f4a7e19b637fd72cfc3b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tsynchronized IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "signatureAfterChange": " \tsynchronized IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "diff": ["+\t\t\tif (!isRecoveringBindings && ((methodBinding.tagBits & TagBits.HasMissingType) != 0)) {", "+\t\t\t\treturn null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f498b266a02c328ed54dcafc73c6a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "330aeaad59d1633d10c0cd3a9ee9ac57073b385f", "commitAfterChange": "960ce528d76bd309a28ce655fc14cff77629ffa5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\tTestSuite suite= new TestSuite();", "+\t\tTestSuite suite= new TestSuite(ASTRewritingTest.class.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f8aefee72f3125f51cd329e957aecb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\tif (condition.constant == NotAConstant) {", "+\t\t\tif (condition.constant == Constant.NotAConstant) {", "-\t\t\tif (!(((condition.constant != NotAConstant)", "+\t\t\tif (!(((condition.constant != Constant.NotAConstant)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d419906bee88447f8f42d95502403a42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 359, "methodNumberAfterChange": 359, "signatureBeforeChange": " \tpublic void test0334() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test0334() throws CoreException, IOException", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tfinal ASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41b6e88a3be411667f1b64dcc958f77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test0434() throws JavaModelException", "signatureAfterChange": " \tpublic void test0434() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4250d45e52adcd5cb3fbe1e085a47c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " \tpublic void test0213() throws JavaModelException", "signatureAfterChange": " \tpublic void test0213() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d435db496df4520453e269fd8f38d618", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test0110() throws JavaModelException", "signatureAfterChange": " \tpublic void test0110() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d444fb47fe4ef9506f95dcd3de1e0eb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "e89b745226951dc285ae9b6ac2205ec85db7ac96", "commitAfterChange": "407471f4aeb452770b61f384c43696430b8ea5b0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate Openable createElement(IResource resource, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate Openable createElement(IResource resource, int elementType, RootInfo rootInfo)", "diff": ["-\t\t\t\t\t\t\tOpenable pkg = (Openable)this.currentElement;", "+\t\t\t\t\t\t\tOpenable pkg = this.currentElement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d44bafed3ca548ddd239601be8435492", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getArray()", "signatureAfterChange": "  \tpublic Expression getArray()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ae481ccc4468b667287d2b41c4c9f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "00a3f3c32948c64188954cac2f1e0a1305db911b", "commitAfterChange": "0e78b746cfa482737ebf9f2bfe960064121903d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\tif (exprType == null || !exprType.isValidBinding())", "+\t\t\tif (exprType == null || !exprType.isValidBinding()) {", "+\t\t\t\tif (this.left instanceof MessageSend && ((MessageSend)this.left).actualReceiverType instanceof InferenceVariable)", "+\t\t\t\t\treturn null; // nothing valuable to infer from this", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4dc9e2326b2741b1e13c1d463a04190", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "790443c8ea7a17aa25cb0c35c01196da99d52e04", "commitAfterChange": "d7ed279f5216d32337e674d05a19fd9c56f52744", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static boolean isEnabled(IJavaProject jproject)", "signatureAfterChange": " \tpublic static boolean isEnabled(IJavaProject jproject)", "diff": ["-\t\t// TODO: Walter have a fix for this problem.", "-\t\tif( jproject == null )", "-\t\t\treturn false;", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f091fdbaf5f43e1133fdda7dccb1eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintFormula.java", "commitBeforeChange": "4758255b8284af577e4f7f81a9ecd60704ccc85c", "commitAfterChange": "eeb0d779ca54bfa774f6270ba7624121d1e2d305", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tCollection<InferenceVariable> outputVariables(InferenceContext18 context)", "signatureAfterChange": " \t \tCollection<InferenceVariable> outputVariables(InferenceContext18 context)", "diff": ["-\t\tvariables.removeAll(inputVariables(context));", "+\t\tif (!variables.isEmpty())", "+\t\t\tvariables.removeAll(inputVariables(context));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4fd0c941cd1b46c0eedcd96ae4ee7ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 67, "signatureBeforeChange": "  public char[] readableName()", "signatureAfterChange": "  public char[] readableName()", "diff": ["+", "-\t\treadableName = CharOperation.concat(enclosingType().readableName(), sourceName, '.');", "+\t\treadableName = CharOperation.concat(enclosingType().readableName(), this.sourceName, '.');", "-\t\treadableName = CharOperation.concatWith(compoundName, '.');", "+\t\treadableName = CharOperation.concatWith(this.compoundName, '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5400d1445bde9cc74ea51bfa7b216c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory.java", "commitBeforeChange": "70fc8b3e2529c5b53874a52cebcfd82111c49cc6", "commitAfterChange": "fc6afe33fc140fa63f3b3a28ea26171254534d2d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public boolean equals(Object o)", "signatureAfterChange": "  public boolean equals(Object o)", "diff": ["-\treturn sourceFolder.equals(md.sourceFolder) && binaryFolder.equals(md.binaryFolder);", "+\treturn sourceFolder.equals(md.sourceFolder) && binaryFolder.equals(md.binaryFolder)", "+\t\t&& CharOperation.equals(exclusionPatterns, md.exclusionPatterns);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d54182969b39836ceb4a5d29991ad8eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "4c8a23e20d18a7adcbcfcdb90cf055dac545f8ae", "commitAfterChange": "2c0fcd7cc747b4ebc0c4fd9cb765cdc393a17a10", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  private void print()", "signatureAfterChange": "  private void print()", "diff": ["-\tbuffer.append(LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d54f66936bcfb59f7cb67d61b649e5cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "signatureAfterChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "diff": ["-\t\t\t\t\t// special case to handle uninitialized object", "-\t\t\t\t\tif (locals0 == null) {", "+\t\t\t\t\tif (locals0.tag != VerificationTypeInfo.ITEM_UNINITIALIZED_THIS) {", "+\t\t\t\t\t\t// special case to handle uninitialized object"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d56ac6a6e4aac7d65a90bd4f8808f5a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateFieldOperation.java", "commitBeforeChange": "154403d9b42c72ef31e9dc43545fd6b8f16a058f", "commitAfterChange": "456c7f1af21c7eba23e1f560631579124d9a2526", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected SimpleName rename(ASTNode node, SimpleName newName)", "signatureAfterChange": " protected SimpleName rename(ASTNode node, SimpleName newName)", "diff": ["-\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) ((FieldDeclaration) node).fragments().iterator().next();", "+\tVariableDeclarationFragment fragment = getFragment(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57bc1994e09bd16f94723196627c558", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "d48348b35546aedb713110b2ed105dc5edef642d", "commitAfterChange": "af92ec761864fc440fb8211ae7d1ddf0cccd86d0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tprivate IBinding returnBindingForQualifiedNamePart(ASTNode parent, int index)", "signatureAfterChange": "\r \r \tprivate IBinding returnBindingForQualifiedNamePart(ASTNode parent, int index)", "diff": ["-\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) qualifiedNameReference.binding);\t\t\t\t\r", "+\t\t\t\t\t\tBinding binding = qualifiedNameReference.binding;\r", "+\t\t\t\t\t\tif (binding != null && binding.isValidBinding()) {\r", "+\t\t\t\t\t\t\treturn this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding) binding);\t\t\t\t\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn null;\r", "+\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5895bb8a6ac7835124d841a8b9e6d7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " \tpublic void test0153() throws JavaModelException", "signatureAfterChange": " \tpublic void test0153() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ad149793f1e3b3faf3ff9decdf1ead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "\t  \tpublic void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t\t\t&& (operation.left.constant != NotAConstant) // exclude non constant expressions, since could have side-effect", "+\t\t\t\t\t&& (operation.left.constant != Constant.NotAConstant) // exclude non constant expressions, since could have side-effect", "-\t\t\t\t\tif (assignment.expression.constant != NotAConstant) {", "+\t\t\t\t\tif (assignment.expression.constant != Constant.NotAConstant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5c50cf37013ce84f8969481018fbf52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void test0484() throws JavaModelException", "signatureAfterChange": " \tpublic void test0484() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5dc48dd9cd3a4508a279d95ef1fbf23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 581, "signatureBeforeChange": " \tpublic void test562()", "signatureAfterChange": " \tpublic void test562()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d602ad1516e29510a3e448607ed64d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "59119c56d69b798c59e5389db2508c4896e5dbdf", "commitAfterChange": "c861a0381ba1376aa01c18d9f68e1168bdac8aab", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IProblem[] getProblems()", "signatureAfterChange": " \tpublic IProblem[] getProblems()", "diff": ["-\t\treturn problems;", "+\t\treturn this.problems;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60e712425ceb6609284e76b2e41ee7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": " \tpublic void test0188() throws JavaModelException", "signatureAfterChange": " \tpublic void test0188() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60f0554670f7c6017374e90124faf9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "1f3fa606c98d7f27a76d088fefafbc3cb110858d", "commitAfterChange": "3826deb7274f8b670a1e803be5c591bc377a58f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\taddTest(suite, DebugAttributeTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d61e4eb4cc2377415fb810cf33ecb79b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "2f4a2c5f4e85be10c6f8a803a860cb198c96e808", "commitAfterChange": "6e078f72aac803cfa7a439337ace93b9202fe191", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public boolean isClass()", "signatureAfterChange": "\r public boolean isClass()", "diff": ["-\treturn isClass;\r", "+\treturn this.isClass;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62c659759df82715309d829f03ceb20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test0012() throws JavaModelException", "signatureAfterChange": " \tpublic void test0012() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d66dafc9f93204a6ccf6533b7c8b92cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void printUsage()", "signatureAfterChange": " public void printUsage()", "diff": ["-\tthis.logger.logUsage(Main.bind(\"misc.usage\", //$NON-NLS-1$", "-\t\tnew String[] {", "-\t\t\tSystem.getProperty(\"path.separator\"), //$NON-NLS-1$", "-\t\t\tMain.bind(\"compiler.name\"), //$NON-NLS-1$", "-\t\t\tMain.bind(\"compiler.version\"), //$NON-NLS-1$", "-\t\t\tMain.bind(\"compiler.copyright\") //$NON-NLS-1$", "-\t\t}", "-\t));", "+\tprintUsage(\"misc.usage\"); //$NON-NLS-1$", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d688fdbf004d3047c7bac777d2316a75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "b08e7596febaa49e23faa81f4a4f9ae399c9aefb", "commitAfterChange": "24cf10e27c63373d484417e95718811352f381da", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": " \t \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tASTNode[] bodyDeclarations = this.codeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), this.options, true);", "+\t\tASTNode[] bodyDeclarations = this.codeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), getDefaultCompilerOptions(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6b0749ed791405799d883dbc74d814b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test096()", "signatureAfterChange": " \tpublic void test096()", "diff": ["-\t\tpreferences.join_lines_in_comments = false;", "-\t\trunTest(codeFormatter, \"test096\", \"A.java\", CodeFormatter.K_CLASS_BODY_DECLARATIONS + CodeFormatter.F_INCLUDE_COMMENTS);//$NON-NLS-1$ //$NON-NLS-2$", "+\t\trunTest(codeFormatter, \"test096\", \"A.java\", CodeFormatter.K_CLASS_BODY_DECLARATIONS);//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bdfcd541b431792b27317b552d2d51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 349, "methodNumberAfterChange": 349, "signatureBeforeChange": " \tpublic void test0347() throws JavaModelException", "signatureAfterChange": " \tpublic void test0347() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bf5e697067c417a9d731f0d693912b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic void test0150() throws JavaModelException", "signatureAfterChange": " \tpublic void test0150() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e7214fc45c3fde31e9822df2936e91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "e1f416cce1646bb7c69061a9534e053a8eb380e8", "commitAfterChange": "95f97289fb26e85c9f4195437166d35e681ca3d2", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic void test067() throws CoreException", "signatureAfterChange": " \tpublic void test067() throws CoreException", "diff": ["-\t\tassertRequestedBindingFound(", "+\t\tITypeBinding[] bindings = createTypeBindings(", "-\t\t\t\"Lp1/X$Y<Lp1/X;:TK;Lp1/X;:TV;>;\"", "+\t\t\tnew String[] {\"Lp1/X$Y<Lp1/X;:TK;Lp1/X;:TV;>;\"}", "+\t\t);", "+\t\tassertBindingEquals(", "+\t\t\t\"Lp1/X<>;\",", "+\t\t\tbindings.length == 0 ? null : bindings[0].getDeclaringClass()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d707263ff2e02a5cfb085c222894677c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "e749248b2d171474b4cec0b274f15c474b2172fa", "commitAfterChange": "49bbfb9368cdcf7ee010de91440ff4d54ad31533", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(selector, methodBinding.parameters, methodBinding.declaringClass, NotVisible);", "+\t\t\t\t\tfuzzyProblem = new ProblemMethodBinding(selector, argumentTypes, methodBinding.declaringClass, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d71938dcba6339c3be627b03504bca11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "451dfca83862105681163e8101832560ac0259eb", "commitAfterChange": "b47e3abf1a62dfe39d4027bf5efb533233f9d41e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic boolean removeImport(String qualifiedName, boolean isStatic)", "signatureAfterChange": "  \tpublic boolean removeImport(String qualifiedName, boolean isStatic)", "diff": ["-\t\tString containerName= getQualifier(qualifiedName, isStatic);", "+\t\tString containerName= Signature.getQualifier(qualifiedName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7276c3f91fe8b596042f096181f60cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "37207b2312332e7eb9b138e12e2db23f9f9da53e", "commitAfterChange": "1829731a70d63f049379e6ceb23edadc61e7b589", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\tscanMethodForNullAnnotation(method, result);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7298c28a081f2c07cb1ee05e107cbf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": " public final int sourceStart()", "signatureAfterChange": " public final int sourceStart()", "diff": ["-\treturn scope.referenceContext.sourceStart;", "+\treturn this.scope.referenceContext.sourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d735a47c3d3d0aa033185359b8a9c47a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "517711aedab2b194a0583c3905fcf168d7830f1a", "commitAfterChange": "6a91a58b5c432a9beebbfddd26cdfbcc0d58e6bc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public ICompilationUnit[] getCompilationUnits(WorkingCopyOwner owner)", "signatureAfterChange": " public ICompilationUnit[] getCompilationUnits(WorkingCopyOwner owner)", "diff": ["-\t\tif (equals(wc.getParent())) {", "+\t\tif (equals(wc.getParent()) && !Util.isExcluded(wc)) { // 59933 - excluded wc shouldn't be answered back"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d751537734595127fea839352e889dd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveryScanner.java", "commitBeforeChange": "787257b7f904a5d229cd823de8c5673381972038", "commitAfterChange": "a9350c2b120d179766a1ddbf26ea8f42a99618dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic int getNextToken() throws InvalidInputException", "signatureAfterChange": " \t \tpublic int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\tthis.startPosition = this.currentPosition - 1;", "+\t\t\t\t\tthis.startPosition = this.currentPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7832ddd3d15580c193b33b0d001c4a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "ebfc1682d29070aa2b44b01ca4f59eef8e28cc6a", "commitAfterChange": "772d559a3260b2073445779bf40fa39876a25516", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tif (root.isOnClasspath() && resource.isAccessible()) {", "+\t\t\tif (isPrimary || (root.isOnClasspath() && resource.isAccessible())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7894e1d84fe58fe7f04e3f4ad27673e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void traverse(ASTVisitor visitor, BlockScope blockScope)", "signatureAfterChange": "  public void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["+\t\tif (this.typeArguments != null) {", "+\t\t\tfor (int i = 0, typeArgumentsLength = this.typeArguments.length; i < typeArgumentsLength; i++) {", "+\t\t\t\tthis.typeArguments[i].traverse(visitor, blockScope);", "+\t\t\t}\t\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7c0396c1ebb0bfcb41f715725959894", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void testSearchBinaryMethod() throws CoreException", "signatureAfterChange": " \tpublic void testSearchBinaryMethod() throws CoreException", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7cf4a1f571cde48f0f4d630f7fc1f5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "commitAfterChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "\r public void generateStringAppend(BlockScope blockScope, Expression oper1, Expression oper2)", "signatureAfterChange": "\r public void generateStringAppend(BlockScope blockScope, Expression oper1, Expression oper2)", "diff": ["-\t\tthis.recordPositionsFrom(pc, oper1);\r", "+\t\tthis.recordPositionsFrom(pc, oper1.sourceStart);\r", "-\tthis.recordPositionsFrom(pc, oper2);\r", "+\tthis.recordPositionsFrom(pc, oper2.sourceStart);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d266edc5a07c807a68e93047c5e21c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void test0454() throws JavaModelException", "signatureAfterChange": " \tpublic void test0454() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d833dafb86c6fc6a7fc531e802ffad62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void test047()", "signatureAfterChange": " \tpublic void test047()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8343c678d8b776f6b47ac5b22ee74c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " \tpublic void test0524() throws JavaModelException", "signatureAfterChange": " \tpublic void test0524() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), classFile, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d853b9f9ecd865ded1b99d1ba73e3816", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 402, "signatureBeforeChange": " \tpublic void test383()", "signatureAfterChange": " \tpublic void test383()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8726a455490b695ae90b67ba2ca2ba9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "f254767d87ae8dd4ff9c37cc7b1a6fc568af9dda", "commitAfterChange": "966710fd0db4acefe960a5bfb33635812ee1ac6d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public TypeDeclaration getDeclaration()", "signatureAfterChange": "      public TypeDeclaration getDeclaration()", "diff": ["-        else return (TypeDeclaration)Factory.createReferenceType(declBinding, _env);", "+        else return Factory.createReferenceType(declBinding, _env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8b2c040d2aeb8648539490d92da0bb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "da50a11f1737dbee3925e1da64ad7f9cbaff2e84", "commitAfterChange": "99342a278896e2f8caf142911ce817f7cc97d106", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["+\r", "+\t\t\t\t\tif (method.declaringClass.isInterface())\r", "+\t\t\t\t\t\tif(otherMethod\r", "+\t\t\t\t\t\t\t.declaringClass\r", "+\t\t\t\t\t\t\t.implementsInterface(method.declaringClass,true))\r", "+\t\t\t\t\t\t\tcontinue next;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8d12f4c113731d1ba8402175dbbcb61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void test0019() throws JavaModelException", "signatureAfterChange": " \tpublic void test0019() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8da3f42f5f3e776724b509de57c0a86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tIClasspathEntry referringEntry, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots, \t\tMap rootToResolvedEntries) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tIClasspathEntry referringEntry, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots, \t\tMap rootToResolvedEntries) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\trequiredProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/), ", "+\t\t\t\t\t\t\trequiredProject.getResolvedClasspath(), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8ef7a95e07700fa58206e083998d628", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 374, "signatureBeforeChange": " \tpublic void test0372() throws JavaModelException", "signatureAfterChange": " \tpublic void test0372() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8f2856c90d9ccafe20b66177c8f0ce0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 283, "methodNumberAfterChange": 283, "signatureBeforeChange": " \tpublic void test0281() throws JavaModelException", "signatureAfterChange": " \tpublic void test0281() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fa69baa91d0e8bfacf82c447a52832", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "ffe187ffaf97e93da8eeb74a73165230892e2f7a", "commitAfterChange": "989683e6b33dbd80360b19bb4e1f135abf13384d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void assertResources(String message, String expected, IResource[] resources)", "signatureAfterChange": " protected void assertResources(String message, String expected, IResource[] resources)", "diff": ["-\t\tbuffer.append(((IResource)resources[i]).getFullPath());", "+\t\tbuffer.append(resources[i].getFullPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d908fc12fab4b4db540b8194a5af33c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 577, "methodNumberAfterChange": 577, "signatureBeforeChange": " \tpublic void test558()", "signatureAfterChange": " \tpublic void test558()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9113d29ad05dd813b86875844dfcb38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "73eba53dc74b2abd1c790c80f99589bb2fb91aa8", "commitAfterChange": "48bab711db6e0472fa45fb28e5778f6422d07ceb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public void checkAnnotation()", "signatureAfterChange": "\r public void checkAnnotation()", "diff": ["-\tfound : for (lastAnnotationIndex = scanner.commentPtr; lastAnnotationIndex >= 0; ){\r", "+\tfound : for (lastAnnotationIndex = scanner.commentPtr; lastAnnotationIndex >= 0; lastAnnotationIndex--){\r", "-\t\t\tif (lastAnnotationIndex-- >= 0) {\r", "-\t\t\t\tcontinue;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn;\r", "-\t\t\t}\r", "+\t\t\tcontinue;\r", "-\tscanner.commentPtr = -1; // reset the comment stack, since not necessary after having checked\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d931ce42c2bf0903988064f74175dac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " \tpublic void test0506() throws JavaModelException", "signatureAfterChange": " \tpublic void test0506() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d93aeffae77c7acf0c4e763a730b3c9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " \tpublic void test0173() throws JavaModelException", "signatureAfterChange": " \tpublic void test0173() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d94be3bc8171178b68b61331678daf0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 363, "signatureBeforeChange": " \tpublic void test0361() throws JavaModelException", "signatureAfterChange": " \tpublic void test0361() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d966b6f124181f55314488875557931b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " public void test0261() throws JavaModelException", "signatureAfterChange": " public void test0261() throws JavaModelException", "diff": ["-\t\t\t\"zzfield[FIELD_REF]{zzfield, Ltest.SuperClass;, I, zzfield, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"zzmethod[METHOD_REF]{zzmethod(), Ltest.SuperClass;, ()V, zzmethod, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzfield[FIELD_REF]{zzfield, Ltest.SuperClass;, I, zzfield, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"zzmethod[METHOD_REF]{zzmethod(), Ltest.SuperClass;, ()V, zzmethod, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_STATIC + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d97bbb9a0c238630609bc3ac38814661", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "2f4a2c5f4e85be10c6f8a803a860cb198c96e808", "commitAfterChange": "6e078f72aac803cfa7a439337ace93b9202fe191", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public char[][] getInterfaceNames()", "signatureAfterChange": "\r public char[][] getInterfaceNames()", "diff": ["-\treturn superInterfaces;\r", "+\treturn this.superInterfaces;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98868de38e70bd36c1ad764328bade3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "9d9bbfc481af8ca8c18bd09ae160dfdf3572d8ef", "commitAfterChange": "401fafd3939a17715355a4587eeb696689e388bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\t\tchar[] simpleName = (pattern.getMatchMode() | SearchPattern.R_PREFIX_MATCH) != 0", "+\t\tchar[] simpleName = (pattern.getMatchMode() == SearchPattern.R_PREFIX_MATCH)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99a43cef9ce245cc652e77d325f6523", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "signatureAfterChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "diff": ["-\tReferenceBinding compatible = ((ReferenceBinding)currentType).findSuperTypeErasingTo((ReferenceBinding)targetType.erasure());", "+\tReferenceBinding compatible = ((ReferenceBinding)currentType).findSuperTypeWithSameErasure(targetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99d48e8ce12ad8ed0d554f2d82f01fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void test0012() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0012() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b39c117cf01cf2a0af202d2f14872b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test0010() throws JavaModelException", "signatureAfterChange": " \tpublic void test0010() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d8a28514ca55b25887074c29a63aa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "9d8b73554095c311a209be1a1d5aa92bb30583eb", "commitAfterChange": "990424c900c7463d4257bff26a1ccc6812106204", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate static void acceptName( \t\tchar[] name, \t\tchar[] prefix, \t\tchar[] suffix, \t\tboolean isFirstPrefix, \t\tboolean isFirstSuffix, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void acceptName( \t\tchar[] name, \t\tchar[] prefix, \t\tchar[] suffix, \t\tboolean isFirstPrefix, \t\tboolean isFirstSuffix, \t\tint reusedCharacters, \t\tINamingRequestor requestor)", "diff": ["+\t\tint reusedCharacters,", "-\t\t\trequestor.acceptNameWithPrefixAndSuffix(name, isFirstPrefix, isFirstSuffix);", "+\t\t\trequestor.acceptNameWithPrefixAndSuffix(name, isFirstPrefix, isFirstSuffix, reusedCharacters);", "-\t\t\trequestor.acceptNameWithPrefix(name, isFirstPrefix);", "+\t\t\trequestor.acceptNameWithPrefix(name, isFirstPrefix, reusedCharacters);", "-\t\t\trequestor.acceptNameWithSuffix(name, isFirstSuffix);", "+\t\t\trequestor.acceptNameWithSuffix(name, isFirstSuffix, reusedCharacters);", "-\t\t\trequestor.acceptNameWithoutPrefixAndSuffix(name);", "+\t\t\trequestor.acceptNameWithoutPrefixAndSuffix(name, reusedCharacters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e5eb11bab3281adfe65a5fff9788db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 270, "signatureBeforeChange": " \tpublic void test0268() throws JavaModelException", "signatureAfterChange": " \tpublic void test0268() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9fbdecc458b4f55a7c31837a3519870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1b8eeb345fe07c2b582add99b0e21b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/JarFileDocument.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic char[] getCharContent() throws IOException", "signatureAfterChange": " \tpublic char[] getCharContent()", "diff": ["-\tpublic char[] getCharContent() throws IOException {", "+\tpublic char[] getCharContent() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da2f1593a24b8e3232111e6a62ce9c04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 307, "methodNumberAfterChange": 307, "signatureBeforeChange": " \tpublic void test0305()", "signatureAfterChange": " \tpublic void test0305()", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, source, \"Test.java\", project, true); //$NON-NLS-1$", "+\t\tASTNode result = runConversion(getJLS3(), source, \"Test.java\", project, true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da55a94118c547d0abaa3e789f051fdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 200, "signatureBeforeChange": " \tpublic void test0570() throws JavaModelException", "signatureAfterChange": " \tpublic void test0570() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac48c9402fbed1c8af009001ee705a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "c90b82edd1ac1d83673b4c91396967c8c061cdc3", "commitAfterChange": "358064871a7be19bb66d5146eba4dc39b386d385", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic static JavaElement getUnresolvedJavaElement(MethodBinding methodBinding, WorkingCopyOwner workingCopyOwner, BindingsToNodesMap bindingsToNodes)", "signatureAfterChange": " \tpublic static JavaElement getUnresolvedJavaElement(MethodBinding methodBinding, WorkingCopyOwner workingCopyOwner, BindingsToNodesMap bindingsToNodes)", "diff": ["-\t\t\tboolean isInnerBinaryTypeConstructor = isBinary && original.isConstructor() && enclosingType != null;", "+\t\t\t// Static inner types' constructors don't get receivers (https://bugs.eclipse.org/bugs/show_bug.cgi?id=388137)", "+\t\t\tboolean isInnerBinaryTypeConstructor = isBinary && original.isConstructor() && !original.declaringClass.isStatic() && enclosingType != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae9ae081c1a67a587ea091f73de4f5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testIsOnClasspath4() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath4() throws CoreException", "diff": ["-\tthis.setClasspath(new String[] {\"/P/src\", \"p/**\"});", "-\tthis.createFolder(\"/P/src/p\");", "-\tIFile file = this.createFile(\"/P/src/p/readme.txt\", \"\");", "+\tsetClasspath(new String[] {\"/P/src\", \"p/**\"});", "+\tcreateFolder(\"/P/src/p\");", "+\tIFile file = createFile(\"/P/src/p/readme.txt\", \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daff974e0ffde80a3e529c2d7a0dc711", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "f783b4d85cf6e1edba28b5f6486feeffff5e14a1", "commitAfterChange": "7dd813995b0caeaa0042d2e2be11011cad983416", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate ASTNode convert(IProgressMonitor monitor, CompilationUnitDeclaration compilationUnitDeclaration, char[] source, boolean needToResolveBindings)", "signatureAfterChange": " \tprivate ASTNode convert(IProgressMonitor monitor, CompilationUnitDeclaration compilationUnitDeclaration, char[] source, boolean needToResolveBindings)", "diff": ["+\t\tast.setDefaultNodeFlag(ASTNode.ORIGINAL);", "+\t\tast.setDefaultNodeFlag(0);", "+\t\tast.setOriginalModificationCount(ast.modificationCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db008cf9740b23b97744328e10898988", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "28d83829a5c5453c02025fb74750ed1594ff644e", "commitAfterChange": "25a5f046d36729b08c19efbf5960b2198d2a7573", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r \tprotected void setRawClasspath(IClasspathEntry[] newClasspath)", "signatureAfterChange": "\r \r \tprotected void setRawClasspath(IClasspathEntry[] newClasspath)", "diff": ["-\t\tthis.lastExpandedClasspath = null;\r", "-\t\tthis.lastResolvedClasspath = null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db01fbc794a9a77d6fc5b17033cfabfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test0415() throws JavaModelException", "signatureAfterChange": " \tpublic void test0415() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db03b6abf05252d06ae7e8dcb1c7012f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void test052()", "signatureAfterChange": " \tpublic void test052()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db529be77359431aa70be870d41dd5ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-", "+\t\tif (this.expression.resolvedType.id == TypeIds.T_JavaLangString) {", "+\t\t\tgenerateCodeForStringSwitch(currentScope, codeStream);", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db954cdf33556b9c04930e8ea33afbca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  \tpublic IClasspathEntry[] getResolvedClasspath() throws JavaModelException", "signatureAfterChange": "  \tpublic IClasspathEntry[] getResolvedClasspath() throws JavaModelException", "diff": ["-\t\t\t\tPerProjectInfo temporaryInfo = new PerProjectInfo(getProject());", "+\t\t\t\tPerProjectInfo temporaryInfo = newTemporaryInfo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db97acd185593c80746b13a8b601fbbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic void test0492() throws JavaModelException", "signatureAfterChange": " \tpublic void test0492() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbaead8aaf20b5bd4ed11b1d14bdb3a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 292, "methodNumberAfterChange": 292, "signatureBeforeChange": " \tpublic void test0290() throws JavaModelException", "signatureAfterChange": " \tpublic void test0290() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc2f82134dc8dc5e8401a31dc61ee2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 302, "methodNumberAfterChange": 302, "signatureBeforeChange": " \tpublic void test0300() throws JavaModelException", "signatureAfterChange": " \tpublic void test0300() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0f91d8b49c263653d842283eef8e69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test0003() throws JavaModelException", "signatureAfterChange": " \tpublic void test0003() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc18833d16201d11396381bf6717af34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\t\t\t\t\tcontextAccepted = complete(e.astNode, this.parser.assistNodeParent, e.qualifiedBinding, e.scope, e.insideTypeAnnotation);", "+\t\t\t\t\t\t\tcontextAccepted =", "+\t\t\t\t\t\t\t\tcomplete(", "+\t\t\t\t\t\t\t\t\te.astNode,", "+\t\t\t\t\t\t\t\t\tthis.parser.assistNodeParent,", "+\t\t\t\t\t\t\t\t\tthis.parser.enclosingNode,", "+\t\t\t\t\t\t\t\t\te.qualifiedBinding,", "+\t\t\t\t\t\t\t\t\te.scope,", "+\t\t\t\t\t\t\t\t\te.insideTypeAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc30439b5a7cbbfaf53f7b369fdd2562", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void collectSubstitutes(Scope currentScope, TypeBinding otherType, Map substitutes, int constraint)", "signatureAfterChange": " public void collectSubstitutes(Scope currentScope, TypeBinding otherType, Map substitutes, int constraint)", "diff": ["-\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeErasingTo(this);", "+\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeWithSameErasure(this);", "-\t        equivalent = this.findSuperTypeErasingTo((ReferenceBinding)(otherType.erasure()));", "+\t        equivalent = this.findSuperTypeWithSameErasure(otherType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc39028159ff78c139fc80300cd2fc1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 342, "signatureBeforeChange": " \tpublic void test0694() throws JavaModelException", "signatureAfterChange": " \tpublic void test0694() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc3ed1e2a0decc25573438ba98894c99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": " \t \tpublic void setUpSuite() throws Exception", "diff": ["-", "+\t", "-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc759f4e5398f676d7accf8418de396d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": "  public void invokeJavaUtilIteratorHasNext()", "signatureAfterChange": "  public void invokeJavaUtilIteratorHasNext()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaUtilIteratorConstantPoolName,", "-\t\t\tQualifiedNamesConstants.HasNext,", "-\t\t\tQualifiedNamesConstants.HasNextSignature);", "+\t\t\tConstantPool.JavaUtilIteratorConstantPoolName,", "+\t\t\tConstantPool.HasNext,", "+\t\t\tConstantPool.HasNextSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc76be5212a296c28070a1a6bc82b3a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceCompletionTests.java", "commitBeforeChange": "7e90b152d794472f9ccdc34291f34d9ac4acf6e7", "commitAfterChange": "8db2a22a82e2d4efc29edee16188f254a9d47da3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testCompleteName() throws JavaModelException", "signatureAfterChange": " \tpublic void testCompleteName() throws JavaModelException", "diff": ["-\t\tthis.complete(", "+\t\tcomplete(true, // put result in fingerprint", "+\t\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc9eafe065bf5a178d7a6433b0336440", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 139, "signatureBeforeChange": " final public void if_icmple(Label lbl)", "signatureAfterChange": " final public void if_icmple(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_iacmple:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca2636a4d27324724aa9d185dec9603", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public final boolean isUsed()", "signatureAfterChange": "  public final boolean isUsed()", "diff": ["-\treturn (modifiers & AccLocallyUsed) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccLocallyUsed) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca826bfe5fdf161c067737b957e6f48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "99f0734d8a1b71a7d7c72970a0e6d86dd16a74bf", "commitAfterChange": "0660a80b4f83507ec084149491c197acba246b67", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " public void enumSwitchCannotTargetField(Reference reference, FieldBinding field)", "signatureAfterChange": " public void enumSwitchCannotTargetField(Reference reference, FieldBinding field)", "diff": ["-\t\t\tfieldSourceStart(field, reference),", "-\t\t\tfieldSourceEnd(field, reference)); ", "+\t\t\tnodeSourceStart(field, reference),", "+\t\t\tnodeSourceEnd(field, reference)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb4a824c2c81d329e74465c5402ea37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 521, "methodNumberAfterChange": 521, "signatureBeforeChange": " \tpublic void test502()", "signatureAfterChange": " \tpublic void test502()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc70884b644d7ef6993adfef0aed907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "commitAfterChange": "b88938c08437e0bec96c02cfcd284b717a767f7a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["+\tthis.useEnumAsAnIndentifier = false;", "+\t\t\t\t\t\t\t\tthis.useEnumAsAnIndentifier = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcceb16500a3f564c985eb726dff13dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "fd4873f8881450efaceb482ead403702f0b3cd50", "commitAfterChange": "efd7cd38b35f875ede44936aed68717b93ca608e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " void computeInheritedMethods()", "signatureAfterChange": " void computeInheritedMethods()", "diff": ["-\t\t\t\t\tif (doesMethodOverride(existingMethods[i], inheritedMethod)) {", "+\t\t\t\t\tif (existingMethods[i].declaringClass != inheritedMethod.declaringClass && doesMethodOverride(existingMethods[i], inheritedMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce02374546cbb9f7387934105a793c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void findTypes(char[] prefix, final boolean findMembers, boolean camelCaseMatch, int searchFor, final ISearchRequestor storage)", "signatureAfterChange": " \tpublic void findTypes(char[] prefix, final boolean findMembers, boolean camelCaseMatch, int searchFor, final ISearchRequestor storage)", "diff": ["-\t\t\t\tif (camelCaseMatch) matchRule |= SearchPattern.R_CAMEL_CASE_MATCH | SearchPattern.R_PREFIX_MATCH;", "+\t\t\t\tif (camelCaseMatch) matchRule |= SearchPattern.R_CAMELCASE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce1b30c8131f78073f2b5b8667827bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["-\t\tIMarker marker = currentProject.createMarker(ProblemMarkerTag);", "+\t\tIMarker marker = currentProject.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "-\t\t\tIMarker marker = currentProject.createMarker(ProblemMarkerTag);", "+\t\t\tIMarker marker = currentProject.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd144028b2de5f3198e0017c3bf04a6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "f7a9af4b9733d2ee3f767ee4a249bdf6b8c9fd53", "commitAfterChange": "19fd18220b36bc3a334d8b2481a152fbc238dfea", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["+\t\t\tnotifySourceElementRequestor(typeDeclaration.typeParameters);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd285d887bfef1dad1c385c28309124f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "a3663876ebeeba0873385de1d4baec07c1c9b5d8", "commitAfterChange": "d9c5650b5cbddab2c4722e719615cd4c4df0f60d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassemble(IConstantPool constantPool, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\t\t\t\t\t\t\tconstantPoolEntry.getStringValue()}));", "+\t\t\t\t\t\t\t\tescapeString(constantPoolEntry.getStringValue())}));", "-\t\t\t\t\t\t\t\tnew String(constantPoolEntry.getUtf8Value())}));", "+\t\t\t\t\t\t\t\tescapeString(new String(constantPoolEntry.getUtf8Value()))}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd5ca5ad5412a86ff5334eacee5ccdd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d1604ec4aaf14502ebd4979c300c0ac9998996a1", "commitAfterChange": "e50fa330bbb302e8ef44446c0c3afc64880dfa01", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic boolean visit(EnumConstant enumConstant, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(EnumConstant enumConstant, ClassScope scope)", "diff": ["-", "-\t\tExpression[] arguments = enumConstant.arguments;", "-\t\tif (arguments != null) {", "-\t\t\tformatEnumConstantArguments(", "-\t\t\t\tenumConstant,", "-\t\t\t\tthis.preferences.insert_space_before_opening_paren_in_enum_constant,", "-\t\t\t\tthis.preferences.insert_space_between_empty_parens_in_enum_constant,", "-\t\t\t\tthis.preferences.insert_space_before_closing_paren_in_enum_constant,", "-\t\t\t\tthis.preferences.insert_space_after_opening_paren_in_enum_constant,", "-\t\t\t\tthis.preferences.insert_space_before_comma_in_enum_constant_arguments,", "-\t\t\t\tthis.preferences.insert_space_after_comma_in_enum_constant_arguments,", "-\t\t\t\tthis.preferences.alignment_for_arguments_in_enum_constant);\t\t\t", "-\t\t}", "+\t\tformatEnumConstantArguments(", "+\t\t\tenumConstant,", "+\t\t\tthis.preferences.insert_space_before_opening_paren_in_enum_constant,", "+\t\t\tthis.preferences.insert_space_between_empty_parens_in_enum_constant,", "+\t\t\tthis.preferences.insert_space_before_closing_paren_in_enum_constant,", "+\t\t\tthis.preferences.insert_space_after_opening_paren_in_enum_constant,", "+\t\t\tthis.preferences.insert_space_before_comma_in_enum_constant_arguments,", "+\t\t\tthis.preferences.insert_space_after_comma_in_enum_constant_arguments,", "+\t\t\tthis.preferences.alignment_for_arguments_in_enum_constant);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7f5589aabe9e799ce4e53872fd505a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetContainerOperation.java", "commitBeforeChange": "155f96ad35dd069f34736b72fe6caa90731d8291", "commitAfterChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "  \tprotected void executeOperation() throws JavaModelException", "diff": ["+\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\tverbose_set_container_invocation_trace();", "-\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE)", "+\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE_ADVANCED)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8034caef256f878e76fea67def70bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void generateOptimizedGreaterThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedGreaterThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8b1f83ab8049574e8e1d4be0bc2d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnJavadocSingleTypeReference.java", "commitBeforeChange": "c69d554c4a0ab31c42bc85ec72715246d23539d3", "commitAfterChange": "a7a426b08b946b61e6019ce88244da6f93866816", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int getCompletionFlags()", "signatureAfterChange": " \tpublic int getCompletionFlags()", "diff": ["+\t */", "+\tpublic int getCompletionFlags() {", "+\t\treturn this.completionFlags;", "-\t */", "-\tpublic int getCompletionFlags() {", "-\t\treturn completionFlags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddbb6616966fb50f3800281e54c435c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Javadoc.java", "commitBeforeChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "commitAfterChange": "3032de1870d006c819c7d178849a7bb1bd98ddbe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic String getComment()", "signatureAfterChange": " \tpublic String getComment()", "diff": ["-\t\treturn comment;", "+\t\treturn this.comment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd6c9ccafca42d33cec7eeb266ca7d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Location.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void update(Scribe scribe, int sourceRestart)", "signatureAfterChange": " \t \tpublic void update(Scribe scribe, int sourceRestart)", "diff": ["-\t\tthis.outputOffset = scribe.size();", "-\t\tthis.positionsIndex = scribe.positionsIndex;", "+\t\tthis.editsIndex = scribe.editsIndex;", "+\t\ttextEdit = scribe.getLastEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1ee7c6142f5c7c6cf16511eed8a29b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "7bf8b664251457ee19a0ca0f4e524593e5cebbd2", "commitAfterChange": "c844b42e53f5e6c13f3c402081599074b3dd58c2", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " public void testBug92264b() throws CoreException", "signatureAfterChange": " public void testBug92264b() throws CoreException", "diff": ["-\t\tgetJavaSearchScopeBugs(),", "+\t\tgetJavaSearchScope(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de266e66bc0b28914fe0619f013e5a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de29c75ed1ec5a732bb0e809197b3264", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 337, "signatureBeforeChange": " \tpublic void test0689() throws JavaModelException", "signatureAfterChange": " \tpublic void test0689() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2aca340c3fcca01ab237d6b96e167e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "978b63f3dcf47c1265663042fb2652bb563387ac", "commitAfterChange": "702c62fec0923d7526ca23efea5c1bb4f5a2ef27", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void createInitialConstraintsForParameters(TypeBinding[] parameters, boolean checkVararg, TypeBinding varArgsType, MethodBinding method)", "signatureAfterChange": " \tpublic void createInitialConstraintsForParameters(TypeBinding[] parameters, boolean checkVararg, TypeBinding varArgsType, MethodBinding method)", "diff": ["-\t\t\t\tif (parameters[i].isPertinentToApplicability(this.invocationArguments[i].resolvedType, method))", "+\t\t\t\tif (parameters[i].isPertinentToApplicability(this.invocationArguments[i], method))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3cff50a53e88199855fd71c94f6263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tprivate IJavaElementDelta processResourceDelta(IResourceDelta changes)", "signatureAfterChange": " \tprivate IJavaElementDelta processResourceDelta(IResourceDelta changes)", "diff": ["-\t\t\tIResourceDelta[] deltas = changes.getAffectedChildren();", "+\t\t\tIResourceDelta[] deltas = changes.getAffectedChildren(IResourceDelta.ADDED | IResourceDelta.REMOVED | IResourceDelta.CHANGED, IContainer.INCLUDE_HIDDEN);", "-\t\t\t\t\trootInfo = this.enclosingRootInfo(res.getFullPath(), delta.getKind());", "-\t\t\t\t\tif (rootInfo != null && rootInfo.isRootOfProject(res.getFullPath())) {", "+\t\t\t\t\tIPath rootPath = externalPath(res);", "+\t\t\t\t\trootInfo = this.enclosingRootInfo(rootPath, delta.getKind());", "+\t\t\t\t\tif (rootInfo != null && rootInfo.isRootOfProject(rootPath)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de48c92856e9cad2124ae849b630b72d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "36ef129881167aaca524bd32a5aa2c4e26ffd187", "commitAfterChange": "19b7207c9f9b8245eee7ba353b5eb784e8fb1b81", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected boolean parentExists()", "signatureAfterChange": " protected boolean parentExists()", "diff": ["-\tIJavaElement parent = this.getParent();", "-\tif (parent == null) return true;", "-\treturn parent.exists();", "+\tIJavaElement parentElement = getParent();", "+\tif (parentElement == null) return true;", "+\treturn parentElement.exists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4f9572737dd28b203f8c438a649b32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchCase.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de68062c4071e27aa1ca7c8e1b55022e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected String[] getPathsOfDeclaringType()", "signatureAfterChange": " protected String[] getPathsOfDeclaringType()", "diff": ["-\t\tthis.pattern.matchRule);", "+\t\tthis.pattern.getMatchRule());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de8945a7dbe843cded2e0012c9e87462", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testAccessRestriction4() throws Exception", "signatureAfterChange": " public void testAccessRestriction4() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec56cb90130b5b405f1c05922022a24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 269, "methodNumberAfterChange": 269, "signatureBeforeChange": " \tpublic void test0247() throws JavaModelException", "signatureAfterChange": " \tpublic void test0247() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, sourceUnit, true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "decf66b3ad15e03dae4534216378b2a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testCompletionCaseInsensitive() throws JavaModelException", "signatureAfterChange": " public void testCompletionCaseInsensitive() throws JavaModelException", "diff": ["-\t\t\"element:field    completion:field    relevance:\"+(R_DEFAULT + R_INTERESTING + R_NON_STATIC),", "+\t\t\"element:field    completion:field    relevance:\"+(R_DEFAULT + R_INTERESTING + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded39b01825e0607c7d13638e3390d14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/FieldInfo.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tint sizeInBytes()", "signatureAfterChange": "  \tint sizeInBytes()", "diff": ["-\t\treturn attributeBytes;", "+\t\treturn this.attributeBytes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deeda038eb974f13cff7a4cd22083960", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "2578beb48a6b3a361f86f5c17d2c7fa6611bd734", "commitAfterChange": "53dea3bbb0a8d720e7abd4d3f9b54cc5dbdaecb6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "signatureAfterChange": " public void testPerfSearchAllTypeNamesAndReconcile() throws CoreException", "diff": ["-\ttagAsSummary(\"Model>Reconcile>Parser\", false); // do NOT put in fingerprint", "+\ttagAsSummary(\"Model>Completion+Reconcile>Parser\", true); // put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "defbc17b41cdc7d4b371533f1099309b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e3822f42ca0adb637888a2b8f6caa05d9b5ce61b", "commitAfterChange": "8c0681689bb7016ae1fdf06168ac4642209638f2", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  \tpublic void setRawClasspath( \t\tIClasspathEntry[] newEntries, \t\tIPath newOutputLocation, \t\tIProgressMonitor monitor, \t\tboolean canChangeResource, \t\tIClasspathEntry[] oldResolvedPath, \t\tboolean needValidation, \t\tboolean needSave) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic void setRawClasspath( \t\tIClasspathEntry[] newEntries, \t\tIPath newOutputLocation, \t\tIProgressMonitor monitor, \t\tboolean canChangeResource, \t\tIClasspathEntry[] oldResolvedPath, \t\tboolean needValidation, \t\tboolean needSave) \t\tthrows JavaModelException", "diff": ["-\t\t\tmanager.flush();", "+\t\t\tmanager.deltaProcessor.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df06c15560787926100ac67ac8443744", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "20eaedd8038780a05a557c39b442f2485f010803", "commitAfterChange": "1920517d934718cca4ae649c790dd80e9c368b4b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "signatureAfterChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "diff": ["-\t\t\t\t\tclassScope.enclosingSourceType(),", "-\t\t\t\tclassLiteralSyntheticField);", "+\t\t\t\t\tclassScope.outerMostClassScope().enclosingSourceType(),", "+\t\t\t\t\tthis.classLiteralSyntheticField);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df07865b8702c935222ae61380175a64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 201, "signatureBeforeChange": " public void javadocDeprecatedMethod(MethodBinding method, ASTNode location, int modifiers)", "signatureAfterChange": " public void javadocDeprecatedMethod(MethodBinding method, ASTNode location, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df585cf4f8b6dc0ecbc050d7af3008dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionContext.java", "commitBeforeChange": "b208e61b699229b414f76c3c9bfed66b1f92d991", "commitAfterChange": "52b692ed21634a88100b21eba7894614726adbcf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean isInJavadocText()", "signatureAfterChange": " \tpublic  boolean isInJavadocText()", "diff": ["-\tpublic boolean isInJavadocText() {", "-\t\treturn (this.javadoc & CompletionOnJavadoc.TEXT) != 0;", "+\tpublic  boolean isInJavadocText() {", "+\t\treturn false; // default overridden by concrete implementation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df636da7e62d764351b1ee7e4a503020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 36, "signatureBeforeChange": " \t\t \t\tpublic void printlnErr(String s)", "signatureAfterChange": "  \t\tprivate void printlnErr(String s)", "diff": ["-\t\t", "-\t\tpublic void printlnErr(String s) {", "+", "+\t\tprivate void printlnErr(String s) {", "-\t\t\tif (this.log != null) {", "-\t\t\t\tthis.log.println(s);", "+\t\t\tif (!this.isXml) {", "+\t\t\t\tif (this.log != null) {", "+\t\t\t\t\tthis.log.println(s);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6a58d0cde886fde92fd4419401c228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "4ad7a53402cae3c4b6e9012c72e7bc791a844674", "commitAfterChange": "c8027ea7e2bffdb1b2897aa327645dfc9d885f55", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 194, "signatureBeforeChange": " public void invokeJavaLangEnumvalueOf()", "signatureAfterChange": " public void invokeJavaLangEnumvalueOf(ReferenceBinding binding)", "diff": ["-}", "-public void invokeJavaLangEnumvalueOf() {", "-\t// invokevirtual: java.lang.Enum.valueOf(String,Class)", "-\tif (DEBUG) System.out.println(position + \"\\t\\tinvokevirtual: java.lang.Enum.valueOf(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Enum;\"); //$NON-NLS-1$", "+public void invokeJavaLangEnumvalueOf(ReferenceBinding binding) {", "+\t// invokestatic: java.lang.Enum.valueOf(Class,String)", "+\tif (DEBUG) System.out.println(position + \"\\t\\tinvokestatic: java.lang.Enum.valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7651207c312248b59da8e15abd2b53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void test0442() throws JavaModelException", "signatureAfterChange": " \tpublic void test0442() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df78e9984585f1b47f6c8502e34b9693", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testCompletionFindMethodWhenInProcess() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindMethodWhenInProcess() throws JavaModelException", "diff": ["-\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE),", "+\t\t\"element:foobar    completion:foobar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df98033c738ccebbf261a3463db7283d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test0006() throws JavaModelException", "signatureAfterChange": " \tpublic void test0006() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa0c83c2a5cf2c01e33d196dce80421", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 200, "signatureBeforeChange": " \tpublic void test0198() throws JavaModelException", "signatureAfterChange": " \tpublic void test0198() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfac932a0be8be729e419a188110584b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "22325a67aa91a1b7b3e517137edba8a4cce052e3", "commitAfterChange": "8829074f9d3ac6a675ff4d6ddfc9960d99c756d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic SyntheticMethodBinding(SourceTypeBinding declaringEnum, char[] selector)", "signatureAfterChange": " \tpublic SyntheticMethodBinding(SourceTypeBinding declaringEnum, char[] selector)", "diff": ["-\t\t    this.kind = EnumValues;", "+\t\t    this.purpose = SyntheticMethodBinding.EnumValues;", "-\t\t    this.kind = EnumValueOf;", "+\t\t    this.purpose = SyntheticMethodBinding.EnumValueOf;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfad02c9d415d05b22f123bf0fa778cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "e6babaf6f50502cf7bdba46954a95cc1c1a858d3", "commitAfterChange": "70bff2dca8e701b7b2f32d33d97d273547f2125b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \r \r private void initializeBuilder() throws CoreException", "signatureAfterChange": " \r \r private void initializeBuilder() throws CoreException", "diff": ["+\t\t\tif (f.length == 0) continue;\r", "+\t\t\tif (f.length == 0) continue;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfbd5e2cff5dd8fec8d4d571212028ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "9d652ce7c89dd14104c16f2c1f66d223a8b82d5f", "commitAfterChange": "88bd9c51ebfccd9b68ad18488d485e1a7c491cf8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t&& binding.declaringClass.id != T_Object) //no change for Object fields (in case there was)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfbe26ea0b1456dcac9d112b891d1bcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler3()", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler3()", "diff": ["-\t\tStandardJavaFileManager manager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\tStandardJavaFileManager manager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "- \t\tCompilationTask task = Compiler.getTask(printWriter, manager, null, options, null, units);", "+ \t\tCompilationTask task = compiler.getTask(printWriter, manager, null, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfd092e88f20c91452879572097c076e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\tif (this.typeVariables != NoTypeVariables) {", "+\tif (this.typeVariables != Binding.NO_TYPE_VARIABLES) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfeaa91adbe1d95a90f5b5aa05a4c808", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static APTResult runAPTDuringReconcile( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ICompilationUnit compilationUnit,  \t\t\tfinal IJavaProject javaProj)", "signatureAfterChange": " \tpublic static APTResult runAPTDuringReconcile( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ICompilationUnit compilationUnit,  \t\t\tfinal IJavaProject javaProj)", "diff": ["-\t\treturn runAPT( factories, javaProj, null, compilationUnit, false /* does not matter*/ );", "+\t\treturn runAPT( factories, Collections.<AnnotationProcessorFactory>emptySet(), javaProj, null, compilationUnit, false /* does not matter*/ );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0017bd090cac3aefe2fbb78556bef35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "f5104ea8b01f4418b9868445123db4c689077583", "commitAfterChange": "93bd13e4d18eed8c7512ddd895c27daf962fe66c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["+\t\t\t\t\tif (VERBOSE)", "+\t\t\t\t\t\tJobManager.verbose(\"-> cannot reuse existing index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e00340384b145f185ca34fc0d7d7d4a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void test0069() throws JavaModelException", "signatureAfterChange": " \tpublic void test0069() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e00921101cf39c26f3cb486c23d02fcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void indexAll(IProject project)", "signatureAfterChange": " public void indexAll(IProject project)", "diff": ["-\t\tIClasspathEntry[] entries = javaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);\t", "+\t\tIClasspathEntry[] entries = javaProject.getResolvedClasspath();\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e00eb1c5185116b0b58c65144ebe3515", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\t \t  \tpublic void testMethodDeclarationParamShuffel1() throws Exception", "signatureAfterChange": "\t \t  \tpublic void testMethodDeclarationParamShuffel1() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(first, copy2, null);", "-\t\t\trewrite.markAsRemoved(second, null);", "+\t\t\trewrite.replace(first, copy2, null);", "+\t\t\trewrite.remove(second, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0224205a6878a6c58b352491fe9bedb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 219, "signatureBeforeChange": " public void javadocInvalidType(ASTNode location, TypeBinding type, int modifiers)", "signatureAfterChange": " public void javadocInvalidType(ASTNode location, TypeBinding type, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02852959f78e8d518ddd2f135bcfc91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler5()", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler5()", "diff": ["-\t\tStandardJavaFileManager manager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\tStandardJavaFileManager manager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "-\t\tCompilationTask task = Compiler.getTask(null, manager, compilerInvocationDiagnosticListener, options, null, units);", "+\t\tCompilationTask task = compiler.getTask(null, manager, compilerInvocationDiagnosticListener, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e051b2df1bef4dba78ebcd539456ebeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/JarFileEntryDocument.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public char[] getCharContent() throws IOException", "signatureAfterChange": " public char[] getCharContent()", "diff": ["-public char[] getCharContent() throws IOException {", "+public char[] getCharContent() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0564b22774d34177051aaaf8bd7a551", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": " \tpublic void test0715() throws JavaModelException", "signatureAfterChange": " \tpublic void test0715() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e05ba28ca0991a65f14def1463243b5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void test0248() throws JavaModelException", "signatureAfterChange": " \tpublic void test0248() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e05c09de1c9d73439d9e6a8a5fa2b06b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "f6928a3e7ff4d633032250ff1eeb28d81a4173fb", "commitAfterChange": "08f3ed4913599f8b8a74808e920cd923aa028f37", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " protected void toStringInfo(int tab, StringBuffer buffer, Object info)", "signatureAfterChange": " protected void toStringInfo(int tab, StringBuffer buffer, Object info)", "diff": ["-\t\tbuffer.append(this.getElementName());", "+\t\ttoStringName(buffer);", "-\t\tbuffer.append(getElementName());", "+\t\ttoStringName(buffer);", "-\t\t\tbuffer.append(this.getElementName());", "+\t\t\ttoStringName(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e05d0d04362d5c4e2bcd618835dc9806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void printError(SourcePosition pos, String msg)", "signatureAfterChange": "          public void printError(SourcePosition pos, String msg)", "diff": ["-            print((SourcePositionImpl)pos, IMarker.SEVERITY_ERROR, msg);", "+            print((SourcePositionImpl)pos, APTProblem.Severity.Error, msg);", "-    \t\tprint(pos, IMarker.SEVERITY_ERROR, msg);", "+    \t\tprint(pos, APTProblem.Severity.Error, msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06df490a15140b1dbcec2843fbf497a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 240, "signatureBeforeChange": " \tpublic void test0238() throws JavaModelException", "signatureAfterChange": " \tpublic void test0238() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0716de4ac04198e62257d8656ec9f43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tpublic void test0178() throws JavaModelException", "signatureAfterChange": " \tpublic void test0178() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08bf62ed5316858e1b7519f6496f38d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic Expression getRightHandSide()", "signatureAfterChange": "  \tpublic Expression getRightHandSide()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09138d66741ca2b12d4c6de4b801327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "259ab729885d11212fdf6dd0b606b9f4d2fb1d41", "commitAfterChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void resolve(MethodScope methScope)", "signatureAfterChange": " \tpublic void resolve(MethodScope methScope)", "diff": ["-\t\tint seeTagsNbre = this.references == null ? 0 : this.references.length;", "+\t\tint seeTagsLength = this.references == null ? 0 : this.references.length;", "-\t\tfor (int i = 0; i < seeTagsNbre; i++) {", "+\t\tfor (int i = 0; i < seeTagsLength; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e091c86977df405de3dff6584b13cf80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void test0502e() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502e() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0a72a639beec245294a57a2a0df0d11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperFieldAccess.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0b6247e2cf33a129600bf953a490c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 228, "signatureBeforeChange": " public void javadocMissingThrowsClassName(int sourceStart, int sourceEnd, int modifiers)", "signatureAfterChange": " public void javadocMissingThrowsClassName(int sourceStart, int sourceEnd, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers))", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d109009152aada027fe24824a8e14e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test0021() throws JavaModelException", "signatureAfterChange": " \tpublic void test0021() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0dff6a0d1f7610223273df0dc906656", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler7()", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler7()", "diff": ["-\t\tStandardJavaFileManager manager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\tStandardJavaFileManager manager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "-\t\tCompilationTask task = Compiler.getTask(null, manager, compilerInvocationDiagnosticListener, options, null, units);", "+\t\tCompilationTask task = compiler.getTask(null, manager, compilerInvocationDiagnosticListener, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e124d61b43b3bc2184d2986ca97799d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AstNode.java", "commitBeforeChange": "0ac030bdfe933c642b7372a2bd2d95a0102341ed", "commitAfterChange": "a7a2107ad593b8f3341bd5696fd4c0440e8b93da", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope)", "diff": ["-\t\tif (method.isPrivate()) {", "+\t\tif (method.isPrivate() && !scope.isDefinedInMethod(method)) {", "+\t\t\t// ignore cases where method is used from within inside itself (e.g. direct recursions)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13a65556ec29d2cdd3f90a787c204d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant)", "signatureAfterChange": " \tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant, TypeBinding binding)", "diff": ["-\tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant) {", "+\tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant, TypeBinding binding) {", "-\t\tswitch (constant.typeID()) {", "+\t\tswitch (binding.id) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13c3032f8bab6e21c28307ddda698a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": " public void invokeNoClassDefFoundErrorStringConstructor()", "signatureAfterChange": " public void invokeNoClassDefFoundErrorStringConstructor()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangNoClassDefFoundErrorConstantPoolName,", "-\t\t\tQualifiedNamesConstants.Init,", "-\t\t\tQualifiedNamesConstants.StringConstructorSignature);", "+\t\t\tConstantPool.JavaLangNoClassDefFoundErrorConstantPoolName,", "+\t\t\tConstantPool.Init,", "+\t\t\tConstantPool.StringConstructorSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e142505e04e2af2930aeccadd7ad2735", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": "\r protected void consumeTypeImportOnDemandDeclarationName()", "signatureAfterChange": "\r protected void consumeTypeImportOnDemandDeclarationName()", "diff": ["+\timpt.declarationEnd = impt.declarationSourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e14c43f9f1dd2febf3ef4acc306f4f77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "0ec536fdaa3fcd2a2026a5c386d70826543d3f56", "commitAfterChange": "c81a3234d6e9e281ceade85abcd923313e6692f3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic void consumeRawType()", "signatureAfterChange": " \t \tpublic void consumeRawType()", "diff": ["-\t\tthis.typeBinding = this.environment.createRawType((ReferenceBinding) this.typeBinding, null/*no enclosing type*/);", "+\t\tthis.typeBinding = this.environment.createRawType((ReferenceBinding) this.typeBinding, this.typeBinding.enclosingType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e16f7485f21caa2a9cef74d3236825f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 311, "methodNumberAfterChange": 311, "signatureBeforeChange": " \tpublic void test0309() throws JavaModelException", "signatureAfterChange": " \tpublic void test0309() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17b56b53ee38ba383ab6841d8a0a598", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test0007() throws JavaModelException", "signatureAfterChange": " \tpublic void test0007() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e189398ed4c66806fc9f4502903c0e08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "44324f9ccc0ea7eca946937ed07112f93f643481", "commitAfterChange": "af88586441719c8f285b3d037981c91da39f99e2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["-\tresolvedImports[0] = environment.defaultImports[0];", "+\tresolvedImports[0] = getDefaultImports()[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1d7142a8f04978d2e0c326367c7827d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["+\t\t\tif (this.typeArguments != null) {", "+\t\t\t\tfor (int i = 0, typeArgumentsLength = this.typeArguments.length; i < typeArgumentsLength; i++) {", "+\t\t\t\t\tthis.typeArguments[i].traverse(visitor, scope);", "+\t\t\t\t}\t\t\t", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e228077b152c27602eb1be0865f7e95e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 133, "signatureBeforeChange": " protected void consumeEnhancedForStatementHeaderInit(boolean hasModifiers)", "signatureAfterChange": " protected void consumeEnhancedForStatementHeaderInit(boolean hasModifiers)", "diff": ["+\t", "+\titeratorForStatement.sourceEnd = localDeclaration.declarationSourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23fcd4fa989820628247bac2f5c3dfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7ceb09d85452179b42407e05dd48c1ac5747d10a", "commitAfterChange": "cb8d9486d5e5f2bb20f5895e1cd434f7838ce4c6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic CompletionEngine( \t\t\tSearchableEnvironment nameEnvironment, \t\t\tCompletionRequestor requestor, \t\t\tMap settings, \t\t\tIJavaProject javaProject, \t\t\tWorkingCopyOwner owner, \t\t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic CompletionEngine( \t\t\tSearchableEnvironment nameEnvironment, \t\t\tCompletionRequestor requestor, \t\t\tMap settings, \t\t\tIJavaProject javaProject, \t\t\tWorkingCopyOwner owner, \t\t\tIProgressMonitor monitor)", "diff": ["+\t\tthis.sourceLevel = javaProject.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\tthis.complianceLevel = javaProject.getOption(JavaCore.COMPILER_COMPLIANCE, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25eb970e64d87c81c10d58b3bc37122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "535178e6ff3c7be5f5cdc90d8a470557840e3a3e", "commitAfterChange": "cdbb23d25684170107e611f9ad2770f482d2dd3b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private static void buildFilesForRecoveryTemplates( \tString indexFilename, \tString templatesFilename, \tchar[] newTerminalIndex, \tchar[] newNonTerminalIndex, \tString[] newName, \tchar[] newLhs, \tString[] tokens) throws IOException", "signatureAfterChange": " private static void buildFilesForRecoveryTemplates( \tString indexFilename, \tString templatesFilename, \tchar[] newTerminalIndex, \tchar[] newNonTerminalIndex, \tString[] newName, \tchar[] newLhs, \tString[] tokens)", "diff": ["-\tString[] tokens) throws IOException {", "+\tString[] tokens) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28c3e80f10f8771d9cdf7d3501ade2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b49d561020d10002b6ddc1f793743b3d47408d93", "commitAfterChange": "61d2e9bd09460e9985288e8ef72cfc838f3c761c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void enterMemberAlignment(Alignment alignment)", "signatureAfterChange": "  \tpublic void enterMemberAlignment(Alignment alignment)", "diff": ["+\t\talignment.location.lastLocalDeclarationSourceStart = this.formatter.lastLocalDeclarationSourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29c99ef26c5dd47745e3adfb701f5a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "d26bd96cc9e1c9e59f2c9d083b9a2725de90852a", "commitAfterChange": "8b048c313a1c6f07bac23f1c84c9ba7d1df315ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected int resolveLevelForType(TypeBinding typeBinding)", "signatureAfterChange": " protected int resolveLevelForType(TypeBinding typeBinding)", "diff": ["+\t\t\tthis.pattern.wildcards,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2c5fbb033100bb48528278205c3efda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test0009() throws JavaModelException", "signatureAfterChange": " \tpublic void test0009() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2cd068eda5c699be0c49a8c983ecbe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getIndex()", "signatureAfterChange": "  \tpublic Expression getIndex()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d0010dbfa65d3656319621a542c015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "8c257f407da3168f528da10142cc5a6786c803d6", "commitAfterChange": "1505d6b4655f1428d6059c29c9d919c21116a2ec", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-", "-\t\tif ((refType.isPrivate() || refType.isLocalType()) && !scope.isDefinedInType(refType)) {", "+\t\t// ignore references insing Javadoc comments", "+\t\tif ((this.bits & ASTNode.InsideJavadoc) ==0 &&", "+\t\t\t\t(refType.isPrivate() || refType.isLocalType()) && !scope.isDefinedInType(refType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2e9fd5c89af0aed5e72c766596183a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " private boolean isAffectedByPackageFragmentRoot(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " private boolean isAffectedByPackageFragmentRoot(IJavaElementDelta delta, IJavaElement element)", "diff": ["-\t\t\t\t\t\t\tIClasspathEntry[] classpath = javaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\t\t\t\tIClasspathEntry[] classpath = javaProject.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3077931685c3703cb3b4d068e4f2ca0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "204dbb0f962baec45cc155adc0f25897806fc936", "commitAfterChange": "8d7962f9f430b3236797be4f077716228c08370e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\t\t\tboolean generateCurrentLocalVar = (local.useFlag == LocalVariableBinding.USED && (local.constant == Constant.NotAConstant));", "+\t\t\t\tboolean generateCurrentLocalVar = (local.useFlag == LocalVariableBinding.USED && !local.isConstantValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e308147379573ae7a7f52ee679dbd55a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " \tpublic void test0713() throws JavaModelException", "signatureAfterChange": " \tpublic void test0713() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e317d18a73b4e45ea3db6dccd024fc9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DeleteTests.java", "commitBeforeChange": "e7fbe3d2e46c3f4c5a40be9178ef6e8a36680f90", "commitAfterChange": "01f17876d50bd632100cd19774bf74ad112ea3f6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testDeleteFieldWithCancel() throws JavaModelException, IOException, CoreException", "signatureAfterChange": " public void testDeleteFieldWithCancel() throws CoreException", "diff": ["-public void testDeleteFieldWithCancel() throws JavaModelException, IOException, CoreException {", "-\tcreateFile(", "-\t\t\"P/X.java\",", "-\t\t\"public class X {\\n\" +", "-\t\t\"  int field;\\n\" +", "-\t\t\"}\"", "-\t);", "-\tICompilationUnit cu = getCompilationUnit(\"P/X.java\");", "-\tIField field = cu.getType(\"X\").getField(\"field\");", "+public void testDeleteFieldWithCancel() throws CoreException {", "+\t\tcreateFile(", "+\t\t\t\"P/X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"  int field;\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tICompilationUnit cu = getCompilationUnit(\"P/X.java\");", "+\t\tIField field = cu.getType(\"X\").getField(\"field\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31e2b6755e751d8fc44bdfdaf5e7056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 223, "signatureBeforeChange": " \tpublic void test0221() throws JavaModelException", "signatureAfterChange": " \tpublic void test0221() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e331f2d7f9f8c2f0fb411a05aca834f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   public void testCompletionPrefixFieldName2() throws JavaModelException", "signatureAfterChange": "   public void testCompletionPrefixFieldName2() throws JavaModelException", "diff": ["-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE +R_NON_STATIC),", "+\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3805ddc593d8ccdeae4ca018912ee0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 303, "methodNumberAfterChange": 311, "signatureBeforeChange": " public void test231_sourcepath_vs_classpath()", "signatureAfterChange": " public void test231_sourcepath_vs_classpath()", "diff": ["-\t\tfalse /* shouldFlushOutputDirectory */);", "+\t\tfalse /* shouldFlushOutputDirectory */,", "+\t\tnull /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e382e4606b1f8d5cf7609821f4451cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": " \tpublic void test0180() throws JavaModelException", "signatureAfterChange": " \tpublic void test0180() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3889815998e60523c9415d3fae7edc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test0453() throws JavaModelException", "signatureAfterChange": " \tpublic void test0453() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39380fe5547ba2fd45173fbb1b62caa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "cc44d533509199a22dee3cb03412b30282a18add", "commitAfterChange": "dee23bd4f5a65ed282a3f4a7e19b637fd72cfc3b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "signatureAfterChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "diff": ["+\t\t\tif ((referenceBinding.tagBits & TagBits.HasMissingType) != 0 && !this.isRecoveringBindings) {", "+\t\t\t\treturn null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39522214c9ff1efcbe03a2167751d5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterJavadocDontIndentTagsDescriptionTests.java", "commitBeforeChange": "c06f9af8601b57efefc26206714b09ea6019dd0e", "commitAfterChange": "5ea115fe8e6cecfd274e1f47f1ed0f1d3b207a51", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  DefaultCodeFormatter codeFormatter()", "signatureAfterChange": "  DefaultCodeFormatter codeFormatter()", "diff": ["-\tDefaultCodeFormatterOptions preferences = DefaultCodeFormatterOptions.getEclipseDefaultSettings();", "-\tpreferences.comment_indent_parameter_description = false; // Eclipse default is true", "-\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(preferences);", "+\tthis.preferences.comment_indent_parameter_description = false; // Eclipse default is true", "+\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(this.preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b8c2b8dd042068d685e51905dbaa5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "bdfcbb6fac28ce2d615a792c6b96756fd4d8d082", "commitAfterChange": "d285a739d23e3f82b667be77d5bebf56b7f90214", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic abstract void moveToNextFile() throws IOException;", "signatureAfterChange": " \tpublic abstract void moveToNextFile();", "diff": ["-\tpublic abstract void moveToNextFile() throws IOException;", "+\tpublic abstract void moveToNextFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b9fdf8fdcc200d904710885144b1a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic void test0115() throws JavaModelException", "signatureAfterChange": " \tpublic void test0115() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d6a04a71e83d837faccfe00d4df3c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "660853596ad86f46d48cf8113dfaa868caccad1b", "commitAfterChange": "fd58e9ded6b0767fd2d0c5aa4edb418354ecfa05", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals, boolean assertMode)", "signatureAfterChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals, int sourceLevel)", "diff": ["-public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals, boolean assertMode) {", "+public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals, int sourceLevel) {", "-\tthis.assertMode = assertMode;", "+\tthis.assertMode = CompilerOptions.JDK1_4 == sourceLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3dbf80e67e341a42a74c883ac9e09bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public void test051() throws JavaModelException", "signatureAfterChange": "  public void test051() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+\"25}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3f48f32e1b09111a9b249eecce4797a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler6()", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler6()", "diff": ["-\t\tStandardJavaFileManager manager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\tStandardJavaFileManager manager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "-\t\tCompilationTask task = Compiler.getTask(null, manager, compilerInvocationDiagnosticListener, options, null, units);", "+\t\tCompilationTask task = compiler.getTask(null, manager, compilerInvocationDiagnosticListener, options, null, units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e404cae82ace1facb26d9cda1aa22362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/CopyResourceTests.java", "commitBeforeChange": "58dc232e4ac3a587a92cd50ddedf4e70cf15b87c", "commitAfterChange": "0f8bf95b28597d0788e1eda7d91af08e7d01c982", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testProjectWith2SrcBin()", "signatureAfterChange": "  \tpublic void testProjectWith2SrcBin()", "diff": ["-\t\tenv.addFile(src2, \"zzz.txt\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath p = env.addFolder(src2, \"p\"); //$NON-NLS-1$", "+\t\tenv.addFile(p, \"p.txt\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tprojectPath.append(\"src2/zzz.txt\"), //$NON-NLS-1$", "-\t\t\tprojectPath.append(\"bin/zzz.txt\") //$NON-NLS-1$", "+\t\t\tprojectPath.append(\"src2/p/p.txt\"), //$NON-NLS-1$", "+\t\t\tprojectPath.append(\"bin/p/p.txt\") //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e416fdb439e0b5296fb816f32617a005", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "7fab2569b41d6c3c1b92870c0dc97c413b84c5cc", "commitAfterChange": "1ede5db942dab56847266219887a4967d7979998", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Map getOptions()", "signatureAfterChange": " public Map getOptions()", "diff": ["+\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e418fb8111b15bfcbc29df1e80bf486a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.resolvedType = lhsType.capture(scope, this.lhs.sourceEnd); // make it unique, `this' shares source end with 'this.expression'.", "+\t\tthis.resolvedType = lhsType.capture(scope, this.lhs.sourceStart, this.lhs.sourceEnd); // make it unique, `this' shares source end with 'this.expression'."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41f3c8706a746960b6bd152636b7fd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter16Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tthis.ast = AST.newAST(AST.JLS3_INTERNAL);", "+\t\tthis.ast = AST.newAST(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4248c129d5f7fe691fec6207245dcae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " final public void getstatic(FieldBinding fieldBinding)", "signatureAfterChange": " final public void getstatic(FieldBinding fieldBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tgetstatic:\"+fieldBinding); //$NON-NLS-1$", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e446991537561b01d12f853999009fb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic void test0091() throws JavaModelException", "signatureAfterChange": " \tpublic void test0091() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4476014228a4d87f1a1c63d556ec893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration getParameter()", "signatureAfterChange": "  \tpublic SingleVariableDeclaration getParameter()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e451be616ec64d24bbb90ed9c7300b6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Statement getElseStatement()", "signatureAfterChange": "  \tpublic Statement getElseStatement()", "diff": ["-\t\treturn optionalElseStatement;", "+\t\treturn this.optionalElseStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e495d4bcc974de0bd6cb19cfd7441142", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 404, "methodNumberAfterChange": 404, "signatureBeforeChange": " \tpublic void test386()", "signatureAfterChange": " \tpublic void test386()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a0453ace6a8d228864f7cfab70d171", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void performCompilation() throws InvalidInputException", "signatureAfterChange": " \tpublic void performCompilation() throws InvalidInputException", "diff": ["-\t\tcompilerOptions.setVerboseMode(verbose);", "-\t\tcompilerOptions.produceReferenceInfo(produceRefInfo);", "+\t\tcompilerOptions.setVerboseMode(this.verbose);", "+\t\tcompilerOptions.produceReferenceInfo(this.produceRefInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4b59cf4e984725048ec461550b25586", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "380351f862dc90cd086c09262c15b064abc84e95", "commitAfterChange": "8417005702ab0f2abab8acae1f167a4d3fc26189", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected static String getConverterJCLPath()", "signatureAfterChange": "  \tprotected String getConverterJCLPath()", "diff": ["-\tprotected static String getConverterJCLPath() {", "-\t\treturn AbstractJavaModelTests.EXTERNAL_JAR_DIR_PATH + File.separator + \"converterJclMin.jar\"; //$NON-NLS-1$", "+\tprotected String getConverterJCLPath() {", "+\t\treturn getExternalPath() + File.separator + \"converterJclMin.jar\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d2d67976c976ffde65b8bc3143a7b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "1745fe20399b6a7284c025a8e1750403718486c9", "commitAfterChange": "40b177ed1cffb3406a990cdf2a508e3f3e6fc42f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tscope.problemReporter().undocumentedEmptyBlock(finallyBlock);", "+\t\t\t\t\tscope.problemReporter().undocumentedEmptyBlock(finallyBlock.sourceStart, finallyBlock.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d6cebd31ddb9e0177f8eb62c485103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/IPackageFragmentRoot.java", "commitBeforeChange": "3753b28bebe99ff942eee6c541786e0784acbee4", "commitAfterChange": "845fe9b3262f9598e5da1c298b86780faa03ed8b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tIPath getPath();", "signatureAfterChange": "\r IClasspathEntry getRawClasspathEntry() throws JavaModelException;", "diff": ["-\t */\r", "-\tIPath getPath();\r", "+ */\r", "+IClasspathEntry getRawClasspathEntry() throws JavaModelException;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ed9c3a8db090589fcbe5bcd8f8e466", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " \tpublic void test0201() throws JavaModelException", "signatureAfterChange": " \tpublic void test0201() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f2d111a0b6bb224847dc91e7410747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15JLS4Test.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " \tpublic void test0349() throws JavaModelException", "signatureAfterChange": " \tpublic void test0349() throws JavaModelException", "diff": ["-\t\t\tAST.JLS3,", "+\t\t\tAST.JLS3_INTERNAL,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50187a27af626500924572c64b71354", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " \tpublic void test0192() throws JavaModelException", "signatureAfterChange": " \tpublic void test0192() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5130d750edecd5e3a1241ecfd8bfed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "2634dfbc7c43218086ff593a2618892891d57559", "commitAfterChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\t\t? this // enum constant is implicitly of declaring enum type", "+\t\t\t\t\t\t? initializationScope.convertToRawType(this) // enum constant is implicitly of declaring enum type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e51d12d02987228aab2bb8fc8a0258b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 141, "signatureBeforeChange": " final public void if_icmpne(Label lbl)", "signatureAfterChange": " final public void if_icmpne(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_iacmpne:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5302ae019170f5d0bcb3e415798657b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "4603474ad1144ef28f479c2cb0269bbc10e24898", "commitAfterChange": "1fda88770408371beaeaafdec7d9be6b39cd42f5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["-\t\t", "-\t\tJavaModelManager.getJavaModelManager().deltaProcessor.addForRefresh(JavaCore.create(javaBuilder.currentProject));", "-\t\t", "+\t\tJavaModelManager.getJavaModelManager().deltaProcessor.addForRefresh(javaBuilder.javaProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5327c15902669273d4f2709ac9de976", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0512() throws JavaModelException", "signatureAfterChange": " \tpublic void test0512() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e548b8e7db317dec835c18105f2b8ded", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tprotected IJavaProject setUpJavaProject(final String projectName, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected IJavaProject setUpJavaProject(final String projectName, String compliance) throws CoreException, IOException", "diff": ["-\t\t\t\t\tclasspath[i] = JavaCore.newVariableEntry(new Path(\"JCL15_LIB\"), new Path(\"JCL15_SRC\"), entry.getSourceAttachmentRootPath(), entry.getInclusionPatterns(), entry.getExclusionPatterns(), entry.isExported());", "+\t\t\t\t\tclasspath[i] = JavaCore.newVariableEntry(new Path(\"JCL15_LIB\"), new Path(\"JCL15_SRC\"), entry.getSourceAttachmentRootPath(), entry.getAccessibleFiles(), entry.getNonAccessibleFiles(), entry.isExported());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e586101ecb87b82de3d47fb57591853c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "diff": ["-\t\taddMarker(_env.getFile(), start, node.getLength() + start, IMarker.SEVERITY_INFO, msg, line );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Info, msg, line );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e59c368037ddc8fa512227b69ae5d39f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testRemoveType() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemoveType() throws JavaModelException, CoreException", "diff": ["-public void testRemoveType() throws JavaModelException, CoreException, IOException {", "+public void testRemoveType() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5abd563fb1088615fb50c87206e1680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 579, "signatureBeforeChange": " \tpublic void test560()", "signatureAfterChange": " \tpublic void test560()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b091924d5928a548604385dbbe9e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "a2ae3e117eaea10fecaf3678af5938ffa98d76f4", "commitAfterChange": "71ab6b3956db9fea4a8f81e891e05ac4d44d96d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tcondLoopContext.complainOnFinalAssignmentsInLoop(currentScope, postCondInfo);\r", "+\t\tcondLoopContext.complainOnFinalAssignmentsInLoop(currentScope, postCondInfo);\r", "-\t\tif ((actionInfo == FlowInfo.DeadEnd) || actionInfo.isFakeReachable()){\r", "-\t\t\tif ((loopingContext.initsOnContinue == FlowInfo.DeadEnd) || loopingContext.initsOnContinue.isFakeReachable()){\r", "+\t\tif (((actionInfo == FlowInfo.DeadEnd) || actionInfo.isFakeReachable())\r", "+\t\t\t&& ((loopingContext.initsOnContinue == FlowInfo.DeadEnd) || loopingContext.initsOnContinue.isFakeReachable())){\r", "-\t\t\t} else {\r", "-\t\t\t\tloopingContext.complainOnFinalAssignmentsInLoop(currentScope, loopingContext.initsOnContinue);\t\t\t\t\r", "-\t\t\t}\r", "+\t\t\tcondLoopContext.complainOnFinalAssignmentsInLoop(currentScope, postCondInfo);\r", "-\t}\t\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5bc3430b0bc192def47999cea03ba0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "65bc58d731b2b7495611004f31fbf68869bf0c34", "commitAfterChange": "a618dea008dd005a2062d94159d61d7900b021b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] sourceUnits, String[] bindingKeys)", "signatureAfterChange": " \tprotected void beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] sourceUnits, String[] bindingKeys)", "diff": ["-\t\t\tBindingKey bindingKey = new BindingKey(bindingKeys[i]);", "-\t\t\tCompilationUnitDeclaration parsedUnit = bindingKey.getCompilationUnitDeclaration(this.lookupEnvironment);", "+\t\t\tBindingKey bindingKey = new BindingKey(bindingKeys[i], this);", "+\t\t\tCompilationUnitDeclaration parsedUnit = bindingKey.getCompilationUnitDeclaration();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5be98831996aa4c8899f38f79539b65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 251, "signatureBeforeChange": " \tpublic void test0249() throws JavaModelException", "signatureAfterChange": " \tpublic void test0249() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c97532e4ae50257de74e4dfc6a4192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BooleanLiteral.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d49f02aae5d61c754146d14032d72c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getThenExpression()", "signatureAfterChange": "  \tpublic Expression getThenExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f9294f4de57c86fc833bc3de72cff1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "bc564ebf6087096287b687b551504795d682b469", "commitAfterChange": "d5c10d2d7223b30bd18f63015dde9c406b66baa7", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void duplicateInitializationOfFinalLocal(LocalVariableBinding local, AstNode location)", "signatureAfterChange": " public void duplicateInitializationOfFinalLocal(LocalVariableBinding local, AstNode location)", "diff": ["-\t\tlocal.isBlankFinal() ? IProblem.DuplicateFinalLocalInitialization : IProblem.NonBlankFinalLocalAssignment,", "+\t\tIProblem.DuplicateFinalLocalInitialization,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e606e90f4e924496f426685f8652634f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "diff": ["-\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "+\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61b5bc886ead60eab466fbe8bcb844c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "a1346ff4af9450fe23ebd3f838bb71f9f06fe1a7", "commitAfterChange": "f9b52452a6eec9c220cdefd5d9ba6d84c588b191", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": " \t \tpublic void resetNonChainingJarsCache()", "signatureAfterChange": " \t \tpublic void resetNonChainingJarsCache()", "diff": ["-\t\tthis.nonChainingJars = null;", "+\t\tif (this.nonChainingJars != null) ", "+\t\t\tthis.nonChainingJars.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6257ba3dd1b2d0aa3fa4b7b565cfe1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "commitAfterChange": "fcccc4dd1377e549112e0bdc9a74b0eb625c6ab2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private int htmlTagIndex(char[] htmlTag)", "signatureAfterChange": " private int htmlTagIndex(char[] htmlTag)", "diff": ["-\t\t\tif (htmlTag[0] == tag[0] && length == tag.length && CharOperation.equals(htmlTag, tag, false)) {", "+\t\t\tif (length == tag.length && CharOperation.equals(htmlTag, tag, false)) {", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e627cc5bd8db4daf9df2f70fab1b91c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void test0003() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0003() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e62b89221fd3e0337e46032f371511b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "01fe9b211e794ff01834ebe0e40bd02cb1110d75", "commitAfterChange": "58c4c99d95f495c1408134b2cc53ce1127ec5a07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tTryStatement tryStatement, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "signatureAfterChange": " public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tTryStatement tryStatement, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "diff": ["+\tunconditionalCopy.tagBits |= FlowInfo.UNROOTED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63e1c3bbfff715e6928cfa4cff858e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/PrefixExpression.java", "commitBeforeChange": "5b6dd37b3f6594fcb6694566bc7450985b1bde55", "commitAfterChange": "cd2b61036e3927f1fe000c47bcd4c2b236df73f6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String operatorToString()", "signatureAfterChange": "  public String operatorToString()", "diff": ["-", "-\tpublic String operatorToString() {", "-", "-\t\tswitch (operator) {", "-\t\t\tcase PLUS :", "-\t\t\t\treturn \"++\"; //$NON-NLS-1$", "-\t\t\tcase MINUS :", "-\t\t\t\treturn \"--\"; //$NON-NLS-1$", "-\t\t} ", "-\t\treturn \"unknown operator\"; //$NON-NLS-1$", "-\t}", "+public String operatorToString() {", "+\tswitch (this.operator) {", "+\t\tcase PLUS :", "+\t\t\treturn \"++\"; //$NON-NLS-1$", "+\t\tcase MINUS :", "+\t\t\treturn \"--\"; //$NON-NLS-1$", "+\treturn \"unknown operator\"; //$NON-NLS-1$", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e66ffcd2a276a621fac368b3f7e3f633", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 231, "signatureBeforeChange": " public void testEnum04() throws CoreException", "signatureAfterChange": " \tpublic void testEnum04() throws CoreException", "diff": ["-}", "-public void testEnum04() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch15\", \"src\", \"e1\", \"T.java\").getType(\"T\");", "-\tIMethod method = type.getMethod(\"age\", new String[0]);", "-\tsearch(method, REFERENCES, getJavaSearchScope15(), this.resultCollector);", "-\tassertSearchResults(", "-\t\t\"src/e1/X.java void e1.X.main(String[]) [age()]\",", "-\t\tthis.resultCollector);", "-}", "+\t}", "+\tpublic void testEnum04() throws CoreException {", "+\t\tIType type = getCompilationUnit(\"JavaSearch15\", \"src\", \"e1\", \"Team.java\").getType(\"Team\");", "+\t\tIMethod method = type.getMethod(\"age\", new String[0]);", "+\t\tsearch(method, REFERENCES, getJavaSearchScope15(\"e1\", false), this.resultCollector);", "+\t\tassertSearchResults(", "+\t\t\t\"src/e1/Test.java void e1.Test.main(String[]) [age()]\",", "+\t\t\tthis.resultCollector);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6707df177348361aa9bdc51167e3f3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "bdd661ede446c1c3bdc76fd684c8f024821af3ac", "commitAfterChange": "0db27b507a6968d4fb2f769e63fcd5182f023962", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tif (JavaModelManager.VERBOSE){", "+\tif (JavaModelCache.VERBOSE){", "-\tif (JavaModelManager.VERBOSE) {", "-\t\tSystem.out.println(JavaModelManager.getJavaModelManager().cache.toStringFillingRation(\"-> \")); //$NON-NLS-1$", "+\tif (JavaModelCache.VERBOSE) {", "+\t\tSystem.out.println(JavaModelManager.getJavaModelManager().cacheToString(\"-> \")); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e682b6dd0ec702c432041c286e3d093b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test0038() throws JavaModelException", "signatureAfterChange": " \tpublic void test0038() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6992a3fb3ded12d616903bdfd8d2d28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRef.java", "commitBeforeChange": "c0fb6d2b67dfdf597d878261fa4ba21d4a23918e", "commitAfterChange": "7c71bd67364ddd3b380d51d2f4e9afb3c139dbb2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\treturn optionalQualifier;", "+\t\treturn this.optionalQualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b6b1b1ed042cc58a810a3e989f97b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "8abd75076e932cee4c42294e09e5c3451d79df9f", "commitAfterChange": "e864d30567ba5eac714ba35046546cbeb9eaf23a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void startQuery() throws IOException", "signatureAfterChange": " public void startQuery()", "diff": ["-public void startQuery() throws IOException {", "+public void startQuery() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6c8e1ab007bf75782f0161f6455871c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "diff": ["-\t    final int line = scribe.line;", "+\t    final int line = this.scribe.line;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6cba9a9558a585c537e14064ee579ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.resolvedType = castType.capture(scope, this.type.sourceEnd); // make it unique, a cast expression shares source end with the expression.", "+\t\tthis.resolvedType = castType.capture(scope, this.type.sourceStart, this.type.sourceEnd); // make it unique, a cast expression shares source end with the expression."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6e2427f6f968c024e1d33dd01ee49a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public IJavaElement getWorkingCopy() throws JavaModelException", "signatureAfterChange": " public IJavaElement getWorkingCopy() throws JavaModelException", "diff": ["-\treturn this.getWorkingCopy(null, null, null);", "+\treturn getWorkingCopy(new DefaultWorkingCopyOwner(), null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e711cde39b5b5807eb474535c3f4060c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "bdce8da9f757d6b76794f509f77a703bf05199f8", "commitAfterChange": "2a151eb41be773ba8e53248cc8da5c85a5bc6fca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int getRootKind()", "signatureAfterChange": " public int getRootKind()", "diff": ["-\treturn fRootKind;", "+\treturn this.fRootKind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e718440626935ca555eed2180f58b923", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "c0727764c7745f2e76ecba317b98c9848fa2e099", "commitAfterChange": "df861f983af4902bdf37c7b1df21d759f350bf91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void createInitialConstraintsForParameters(TypeBinding[] parameters, boolean checkVararg, TypeBinding varArgsType, MethodBinding method)", "signatureAfterChange": " \tpublic void createInitialConstraintsForParameters(TypeBinding[] parameters, boolean checkVararg, TypeBinding varArgsType, MethodBinding method)", "diff": ["-\t\t\t\t\tif (varArgsType.isPertinentToApplicability(this.invocationArguments[i].resolvedType, method))", "+\t\t\t\t\tif (varArgsType.isPertinentToApplicability(this.invocationArguments[i], method))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7847792e609a7638fa9b1daaa8bd8a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 140, "signatureBeforeChange": " final public void if_icmplt(Label lbl)", "signatureAfterChange": " final public void if_icmplt(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_iacmplt:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e78a3ddec0489164c786d55afa508438", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "commitAfterChange": "0bbfe267fb7eaaa77628088e8cdbd841ddb40de5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tCompilationUnit copy = (CompilationUnit) elementsToProcess[0];", "+\t\t\tCompilationUnit copy = (CompilationUnit) this.elementsToProcess[0];", "-\t\t\tString result = processElement(unit, positions, bufferContents);", "+\t\t\tString result = processElement(unit, this.positions, bufferContents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a7dad861f197d236c83b46b043cc36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic boolean isConstructor()", "signatureAfterChange": "  \tpublic boolean isConstructor()", "diff": ["-\t\treturn isConstructor;", "+\t\treturn this.isConstructor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7aa0e2bc39177b3ae1f3c3feab4f53e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaIndexTests.java", "commitBeforeChange": "8e69d36fa08db2d61d2c40fecd2494cfd19819f5", "commitAfterChange": "3c9fcd486312b0a7ab40ed5ba3b6e46d9bce5dc9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void _testIndexInJar() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testIndexInJar() throws IOException, CoreException", "diff": ["-\tpublic void _testIndexInJar() throws IOException, CoreException {", "+\tpublic void testIndexInJar() throws IOException, CoreException {", "-\t\t\tString url = \"jar:file:/\"+indexZipPath+\"!/Test.index\";", "+\t\t\tString url = \"jar:file:\"+indexZipPath+\"!/Test.index\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7f052481b6395221baa6c600837d1ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "8238d4886dd5cc2d15b3226c07195562e9c81134", "commitAfterChange": "d1facd69b9dc2127e7162415007081afa0f4348b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tTypeBound(InferenceVariable inferenceVariable, TypeBinding typeBinding, int relation, boolean isSoft)", "signatureAfterChange": " \t \tTypeBound(InferenceVariable inferenceVariable, TypeBinding typeBinding, int relation, boolean isSoft)", "diff": ["-\t\tthis.right = typeBinding != null && typeBinding.isLocalType() ? typeBinding.superclass() : typeBinding;", "+\t\tthis.right = safeType(typeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e830d661ed2a258a07f1e1e4fa0dbe03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "53e59f4bd82e02ab18d570f640623d6567762067", "commitAfterChange": "83c109b7c53737ef4619646925b9d4265eb983d8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(TypeDeclaration typeDeclaration, CompilationUnitScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(TypeDeclaration typeDeclaration, CompilationUnitScope scope)", "diff": ["+\t\tSourceTypeBinding binding = typeDeclaration.binding;", "+\t\tif (binding == null) {", "+\t\t\treturn false;", "+\t\t}", "-\t\t\t\t\ttypeDeclaration.binding);", "+\t\t\t\t\tbinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83a9f34ebfbd60bbbd208608b7ea3a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "commitAfterChange": "f4ce5d0871ae5b2feb7ff00a70363bf6ccf8013f", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 563, "signatureBeforeChange": " \tpublic void test544()", "signatureAfterChange": " \tpublic void test544()", "diff": ["+        preferences.tab_char = DefaultCodeFormatterOptions.SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8673850317e50310fd645576673bfc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 334, "methodNumberAfterChange": 334, "signatureBeforeChange": " \tpublic void test0332() throws JavaModelException", "signatureAfterChange": " \tpublic void test0332() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e0072403303f89a10a53224d2cd116", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "6d9cd9b246f8b8740f4a501085a32633b2b6c2af", "commitAfterChange": "470afdfff602b441f9a45a7d903230534423c9ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t\t\t&& (method.hasSubstitutedParameters() || method.hasSubstitutedReturnType());", "+\t\t\t\t&& method.hasSubstitutedParameters();", "-\t\t\t\tif (paramMethod.isUnchecked || (paramMethod.isRaw && (method.hasSubstitutedParameters() || method.hasSubstitutedReturnType()))) {", "+\t\t\t\tif (paramMethod.isUnchecked || (paramMethod.isRaw && method.hasSubstitutedParameters())) {", "-\t\t} else if (!method.isStatic() && !receiverType.isUnboundWildcard() && method.declaringClass.isRawType() && (method.hasSubstitutedParameters() || method.hasSubstitutedReturnType())) {", "+\t\t} else if (!method.isStatic() && !receiverType.isUnboundWildcard() && method.declaringClass.isRawType() && method.hasSubstitutedParameters()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91bf2a41bb202eb2108afb9e0469a5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic void testBug99507b() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug99507b() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94c42f1c1de3b58b7cc343d3ad336c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 256, "signatureBeforeChange": " \tpublic void test0254() throws JavaModelException", "signatureAfterChange": " \tpublic void test0254() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95292caf068f5b6d15075ed3f8b89d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "d6e67d4c8518637d8a6205904d99263fcf72b512", "commitAfterChange": "25c3603d7bf5d103d47b791d11767b16968f4a1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic EclipseFileManager(Main eclipseCompiler, Locale locale, Charset charset)", "signatureAfterChange": " \t \tpublic EclipseFileManager(Main eclipseCompiler, Locale locale, Charset charset)", "diff": ["-\t\t\tthis.setLocation(StandardLocation.CLASS_PATH, getDefaultClasspath());", "+\t\t\tIterable<? extends File> defaultClasspath = getDefaultClasspath();", "+\t\t\tthis.setLocation(StandardLocation.CLASS_PATH, defaultClasspath);", "+\t\t\tthis.setLocation(StandardLocation.ANNOTATION_PROCESSOR_PATH, defaultClasspath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e969c8e2dffc6a731024e0c573339767", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testMethodWithError2() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError2() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.reconcile(false, false, null, null);", "+\tthis.workingCopy.reconcile(0, false, null, null);", "-\tthis.workingCopy.reconcile(false, true, null, null);", "+\tthis.workingCopy.reconcile(0, true, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96c29f3f8908f34fc99e07b41ded7c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "31e3c66a70e3c9b69b47c38f0b44d65cff7cbfa3", "commitAfterChange": "09d36d761ce96d68639981e72856240cb8764441", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " public void initializeScanner()", "signatureAfterChange": " public void initializeScanner()", "diff": ["-\t\tthis.assertMode /*assert*/, ", "+\t\tthis.sourceLevel /*sourceLevel*/, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9815077a3af724c5d07aff30f33be6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 207, "signatureBeforeChange": " public void javadocErrorNoMethodFor(MessageSend messageSend, TypeBinding recType, TypeBinding[] params, int modifiers)", "signatureAfterChange": " public void javadocErrorNoMethodFor(MessageSend messageSend, TypeBinding recType, TypeBinding[] params, int modifiers)", "diff": ["-\tif (javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, modifiers)) {", "+\tif (javadocVisibility(customOptions().reportInvalidJavadocTagsVisibility, modifiers)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9994a669845c8a7bbc4756a99991876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "ade65879bcc318ee2ef3fe6276d005079a502d04", "commitAfterChange": "22d2b3ab7be6911d91ce91c7b1626852dd4f034d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\tpublic int compare(Viewer viewer, Object e1, Object e2)", "signatureAfterChange": " \t\t@SuppressWarnings(\"unchecked\" \t\tpublic int compare(Viewer viewer, Object e1, Object e2)", "diff": ["-\tprivate static class ProcessorOptionSorter extends ViewerSorter {", "+\tprivate static class ProcessorOptionSorter extends ViewerComparator {", "+\t\t@SuppressWarnings(\"unchecked\") // getComparator() returns a raw Comparator rather than a Comparator<T>", "-\t\t\treturn collator.compare(((ProcessorOption) e1).key, ((ProcessorOption) e2).key);", "+\t\t\treturn getComparator().compare(((ProcessorOption) e1).key, ((ProcessorOption) e2).key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a35d77e302f4da588061701b60e4df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " \tpublic void test0534() throws JavaModelException", "signatureAfterChange": " \tpublic void test0534() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bbdf903b17ed1398c9416b4f2d5685", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": "\r \r \tprotected void consumeToken(int type)", "signatureAfterChange": "\r protected void consumeToken(int type)", "diff": ["-\r", "-\tprotected void consumeToken(int type) {\r", "-\t\t/* remember the last consumed value */\r", "-\t\t/* try to minimize the number of build values */\r", "-\r", "-\t\t//System.out.println(scanner.toStringAction(type));\r", "-\t\tswitch (type) {\r", "-\r", "-\t\t\tcase TokenNameIdentifier :\r", "-\t\t\t\tpushIdentifier();\r", "-\t\t\t\tbreak;\r", "-\r", "-\t\t\tcase TokenNameinterface :\r", "-\t\t\t\tadjustInterfaceModifiers();\r", "-\t\t\t\t//'class' is pushing an int (position) on the stack ==> 'interface' needs to do it too....\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\r", "-\t\t\tcase TokenNameabstract :\r", "-\t\t\t\tcheckAndSetModifiers(AccAbstract);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamestrictfp :\r", "-\t\t\t\tcheckAndSetModifiers(AccStrictfp);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamefinal :\r", "-\t\t\t\tcheckAndSetModifiers(AccFinal);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamenative :\r", "-\t\t\t\tcheckAndSetModifiers(AccNative);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameprivate :\r", "-\t\t\t\tcheckAndSetModifiers(AccPrivate);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameprotected :\r", "-\t\t\t\tcheckAndSetModifiers(AccProtected);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamepublic :\r", "-\t\t\t\tcheckAndSetModifiers(AccPublic);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNametransient :\r", "-\t\t\t\tcheckAndSetModifiers(AccTransient);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamevolatile :\r", "-\t\t\t\tcheckAndSetModifiers(AccVolatile);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamestatic :\r", "-\t\t\t\tcheckAndSetModifiers(AccStatic);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamesynchronized :\r", "-\t\t\t\tcheckAndSetModifiers(AccSynchronized);\r", "-\t\t\t\tbreak;\r", "-\r", "-\t\t\t\t//==============================\r", "-\r", "-\t\t\tcase TokenNamevoid :\r", "-\t\t\t\tpushIdentifier(-T_void);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\t\t//push a default dimension while void is not part of the primitive\r", "-\t\t\t\t//declaration baseType and so takes the place of a type without getting into\r", "-\t\t\t\t//regular type parsing that generates a dimension on intStack\r", "-\r", "-\t\t\tcase TokenNameboolean :\r", "-\t\t\t\tpushIdentifier(-T_boolean);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamebyte :\r", "-\t\t\t\tpushIdentifier(-T_byte);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamechar :\r", "-\t\t\t\tpushIdentifier(-T_char);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamedouble :\r", "-\t\t\t\tpushIdentifier(-T_double);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamefloat :\r", "-\t\t\t\tpushIdentifier(-T_float);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameint :\r", "-\t\t\t\tpushIdentifier(-T_int);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamelong :\r", "-\t\t\t\tpushIdentifier(-T_long);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameshort :\r", "-\t\t\t\tpushIdentifier(-T_short);\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\r", "-\t\t\t\t//==============================\r", "-\r", "-\t\t\tcase TokenNameIntegerLiteral :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew IntLiteral(\r", "-\t\t\t\t\t\tscanner.getCurrentTokenSource(),\r", "-\t\t\t\t\t\tscanner.startPosition,\r", "-\t\t\t\t\t\tscanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameLongLiteral :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew LongLiteral(\r", "-\t\t\t\t\t\tscanner.getCurrentTokenSource(),\r", "-\t\t\t\t\t\tscanner.startPosition,\r", "-\t\t\t\t\t\tscanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameFloatingPointLiteral :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew FloatLiteral(\r", "-\t\t\t\t\t\tscanner.getCurrentTokenSource(),\r", "-\t\t\t\t\t\tscanner.startPosition,\r", "-\t\t\t\t\t\tscanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameDoubleLiteral :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew DoubleLiteral(\r", "-\t\t\t\t\t\tscanner.getCurrentTokenSource(),\r", "-\t\t\t\t\t\tscanner.startPosition,\r", "-\t\t\t\t\t\tscanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameCharacterLiteral :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew CharLiteral(\r", "-\t\t\t\t\t\tscanner.getCurrentTokenSource(),\r", "-\t\t\t\t\t\tscanner.startPosition,\r", "-\t\t\t\t\t\tscanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameStringLiteral :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew StringLiteral(\r", "-\t\t\t\t\t\tscanner.getCurrentTokenSourceString(),\r", "-\t\t\t\t\t\tscanner.startPosition,\r", "-\t\t\t\t\t\tscanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamefalse :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew FalseLiteral(scanner.startPosition, scanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNametrue :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew TrueLiteral(scanner.startPosition, scanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNamenull :\r", "-\t\t\t\tpushOnExpressionStack(\r", "-\t\t\t\t\tnew NullLiteral(scanner.startPosition, scanner.currentPosition - 1));\r", "-\t\t\t\tbreak;\r", "-\r", "-\t\t\t\t//============================\r", "-\t\t\tcase TokenNamesuper :\r", "-\t\t\tcase TokenNamethis :\r", "-\t\t\t\tendPosition = scanner.currentPosition - 1;\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameimport :\r", "-\t\t\tcase TokenNamepackage :\r", "-\t\t\tcase TokenNamethrow :\r", "-\t\t\tcase TokenNamenew :\r", "-\t\t\tcase TokenNamedo :\r", "-\t\t\tcase TokenNameif :\r", "-\t\t\tcase TokenNamefor :\r", "-\t\t\tcase TokenNameswitch :\r", "-\t\t\tcase TokenNametry :\r", "-\t\t\tcase TokenNamewhile :\r", "-\t\t\tcase TokenNamebreak :\r", "-\t\t\tcase TokenNamecontinue :\r", "-\t\t\tcase TokenNameclass :\r", "-\t\t\tcase TokenNamereturn :\r", "-\t\t\t\tpushOnIntStack(scanner.startPosition);\r", "-\t\t\t\tbreak;\r", "-\r", "-\t\t\t\t//let extra semantic action decide when to push\r", "-\r", "-\t\t\tcase TokenNamedefault :\r", "-\t\t\tcase TokenNameRBRACKET :\r", "-\t\t\tcase TokenNamePLUS_PLUS :\r", "-\t\t\tcase TokenNameMINUS_MINUS :\r", "-\t\t\tcase TokenNamePLUS :\r", "-\t\t\tcase TokenNameMINUS :\r", "-\t\t\tcase TokenNameNOT :\r", "-\t\t\tcase TokenNameTWIDDLE :\r", "-\t\t\t\tendPosition = scanner.startPosition;\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameRBRACE :\r", "-\t\t\tcase TokenNameSEMICOLON :\r", "-\t\t\t\tendStatementPosition = scanner.currentPosition - 1;\r", "-\t\t\t\tendPosition = scanner.startPosition - 1;\r", "-\t\t\t\t//the item is not part of the potential futur expression/statement\r", "-\t\t\t\tbreak;\r", "-\t\t\t\t// in order to handle ( expression) ////// (cast)expression///// foo(x)\r", "-\t\t\tcase TokenNameRPAREN :\r", "-\t\t\t\trParenPos = scanner.currentPosition - 1;\r", "-\t\t\t\t// position of the end of right parenthesis (in case of unicode \\u0029) lex00101\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase TokenNameLPAREN :\r", "-\t\t\t\tlParenPos = scanner.startPosition;\r", "-\t\t\t\tbreak;\r", "-\t\t\t\t//  case TokenNameQUESTION  :\r", "-\t\t\t\t//  case TokenNameCOMMA :\r", "-\t\t\t\t//  case TokenNameCOLON  :\r", "-\t\t\t\t//  case TokenNameEQUAL  :\r", "-\t\t\t\t//  case TokenNameLBRACKET  :\r", "-\t\t\t\t//  case TokenNameDOT :\r", "-\t\t\t\t//  case TokenNameERROR :\r", "-\t\t\t\t//  case TokenNameEOF  :\r", "-\t\t\t\t//  case TokenNamecase  :\r", "-\t\t\t\t//  case TokenNamecatch  :\r", "-\t\t\t\t//  case TokenNameelse  :\r", "-\t\t\t\t//  case TokenNameextends  :\r", "-\t\t\t\t//  case TokenNamefinally  :\r", "-\t\t\t\t//  case TokenNameimplements  :\r", "-\t\t\t\t//  case TokenNamethrows  :\r", "-\t\t\t\t//  case TokenNameinstanceof  :\r", "-\t\t\t\t//  case TokenNameEQUAL_EQUAL  :\r", "-\t\t\t\t//  case TokenNameLESS_EQUAL  :\r", "-\t\t\t\t//  case TokenNameGREATER_EQUAL  :\r", "-\t\t\t\t//  case TokenNameNOT_EQUAL  :\r", "-\t\t\t\t//  case TokenNameLEFT_SHIFT  :\r", "-\t\t\t\t//  case TokenNameRIGHT_SHIFT  :\r", "-\t\t\t\t//  case TokenNameUNSIGNED_RIGHT_SHIFT :\r", "-\t\t\t\t//  case TokenNamePLUS_EQUAL  :\r", "-\t\t\t\t//  case TokenNameMINUS_EQUAL  :\r", "-\t\t\t\t//  case TokenNameMULTIPLY_EQUAL  :\r", "-\t\t\t\t//  case TokenNameDIVIDE_EQUAL  :\r", "-\t\t\t\t//  case TokenNameAND_EQUAL  :\r", "-\t\t\t\t//  case TokenNameOR_EQUAL  :\r", "-\t\t\t\t//  case TokenNameXOR_EQUAL  :\r", "-\t\t\t\t//  case TokenNameREMAINDER_EQUAL  :\r", "-\t\t\t\t//  case TokenNameLEFT_SHIFT_EQUAL  :\r", "-\t\t\t\t//  case TokenNameRIGHT_SHIFT_EQUAL  :\r", "-\t\t\t\t//  case TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL  :\r", "-\t\t\t\t//  case TokenNameOR_OR  :\r", "-\t\t\t\t//  case TokenNameAND_AND  :\r", "-\t\t\t\t//  case TokenNameREMAINDER :\r", "-\t\t\t\t//  case TokenNameXOR  :\r", "-\t\t\t\t//  case TokenNameAND  :\r", "-\t\t\t\t//  case TokenNameMULTIPLY :\r", "-\t\t\t\t//  case TokenNameOR  :\r", "-\t\t\t\t//  case TokenNameDIVIDE :\r", "-\t\t\t\t//  case TokenNameGREATER  :\r", "-\t\t\t\t//  case TokenNameLESS  :\r", "-\r", "-\t\t}\r", "-\t}\r", "+}\r", "+protected void consumeToken(int type) {\r", "+\t/* remember the last consumed value */\r", "+\t/* try to minimize the number of build values */\r", "+\r", "+\t//System.out.println(scanner.toStringAction(type));\r", "+\tswitch (type) {\r", "+\r", "+\t\tcase TokenNameIdentifier :\r", "+\t\t\tpushIdentifier();\r", "+\t\t\tbreak;\r", "+\r", "+\t\tcase TokenNameinterface :\r", "+\t\t\tadjustInterfaceModifiers();\r", "+\t\t\t//'class' is pushing an int (position) on the stack ==> 'interface' needs to do it too....\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\r", "+\t\t\tbreak;\r", "+\r", "+\t\tcase TokenNameabstract :\r", "+\t\t\tcheckAndSetModifiers(AccAbstract);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamestrictfp :\r", "+\t\t\tcheckAndSetModifiers(AccStrictfp);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamefinal :\r", "+\t\t\tcheckAndSetModifiers(AccFinal);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamenative :\r", "+\t\t\tcheckAndSetModifiers(AccNative);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameprivate :\r", "+\t\t\tcheckAndSetModifiers(AccPrivate);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameprotected :\r", "+\t\t\tcheckAndSetModifiers(AccProtected);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamepublic :\r", "+\t\t\tcheckAndSetModifiers(AccPublic);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNametransient :\r", "+\t\t\tcheckAndSetModifiers(AccTransient);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamevolatile :\r", "+\t\t\tcheckAndSetModifiers(AccVolatile);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamestatic :\r", "+\t\t\tcheckAndSetModifiers(AccStatic);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamesynchronized :\r", "+\t\t\tcheckAndSetModifiers(AccSynchronized);\r", "+\t\t\tbreak;\r", "+\r", "+\t\t\t//==============================\r", "+\r", "+\t\tcase TokenNamevoid :\r", "+\t\t\tpushIdentifier(-T_void);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\r", "+\t\t\tbreak;\r", "+\t\t\t//push a default dimension while void is not part of the primitive\r", "+\t\t\t//declaration baseType and so takes the place of a type without getting into\r", "+\t\t\t//regular type parsing that generates a dimension on intStack\r", "+\r", "+\t\tcase TokenNameboolean :\r", "+\t\t\tpushIdentifier(-T_boolean);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamebyte :\r", "+\t\t\tpushIdentifier(-T_byte);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamechar :\r", "+\t\t\tpushIdentifier(-T_char);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamedouble :\r", "+\t\t\tpushIdentifier(-T_double);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamefloat :\r", "+\t\t\tpushIdentifier(-T_float);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameint :\r", "+\t\t\tpushIdentifier(-T_int);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamelong :\r", "+\t\t\tpushIdentifier(-T_long);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameshort :\r", "+\t\t\tpushIdentifier(-T_short);\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\t\t\t\t\t\r", "+\t\t\tbreak;\r", "+\r", "+\t\t\t//==============================\r", "+\r", "+\t\tcase TokenNameIntegerLiteral :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew IntLiteral(\r", "+\t\t\t\t\tscanner.getCurrentTokenSource(), \r", "+\t\t\t\t\tscanner.startPosition, \r", "+\t\t\t\t\tscanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameLongLiteral :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew LongLiteral(\r", "+\t\t\t\t\tscanner.getCurrentTokenSource(), \r", "+\t\t\t\t\tscanner.startPosition, \r", "+\t\t\t\t\tscanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameFloatingPointLiteral :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew FloatLiteral(\r", "+\t\t\t\t\tscanner.getCurrentTokenSource(), \r", "+\t\t\t\t\tscanner.startPosition, \r", "+\t\t\t\t\tscanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameDoubleLiteral :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew DoubleLiteral(\r", "+\t\t\t\t\tscanner.getCurrentTokenSource(), \r", "+\t\t\t\t\tscanner.startPosition, \r", "+\t\t\t\t\tscanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameCharacterLiteral :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew CharLiteral(\r", "+\t\t\t\t\tscanner.getCurrentTokenSource(), \r", "+\t\t\t\t\tscanner.startPosition, \r", "+\t\t\t\t\tscanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameStringLiteral :\r", "+\t\t\tStringLiteral stringLiteral = new StringLiteral(\r", "+\t\t\t\t\tscanner.getCurrentTokenSourceString(), \r", "+\t\t\t\t\tscanner.startPosition, \r", "+\t\t\t\t\tscanner.currentPosition - 1); \r", "+\t\t\tif (scanner.wasNonExternalizedStringLiteral) problemReporter().nonExternalizedStringLiteral(stringLiteral);\r", "+\t\t\tpushOnExpressionStack(stringLiteral); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamefalse :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew FalseLiteral(scanner.startPosition, scanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNametrue :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew TrueLiteral(scanner.startPosition, scanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\t\tcase TokenNamenull :\r", "+\t\t\tpushOnExpressionStack(\r", "+\t\t\t\tnew NullLiteral(scanner.startPosition, scanner.currentPosition - 1)); \r", "+\t\t\tbreak;\r", "+\r", "+\t\t\t//============================\r", "+\t\tcase TokenNamesuper :\r", "+\t\tcase TokenNamethis :\r", "+\t\t\tendPosition = scanner.currentPosition - 1;\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameimport :\r", "+\t\tcase TokenNamepackage :\r", "+\t\tcase TokenNamethrow :\r", "+\t\tcase TokenNamenew :\r", "+\t\tcase TokenNamedo :\r", "+\t\tcase TokenNameif :\r", "+\t\tcase TokenNamefor :\r", "+\t\tcase TokenNameswitch :\r", "+\t\tcase TokenNametry :\r", "+\t\tcase TokenNamewhile :\r", "+\t\tcase TokenNamebreak :\r", "+\t\tcase TokenNamecontinue :\r", "+\t\tcase TokenNameclass :\r", "+\t\tcase TokenNamereturn :\r", "+\t\t\tpushOnIntStack(scanner.startPosition);\r", "+\t\t\tbreak;\r", "+\r", "+\t\t\t//let extra semantic action decide when to push\r", "+\r", "+\t\tcase TokenNamedefault :\r", "+\t\tcase TokenNameRBRACKET :\r", "+\t\tcase TokenNamePLUS_PLUS :\r", "+\t\tcase TokenNameMINUS_MINUS :\r", "+\t\tcase TokenNamePLUS :\r", "+\t\tcase TokenNameMINUS :\r", "+\t\tcase TokenNameNOT :\r", "+\t\tcase TokenNameTWIDDLE :\r", "+\t\t\tendPosition = scanner.startPosition;\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameRBRACE :\r", "+\t\tcase TokenNameSEMICOLON :\r", "+\t\t\tendStatementPosition = scanner.currentPosition - 1;\r", "+\t\t\tendPosition = scanner.startPosition - 1; \r", "+\t\t\t//the item is not part of the potential futur expression/statement\r", "+\t\t\tbreak;\r", "+\t\t\t// in order to handle ( expression) ////// (cast)expression///// foo(x)\r", "+\t\tcase TokenNameRPAREN :\r", "+\t\t\trParenPos = scanner.currentPosition - 1; // position of the end of right parenthesis (in case of unicode \\u0029) lex00101\r", "+\t\t\tbreak;\r", "+\t\tcase TokenNameLPAREN :\r", "+\t\t\tlParenPos = scanner.startPosition;\r", "+\t\t\tbreak;\r", "+\t\t\t//  case TokenNameQUESTION  :\r", "+\t\t\t//  case TokenNameCOMMA :\r", "+\t\t\t//  case TokenNameCOLON  :\r", "+\t\t\t//  case TokenNameEQUAL  :\r", "+\t\t\t//  case TokenNameLBRACKET  :\r", "+\t\t\t//  case TokenNameDOT :\r", "+\t\t\t//  case TokenNameERROR :\r", "+\t\t\t//  case TokenNameEOF  :\r", "+\t\t\t//  case TokenNamecase  :\r", "+\t\t\t//  case TokenNamecatch  :\r", "+\t\t\t//  case TokenNameelse  :\r", "+\t\t\t//  case TokenNameextends  :\r", "+\t\t\t//  case TokenNamefinally  :\r", "+\t\t\t//  case TokenNameimplements  :\r", "+\t\t\t//  case TokenNamethrows  :\r", "+\t\t\t//  case TokenNameinstanceof  :\r", "+\t\t\t//  case TokenNameEQUAL_EQUAL  :\r", "+\t\t\t//  case TokenNameLESS_EQUAL  :\r", "+\t\t\t//  case TokenNameGREATER_EQUAL  :\r", "+\t\t\t//  case TokenNameNOT_EQUAL  :\r", "+\t\t\t//  case TokenNameLEFT_SHIFT  :\r", "+\t\t\t//  case TokenNameRIGHT_SHIFT  :\r", "+\t\t\t//  case TokenNameUNSIGNED_RIGHT_SHIFT :\r", "+\t\t\t//  case TokenNamePLUS_EQUAL  :\r", "+\t\t\t//  case TokenNameMINUS_EQUAL  :\r", "+\t\t\t//  case TokenNameMULTIPLY_EQUAL  :\r", "+\t\t\t//  case TokenNameDIVIDE_EQUAL  :\r", "+\t\t\t//  case TokenNameAND_EQUAL  :\r", "+\t\t\t//  case TokenNameOR_EQUAL  :\r", "+\t\t\t//  case TokenNameXOR_EQUAL  :\r", "+\t\t\t//  case TokenNameREMAINDER_EQUAL  :\r", "+\t\t\t//  case TokenNameLEFT_SHIFT_EQUAL  :\r", "+\t\t\t//  case TokenNameRIGHT_SHIFT_EQUAL  :\r", "+\t\t\t//  case TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL  :\r", "+\t\t\t//  case TokenNameOR_OR  :\r", "+\t\t\t//  case TokenNameAND_AND  :\r", "+\t\t\t//  case TokenNameREMAINDER :\r", "+\t\t\t//  case TokenNameXOR  :\r", "+\t\t\t//  case TokenNameAND  :\r", "+\t\t\t//  case TokenNameMULTIPLY :\r", "+\t\t\t//  case TokenNameOR  :\r", "+\t\t\t//  case TokenNameDIVIDE :\r", "+\t\t\t//  case TokenNameGREATER  :\r", "+\t\t\t//  case TokenNameLESS  :\r", "+\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c538e042bc1a9b2404d77f391bac06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getLeftOperand()", "signatureAfterChange": "  \tpublic Expression getLeftOperand()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9d7588d8783aba4669ea5f72dca2640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "commitAfterChange": "2be9770fe170326f9451f25888ed7063aef96155", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void consumeSecondaryType(char[] simpleTypeName)", "signatureAfterChange": " \tpublic void consumeSecondaryType(char[] simpleTypeName)", "diff": ["-\t\tif (this.parsedUnit == null) return;", "-\t\tthis.typeDeclaration = null; // start from the parsed unit", "-\t\tthis.typeBinding = getTypeBinding(simpleTypeName);", "+\t\tthis.secondarySimpleName = simpleTypeName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e207081c7133c8aa9a1a942e5596ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "402653abbf6df07a839776c5127b35c1c823b730", "commitAfterChange": "5dab0398c0d6854f764e312cc3cc66813d6d2f2e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t(currentCharacter == ' ') || Character.isWhitespace(currentCharacter); ", "+\t\t\t\t\t\t(currentCharacter == ' ') || isWhitespace(currentCharacter); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f1fae1a1ad8fc1b7aab8007e3e5dee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void testDiscardWorkingCopy2() throws CoreException", "signatureAfterChange": " \tpublic void testDiscardWorkingCopy2() throws CoreException", "diff": ["-\t\t\tcu.becomeWorkingCopy(null, null);", "-\t\t\tcu.becomeWorkingCopy(null, null);", "-\t\t\tcu.becomeWorkingCopy(null, null);", "+\t\t\tcu.becomeWorkingCopy(null);", "+\t\t\tcu.becomeWorkingCopy(null);", "+\t\t\tcu.becomeWorkingCopy(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea09f9cfe3df7df661553ca6ad3927d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void testRenameCompilationUnit() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRenameCompilationUnit() throws JavaModelException, CoreException", "diff": ["-public void testRenameCompilationUnit() throws JavaModelException, CoreException, IOException {", "+public void testRenameCompilationUnit() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0cb6991c4eff4dc1b088203a9b376e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "a59df614d3a2f48888b97e09f3b93f5be351e414", "commitAfterChange": "d053874bd274055f68744b1f416dd981f3fc63c9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void open() throws IOException", "signatureAfterChange": " \tpublic void open()", "diff": ["-\tpublic void open() throws IOException {", "+\tpublic void open() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea1fb71e1364fb1ed12f16617653dd1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test0411() throws JavaModelException", "signatureAfterChange": " \tpublic void test0411() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea28eee06c56ddfe287bef92f2cb467d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "diff": ["-\t\taddMarker(_env.getFile(), start, node.getLength() + start, IMarker.SEVERITY_WARNING, msg, line );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Warning, msg, line );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3613ae9810213860c02b900156e18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "82b30bfac03ac2ea34c10939fc4a0ad2f786e3fe", "commitAfterChange": "71555c35d93413ff4c7140d1ebbefc900078bda1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\t\tbuffer.append(methodBinding.getKey());", "+\t\t\t\t\t\tbuffer.append(getNonRecursiveKey(methodBinding));", "-\t\t\t\t\t\tbuffer.append(this.resolver.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding) declaringElement).getKey());\t\t\t\t\t\t", "+\t\t\t\t\t\tbuffer.append(getNonRecursiveKey(this.resolver.getMethodBinding((org.eclipse.jdt.internal.compiler.lookup.MethodBinding) declaringElement)));\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea44a1decbdf3fcee1b4b62959feb9ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "259ab729885d11212fdf6dd0b606b9f4d2fb1d41", "commitAfterChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void resolve(ClassScope classScope)", "signatureAfterChange": " \tpublic void resolve(ClassScope classScope)", "diff": ["-\t\tint throwsTagsNbre = this.thrownExceptions == null ? 0 : this.thrownExceptions.length;", "-\t\tfor (int i = 0; i < throwsTagsNbre; i++) {", "+\t\tint throwsTagsLength = this.thrownExceptions == null ? 0 : this.thrownExceptions.length;", "+\t\tfor (int i = 0; i < throwsTagsLength; i++) {", "-\t\tint seeTagsNbre = this.references == null ? 0 : this.references.length;", "-\t\tfor (int i = 0; i < seeTagsNbre; i++) {", "+\t\tint seeTagsLength = this.references == null ? 0 : this.references.length;", "+\t\tfor (int i = 0; i < seeTagsLength; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea795fc143f7b6e96c6b45535b84cf8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "5d2ad0b940570868aeb3a33317182334e9423c29", "commitAfterChange": "0f27abdc440c19d22cca8de897116ef5e59c08c4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic char[] shortReadableName()", "signatureAfterChange": " \tpublic char[] shortReadableName()", "diff": ["-\t\t\tshortReadableName = CharOperation.concat(this.type.enclosingType().shortReadableName(), sourceName, '.');", "+\t\t\tshortReadableName = CharOperation.concat(enclosingType().shortReadableName(), sourceName, '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea8e92a5c1e2892fa740b19b2fa0d678", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 136, "signatureBeforeChange": " final public void if_icmpeq(Label lbl)", "signatureAfterChange": " final public void if_icmpeq(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tif_cmpeq:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eadd8c131d2bcfb54c64e27c011a98ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t \tpublic void test032()", "signatureAfterChange": " \t \tpublic void test032()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eafb200960eabadfdc90099f7b37e215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "22325a67aa91a1b7b3e517137edba8a4cce052e3", "commitAfterChange": "8829074f9d3ac6a675ff4d6ddfc9960d99c756d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \t \tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "diff": ["-\t\t\tthis.kind = FieldReadAccess;", "+\t\t\tthis.purpose = SyntheticMethodBinding.FieldReadAccess;", "-\t\t\tthis.kind = FieldWriteAccess;", "+\t\t\tthis.purpose = SyntheticMethodBinding.FieldWriteAccess;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb4ad977365494557ff01474ab792a23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test0022() throws JavaModelException", "signatureAfterChange": " \tpublic void test0022() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb51ebf0ec06c8cc1dc46bfde7c256f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "e2af9310cdfb89db9f4053c14069476d09480cc1", "commitAfterChange": "d3b837e8cc689b58e173f139d9b4e19e674e3f05", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \tpublic void shutdown()", "signatureAfterChange": "\r \tpublic void shutdown()", "diff": ["-\t\tworkspace.removeResourceChangeListener(JavaModelManager.getJavaModelManager());\r", "+\t\tworkspace.removeResourceChangeListener(JavaModelManager.getJavaModelManager().deltaProcessor);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb677d82838612ee82226c6bdf9bdaad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathMultiDirectory.java", "commitBeforeChange": "06bdd90ec7e06ca246dfe4e05efc41d151db72d4", "commitAfterChange": "2b9df464fe844bb540314d6f9bc7e8d8d047b8ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r NameEnvironmentAnswer findClass(char[] className, char[][] packageName)", "signatureAfterChange": "\r \r NameEnvironmentAnswer findClass(char[] className, char[][] packageName)", "diff": ["-\t\t\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(null, fullSourceName));\r", "+\t\t\t\t\treturn new NameEnvironmentAnswer(new SourceFile(fullSourceName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7bbeb7ef0b165122b25dcdb40a7e01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayInitializer.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List expressions()", "signatureAfterChange": "  \tpublic List expressions()", "diff": ["-\t\treturn expressions;", "+\t\treturn this.expressions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb16baff68d40721c257b9918f8b254", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 534, "signatureBeforeChange": "  \tpublic void test497()", "signatureAfterChange": "  \tpublic void test497()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebde1d33d60cb6b1f486933cd412faa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "99bac1fdc4c2d80bbb75f56d3ab31db99149a96c", "commitAfterChange": "5030ed0cb9c2457e72b0d1d7ca27cb33a98e8be8", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t", "-\t\tif (event.getSource() instanceof IWorkspace) {", "-\t\t\tint eventType = this.overridenEventType == -1 ? event.getType() : this.overridenEventType;", "-\t\t\tIResource resource = event.getResource();", "-\t\t\tIResourceDelta delta = event.getDelta();", "-\t\t\t", "-\t\t\tswitch(eventType){", "-\t\t\t\tcase IResourceChangeEvent.PRE_DELETE :", "+", "+\t\tint eventType = this.overridenEventType == -1 ? event.getType() : this.overridenEventType;", "+\t\tIResource resource = event.getResource();", "+\t\tIResourceDelta delta = event.getDelta();", "+\t\t", "+\t\tswitch(eventType){", "+\t\t\tcase IResourceChangeEvent.PRE_DELETE :", "+\t\t\t\ttry {", "+\t\t\t\t\tif(resource.getType() == IResource.PROJECT ", "+\t\t\t\t\t\t&& ((IProject) resource).hasNature(JavaCore.NATURE_ID)) {", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\tdeleting((IProject)resource);", "+\t\t\t\t\t}", "+\t\t\t\t} catch(CoreException e){", "+\t\t\t\t\t// project doesn't exist or is not open: ignore", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t\t", "+\t\t\tcase IResourceChangeEvent.POST_CHANGE :", "+\t\t\t\tif (isAffectedBy(delta)) { // avoid populating for SYNC or MARKER deltas", "-\t\t\t\t\t\tif(resource.getType() == IResource.PROJECT ", "-\t\t\t\t\t\t\t&& ((IProject) resource).hasNature(JavaCore.NATURE_ID)) {", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tdeleting((IProject)resource);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} catch(CoreException e){", "-\t\t\t\t\t\t// project doesn't exist or is not open: ignore", "-\t\t\t\t\t}", "-\t\t\t\t\treturn;", "-\t\t\t\t\t", "-\t\t\t\tcase IResourceChangeEvent.POST_CHANGE :", "-\t\t\t\t\tif (isAffectedBy(delta)) { // avoid populating for SYNC or MARKER deltas", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\tstopDeltas();", "-\t\t\t\t\t\t\t\tcheckProjectsBeingAddedOrRemoved(delta);", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t// generate classpath change deltas", "-\t\t\t\t\t\t\t\tif (this.classpathChanges.size() > 0) {", "-\t\t\t\t\t\t\t\t\tboolean hasDelta = this.currentDelta != null;", "-\t\t\t\t\t\t\t\t\tJavaElementDelta javaDelta = currentDelta();", "-\t\t\t\t\t\t\t\t\tIterator changes = this.classpathChanges.values().iterator();", "-\t\t\t\t\t\t\t\t\twhile (changes.hasNext()) {", "-\t\t\t\t\t\t\t\t\t\tClasspathChange change = (ClasspathChange) changes.next();", "-\t\t\t\t\t\t\t\t\t\tint result = change.generateDelta(javaDelta);", "-\t\t\t\t\t\t\t\t\t\tif ((result & ClasspathChange.HAS_DELTA) != 0) {", "-\t\t\t\t\t\t\t\t\t\t\thasDelta = true;", "-\t\t\t\t\t\t\t\t\t\t\tchange.requestIndexing();", "-\t\t\t\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(change.project);", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif ((result & ClasspathChange.HAS_PROJECT_CHANGE) != 0) {", "-\t\t\t\t\t\t\t\t\t\t\tthis.state.addProjectReferenceChange(change.project, change.oldResolvedClasspath);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tstopDeltas();", "+\t\t\t\t\t\t\tcheckProjectsBeingAddedOrRemoved(delta);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t// generate classpath change deltas", "+\t\t\t\t\t\t\tif (this.classpathChanges.size() > 0) {", "+\t\t\t\t\t\t\t\tboolean hasDelta = this.currentDelta != null;", "+\t\t\t\t\t\t\t\tJavaElementDelta javaDelta = currentDelta();", "+\t\t\t\t\t\t\t\tIterator changes = this.classpathChanges.values().iterator();", "+\t\t\t\t\t\t\t\twhile (changes.hasNext()) {", "+\t\t\t\t\t\t\t\t\tClasspathChange change = (ClasspathChange) changes.next();", "+\t\t\t\t\t\t\t\t\tint result = change.generateDelta(javaDelta);", "+\t\t\t\t\t\t\t\t\tif ((result & ClasspathChange.HAS_DELTA) != 0) {", "+\t\t\t\t\t\t\t\t\t\thasDelta = true;", "+\t\t\t\t\t\t\t\t\t\tchange.requestIndexing();", "+\t\t\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(change.project);", "-\t\t\t\t\t\t\t\t\tthis.classpathChanges.clear();", "-\t\t\t\t\t\t\t\t\tif (!hasDelta)", "-\t\t\t\t\t\t\t\t\t\tthis.currentDelta = null;", "+\t\t\t\t\t\t\t\t\tif ((result & ClasspathChange.HAS_PROJECT_CHANGE) != 0) {", "+\t\t\t\t\t\t\t\t\t\tthis.state.addProjectReferenceChange(change.project, change.oldResolvedClasspath);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t// generate external archive change deltas", "-\t\t\t\t\t\t\t\tif (this.refreshedElements != null) {", "-\t\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t// generate Java deltas from resource changes", "-\t\t\t\t\t\t\t\tIJavaElementDelta translatedDelta = processResourceDelta(delta);", "-\t\t\t\t\t\t\t\tif (translatedDelta != null) { ", "-\t\t\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDelta);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} finally {", "-\t\t\t\t\t\t\t\tthis.sourceElementParserCache = null; // don't hold onto parser longer than necessary", "-\t\t\t\t\t\t\t\tstartDeltas();", "+\t\t\t\t\t\t\t\tthis.classpathChanges.clear();", "+\t\t\t\t\t\t\t\tif (!hasDelta)", "+\t\t\t\t\t\t\t\t\tthis.currentDelta = null;", "-\t\t\t\t\t\t\tIElementChangedListener[] listeners;", "-\t\t\t\t\t\t\tint listenerCount;", "-\t\t\t\t\t\t\tsynchronized (this.state) {", "-\t\t\t\t\t\t\t\tlisteners = this.state.elementChangedListeners;", "-\t\t\t\t\t\t\t\tlistenerCount = this.state.elementChangedListenerCount;", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t// generate external archive change deltas", "+\t\t\t\t\t\t\tif (this.refreshedElements != null) {", "+\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);", "-\t\t\t\t\t\t\tnotifyTypeHierarchies(listeners, listenerCount);", "-\t\t\t\t\t\t\tfire(null, ElementChangedEvent.POST_CHANGE);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t// generate Java deltas from resource changes", "+\t\t\t\t\t\t\tIJavaElementDelta translatedDelta = processResourceDelta(delta);", "+\t\t\t\t\t\t\tif (translatedDelta != null) { ", "+\t\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDelta);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported ", "-\t\t\t\t\t\t\tthis.state.resetOldJavaProjectNames();", "-\t\t\t\t\t\t\tthis.oldRoots = null;", "+\t\t\t\t\t\t\tthis.sourceElementParserCache = null; // don't hold onto parser longer than necessary", "+\t\t\t\t\t\t\tstartDeltas();", "+\t\t\t\t\t\tIElementChangedListener[] listeners;", "+\t\t\t\t\t\tint listenerCount;", "+\t\t\t\t\t\tsynchronized (this.state) {", "+\t\t\t\t\t\t\tlisteners = this.state.elementChangedListeners;", "+\t\t\t\t\t\t\tlistenerCount = this.state.elementChangedListenerCount;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tnotifyTypeHierarchies(listeners, listenerCount);", "+\t\t\t\t\t\tfire(null, ElementChangedEvent.POST_CHANGE);", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported ", "+\t\t\t\t\t\tthis.state.resetOldJavaProjectNames();", "+\t\t\t\t\t\tthis.oldRoots = null;", "-\t\t\t\t\treturn;", "-\t\t\t\t\t", "-\t\t\t\tcase IResourceChangeEvent.PRE_BUILD :", "-\t\t\t\t\tif(!isAffectedBy(delta))", "-\t\t\t\t\t\treturn; // avoid populating for SYNC or MARKER deltas", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t\t", "+\t\t\tcase IResourceChangeEvent.PRE_BUILD :", "+\t\t\t\tif(!isAffectedBy(delta))", "+\t\t\t\t\treturn; // avoid populating for SYNC or MARKER deltas", "-\t\t\t\t\t// create classpath markers if necessary", "-\t\t\t\t\tboolean needCycleValidation = validateClasspaths(delta);", "-\t\t\t\t\tClasspathValidation[] validations = this.state.removeClasspathValidations();", "-\t\t\t\t\tif (validations != null) {", "-\t\t\t\t\t\tfor (int i = 0, length = validations.length; i < length; i++) {", "-\t\t\t\t\t\t\tClasspathValidation validation = validations[i];", "-\t\t\t\t\t\t\tvalidation.validate();", "-\t\t\t\t\t\t}", "+\t\t\t\t// create classpath markers if necessary", "+\t\t\t\tboolean needCycleValidation = validateClasspaths(delta);", "+\t\t\t\tClasspathValidation[] validations = this.state.removeClasspathValidations();", "+\t\t\t\tif (validations != null) {", "+\t\t\t\t\tfor (int i = 0, length = validations.length; i < length; i++) {", "+\t\t\t\t\t\tClasspathValidation validation = validations[i];", "+\t\t\t\t\t\tvalidation.validate();", "-\t\t\t\t\t", "-\t\t\t\t\t// update project references if necessary", "-\t\t\t\t    ProjectReferenceChange[] projectRefChanges = this.state.removeProjectReferenceChanges();", "-\t\t\t\t\tif (projectRefChanges != null) {", "-\t\t\t\t\t    for (int i = 0, length = projectRefChanges.length; i < length; i++) {", "-\t\t\t\t\t        try {", "-\t\t\t\t\t\t        projectRefChanges[i].updateProjectReferencesIfNecessary();", "-\t\t\t\t\t        } catch(JavaModelException e) {", "-\t\t\t\t\t            // project doesn't exist any longer, continue with next one", "-\t\t\t\t\t        }", "-\t\t\t\t\t    }", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t// update project references if necessary", "+\t\t\t    ProjectReferenceChange[] projectRefChanges = this.state.removeProjectReferenceChanges();", "+\t\t\t\tif (projectRefChanges != null) {", "+\t\t\t\t    for (int i = 0, length = projectRefChanges.length; i < length; i++) {", "+\t\t\t\t        try {", "+\t\t\t\t\t        projectRefChanges[i].updateProjectReferencesIfNecessary();", "+\t\t\t\t        } catch(JavaModelException e) {", "+\t\t\t\t            // project doesn't exist any longer, continue with next one", "+\t\t\t\t        }", "+\t\t\t\t    }", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tif (needCycleValidation || projectRefChanges != null) {", "+\t\t\t\t\t// update all cycle markers since the project references changes may have affected cycles", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tJavaProject.validateCycles(null);", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// a project no longer exists", "-\t\t\t\t\t", "-\t\t\t\t\tif (needCycleValidation || projectRefChanges != null) {", "-\t\t\t\t\t\t// update all cycle markers since the project references changes may have affected cycles", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tJavaProject.validateCycles(null);", "-\t\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t\t// a project no longer exists", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\tJavaModel.flushExternalFileCache();", "-\t\t\t\t\tJavaBuilder.buildStarting();", "-\t\t\t\t\t", "-\t\t\t\t\t// does not fire any deltas", "-\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tJavaModel.flushExternalFileCache();", "+\t\t\t\tJavaBuilder.buildStarting();", "+\t\t\t\t", "+\t\t\t\t// does not fire any deltas", "+\t\t\t\treturn;", "-\t\t\t\tcase IResourceChangeEvent.POST_BUILD :", "-\t\t\t\t\tJavaBuilder.buildFinished();", "-\t\t\t\t\treturn;", "-\t\t\t}", "+\t\t\tcase IResourceChangeEvent.POST_BUILD :", "+\t\t\t\tJavaBuilder.buildFinished();", "+\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe00cf5f9c068c6a8c34702cee37b6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": " \tpublic void test0546() throws JavaModelException", "signatureAfterChange": " \tpublic void test0546() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec084cac074734a20780ab41682f248d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "0e772fbb8ed50e5524be7c4f9b7c99aa08872c37", "commitAfterChange": "9a2a8805997295c2143a17a965cecf98f3f5c285", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void deleteIndexFiles(SimpleSet pathsToKeep)", "signatureAfterChange": " private void deleteIndexFiles(SimpleSet pathsToKeep)", "diff": ["-\t\t\tif (VERBOSE)", "+\t\t\tif (VERBOSE || DEBUG)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec097402d5a446347e4f328610a6509f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public VariableBinding variableBinding(Scope scope)", "signatureAfterChange": "  public VariableBinding variableBinding(Scope scope)", "diff": ["-\treturn null;", "+\treturn super.variableBinding(scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1a6e353f63f755594e55e35c93ff57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e8cc0ae635ad89b28bebca1f5385768f9625249f", "commitAfterChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\t", "+", "-\t", "+", "-\t\t\t    if (leafType instanceof ReferenceBinding && (((ReferenceBinding)leafType).modifiers & AccGenericSignature) != 0)", "+\t\t\t    if (leafType instanceof ReferenceBinding && (((ReferenceBinding) leafType).modifiers & AccGenericSignature) != 0)", "-\t\t\t\tif (leafType instanceof ReferenceBinding && (((ReferenceBinding)leafType).modifiers & AccGenericSignature) != 0)", "+\t\t\t\tif (leafType instanceof ReferenceBinding && (((ReferenceBinding) leafType).modifiers & AccGenericSignature) != 0)", "+\t\tmethod.parameters = NoParameters; // see 107004", "-\t\t\tfor (int i = 0, length = typeParameters.length; i < length; i++) {", "-\t\t\t\tTypeParameter parameter = typeParameters[i];", "-\t\t\t\tparameter.binding = null;", "-\t\t\t}", "+\t\t\tfor (int i = 0, length = typeParameters.length; i < length; i++)", "+\t\t\t\ttypeParameters[i].binding = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec229ba56e20328c24879248f8433221", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "cae1ac0076053182a150a9a6566741ab9c075217", "commitAfterChange": "976283265acccc4408306834f2f927413343ea11", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(TypeDeclaration typeDeclaration, CompilationUnitScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(TypeDeclaration typeDeclaration, CompilationUnitScope scope)", "diff": ["+\t\tif (typeDeclaration.ignoreFurtherInvestigation) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec3add7e7c5c6479e30663b7b075b7a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tBindingResolver getBindingResolver()", "signatureAfterChange": " \tBindingResolver getBindingResolver()", "diff": ["-\t\treturn resolver;", "+\t\treturn this.resolver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec584332e84fe9be683232e3558a22b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TagElement.java", "commitBeforeChange": "8b60bfa39b2126933525fa56cd7764737dad2ed5", "commitAfterChange": "b1ca14e77177efa16bf3098435b224c3395ca8e1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic List fragments()", "signatureAfterChange": "  \tpublic List fragments()", "diff": ["-\t\treturn fragments;", "+\t\treturn this.fragments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5bf61e43fc6e7f96442e4c096dfa57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 42, "signatureBeforeChange": " public final boolean isAbstract()", "signatureAfterChange": " public final boolean isAbstract()", "diff": ["-\treturn (modifiers & ClassFileConstants.AccAbstract) != 0;", "+\treturn (this.modifiers & ClassFileConstants.AccAbstract) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec75f4963c03473583730ed0dcb29a9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 361, "signatureBeforeChange": " \tpublic void test0335() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test0335() throws CoreException, IOException", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tfinal ASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec84e2f8e21115f7453c0015dd917890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "86284f2db6c7ac41b63c1766c9b7b3a016d95a9a", "commitAfterChange": "c8d8bdad35a9dc8d924116cabb6dd00986cff218", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t// due to the fact an expression may start with ( and that a cast can also start with (", "-\t// the field is an expression....it can be a TypeReference OR a NameReference Or", "-\t// any kind of Expression <-- this last one is invalid.......", "-", "-\t//expression.setExpectedType(this.resolvedType); // needed in case of generic method invocation", "+\tif (scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\tif (this.expression.isPolyExpressionInCastingContext())", "+\t\t\tthis.expression.setExpectedType(this.resolvedType);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8cbc6bafb9647d7c25b6154bd65971", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test0466() throws JavaModelException", "signatureAfterChange": " \tpublic void test0466() throws JavaModelException", "diff": ["-\t\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9cc3337120bd266454da6502a21a4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "167e0a563c0934d033fb860086f34607180326b0", "commitAfterChange": "27ab9447fb0786cab5fb449fe90ffd060e3fc9d0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod)", "signatureAfterChange": " boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod)", "diff": ["-\t\treturn false;", "-\tif (method.declaringClass.findSuperTypeWithSameErasure(substituteMethod.declaringClass) == null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecab8b051bf831fe02a371e5215c8887", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test0046() throws JavaModelException", "signatureAfterChange": " \tpublic void test0046() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb4eda9b601de5bb579f4d6d7dc6403", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 382, "signatureBeforeChange": " \tpublic void test0380() throws JavaModelException", "signatureAfterChange": " \tpublic void test0380() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecc09dd69c2c7ff6b72ace7b4a80cba7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 454, "methodNumberAfterChange": 454, "signatureBeforeChange": " \tpublic void test435()", "signatureAfterChange": " \tpublic void test435()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecc33bfeb0badfca044601d7d91850b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "commitAfterChange": "7b0b78b45319bc18ccff993af876123282997e70", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " protected void consumeRightParen()", "signatureAfterChange": " protected void consumeRightParen()", "diff": ["-\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_PARAMETERIZED_CAST) {", "-\t\tpopElement(K_PARAMETERIZED_CAST);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecf5cbab7916f5b2cfe6b6b381c297b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "989683e6b33dbd80360b19bb4e1f135abf13384d", "commitAfterChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex)", "signatureAfterChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex)", "diff": ["-\t\treturn (ASTNode) (TypeDeclaration)unit.types().get(typeIndex);", "+\t\treturn (ASTNode) unit.types().get(typeIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2a2a4e14fd90f34c0ea786abb801df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "8494c892e2237111b6f3378d62ed6e46bed9bc38", "commitAfterChange": "1c31a7fff0cc8835ae64e9ca2b725dd17671f56d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate static char[][] suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner)", "signatureAfterChange": " \t \tprivate static char[][] suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner)", "diff": ["-\t\t\tSystem.arraycopy(prefixes, 0, prefixes = new char[length+1][], 0, length);", "-\t\t\tprefixes[length] = CharOperation.NO_CHAR;", "+\t\t\tSystem.arraycopy(prefixes, 0, prefixes = new char[length+1][], 1, length);", "+\t\t\tprefixes[0] = CharOperation.NO_CHAR;", "-\t\t\tSystem.arraycopy(suffixes, 0, suffixes = new char[length+1][], 0, length);", "-\t\t\tsuffixes[length] = CharOperation.NO_CHAR;", "+\t\t\tSystem.arraycopy(suffixes, 0, suffixes = new char[length+1][], 1, length);", "+\t\t\tsuffixes[0] = CharOperation.NO_CHAR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed44b0cd26d2e6f1972dd5c935b16f88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 259, "signatureBeforeChange": " public void test0249() throws JavaModelException", "signatureAfterChange": " public void test0249() throws JavaModelException", "diff": ["-\t\t\t\t\"oneTwoThree[FIELD_REF]{oneTwoThree, Lcamelcase.ImportedType;, I, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"oTTField[FIELD_REF]{oTTField, Lcamelcase.ImportedType;, I, oTTField, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"oneTwoThree[FIELD_REF]{oneTwoThree, Lcamelcase.ImportedType;, I, oneTwoThree, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CAMEL_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTField[FIELD_REF]{oTTField, Lcamelcase.ImportedType;, I, oTTField, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed466a94c156559d6171a6d2cbd4bc3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnonymousClassDeclaration.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List bodyDeclarations()", "signatureAfterChange": "  \tpublic List bodyDeclarations()", "diff": ["-\t\treturn bodyDeclarations;", "+\t\treturn this.bodyDeclarations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed501a525c82c0e14b3d7c328cfbc344", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "cae1ac0076053182a150a9a6566741ab9c075217", "commitAfterChange": "976283265acccc4408306834f2f927413343ea11", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["+\t\tif (memberTypeDeclaration.ignoreFurtherInvestigation) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed70113599b5ce2d7bbb49ededce70ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void test0499() throws JavaModelException", "signatureAfterChange": " \tpublic void test0499() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed91a4d927574d8aeadfa332d14509bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 95, "signatureBeforeChange": "  \tpublic void test060()", "signatureAfterChange": "  \tpublic void test060()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed9f8a6656cd95c7b3230cfbc553ea32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project, Map options)", "signatureAfterChange": "  \tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project, Map options)", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(this.astLevel);", "+\t\t\tASTParser parser = ASTParser.newParser(astLevel);", "-\t\t\tparser.setResolveBindings(this.resolveBinding);", "+\t\t\tparser.setResolveBindings(resolveBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc65b81c3b371325d67d4cd44142d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void resetNameLookup()", "signatureAfterChange": " \tpublic void resetNameLookup()", "diff": ["-\t\t\t\t((JavaProjectElementInfo)getElementInfo()).setNameLookup(null);", "+\t\t\t\t((JavaProjectElementInfo)getElementInfo()).resetCaches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edcc07e99f51446a8671b19406608be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0a885e12f21f43d2b4d0c6ddba3fc457a6bd846f", "commitAfterChange": "78d640f6bd5ff8e757b4b457bee3d92d7c8352e1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\tif (foundField.declaringClass != fieldBinding.declaringClass)", "+\t\t\t\t\t\t\t\t\t\t\t\t// but only if \"valid field\" was inherited in the first place.", "+\t\t\t\t\t\t\t\t\t\t\t\tif (foundField.declaringClass != fieldBinding.declaringClass &&", "+\t\t\t\t\t\t\t\t\t\t\t\t    foundField.declaringClass != foundActualReceiverType) // https://bugs.eclipse.org/bugs/show_bug.cgi?id=316956"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd38a4d417b22f7d4d81c45a05f51f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5ec0d4f852b715851ad782798e616c99fb28d2e1", "commitAfterChange": "8a34d2aa53a9b1b6521aba520000cbaff6e630ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tvoid addDependentsToProjectsToUpdate(IPath projectPath)", "signatureAfterChange": "\r \tvoid addDependentProjects(IPath projectPath, HashSet result)", "diff": ["-\tvoid addDependentsToProjectsToUpdate(IPath projectPath) {\r", "+\tvoid addDependentProjects(IPath projectPath, HashSet result) {\r", "-\t\t\t\t\t\tthis.projectsToUpdate.add(project);\r", "+\t\t\t\t\t\tresult.add(project);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edec164fcea656589bdd2ecef096ad54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRef.java", "commitBeforeChange": "c0fb6d2b67dfdf597d878261fa4ba21d4a23918e", "commitAfterChange": "7c71bd67364ddd3b380d51d2f4e9afb3c139dbb2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic List parameters()", "signatureAfterChange": "  \tpublic List parameters()", "diff": ["-\t\treturn parameters;", "+\t\treturn this.parameters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edef469042062c098077c269a8d26f63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  public void testCompletionFindSecondaryType1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindSecondaryType1() throws JavaModelException", "diff": ["-\t\t\"element:SecondaryType1    completion:SecondaryType1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:SecondaryType2    completion:SecondaryType2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "+\t\t\"element:SecondaryType1    completion:SecondaryType1    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\"element:SecondaryType2    completion:SecondaryType2    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf29f02311bdc66d64b2ba5bb522e24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 742, "methodNumberAfterChange": 745, "signatureBeforeChange": " \tpublic void test709()", "signatureAfterChange": " \tpublic void test709()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee274601a72a5a18e515c42e7eb1233d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 514, "methodNumberAfterChange": 514, "signatureBeforeChange": " \tpublic void test495()", "signatureAfterChange": " \tpublic void test495()", "diff": ["+\t\tpreferences.blank_lines_before_first_class_body_declaration = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee361f62bd09fed4812df42c34c4e4fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": " public void invokeJavaLangClassDesiredAssertionStatus()", "signatureAfterChange": " public void invokeJavaLangClassDesiredAssertionStatus()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangClassConstantPoolName,", "-\t\t\tQualifiedNamesConstants.DesiredAssertionStatus,", "-\t\t\tQualifiedNamesConstants.DesiredAssertionStatusSignature);", "+\t\t\tConstantPool.JavaLangClassConstantPoolName,", "+\t\t\tConstantPool.DesiredAssertionStatus,", "+\t\t\tConstantPool.DesiredAssertionStatusSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3863659601f242e81b547cd11df2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "252a053aebccd2d3a93400ae4c9f1b4e28158727", "commitAfterChange": "272d89e2710b1b25c157dda1019ac9d84fa9215b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t\t \t\tvoid addField(SortFieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t\t \t\tvoid addField(SortFieldDeclaration fieldDeclaration)", "diff": ["+\t\t\tfieldDeclaration.sourceEnd = fieldDeclaration.previousSourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee483acfa35b46fa227d8bd39964d19b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "90b49e284bf454f4744909826ac317f2b067d9bf", "commitAfterChange": "1491f130ce9ca84db3e6ebab4543b2474b39f8ba", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic boolean isDefaultConstructor()", "signatureAfterChange": "  \tpublic boolean isDefaultConstructor()", "diff": ["-\t\treturn isDefaultConstructor;", "+\t\treturn this.isDefaultConstructor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee51743da599f852be750dc461e787f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "3bd4baedd250e4d3a19eb5f32f5553fba8f7a1f4", "commitAfterChange": "fe6848300377e2f320c70d2b17e483820c74fa24", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void printComment()", "signatureAfterChange": " \tpublic void printComment()", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tcount++; ", "+\t\t\t\t\t\t\t\t\tcount++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5cc4c0d41ed2b82d6ee705575e0cec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "signatureAfterChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "diff": ["-\tif (inheritedTypeVariables == NoTypeVariables) return inheritedMethod;", "+\tif (inheritedTypeVariables == Binding.NO_TYPE_VARIABLES) return inheritedMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee6257d9b1321213b3168a7be72e2796", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "82722cc3b99f12f3da7f4aa25913a010e20b9b56", "commitAfterChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = this.manager.getIndex(this.indexPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\tIIndex index = this.manager.getIndexForUpdate(this.indexPath, true, /*reuse index file*/ true /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee65e9bc0e16e17140d77c7551c29e95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey()", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-\tpublic char[] computeUniqueKey() {", "+\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "-                return CharOperation.concat(WILDCARD_PLUS, this.bound.computeUniqueKey());", "+                return CharOperation.concat(WILDCARD_PLUS, this.bound.computeUniqueKey(false/*without access flags*/));", "-\t\t\t    return CharOperation.concat(WILDCARD_MINUS, this.bound.computeUniqueKey());", "+\t\t\t    return CharOperation.concat(WILDCARD_MINUS, this.bound.computeUniqueKey(false/*without access flags*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee81c4efe39625e2812d68d78319e0eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test0013() throws JavaModelException", "signatureAfterChange": " \tpublic void test0013() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee941d137a0a552831baa4a1d8a63dc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "commitAfterChange": "0aa46ff32860f090b1c2b435d909e18926d63ea4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "signatureAfterChange": " public void evaluateImports(INameEnvironment environment, IRequestor requestor, IProblemFactory problemFactory)", "diff": ["-\t\t\tchar[] packageName = splitDeclaration[splitLength - 1];", "-\t\t\tif (packageName.length == 1 && packageName[0] == '*') {", "+\t\t\tchar[] pkgName = splitDeclaration[splitLength - 1];", "+\t\t\tif (pkgName.length == 1 && pkgName[0] == '*') {", "-\t\t\t\t\t\tpackageName = splitDeclaration[splitLength - 2];", "+\t\t\t\t\t\tpkgName = splitDeclaration[splitLength - 2];", "-\t\t\t\t\t\tpackageName = splitDeclaration[splitLength - 2];", "+\t\t\t\t\t\tpkgName = splitDeclaration[splitLength - 2];", "-\t\t\t\tif (!environment.isPackage(parentName, packageName)) {", "+\t\t\t\tif (!environment.isPackage(parentName, pkgName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee979a09b8b7d17af87c04b3765ea9b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2a60b2ec4a655f95621631d265887bb5c55f3260", "commitAfterChange": "b83d5551610ccbdc0a09afe0ca05bfc5a1c78051", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "signatureAfterChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "diff": ["-\t\t\t\tif ((deltaBuilder.delta != null) && (deltaBuilder.delta.getAffectedChildren().length > 0)) {", "+\t\t\t\tif (deltaBuilder.delta != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeba54c3153f56111a407e9acb56a016", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test0039() throws JavaModelException", "signatureAfterChange": " \tpublic void test0039() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeeb4ea359d05708691cadd128ad52dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic void testPerfDomAstCreationJLS2() throws JavaModelException", "signatureAfterChange": " \tpublic void testWkspDomAstCreationJLS2() throws JavaModelException", "diff": ["-\tpublic void testPerfDomAstCreationJLS2() throws JavaModelException {", "-\t\ttagAsSummary(\"DOM>Creation>JLS2\", Dimension.CPU_TIME, true/*put in fingerprint*/);", "+\tpublic void testWkspDomAstCreationJLS2() throws JavaModelException {", "+\t\ttagAsSummary(\"DOM>Creation>Wksp>JLS2\", true); // put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef044ca490207dcaea1f8af18dacc03a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 385, "signatureBeforeChange": " \tpublic void test349()", "signatureAfterChange": " \tpublic void test349()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef21d96734b3433a24440e8f2e900c23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 170, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\tString leadString= \"\"; //$NON-NLS-1$", "+\t\tString leadString= Util.EMPTY_STRING; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef900147e25ff5432e65bcb69573cb81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output) throws CoreException", "diff": ["+\t\t\t\tnull/*no inclusion pattern*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efa364f1398ec603d1cbec9dd0805ddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic void test0490() throws JavaModelException", "signatureAfterChange": " \tpublic void test0490() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efc26dd0857d1539983a66edd60e9254", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "3bd57b45443ee6cb04b06e9af49f405bde64925e", "commitAfterChange": "e447d89530bf9d3a43064d5916817ebccc4e6812", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testChangeExternalFolder() throws CoreException", "signatureAfterChange": " public void testChangeExternalFolder() throws CoreException", "diff": ["+\t\tenv.waitForAutoBuild();", "+\t\tenv.waitForAutoBuild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efed39d1ad99b1ccc7f6f8ca25f49ebc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "6682863fe9411dd7e2f051947acbfe509953da3c", "commitAfterChange": "d125ece72c2ad46b856092bcf90700e8a503dcbf", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void _testRemoveZIPArchive2() throws CoreException", "signatureAfterChange": " public void testRemoveZIPArchive2() throws CoreException", "diff": ["-// TODO (jerome) Enable when the erratic failure on this test will be fixed", "-public void _testRemoveZIPArchive2() throws CoreException {", "+public void testRemoveZIPArchive2() throws CoreException {", "+\t\trefreshExternalArchives(p);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "effea4fce52ac4c03458af3d5e8eb34e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testUnderlyingResourceNonExistingPkgFragmentRoot() throws CoreException", "signatureAfterChange": " public void testUnderlyingResourceNonExistingPkgFragmentRoot() throws CoreException", "diff": ["-\t\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "-\t\tIFolder folder = this.createFolder(\"/P/nonExistingRoot\");", "+\t\tIJavaProject project = createJavaProject(\"P\", new String[] {\"src\"}, \"bin\");", "+\t\tIFolder folder = createFolder(\"/P/nonExistingRoot\");", "-\t\tthis.deleteProject(\"P\");", "+\t\tdeleteProject(\"P\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f016751c2ec9adb280cd8c8a05ea60c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t\t@Override \t\tpublic void close() throws IOException", "signatureAfterChange": "  \t\t@Override \t\tpublic void close() throws IOException", "diff": ["-\t\t\t\tJarClassLoader.this.close();", "+\t\t\t\tcloseInputStream(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0271a69ddc47f5e11ce18f02422ffd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void test0476() throws JavaModelException", "signatureAfterChange": " \tpublic void test0476() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02b4ac3c8440f2a375d91cf322eb3ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": " \tpublic void test0190() throws JavaModelException", "signatureAfterChange": " \tpublic void test0190() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0428dbbebdfbde4cea0344fa6bd93da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SyntaxErrorTest.java", "commitBeforeChange": "43f74f2641268dab605a152f25dcf07a245dabe8", "commitAfterChange": "6bace42b575464817bea9d0627df89cce9af5b42", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "signatureAfterChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "diff": ["-\t\t\t\tbuffer.append(\" in \" + new String(problems[i].getOriginatingFileName()));", "+\t\t\t\tbuffer.append(\" in \" + new String(problems[i].getOriginatingFileName()).replace('/', '\\\\'));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f043274e528a086be110b51e881f0087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test0015() throws JavaModelException", "signatureAfterChange": " \tpublic void test0015() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f068abbc78ff585474baf98018091449", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void generateSyntheticBodyForMethodAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessBinding)", "diff": ["-public void generateSyntheticBodyForMethodAccess(SyntheticAccessMethodBinding accessBinding) {", "+public void generateSyntheticBodyForMethodAccess(SyntheticMethodBinding accessBinding) {", "-\tTypeBinding[] arguments = accessBinding.accessType == SyntheticAccessMethodBinding.BridgeMethodAccess ", "+\tTypeBinding[] arguments = accessBinding.kind == SyntheticMethodBinding.BridgeMethod ", "-\t\t\t|| accessBinding.accessType == SyntheticAccessMethodBinding.SuperMethodAccess){", "+\t\t\t|| accessBinding.kind == SyntheticMethodBinding.SuperMethodAccess){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06a72d1367c3a74a83a059034094244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "580c728201df4f59e1400e6feeeb245b12a49163", "commitAfterChange": "a43591ed0206cd23fd90053f7c1436df8e9d56a7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\t\tif (raisedException.isCompatibleWith(scope.getJavaLangRuntimeException())", "-\t\t\t\t\t\t\t\t|| raisedException.isCompatibleWith(scope.getJavaLangError())) {", "+\t\t\t\t\t\t\tif (raisedException.isUncheckedException(false)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0999f94e276c7eeec5998539930d1e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/src/test0166/Test.java", "commitBeforeChange": "5e8812a0213bc61684f3d6ffc722854c4eab8b9b", "commitAfterChange": "6b523d8b142e7961940f74fda0096160e5c68ef8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic int foo(Exception e)", "signatureAfterChange": " \tpublic int foo(Exception e)", "diff": ["-\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0afd9a3ec26a92dc53e5d0794500ffa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "bbb750998e75511ba75783c9f2d763f2e32279d9", "commitAfterChange": "02bf4272774dd4f6faf4897c054614bdc809ab9e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["+\t\tTypeDeclaration typeDeclaration = scope.referenceType();", "+\t\tMethodBinding binding = ((AbstractMethodDeclaration) scope.referenceContext()).binding;", "+\t\ttypeDeclaration.binding.resolveTypesFor(binding);", "+\t\targument.binding = new AptSourceLocalVariableBinding(argument.binding, binding);", "-\t\t\tTypeDeclaration typeDeclaration = scope.referenceType();", "-\t\t\ttypeDeclaration.binding.resolveTypesFor(((AbstractMethodDeclaration) scope.referenceContext()).binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bbac8901790de5b7e9e92a7c4e34d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryManager.java", "commitBeforeChange": "6d532e3e6bb5f869c4cf89800d8c25d215a96667", "commitAfterChange": "cea94298f193240b6230178dfa939e55ae1ab853", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void updateUserLibrary(String libName, String encodedUserLibrary)", "signatureAfterChange": "  \tpublic void updateUserLibrary(String libName, String encodedUserLibrary)", "diff": ["+\t\t} catch (ClasspathEntry.AssertionFailedException ase) {", "+\t\t\tUtil.log(ase, \"Exception while decoding user library '\"+ libName +\"'.\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ea947086e7cc46b4f5bb032f300f91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "afcefcc52a6e235f9ed640317727929d84135cf0", "commitAfterChange": "5ce294a787e58643d5e8115fe2ddfea119e53aa2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void resolveStatements()", "signatureAfterChange": " public void resolveStatements()", "diff": ["-\t */", "-\tpublic void resolveStatements() {", "-\t\tif (!CharOperation.equals(this.scope.enclosingSourceType().sourceName, selector)){", "-\t\t\tthis.scope.problemReporter().missingReturnType(this);", "-\t\t}", "-\t\tif (this.typeParameters != null) {", "-\t\t\tfor (int i = 0, length = this.typeParameters.length; i < length; i++) {", "-\t\t\t\tthis.typeParameters[i].resolve(this.scope);", "-\t\t\t}", "-\t\t", "-\t\t// if null ==> an error has occurs at parsing time ....", "-\t\tif (this.constructorCall != null) {", "-\t\t\t// e.g. using super() in java.lang.Object", "-\t\t\tif (this.binding != null", "-\t\t\t\t&& this.binding.declaringClass.id == T_JavaLangObject", "-\t\t\t\t&& this.constructorCall.accessMode != ExplicitConstructorCall.This) {", "-\t\t\t\t\tif (this.constructorCall.accessMode == ExplicitConstructorCall.Super) {", "-\t\t\t\t\t\tthis.scope.problemReporter().cannotUseSuperInJavaLangObject(this.constructorCall);", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.constructorCall = null;", "-\t\t\t} else {", "-\t\t\t\tthis.constructorCall.resolve(this.scope);", "-\t\t\t}", "-\t\t}", "-\t\tif ((this.modifiers & ExtraCompilerModifiers.AccSemicolonBody) != 0) {", "-\t\t\tthis.scope.problemReporter().methodNeedBody(this);\t\t", "-\t\t}", "-\t\tsuper.resolveStatements();", "-\t}", "+ */", "+public void resolveStatements() {", "+\tif (!CharOperation.equals(this.scope.enclosingSourceType().sourceName, this.selector)){", "+\t\tthis.scope.problemReporter().missingReturnType(this);", "+\t}", "+", "+\tif (this.typeParameters != null) {", "+\t\tfor (int i = 0, length = this.typeParameters.length; i < length; i++) {", "+\t\t\tthis.typeParameters[i].resolve(this.scope);", "+\t\t}", "+\t}", "+\t", "+\t// if null ==> an error has occurs at parsing time ....", "+\tif (this.constructorCall != null) {", "+\t\t// e.g. using super() in java.lang.Object", "+\t\tif (this.binding != null", "+\t\t\t&& this.binding.declaringClass.id == TypeIds.T_JavaLangObject", "+\t\t\t&& this.constructorCall.accessMode != ExplicitConstructorCall.This) {", "+\t\t\t\tif (this.constructorCall.accessMode == ExplicitConstructorCall.Super) {", "+\t\t\t\t\tthis.scope.problemReporter().cannotUseSuperInJavaLangObject(this.constructorCall);", "+\t\t\t\t}", "+\t\t\t\tthis.constructorCall = null;", "+\t\t} else {", "+\t\t\tthis.constructorCall.resolve(this.scope);", "+\t\t}", "+\t}", "+\tif ((this.modifiers & ExtraCompilerModifiers.AccSemicolonBody) != 0) {", "+\t\tthis.scope.problemReporter().methodNeedBody(this);\t\t", "+\t}", "+\tsuper.resolveStatements();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f103c83377c7b5f609782eafdfe1255e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "12b1e5875f7cb2a3f64b814e5e7b2c6c8563e988", "commitAfterChange": "b592d345303d7808b56670b5117114aed9144310", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic int nullStatus(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic int nullStatus(FlowInfo flowInfo)", "diff": ["-\t\tif ((this.bits & IsNonNull) != 0 || ", "+\t\tif (/* (this.bits & IsNonNull) != 0 || */ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f123b1910e52e1ab5e20de20f26ea908", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected void search(String patternString, int searchFor, int limitTo, SearchRequestor requestor) throws CoreException", "signatureAfterChange": "  \tprotected void search(String patternString, int searchFor, int limitTo, SearchRequestor requestor) throws CoreException", "diff": ["-\t\t\tSearchEngine.createWorkspaceScope(),", "+\t\t\tthis.workspaceScope,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1553428c88f31d68fea13e007e6ce86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " \tpublic void test0368() throws JavaModelException", "signatureAfterChange": " \tpublic void test0368() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f18f9b88281cb95179ee0e0b27611986", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void testAccessRestriction2() throws Exception", "signatureAfterChange": "  public void testAccessRestriction2() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a4798acde609cfbcbe617fd04a9276", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "9f63437bec67bc6f1450b706ffa6a59a67485b74", "commitAfterChange": "2b5868a69a1295fe1d99f9e80995ceed273132ed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId)", "signatureAfterChange": " public static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId)", "diff": ["-\t */", "-\tpublic static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId) {", "-\t", "-\t\tif (scope.compilerOptions().getSeverity(CompilerOptions.UnnecessaryTypeCheck) == ProblemSeverities.Ignore) return;", "-\t", "-\t\t// check need for left operand cast", "-\t\tint alternateLeftTypeId = expressionTypeId;", "-\t\tif ((expression.bits & UnnecessaryCast) == 0 && expression.resolvedType.isBaseType()) {", "-\t\t\t// narrowing conversion on base type may change value, thus necessary", "+ */", "+public static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId) {", "+\tif (scope.compilerOptions().getSeverity(CompilerOptions.UnnecessaryTypeCheck) == ProblemSeverities.Ignore) return;", "+", "+\t// check need for left operand cast", "+\tint alternateLeftTypeId = expressionTypeId;", "+\tif ((expression.bits & ASTNode.UnnecessaryCast) == 0 && expression.resolvedType.isBaseType()) {", "+\t\t// narrowing conversion on base type may change value, thus necessary", "+\t\treturn;", "+\t} else  {", "+\t\tTypeBinding alternateLeftType = ((CastExpression)expression).expression.resolvedType;", "+\t\tif (alternateLeftType == null) return; // cannot do better", "+\t\tif ((alternateLeftTypeId = alternateLeftType.id) == expressionTypeId) { // obvious identity cast", "+\t\t\tscope.problemReporter().unnecessaryCast((CastExpression)expression); ", "-\t\t} else  {", "-\t\t\tTypeBinding alternateLeftType = ((CastExpression)expression).expression.resolvedType;", "-\t\t\tif (alternateLeftType == null) return; // cannot do better", "-\t\t\tif ((alternateLeftTypeId = alternateLeftType.id) == expressionTypeId) { // obvious identity cast", "-\t\t\t\tscope.problemReporter().unnecessaryCast((CastExpression)expression); ", "-\t\t\t\treturn;", "-\t\t\t} else if (alternateLeftTypeId == T_null) {", "-\t\t\t\talternateLeftTypeId = expressionTypeId;  // tolerate null argument cast", "-\t\t\t\treturn;", "-\t\t\t}", "+\t\t} else if (alternateLeftTypeId == TypeIds.T_null) {", "+\t\t\talternateLeftTypeId = expressionTypeId;  // tolerate null argument cast", "+\t\t\treturn;", "+\t}", "-\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a97895aefb5d7943e6dd2d74968817", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test420456()", "signatureAfterChange": " \tpublic void test420456()", "diff": ["-\t\trunConformTest(", "+\t\trunConformTestWithLibs(", "-\t\t\tgetCompilerOptions(), ", "+\t\t\tgetCompilerOptions(),", "+\t\t\t\"\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d188d208f6a70067573de9b58d93e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "51c3a83b72566da0bc051063e5ffe993e7132633", "commitAfterChange": "d71b3ce043b24a156efd3f7e8d9fe75d5e1e2f32", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\tif (this.resolvedType != null)", "+\t\t\treturn this.resolvedType;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ec73c3bc39cb3f9686743b1ca47028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void setUp() throws Exception", "signatureAfterChange": "      protected void setUp() throws Exception", "diff": ["-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2139a2c0619f3a1f453e1976bce4f46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "3206b2110cd001cb4cebcd80ce087ca7f8c0be4e", "commitAfterChange": "d164ba9e4539a85a4d779b821428852717828b26", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic int getLength()", "signatureAfterChange": " \tpublic int getLength()", "diff": ["-\t\treturn length;", "+\t\treturn this.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f22b7a1e15ae9cb33ae62644c9cf055f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 327, "signatureBeforeChange": " \tpublic void test0325() throws JavaModelException", "signatureAfterChange": " \tpublic void test0325() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25179b52a171b2e1908d9da9a88c084", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NumberLiteral.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic String getToken()", "signatureAfterChange": "  \tpublic String getToken()", "diff": ["-\t\treturn tokenValue;", "+\t\treturn this.tokenValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25ccc1911334aedb77df101ea86072f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Assignment.Operator getOperator()", "signatureAfterChange": "  \tpublic Assignment.Operator getOperator()", "diff": ["-\t\treturn assignmentOperator;", "+\t\treturn this.assignmentOperator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26f6fcf3a37c688f96dd0289fbee34e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void test0449() throws JavaModelException", "signatureAfterChange": " \tpublic void test0449() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f272ae50bcf89049e37449bcf33c8f76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 304, "signatureBeforeChange": " \tpublic void test0658()", "signatureAfterChange": " \tpublic void test0658()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f27813f7c7c965a2f620c3f0e42e9ec6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 164, "signatureBeforeChange": " final public void instance_of(TypeBinding typeBinding)", "signatureAfterChange": " final public void instance_of(TypeBinding typeBinding)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tinstance_of:\"+typeBinding); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f294e43e42e580951da9c341d8aa60c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 289, "signatureBeforeChange": " protected void consumeToken(int type)", "signatureAfterChange": " protected void consumeToken(int type)", "diff": ["-\t\t\t\tproblemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);", "+\t\t\t\tif(!this.statementRecoveryActivated) problemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);", "-\t\t\t\tproblemReporter().useEnumAsAnIdentifier((int) (positions >>> 32), (int) positions);", "+\t\t\t\tif(!this.statementRecoveryActivated) problemReporter().useEnumAsAnIdentifier((int) (positions >>> 32), (int) positions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29c56d9caf43c876c664c8d01668142", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tpublic void test0510() throws JavaModelException", "signatureAfterChange": " \tpublic void test0510() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a2114e85208ede6420747b2594c838", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "signatureAfterChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "diff": ["-\tif (visitor.visit(this, scope)) {\r", "-\t\tblock.traverse(visitor, scope);\r", "-\t}\r", "+\tblock.traverse(visitor, scope);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a9ce9ed652103679d21a5fd97acf63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public IType createType(String content, IJavaElement sibling, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r public IType createType(String content, IJavaElement sibling, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tString source = \"\"; //$NON-NLS-1$\r", "+\t\tString source = \"\"/*nonNLS*/;\r", "-\t\t\tsource = \"package \" + pkg.getElementName() + \";\"  + JavaModelManager.LINE_SEPARATOR + JavaModelManager.LINE_SEPARATOR; //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\tsource = \"package \"/*nonNLS*/ + pkg.getElementName() + \";\"/*nonNLS*/ + JavaModelManager.LINE_SEPARATOR;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2aa2ef07b17143cb9cddeffe158083b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 228, "signatureBeforeChange": " \tpublic void test0226() throws JavaModelException", "signatureAfterChange": " \tpublic void test0226() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ae4c0ae154e9457993fd5291493b4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void select(\r \t\tICompilationUnit sourceUnit,\r \t\tint selectionSourceStart,\r \t\tint selectionSourceEnd)", "signatureAfterChange": "\r public void select(ICompilationUnit sourceUnit, int selectionSourceStart, int selectionSourceEnd)", "diff": ["-\t */\r", "-\tpublic void select(\r", "-\t\tICompilationUnit sourceUnit,\r", "-\t\tint selectionSourceStart,\r", "-\t\tint selectionSourceEnd) {\r", "-\r", "-\t\tchar[] source = sourceUnit.getContents();\r", "-\t\tif (!checkSelection(source, selectionSourceStart, selectionSourceEnd - 1))\r", "-\t\t\treturn;\r", "-\t\ttry {\r", "-\t\t\tacceptedAnswer = false;\r", "-\t\t\tCompilationResult result = new CompilationResult(sourceUnit, 1, 1);\r", "-\t\t\tCompilationUnitDeclaration parsedUnit =\r", "-\t\t\t\tparser.dietParse(sourceUnit, result, actualSelectionStart, actualSelectionEnd);\r", "-\r", "-\t\t\tif (parsedUnit != null) {\r", "-\t\t\t\t// scan the package & import statements first\r", "-\t\t\t\tif (parsedUnit.currentPackage instanceof SelectionOnPackageReference) {\r", "-\t\t\t\t\tchar[][] tokens =\r", "-\t\t\t\t\t\t((SelectionOnPackageReference) parsedUnit.currentPackage).tokens;\r", "-\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));\r", "-\t\t\t\t\treturn;\r", "-\t\t\t\t}\r", "-\t\t\t\tImportReference[] imports = parsedUnit.imports;\r", "-\t\t\t\tif (imports != null) {\r", "-\t\t\t\t\tfor (int i = 0, length = imports.length; i < length; i++) {\r", "-\t\t\t\t\t\tImportReference importReference = imports[i];\r", "-\t\t\t\t\t\tif (importReference instanceof SelectionOnImportReference) {\r", "-\t\t\t\t\t\t\tchar[][] tokens = ((SelectionOnImportReference) importReference).tokens;\r", "-\t\t\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));\r", "-\t\t\t\t\t\t\tnameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), this);\r", "-\t\t\t\t\t\t\tif (!acceptedAnswer)\r", "-\t\t\t\t\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);\r", "-\t\t\t\t\t\t\t// try with simple type name\r", "-\t\t\t\t\t\t\treturn;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\r", "-\t\t\t\tif (parsedUnit.types != null) {\r", "-\t\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);\r", "-\t\t\t\t\tif (parsedUnit.scope != null) {\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);\r", "-\t\t\t\t\t\t\tparsedUnit.scope.faultInTypes();\r", "-\t\t\t\t\t\t\tparseMethod(parsedUnit, selectionSourceStart);\r", "-\t\t\t\t\t\t\tparsedUnit.resolve();\r", "-\t\t\t\t\t\t} catch (SelectionNodeFound e) {\r", "-\t\t\t\t\t\t\tif (e.binding != null) {\r", "-\t\t\t\t\t\t\t\t// if null then we found a problem in the selection node\r", "-\t\t\t\t\t\t\t\tselectFrom(e.binding);\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\r", "-\t\t\t// only reaches here if no selection could be derived from the parsed tree\r", "-\t\t\t// thus use the selected source and perform a textual type search\r", "-\t\t\tif (!acceptedAnswer) {\r", "-\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);\r", "-\t\t\t}\r", "-\t\t} catch (IndexOutOfBoundsException e) { // work-around internal failure - 1GEMF6D\t\t\r", "-\t\t} catch (AbortCompilation e) { // ignore this exception for now since it typically means we cannot find java.lang.Object\r", "-\t\t} finally {\r", "-\t\t\treset();\r", "+ */\r", "+public void select(ICompilationUnit sourceUnit, int selectionSourceStart, int selectionSourceEnd) {\r", "+\tchar[] source = sourceUnit.getContents();\r", "+\tif (!checkSelection(source, selectionSourceStart, selectionSourceEnd)) return;\r", "+\ttry{\r", "+\t\tacceptedAnswer = false;\r", "+\t\tCompilationResult result = new CompilationResult(sourceUnit, 1, 1);\r", "+\t\tCompilationUnitDeclaration parsedUnit = parser.dietParse(sourceUnit, result, actualSelectionStart, actualSelectionEnd);\r", "+\r", "+\t\tif (parsedUnit != null) {\r", "+\t\t\t// scan the package & import statements first\r", "+\t\t\tif (parsedUnit.currentPackage instanceof SelectionOnPackageReference) {\r", "+\t\t\t\tchar[][] tokens = ((SelectionOnPackageReference) parsedUnit.currentPackage).tokens;\r", "+\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));\r", "+\t\t\tImportReference[] imports = parsedUnit.imports;\r", "+\t\t\tif (imports != null) {\r", "+\t\t\t\tfor (int i = 0, length = imports.length; i < length; i++) {\r", "+\t\t\t\t\tImportReference importReference = imports[i];\r", "+\t\t\t\t\tif (importReference instanceof SelectionOnImportReference) {\r", "+\t\t\t\t\t\tchar[][] tokens = ((SelectionOnImportReference) importReference).tokens;\r", "+\t\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));\r", "+\t\t\t\t\t\tnameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), this);\r", "+\t\t\t\t\t\tif (!acceptedAnswer)\r", "+\t\t\t\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this); // try with simple type name\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\tif (parsedUnit.types != null) {\r", "+\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);\r", "+\t\t\t\tif (parsedUnit.scope != null) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);\r", "+\t\t\t\t\t\tparsedUnit.scope.faultInTypes();\r", "+\t\t\t\t\t\tparseMethod(parsedUnit, selectionSourceStart);\r", "+\t\t\t\t\t\tparsedUnit.resolve();\r", "+\t\t\t\t\t} catch (SelectionNodeFound e) {\r", "+\t\t\t\t\t\tif (e.binding != null) { // if null then we found a problem in the selection node\r", "+\t\t\t\t\t\t\tselectFrom(e.binding);\r", "+\t\t}\r", "+\t\t// only reaches here if no selection could be derived from the parsed tree\r", "+\t\t// thus use the selected source and perform a textual type search\r", "+\t\tif (!acceptedAnswer) {\r", "+\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);\r", "+\t\t}\r", "+\t} catch (IndexOutOfBoundsException e) { // work-around internal failure - 1GEMF6D\t\t\r", "+\t} catch (AbortCompilation e) { // ignore this exception for now since it typically means we cannot find java.lang.Object\r", "+\t} finally {\r", "+\t\treset();\r", "+\t}\t\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2c57c36742b2d48afb636300322baec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BreakStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic String toString(int tab)", "signatureAfterChange": " \t \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["-\tpublic String toString(int tab) {", "+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "-\t\tString s = tabString(tab);", "-\t\ts += \"break \"; //$NON-NLS-1$", "-\t\tif (label != null)", "-\t\t\ts += new String(label);", "-\t\treturn s;", "+\t\tprintIndent(tab, output).append(\"break \"); //$NON-NLS-1$", "+\t\tif (label != null) output.append(label);", "+\t\treturn output.append(';');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f32016fa3691b47420b893951fa5357d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "251f99acbb8995bd23d5e9a86fb5718901825772", "commitAfterChange": "b82e4a0e1d547d361495e1d72928b04c339786b5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void testCycle5() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle5() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\"});//$NON-NLS-1$ //$NON-NLS-2$", "-\t\tfullBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p1.X\", \"p2.Y\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$ ", "-\t\texpectingOnlySpecificProblemsFor(p1,new Problem[]{", "-\t\t\tnew Problem(\"p1\", \"The import p22 cannot be resolved\", c1),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "-\t\t\tnew Problem(\"p2\", \"The import p11 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\t", "-\t\tenv.addClass(root1, \"p11\", \"XX\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p11;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class XX {\\n\"+ //$NON-NLS-1$", "-\t\t\t\"}\\n\" //$NON-NLS-1$", "-\t\t\t);", "-\t\tenv.addClass(root2, \"p22\", \"YY\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p22;\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class YY {\\n\"+ //$NON-NLS-1$", "-\t\t\t\"}\\n\" //$NON-NLS-1$", "-\t\t\t);", "+\t\ttry {", "+\t\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\"});//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tfullBuild();", "-\t\tincrementalBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p11.XX\", \"p22.YY\", \"p2.Y\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$", "-\t\texpectingOnlySpecificProblemsFor(p1,new Problem[]{", "-\t\t\tnew Problem(\"p1\", \"The import p22 is never used\", c1),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "-\t\t\tnew Problem(\"p2\", \"The import p11 is never used\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\t", "-\t\tJavaCore.setOptions(options);", "+\t\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p1.X\", \"p2.Y\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$ ", "+\t\t\texpectingOnlySpecificProblemsFor(p1,new Problem[]{", "+\t\t\t\tnew Problem(\"p1\", \"The import p22 cannot be resolved\", c1),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "+\t\t\t\tnew Problem(\"p2\", \"The import p11 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\t", "+\t\t\tenv.addClass(root1, \"p11\", \"XX\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\"package p11;\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"public class XX {\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"}\\n\" //$NON-NLS-1$", "+\t\t\t\t);", "+\t\t\tenv.addClass(root2, \"p22\", \"YY\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\"package p22;\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"public class YY {\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"}\\n\" //$NON-NLS-1$", "+\t\t\t\t);", "+\t\t\t\t", "+\t\t\tincrementalBuild();", "+\t\t\t", "+\t\t\texpectingCompilingOrder(new String[]{\"p11.XX\", \"p22.YY\", \"p2.Y\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$", "+\t\t\texpectingOnlySpecificProblemsFor(p1,new Problem[]{", "+\t\t\t\tnew Problem(\"p1\", \"The import p22 is never used\", c1),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "+\t\t\t\tnew Problem(\"p2\", \"The import p11 is never used\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\t", "+\t\t\tJavaCore.setOptions(options);", "+\t\t} finally {", "+\t\t\tenv.setBuildOrder(null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f35e9398ed646deb926b789a592998e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "92852bca9a4e0ceab73bc2cba44652396852b1a5", "commitAfterChange": "20fabe8e19e8477c8c4c948361535071499aefa9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tfinal TypeBinding collectionTypeBinding = collection.resolvedType.erasure();", "-\t\t\t\t\t\t\t(ReferenceBinding) collectionTypeBinding);", "-\t\t\t\tif (collectionTypeBinding.isInterface()) {", "+\t\t\t\t\t\t\t(ReferenceBinding) this.iteratorReceiverType.erasure());", "+\t\t\t\tif (this.iteratorReceiverType.isInterface()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f35ff27230f2b70198270b637757fb00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "cae7f8c61c51ef4d85d837657b5392af988fbdde", "commitAfterChange": "578d821fa14706debbd7277feb7d8a3dc6683433", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testNonExistingPackageFragment() throws CoreException", "signatureAfterChange": " public void testNonExistingPackageFragment1() throws CoreException", "diff": ["-public void testNonExistingPackageFragment() throws CoreException {", "+public void testNonExistingPackageFragment1() throws CoreException {", "-\t\tassertOpenFails(pkg);", "+\t\tassertOpenFails(", "+\t\t\t\"x [in src [in P]] does not exist\", ", "+\t\t\tpkg);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f376651e24cf46d571fa5ced2f27c3db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "2c3f4d30d38882864a995c2f7d58509937669409", "commitAfterChange": "332315450b85adb15731aa3686bd6820d8e1eb99", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void deleteProject(String projectName) throws CoreException", "signatureAfterChange": " protected void deleteProject(String projectName) throws CoreException", "diff": ["-\t", "-\tif (project.isAccessible()) {", "-\t\tint retryCount = 10;", "-\t\twhile (--retryCount >= 0) {", "-\t\t\ttry {", "-\t\t\t\tThread.sleep(1000);", "-\t\t\t} catch (InterruptedException e) {", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\tproject.delete(true, null);", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tlastException = e;", "-\t\t\t}", "-\t\t\tif (!project.isAccessible()) return;", "+\tint retryCount = 60; // wait 1 minute at most", "+\twhile (project.isAccessible() && --retryCount >= 0) {", "+\t\ttry {", "+\t\t\tThread.sleep(1000);", "+\t\t} catch (InterruptedException e) {", "-\t\tSystem.err.println(\"Failed to delete project \" + projectName);", "+\t\ttry {", "+\t\t\tproject.delete(true, null);", "+\t\t} catch (CoreException e) {", "+\t\t\tlastException = e;", "+\t\t}", "+\tif (!project.isAccessible()) return;", "+\tSystem.err.println(\"Failed to delete project \" + projectName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38dd2e40572c78d4f24ce00423345d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": " \tpublic void test0633()", "signatureAfterChange": " \tpublic void test0633()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39bdfa50915f7144bf54d41d5f73f30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 258, "signatureBeforeChange": " \tpublic void test0256() throws JavaModelException", "signatureAfterChange": " \tpublic void test0256() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b58bda9e6676fa5961798d5133f23e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "e254cb1235fced696c16505589db91831c0df710", "commitAfterChange": "fdf4380d8dd2e7b1f08462c3e15a52a8d6142eb4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate boolean examineGetDeclaredTypeParameterized()", "signatureAfterChange": " \tprivate boolean examineGetDeclaredTypeParameterized()", "diff": ["-\t\tTypeElement mapDecl = _elementUtils.getTypeElement(\"java.util.Map\");", "+\t\tTypeElement mapDecl = _elementUtils.getTypeElement(Map.class.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b6bf23b4dee17daa2aafd3b8679ab9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \t public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext,  \t\tFlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "-\t\t// record setting a variable: various scenarii are possible, setting an array reference, ", "-\t\t// a field reference, a blank final field reference, a field of an enclosing instance or ", "-\t\t// just a local variable.", "-\t", "-\t\treturn  ((Reference) lhs).analyseAssignment(currentScope, flowContext, flowInfo, this, true).unconditionalInits();", "-\t}", "+public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, ", "+\t\tFlowInfo flowInfo) {", "+\t// record setting a variable: various scenarii are possible, setting an array reference, ", "+\t// a field reference, a blank final field reference, a field of an enclosing instance or ", "+\t// just a local variable.", "+\tlhs.checkNPE(currentScope, flowContext, flowInfo, false /* skip String */);", "+\treturn  ((Reference) lhs).analyseAssignment(currentScope, flowContext, flowInfo, this, true).unconditionalInits();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d89f4312326b88645d5bcc9a210400", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " \tpublic void test0503b() throws JavaModelException", "signatureAfterChange": " \tpublic void test0503b() throws JavaModelException", "diff": ["-\t\tCompilationUnit unit = (CompilationUnit)runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tCompilationUnit unit = (CompilationUnit)runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f3f95c097a73098cc11cf4304993d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ed97a9ed7d7ba3ec97e93e9090fed591e33f5e45", "commitAfterChange": "28b3f6a2d51893a693b3379d410e5e3723b26338", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "signatureAfterChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "diff": ["+\t\t\t\t\t\tif (perFactoryWorkingCopies.isEmpty()) {", "+\t\t\t\t\t\t\tthis.sharedWorkingCopies.remove(workingCopy.owner);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f9a6304925d587d88f9d6448405384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "  \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tfindKeywords(token, BASE_TYPE_NAMES, false, false);", "+\t\t\t\t\t\t\tfindKeywords(token, BASE_TYPE_NAMES, false, false, false);", "-\t\t\t\t\t\t\tfindKeywords(token, BASE_TYPE_NAMES_WITHOUT_VOID, false, false);", "+\t\t\t\t\t\t\tfindKeywords(token, BASE_TYPE_NAMES_WITHOUT_VOID, false, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4031d3368170c0b1640701ecd97ff8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f424c29de79a65356f5d7cfee72b9277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve (BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve (BlockScope scope)", "diff": ["+\t\tthis.binding.closeTracker = this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42e3c786b4b29b3c56b3cd3b2eb1116", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 264, "signatureBeforeChange": " \tpublic void test0262() throws JavaModelException", "signatureAfterChange": " \tpublic void test0262() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f44cfad35c010d52ad2ff1e3326863c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Expression getInitializer()", "signatureAfterChange": "  \tpublic Expression getInitializer()", "diff": ["-\t\treturn optionalInitializer;", "+\t\treturn this.optionalInitializer;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f454208883407c693b5bcb23a91dedcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectResourceCopier.java", "commitBeforeChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "commitAfterChange": "7daad62a7da8e2cda84019954d93fab0a22e7d3c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r  private void updateAffectedResources0(IResourceDelta delta)", "signatureAfterChange": "\r  private void updateAffectedResources0(IResourceDelta delta)", "diff": ["-\t\tcase IResourceDelta.ADDED:\r", "+\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break; // only consider content change\r", "+\t\tcase IResourceDelta.ADDED:\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f475017b02a8cc580e43822ea7f2face", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Javadoc.java", "commitBeforeChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "commitAfterChange": "3032de1870d006c819c7d178849a7bb1bd98ddbe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic List tags()", "signatureAfterChange": "  \tpublic List tags()", "diff": ["-\t\treturn tags;", "+\t\treturn this.tags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49ee3f0e3cacda1efe0b5fb693f7aa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "f2be901d0ed328efb4a5e45fb30ba2c343c05da5", "commitAfterChange": "0965f94fcf25c58481843c54243c47361df46a52", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void checkCompilerArgs(String[] args)", "signatureAfterChange": " \tprivate void checkCompilerArgs(String[] args)", "diff": ["-\t\t\t\t\t\t\tCharOperation.replace(content, SEPARATOR_CHARS, File.separatorChar, start, accessStart + 1);", "+\t\t\t\t\t\t\tCharOperation.replace(content, SEPARATOR_CHARS, File.separatorChar, start, accessStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4c9d99290e7ac68c0ce296a5a65993d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblem.java", "commitBeforeChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "commitAfterChange": "3f8b6386f2cd9ac0059fbfe82973e311a492a851", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int getSourceEnd()", "signatureAfterChange": " \tpublic int getSourceEnd()", "diff": ["-\t\treturn endPosition;", "+\t\treturn this.endPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4cb0b05da8fae943b8e4745030d32d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void invokeJavaLangReflectMethodInvoke()", "signatureAfterChange": " protected void invokeJavaLangReflectMethodInvoke()", "diff": ["-\t\t\tQualifiedNamesConstants.JAVALANGREFLECTMETHOD_CONSTANTPOOLNAME,", "-\t\t\tQualifiedNamesConstants.INVOKE_METHOD_METHOD_NAME,", "-\t\t\tQualifiedNamesConstants.INVOKE_METHOD_METHOD_SIGNATURE);", "+\t\t\tConstantPool.JAVALANGREFLECTMETHOD_CONSTANTPOOLNAME,", "+\t\t\tConstantPool.INVOKE_METHOD_METHOD_NAME,", "+\t\t\tConstantPool.INVOKE_METHOD_METHOD_SIGNATURE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d04c1451d73b78d707fbe1a697cb3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic IPath[] getInclusionPatterns()", "signatureAfterChange": " \tpublic IPath[] getInclusionPatterns()", "diff": ["-\t\t\treturn this.accessibleFiles;", "+\t\t\treturn getAccessibleFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f5f8434d24ee692e3a6f60dbbc48c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "41f0e0054ad6ecc1ea34b869c24b09b45fb10ff6", "commitAfterChange": "57f71dbcbb6986e1c76d51b49e788951c6fe709e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public void open(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "signatureAfterChange": "\r public void open(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "diff": ["-\tif (isDestroyed) {\r", "+\tif (this.managedCount == 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f87c2d7f41e5ac49f43f3f2a694ad6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t!(((cst = this.condition.optimizedBooleanConstant()) != NotAConstant", "+\t\t\t!(((cst = this.condition.optimizedBooleanConstant()) != Constant.NotAConstant", "-\t\t\t!((cst != NotAConstant && cst.booleanValue() == true)", "+\t\t\t!((cst != Constant.NotAConstant && cst.booleanValue() == true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5427cfe5e8015385dcac796a983e75e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void test0131() throws JavaModelException", "signatureAfterChange": " \tpublic void test0131() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f544851e00767e4de5f2a7bdd505ae03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/Indents.java", "commitBeforeChange": "1f25db82a90d7dfb41e186c23361a31470988684", "commitAfterChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, String newIndent)", "signatureAfterChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, int indentWidth, String newIndent)", "diff": ["-\tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, String newIndent) {", "+\tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int sourceIndentLevel, int tabWidth, int indentWidth, String newIndent) {", "-\t\t\t\tint length= Indents.computeIndentLength(line, sourceIndentLevel, tabWidth);", "+\t\t\t\tint length= Indents.computeIndentLength(line, sourceIndentLevel, tabWidth, indentWidth);", "-\t\t\t\t\tlength= Indents.computeIndent(line, tabWidth);", "+\t\t\t\t\tlength= Indents.computeIndentUnits(line, tabWidth, indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f56766c8b0b5497b9b3f47bb3fe8bad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void test0009() throws JavaModelException", "signatureAfterChange": " public void test0009() throws JavaModelException", "diff": ["-\t\t\"element:T_1    completion:T_1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:T_2    completion:T_2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "+\t\t\"element:T_1    completion:T_1    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\"element:T_2    completion:T_2    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58021c09e803a8b26d364f8e610d590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LineComment.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59c23e0c51c5471c90e9ebf03a13d52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void test055()", "signatureAfterChange": " \tpublic void test055()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b104c9a81c7c6963eea5e813308e6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST4_2.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 380, "signatureBeforeChange": " \tpublic void test0721() throws JavaModelException", "signatureAfterChange": " \tpublic void test0721() throws JavaModelException", "diff": ["-\t\t\t\tAST.JLS3,", "+\t\t\t\tAST.JLS3_INTERNAL,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5c9e7cc0c17401038389d0f90823ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b6af6dcd9d59b97edc4052f4f7dbcdc0b2982ddb", "commitAfterChange": "9d7258bf3ad30f4e44cac31c46a6f0a185b84bcd", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \t \tpublic void test058()", "signatureAfterChange": " \t \tpublic void test058()", "diff": ["+\t\t\te.printStackTrace();", "+\t\t\te.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d3647c2d4c99fa87f3296ecb4ed109", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test0002() throws JavaModelException", "signatureAfterChange": " \tpublic void test0002() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5eb48d613228eed9768e77a19d49a78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "ed4cdf5cf5dec0284dce12a661248f2f9a27a709", "commitAfterChange": "25da2d2772e9dbe01e64990a2188903ca45b793c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static void checkNeedForCastCast(BlockScope scope, CastExpression enclosingCast)", "signatureAfterChange": " public static void checkNeedForCastCast(BlockScope scope, CastExpression enclosingCast)", "diff": ["+\talternateCast.resolvedType = enclosingCast.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fbddc974570bf054da15ba8ee02712", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "be2cc93d845983531740f996d21ff395fe56b532", "commitAfterChange": "e28f43e10ef52ae9d2879a1a39bdff7cce868319", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 327, "signatureBeforeChange": " \tpublic void test0678() throws JavaModelException", "signatureAfterChange": " \tpublic void test0678() throws JavaModelException", "diff": ["-\t\t\tASTNode node = buildAST(", "-\t\t\t\tcontents,", "-\t\t\t\tworkingCopy);", "+\t\t\tworkingCopy.getBuffer().setContents(contents.toCharArray());", "+\t\t\tASTNode node = runConversion(AST.JLS3, workingCopy, true);\t\t\t", "-\t\t\tassertProblemsSize(unit, 0);", "+\t\t\tString expectedOutput = \"Dead code\";", "+\t\t\tassertProblemsSize(unit, 1, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fc706e47aefd9f90f440db2c0bf120", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "59cf996337684de4f19867be3f0f9ff3756534dc", "commitAfterChange": "5c2fa534b3da997c68c8a8428fa68767a0e6e936", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public final int sourceStart()", "signatureAfterChange": " public final int sourceStart()", "diff": ["-\tif (method == null)", "+\tif (method == null) {", "+\t\tif (this.declaringClass instanceof SourceTypeBinding)", "+\t\t\treturn ((SourceTypeBinding) this.declaringClass).sourceStart();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60346a582972692bbdd027205b31323", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AssertStatement.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6305f647c5b87a80d1e60be4a5fa965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": " \tpublic void testMethodDeclaration()", "signatureAfterChange": " \tpublic void testMethodDeclaration()", "diff": ["-\t\t\tx.extraDimensions().add(this.ast.newExtraDimension());", "+\t\t\tx.extraDimensions().add(this.ast.newDimension());", "-\t\t\t\t\tnew Property(\"ExtraDimensions\", true, ExtraDimension.class) { //$NON-NLS-1$", "+\t\t\t\t\tnew Property(\"ExtraDimensions\", true, Dimension.class) { //$NON-NLS-1$", "-\t\t\t\t\t\t\tExtraDimension result = targetAst.newExtraDimension();", "+\t\t\t\t\t\t\tDimension result = targetAst.newDimension();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6375b836c533d6de9b71cf668009ae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "signatureAfterChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "diff": ["-\t\tchar[] source = typeSignature.replace('$','.').toCharArray();", "+\t\tchar[] source = Signature.removeCaptureFromMethod(typeSignature.toCharArray());", "+\t\tCharOperation.replace(source, '$', '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f647f58cc95d844a3815fcd8593b3a81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "fd19dfb11535c216820cbb7ea651282176d7f285", "commitAfterChange": "a71748b329bb09485d952dce5b30b2cf83046b40", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  protected BuildContext[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "signatureAfterChange": "  protected BuildContext[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "diff": ["-\t\t\t\tif (!uniqueFiles.includes(sourceFile))", "-\t\t\t\t\tuniqueFiles.add(sourceFile);", "+\t\t\t\tif (uniqueFiles.addIfNotIncluded(sourceFile) == sourceFile) {", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f64e9284cd04b96f524809c5316c2209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["+}", "+\tif (this.hasTypeAnnotations())", "+\t\treturn super.annotatedDebugName() + \"(unresolved)\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6930c5f980006140d7d1007a06e2786", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cf9c7cea96160003af34283825606edc3c2c1093", "commitAfterChange": "efc419b387a0a3a2ade2400804fe8bdb3b8b33d1", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tClassScope scope)", "diff": ["-\t\tint dimensions = parameterizedSingleTypeReference.dimensions;", "+\t\tint dimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6973ada04abcf68a0ce5f5cfcb89af8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["-\t\t\tif (offset > 0x7FFF && !this.codeStream.wideMode) {", "+\t\t\tif (Math.abs(offset) > 0x7FFF && !this.codeStream.wideMode) {", "-\t\t\t\t\t\t\tif (offset > 0x7FFF && !this.codeStream.wideMode) {", "+\t\t\t\t\t\t\tif (Math.abs(offset) > 0x7FFF && !this.codeStream.wideMode) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6995924f7fd436c0102872902b0aad1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "5ace079b4442061b4444e438c1249a5ce6b57096", "commitAfterChange": "8e6daf0f80a341b6f427787b22f91efeae735e44", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " HashtableOfObject addQueryResults(char[][] categories, char[] key, int matchRule, MemoryIndex memoryIndex) throws IOException", "diff": ["-\t// No need to check the results table for duplicacy while processing the ", "+\t// No need to check the results table for duplicates while processing the", "-\tif (results == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71f67d5e8f24ee2d1e2e0ad46037063", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "signatureAfterChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "diff": ["-\tif (visitor.visit(this, scope)) {\r", "-\t\tblock.traverse(visitor, scope);\r", "-\t}\r", "+\tblock.traverse(visitor, scope);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f72df85105fb1d487c8d625da1703cf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "795b8f01327cb87df37507e9607684778dbd8b24", "commitAfterChange": "d5d80bf8463f6c0b6cb8067c68b421cb5ca1a549", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test0007() throws JavaModelException", "signatureAfterChange": " \tpublic void test0007() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);", "+\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f745befb9f6b4fc0c5d5ea41e1771ce4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final boolean isDefaultAbstract()", "signatureAfterChange": " public final boolean isDefaultAbstract()", "diff": ["-\treturn (modifiers & AccDefaultAbstract) != 0;", "+\treturn (modifiers & ExtraCompilerModifiers.AccDefaultAbstract) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f747fb27963f24f26b13d74c2d2851ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void testBug424725()", "signatureAfterChange": " \tpublic void testBug424725()", "diff": ["-\t\trunConformTest(", "+\t\trunConformTestWithLibs(", "-\t\t\t});", "+\t\t\t},", "+\t\t\tnull,", "+\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75266f5c5a39de458294cf0354fd126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "commitAfterChange": "8acc10d4567dfe19e44450e6767e3412557d0ca5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic boolean isLocal()", "signatureAfterChange": " \tpublic boolean isLocal()", "diff": ["-\t\t\tif (referenceBinding.isLocalType()) {", "-\t\t\t\treturn !referenceBinding.isMemberType();", "-\t\t\t}", "+\t\t\treturn referenceBinding.isLocalType() && !referenceBinding.isMemberType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f753dcf9f6aaa68153437f812d5ebd92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionContext.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean isInJavadoc()", "signatureAfterChange": " \tpublic boolean isInJavadoc()", "diff": ["-\t\treturn inJavadoc;", "-\t}", "+\t\treturn this.inJavadoc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f784e62688595706758249d8705e81c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 315, "signatureBeforeChange": " \tpublic void test0313() throws JavaModelException", "signatureAfterChange": " \tpublic void test0313() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78883a03a63fc07946f09481ba5aea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "df7db86dfdaff61d3ebc9328b44d180f263988fe", "commitAfterChange": "d781dcbe8a593d5ba6dc04230bf23771b905f7bd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "signatureAfterChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "diff": ["-\t\t\tif (!isDigit(this.currentCharacter)) {", "+\t\t\tif (!ScannerHelper.isDigit(this.currentCharacter)) {", "-\t\t\tif (!isDigit(this.currentCharacter)) {", "+\t\t\tif (!ScannerHelper.isDigit(this.currentCharacter)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f788f6830b2c81982f3c19db8a8ee50b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 242, "signatureBeforeChange": " \tpublic void test0240() throws JavaModelException", "signatureAfterChange": " \tpublic void test0240() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ad463a640215daa8f57b2accb68efb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/FactoryPath.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static synchronized void addContainers( \t\t\tIJavaProject jproj, Map<FactoryContainer, Boolean> adds)  \t\t\tthrows IOException, CoreException", "signatureAfterChange": " \tpublic static synchronized void addContainers( \t\t\tIJavaProject jproj, Map<FactoryContainer, Boolean> adds)  \t\t\tthrows CoreException", "diff": ["-\t\t\tthrows IOException, CoreException {", "+\t\t\tthrows CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c718dbe765fef0e800e129792a5208", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "faddcb079bee5b548a6f2f972d8258d3ff3dc5d3", "commitAfterChange": "7596807cbc20be2267cc443bfe387f40df0774fb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \r \tprivate void findMessageSends(\r \t\tchar[] token,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \r \tprivate void findImplicitMessageSends(\r \t\tchar[] token,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["-\tprivate void findMessageSends(\r", "+\tprivate void findImplicitMessageSends(\r", "-\t\t\t\t\t\tfalse);\r", "+\t\t\t\t\t\ttrue);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7cf083dc864ea50e771cf1a3620819d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d8fb3f7569e329d4fb960b19601e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 335, "methodNumberAfterChange": 335, "signatureBeforeChange": " \tpublic void test0333() throws JavaModelException", "signatureAfterChange": " \tpublic void test0333() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e0ba98c50b78e9f7522f799dd44614", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleType.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7f17d37f2df7899b9946ffe3eada714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "9f8c0aff4541413a1d59ce816c9847753c28077a", "commitAfterChange": "9252f03474977360ba3ba4ad93fe71b877d8ccd9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   protected char[][][] collect() throws JavaModelException", "signatureAfterChange": "   protected char[][][] collect() throws JavaModelException", "diff": ["-\t\t\t\t\t\tOpenable openable = this.locator.handleFactory.createOpenable(paths[i]);", "+\t\t\t\t\t\tOpenable openable = this.locator.handleFactory.createOpenable(paths[i], this.locator.scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7f3305d317fa55b330b55977bd24c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DoStatement.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7f4c82a6d4a5470fc27ae2d024b406f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " \tpublic void test0553() throws JavaModelException", "signatureAfterChange": " \tpublic void test0553() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7fc72267f880c63b7a767005bf1842b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tthis.constant = NotAConstant;", "+\t\t\tthis.constant = Constant.NotAConstant;", "-\t\t\tthis.constant = NotAConstant;", "+\t\t\tthis.constant = Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8185bc7cadc727f27657e18fc80f4d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "39d32f5e4ee84789083e70f4cc4809ffcab95dfb", "commitAfterChange": "59f03826f615370a6f009ba9a2e76ba723063a75", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddExclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnCompilationUnit() throws CoreException", "diff": ["-\tthis.createFolder(\"/P/src/p\");", "-\tthis.createFile(", "+\tcreateFolder(\"/P/src/p\");", "+\tcreateFile(", "-\tthis.setClasspath(new String[] {\"/P/src\", \"**/A.java\"});", "+\tsetClasspath(new String[] {\"/P/src\", \"**/A.java\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8251629d77fb3f50b142006edb6ef50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void test0448() throws JavaModelException", "signatureAfterChange": " \tpublic void test0448() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8317ffb14a6e4ee417f4433bc8edfcd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void test0042() throws JavaModelException", "signatureAfterChange": " \tpublic void test0042() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84c07ce4e8acc028a65a5298d928bb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "bdd2ddc06125eff9d34246fb7941b569e87e3115", "commitAfterChange": "600ba421e993a3511db7b319a6d0197d8fd20d42", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private Hashtable<String, String> getPackageTypes(char[] typeName, String qualifiedPackageName)", "signatureAfterChange": " private Hashtable<String, String> getPackageTypes(char[] typeName, String qualifiedPackageName)", "diff": ["-\t\t\t\t\tnew CompilerOptions(JavaCore.getOptions()),", "+\t\t\t\t\tnew CompilerOptions(this.options),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f85e9681d682d28f4443ee99d365161d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tpublic void test0119() throws JavaModelException", "signatureAfterChange": " \tpublic void test0119() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87a0137ebb254965921cd09832fddde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": " \tpublic void test0136() throws JavaModelException", "signatureAfterChange": " \tpublic void test0136() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87ae92798584b89efb58e49ddc4fab7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "02ec7693122bc81c642df1242d757ff1ae2691e1", "commitAfterChange": "b5c8750a0ee496ea162f56c86aa0c17734837d78", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\treturn suite(EncodingTests.class, null);", "+\t\treturn buildTestSuite(EncodingTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f888502d0c6ec424477a157ec69de5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\tif (this.startPosition <= this.cursorLocation && this.cursorLocation < this.currentPosition-1){", "+\t\t\t\t\t\t\t\tif (!isJavadoc && this.startPosition <= this.cursorLocation && this.cursorLocation < this.currentPosition-1){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8902854c7fcc9fb1e7d3f33f48073a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "6c797406271c70e354dc360e4e2b55dc743bf914", "commitAfterChange": "6bb034ac24fec033a91d15d668c7ba33f5039fc9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected boolean parseThrows()", "signatureAfterChange": " \tprotected boolean parseThrows()", "diff": ["-\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocMissingThrowsClassName(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\tif (this.sourceParser != null)", "+\t\t\t\t\tthis.sourceParser.problemReporter().javadocMissingThrowsClassName(this.tagSourceStart, this.tagSourceEnd, this.sourceParser.modifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8a786462e9a4cf3be0aae8fbf780588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void test0472() throws JavaModelException", "signatureAfterChange": " \tpublic void test0472() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b15a8e78845f47a0104f18b69932a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8be592970151d5d615cfe50783d9bb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "5e5824d7ea08d8d2e191da403b3a3e822daf1c06", "commitAfterChange": "ee5744d2ef3d1d3d807850f5af1a1524a1b6b71d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \t@Test \tpublic void checkOptions()", "signatureAfterChange": " \t \tpublic void testCheckOptions()", "diff": ["-\t@Test", "-\tpublic void checkOptions() {", "+\tpublic void testCheckOptions() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c014a4d3645177d9b2c3e898c8b4b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 267, "signatureBeforeChange": " \tpublic void test0265() throws JavaModelException", "signatureAfterChange": " \tpublic void test0265() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ff475232ae3f8bcf843814dba20d21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test0417() throws JavaModelException", "signatureAfterChange": " \tpublic void test0417() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f902dc431b975834f47595595fe8e523", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "2ce1b4b1ca0d98d45ff62786b3ab8a958ccb0013", "commitAfterChange": "33b72f23c212deb7660d3431d7a3eb7160fa065c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testRemoveExternalPackageFragmentRoot() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testRemoveExternalPackageFragmentRoot() throws JavaModelException, CoreException", "diff": ["-public void testRemoveExternalPackageFragmentRoot() throws JavaModelException, CoreException, IOException {", "+public void testRemoveExternalPackageFragmentRoot() throws JavaModelException, CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f938e6fa7f4b9e42b8f35cd91545932d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (extendedOperands != null) {", "+\t\t\tif (this.extendedOperands != null) {", "-\t\t\t\tacceptChildren(visitor, extendedOperands);", "+\t\t\t\tacceptChildren(visitor, this.extendedOperands);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9691157a79cc7bd84320a6bdf3ae101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "commitAfterChange": "55350d5af8386833b94a470ab6a0d389ee3fc665", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, String projectOutput) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, String projectOutput) throws CoreException", "diff": ["+\t\t\t\tnull/*no inclusion pattern*/,", "+\t\t\t\tnull/*no exclusion pattern*/,", "+\t\t\t\tnull/*no inclusion pattern*/,", "+\t\t\t\tnull/*no exclusion pattern*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96aaf23943c29aaa471546c2b893ea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileObject.java", "commitBeforeChange": "ba3f3515e414cf41bff76ad382644021240dc399", "commitAfterChange": "0fef9e356bfc246dbfd0c9cfea1ba0d8941a3dcb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      \tpublic int hashCode()", "signatureAfterChange": "      \t@Override \tpublic int hashCode()", "diff": ["+\t@Override", "-\t\treturn f.hashCode();", "+\t\treturn this.f.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99d1dfbeeebf13083251ab8c7b0488a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrefixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic PrefixExpression.Operator getOperator()", "signatureAfterChange": "  \tpublic PrefixExpression.Operator getOperator()", "diff": ["-\t\treturn operator;", "+\t\treturn this.operator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a676e8ff5cb791aeb592514d7ee31b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void test0078() throws JavaModelException", "signatureAfterChange": " \tpublic void test0078() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a75df30d7f7eedfe71d3b36ef52306", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void endVisit(Block node)", "signatureAfterChange": " \tpublic void endVisit(EnumDeclaration node)", "diff": ["-\t */", "-\tpublic void endVisit(Block node) {", "-\t}", "+\tpublic void endVisit(EnumDeclaration node) {", "+\t\tadd(node);", "+\t\tnode.setName(node.getAST().newSimpleName(\"XXX\")); //$NON-NLS-1$", "+\t\tdetachedListElement(node.bodyDeclarations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b422d54c340a292db00ed66deff959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public char[] getName()", "signatureAfterChange": "\r public char[] getName()", "diff": ["-\treturn className;\r", "+\treturn this.className;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c70a58ba2e9e3ff2abaf62f8bdf6dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " \tpublic void test0126() throws JavaModelException", "signatureAfterChange": " \tpublic void test0126() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ce2e1b4ad2881753355e84f11e117e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic Block getBody()", "signatureAfterChange": "  \tpublic Block getBody()", "diff": ["-\t\treturn optionalBody;", "+\t\treturn this.optionalBody;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa16ff540dd875ee0cb3c2501b6eac4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "ad2176229d8a74070b85a05bc32762cd5f345d2b", "commitAfterChange": "8dd338cf8d547572325c2d9a5d7ea0c7be528c19", "methodNumberBeforeChange": 350, "methodNumberAfterChange": 351, "signatureBeforeChange": " public void uninitializedLocalVariable(LocalVariableBinding binding, ASTNode location)", "signatureAfterChange": " public void uninitializedLocalVariable(LocalVariableBinding binding, ASTNode location)", "diff": ["-\t\tlocation.sourceEnd);", "+\t\tlocalSourceEnd(binding, location));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa201c8c9ba2a820477ce21e7c04aab6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java", "commitBeforeChange": "d9396647e280a0cdb636c94fae9233a7a2475f6f", "commitAfterChange": "09617092d586fc57d56d7255b395176bf3d6b1e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tif (workingCopy.getResource().isAccessible()) {", "-\t\t\t\t\t// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy", "-\t\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "-\t\t\t\t\tdelta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "-\t\t\t\t\taddDelta(delta);", "-\t\t\t\t} else {", "-\t\t\t\t\t// report a REMOVED delta", "-\t\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "-\t\t\t\t\tdelta.removed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "-\t\t\t\t\taddDelta(delta);", "+\t\t\t\tIResource resource = workingCopy.getResource();", "+\t\t\t\tif (resource != null) {", "+\t\t\t\t\tif (resource.isAccessible()) {", "+\t\t\t\t\t\t// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy", "+\t\t\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "+\t\t\t\t\t\tdelta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "+\t\t\t\t\t\taddDelta(delta);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// report a REMOVED delta", "+\t\t\t\t\t\tJavaElementDelta delta = new JavaElementDelta(getJavaModel());", "+\t\t\t\t\t\tdelta.removed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);", "+\t\t\t\t\t\taddDelta(delta);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa309e7e641e3d1254c91b63c6163935", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testCompletionFindField2() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindField2() throws JavaModelException", "diff": ["-\t\t\"element:var    completion:var    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:var    completion:var    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa907a04cddb97a1767f33f8f850fd9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": " \tpublic void test0711() throws JavaModelException", "signatureAfterChange": " \tpublic void test0711() throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa9c3be8ea141e56d4e64fdde8137f61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c544e8aca3ff7f9d6886fd7bcbef9ea930f61f35", "commitAfterChange": "8afaaca5766c1f6e8e3ebc65b81ef88fc8332ccf", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "diff": ["-\t\tif (this.preferences.insert_new_line_before_while_in_do_statement || this.preferences.insert_new_line_in_control_statements) {", "+\t\tif (this.preferences.insert_new_line_before_while_in_do_statement) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab5034529354ed971525742a0743b4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberRef.java", "commitBeforeChange": "3032de1870d006c819c7d178849a7bb1bd98ddbe", "commitAfterChange": "246ceb6d202f869f28a343f74149060c06526257", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Name getQualifier()", "signatureAfterChange": "  \tpublic Name getQualifier()", "diff": ["-\t\treturn optionalQualifier;", "+\t\treturn this.optionalQualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fabdda3793fdd37fb9160a95d39e051f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "22f68238a49995ff90d0a5b80069c5ce0a399d4d", "commitAfterChange": "f8ddf380a8e7b0e304db0c7d772f1f6806bfc371", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 250, "signatureBeforeChange": "  \tpublic void test214()", "signatureAfterChange": "  \tpublic void test214()", "diff": ["+\t\tsetPageWidth80(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac13e2c342fcd3f4db9b7cb0d595507", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "923264279ec39f4d5f8924588252d3d6a90eb7b5", "commitAfterChange": "d5e47d8a2152e23546bab4f67fae7b7b551fbcd7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private char[] getQualifiedName()", "signatureAfterChange": " private char[] getQualifiedName()", "diff": ["-\t\tString fileName = this.resource.getFullPath().lastSegment();", "+\t\tString fileName = this.openable.getElementName(); // working copy on a .class file may not have a resource, so use the element name"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac17bb7b6c1a014bb7d2db65591589b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 398, "signatureBeforeChange": " \tpublic void test0396() throws JavaModelException", "signatureAfterChange": " \tpublic void test0396() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fae43d219bd66e3b710410f53b2b7c92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0129() throws JavaModelException", "signatureAfterChange": " \tpublic void test0129() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faef62e25e7893a10500ffe55d66a4a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "600d3eda20c6510ad5218c514ac30249f7b449a9", "commitAfterChange": "f3c706bfa8df1589d5835736528d83fcc35878b8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["+\t\tif (_units == null) {", "+\t\t\treturn Collections.emptySet();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf3448a88da68f410d2f323427b813e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "commitAfterChange": "7daad62a7da8e2cda84019954d93fab0a22e7d3c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public static void checkProjectPropertyFileUpdate(IResourceDelta delta, IJavaElement parent)", "signatureAfterChange": "\r public static void checkProjectPropertyFileUpdate(IResourceDelta delta, IJavaElement parent)", "diff": ["-\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t// might consider to regenerate the file (accidental deletion?)\r", "+\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\tcase IResourceDelta.CHANGED :\t\r", "+\t\t\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break; // only consider content change\r", "-\t\t\t\t\t\tcase IResourceDelta.CHANGED :\t// check if any actual difference\r", "+\t\t\t\t\t\t\t// check if any actual difference\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb3ff65caa1c030e67637a2164d71bc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": " public void invokeSystemArraycopy()", "signatureAfterChange": " public void invokeSystemArraycopy()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangSystemConstantPoolName,", "-\t\t\tQualifiedNamesConstants.ArrayCopy,", "-\t\t\tQualifiedNamesConstants.ArrayCopySignature);", "+\t\t\tConstantPool.JavaLangSystemConstantPoolName,", "+\t\t\tConstantPool.ArrayCopy,", "+\t\t\tConstantPool.ArrayCopySignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb45aaf9efe70b81aee482be7378be84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 277, "methodNumberAfterChange": 277, "signatureBeforeChange": " \tpublic void test0275() throws JavaModelException", "signatureAfterChange": " \tpublic void test0275() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb729564646a5390fd7d8fe53e419cf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public ITypeHierarchy newSupertypeHierarchy(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ITypeHierarchy newSupertypeHierarchy(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treturn this.newSupertypeHierarchy(null, monitor);", "+\treturn this.newSupertypeHierarchy(DefaultWorkingCopyOwner.PRIMARY, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb82aeadedcd002770a8dab43dbc2875", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "080819febe201917c6d39d485bf6b0507c29f0c4", "commitAfterChange": "76aff9aee9275dc66ed2efa34b785757e6cf5fc0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor) throws JavaModelException", "signatureAfterChange": " \tprivate void computeCorrections(ICompilationUnit unit, int id, int start, int end, String[] arguments, ICorrectionRequestor requestor) throws JavaModelException", "diff": ["-\t\tthis.requestor = requestor;", "+\t\tthis.correctionRequestor = requestor;", "-\t\tthis.unit = unit;", "+\t\tthis.compilationUnit = unit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb8fd3bb935afae59d1ccdcdd8f12923", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParameterizedType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic List typeArguments()", "signatureAfterChange": "  \tpublic List typeArguments()", "diff": ["-\t\treturn typeArguments;", "+\t\treturn this.typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb9ab7d6c101a258cfd54a5478fe4179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testAccessRestriction12() throws Exception", "signatureAfterChange": " public void testAccessRestriction12() throws Exception", "diff": ["-\t\tJavaCore.setClasspathVariables(", "-\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "-\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "-\t\t\tnull);", "+//\t\tJavaCore.setClasspathVariables(", "+//\t\t\tnew String[] {\"JCL_LIB\", \"JCL_SRC\", \"JCL_SRCROOT\"},", "+//\t\t\tnew IPath[] {getExternalJCLPath(), getExternalJCLSourcePath(), getExternalJCLRootSourcePath()},", "+//\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbc796fdaae952fa04caaaa42eb3def9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath)", "signatureAfterChange": "  \tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath)", "diff": ["+", "+\tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath) {", "+\t\taddRequiredProject(projectPath, requiredProjectPath, false);", "+\t}", "-\tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath){", "-\t\taddEntry(projectPath, requiredProjectPath);", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc01dae13005986e37afbe980b7cb9f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedTypeReference.java", "commitBeforeChange": "6fcbd9f75757d9cfdd7e66dbd03d6d42006c867a", "commitAfterChange": "3ff7b81bced83cc6ffeee9cd4ddf361110eeeb98", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "\r public TypeBinding getTypeBinding(Scope scope)", "diff": ["-\tBinding binding = scope.getTypeOrPackage(tokens);\r", "+\tBinding binding = scope.parent.getTypeOrPackage(tokens); // step up from the ClassScope\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1e3edcdf8467fcaa2698d26f11ba17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": "  \tpublic void testVariableDeclarationFragment()", "signatureAfterChange": "  \tpublic void testVariableDeclarationFragment()", "diff": ["-\t\t\tx.extraDimensions().add(this.ast.newExtraDimension());", "+\t\t\tx.extraDimensions().add(this.ast.newDimension());", "-\t\t\t\t\tnew Property(\"ExtraDimensions\", true, ExtraDimension.class) { //$NON-NLS-1$", "+\t\t\t\t\tnew Property(\"ExtraDimensions\", true, Dimension.class) { //$NON-NLS-1$", "-\t\t\t\t\t\t\tExtraDimension result = targetAst.newExtraDimension();", "+\t\t\t\t\t\t\tDimension result = targetAst.newDimension();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1f7dc122c1f381e38c03ffe1734da6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "8758dd14429783f320e9886f9e8b83edae58524b", "commitAfterChange": "5d659b26c6aa5eb4fc698fe62dca975ceee0bdfd", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \t \tpublic SortElementBuilder(char[] source, int[] positionsToMap, Comparator comparator)", "signatureAfterChange": " \t \tpublic SortElementBuilder(char[] source, int[] positionsToMap, Comparator comparator)", "diff": ["-\t\tthis.scanner = new Scanner(false, false, false, false, false, null, null);", "+\t\tthis.scanner = new Scanner(false, false, false, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1ff3d2e27c5d25e70b8f9cac410572", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "b8c2347031edf431b74ee176b67b65bece3e7d69", "commitAfterChange": "bafbb633d88463daeda3b6346c0ba869c26d4bef", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": "  public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\treturn new ProblemReferenceBinding(CharOperation.subarray(compoundName, 0, currentIndex), binding, NotVisible);", "+\t\t\t\t\treturn new ProblemReferenceBinding(CharOperation.subarray(compoundName, 0, currentIndex), (ReferenceBinding) binding, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc28181591db9df6148d83129fa52ad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NonFatalErrorTest.java", "commitBeforeChange": "f874c6b5077c159b72bb8e4b8aad8ed303fb1894", "commitAfterChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["-\t\t\t\"SUCCESS\",", "+\t\t\t\"SUCCESS\" /* expectedOuputString */,", "+\t\t\tnull /* expectedErrorString */,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc3300fada8b427d39132a75444f3ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "46f0bf33fc17707f84a4651387bf3026d6bae545", "commitAfterChange": "4d6296b6ebb5111ab8825f79519da9de471cce30", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\t\tif (this.declaringSimpleName != null && this.parameterCount >= 0)", "+\t\t\tif (!this.varargs && this.declaringSimpleName != null && this.parameterCount >= 0)", "-\t\t\tif (this.parameterCount >= 0)", "+\t\t\tif (!this.varargs && this.parameterCount >= 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc58b8085d728a3811e0bf3043566420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "9cf9fd36cf0d3a6995c78921628703f8e713d766", "commitAfterChange": "279aeee06ab4ee32ba5e2d95ea026b69b7969933", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tnew IndexSelector(this.scope, this.focus, this.isPolymorphicSearch, this.indexManager);", "+\t\t\t\tnew IndexSelector(this.scope, this.pattern, this.indexManager);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8b791ce5b35156f109c4f5b70d10d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": " \tpublic void test0551() throws JavaModelException", "signatureAfterChange": " \tpublic void test0551() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8d439c2226da25a25193c865769dc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, null, ProblemReasons.Ambiguous);", "+\t\t\t\t\t\t\t\t\t\t\t\treturn new ProblemFieldBinding(", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfoundField, // closest match", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfoundField.declaringClass,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tname,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tProblemReasons.Ambiguous);\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\tbinding = getTypeOrPackage(name, (mask & Binding.PACKAGE) == 0 ? Binding.TYPE : Binding.TYPE | Binding.PACKAGE);", "+\t\t\t\tbinding = getTypeOrPackage(name, (mask & Binding.PACKAGE) == 0 ? Binding.TYPE : Binding.TYPE | Binding.PACKAGE, needResolve);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc908971bd1f209a15bfa92834766dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "53e59f4bd82e02ab18d570f640623d6567762067", "commitAfterChange": "83c109b7c53737ef4619646925b9d4265eb983d8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["+\t\tSourceTypeBinding binding = memberTypeDeclaration.binding;", "+\t\tif (binding == null) {", "+\t\t\treturn false;", "+\t\t}", "-\t\t\t\t\tmemberTypeDeclaration.binding);", "+\t\t\t\t\tbinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcaa4f05b47e2517b7940197d325a01b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "commitAfterChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, int limitTo)", "signatureAfterChange": " private static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, int limitTo)", "diff": ["-\t\t\treturn new SuperInterfaceReferencePattern(", "+\t\t\treturn new SuperTypeReferencePattern(", "-\t\t\t\tCASE_SENSITIVE);", "+\t\t\t\tCASE_SENSITIVE,", "+\t\t\t\ttrue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcd79ff29ae1c40649d53d32c9766dcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f3fbe43da8f7401e74029720b41083ae5f08f724", "commitAfterChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "  public void testCompletionAssignmentInMethod3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAssignmentInMethod3() throws JavaModelException", "diff": ["-\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE),", "+\t\t\"element:Object    completion:Object    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdffc997181beb25925d0fbd1523d7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t\tCastExpression cast = new CastExpression(expression, castType);", "+\t\t\t\t\tCastExpression cast = new CastExpression(expression, (TypeReference) castType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf587c96820ab1c5ed5d27d09324f3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeParameterElementImpl.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate List<? extends TypeMirror> calculateBounds()", "signatureAfterChange": " \tprivate List<? extends TypeMirror> calculateBounds()", "diff": ["+\t\tList<TypeMirror> typeBounds = new ArrayList<TypeMirror>(boundsLength);", "-\t\t\tList<TypeMirror> typeBounds = new ArrayList<TypeMirror>(boundsLength);", "-\t\t\treturn Collections.unmodifiableList(typeBounds);", "+\t\t} else {", "+\t\t\t// at least we must add java.lang.Object", "+\t\t\ttypeBounds.add(_env.getFactory().newTypeMirror(_env.getLookupEnvironment().getType(LookupEnvironment.JAVA_LANG_OBJECT)));", "-\t\treturn Collections.emptyList();", "+\t\treturn Collections.unmodifiableList(typeBounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcffbd773799a09f1db30408cba60552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": " \tpublic void test0168() throws JavaModelException", "signatureAfterChange": " \tpublic void test0168() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1ed29930fda4279ae6378ffce75ba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "93d0b68d014fd125ef3397479347f9e87343de88", "commitAfterChange": "ca1d41e8d9cea85d4a8ce044d53f9def8654a18e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tReferenceBinding.sortMethods(this.methods, 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd203972bff609805f1b72c742446d7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic static void checkProjectPropertyFileUpdate(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "signatureAfterChange": "\r \tpublic static void performPreBuildCheck(\r \t\tIResourceDelta delta,\r \t\tIJavaElement parent)", "diff": ["-\tpublic static void checkProjectPropertyFileUpdate(\r", "+\tpublic static void performPreBuildCheck(\r", "-\r", "+\t\t\t\t\t\tJavaProject project = (JavaProject)JavaCore.create((IProject)resource);\r", "+\t\t\t\t\t\tif (!ResourcesPlugin.getWorkspace().isAutoBuilding()){\r", "+\t\t\t\t\t\t\tproject.getResolvedClasspath(true, true); // force marker refresh\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\tcheckProjectPropertyFileUpdate(children[i], element);\r", "+\t\t\t\tperformPreBuildCheck(children[i], element);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd304e9e83e31d3549d3fbe5be9bcfb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "e22e2c1ba1368e41fa599371960d0d811ab185bb", "commitAfterChange": "07c386f81277f4ad5842be17241abc2c1fd53ef0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private void indexClassFile(byte[] contents, char[] documentName) throws IOException", "signatureAfterChange": " private void indexClassFile(byte[] contents, char[] documentName)", "diff": ["-private void indexClassFile(byte[] contents, char[] documentName) throws IOException {", "+private void indexClassFile(byte[] contents, char[] documentName) /* throws IOException */ {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd363966787c48dff91227e828a91bff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 290, "signatureBeforeChange": " \tpublic void test0288() throws JavaModelException", "signatureAfterChange": " \tpublic void test0288() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd39dd27e5fd56f2b9cd09c5c9b6af18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test015()", "signatureAfterChange": " public void test015()", "diff": ["+\tif(this.complianceLevel.compareTo(COMPLIANCE_1_5) > 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd45712368b3df15363ede693803026e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tsynchronized IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "signatureAfterChange": " \tsynchronized IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "diff": ["- \t\tif (methodBinding != null && !methodBinding.isValidBinding()) {", "-\t\t\torg.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding problemMethodBinding =", "-\t\t\t\t(org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) methodBinding;", "-\t\t\tmethodBinding = problemMethodBinding.closestMatch;", "+ \t\tif (methodBinding != null) {", "+\t\t\t//if ((methodBinding.tagBits & TagBits.HasMissingType) != 0 ", "+\t\t\t//\t\t&& !this.isRecoveringBindings()", "+\t\t\t//\t\t&& !methodBinding.declaringClass.isBinaryBinding()) { // binaries have been resilient since 3.2.2", "+\t\t\t//\treturn null;", "+\t\t\t//}", "+\t\t\tif (!methodBinding.isValidBinding()) {", "+\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding problemMethodBinding =", "+\t\t\t\t\t(org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) methodBinding;", "+\t\t\t\tmethodBinding = problemMethodBinding.closestMatch;", "+ \t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd789c0982e7e3ca683467c7a8836b8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void test0501() throws JavaModelException", "signatureAfterChange": " \tpublic void test0501() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd86e55b3f9ad0773c73c0e9a3a0a214", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 201, "signatureBeforeChange": " \tpublic void test0571() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test0571() throws CoreException, IOException", "diff": ["-\t\t\tCompilationUnit unit = (CompilationUnit) runConversion(AST.JLS3_INTERNAL, classFile, 0, true);", "+\t\t\tCompilationUnit unit = (CompilationUnit) runConversion(getJLS3(), classFile, 0, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd8dab00bcbd1400978ea9f4d66673de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "4c69b3374b1904df80a162a61253a5fac338ca0b", "commitAfterChange": "26b534917513d2fad601a1675afb9ab2d302e49e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate TypeReference decodeType(String typeSignature, int length, int start, int end)", "signatureAfterChange": " \t \tprivate TypeReference decodeType(String typeSignature, int length, int start, int end)", "diff": ["-\t\t\t\tcase Signature.C_DOT :", "+\t\t\t\t\tif (this.memberTypeSeparator != Signature.C_DOLLAR)", "+\t\t\t\t\t\tbreak;", "+\t\t\t\tcase Signature.C_DOT :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd901847d2a26655160e9e4f659be870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 679, "methodNumberAfterChange": 679, "signatureBeforeChange": " public void testDeprecationCheck10() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck10() throws JavaModelException", "diff": ["-\t\t\t\t\"bar1[METHOD_REF]{bar1(), Ldeprecation.Test;, ()V, bar1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"bar2[METHOD_REF]{bar2(), Ldeprecation.Test;, ()V, bar2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"bar1[METHOD_REF]{bar1(), Ldeprecation.Test;, ()V, bar1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"bar2[METHOD_REF]{bar2(), Ldeprecation.Test;, ()V, bar2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb91fac6d394f77ae81ab852f71979a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "fced1a7a2b8f5ce77723d058091976d51b43704e", "commitAfterChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic AssistParser getParser()", "signatureAfterChange": "  \tpublic AssistParser getParser()", "diff": ["-\t\treturn parser;", "+\t\treturn this.parser;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb9b5552aae3ac7bc6892ec17060db9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Locale getLocale()", "signatureAfterChange": " public Locale getLocale()", "diff": ["-\treturn locale;", "+\treturn this.locale;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdbb4b5f0d35ec9ab2501977b0dfc91d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": " public void invokeObjectGetClass()", "signatureAfterChange": " public void invokeObjectGetClass()", "diff": ["-\t\t\tQualifiedNamesConstants.JavaLangObjectConstantPoolName,", "-\t\t\tQualifiedNamesConstants.GetClass,", "-\t\t\tQualifiedNamesConstants.GetClassSignature);", "+\t\t\tConstantPool.JavaLangObjectConstantPoolName,", "+\t\t\tConstantPool.GetClass,", "+\t\t\tConstantPool.GetClassSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fddb7a2a7bbe7984549524c397c8516f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "0bb8dba3efca9a5500b67c37770710de86a06c2e", "commitAfterChange": "6726a5eb1723cea7dfdb4d1905ca215391f75d8e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] warningOptionNames()", "signatureAfterChange": " \tpublic static String[] warningOptionNames()", "diff": ["+\t\t\tOPTION_ReportUnclosedCloseable,", "+\t\t\tOPTION_ReportPotentiallyUnclosedCloseable,", "+\t\t\tOPTION_ReportExplicitlyClosedAutoCloseable,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdedfa53e623cd0164ad946abd45a31d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodReferencePattern.java", "commitBeforeChange": "6f6b135c3443a1f802996624e28e3fccc1ffade1", "commitAfterChange": "179d5d1c5c2a0bb83cd907094171a8fb72cf869e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r public void initializePolymorphicSearch(MatchLocator locator, IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \r public void initializePolymorphicSearch(MatchLocator locator, IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tlocator.handleFactory,\r", "+\t\t\t\tlocator,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf2795cbdfdbe49b99f3e6d43e90e71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "5e5824d7ea08d8d2e191da403b3a3e822daf1c06", "commitAfterChange": "ee5744d2ef3d1d3d807850f5af1a1524a1b6b71d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@AfterClass \tpublic static void cleanUp()", "signatureAfterChange": " \tpublic void testCleanUp()", "diff": ["-\t@AfterClass", "-\tpublic static void cleanUp() {", "+\t */", "+\tpublic void testCleanUp() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe151485157b43905633e0ea410ff149", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/CompilationUnit.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getMainTypeName()", "signatureAfterChange": " public char[] getMainTypeName()", "diff": ["-\treturn mainTypeName;", "+\treturn this.mainTypeName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe1d367b8c1a152a564836e2a98f3a0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "b08e7596febaa49e23faa81f4a4f9ae399c9aefb", "commitAfterChange": "24cf10e27c63373d484417e95718811352f381da", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatCompilationUnit(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tCompilationUnitDeclaration compilationUnitDeclaration = this.codeSnippetParsingUtil.parseCompilationUnit(source.toCharArray(), this.options, true);", "+\t\tCompilationUnitDeclaration compilationUnitDeclaration = this.codeSnippetParsingUtil.parseCompilationUnit(source.toCharArray(), getDefaultCompilerOptions(), true);", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length, this.codeSnippetParsingUtil);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length, this.codeSnippetParsingUtil);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe218bb18c0190bb0ad665a376a65d21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "e944f831810e143e8894d05428eb208a2cd78cce", "commitAfterChange": "45b2548f21c6553964603037785b1fef0bb3e0d3", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["+\t\tint editStart = this.scanner.currentPosition;", "+\t\tint editEnd = -1;", "-\t\t\t\t\t\tpreviousToken = -2;", "+\t\t\t\t\t\tpreviousToken = SKIP_FIRST_WHITESPACE_TOKEN;", "+\t\t\t\t\t\teditEnd = this.scanner.startPosition - 1;", "-\t\t\t    \t\tbuffer.append(BLOCK_FOOTER);", "-\t\t\t\t    \tthis.column += BLOCK_FOOTER_LENGTH + 1;", "+\t\t\t\t\t\tthis.column += BLOCK_FOOTER_LENGTH + 1;", "-\t\t\tStringBuffer replacement = new StringBuffer(BLOCK_HEADER);", "+\t\t\tStringBuffer replacement = new StringBuffer();", "-\t\t\taddReplaceEdit(currentTokenStartPosition, currentTokenEndPosition-1, replacement.toString());", "+\t\t\taddReplaceEdit(editStart, editEnd, replacement.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe22e3ba554d47660b6b80008d47c305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "3a9df3067febf3a881d19c6e8e1394d23dce90c1", "commitAfterChange": "1fb237703358af23ae88f6decce50b33ae0a3bf2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public ReferenceBinding setFocusType(char[][] compoundName)", "signatureAfterChange": " public ReferenceBinding setFocusType(char[][] compoundName)", "diff": ["+\t\t\t\t\t\tif (this.focusType == null)", "+\t\t\t\t\t\t\treturn this.focusType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3b46b6bffb14f174ee8a2af52a3b89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 688, "methodNumberAfterChange": 688, "signatureBeforeChange": " public void testDeprecationCheck3() throws JavaModelException", "signatureAfterChange": " public void testDeprecationCheck3() throws JavaModelException", "diff": ["-\t\t\t\t\"foo1[METHOD_REF]{foo1(), Ldeprecation.ZZZType1;, ()V, foo1, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\t\"foo2[METHOD_REF]{foo2(), Ldeprecation.ZZZType1;, ()V, foo2, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"foo1[METHOD_REF]{foo1(), Ldeprecation.ZZZType1;, ()V, foo1, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"foo2[METHOD_REF]{foo2(), Ldeprecation.ZZZType1;, ()V, foo2, null, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_INHERITED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3cbc4e5be7eee5acfe569d91f09da2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": " \tpublic void test0345() throws JavaModelException", "signatureAfterChange": " \tpublic void test0345() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe4c6dba15c63bb11422d73df602d8d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["-\t\t\t\tPerProjectInfo temporaryInfo = new PerProjectInfo(this.project.getProject());", "+\t\t\t\tPerProjectInfo temporaryInfo = this.project.newTemporaryInfo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe77c137466d6251fe376c18f1c5ac4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 195, "signatureBeforeChange": " \tpublic void test0564() throws JavaModelException", "signatureAfterChange": " \tpublic void test0564() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9923b3c14502b10566a26d2e903355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CharArrayCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public int size()", "signatureAfterChange": " public int size()", "diff": ["-\treturn elementSize;", "+\treturn this.elementSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feaed51337402ee74dc309fad6123670", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic void test0483() throws JavaModelException", "signatureAfterChange": " \tpublic void test0483() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb3963b95be186cbc169d626bd4bb07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void addExternalJars(IPath projectPath, String[] jars, boolean isExported) throws JavaModelException", "signatureAfterChange": " \tpublic void addExternalJars(IPath projectPath, String[] jars, boolean isExported) throws JavaModelException", "diff": ["-\t\t\tcheckAssertion(\"file name must end with .zip or .jar\", jar.endsWith(\".zip\") || jar.endsWith(\".jar\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb4d0233cde8719135289fb062eee36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["-public char[] computeUniqueKey(boolean withAccessFlags) {", "+public char[] computeUniqueKey(boolean isLeaf) {", "+\tif (!isLeaf) return signature();", "+\t", "-\t", "-\tif (!withAccessFlags) return genericSignature;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec256551982553d4b1c794b0662e398", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DualParseSyntaxErrorTest.java", "commitBeforeChange": "43f74f2641268dab605a152f25dcf07a245dabe8", "commitAfterChange": "6bace42b575464817bea9d0627df89cce9af5b42", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "signatureAfterChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "diff": ["-\t\t\t\tbuffer.append(\" in \" + new String(problems[i].getOriginatingFileName()));", "+\t\t\t\tbuffer.append(\" in \" + new String(problems[i].getOriginatingFileName()).replace('/', '\\\\'));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fecec01badf8fae7ba0d6e70005e31c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationTypeDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic StringBuffer printHeader(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printHeader(int indent, StringBuffer output)", "diff": ["+\t\t// TODO annotations cannot extend anything", "-\t\t\toutput.append(isInterface() ? \" extends \" : \" implements \");//$NON-NLS-2$ //$NON-NLS-1$", "+\t\t\toutput.append(\" extends \"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fedb0639991767dae9fc5efd6bc8c53f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public char[][] getInterfaceNames()", "signatureAfterChange": "\r public char[][] getInterfaceNames()", "diff": ["-\treturn interfaceNames;\r", "+\treturn this.interfaceNames;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef66eea286082793082c0e9a4d25dc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "88a4dd39dc6c1f5f682680ea6c30a4a9958ce465", "commitAfterChange": "bf9515bec05982e28ecc8fc1b64de84b4e8e1bf5", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 145, "signatureBeforeChange": " final public void ifle(Label lbl)", "signatureAfterChange": " final public void ifle(Label lbl)", "diff": ["+\tif (DEBUG) System.out.println(position + \"\\t\\tifle:\"+lbl); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fefaf2f11bb4dade137d91fd1a6b27ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "a30978dd4f5b3e50b457f9090dc1578822937c36", "commitAfterChange": "a89b1d3939b4f14009b82db16917ab7bcc9ba504", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tint memSize()", "signatureAfterChange": " \tint memSize()", "diff": ["-\t\tif (this.optionalCommentTable != null) {", "-\t\t\tsize += HEADERS + 4 * this.optionalCommentTable.length;", "+\t\tif (this.optionalCommentList != null) {", "+\t\t\tsize += HEADERS + 4 * this.optionalCommentList.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff44268b02f40ad36b5f886f11028aed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageDeclaration.java", "commitBeforeChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "commitAfterChange": "d0519864022cabe493b1aa937c00883d2f21a890", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tsynchronized (this.ast) {", "+\t\t\tsynchronized (this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5e5586e184dcae16302361430c856a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "d5b7e480bcefa88000f87f4e00b21f497f2bba90", "commitAfterChange": "d4c834daaadbd8c680a6fcccd31170f229344d7e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testCompletionFindThisDotField() throws JavaModelException", "signatureAfterChange": " public void testCompletionFindThisDotField() throws JavaModelException", "diff": ["-\t\t\"element:bar    completion:bar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC),", "+\t\t\"element:bar    completion:bar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff62bf9d9deba2390a79191596d7bae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Initializer.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic int getNodeType()", "signatureAfterChange": " \tfinal int getNodeType0()", "diff": ["-\tpublic int getNodeType() {", "+\tfinal int getNodeType0() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc19a0ce8d3751201c39c0af4e4f320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "commitAfterChange": "14842eb62da3e660c575d5193079230a000aa781", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "\r \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\tupdateProjectReferences(oldRequired, project.getRequiredProjectNames());\r", "-\t\t// update cycle markers\r", "-\t\tupdateCycleMarkers();\r", "+\t\tif (this.mayChangeProjectDependencies){\r", "+\t\t\tupdateProjectReferences(oldRequired, project.getRequiredProjectNames());\r", "+\t\t\tupdateCycleMarkers();\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc67ff26ef42e9d5ad9b98a001a3d2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 158, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationStatement node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationStatement node)", "diff": ["-\t\trewriteNodeList(node, VariableDeclarationStatement.FRAGMENTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\trewriteNodeList(node, VariableDeclarationStatement.FRAGMENTS_PROPERTY, pos, Util.EMPTY_STRING, \", \"); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc7055d549d3300169f7603abee9b81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void test0230() throws JavaModelException", "signatureAfterChange": " \tpublic void test0230() throws JavaModelException", "diff": ["-\t\tASTParser parser= ASTParser.newParser(AST.JLS3_INTERNAL);", "+\t\tASTParser parser= ASTParser.newParser(getJLS3());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fff77a8e5a5a98f9274801327c3d29f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "0a393a1692894409d5ed758ff6612d6558fdd928", "commitAfterChange": "265e21d374b9ce21a289bbe5b5169e6e0dc971b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public boolean exists()", "signatureAfterChange": " public boolean exists()", "diff": ["-\tif (!isValidClassFile()) return false;", "-\treturn super.exists();", "+\treturn super.exists() && isValidClassFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffffd96256537ff70395e20d38f98d87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "3cf8986b87575b2e73f0d4646e81386c419a79cb", "commitAfterChange": "d7f649048f20a2b7da85ffb34af89adc6b577de1", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic void test0485() throws JavaModelException", "signatureAfterChange": " \tpublic void test0485() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3_INTERNAL, sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);", "+\t\tASTNode result = runConversion(getJLS3(), sourceUnit, sourceRange.getOffset() + sourceRange.getLength() / 2, false);"]}], "num": 40198}