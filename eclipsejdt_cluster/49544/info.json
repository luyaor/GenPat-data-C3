{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a222a83d3c685af692b68297a79206f3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ad44bcbd27d454e11eaeecdc1c23f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "57623b33d25715d5f74d74bcaf764c593b3b85bb", "commitAfterChange": "ff87b767c4053ccd41ecd29d3c7d092a291a80c8", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public boolean isTypeArgumentIntersecting(TypeBinding otherArgument)", "signatureAfterChange": " public boolean isTypeArgumentIntersecting(TypeBinding otherArgument)", "diff": ["+\t\t\t\t\t\tif (upperBound1.isTypeVariable()) return true;", "-\t\t\t\t\t\t\t} else if (upperBound2.isInterface()) {", "-\t\t\t\t\t\t\t\tif (upperBound1.isArrayType() || ((upperBound1 instanceof ReferenceBinding) && ((ReferenceBinding)upperBound1).isFinal())) {", "-\t\t\t\t\t\t\t\t\treturn upperBound1.isCompatibleWith(upperBound2);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (upperBound2.isInterface()) {", "+\t\t\t\t\t\t\t\t\tif (upperBound1.isArrayType() || ((upperBound1 instanceof ReferenceBinding) && ((ReferenceBinding)upperBound1).isFinal())) {", "+\t\t\t\t\t\t\t\t\t\treturn upperBound1.isCompatibleWith(upperBound2);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\treturn upperBound1.isCompatibleWith(upperBound2);\t\t\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb3e6714f044729dafec4d770012246", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "817f5b60f1b5283073ee91db13e8dcaec6a51e5d", "commitAfterChange": "19ed6515960d03123d69a9f3f7b64066c1bf212b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\t\t\t\telement = element.add(local, 0);", "+\t\t\t\tif (!local.isArgument()) {", "+\t\t\t\t\telement = element.add(local, 0);", "+\t\t\t\t} else {", "+\t\t\t\t\t// Bug 442868 - For arguments, let the method continue to be the current element.", "+\t\t\t\t\telement.add(local, 0);", "+\t\t\t\t}"]}], "num": 49544}