{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fb95c04641ebe775e61a8ae1bf2cd64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d113ffbd1e385566448d17dee300e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void testTypeRefGenericsTest12_TypeArgument() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericsTest12_TypeArgument() throws CoreException", "diff": ["-\t\t\"src/test12/Test.java test12.Test [public class Test extends S<\ufffd|Exception|\ufffd> {@44] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.foo(Test) [\t\tthis.<\ufffd|Exception|\ufffd>foo(null);@88] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.foo(Test) [\t\tsuper.<\ufffd|Exception|\ufffd>foo(null);@118] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.foo(Test) [\t\ttest.<\ufffd|RuntimeException|\ufffd>foo(null);@160] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tthis.<\ufffd|Object|\ufffd, RuntimeException, Test>bar(null);@222] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tthis.<Object, \ufffd|RuntimeException|\ufffd, Test>bar(null);@230] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tthis.<Object, RuntimeException, \ufffd|Test|\ufffd>bar(null);@248] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tsuper.<\ufffd|Object|\ufffd, RuntimeException, Test>bar(null);@273] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tsuper.<Object, \ufffd|RuntimeException|\ufffd, Test>bar(null);@281] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tsuper.<Object, RuntimeException, \ufffd|Test|\ufffd>bar(null);@299] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\ttest.<\ufffd|Object|\ufffd, RuntimeException, Test>bar(null);@336] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\ttest.<Object, \ufffd|RuntimeException|\ufffd, Test>bar(null);@344] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\ttest.<Object, RuntimeException, \ufffd|Test|\ufffd>bar(null);@362] EXACT_MATCH\\n\" +", "-\t\t\"src/test12/Test.java void test12.S.bar(S) [\t<T, U extends Exception, V extends S<\ufffd|R|\ufffd>>void bar(S s) {}@464] EXACT_MATCH\"", "+\t\t\"src/test12/Test.java test12.Test [public class Test extends S<!|Exception|!> {@44] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.foo(Test) [\t\tthis.<!|Exception|!>foo(null);@88] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.foo(Test) [\t\tsuper.<!|Exception|!>foo(null);@118] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.foo(Test) [\t\ttest.<!|RuntimeException|!>foo(null);@160] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tthis.<!|Object|!, RuntimeException, Test>bar(null);@222] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tthis.<Object, !|RuntimeException|!, Test>bar(null);@230] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tthis.<Object, RuntimeException, !|Test|!>bar(null);@248] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tsuper.<!|Object|!, RuntimeException, Test>bar(null);@273] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tsuper.<Object, !|RuntimeException|!, Test>bar(null);@281] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\tsuper.<Object, RuntimeException, !|Test|!>bar(null);@299] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\ttest.<!|Object|!, RuntimeException, Test>bar(null);@336] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\ttest.<Object, !|RuntimeException|!, Test>bar(null);@344] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.Test.bar(Test) [\t\ttest.<Object, RuntimeException, !|Test|!>bar(null);@362] EXACT_MATCH\\n\" +", "+\t\t\"src/test12/Test.java void test12.S.bar(S) [\t<T, U extends Exception, V extends S<!|R|!>>void bar(S s) {}@464] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eba43183b21309e5dfb28c939d1825e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void testTypeRefGenericAll02_WildcardBound() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAll02_WildcardBound() throws CoreException", "diff": ["-\t\t\"src/test02/Test.java test02.Test.field [\tTest<A, ? extends \ufffd|B|\ufffd, ? super C> field = new Test<A, Z<String>, X<String>> () {@65] EXACT_MATCH\\n\" +", "-\t\t\"src/test02/Test.java test02.Test.field [\tTest<A, ? extends B, ? super \ufffd|C|\ufffd> field = new Test<A, Z<String>, X<String>> () {@76] EXACT_MATCH\\n\" +", "-\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super \ufffd|A|\ufffd, B, ? extends C> foo(Test<? extends A, ? super B, C> param) {@303] EXACT_MATCH\\n\" +", "-\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super A, B, ? extends \ufffd|C|\ufffd> foo(Test<? extends A, ? super B, C> param) {@319] EXACT_MATCH\\n\" +", "-\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super A, B, ? extends C> foo(Test<? extends \ufffd|A|\ufffd, ? super B, C> param) {@341] EXACT_MATCH\\n\" +", "-\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super A, B, ? extends C> foo(Test<? extends A, ? super \ufffd|B|\ufffd, C> param) {@352] EXACT_MATCH\"", "+\t\t\"src/test02/Test.java test02.Test.field [\tTest<A, ? extends !|B|!, ? super C> field = new Test<A, Z<String>, X<String>> () {@65] EXACT_MATCH\\n\" +", "+\t\t\"src/test02/Test.java test02.Test.field [\tTest<A, ? extends B, ? super !|C|!> field = new Test<A, Z<String>, X<String>> () {@76] EXACT_MATCH\\n\" +", "+\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super !|A|!, B, ? extends C> foo(Test<? extends A, ? super B, C> param) {@303] EXACT_MATCH\\n\" +", "+\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super A, B, ? extends !|C|!> foo(Test<? extends A, ? super B, C> param) {@319] EXACT_MATCH\\n\" +", "+\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super A, B, ? extends C> foo(Test<? extends !|A|!, ? super B, C> param) {@341] EXACT_MATCH\\n\" +", "+\t\t\"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [\tTest<? super A, B, ? extends C> foo(Test<? extends A, ? super !|B|!, C> param) {@352] EXACT_MATCH\""]}], "num": 28215}