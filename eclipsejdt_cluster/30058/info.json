{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c7303c74752518f5e8af73bf254cc02", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c62e50a50f21c833f70e63c51f854ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "4fd98abe69a6425880abe243fa431e365710bef2", "commitAfterChange": "eb40a119cd5ecacf8e90c38261ec37c99b5a07b7", "methodNumberBeforeChange": 423, "methodNumberAfterChange": 423, "signatureBeforeChange": " \tpublic void testTryStatement()", "signatureAfterChange": " \tpublic void testTryStatement()", "diff": ["+\t\tif (this.ast.apiLevel() <= AST.JLS3) {", "+\t\t\t// node type introduced in 4.0 API", "+\t\t\ttry {", "+\t\t\t\tfinal TryStatement x = this.ast.newTryStatement();", "+\t\t\t\tx.resources();", "+\t\t\t\tassertTrue(\"should not be reached if jls level <= JLS3\", false);", "+\t\t\t} catch (UnsupportedOperationException e) {", "+\t\t\t\t// pass", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a2c62cf13320647bc1c76914069671", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "380f51fb07b01d50fdf783879a49310c31bf8dde", "commitAfterChange": "cdb3e8d99e2ddf40df3afd879c65627abb3809dc", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tprivate static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, IClasspathContainer entryContainer, boolean checkSourceAttachment, boolean referredByContainer)", "signatureAfterChange": " \t \tprivate static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, IClasspathContainer entryContainer, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["+\t\t\t\t\t\t\tif (status == null) {", "+\t\t\t\t\t\t\t\tString annotationPath = getRawExternalAnnotationPath(entry);", "+\t\t\t\t\t\t\t\tif (annotationPath != null) {", "+\t\t\t\t\t\t\t\t\tstatus = ((ClasspathEntry) entry).validateExternalAnnotationPath(project, new Path(annotationPath));", "+\t\t\t\t\t\t\t\t\tif (status != null)", "+\t\t\t\t\t\t\t\t\t\treturn status;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad635ae99a3d8cd425312de60bcac855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "471f53ef0bd83fc3e916031568fa5c5d2d4e985d", "commitAfterChange": "7575387e5ef8dc6a203a4bfcf32e27bf32af2177", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " public void invalidType(ASTNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(ASTNode location, TypeBinding type)", "diff": ["+\tif (type.isParameterizedType()) {", "+\t\tList missingTypes = type.collectMissingTypes(null);", "+\t\tif (missingTypes != null) {", "+\t\t\tfor (Iterator iterator = missingTypes.iterator(); iterator.hasNext(); ) {", "+\t\t\t\tinvalidType(location, (TypeBinding) iterator.next());", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}"]}], "num": 30058}