{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89aa2948d3578173982c7687acd04b35", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c1de3a9917c9b8b290824b5c7007742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "818dca3cf84fd118ea99497de1f8b977d4253551", "commitAfterChange": "52f6144c4e9af7092e9f26d44a5197a00c39427c", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  \tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate void printJavadocImmutableText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "+\tprivate void printJavadocImmutableText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "-\t\t\tfor (int idx=1, max=text.separatorsPtr; idx<max ; idx++) {", "+\t\t\tfor (int idx=0, max=text.separatorsPtr; idx<=max ; idx++) {", "-\t\t\t\tint lineStart = Util.getLineNumber(start, this.lineEnds, lineNumber, this.maxLines);", "-\t\t\t\tif (buffer == null) {", "-\t\t\t\t\tbuffer = new StringBuffer();", "-\t\t\t\t\tthis.column = 1;", "-\t\t\t\t\tprintIndentationIfNecessary(buffer);", "-\t\t\t\t\tbuffer.append(BLOCK_LINE_PREFIX);", "-\t\t\t\t\tthis.column += BLOCK_LINE_PREFIX_LENGTH;", "-\t\t\t\t}", "+\t\t\t\tint lineStart = Util.getLineNumber(start, this.lineEnds, lineNumber-1, this.maxLines);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (buffer == null) {", "+\t\t\t\t\t\tbuffer = new StringBuffer();", "+\t\t\t\t\t\tthis.column = 1;", "+\t\t\t\t\t\tprintIndentationIfNecessary(buffer);", "+\t\t\t\t\t\tbuffer.append(BLOCK_LINE_PREFIX);", "+\t\t\t\t\t\tthis.column += BLOCK_LINE_PREFIX_LENGTH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b05cb406aa0588f3ad056d5cd3d3dd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "a7dba38baa5ee0e3c442d88fef940af593bc7e17", "commitAfterChange": "b226db21343c2379431df3347005545a1c3c6612", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "signatureAfterChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "diff": ["-\t\t\t\t\t\t\tint lineEnd1 = Math.max(CharOperation.indexOf('\\n', contents, end), end);", "-\t\t\t\t\t\t\tint lineEnd2 = Math.max(CharOperation.indexOf('\\r', contents, end), end);", "+\t\t\t\t\t\t\tint lineEnd1 = Math.max(CharOperation.indexOf('\\n', contents, end), end+1);", "+\t\t\t\t\t\t\tint lineEnd2 = Math.max(CharOperation.indexOf('\\r', contents, end), end+1);", "-\t\t\t\t\t\t\tif (lineEnd == end) lineEnd = contents.length;", "+\t\t\t\t\t\t\tif (lineEnd == end+1) lineEnd = contents.length;"]}], "num": 45740}