{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef6bf2b3ec32809dc22adba3a979727b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1138ec00962b9d9f05b015e7b5dd69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 310, "methodNumberAfterChange": 314, "signatureBeforeChange": "  public void nonGenericTypeCannotBeParameterized(int index, ASTNode location, TypeBinding type, TypeBinding[] argumentTypes)", "signatureAfterChange": "  public void nonGenericTypeCannotBeParameterized(int index, ASTNode location, TypeBinding type, TypeBinding[] argumentTypes)", "diff": ["-\t\t\tnew String[] {new String(type.readableName()), typesAsString(false, argumentTypes, false)},", "-\t\t\tnew String[] {new String(type.shortReadableName()), typesAsString(false, argumentTypes, true)},", "+\t\t\tnew String[] {new String(type.readableName()), typesAsString(argumentTypes, false)},", "+\t\t\tnew String[] {new String(type.shortReadableName()), typesAsString(argumentTypes, true)},", "-\t\tnew String[] {new String(type.readableName()), typesAsString(false, argumentTypes, false)},", "-\t\tnew String[] {new String(type.shortReadableName()), typesAsString(false, argumentTypes, true)},", "+\t\tnew String[] {new String(type.readableName()), typesAsString(argumentTypes, false)},", "+\t\tnew String[] {new String(type.shortReadableName()), typesAsString(argumentTypes, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f106fc2a8c5ec727c5bd0ef964967549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 166, "signatureBeforeChange": " public void incorrectArityForParameterizedType(ASTNode location, TypeBinding type, TypeBinding[] argumentTypes, int index)", "signatureAfterChange": " public void incorrectArityForParameterizedType(ASTNode location, TypeBinding type, TypeBinding[] argumentTypes, int index)", "diff": ["-\t\t\tnew String[] {new String(type.readableName()), typesAsString(false, argumentTypes, false)},", "-\t\t\tnew String[] {new String(type.shortReadableName()), typesAsString(false, argumentTypes, true)},", "+\t\t\tnew String[] {new String(type.readableName()), typesAsString(argumentTypes, false)},", "+\t\t\tnew String[] {new String(type.shortReadableName()), typesAsString(argumentTypes, true)},", "-\t\tnew String[] {new String(type.readableName()), typesAsString(false, argumentTypes, false)},", "-\t\tnew String[] {new String(type.shortReadableName()), typesAsString(false, argumentTypes, true)},", "+\t\tnew String[] {new String(type.readableName()), typesAsString(argumentTypes, false)},", "+\t\tnew String[] {new String(type.shortReadableName()), typesAsString(argumentTypes, true)},", "+\t\tlocation.sourceStart,", "+\t\tnodeSourceEnd(null, location, index));", "+}"]}], "num": 65933}