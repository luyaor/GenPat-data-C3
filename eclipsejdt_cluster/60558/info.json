{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14bb8e651245100cda8ad6ca05335725", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15bf6fa025e1c5204cbd086f063066cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "e9b8570c48a3adcf8ca596d7d5d3cb77e7107b24", "commitAfterChange": "d9f86abd22aa02e46b78f3fcafe4e36317129341", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": "\r protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["+\t\tif(SelectionEngine.DEBUG){\r", "+\t\t\tSystem.out.print(\"SELECTION - accept type(\"); //$NON-NLS-1$\r", "+\t\t\tSystem.out.print(type.toString());\r", "+\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tif(SelectionEngine.DEBUG){\r", "+\t\t\tSystem.out.print(\"SELECTION - accept method(\"); //$NON-NLS-1$\r", "+\t\t\tSystem.out.print(matches[0].toString());\r", "+\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\t\tif(SelectionEngine.DEBUG){\r", "+\t\t\t\tSystem.out.print(\"SELECTION - accept method(\"); //$NON-NLS-1$\r", "+\t\t\t\tSystem.out.print(method.toString());\r", "+\t\t\t\tSystem.out.println(\")\"); //$NON-NLS-1$\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d9920c441d78543d79c8be739d7e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "93b9f9fe124b5b98ce4925868f33ae96aae5cbd4", "commitAfterChange": "5980f3b0a897e377cb4bc42fe4ec83cc0ff0cc35", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tif (DEBUG){\r", "-\t\t\tSystem.out.println(\"Builder handling CoreException\"); //$NON-NLS-1$\r", "-\t\t\t e.printStackTrace();\r", "-\t\t}\r", "+\t\tUtil.log(e, \"JavaBuilder handling CoreException\"); //$NON-NLS-1$\r", "-\t\tif (DEBUG){\r", "-\t\t\tSystem.out.println(\"Builder handling ImageBuilderInternalException\"); //$NON-NLS-1$\r", "-\t\t\t e.printStackTrace();\r", "-\t\t}\r", "+\t\tUtil.log(e, \"JavaBuilder handling ImageBuilderInternalException\"); //$NON-NLS-1$\r", "-\t\tif (DEBUG){\r", "-\t\t\tSystem.out.println(\"Builder handling IncompleteClassPathException\"); //$NON-NLS-1$\r", "-\t\t\t e.printStackTrace();\r", "-\t\t}\r", "+\t\tUtil.log(e, \"JavaBuilder handling IncompleteClassPathException\"); //$NON-NLS-1$\r", "-\t\tif (DEBUG){\r", "-\t\t\tSystem.out.println(\"Builder handling MissingSourceFileException\"); //$NON-NLS-1$\r", "-\t\t\t e.printStackTrace();\r", "-\t\t}\r", "+\t\tUtil.log(e, \"JavaBuilder handling MissingSourceFileException\"); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36325cc71f05a059af964960bc4903d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "e1ac13415d41eab97a4941ecd0318977335f1880", "commitAfterChange": "20f4c778deb35fefd496df9f8a13abe611007ac8", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprotected void postAction(IPostAction action, int insertionMode)", "signatureAfterChange": " \tprotected void postAction(IPostAction action, int insertionMode)", "diff": ["+\t\tif (POST_ACTION_VERBOSE) {", "+\t\t\tSystem.out.print(\"(\" + Thread.currentThread() + \") [JavaModelOperation.postAction(IPostAction, int)] Posting action \" + action.getID()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tswitch(insertionMode) {", "+\t\t\t\tcase REMOVEALL_APPEND:", "+\t\t\t\t\tSystem.out.println(\" (REMOVEALL_APPEND)\"); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase KEEP_EXISTING:", "+\t\t\t\t\tSystem.out.println(\" (KEEP_EXISTING)\"); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase APPEND:", "+\t\t\t\t\tSystem.out.println(\" (APPEND)\"); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7615128e095a74a58442a21149421e33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationSetup.java", "commitBeforeChange": "a1ef3c329d5aa2ced30d6367713d8ba098b0256e", "commitAfterChange": "9506ae8fe4d60e3a32e2b276be442609d9dc9308", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void setUp()", "signatureAfterChange": "  \tprotected void setUp()", "diff": ["+\t\t\t\t\t((Connector.Argument)args.get(\"timeout\")).setValue(\"10000\");", "+\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tSystem.out.println(\"Could not contact the VM at \" + launcher.getTargetAddress() + \":\" + debugPort + \". Retrying...\");", "+\t\t\t\t\t\tThread.sleep(100);", "+\t\t\t\t\t} catch (InterruptedException e2) {", "+\t\t\t\t\t}", "-\t\t\t\t\tSystem.out.println(\"Got exception: \" + e.getMessage());", "+\t\t\t\t\te.printStackTrace();", "-\t\t\t\tthrow new Error(\"Could not contact the VM\");", "+\t\t\t\tSystem.err.println(\"Could not contact the VM\");", "+\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d162155c8288aacde695220f95b925b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d839a142b9eec12533dd514edfe7a79d5b71ee0c", "commitAfterChange": "bd83486db9699d62fa5d0b33b9f03e68c697c706", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": " \t \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["+\t\t}  catch (IndexOutOfBoundsException e) { // work-around internal failure - 1GEMF6D (added with fix of 99629)", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t} catch (InvalidCursorLocation e) { // may eventually report a usefull error (added to fix 99629)", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t} catch (AbortCompilation e) { // ignore this exception for now since it typically means we cannot find java.lang.Object (added with fix of 99629)", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t} catch (CompletionNodeFound e){ // internal failure - bugs 5618 (added with fix of 99629)", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7cf6771475edb84d672b7f94be6aed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "749a96000e39f49e8cae1739b5deff8f66a30b2a", "commitAfterChange": "b4920bb3c80d3baab76f9964fee889a064ed565c", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tprivate void runAstCreation(IJavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void runAstCreation(IJavaProject javaProject) throws JavaModelException", "diff": ["+\t\t\t} else if (\"enabled\".equals(value)) {", "+\t\t\t\t// System.out.println(\"\t- disabling \" + key);", "+\t\t\t\toptions.put(key, \"disabled\");", "-\t\toptions.put(JavaCore.COMPILER_TASK_TAGS, \"\"); //$NON-NLS-1$\t\t", "+\t\toptions.put(JavaCore.COMPILER_TASK_TAGS, \"\");", "+\t\tif (PRINT) {", "+\t\t\tSystem.out.println(\"\t- options: \"+options);", "+\t\t\tSystem.out.println(\"\t- \"+compilationUnits.length+\" units will be parsed in \"+javaProject.getElementName()+\" project\");", "+\t\t}", "+", "-\t\tif (PRINT) System.out.println(\"\t- \"+compilationUnits.length+\" units will be parsed in \"+javaProject.getElementName()+\" project\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a25773ad1f0c28c28feddd7238dd76f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by CompletionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbeeb1fd0ae5457edcb0f2b72ca110d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "20e0439f2932fa428613d250965a77c72160c4fc", "commitAfterChange": "7efab0d7824150afb601cf6a50a5487dbdfddf2e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\t\tif (DEBUG)", "+\t\t\t\t\tSystem.out.println(\"Performing full build as requested by user\"); //$NON-NLS-1$", "+\t\t\t\t\tif (DEBUG)", "+\t\t\t\t\t\tSystem.out.println(\"Performing full build since classpath has changed\"); //$NON-NLS-1$", "-\t\t\t\t\tif (deltas == null)", "+\t\t\t\t\tif (deltas == null) {", "+\t\t\t\t\t\tif (DEBUG)", "+\t\t\t\t\t\t\tSystem.out.println(\"Performing full build since deltas are missing after incremental request\"); //$NON-NLS-1$", "-\t\t\t\t\telse if (deltas.elementSize > 0)", "+\t\t\t\t\t} else if (deltas.elementSize > 0)", "+\t\t\t\t\t\tif (DEBUG)", "+\t\t\t\t\t\t\tSystem.out.println(\"Performing full build since there are structural deltas\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8bea59dfc3a1d2f6b37490fd3c3a46c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "ed04e9efb45ff73e01fac12a6ae0aba550054536", "commitAfterChange": "8d68e00ba785472efc36cd0f68660beb95ca71eb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "signatureAfterChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "diff": ["-\t\t\t\t\t\t\t\tselectFrom(e.binding, parsedUnit, e.isDeclaration);", "+\t\t\t\t\t\t\t\tselectFrom(e.node, e.binding, parsedUnit, e.isDeclaration);", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by SelectionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}", "+\t\t\tif(DEBUG) {", "+\t\t\t\tSystem.out.println(\"Exception caught by SelectionEngine:\"); //$NON-NLS-1$", "+\t\t\t\te.printStackTrace(System.out);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e9d83e59dbe3ac4665466352f47f28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "1dd7e6d9d585adb220557f3402915ea2ee179022", "commitAfterChange": "46859e68b81034663a48ce4b45deb6efa613e452", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\tif (DEBUG){\r", "+\t\t\tSystem.out.println(\"Builder handling CoreException\");\r", "+\t\t\t e.printStackTrace();\r", "+\t\t}\r", "+\t\tif (DEBUG){\r", "+\t\t\tSystem.out.println(\"Builder handling ImageBuilderInternalException\");\r", "+\t\t\t e.printStackTrace();\r", "+\t\t}\r", "+\t\tif (DEBUG){\r", "+\t\t\tSystem.out.println(\"Builder handling IncompleteClassPathException\");\r", "+\t\t\t e.printStackTrace();\r", "+\t\t}\r", "+\t\tif (DEBUG){\r", "+\t\t\tSystem.out.println(\"Builder handling MissingSourceFileException\");\r", "+\t\t\t e.printStackTrace();\r", "+\t\t}\r"]}], "num": 60558}