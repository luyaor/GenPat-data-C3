{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fcf4beff82372fa7dd43ea76faeceac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4219bc5e16e7321fc981f9920efb2c2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "ab233550db657855007d7fd2c56941a3b07c6fa6", "commitAfterChange": "f103afa2b75b8198880ca7616628c69d234642fd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tInitializationFlowContext initializerContext = new InitializationFlowContext(null, this, flowInfo, flowContext, this.initializerScope);", "+\t// for local classes we use the flowContext as our parent, but never use an initialization context for this purpose", "+\t// see Bug 360328 - [compiler][null] detect null problems in nested code (local class inside a loop)", "+\tFlowContext parentContext = (flowContext instanceof InitializationFlowContext) ? null : flowContext;", "+\tInitializationFlowContext initializerContext = new InitializationFlowContext(parentContext, this, flowInfo, flowContext, this.initializerScope);", "+\t// no static initializer in local classes, thus no need to set parent:", "+\t\t\t\t// pass down the appropriate initializerContext:", "-\t\t\t\t\tmethod.analyseCode(", "+\t\t\t\t\t((Clinit)method).analyseCode(", "-\t\t\t\tmethod.analyseCode(this.scope, null, flowInfo.copy());", "+\t\t\t\t// pass down the parentContext (NOT an initializer context, see above):", "+\t\t\t\t((MethodDeclaration)method).analyseCode(this.scope, parentContext, flowInfo.copy());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5856c34f46b16d4573e4b9854c07f1d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "22dfb29015980684f8c134336f7b55238ec69ca1", "commitAfterChange": "ad3220b4b434313891b223270deb616283ce8051", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tInitializationFlowContext initializerContext = new InitializationFlowContext(null, this, this.initializerScope);", "-\tInitializationFlowContext staticInitializerContext = new InitializationFlowContext(null, this, this.staticInitializerScope);", "+\tInitializationFlowContext initializerContext = new InitializationFlowContext(null, this, flowInfo, flowContext, this.initializerScope);", "+\tInitializationFlowContext staticInitializerContext = new InitializationFlowContext(null, this, flowInfo, flowContext, this.staticInitializerScope);", "-\t\t\t\tstaticFieldInfo =", "-\t\t\t\t\tfield.analyseCode(", "-\t\t\t\t\t\tthis.staticInitializerScope,", "-\t\t\t\t\t\tstaticInitializerContext,", "-\t\t\t\t\t\tstaticFieldInfo);", "+\t\t\t\tstaticFieldInfo = field.analyseCode(this.staticInitializerScope, staticInitializerContext, staticFieldInfo);", "-\t\t\t\tnonStaticFieldInfo =", "-\t\t\t\t\tfield.analyseCode(this.initializerScope, initializerContext, nonStaticFieldInfo);", "+\t\t\t\tnonStaticFieldInfo = field.analyseCode(this.initializerScope, initializerContext, nonStaticFieldInfo);"]}], "num": 66728}