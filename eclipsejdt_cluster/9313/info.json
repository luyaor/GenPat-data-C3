{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58b65fc5b75b7b308b44fa936884b752", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c29aee90888176977c43801fad8ec168", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, VariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, VariableBinding local, \t\tASTNode location, int checkType, FlowInfo flowInfo)", "diff": ["-\t\tExpression reference, int checkType, FlowInfo flowInfo) {", "+\t\tASTNode location, int checkType, FlowInfo flowInfo) {", "-\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(local, location);", "-\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(local, location);", "+\t\t\tExpression reference = (Expression)location;", "-\t\t\t\tscope.problemReporter().variableNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variableNullReference(local, location);", "-\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, reference);", "+\t\t\t\tscope.problemReporter().variablePotentialNullReference(local, location);", "-\t\tthis.parent.recordUsingNullReference(scope, local, reference, checkType,", "+\t\tthis.parent.recordUsingNullReference(scope, local, location, checkType,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7ca3611e8911c591e9730380a20937", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\t\tthis.parent.recordNullityMismatch(scope, this.nullReferences[i],", "+\t\t\t\tthis.parent.recordNullityMismatch(scope, (Expression)this.nullReferences[i],", "-\t\t\tExpression expression = this.nullReferences[i];", "+\t\t\tASTNode location = this.nullReferences[i];", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(var, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableRedundantCheckOnNonNull(var, location);", "-\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(var, expression);", "+\t\t\t\t\t\t\t\tscope.problemReporter().variableNonNullComparedToNull(var, location);", "+\t\t\t\t\tExpression expression = (Expression) location;", "-\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, expression);", "+\t\t\t\t\t\tscope.problemReporter().variableNullReference(var, location);", "-\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, expression);", "+\t\t\t\t\t\tscope.problemReporter().variablePotentialNullReference(var, location);", "-\t\t\t\t\t\tscope.problemReporter().nullityMismatch(expression, this.expectedTypes[i], nullStatus, annotationName);", "+\t\t\t\t\t\tscope.problemReporter().nullityMismatch((Expression) location, this.expectedTypes[i], nullStatus, annotationName);"]}], "num": 9313}