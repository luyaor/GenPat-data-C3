{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4509b08d3e2fbd5fd33a7e7a1b56715", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc82acab8679bb93a0c566673d629c69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t// check if reading a final blank field", "-\t\t\t\tFieldBinding fieldBinding;", "-\t\t\t\t\tif ((fieldBinding = (FieldBinding) binding).isBlankFinal()", "-\t\t\t\t\t\t&& (indexOfFirstFieldBinding == 1)", "-\t\t\t\t\t// was an implicit reference to the first field binding", "-\t\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)", "-\t\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(fieldBinding))) {", "-\t\t\t\t\tcurrentScope.problemReporter().uninitializedBlankFinalField(fieldBinding, this);", "+\t\t\t\tif (this.indexOfFirstFieldBinding == 1) { // was an implicit reference to the first field binding", "+\t\t\t\t\tFieldBinding fieldBinding = (FieldBinding) binding;", "+\t\t\t\t\tReferenceBinding declaringClass = fieldBinding.declaringClass;", "+\t\t\t\t\t// check if accessing enum static field in initializer\t\t\t\t\t", "+\t\t\t\t\tif (declaringClass.isEnum()) {", "+\t\t\t\t\t\tMethodScope methodScope = currentScope.methodScope();", "+\t\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "+\t\t\t\t\t\tif (fieldBinding.isStatic()", "+\t\t\t\t\t\t\t\t&& (sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "+\t\t\t\t\t\t\t\t&& fieldBinding.constant() == NotAConstant", "+\t\t\t\t\t\t\t\t&& !methodScope.isStatic", "+\t\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "+\t\t\t\t\t\t\tcurrentScope.problemReporter().enumStaticFieldUsedDuringInitialization(fieldBinding, this);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\t// check if reading a final blank field", "+\t\t\t\t\tif (fieldBinding.isBlankFinal()", "+\t\t\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)", "+\t\t\t\t\t\t\t&& !flowInfo.isDefinitelyAssigned(fieldBinding)) {", "+\t\t\t\t\t\tcurrentScope.problemReporter().uninitializedBlankFinalField(fieldBinding, this);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e10a1f59877984f4a0ad7eee4ca10c0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\tif (binding.isBlankFinal()", "-\t\t\t&& receiver.isThis()", "-\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(binding)", "-\t\t\t&& (!flowInfo.isDefinitelyAssigned(binding))) {", "-\t\t\tcurrentScope.problemReporter().uninitializedBlankFinalField(binding, this);", "+\t\tif (this.binding.isBlankFinal()", "+\t\t\t&& this.receiver.isThis()", "+\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(this.binding)", "+\t\t\t&& (!flowInfo.isDefinitelyAssigned(this.binding))) {", "+\t\t\tcurrentScope.problemReporter().uninitializedBlankFinalField(this.binding, this);", "-\t\treceiver", "-\t\t\t.analyseCode(currentScope, flowContext, flowInfo, !binding.isStatic())", "+\t\tthis.receiver", "+\t\t\t.analyseCode(currentScope, flowContext, flowInfo, !this.binding.isStatic())", "-\tif (binding.isFinal()) {", "+\tif (this.binding.isFinal()) {", "-\t\tif (binding.isBlankFinal()", "+\t\tif (this.binding.isBlankFinal()", "-\t\t\t&& receiver.isThis()", "-\t\t\t&& !(receiver instanceof QualifiedThisReference)", "-\t\t\t&& ((receiver.bits & ParenthesizedMASK) == 0) // (this).x is forbidden", "-\t\t\t&& currentScope.allowBlankFinalFieldAssignment(binding)) {", "-\t\t\tif (flowInfo.isPotentiallyAssigned(binding)) {", "+\t\t\t&& this.receiver.isThis()", "+\t\t\t&& !(this.receiver instanceof QualifiedThisReference)", "+\t\t\t&& ((this.receiver.bits & ASTNode.ParenthesizedMASK) == 0) // (this).x is forbidden", "+\t\t\t&& currentScope.allowBlankFinalFieldAssignment(this.binding)) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned(this.binding)) {", "-\t\t\t\t\tbinding,", "+\t\t\t\t\tthis.binding,", "-\t\t\t\tflowContext.recordSettingFinal(binding, this, flowInfo);", "+\t\t\t\tflowContext.recordSettingFinal(this.binding, this, flowInfo);", "-\t\t\tflowInfo.markAsDefinitelyAssigned(binding);", "+\t\t\tflowInfo.markAsDefinitelyAssigned(this.binding);", "-\t\t\tcurrentScope.problemReporter().cannotAssignToFinalField(binding, this);", "+\t\t\tcurrentScope.problemReporter().cannotAssignToFinalField(this.binding, this);"]}], "num": 12180}