{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "390a8b7e0d1be2740cd6eeaf190b7870", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291be77c007becfee382c399f344a9f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "96e2d72045a6fecadbb495cf120a991e9af97b69", "commitAfterChange": "9d06351462e8164b333844c4c86806d2dc639a02", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["+\t\tboolean isFieldBeingCompletedStatic = false;", "+\t\t\t\t\t\tisFieldBeingCompletedStatic = field.isStatic();", "+\t\t\t\t\t\tisFieldBeingCompletedStatic = field.isStatic();", "-\t\t\t\tcontinue next;", "+\t\t\t\t// Though, if field is static, then it can be still be proposed", "+\t\t\t\tif (!field.isStatic()) { ", "+\t\t\t\t\tcontinue next;", "+\t\t\t\t} else if (isFieldBeingCompletedStatic) {", "+\t\t\t\t\t// static fields can't be proposed before they are actually declared if the ", "+\t\t\t\t\t// field currently being declared is also static", "+\t\t\t\t\tcontinue next;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3b0d9510426e796e46c3dc22fa4db6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5e9cb8a680609e97a11e6fc9b255fcb2043219aa", "commitAfterChange": "9892e22e3cda97844e8704bc9ff3072e4e043b62", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\t\t// Though, if field is static, then it can be still be proposed", "-\t\t\t\tif (!field.isStatic()) { ", "-\t\t\t\t\tcontinue next;", "-\t\t\t\t} else if (isFieldBeingCompletedStatic) {", "-\t\t\t\t\t// static fields can't be proposed before they are actually declared if the ", "-\t\t\t\t\t// field currently being declared is also static", "-\t\t\t\t\tcontinue next;", "+\t\t\t\t// Though, if field is static or completion happens in Javadoc, then it can be still be proposed", "+\t\t\t\tif (this.assistNodeInJavadoc == 0) {", "+\t\t\t\t\tif (!field.isStatic()) {", "+\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t} else if (isFieldBeingCompletedStatic) {", "+\t\t\t\t\t\t// static fields can't be proposed before they are actually declared if the", "+\t\t\t\t\t\t// field currently being declared is also static", "+\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t}"]}], "num": 46010}