{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "035c76858a450ab27ae7c7dd9427f3f5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eefead395da27a408b19c3c7802025e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "cb1229e517a2018e5263ed249b199ae2a321da49", "commitAfterChange": "4732df192beaa38106d940c4bfeefb54a9e4a1cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (this.affectedChildren == null || this.affectedChildren.length == 0) {", "+\tif (this.affectedChildren.length == 0) {", "-\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\t\texistingChildIndex = i;", "-\t\t\tbreak;", "+\tif (this.affectedChildren != null) {", "+\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "+\t\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "+\t\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "+\t\t\t\texistingChildIndex = i;", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47afee16ab175a4a07d56287fe692ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7640f265fff0de1f249d5cd014fefd781c5e41fa", "commitAfterChange": "5a109ff892780628d02e7100d3d4244ddbef3546", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r public ReferenceBinding getType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding getType(char[][] compoundName)", "diff": ["-\t\tif (packageBinding == null || packageBinding == theNotFoundPackage)\r", "+\t\tif (packageBinding == theNotFoundPackage)\r", "-\t\tfor (int i = 1, packageLength = compoundName.length - 1; i < packageLength; i++) {\r", "-\t\t\tif ((packageBinding = packageBinding.getPackage0(compoundName[i])) == null)\r", "-\t\t\t\tbreak;\r", "-\t\t\tif (packageBinding == theNotFoundPackage)\r", "-\t\t\t\treturn null;\r", "+\t\tif (packageBinding != null) {\r", "+\t\t\tfor (int i = 1, packageLength = compoundName.length - 1; i < packageLength; i++) {\r", "+\t\t\t\tif ((packageBinding = packageBinding.getPackage0(compoundName[i])) == null)\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tif (packageBinding == theNotFoundPackage)\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t}\r"]}], "num": 31262}