{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "794c692dcc6efd319749123e257619a5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b7217561b792b69a9d30855caf6e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "6b66bca84f13c7e210ac53b9682e41436c31dce2", "commitAfterChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\tif (classScope.environment().usesNullTypeAnnotations())", "-\t\t\tanalyseArguments18(flowInfo, this.arguments, this.binding);", "-\t\telse", "-\t\t\tanalyseArguments(flowInfo, this.arguments, this.binding);", "+\t\tanalyseArguments(classScope.environment(), flowInfo, this.arguments, this.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47377abe5853b67d74381db7cdc3c4ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "6b66bca84f13c7e210ac53b9682e41436c31dce2", "commitAfterChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif (classScope.environment().usesNullTypeAnnotations())", "-\t\t\t\tanalyseArguments18(flowInfo, this.arguments, this.binding);", "-\t\t\telse", "-\t\t\t\tanalyseArguments(flowInfo, this.arguments, this.binding);", "+\t\t\tanalyseArguments(classScope.environment(), flowInfo, this.arguments, this.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9960d9ed536ccc48c9f581282c09369c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tBinding getBinaryBinding(CompilationUnitResolver resolver)", "signatureAfterChange": " \tBinding getBinaryBinding(CompilationUnitResolver resolver)", "diff": ["+\t */", "+\tBinding getBinaryBinding(CompilationUnitResolver resolver) {", "+\t\tTypeBinding binding = resolver.lookupEnvironment.getType(this.compoundName);", "+\t\treturn getArrayBinding(this.dimension, binding, resolver);", "+\t}", "-\t  */", "-\tBinding getBinaryBinding(CompilationUnitResolver resolver) {", "-\t\tTypeBinding binding = resolver.lookupEnvironment.getType(this.compoundName);", "-\t \tif (this.scanner.nextToken() == BindingKeyScanner.ARRAY)", "-\t\t\treturn getArrayBinding(binding, resolver);", "-\t \telse", "-\t \t\treturn binding;", "-\t}"]}], "num": 39369}