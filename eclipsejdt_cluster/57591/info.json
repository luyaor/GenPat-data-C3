{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc77b3293865f384135f5ece03ee7b43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137fb4c6b81608c8c4317c7eace19c26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "ea176c4b30f0ccecbe1ef65d5acaa7a437fc7839", "commitAfterChange": "51ed698671d4eccb2f1e7d9fc9f63f18fc20c064", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "signatureAfterChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "diff": ["-\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED && JavaProject.hasJavaNature(resource)) {", "+\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED && JavaProject.hasJavaNature(resource.getProject())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aad2cb2b58f19486048ef33593bce88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "5d40d607db39c969811aa1389d4dbc7ecffbf8a1", "commitAfterChange": "33523e4b99ed8bfc74579de56a63cfc65481aa8a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tint reconcileFlags, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tint reconcileFlags, \t\tIProgressMonitor monitor)", "diff": ["-\t\tunit.setTypeRoot(workingCopy);", "+\t\tunit.setTypeRoot(workingCopy.originalFromClone());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "918f9192ea65c4d7a5db6d86f433ec25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/DeclarationImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     Collection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "signatureAfterChange": "   \t \tCollection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "diff": ["-\r", "-    Collection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)\r", "-    {\r", "-        if( annoInstances == null || annoInstances.size() == 0 ) return Collections.emptyList();\r", "-        final List<AnnotationMirror> result = new ArrayList<AnnotationMirror>(annoInstances.size());\r", "-        for( org.eclipse.jdt.core.dom.Annotation annoInstance : annoInstances){\r", "-            final AnnotationMirrorImpl annoMirror =\r", "-                        (AnnotationMirrorImpl)Factory.createAnnotationMirror(annoInstance, this, _env);\r", "-            result.add(annoMirror);\r", "-        }\r", "-        return result;\r", "-    }  \r", "+\t", "+\tCollection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "+\t{", "+\t\tif( annoInstances == null || annoInstances.size() == 0 ) return Collections.emptyList();", "+\t\tfinal List<AnnotationMirror> result = new ArrayList<AnnotationMirror>(annoInstances.size());", "+\t\tfor( org.eclipse.jdt.core.dom.Annotation annoInstance : annoInstances){", "+\t\t\tfinal AnnotationMirrorImpl annoMirror =", "+\t\t\t\t(AnnotationMirrorImpl)Factory.createAnnotationMirror(annoInstance.resolveAnnotation(), this, _env);", "+\t\t\tresult.add(annoMirror);", "+\t\t}", "+\t\treturn result;", "+\t}  "]}], "num": 57591}