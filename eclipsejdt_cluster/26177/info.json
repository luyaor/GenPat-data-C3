{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b3c36bcf598a9d1eda01bb559ffb252", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4002f06a076434388974a69fdfbaff9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "d2fba759d7837de1441525f226f602f595016e9d", "commitAfterChange": "fa4ac5f2b99f8df2398d7d03706808dec36119dc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic AptConfigurationBlock(IStatusChangeListener context, IProject project, IWorkbenchPreferenceContainer container)", "signatureAfterChange": "  \tpublic AptConfigurationBlock(IStatusChangeListener context, IProject project, IWorkbenchPreferenceContainer container)", "diff": ["-\t\tfAptEnabledField= new SelectionButtonDialogField(SWT.CHECK);", "-\t\tfAptEnabledField.setDialogFieldListener(adapter);", "-\t\tfAptEnabledField.setLabelText(Messages.AptConfigurationBlock_enable);", "+\t\tif (fJProj != null) {", "+\t\t\tfAptEnabledField= new SelectionButtonDialogField(SWT.CHECK);", "+\t\t\tfAptEnabledField.setDialogFieldListener(adapter);", "+\t\t\tfAptEnabledField.setLabelText(Messages.AptConfigurationBlock_enable);", "+\t\t}", "+\t\telse {", "+\t\t\tfAptEnabledField = null;", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b702f635c694537e376b5740f15dc575", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "c7954120e63263c46b15a17bbedb7ef74c70c57a", "commitAfterChange": "6fa0b5f14657fce3e4db8088301bb75857d231ba", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tprivate void generateElementValue( \t\t\tExpression defaultValue, \t\t\tTypeBinding memberValuePairReturnType, \t\t\tint attributeOffset)", "signatureAfterChange": "  \tprivate void generateElementValue( \t\t\tExpression defaultValue, \t\t\tTypeBinding memberValuePairReturnType, \t\t\tint attributeOffset)", "diff": ["-\t\tif (memberValuePairReturnType.isArrayType() && !defaultValueBinding.isArrayType()) {", "-\t\t\t// automatic wrapping", "-\t\t\tif (contentsOffset + 3 >= this.contents.length) {", "-\t\t\t\tresizeContents(3);", "-\t\t\t}", "-\t\t\tcontents[contentsOffset++] = (byte) '[';", "-\t\t\tcontents[contentsOffset++] = (byte) 0;", "-\t\t\tcontents[contentsOffset++] = (byte) 1;", "-\t\t}", "-\t\tif (constant != null && constant != Constant.NotAConstant) {", "-\t\t\tgenerateElementValue(attributeOffset, defaultValue, constant);", "+\t\tif (defaultValueBinding == null) {", "+\t\t\tcontentsOffset = attributeOffset;", "-\t\t\tgenerateElementValueForNonConstantExpression(defaultValue, attributeOffset, defaultValueBinding);", "+\t\t\tif (memberValuePairReturnType.isArrayType() && !defaultValueBinding.isArrayType()) {", "+\t\t\t\t// automatic wrapping", "+\t\t\t\tif (contentsOffset + 3 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(3);", "+\t\t\t\t}", "+\t\t\t\tcontents[contentsOffset++] = (byte) '[';", "+\t\t\t\tcontents[contentsOffset++] = (byte) 0;", "+\t\t\t\tcontents[contentsOffset++] = (byte) 1;", "+\t\t\t}", "+\t\t\tif (constant != null && constant != Constant.NotAConstant) {", "+\t\t\t\tgenerateElementValue(attributeOffset, defaultValue, constant);", "+\t\t\t} else {", "+\t\t\t\tgenerateElementValueForNonConstantExpression(defaultValue, attributeOffset, defaultValueBinding);", "+\t\t\t}"]}], "num": 26177}