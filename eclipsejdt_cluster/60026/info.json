{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cca1329bb6583d9f4a0803b84191d547", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b47aa05f35c6ddfa9cdc1750ec65b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "723628e20cdcca3d7368991555fbb1e08f7222a1", "commitAfterChange": "daa096617d4294add6bd8531102c2906f3417dbb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tIJavaProject currentProject, \t\tIPath currentOutput, \t\tint outputTraverseMode)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tIJavaProject currentProject, \t\tIPath currentOutput, \t\tint outputTraverseMode, \t\tchar[][] currentExclusionPatterns)", "diff": ["-\t\tint outputTraverseMode) {", "+\t\tint outputTraverseMode,", "+\t\tchar[][] currentExclusionPatterns) {", "+\t\t\t\t", "+\t\t\t\t// check if resource is not excluded", "+\t\t\t\tif (Util.isExcluded(childRes, currentExclusionPatterns)) continue;", "+\t\t\t\t\t\t", "+\t\t\t\tif (isPkgFragmentRoot) {", "+\t\t\t\t\tcurrentExclusionPatterns = (char[][])this.exclusionPatterns.get(childPath);", "+\t\t\t\t}", "-\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, outputTraverseMode)) {", "+\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, outputTraverseMode, currentExclusionPatterns)) {", "-\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, IGNORE); // binary output of projectOfRoot cannot be this root", "+\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, IGNORE, null); // binary output of projectOfRoot cannot be this root"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e0ff51f044035c02627af8bacdf244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c09e95424aee3fa583749f78830353a794128164", "commitAfterChange": "c7b59a28aedb68eaaa1a4a3fd7cd0012ca10b3f9", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tIJavaProject currentProject, \t\tIPath currentOutput, \t\tint outputTraverseMode, \t\tchar[][] currentExclusionPatterns)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tIJavaProject currentProject, \t\tIPath currentOutput, \t\tint outputTraverseMode)", "diff": ["-\t\tint outputTraverseMode,", "-\t\tchar[][] currentExclusionPatterns) {", "+\t\tint outputTraverseMode) {", "-\t\t\t\t// check if resource is not excluded", "-\t\t\t\tif (Util.isExcluded(childRes, currentExclusionPatterns)) continue;", "-", "-\t\t\t\t\tcurrentExclusionPatterns = (char[][])this.exclusionPatterns.get(childPath);", "+\t\t\t\t\tthis.currentExclusionPatterns = (char[][])this.exclusionPatterns.get(childPath);", "-\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, outputTraverseMode, currentExclusionPatterns)) {", "+\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, outputTraverseMode)) {", "-\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, IGNORE, null); // binary output of projectOfRoot cannot be this root", "+\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, IGNORE); // binary output of projectOfRoot cannot be this root"]}], "num": 60026}