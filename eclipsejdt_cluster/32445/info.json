{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8a9e5f8b859602612209ab0f5b2ae4c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79985f5b46a64b69bc3996c51c2f902f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchMessagerImpl.java", "commitBeforeChange": "f0a012a644cdef416114ba8fc17e09c4e5af2fd2", "commitAfterChange": "1923ff35ed43b82db4ab364737f7df955eb62ef8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Override \tpublic void printMessage(Kind kind, CharSequence msg, Element e, \t\t\tAnnotationMirror a, AnnotationValue v)", "signatureAfterChange": " \t@Override \tpublic void printMessage(Kind kind, CharSequence msg, Element e, \t\t\tAnnotationMirror a, AnnotationValue v)", "diff": ["+\t\t//TODO: we are currently ignoring 'a' and 'v'", "+\t\tif (kind == Kind.ERROR) {", "+\t\t\t_processingEnv.setErrorRaised(true);", "+\t\t}", "+\t\tCategorizedProblem problem = createProblem(kind, msg, e);", "+\t\tif (problem != null) {", "+\t\t\tthis._compiler.addExtraProblems(problem);", "+\t\t}", "+\t}", "-\t\tCategorizedProblem problem = null;", "-\t\t\t\t_processingEnv.setErrorRaised(true);", "-\t\tif (problem != null) {", "-\t\t\tthis._compiler.addExtraProblems(problem);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4da3e3939318d2476a5225c7c23703f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "4eb127945a2ceccf115682270cb891d015657dc6", "commitAfterChange": "2c3d71a674e588a8bcef926caa5965ce37ed2171", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\tpublic void acceptProblem(IProblem problem)", "signatureAfterChange": " \t\tpublic void acceptProblem(IProblem problem)", "diff": ["+\t\tboolean isCanceling = false;", "+\t\tpublic void acceptProblem(IProblem problem) {", "+\t\t\tif (isCanceling) this.progressMonitor.setCanceled(true); // auto-cancel on first problem", "+\t\t\tsuper.acceptProblem(problem);", "+\t\t}\t\t", "-\t\tboolean isCanceling = false;", "-\t\tpublic void acceptProblem(IProblem problem) {", "-\t\t\tif (isCanceling) myMonitor.setCanceled(true); // auto-cancel on first problem", "-\t\t\tsuper.acceptProblem(problem);", "-\t\t}\t\t"]}], "num": 32445}