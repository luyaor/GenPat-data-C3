{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06528bb35959cf57e3f1d956b3e28158", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27cca7d5fb9e0bb7baa3ddbb06460b10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "6cf3ad7158f8af7acb2c41720a27495c19c9d467", "commitAfterChange": "09515e55d34c849915eacbb773d9281c9c2a5a0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      \tScribe(CodeFormatterVisitor formatter, Map settings, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil)", "signatureAfterChange": " \tScribe(CodeFormatterVisitor formatter,long sourceLevel, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil)", "diff": ["-\tScribe(CodeFormatterVisitor formatter, Map settings, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil) {", "-\t\tif (settings != null) {", "-\t\t\tObject sourceLevelOption = settings.get(JavaCore.COMPILER_SOURCE);", "-\t\t\tlong sourceLevel = ClassFileConstants.JDK1_3;", "-\t\t\tif (JavaCore.VERSION_1_4.equals(sourceLevelOption)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_4;", "-\t\t\t} else if (JavaCore.VERSION_1_5.equals(sourceLevelOption)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_5;", "-\t\t\t}", "+\t// TODO (olivier) remove commented code after review", "+\tScribe(CodeFormatterVisitor formatter, /*Map settings*/long sourceLevel, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil) {", "+//\t\tif (settings != null) {", "+//\t\t\tObject sourceLevelOption = settings.get(JavaCore.COMPILER_SOURCE);", "+//\t\t\tlong sourceLevel = ClassFileConstants.JDK1_3;", "+//\t\t\tif (JavaCore.VERSION_1_4.equals(sourceLevelOption)) {", "+//\t\t\t\tsourceLevel = ClassFileConstants.JDK1_4;", "+//\t\t\t} else if (JavaCore.VERSION_1_5.equals(sourceLevelOption)) {", "+//\t\t\t\tsourceLevel = ClassFileConstants.JDK1_5;", "+//\t\t\t}", "-\t\t} else {", "-\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t}", "+//\t\t} else {", "+//\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "+//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f819ead3aa6c8ebe3889233eb4d6ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe2.java", "commitBeforeChange": "7ae418fd7c0f682802a208d278a74651039ebd3b", "commitAfterChange": "b7fa9526368fbc417ea1b7d0b501e47a1eefe091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      \tScribe2(CodeFormatterVisitor2 formatter, Map settings, int offset, int length, CompilationUnit unit)", "signatureAfterChange": "  \tScribe2(CodeFormatterVisitor2 formatter, long sourceLevel, int offset, int length, CompilationUnit unit)", "diff": ["-    ", "-\tScribe2(CodeFormatterVisitor2 formatter, Map settings, int offset, int length, CompilationUnit unit) {", "-\t\tif (settings != null) {", "-\t\t\tObject sourceLevelOption = settings.get(JavaCore.COMPILER_SOURCE);", "-\t\t\tlong sourceLevel = ClassFileConstants.JDK1_3;", "-\t\t\tif (JavaCore.VERSION_1_4.equals(sourceLevelOption)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_4;", "-\t\t\t} else if (JavaCore.VERSION_1_5.equals(sourceLevelOption)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_5;", "-\t\t\t}", "-\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t} else {", "-\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t}", "+", "+\tScribe2(CodeFormatterVisitor2 formatter, long sourceLevel, int offset, int length, CompilationUnit unit) {", "+\t\tthis.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);"]}], "num": 70582}