{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c67c6a2173ddda180a0cf1d22701a44f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c72c2d5de1af67cc161186164350d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "dab793aa10c3d3fab59be1d684889d384fadf8c3", "commitAfterChange": "e429be43fd78fe13561bb309f14681f9e3b740d4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate long detectStandardAnnotation(Scope scope, ReferenceBinding annotationType, MemberValuePair valueAttribute)", "signatureAfterChange": " \tprivate long detectStandardAnnotation(Scope scope, ReferenceBinding annotationType, MemberValuePair valueAttribute)", "diff": ["-\t\t\t\t\tif (expr instanceof NameReference) {", "-\t\t\t\t\t\tFieldBinding field = ((NameReference) expr).fieldBinding();", "+\t\t\t\t\tif ((expr.bits & Binding.VARIABLE) == Binding.FIELD) {", "+\t\t\t\t\t\tFieldBinding field = ((Reference)expr).fieldBinding();", "-\t\t\t\t\t\t\t\tif (initExpr instanceof NameReference) {", "-\t\t\t\t\t\t\t\t\tFieldBinding field = ((NameReference) initExpr).fieldBinding();", "+\t\t\t\t\t\t\t\tif ((initExpr.bits & Binding.VARIABLE) == Binding.FIELD) {", "+\t\t\t\t\t\t\t\t\tFieldBinding field = ((Reference) initExpr).fieldBinding();", "-\t\t\t\t\t} else if (expr instanceof NameReference) {", "-\t\t\t\t\t\tFieldBinding field = ((NameReference) expr).fieldBinding();", "+\t\t\t\t\t} else if ((expr.bits & Binding.VARIABLE) == Binding.FIELD) {", "+\t\t\t\t\t\tFieldBinding field = ((Reference) expr).fieldBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66a732b2c1bfad4dfff716378969dcb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "5830f34f316eb59740b3f5242c08f1b46d8edf90", "commitAfterChange": "d9d1b97f49560324c7b848690f93b474a074ee07", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "signatureAfterChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "diff": ["-\t\t\t\t\tif (constantExpression instanceof QualifiedNameReference) {", "-\t\t\t\t\t\t scope.problemReporter().cannotUseQualifiedEnumConstantInCaseLabel((QualifiedNameReference)constantExpression);", "+\t\t\t\t\tNameReference reference = (NameReference) constantExpression;", "+\t\t\t\t\tFieldBinding field = reference.fieldBinding();", "+\t\t\t\t\tif ((field.modifiers & AccEnum) == 0) {", "+\t\t\t\t\t\t scope.problemReporter().enumSwitchCannotTargetField(reference, field);", "+\t\t\t\t\t} else \tif (reference instanceof QualifiedNameReference) {", "+\t\t\t\t\t\t scope.problemReporter().cannotUseQualifiedEnumConstantInCaseLabel(reference, field);", "-\t\t\t\t\treturn Constant.fromValue(((NameReference)constantExpression).fieldBinding().id); // ordinal value", "+\t\t\t\t\treturn Constant.fromValue(field.id); // ordinal value"]}], "num": 3425}