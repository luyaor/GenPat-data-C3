{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b090874592022036cdd914ee3226c20", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b4e015591e4d141284ddfc3ecd903c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.environment().options.sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\tLookupEnvironment env = scope.environment();", "+\t\tboolean use15specifics = env.options.sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\t\tvalueIfFalseType = scope.computeBoxingType(valueIfFalseType);", "+\t\t\t\t\tvalueIfFalseType = env.computeBoxingType(valueIfFalseType);", "-\t\t\t\tvalueIfTrueType = scope.computeBoxingType(valueIfTrueType);", "+\t\t\t\tvalueIfTrueType = env.computeBoxingType(valueIfTrueType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4ccb6bfc0c02380ebf5193911a586c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "073c195d4829bd3ee6e06c1d3c0bfc4a1c7046ee", "commitAfterChange": "677bf3763b6e383c756f5ca8cbbd80c6dec30c1f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tboolean use15specifics = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\tfinal long sourceLevel = scope.compilerOptions().sourceLevel;", "+\t\tboolean use15specifics = sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\tboolean use18specifics = sourceLevel >= ClassFileConstants.JDK1_8;", "+\t\t", "+\t\tif (use18specifics) { ", "+\t\t\tif (this.valueIfTrue.isPolyExpression()) // context propagated already.", "+\t\t\t\tthis.valueIfTrue.setExpectedType(this.expectedType);", "+\t\t\tif (this.valueIfFalse.isPolyExpression())", "+\t\t\t\tthis.valueIfFalse.setExpectedType(this.expectedType);", "+\t\t}", "+\t\t"]}], "num": 23332}