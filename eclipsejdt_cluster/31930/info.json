{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4204105049650cac1b0c13cafc67610e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14fe037e0ea5f0927abf202a50f4156a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "5d7b0ed4ccf6dc91337d9ac62f14ae585f547855", "commitAfterChange": "e706e02e84b0ab73a5fa0bab5675fe627a8c0157", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t// check if boolean method throwing exception", "-\t\tif (binding != null && binding.returnType.id == T_boolean && binding.thrownExceptions.length != 0){", "-\t\t\tscope.problemReporter().booleanMethodThrowingException(this);", "-\t\t}", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0597f760b153d803142d3aa54e7fea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c4a68c9344c4a1215b0b6b8b1c09706f697c5991", "commitAfterChange": "d7adcfda6b6c5834114a69b8b94841df0ad6728d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t// Return on invalid combination of package and type names", "-\t\tif (packageName == null || packageName.length == 0) {", "-\t\t\tif (typeName != null && typeName.length == 0) {", "-\t\t\t\t// TODO (frederic) Throw a JME instead?", "-\t\t\t\tif (VERBOSE) {", "-\t\t\t\t\tUtil.verbose(\"\t=> return no result due to invalid empty values for package and type names!\"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t}", "-"]}], "num": 31930}