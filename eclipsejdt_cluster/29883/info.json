{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0931dc46d2c7a4d9e026feab52281f6f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a8ffa66c973db2e2130dcd1c669382f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotationBinding.java", "commitBeforeChange": "2001b039afb3494b66b4a4b694a48c1ddf006564", "commitAfterChange": "4f470c96fe8512fc8667dbb12384398ec0b5851a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["-\t\tbuffer.append(\"{ \"); //$NON-NLS-1$", "-\t\tfor (int i = 0, max = this.pairs.length; i < max; i++) {", "-\t\t\tif (i > 0) buffer.append(\", \"); //$NON-NLS-1$", "-\t\t\tbuffer.append(this.pairs[i]);", "+\t\tbuffer.append('(');", "+\t\tif (this.pairs.length == 1 && CharOperation.equals(this.pairs[0].getName(), TypeConstants.VALUE)) {", "+\t\t\tbuffer.append(this.pairs[0].value); ", "+\t\t} else {", "+\t\t\tfor (int i = 0, max = this.pairs.length; i < max; i++) {", "+\t\t\t\tif (i > 0) buffer.append(\", \"); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(this.pairs[i]);", "+\t\t\t}", "-\t\tbuffer.append('}');", "+\t\tbuffer.append(')');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b046445127749b140c29bf56aea01a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "2b388a4ff4c8fe51488a95b2626d01fa3ae58b63", "commitAfterChange": "a82dc4871132f6f30550e7b934921ef96c00600d", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic MethodBinding getExactMethod(TypeBinding receiverType, char[] selector, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getExactMethod(TypeBinding receiverType, char[] selector, InvocationSite invocationSite)", "diff": ["+\t\tif (exactMethod.declaringClass.id == TypeIds.T_JavaLangObject", "+\t\t\t\t&& CharOperation.equals(selector, TypeConstants.GETCLASS)", "+\t\t\t    && exactMethod.returnType.isParameterizedType())", "+\t\t{", "+\t\t\treturn environment().createGetClassMethod(receiverType, exactMethod, this);", "+\t\t}"]}], "num": 29883}