{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c74cc96bdbe510516c5c800a7461e7bf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f4033803f9174582fa8a96a67651473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "a2ae3e117eaea10fecaf3678af5938ffa98d76f4", "commitAfterChange": "71ab6b3956db9fea4a8f81e891e05ac4d44d96d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tLoopingFlowContext condLoopContext = null;\r", "-\t\t\tLoopingFlowContext condLoopContext;\r", "-\t\t\tcondLoopContext.complainOnFinalAssignmentsInLoop(scope, flowInfo);\r", "+\t\tif (condLoopContext != null) condLoopContext.complainOnFinalAssignmentsInLoop(scope, flowInfo);\r", "-\t\tif ((actionInfo == FlowInfo.DeadEnd) || actionInfo.isFakeReachable()){\r", "-\t\t\tif ((loopingContext.initsOnContinue == FlowInfo.DeadEnd) || loopingContext.initsOnContinue.isFakeReachable()){\r", "+\t\tif (((actionInfo == FlowInfo.DeadEnd) || actionInfo.isFakeReachable())\r", "+\t\t\t&& ((loopingContext.initsOnContinue == FlowInfo.DeadEnd) || loopingContext.initsOnContinue.isFakeReachable())){\r", "-\t\t\t} else {\r", "-\t\t\t\tloopingContext.complainOnFinalAssignmentsInLoop(scope, loopingContext.initsOnContinue);\t\t\t\t\r", "-\t\t\t}\r", "+\t\t\tif (condLoopContext != null) condLoopContext.complainOnFinalAssignmentsInLoop(scope, flowInfo);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcba5c0fb9f722780ef3942b6d941eb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "600cc6e957b3608b8d3c26027936fe87489e52d9", "commitAfterChange": "23ffb43b2ebb4c3a8ec95cae07baf3650cc30157", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "signatureAfterChange": " \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "diff": ["+\t\t\t    && this.otherBindings != null // the last field binding is only assigned", "-\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(lastFieldBinding)) {", "+\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(lastFieldBinding) ", "+\t\t\t\t\t&& indexOfFirstFieldBinding == 1) {", "-\t\t\t\t\tif (indexOfFirstFieldBinding == 1) {", "-\t\t\t\t\t\t// was an implicit reference to the first field binding", "-\t\t\t\t\t\tcurrentScope.problemReporter().duplicateInitializationOfBlankFinalField(", "-\t\t\t\t\t\t\tlastFieldBinding,", "-\t\t\t\t\t\t\tthis);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcurrentScope.problemReporter().cannotAssignToFinalField(lastFieldBinding, this);", "-\t\t\t\t\t\t// attempting to assign a non implicit reference", "-\t\t\t\t\t}", "+\t\t\t\t\tcurrentScope.problemReporter().duplicateInitializationOfBlankFinalField(lastFieldBinding, this);", "+\t\t\t\tif (currentScope.allowBlankFinalFieldAssignment(lastFieldBinding)) { // pretend it got assigned", "+\t\t\t\t\tflowInfo.markAsDefinitelyAssigned(lastFieldBinding);", "+\t\t\t\t}"]}], "num": 33778}