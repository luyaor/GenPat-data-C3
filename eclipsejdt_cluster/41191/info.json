{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b178edb64812f90da7acd6402e4a0887", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dafaa82854153a5e4889807b942e8f93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetThisReference.java", "commitBeforeChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "commitAfterChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (this.isImplicit || checkAccess(scope.methodScope())){", "-\t\t\tsnippetType = scope.enclosingSourceType();", "+\t\tMethodScope methodScope = scope.methodScope();", "+\t\tif (!this.isImplicit && !checkAccess(methodScope)) {", "+\t\t\treturn null;", "-\t\tif (snippetType == null) return null;", "+\t\tsnippetType = scope.enclosingSourceType();", "-\t\tif (this.delegateThis == null) return null; // internal error, field should have been found", "-\t\tif (this.delegateThis.isValidBinding()) return this.resolvedType = this.delegateThis.type;", "-\t\treturn this.resolvedType = snippetType;", "+\t\tif (this.delegateThis == null || !this.delegateThis.isValidBinding()) {", "+\t\t\t// should not happen", "+\t\t\t// if this happen we should report illegal access to this in a static context", "+\t\t\tmethodScope.problemReporter().errorThisSuperInStatic(this);", "+\t\t\treturn null;", "+\t\t}", "+\t\treturn this.resolvedType = this.delegateThis.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feeb08c19945eebbecbf5b48dfc94127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetThisReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tconstant = NotAConstant;", "+\t\tthis.constant = NotAConstant;", "-\t\tdelegateThis = scope.getField(snippetType, DELEGATE_THIS, this);", "-\t\tif (delegateThis == null) return null; // internal error, field should have been found", "-\t\tif (delegateThis.isValidBinding()) return this.resolvedType = delegateThis.type;", "+\t\tthis.delegateThis = scope.getField(snippetType, DELEGATE_THIS, this);", "+\t\tif (this.delegateThis == null) return null; // internal error, field should have been found", "+\t\tif (this.delegateThis.isValidBinding()) return this.resolvedType = this.delegateThis.type;"]}], "num": 41191}