{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea1c83d4a9b1c7642c4eca568b82848f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be12f02566cec05fd8acf31e9aca56a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected abstract void updateJavadoc();", "signatureAfterChange": " \tpublic final int getLineNumber(int position)", "diff": ["-\tprotected abstract void updateLineEnd();", "-\tprotected abstract void updateJavadoc();", "+\t */", "+\tpublic final int getLineNumber(int position) {", "+\t", "+\t\tif (this.lineEnds == null)", "+\t\t\treturn 1;", "+\t\tint length = this.lineEnds.length;", "+\t\tif (length == 0)", "+\t\t\treturn 1;", "+\t\tint g = 0, d = length - 1;", "+\t\tint m = 0;", "+\t\twhile (g <= d) {", "+\t\t\tm = (g + d) /2;", "+\t\t\tif (position < this.lineEnds[m]) {", "+\t\t\t\td = m-1;", "+\t\t\t} else if (position > this.lineEnds[m]) {", "+\t\t\t\tg = m+1;", "+\t\t\t} else {", "+\t\t\t\treturn m + 1;", "+\t\t\t}", "+\t\t}", "+\t\tif (position < this.lineEnds[m]) {", "+\t\t\treturn m+1;", "+\t\t}", "+\t\treturn m+2;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd0d7bc4dcc2fbcaf8cf715ae6584d8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "commitAfterChange": "355460267a070a52738f93cd1e4e0f2039fb0d85", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate int getLineNumber(int position)", "signatureAfterChange": " \tprivate int getLineNumber(int position)", "diff": ["-\t\t\treturn this.scanner.getLineNumber(position);", "+\t\t\treturn Util.getLineNumber(position, this.scanner.lineEnds, 0, this.scanner.linePtr);", "-\t\tint length = this.lineEnds.length;", "-\t\tif (length == 0)", "-\t\t\treturn 1;", "-\t\tint g = 0, d = length - 1;", "-\t\tint m = 0;", "-\t\twhile (g <= d) {", "-\t\t\tm = g + (d - g) /2;", "-\t\t\tif (position < this.lineEnds[m]) {", "-\t\t\t\td = m-1;", "-\t\t\t} else if (position > this.lineEnds[m]) {", "-\t\t\t\tg = m+1;", "-\t\t\t} else {", "-\t\t\t\treturn m + 1;", "-\t\t\t}", "-\t\t}", "-\t\tif (position < this.lineEnds[m]) {", "-\t\t\treturn m+1;", "-\t\t}", "-\t\treturn m+2;", "+\t\treturn Util.getLineNumber(position, this.lineEnds, 0, this.lineEnds.length-1);"]}], "num": 26782}