{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35ed5fc566e20b7f8d6f3377addd2743", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef9d37c1ff04e699332aadbce238045", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "376cf3e1a3637f0d6698064b8aa139e3173f12de", "commitAfterChange": "15d76232d8d0f6d3d473493e1ebc4002775a58d1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private IProject[] getRequiredProjects(boolean includeBinaryPrerequisites)", "signatureAfterChange": "\r private IProject[] getRequiredProjects(boolean includeBinaryPrerequisites)", "diff": ["-\t\tif (includeBinaryPrerequisites) {\r", "+\t\tif (includeBinaryPrerequisites && binaryResources != null) {\r", "-\t\t\tif (binaryResources != null) {\r", "-\t\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "-\t\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "-\t\t\t\t\tIProject p = (IProject) keyTable[i];\r", "-\t\t\t\t\tif (p != null && p != currentProject && !projects.contains(p))\r", "-\t\t\t\t\t\tprojects.add(p);\r", "-\t\t\t\t}\r", "+\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "+\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "+\t\t\t\tIProject p = (IProject) keyTable[i];\r", "+\t\t\t\tif (p != null && p != currentProject && !projects.contains(p))\r", "+\t\t\t\t\tprojects.add(p);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e7f01976074e63ec517a10ec9db5f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "9d71feb0c4dc07666b87c11c763ba1f67e99952a", "commitAfterChange": "de0a9fa3c1e69490ad1268e62e8c28d4b0e12f21", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private IProject[] getRequiredProjects()", "signatureAfterChange": "\r private IProject[] getRequiredProjects(boolean includeBinaryPrerequisites)", "diff": ["-private IProject[] getRequiredProjects() {\r", "+private IProject[] getRequiredProjects(boolean includeBinaryPrerequisites) {\r", "-\t\t// some binary resources on the class path can come from projects that are not included in the project references\r", "-\t\tif (binaryResources != null) {\r", "-\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "-\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "-\t\t\t\tIProject p = (IProject) keyTable[i];\r", "-\t\t\t\tif (p != null && p != currentProject && !projects.contains(p))\r", "-\t\t\t\t\tprojects.add(p);\r", "+\t\tif (includeBinaryPrerequisites){\r", "+\t\t\t// some binary resources on the class path can come from projects that are not included in the project references\r", "+\t\t\tif (binaryResources != null) {\r", "+\t\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "+\t\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "+\t\t\t\t\tIProject p = (IProject) keyTable[i];\r", "+\t\t\t\t\tif (p != null && p != currentProject && !projects.contains(p))\r", "+\t\t\t\t\t\tprojects.add(p);\r", "+\t\t\t\t}\r"]}], "num": 14189}