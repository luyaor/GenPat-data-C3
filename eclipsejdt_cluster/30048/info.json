{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cd23f9f77ada2939b0ede4dbc171a39", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b143ab56af012a9ed5fc8fafb8c834a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tcheckInvocationArguments(scope, null, allocationType, this.binding, this.arguments, argumentTypes, argsContainCast, this);", "+\t\t\t\tcheckInvocationArguments(scope, null, allocationType, this.binding, this.arguments, argumentTypes, argsContainCast, this, (this.bits & ASTNode.Unchecked) != 0);", "-\t\t\tcheckInvocationArguments(scope, null, anonymousSuperclass, inheritedBinding, this.arguments, argumentTypes, argsContainCast, this);", "+\t\t\tcheckInvocationArguments(scope, null, anonymousSuperclass, inheritedBinding, this.arguments, argumentTypes, argsContainCast, this, (this.bits & ASTNode.Unchecked) != 0);", "-\t\tthis.binding = this.anonymousType.createDefaultConstructorWithBinding(inheritedBinding);", "+\t\tthis.binding = this.anonymousType.createDefaultConstructorWithBinding(inheritedBinding, \t(this.bits & ASTNode.Unchecked) != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbff1a7949dcbc3adb3b94682d2870ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  protected void checkAndSetModifiers(int flag)", "signatureAfterChange": "  protected void checkAndSetModifiers(int flag)", "diff": ["-\tif ((this.modifiers & flag) != 0){ // duplicate modifier", "+\tif ((this.modifiers & flag) != 0 // duplicate modifier", "+\t\t\t|| ((this.modifiers & ExtraCompilerModifiers.AccNotNull) != 0  // conflicting flags", "+\t\t\t\t&& (flag & ExtraCompilerModifiers.AccNullable) != 0)", "+\t\t\t|| ((flag & ExtraCompilerModifiers.AccNotNull) != 0  // conflicting flags", "+\t\t\t\t&& (this.modifiers & ExtraCompilerModifiers.AccNullable) != 0)) { ", "+\t\t// TODO (maxime) check error message"]}], "num": 30048}