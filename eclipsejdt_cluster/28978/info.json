{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e9c850041d34dcd39bb2a0371374298", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11907926883f27bcc134d3f57afdfa5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "0f5d04adf9d2fa735fce5517c85c8317372cf6c0", "commitAfterChange": "6cefacaaf91a5190221cb83191ea60dad1636887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static final boolean camelCaseMatch(String pattern, int patternStart, int patternEnd, String name, int nameStart, int nameEnd)", "signatureAfterChange": " public static final boolean camelCaseMatch(String pattern, int patternStart, int patternEnd, String name, int nameStart, int nameEnd)", "diff": ["-\t\t\tif (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[patternChar] != ScannerHelper.C_UPPER_LETTER) {", "+\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[patternChar] & ScannerHelper.C_UPPER_LETTER) == 0) {", "-\t\t} else if (Character.isJavaIdentifierPart(patternChar) ", "-\t\t\t\t\t\t&& !Character.isUpperCase(patternChar)) {", "+\t\t} else if (ScannerHelper.isJavaIdentifierPart(patternChar) ", "+\t\t\t\t\t\t&& !ScannerHelper.isUpperCase(patternChar)) {", "-\t\t\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar] & (ScannerHelper.C_LOWER_LETTER|ScannerHelper.C_IDENT_PART|ScannerHelper.C_DIGIT)) != 0) {", "+\t\t\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar] & (ScannerHelper.C_LOWER_LETTER|ScannerHelper.C_SPECIAL |ScannerHelper.C_DIGIT)) != 0) {", "-\t\t\t\t} else if (Character.isJavaIdentifierPart(nameChar) ", "-\t\t\t\t\t\t\t\t&& !Character.isUpperCase(nameChar)) {", "+\t\t\t\t} else if (ScannerHelper.isJavaIdentifierPart(nameChar) ", "+\t\t\t\t\t\t\t\t&& !ScannerHelper.isUpperCase(nameChar)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc84f55bae5157ae648fca8b0e61e2ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "0f5d04adf9d2fa735fce5517c85c8317372cf6c0", "commitAfterChange": "6cefacaaf91a5190221cb83191ea60dad1636887", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "diff": ["-\t\t\tif (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[patternChar] != ScannerHelper.C_UPPER_LETTER) {", "+\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[patternChar] & ScannerHelper.C_UPPER_LETTER) == 0) {", "-\t\t} else if (Character.isJavaIdentifierPart(patternChar) ", "-\t\t\t\t\t\t&& !Character.isUpperCase(patternChar)) {", "+\t\t} else if (ScannerHelper.isJavaIdentifierPart(patternChar) ", "+\t\t\t\t\t\t&& !ScannerHelper.isUpperCase(patternChar)) {", "-\t\t\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar] & (ScannerHelper.C_LOWER_LETTER|ScannerHelper.C_IDENT_PART|ScannerHelper.C_DIGIT)) != 0) {", "+\t\t\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar] & (ScannerHelper.C_LOWER_LETTER | ScannerHelper.C_SPECIAL | ScannerHelper.C_DIGIT)) != 0) {", "-\t\t\t\t} else if (Character.isJavaIdentifierPart(nameChar) ", "-\t\t\t\t\t\t\t\t&& !Character.isUpperCase(nameChar)) {", "+\t\t\t\t} else if (ScannerHelper.isJavaIdentifierPart(nameChar) ", "+\t\t\t\t\t\t\t\t&& !ScannerHelper.isUpperCase(nameChar)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1154354f0a2b47f8ea4096516d5a2da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "7bf8b664251457ee19a0ca0f4e524593e5cebbd2", "commitAfterChange": "c844b42e53f5e6c13f3c402081599074b3dd58c2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "diff": ["-\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[patternChar] & ScannerHelper.C_UPPER_LETTER) == 0) {", "+\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[patternChar] & (ScannerHelper.C_UPPER_LETTER | ScannerHelper.C_DIGIT)) == 0) {", "-\t\telse if (Character.isJavaIdentifierPart(patternChar) && !Character.isUpperCase(patternChar)) {", "+\t\telse if (Character.isJavaIdentifierPart(patternChar) && !Character.isUpperCase(patternChar) && !Character.isDigit(patternChar)) {", "-\t\t\t\tif ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar] & (ScannerHelper.C_LOWER_LETTER | ScannerHelper.C_SPECIAL | ScannerHelper.C_DIGIT)) != 0) {", "+\t\t\t\tint charNature = ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[nameChar];", "+\t\t\t\tif ((charNature & (ScannerHelper.C_LOWER_LETTER | ScannerHelper.C_SPECIAL)) != 0) {", "+\t\t\t\t\tiName++;", "+\t\t\t\t} else if ((charNature & ScannerHelper.C_DIGIT) != 0) {", "+\t\t\t\t\t// nameChar is digit => break if the digit is current pattern character otherwise consume it", "+\t\t\t\t\tif (patternChar == nameChar) break;", "+\t\t\t// Same tests for non-obvious characters", "-\t\t\t\t// nameChar is lowercase    ", "-\t\t\t// nameChar is uppercase...", "+\t\t\t} else if (Character.isDigit(nameChar)) {", "+\t\t\t\tif (patternChar == nameChar) break;", "+\t\t\t\tiName++;", "-\t\t\t\t//.. and it does not match patternChar, so it's not a match", "-\t\t\t\t//.. and it matched patternChar. Back to the big loop"]}], "num": 28978}