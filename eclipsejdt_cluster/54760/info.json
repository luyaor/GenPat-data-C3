{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1528c9ed2695e07b4d674b8337775c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272d0e482c591638606e8b57ee1699b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "3bee3efb3c3139a52dff7aa299065deb5290ece4", "commitAfterChange": "645825dd1e7c490f7b149a754d38a08b99765996", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["-\t\t\t\tint token = readToken();", "+\t\t\t\tint token = readTokenSafely();", "-\t\t\t\t\tcase TerminalTokens.TokenNameStringLiteral : // @see \"string\"", "+\t\t\t\tcase TerminalTokens.TokenNameStringLiteral : // @see \"string\"", "+\t\t\t\t\t\tif (typeRef != null) break nextToken;", "+\t\t\t\t\t\tif (typeRef != null) break nextToken;", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tchar[] currentError = this.scanner.getCurrentIdentifierSource();", "+\t\t\t\t\t\tif (currentError.length>0 && currentError[0] == '\"') {", "+\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidReference(this.scanner.getCurrentTokenStartPosition(), getTokenEndPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fb2d5891e3930b23f0388f176d2ee7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b19786bd30a71d1dc58c189f93871794d62e10e4", "commitAfterChange": "f74920f9558494dedd70cfde05417633be38db79", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printTrailingComment()", "signatureAfterChange": "  \tpublic void printTrailingComment()", "diff": ["+\t\t\tboolean hasLineComment = false;", "-\t\t\t\t\t\tif (count >= 1) {", "+\t\t\t\t\t\tif (hasLineComment) {", "+\t\t\t\t\t\t\tif (count >= 1) {", "+\t\t\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\t\t\t\tthis.preserveEmptyLines(count, currentTokenStartPosition);", "+\t\t\t\t\t\t\t\taddDeleteEdit(currentTokenStartPosition, this.scanner.getCurrentTokenEndPosition());", "+\t\t\t\t\t\t\t\tthis.scanner.resetTo(this.scanner.currentPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (count >= 1) {", "-\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "-\t\t\t\t\t\treturn;", "+\t\t\t\t\t\thasLineComment = true;", "+\t\t\t\t\t\tbreak;"]}], "num": 54760}