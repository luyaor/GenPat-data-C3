{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "057eb963e69fbc346a1916d245f62110", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a4cd501354c551e926c0b3ccc789720", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic static String typeSignature(TypeReference type)", "signatureAfterChange": " \tpublic static String typeSignature(TypeReference type)", "diff": ["-\t\tchar[][] compoundName = type.getParameterizedTypeName();", "-\t\tchar[] typeName =CharOperation.concatWith(compoundName, '.');", "-\t\tString signature = Signature.createTypeSignature(typeName, false/*don't resolve*/);", "+\t\tString signature = null;", "+\t\tif ((type.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsUnionType) != 0) {", "+\t\t\t// special treatment for union type reference", "+\t\t\tUnionTypeReference unionTypeReference = (UnionTypeReference) type;", "+\t\t\tTypeReference[] typeReferences = unionTypeReference.typeReferences;", "+\t\t\tint length = typeReferences.length;", "+\t\t\tString[] typeSignatures = new String[length];", "+\t\t\tfor(int i = 0; i < length; i++) {", "+\t\t\t\tchar[][] compoundName = typeReferences[i].getParameterizedTypeName();", "+\t\t\t\tchar[] typeName = CharOperation.concatWith(compoundName, '.');", "+\t\t\t\ttypeSignatures[i] = Signature.createTypeSignature(typeName, false/*don't resolve*/);", "+\t\t\t}", "+\t\t\tsignature = Signature.createIntersectionTypeSignature(typeSignatures);", "+\t\t} else {", "+\t\t\tchar[][] compoundName = type.getParameterizedTypeName();", "+\t\t\tchar[] typeName =CharOperation.concatWith(compoundName, '.');", "+\t\t\tsignature = Signature.createTypeSignature(typeName, false/*don't resolve*/);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f270da21ba35afa378bd3f0d6ef5130", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "23d1f03b5721ce2de9c0b6bda12e344c2ac468ba", "commitAfterChange": "966ae4bbaf97367f3fc38a9b2c2261f477021842", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["-\t\tTypeParameter[] typeParameters = typeDeclaration.typeParameters;", "-\t\tchar[][] typeParameterNames = null;", "-\t\tchar[][][] typeParameterBounds = null;", "-\t\tif (typeParameters != null) {", "-\t\t\tint typeParametersLength = typeParameters.length;", "-\t\t\ttypeParameterNames = new char[typeParametersLength][];", "-\t\t\ttypeParameterBounds = new char[typeParametersLength][][];", "-\t\t\tfor (int i = 0; i < typeParametersLength; i++) {", "-\t\t\t\ttypeParameterNames[i] = typeParameters[i].name;", "-\t\t\t\tTypeReference[] bounds = typeParameters[i].bounds;", "-\t\t\t\tif (bounds != null) {", "-\t\t\t\t\tint boundLength = bounds.length;", "-\t\t\t\t\tchar[][] boundNames = new char[boundLength][];", "-\t\t\t\t\tfor (int j = 0; j < boundLength; j++) {", "-\t\t\t\t\t\tboundNames[j] = ", "-\t\t\t\t\t\t\tCharOperation.concatWith(bounds[j].getParameterizedTypeName(), '.'); ", "-\t\t\t\t\t}", "-\t\t\t\t\ttypeParameterBounds[i] = boundNames;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\t\t\t\tinterfaceNames,", "-\t\t\t\t\ttypeParameterNames,", "-\t\t\t\t\ttypeParameterBounds);", "+\t\t\t\t\tinterfaceNames);", "-\t\t\t\t\t\tinterfaceNames,", "-\t\t\t\t\t\ttypeParameterNames,", "-\t\t\t\t\t\ttypeParameterBounds);", "+\t\t\t\t\t\tinterfaceNames);", "-\t\t\t\t\t\tinterfaceNames,", "-\t\t\t\t\t\ttypeParameterNames,", "-\t\t\t\t\t\ttypeParameterBounds);", "+\t\t\t\t\t\tinterfaceNames);", "+\t\t\tnotifySourceElementRequestor(typeDeclaration.typeParameters);\t\t\t"]}], "num": 60822}