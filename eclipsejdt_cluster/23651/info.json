{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "278e0cd965e39bdbe949215f258cf5f7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45bd34957025e279d0e801ff12f75249", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "074f76ed30b280be335de3f9fa68939f9241cbe0", "commitAfterChange": "451a4290b08482db72c12f90b576f09a8da8fda2", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding, \t\tScope scope)", "signatureAfterChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding, \t\tScope scope)", "diff": ["+\t\t\tint searchFor = IJavaSearchConstants.TYPE;", "+\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\tsearchFor = IJavaSearchConstants.CLASS;", "+\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t//TODO(david) update this code once bug 157177 will be fixed. ", "+\t\t\t\t//searchFor = IJavaSearchConstants.INTERFACE;", "+\t\t\t\tsearchFor = IJavaSearchConstants.TYPE;", "+\t\t\t} else if(this.assistNodeIsEnum) {", "+\t\t\t\tsearchFor = IJavaSearchConstants.ENUM;", "+\t\t\t} else if(this.assistNodeIsAnnotation) {", "+\t\t\t\tsearchFor = IJavaSearchConstants.ANNOTATION_TYPE;", "+\t\t\t}", "+\t\t\t\t\tsearchFor,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc88f17eee98b95ff008657a1990a3c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "074f76ed30b280be335de3f9fa68939f9241cbe0", "commitAfterChange": "451a4290b08482db72c12f90b576f09a8da8fda2", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\tif (token.length == 0) {", "+\t\tboolean isEmptyPrefix = token.length == 0;", "+\t\tif (isEmptyPrefix && !this.assistNodeIsAnnotation) {", "-\t\t\tif(!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\tif(!isEmptyPrefix && !this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\tint searchFor = IJavaSearchConstants.TYPE;", "+\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\tsearchFor = IJavaSearchConstants.CLASS;", "+\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t//TODO(david) update this code once bug 157177 will be fixed. ", "+\t\t\t\t\t//searchFor = IJavaSearchConstants.INTERFACE;", "+\t\t\t\t\tsearchFor = IJavaSearchConstants.TYPE;", "+\t\t\t\t} else if(this.assistNodeIsEnum) {", "+\t\t\t\t\tsearchFor = IJavaSearchConstants.ENUM;", "+\t\t\t\t} else if(this.assistNodeIsAnnotation) {", "+\t\t\t\t\tsearchFor = IJavaSearchConstants.ANNOTATION_TYPE;", "+\t\t\t\t}", "+\t\t\t\t\t\tsearchFor,", "-\t\t\tif(!this.requestor.isIgnored(CompletionProposal.PACKAGE_REF)) {", "+\t\t\tif(!isEmptyPrefix && !this.requestor.isIgnored(CompletionProposal.PACKAGE_REF)) {"]}], "num": 23651}