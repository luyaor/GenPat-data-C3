{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdc37357ff8d0ae8eaf05e7c22a2253b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e6bb9d4467f005923a5ede304b4151", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "78489a1112068ad791184216a4e6b3439ea59739", "commitAfterChange": "44562039ccc53dd5301ff720c35ac750589a8412", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "signatureAfterChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "-\t\t\t\t\t\t\tthis.declarationPackageName,", "-\t\t\t\t\t\t\tthis.declarationTypeName,", "-\t\t\t\t\t\t\tCharOperation.lastSegment(this.declarationTypeName, '.'),", "-\t\t\t\t\t\t\tthis.parameterPackageNames,", "-\t\t\t\t\t\t\tthis.parameterTypeNames);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\t\tCharOperation.lastSegment(this.declarationTypeName, '.'),", "+\t\t\t\t\t\t\t\tSignature.getParameterTypes(this.originalSignature == null ? this.signature : this.originalSignature));", "+\t\t\t\t\t} catch(IllegalArgumentException e) {", "+\t\t\t\t\t\t// protection for invalid signature", "+\t\t\t\t\t\tif(this.parameterTypeNames != null) {", "+\t\t\t\t\t\t\tthis.parameterNames =  this.createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.parameterNames = null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "-\t\t\t\t\t\t\tthis.declarationPackageName,", "-\t\t\t\t\t\t\tthis.declarationTypeName,", "-\t\t\t\t\t\t\tthis.name,", "-\t\t\t\t\t\t\tthis.parameterPackageNames,", "-\t\t\t\t\t\t\tthis.parameterTypeNames);", "-\t\t\t\t\t//this.parameterNames = this.findMethodParameterNames(", "-\t\t\t\t\t//\t\tthis.declarationSignature,", "-\t\t\t\t\t//\t\tthis.name,", "-\t\t\t\t\t//\t\tSignature.getParameterTypes(this.getSignature()));", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\t\tSignature.getParameterTypes(this.originalSignature == null ? this.signature : this.originalSignature));", "+\t\t\t\t\t} catch(IllegalArgumentException e) {", "+\t\t\t\t\t\t// protection for invalid signature", "+\t\t\t\t\t\tif(this.parameterTypeNames != null) {", "+\t\t\t\t\t\t\tthis.parameterNames =  this.createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.parameterNames = null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "-\t\t\t\t\t\t\tthis.declarationPackageName,", "-\t\t\t\t\t\t\tthis.declarationTypeName,", "-\t\t\t\t\t\t\tthis.name,", "-\t\t\t\t\t\t\tthis.parameterPackageNames,", "-\t\t\t\t\t\t\tthis.parameterTypeNames);", "-\t\t\t\t\t//char[][] parameterTypes = Signature.getParameterTypes(this.getSignature();", "-\t\t\t\t\t///this.parameterNames = this.findMethodParameterNames(", "-\t\t\t\t\t//\t\tthis.declarationSignature,", "-\t\t\t\t\t//\t\tthis.name,", "-\t\t\t\t\t//\t\tparameterTypes);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\t\tSignature.getParameterTypes(this.originalSignature == null ? this.signature : this.originalSignature));", "+\t\t\t\t\t} catch(IllegalArgumentException e) {", "+\t\t\t\t\t\t// protection for invalid signature", "+\t\t\t\t\t\tif(this.parameterTypeNames != null) {", "+\t\t\t\t\t\t\tthis.parameterNames =  this.createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.parameterNames = null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b5a1fb41e9cff511a4feddc499fef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionProposal.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "signatureAfterChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tthis.parameterNames =  createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t\tthis.parameterNames =  CompletionEngine.createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.parameterNames = null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ANONYMOUS_CLASS_CONSTRUCTOR_INVOCATION:", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.parameterNames = findConstructorParameterNames(", "+\t\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\t\tCharOperation.lastSegment(this.declarationTypeName, '.'),", "+\t\t\t\t\t\t\t\tSignature.getParameterTypes(this.originalSignature == null ? this.signature : this.originalSignature));", "+\t\t\t\t\t} catch(IllegalArgumentException e) {", "+\t\t\t\t\t\t// protection for invalid signature", "+\t\t\t\t\t\tif(this.parameterTypeNames != null) {", "+\t\t\t\t\t\t\tthis.parameterNames =  CompletionEngine.createDefaultParameterNames(this.parameterTypeNames.length);", "-\t\t\t\t\t\t\tthis.parameterNames =  createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t\tthis.parameterNames =  CompletionEngine.createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.parameterNames = null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase CONSTRUCTOR_INVOCATION:", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.parameterNames = findConstructorParameterNames(", "+\t\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\t\tSignature.getParameterTypes(this.originalSignature == null ? this.signature : this.originalSignature));", "+\t\t\t\t\t} catch(IllegalArgumentException e) {", "+\t\t\t\t\t\t// protection for invalid signature", "+\t\t\t\t\t\tif(this.parameterTypeNames != null) {", "+\t\t\t\t\t\t\tthis.parameterNames =  CompletionEngine.createDefaultParameterNames(this.parameterTypeNames.length);", "-\t\t\t\t\t\t\tthis.parameterNames =  createDefaultParameterNames(this.parameterTypeNames.length);", "+\t\t\t\t\t\t\tthis.parameterNames =  CompletionEngine.createDefaultParameterNames(this.parameterTypeNames.length);"]}], "num": 8466}