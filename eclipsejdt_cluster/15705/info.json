{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ed0356a0f32aa2dfac703a34a761506", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4efbb96c038ae4d28a149bf79aa51e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "0f5d04adf9d2fa735fce5517c85c8317372cf6c0", "commitAfterChange": "6cefacaaf91a5190221cb83191ea60dad1636887", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["-\t\t\t\t\tif(j != 0) tempName[j] = Character.toUpperCase(tempName[j]);", "+\t\t\t\t\tif(j != 0) tempName[j] = ScannerHelper.toUpperCase(tempName[j]);", "-\t\t\t\t\t\t\t&& Character.isLetterOrDigit(prefixes[k][prefixes[k].length - 1])) {", "-\t\t\t\t\t\t\ttempName[0] = Character.toUpperCase(tempName[0]);", "+\t\t\t\t\t\t\t&& ScannerHelper.isLetterOrDigit(prefixes[k][prefixes[k].length - 1])) {", "+\t\t\t\t\t\t\ttempName[0] = ScannerHelper.toUpperCase(tempName[0]);", "-\t\t\t\t\t\t\ttempName[0] = Character.toLowerCase(tempName[0]);", "+\t\t\t\t\t\t\ttempName[0] = ScannerHelper.toLowerCase(tempName[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c19dd30070756eacacceab8119bf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "commitAfterChange": "40efcac62f74a525f36207bf04469af4d555a161", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["+\t\t\tunprefixedName[0] = ScannerHelper.toUpperCase(unprefixedName[0]);", "-\t\t\t\tif(j == internalPrefix.length || CharOperation.prefixEquals(CharOperation.subarray(internalPrefix, j, -1), unprefixedName, false)) {", "+\t\t\t\tif(j == internalPrefix.length ||", "+\t\t\t\t\t\tCharOperation.prefixEquals(CharOperation.subarray(internalPrefix, j, -1), unprefixedName, j != 0 /*do not check case when there is no prefix*/)) {", "-\t\t\t\t\tif(j != 0) tempName[j] = ScannerHelper.toUpperCase(tempName[j]);", "+\t\t\t\t\tif(j == 0) tempName[0] = ScannerHelper.toLowerCase(tempName[0]);"]}], "num": 15705}