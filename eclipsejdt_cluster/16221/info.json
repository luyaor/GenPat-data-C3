{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db1cc2a5b8f9df0e12c12a4bf4e15d30", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460f781d6219dc47da9a00e3af1b6f46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/NewASTRewrite.java", "commitBeforeChange": "f5b5b884f036b9e618a06dde165cd3edcb93e386", "commitAfterChange": "c01c58991465c08e9a09aa1864f2ccc8c3d7c124", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic ListRewriter getListRewrite(ASTNode parent, ChildListPropertyDescriptor childProperty)", "signatureAfterChange": " \tpublic ListRewriter getListRewrite(ASTNode node, ChildListPropertyDescriptor property)", "diff": ["-\tpublic ListRewriter getListRewrite(ASTNode parent, ChildListPropertyDescriptor childProperty) {", "-\t\tvalidateIsInsideAST(parent);", "-\t\tvalidateIsListProperty(childProperty);", "+\t */", "+\tpublic ListRewriter getListRewrite(ASTNode node, ChildListPropertyDescriptor property) {", "+\t\tif (node == null || property == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tvalidateIsInsideAST(node);", "+\t\tvalidateIsListProperty(property);", "-\t\treturn new ListRewriter(this, parent, childProperty);", "+\t\treturn new ListRewriter(this, node, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adbfc22e6367ea9ef668a824c499d5ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/NewASTRewrite.java", "commitBeforeChange": "f5b5b884f036b9e618a06dde165cd3edcb93e386", "commitAfterChange": "c01c58991465c08e9a09aa1864f2ccc8c3d7c124", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic final void set(ASTNode parent, StructuralPropertyDescriptor childProperty, Object replacingNode, TextEditGroup editGroup)", "signatureAfterChange": " \tpublic final void set(ASTNode node, StructuralPropertyDescriptor property, Object value, TextEditGroup editGroup)", "diff": ["-\tpublic final void set(ASTNode parent, StructuralPropertyDescriptor childProperty, Object replacingNode, TextEditGroup editGroup) {", "-\t\tvalidateIsInsideAST(parent);", "-\t\tNodeRewriteEvent nodeEvent= fEventStore.getNodeEvent(parent, childProperty, true);", "-\t\tif (replacingNode == null) {", "-\t\t\tvalidatePropertyType(childProperty, replacingNode);", "+\tpublic final void set(ASTNode node, StructuralPropertyDescriptor property, Object value, TextEditGroup editGroup) {", "+\t\tif (node == null || property == null) {", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tnodeEvent.setNewValue(replacingNode);", "+\t\tvalidateIsInsideAST(node);", "+\t\tNodeRewriteEvent nodeEvent= fEventStore.getNodeEvent(node, property, true);", "+\t\tif (value == null) {", "+\t\t\tvalidatePropertyType(property, value);", "+\t\t}", "+\t\tnodeEvent.setNewValue(value);"]}], "num": 16221}