{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "487ad66b738aed294d6868a3e31ae8a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949a234b1c16e253880a2daf48cd2717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b7b27ff488733ad97566caef0cb2bdd99a3b7b63", "commitAfterChange": "d2bf5e6bc7d5c8ce5696375ed384baae09128c52", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 369, "signatureBeforeChange": " protected void parse()", "signatureAfterChange": " protected void parse()", "diff": ["-\treportNonExternalizedStringLiterals();", "+\tif (this.scanner.currentLine != null) {", "+\t\tfinal Set nonNLSStrings = this.scanner.nonNLSStrings;", "+\t\tif (nonNLSStrings != null) {", "+\t\t\tfinal int nonNLSStringsSize = nonNLSStrings.size();", "+\t\t\tStringLiteral[] literals = new StringLiteral[nonNLSStringsSize];", "+\t\t\tnonNLSStrings.toArray(literals);", "+\t\t\tArrays.sort(literals, new Comparator() {", "+\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\tStringLiteral literal1 = (StringLiteral) o1;", "+\t\t\t\t\tStringLiteral literal2 = (StringLiteral) o2;", "+\t\t\t\t\treturn literal1.sourceStart - literal2.sourceStart;", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\tfor (int i = 0; i < nonNLSStringsSize; i++) {", "+\t\t\t\tproblemReporter().nonExternalizedStringLiteral(literals[i]);", "+\t\t\t}", "+\t\t}", "+\t\tfinal Set unnecessaryNLSTags = this.scanner.unnecessaryNLSTags;", "+\t\tif (unnecessaryNLSTags != null) {", "+\t\t\tfinal int unnecessaryNLSTagsSize = unnecessaryNLSTags.size();", "+\t\t\tif (unnecessaryNLSTagsSize != 0) {", "+/*\t\t\t\tNLSTag[] tags = new NLSTag[unnecessaryNLSTagsSize];", "+\t\t\t\tunnecessaryNLSTags.toArray(tags);", "+\t\t\t\t// filter out all used nls tags", "+\t\t\t\tArrayList arrayList = new ArrayList();", "+\t\t\t\tfor (int i = 0; i < unnecessaryNLSTagsSize; i++) {", "+\t\t\t\t\tNLSTag tag = tags[i];", "+\t\t\t\t\tif ((tag.bits & NLSTag.UNUSED) != 0) {", "+\t\t\t\t\t\tarrayList.add(tag);", "+\t\t\t\t\t}", "+\t\t\t\t}*/", "+\t\t\t\tArrayList arrayList = new ArrayList();", "+\t\t\t\tarrayList.addAll(unnecessaryNLSTags);", "+\t\t\t\tCollections.sort(arrayList, new Comparator() {", "+\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\t\tNLSTag tag1 = (NLSTag) o1;", "+\t\t\t\t\t\tNLSTag tag2 = (NLSTag) o1;", "+\t\t\t\t\t\treturn tag1.start - tag2.start;", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t\tloop : for (int i = 0, max = arrayList.size(); i < max; i++) {", "+\t\t\t\t\tNLSTag tag = (NLSTag) arrayList.get(i); ", "+\t\t\t\t\tif (tag.bits != NLSTag.UNUSED) {", "+\t\t\t\t\t\tcontinue loop;", "+\t\t\t\t\t}", "+\t\t\t\t\tproblemReporter().unnecessaryNLSTags(tag.start, tag.end);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tthis.scanner.nonNLSStrings = null;", "+\t\tthis.scanner.unnecessaryNLSTags = null;", "+\t\tthis.scanner.currentLine = null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970221349f4a3f5af6b60bed847d5442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "commitAfterChange": "15b09e3657f237aa7526b08315f9749226cbc20e", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " protected void parse()", "signatureAfterChange": " protected void parse()", "diff": ["-\tif (this.scanner.currentLine != null) {", "-\t\tfinal Set nonNLSStrings = this.scanner.nonNLSStrings;", "-\t\tif (nonNLSStrings != null) {", "-\t\t\tfinal int nonNLSStringsSize = nonNLSStrings.size();", "-\t\t\tStringLiteral[] literals = new StringLiteral[nonNLSStringsSize];", "-\t\t\tnonNLSStrings.toArray(literals);", "-\t\t\tArrays.sort(literals, new Comparator() {", "-\t\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\t\tStringLiteral literal1 = (StringLiteral) o1;", "-\t\t\t\t\tStringLiteral literal2 = (StringLiteral) o2;", "-\t\t\t\t\treturn literal1.sourceStart - literal2.sourceStart;", "-\t\t\t\t}", "-\t\t\t});", "-\t\t\tfor (int i = 0; i < nonNLSStringsSize; i++) {", "-\t\t\t\tproblemReporter().nonExternalizedStringLiteral(literals[i]);", "-\t\t\t}", "-\t\t}", "-\t\tfinal Set unnecessaryNLSTags = this.scanner.unnecessaryNLSTags;", "-\t\tif (unnecessaryNLSTags != null) {", "-\t\t\tfinal int unnecessaryNLSTagsSize = unnecessaryNLSTags.size();", "-\t\t\tif (unnecessaryNLSTagsSize != 0) {", "-/*\t\t\t\tNLSTag[] tags = new NLSTag[unnecessaryNLSTagsSize];", "-\t\t\t\tunnecessaryNLSTags.toArray(tags);", "-\t\t\t\t// filter out all used nls tags", "-\t\t\t\tArrayList arrayList = new ArrayList();", "-\t\t\t\tfor (int i = 0; i < unnecessaryNLSTagsSize; i++) {", "-\t\t\t\t\tNLSTag tag = tags[i];", "-\t\t\t\t\tif ((tag.bits & NLSTag.UNUSED) != 0) {", "-\t\t\t\t\t\tarrayList.add(tag);", "-\t\t\t\t\t}", "-\t\t\t\t}*/", "-\t\t\t\tArrayList arrayList = new ArrayList();", "-\t\t\t\tarrayList.addAll(unnecessaryNLSTags);", "-\t\t\t\tCollections.sort(arrayList, new Comparator() {", "-\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\t\t\tNLSTag tag1 = (NLSTag) o1;", "-\t\t\t\t\t\tNLSTag tag2 = (NLSTag) o1;", "-\t\t\t\t\t\treturn tag1.start - tag2.start;", "-\t\t\t\t\t}", "-\t\t\t\t});", "-\t\t\t\tloop : for (int i = 0, max = arrayList.size(); i < max; i++) {", "-\t\t\t\t\tNLSTag tag = (NLSTag) arrayList.get(i); ", "-\t\t\t\t\tif (tag.bits != NLSTag.UNUSED) {", "-\t\t\t\t\t\tcontinue loop;", "-\t\t\t\t\t}", "-\t\t\t\t\tproblemReporter().unnecessaryNLSTags(tag.start, tag.end);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tthis.scanner.nonNLSStrings = null;", "-\t\tthis.scanner.unnecessaryNLSTags = null;", "-\t\tthis.scanner.currentLine = null;", "+\t// record all nls tags in the corresponding compilation unit", "+\tfinal NLSTag[] tags = this.scanner.getNLSTags();", "+\tif (tags != null) {", "+\t\tthis.compilationUnit.nlsTags = tags;", "+\tthis.scanner.checkNonExternalizedStringLiterals = false;"]}], "num": 16517}