{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b98b5c870a38e667cc35940c1980c601", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8369dd3ddf10270c60e9391c2b0e658d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "7eb4fa5c3b681a58f496caa332d673ad4793228a", "commitAfterChange": "4a7de5e00f52111fb95f335ff67c00d5cc7f7cef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tITypeBinding resolveWellKnownType(String name)", "signatureAfterChange": "\r \tITypeBinding resolveWellKnownType(String name)", "diff": ["-\t\treturn super.resolveWellKnownType(name);\r", "+\t\tif ((\"boolean\".equals(name))\r", "+\t\t\t|| (\"char\".equals(name))\r", "+\t\t\t|| (\"byte\".equals(name))\r", "+\t\t\t|| (\"short\".equals(name))\r", "+\t\t\t|| (\"int\".equals(name))\r", "+\t\t\t|| (\"long\".equals(name))\r", "+\t\t\t|| (\"float\".equals(name))\r", "+\t\t\t|| (\"double\".equals(name))\r", "+\t\t\t|| (\"void\".equals(name))) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getBaseType(name.toCharArray()));\r", "+\t\t} else if (\"java.lang.Object\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getJavaLangObject());\r", "+\t\t} else if (\"java.lang.String\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getJavaLangString());\r", "+\t\t} else if (\"java.lang.StringBuffer\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getType(JAVA_LANG_STRINGBUFFER));\r", "+\t\t} else if (\"java.lang.Throwable\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getJavaLangThrowable());\r", "+\t\t} else if (\"java.lang.Exception\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getType(JAVA_LANG_EXCEPTION));\r", "+\t\t} else if (\"java.lang.RuntimeException\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getJavaLangRuntimeException());\r", "+\t\t} else if (\"java.lang.Error\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getJavaLangError());\r", "+\t\t} else if (\"java.lang.Class\".equals(name)) {\r", "+\t\t\treturn this.getTypeBinding(this.scope.getJavaLangClass());\r", "+\t    } else {\r", "+\t\t\treturn super.resolveWellKnownType(name);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d036f169521e0596e32ca6f5186fcd1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "542ce5451500fe1306b92aaa9a7c04d8d83f7f3f", "commitAfterChange": "9cbf7e62288f060b33b2dc1c1d579dae84747012", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t\t\t\t \t\t\t\t\tpublic CategorizedProblem createProblem( \t\t\t\t\t\tchar[] originatingFileName, \t\t\t\t\t\tint problemId, \t\t\t\t\t\tString[] problemArguments, \t\t\t\t\t\tString[] messageArguments, \t\t\t\t\t\tint severity, \t\t\t\t\t\tint start, \t\t\t\t\t\tint end, \t\t\t\t\t\tint lineNumber, \t\t\t\t\t\tint columnNumber)", "signatureAfterChange": "  \t\tpublic CategorizedProblem createProblem( \t\t\tchar[] originatingFileName, \t\t\tint problemId, \t\t\tString[] problemArguments, \t\t\tString[] messageArguments, \t\t\tint severity, \t\t\tint start, \t\t\tint end, \t\t\tint lineNumber, \t\t\tint columnNumber)", "diff": ["+", "+\t\tpublic CategorizedProblem createProblem(", "+\t\t\tchar[] originatingFileName,", "+\t\t\tint problemId,", "+\t\t\tString[] problemArguments,", "+\t\t\tString[] messageArguments,", "+\t\t\tint severity,", "+\t\t\tint start,", "+\t\t\tint end,", "+\t\t\tint lineNumber,", "+\t\t\tint columnNumber) {", "+\t\t\t", "+\t\t\tCategorizedProblem pb = super.createProblem(", "+\t\t\t\toriginatingFileName,", "+\t\t\t\tproblemId,", "+\t\t\t\tproblemArguments,", "+\t\t\t\tmessageArguments,", "+\t\t\t\tseverity,", "+\t\t\t\tstart,", "+\t\t\t\tend,", "+\t\t\t\tlineNumber,", "+\t\t\t\tcolumnNumber);", "+\t\t\tint id = pb.getID();", "+\t\t\tif (CompletionEngine.this.actualCompletionPosition > start", "+\t\t\t\t&& this.lastErrorStart < start", "+\t\t\t\t&& pb.isError()", "+\t\t\t\t&& (id & IProblem.Syntax) == 0", "+\t\t\t\t&& (CompletionEngine.this.fileName == null || CharOperation.equals(CompletionEngine.this.fileName, originatingFileName))) {", "+\t\t\t\t\t", "+\t\t\t\tCompletionEngine.this.problem = pb;", "+\t\t\t\tthis.lastErrorStart = start;", "+\t\t\t}", "+\t\t\tif (this.checkProblems && !this.hasProblems) {", "+\t\t\t\tif (id == IProblem.UsingDeprecatedType) {", "+\t\t\t\t\tthis.hasProblems =", "+\t\t\t\t\t\tCompletionEngine.this.options.checkDeprecation;", "+\t\t\t\t} else if (id == IProblem.NotVisibleType) {", "+\t\t\t\t\tthis.hasProblems =", "+\t\t\t\t\t\tCompletionEngine.this.options.checkVisibility;", "+\t\t\t\t} else if (id == IProblem.ForbiddenReference) {", "+\t\t\t\t\tthis.hasProblems =", "+\t\t\t\t\t\tCompletionEngine.this.options.checkForbiddenReference;", "+\t\t\t\t} else if (id == IProblem.DiscouragedReference) {", "+\t\t\t\t\tthis.hasProblems =", "+\t\t\t\t\t\tCompletionEngine.this.options.checkDiscouragedReference;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.hasProblems = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\treturn pb;", "+\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\tpublic CategorizedProblem createProblem(", "-\t\t\t\t\t\tchar[] originatingFileName,", "-\t\t\t\t\t\tint problemId,", "-\t\t\t\t\t\tString[] problemArguments,", "-\t\t\t\t\t\tString[] messageArguments,", "-\t\t\t\t\t\tint severity,", "-\t\t\t\t\t\tint start,", "-\t\t\t\t\t\tint end,", "-\t\t\t\t\t\tint lineNumber,", "-\t\t\t\t\t\tint columnNumber) {", "-\t\t\t\t\t\t", "-\t\t\t\t\t\tCategorizedProblem pb = super.createProblem(", "-\t\t\t\t\t\t\toriginatingFileName,", "-\t\t\t\t\t\t\tproblemId,", "-\t\t\t\t\t\t\tproblemArguments,", "-\t\t\t\t\t\t\tmessageArguments,", "-\t\t\t\t\t\t\tseverity,", "-\t\t\t\t\t\t\tstart,", "-\t\t\t\t\t\t\tend,", "-\t\t\t\t\t\t\tlineNumber,", "-\t\t\t\t\t\t\tcolumnNumber);", "-\t\t\t\t\t\tif(CompletionEngine.this.actualCompletionPosition > start", "-\t\t\t\t\t\t\t&& this.lastErrorStart < start", "-\t\t\t\t\t\t\t&& pb.isError()", "-\t\t\t\t\t\t\t&& (pb.getID() & IProblem.Syntax) == 0", "-\t\t\t\t\t\t\t&& (CompletionEngine.this.fileName == null || CharOperation.equals(CompletionEngine.this.fileName, originatingFileName))) {", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tCompletionEngine.this.problem = pb;", "-\t\t\t\t\t\t\tthis.lastErrorStart = start;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\t", "-\t\t\t\t\t\treturn pb;", "-\t\t\t\t\t}"]}], "num": 27234}