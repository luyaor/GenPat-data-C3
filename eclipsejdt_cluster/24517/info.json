{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55c537299a3464e2b5f2b96d41007d78", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423855d3107a433ae10b8b5b0c70cc85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/helloworld/HelloWorldWildcardAnnotationProcessorFactory.java", "commitBeforeChange": "13c7fe094d778e029a6ff3885a33b085ac95c7a1", "commitAfterChange": "3d23167de0cc8549a88a05b8aab19471006b9190", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t \tpublic Collection<String> supportedAnnotationTypes()", "signatureAfterChange": "  \t \tpublic Collection<String> supportedAnnotationTypes()", "diff": ["-\t\treturn Collections.singletonList(\"org.eclipse.jdt.apt.tests.annotations.helloworld.*\"); //$NON-NLS-1$", "+\t\t", "+\t\t// We need to swap behavior because always claiming \"*\" will cause", "+\t\t// other processors normally called after us to be prevented from running,", "+\t\t// as we have claimed everything", "+\t\tif (CLAIM_ALL_ANNOTATIONS) {", "+\t\t\treturn Collections.singletonList(\"*\");", "+\t\t}", "+\t\telse {", "+\t\t\treturn Collections.singletonList(\"org.eclipse.jdt.apt.tests.annotations.helloworld.*\"); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7190d5d79d0477c52e9d46e0b9e984c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "d92419d7d90bedd902391c7e83696cf6304867ae", "commitAfterChange": "5a71e292125f730be1fbb909dc68614ec3d003c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t// if more than 10 annotations, diet parse as this is faster", "-\t\t\treturn new Parser(this.problemReporter, true).dietParse(this.cu, compilationResult);", "+\t\t\t// If more than 10 annotations, diet parse as this is faster, but not if", "+\t\t\t// the client wants local and anonymous types to be converted (https://bugs.eclipse.org/bugs/show_bug.cgi?id=254738) ", "+\t\t\tif ((this.flags & LOCAL_TYPE) == 0) {", "+\t\t\t\treturn new Parser(this.problemReporter, true).dietParse(this.cu, compilationResult);", "+\t\t\t}"]}], "num": 24517}