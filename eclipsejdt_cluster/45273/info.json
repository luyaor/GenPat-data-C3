{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55149870d5b2deb614652b7135d9e13d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149276295d4d81dddf1291bdb9780c5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 375, "methodNumberAfterChange": 374, "signatureBeforeChange": " public void unusedDeclaredThrownException(ReferenceBinding exceptionType, AbstractMethodDeclaration method, ASTNode location)", "signatureAfterChange": " public void unusedDeclaredThrownException(ReferenceBinding exceptionType, AbstractMethodDeclaration method, ASTNode location)", "diff": ["-\tif (method.isConstructor()) {", "+\tboolean isConstructor = method.isConstructor();", "+\tint severity = computeSeverity(isConstructor ? IProblem.UnusedConstructorDeclaredThrownException : IProblem.UnusedMethodDeclaredThrownException);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\tif (isConstructor) {", "+\t\t\tseverity,", "+\t\t\tseverity,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b449661d810b5062c551722a826b4f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "29fd5c339634157c3a46bf2c80db8e6f9d9b60e5", "commitAfterChange": "d3bee7a6e680032a04efee0140f4fd7a408a0f76", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "signatureAfterChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "diff": ["-\t", "-\tif (hiddenVariable instanceof LocalVariableBinding) {", "+\tboolean isLocal = hiddenVariable instanceof LocalVariableBinding;", "+\tint severity = computeSeverity(isLocal ? IProblem.FieldHidingLocalVariable : IProblem.FieldHidingField);", "+\tif (severity == ProblemSeverities.Ignore) return;", "+\tif (isLocal) {", "+\t\t\tseverity,", "+\t\t\tseverity,"]}], "num": 45273}