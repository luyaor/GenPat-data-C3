{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eec6ad0d0c1a03aba7b4a3e85069e125", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ba23ca2e784390273f6d0d376ab85b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "165d2ee0a4a374ec3dbb0f3df780db24664ac692", "commitAfterChange": "146dc3b7afcca724ac2ba30b2cbb382c047a5a77", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createArgumentReference(char[] name, int dim, boolean isVarargs, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "diff": ["-\tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException {", "+\tprotected Object createArgumentReference(char[] name, int dim, boolean isVarargs, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException {", "-\t\t\tif (dim > 0) argEnd = (int) dimPositions[dim-1];", "+\t\t\tif (dim > 0) {", "+\t\t\t\targEnd = (int) dimPositions[dim-1];", "+\t\t\t\tif (isVarargs) {", "+\t\t\t\t\targTypeRef.bits |= ASTNode.IsVarArgs; // set isVarArgs", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a29aaf6f66ac68cbe3ae80b5457fecb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "8264e11928da121957d70dadd3c6bf92a042c6d3", "commitAfterChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public static char[][][] internQualifiedNames(char[][][] qualifiedNames)", "signatureAfterChange": "  public static char[][][] internQualifiedNames(char[][][] qualifiedNames, boolean keepWellKnown)", "diff": ["+", "+public static char[][][] internQualifiedNames(char[][][] qualifiedNames, boolean keepWellKnown) {", "-\t\t\tif (CharOperation.equals(qualifiedName, wellKnownName))", "+\t\t\tif (CharOperation.equals(qualifiedName, wellKnownName)) {", "+\t\t\t\tif (keepWellKnown) {", "+\t\t\t\t\tkeepers[index++] = wellKnownName;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 30369}