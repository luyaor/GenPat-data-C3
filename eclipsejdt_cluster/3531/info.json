{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e23aa4dae5e62d64348750163ee10bf4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ebd29e03217e64533252226fb942c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "86294174b1b6db50df1742d660a3c76831e25b69", "commitAfterChange": "9c7ce2f1348ed2bbb2f4f52cb3a3565e921e8618", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic static void setClasspathContainer(IPath containerPath, final IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(IPath containerPath, final IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\taffectedProjects[i] = null; // filter out this project - does not reference the container path, or isnt't Java project", "+\t\t\t\taffectedProjects[i] = null; // filter out this project - does not reference the container path, or isnt't yet Java project", "+\t\t\t\tJavaModelManager.containerPut(affectedProject, containerPath, newContainer);", "+\t\t\t\tcontinue;", "-\t\t\t", "-\t\t\t\t\t\t\tSystem.out.println(\"CPContainer INIT - reentering access to project container: [\"+affectedProject.getElementName()+\"] \" + containerPath + \" during its initialization, will see previous value: \"+ previousContainer); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\t\tSystem.out.println(\"CPContainer INIT - reentering access to project container: [\"+affectedProject.getElementName()+\"] \" + containerPath + \" during its initialization, will see previous value: \"+ previousContainer.getDescription()); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t} else {", "+\t\t\t\t\toldContainer = null;", "-\t\t\tif (found){", "-\t\t\t\tremaining++; ", "-\t\t\t\toldResolvedPaths[i] = affectedProject.getResolvedClasspath(true);", "-\t\t\t}", "+\t\t\tremaining++; ", "+\t\t\toldResolvedPaths[i] = affectedProject.getResolvedClasspath(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe7fa037f6fa6b08c4543b20a91ce78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "71cf21d1f82b6e6d4f06e9ca9787ac93cc80bb37", "commitAfterChange": "c4dc5e9f7180282833c9d2737618358db5400234", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r protected void privateRemoveEntry(LRUCacheEntry entry, boolean shuffle, boolean external)", "signatureAfterChange": "\r protected void privateRemoveEntry(LRUCacheEntry entry, boolean shuffle, boolean external)", "diff": ["-\t\t\tif (fEntryTable.get(entry) == null) return;\r", "+\t\t\tif (fEntryTable.get(entry) == null){\r", "+\t\t\t\treturn;\r", "+\t\t\t} else {\r", "+\t\t\t\t// basic removal\r", "+\t\t\t\tfEntryTable.remove(entry._fKey);\t\t\t\r", "+\t\t\t\tfCurrentSpace -= entry._fSpace;\r", "+\t\t\t\tprivateNotifyDeletionFromCache(entry);\r", "+\t\t\t}\r"]}], "num": 3531}