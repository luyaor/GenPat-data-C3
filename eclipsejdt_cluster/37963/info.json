{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "218001c1a9ad6a3b339374468b0f3598", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "680a5538a1c2e6ce74a2da0e359e6507", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/SourcePositionImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     public File file()", "signatureAfterChange": "     public File file()", "diff": ["-    public int column(){ return 0; /* TODO: fix me */ }\r", "-    public File file(){\r", "-        IResource resource = _decl.getResource();\r", "-        if( resource == null ) return null;\r", "-        final IPath absPath = resource.getRawLocation();\r", "-        if(absPath == null) return null;\r", "-        return new File( absPath.toOSString() );\r", "-    }\r", "+    public int column(){ return 0; /* TODO: fix me */ }", "+    public File file(){", "+        IResource resource = getResource();", "+        if( resource == null ) return null;", "+        final IPath absPath = resource.getRawLocation();", "+        if(absPath == null) return null;", "+        return new File( absPath.toOSString() );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777d56caadef992a59f72ab54ab636e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r     public Object getReflectionValue(String memberName, Method method)\r         throws Throwable", "signatureAfterChange": "      public Object getReflectionValue(String memberName, Method method)         throws Throwable", "diff": ["-\r", "-    public Object getReflectionValue(String memberName, Method method)\r", "-        throws Throwable\r", "-    {\r", "-        if(memberName == null || memberName.length() == 0 ) return null;\r", "-        final Class targetType = method.getReturnType();\r", "-        final Expression value = getValue(memberName);\r", "-\r", "-        return getReflectionValue(value, targetType);\r", "-    }\r", "+", "+    public Object getReflectionValue(String memberName, Method method)", "+        throws Throwable", "+    {", "+        if(memberName == null || memberName.length() == 0 ) return null;", "+        final Class targetType = method.getReturnType();", "+        final Object value = getValue(memberName);", "+", "+        return getReflectionValue(value, targetType);", "+    }"]}], "num": 37963}