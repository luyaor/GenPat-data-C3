{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0308e66018ca94a102e0190c8dbca1a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4d2e86ddcda5ed7510aaa91944eb07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "82e3492687fb385a8a9ba6c56e1f6d491dc8d79a", "commitAfterChange": "0b30f6ac807cc8aa14a5978d1dd305dd71baedda", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\tprotected void verifyBindings(TagElement tagElement) {", "+\tprivate void verifyBindings(TagElement tagElement) {", "-\t\t\t\t\tverifyName(name.getQualifier());", "+\t\t\t\t\tverifyNameBindings(name.getQualifier());", "-\t\t\t\t\t\tverifyName(memberRef.getQualifier());", "+\t\t\t\t\t\tverifyNameBindings(memberRef.getQualifier());", "-\t\t\t\t\t\tverifyName(methodRef.getQualifier());", "-\t\t\t\t\t\tverifyParameters(methodRef.parameters());", "+\t\t\t\t\t\tverifyNameBindings(methodRef.getQualifier());", "+\t\t\t\t\t\tIterator parameters = methodRef.parameters().listIterator();", "+\t\t\t\t\t\twhile (parameters.hasNext()) {", "+\t\t\t\t\t\t\tMethodRefParameter param = (MethodRefParameter) parameters.next();", "+\t\t\t\t\t\t\tassertNotNull(param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tif (param.getType().isSimpleType()) {", "+\t\t\t\t\t\t\t\tverifyNameBindings(((SimpleType)param.getType()).getName());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t//\tDo not verify parameter name as no binding is expected for them", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826b0cfb63ef1253718c33c6a2d77176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "355cf1c77842b6ad5bc5c80fd104a83d9e181efd", "commitAfterChange": "2940f32de111b657352473b607697edfccd19c02", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void removeFromSecondaryTypesCache(IFile file)", "signatureAfterChange": " \tpublic void removeFromSecondaryTypesCache(IFile file)", "diff": ["-\t\t\t\t\tHashMap types = (HashMap) projectInfo.secondaryTypes.get(packName);", "-\t\t\t\t\tIterator names = types.keySet().iterator();", "-\t\t\t\t\twhile (names.hasNext()) {", "-\t\t\t\t\t\tString typeName = (String) names.next();", "-\t\t\t\t\t\tIType type = (IType) types.get(typeName);", "-\t\t\t\t\t\tif (file.equals(type.getResource())) {", "-\t\t\t\t\t\t\ttypes.remove(typeName);", "-\t\t\t\t\t\t\tif (types.size() == 0) {", "-\t\t\t\t\t\t\t\tprojectInfo.secondaryTypes.remove(packName);", "+\t\t\t\t\tObject object = projectInfo.secondaryTypes.get(packName);", "+\t\t\t\t\tif (object instanceof HashMap) {", "+\t\t\t\t\t\tHashMap types = (HashMap) object;", "+\t\t\t\t\t\tIterator names = types.keySet().iterator();", "+\t\t\t\t\t\twhile (names.hasNext()) {", "+\t\t\t\t\t\t\tString typeName = (String) names.next();", "+\t\t\t\t\t\t\tIType type = (IType) types.get(typeName);", "+\t\t\t\t\t\t\tif (file.equals(type.getResource())) {", "+\t\t\t\t\t\t\t\ttypes.remove(typeName);", "+\t\t\t\t\t\t\t\tif (types.size() == 0) {", "+\t\t\t\t\t\t\t\t\tprojectInfo.secondaryTypes.remove(packName);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t\treturn;"]}], "num": 36253}