{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbaec0723584ef9afa10541d003ce0ba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3663928234d82668aa36f556b8e00382", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "55ff17ec6653a434427e713aef1451bdb8c9f671", "commitAfterChange": "d20637ea2fd7b4c54c0555e8e8ade3dcbe515e38", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void deleteFile(File file)", "signatureAfterChange": " public void deleteFile(File file)", "diff": ["-\tif (!file.delete()) {", "-\t\tSystem.out.println(\"WARNING: deleteFile(File) could not delete: \" + file.getPath());", "-\t}", "-}", "+\tboolean success = file.delete();", "+\twhile (!success && --retryCount >= 0) {", "+\t\tsuccess = file.delete();", "+\tif (success) return;", "+\tSystem.err.println(\"Failed to delete \" + file.getPath());", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd632cdec6bff0d710b28e4c4eca73b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "5c0f68ddd1527675afe0c57b85dbce4648406e27", "commitAfterChange": "6eb00f6ee457a8f73a0eac0bfee00e20c1d881ff", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tprivate void rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": " \t \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-\tprivate void rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos) {", "+\tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos) {", "-\t\t\tdoVisit(node, property, pos);", "-\t\t\treturn;", "+\t\t\treturn doVisit(node, property, pos);", "-", "-\t\tint endPos= rewriteNodeList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tif (isAllOfKind(children, RewriteEvent.INSERTED)) {", "-\t\t\tdoTextInsert(endPos, \" \", getEditGroup(children[children.length - 1])); //$NON-NLS-1$", "-\t\t} else if (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\tboolean isAllInsert= isAllOfKind(children, RewriteEvent.INSERTED);", "+\t\tboolean isAllRemove= isAllOfKind(children, RewriteEvent.REMOVED);", "+\t\tif (isAllInsert || isAllRemove) {", "+\t\t\t// update pos", "-\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "-\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\tpos= getScanner().getNextStartOffset(pos, false);", "+\t\tint endPos= rewriteNodeList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\t\tif (isAllInsert) {", "+\t\t\tdoTextInsert(endPos, \" \", getEditGroup(children[children.length - 1])); //$NON-NLS-1$", "+\t\t} else if (isAllRemove) {", "+\t\t\ttry {", "+\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "+\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\treturn nextPos;", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\thandleException(e);", "+\t\t\t}", "+\t\t}", "+\t\treturn endPos;"]}], "num": 23095}