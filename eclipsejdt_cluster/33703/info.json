{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a849866a3e3f914f1aa88ec12b1fe95", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43750dfba0b9788fd1c5c31e7d4c0e8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "4b34ac952495406305286be091754126c6d25593", "commitAfterChange": "a3337f44ed6348a5f4f65ab1b2584cb8125066c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Alignment getAlignment(String targetName)", "signatureAfterChange": "  \tpublic int wrappedIndex()", "diff": ["-\tpublic Alignment getAlignment(String targetName) {", "-\t\tif (targetName.equals(this.name)) return this;", "-\t\tif (this.enclosing == null) return null;", "-", "-\t\treturn this.enclosing.getAlignment(targetName);", "+\tpublic int wrappedIndex() {", "+\t\tfor (int i = 0, max = this.fragmentCount; i < max; i++) {", "+\t\t\tif (this.fragmentBreaks[i] == BREAK) {", "+\t\t\t\treturn i;", "+\t\t\t}", "+\t\t}", "+\t\treturn -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68828525332c00cd2fd3301b0a596597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public synchronized void removeIndexFamily(IPath path)", "signatureAfterChange": " public synchronized void removeIndexFamily(IPath path)", "diff": ["-\tIterator iterator = this.indexes.keySet().iterator();", "-\twhile (iterator.hasNext()) {", "-\t\tIPath indexPath = (IPath) iterator.next();", "-\t\tif (path.isPrefixOf(indexPath)) {", "+\tObject[] containerPaths = this.indexLocations.keyTable;", "+\tfor (int i = 0, length = containerPaths.length; i < length; i++) {", "+\t\tIPath containerPath = (IPath) containerPaths[i];", "+\t\tif (containerPath == null) continue;", "+\t\tif (path.isPrefixOf(containerPath)) {", "-\t\t\ttoRemove.add(indexPath);", "+\t\t\ttoRemove.add(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f55bae4e852456c1506c41ce4335a643", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "6f8a1f468102cc95fa52d9b7fdbd93df1eea7638", "commitAfterChange": "e4d4ff5013f9df9fd57cdef7bafc039c1cd3f062", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void createPendingFolders(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tpublic void createPendingFolders(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tIterator iterator = this.pendingFolders.iterator();", "-\t\twhile (iterator.hasNext()) {", "-\t\t\tObject folderPath = iterator.next();", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=368152", "+\t\t// To avoid race condition (from addFolder and removeFolder, load the map elements into an array and clear the map immediately.", "+\t\t// The createLinkFolder being in the synchronized block can cause a deadlock and hence keep it out of the synchronized block. ", "+\t\tObject[] arrayOfFolders = null;", "+\t\tsynchronized (this.pendingFolders) {", "+\t\t\tarrayOfFolders = this.pendingFolders.toArray();", "+\t\t\tthis.pendingFolders.clear();", "+\t\t}", "+", "+\t\tfor (int i=0; i < arrayOfFolders.length; i++) {", "-\t\t\t\tcreateLinkFolder((IPath) folderPath, false, externalFoldersProject, monitor);", "+\t\t\t\tcreateLinkFolder((IPath) arrayOfFolders[i], false, externalFoldersProject, monitor);", "-\t\t\t\tUtil.log(e, \"Error while creating a link for external folder :\" + folderPath); //$NON-NLS-1$", "+\t\t\t\tUtil.log(e, \"Error while creating a link for external folder :\" + arrayOfFolders[i]); //$NON-NLS-1$", "-\t\tthis.pendingFolders.clear();"]}], "num": 33703}