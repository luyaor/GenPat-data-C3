{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e429fc3d2959a8fe7be8c0a55a58c61", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2176c896b67d5b5d8cf41ba03a42ace1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "9d422f535f1cf1a8b8f8401815db736b124961e4", "commitAfterChange": "13ebf03f7d31f9fda8d23c3fe70da0f01fcad14a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " public synchronized IIndex recreateIndex(IPath path)", "signatureAfterChange": " public synchronized IIndex recreateIndex(IPath path)", "diff": ["-\tIIndex index = (IIndex) indexes.get(path);", "-\tif (index != null) {", "-\t\ttry {", "-\t\t\t// Path is already canonical", "-\t\t\tString indexPath = computeIndexName(path);", "-\t\t\tReadWriteMonitor monitor = (ReadWriteMonitor)monitors.remove(index);", "-\t\t\tindex = new Index(indexPath, \"Index for \" + path.toOSString(), true /*reuse index file*/); //$NON-NLS-1$", "-\t\t\tindex.empty();", "-\t\t\tindexes.put(path, index);", "-\t\t\tmonitors.put(index, monitor);", "-\t\t} catch (IOException e) {", "-\t\t\t// The file could not be created. Possible reason: the project has been deleted.", "-\t\t\treturn null;", "-\t\t}", "+\t// only called to over write an existing cached index...", "+\ttry {", "+\t\tIIndex index = (IIndex) this.indexes.get(path);", "+\t\tReadWriteMonitor monitor = (ReadWriteMonitor) this.monitors.remove(index);", "+", "+\t\t// Path is already canonical", "+\t\tString indexPath = computeIndexName(path);", "+\t\tindex = new Index(indexPath, \"Index for \" + path.toOSString(), true /*reuse index file*/); //$NON-NLS-1$", "+\t\tindex.empty();", "+\t\tindexes.put(path, index);", "+\t\tmonitors.put(index, monitor);", "+\t\treturn index;", "+\t} catch (IOException e) {", "+\t\t// The file could not be created. Possible reason: the project has been deleted.", "+\t\treturn null;", "-\t//System.out.println(\" index name: \" + path.toOSString() + \" <----> \" + index.getIndexFile().getName());\t", "-\treturn index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76ee32a923a9ca7640f01ed6b23ea63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "dfd8d4647bad1465cda928961972e854fc071249", "commitAfterChange": "31c3266cfb06f3143b63cd3aca05524ef5cd1755", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public IIndex getIndex(IPath path)", "signatureAfterChange": "\r public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-public IIndex getIndex(IPath path) {\r", "-\treturn this.getIndex(path, true);\r", "-}\r", "+public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing) {\r", "+\t\t\tString indexPath = null;\r", "+\t\t\t// index isn't cached, consider reusing an existing index file\r", "+\t\t\tif (reuseExistingFile){\r", "+\t\t\t\tindexPath = computeIndexName(path);\r", "+\t\t\t\tFile indexFile = new File(indexPath);\r", "+\t\t\t\tif (indexFile.exists()){ // check before creating index so as to avoid creating a new empty index if file is missing\r", "+\t\t\t\t\tindex = new Index(indexPath, \"Index for \" + path.toOSString(), true /*reuse index file*/); //$NON-NLS-1$\r", "+\t\t\t\t\tif (index != null){\r", "+\t\t\t\t\t\tindexes.put(path, index);\r", "+\t\t\t\t\t\tmonitors.put(index, new ReadWriteMonitor());\r", "+\t\t\t\t\t\treturn index;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t} \r", "+\t\t\t// index wasn't found on disk, consider creating an empty new one\r", "+\t\t\tif (createIfMissing){\r", "+\t\t\t\tif (indexPath == null) indexPath = computeIndexName(path);\r", "+\t\t\t\tindex = new Index(indexPath, \"Index for \" + path.toOSString(), false /*do not reuse index file*/); //$NON-NLS-1$\r", "+\t\t\t\tif (index != null){\r", "+\t\t\t\t\tindexes.put(path, index);\r", "+\t\t\t\t\tmonitors.put(index, new ReadWriteMonitor());\r", "+\t\t\t\t\treturn index;\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}], "num": 27444}