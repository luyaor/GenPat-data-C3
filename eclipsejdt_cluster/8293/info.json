{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d526ca92d60ede2ce4d90507827f0e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb60ffaca87e67f5aca4c7aad79c466", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "b267dc5fd07e62c802290616c0cbe7abef453463", "commitAfterChange": "aa0984d79780a8b5715722d33a45cdb0c134a6fb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["+\t\t\tFieldBinding codegenField = (FieldBinding) this.codegenBinding;", "-\t\t\t\t&& (fieldBinding.isPrivate() // private access", "-\t\t\t\t\t|| (fieldBinding.isProtected() // implicit protected access", "-\t\t\t\t\t\t\t&& fieldBinding.declaringClass.getPackage() != currentScope.enclosingSourceType().getPackage()))) {", "+\t\t\t\t&& (codegenField.isPrivate() // private access", "+\t\t\t\t\t|| (codegenField.isProtected() // implicit protected access", "+\t\t\t\t\t\t\t&& codegenField.declaringClass.getPackage() != currentScope.enclosingSourceType().getPackage()))) {", "-\t\t\t\t\t\tenclosingTypeAt((bits & DepthMASK) >> DepthSHIFT)).addSyntheticMethod((FieldBinding) this.codegenBinding, isReadAccess);", "-\t\t\t\tcurrentScope.problemReporter().needToEmulateFieldAccess((FieldBinding)this.codegenBinding, this, isReadAccess);", "+\t\t\t\t\t\tenclosingTypeAt((bits & DepthMASK) >> DepthSHIFT)).addSyntheticMethod(codegenField, isReadAccess);", "+\t\t\t\tcurrentScope.problemReporter().needToEmulateFieldAccess(codegenField, this, isReadAccess);", "-\t\t\t\t\t|| !fieldBinding.declaringClass.canBeSeenBy(currentScope))){", "+\t\t\t\t\t|| !codegenField.declaringClass.canBeSeenBy(currentScope))){", "-\t\t\t\t\t        (FieldBinding) this.codegenBinding, ", "+\t\t\t\t\t       codegenField, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4510dcc0db57c16db95ff3ebcee38fb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tHashMap getAllPackageFragments(JavaProject project)", "signatureAfterChange": " \t \tHashMap getAllPackageFragments(JavaProject project)", "diff": ["-\t\t\t\tIPackageFragment[] entry= (IPackageFragment[]) cache.get(fragment.getElementName());", "+\t\t\t\tString pkgName = fragment.getElementName();", "+\t\t\t\tIPackageFragment[] entry= (IPackageFragment[]) cache.get(pkgName);", "-\t\t\t\t\tcache.put(fragment.getElementName(), entry);", "+\t\t\t\t\tcache.put(pkgName, entry);", "-\t\t\t\t\tcache.put(fragment.getElementName(), copy);", "+\t\t\t\t\tcache.put(pkgName, copy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b51ad4368ac93b0e4394cce81d29d0df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "f6032ce41550edd5e2f17b10399bfc4567c2ccb1", "commitAfterChange": "efaa136352e48f75f848f433f0b9f3fa6e28519d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "signatureAfterChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "diff": ["-\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, jar.getPath(), true);\r", "+\t\t\t\tIPath jarPath = jar.getPath();\r", "+\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, jarPath, true);\r", "-\t\t\t\t\tzipFileName = ((IFile)target).getLocation().toOSString();\r", "+\t\t\t\t\t// internal jar\r", "+\t\t\t\t\tzipFileName = jarPath.toString();\r", "+\t\t\t\t\t// external jar\r", "-\t\t\t\tpaths.put(jar.getPath(), type);\r", "+\t\t\t\tpaths.put(jarPath, type);\r"]}], "num": 8293}