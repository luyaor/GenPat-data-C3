{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52f131fee94c3497084e1ebf7e7cf905", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "041ecb784c0f12e56089de8713a1f23c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "diff": ["+ */\r", "+private boolean createParser(JavaProject project) throws JavaModelException {\r", "+\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\t */\r", "-\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "-\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\t\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\r", "-\t\tCompilerOptions options = new CompilerOptions(null);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\toptions,\r", "-\t\t\t\tproblemFactory);\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\t\tthis.parsedUnits = new HashtableOfObject(10);\r", "-\t\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(null);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tproblemFactory);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d480d6d27f7a816ab2d7f7a1147d47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "diff": ["+ */\r", "+private boolean createParser(JavaProject project) throws JavaModelException {\r", "+\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\t */\r", "-\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "-\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\t\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\r", "-\t\tCompilerOptions options = new CompilerOptions(null);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\toptions,\r", "-\t\t\t\tproblemFactory);\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\t\tthis.parsedUnits = new HashtableOfObject(10);\r", "-\t\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(null);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tproblemFactory);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80505a551550bd27bcbd8caa767508a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "diff": ["+ */\r", "+private boolean createParser(JavaProject project) throws JavaModelException {\r", "+\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\t */\r", "-\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "-\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\t\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\r", "-\t\tCompilerOptions options = new CompilerOptions(null);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\toptions,\r", "-\t\t\t\tproblemFactory);\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\t\tthis.parsedUnits = new HashtableOfObject(10);\r", "-\t\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(null);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tproblemFactory);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d67a8514ce4f3e9fe548f0643120281f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "diff": ["+ */\r", "+private boolean createParser(JavaProject project) throws JavaModelException {\r", "+\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\t */\r", "-\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "-\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\t\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\r", "-\t\tCompilerOptions options = new CompilerOptions(null);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\toptions,\r", "-\t\t\t\tproblemFactory);\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\t\tthis.parsedUnits = new HashtableOfObject(10);\r", "-\t\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(null);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tproblemFactory);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+}\r"]}], "num": 46909}