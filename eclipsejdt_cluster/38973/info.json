{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53abe3ac9a94839551b8bd26a5975f32", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7308ebe3c9c55358c095654ac676a66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "signatureAfterChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "diff": ["+\t\tboolean added = false;", "-\t\t\t\treturn; // at most one method is overridden from any supertype", "+\t\t\t\tadded = true; // when overriding one or more methods from superType don't traverse to transitive superTypes", "-\t\tfindAllOverriddenMethods(original, selector, suggestedParameterLength, superType, ifcsSeen, result);", "+\t\tif (!added)", "+\t\t\tfindAllOverriddenMethods(original, selector, suggestedParameterLength, superType, ifcsSeen, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa7c20b8b0e8e89f4c6cc93769d7ed91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "364f4a6fecddde86cbff58b22f5a3999ee18f64c", "commitAfterChange": "8ef7b3f4f291e2b4ee9eab1dea17e0ab09b34707", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\tboolean didSpecifyWarnings = false;", "-\t\t\t\tdisableWarnings();", "+\t\t\t\tif (!didSpecifyWarnings) {", "+\t\t\t\t\t// clear default warning level", "+\t\t\t\t\t// but allow multiple warning option on the command line", "+\t\t\t\t\tdisableWarnings();", "+\t\t\t\t}", "+\t\t\t\tdidSpecifyWarnings = true;"]}], "num": 38973}