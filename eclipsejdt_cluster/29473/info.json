{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c61142f4c45c6ee266216e8edc19b14e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6a808b90cc8b3b7bd8ec9374e5b2a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "commitAfterChange": "7e5c821becbfd893dc049f65559e27ad95e7a9ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding raisedException,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "signatureAfterChange": "\r \r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding raisedException,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\t\t// only required for actually thrown exceptions\r", "-\t\t\t\t\t\t\tif (!flowInfo.isDeadEnd() && !flowInfo.isFakeReachable()){\r", "-\t\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62ebad7cc96c63e9edb274488269c7df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "commitAfterChange": "7e5c821becbfd893dc049f65559e27ad95e7a9ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding[] raisedExceptions,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "signatureAfterChange": "\r \t\r \tpublic void checkExceptionHandlers(\r \t\tTypeBinding[] raisedExceptions,\r \t\tAstNode location,\r \t\tFlowInfo flowInfo,\r \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t// only required for actually thrown exceptions\r", "-\t\t\t\t\t\t\t\t\tif (!flowInfo.isDeadEnd() && !flowInfo.isFakeReachable()){\r", "-\t\t\t\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r", "-\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\texceptionContext.mergeUnhandledException(raisedException);\r"]}], "num": 29473}