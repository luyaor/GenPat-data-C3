{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57ef0c78e53f83d3c79a3b357a105171", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d09e9a954c41e6a3040004385fc2618", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  \tpublic Expression convert(MessageSend expression)", "signatureAfterChange": "  \tpublic Expression convert(MessageSend expression)", "diff": ["-\t\t\tSuperMethodInvocation superMethodInvocation = this.ast.newSuperMethodInvocation();", "+\t\t\tfinal SuperMethodInvocation superMethodInvocation = new SuperMethodInvocation(this.ast);", "-\t\t\tSimpleName name = this.ast.newSimpleName(new String(expression.selector));", "+\t\t\tfinal SimpleName name = new SimpleName(this.ast);", "+\t\t\tname.internalSetIdentifier(new String(expression.selector));", "-\t\t\tMethodInvocation methodInvocation = this.ast.newMethodInvocation();", "+\t\t\tfinal MethodInvocation methodInvocation = new MethodInvocation(this.ast);", "-\t\t\tSimpleName name = this.ast.newSimpleName(new String(expression.selector));", "+\t\t\tfinal SimpleName name = new SimpleName(this.ast);", "+\t\t\tname.internalSetIdentifier(new String(expression.selector));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c55667eeef60785147f353678a49b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.FieldReference reference)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.FieldReference reference)", "diff": ["-\t\t\tSuperFieldAccess superFieldAccess = this.ast.newSuperFieldAccess();", "+\t\t\tfinal SuperFieldAccess superFieldAccess = new SuperFieldAccess(this.ast);", "-\t\t\tSimpleName simpleName = this.ast.newSimpleName(new String(reference.token)); ", "+\t\t\tfinal SimpleName simpleName = new SimpleName(this.ast);", "+\t\t\tsimpleName.internalSetIdentifier(new String(reference.token));", "-\t\t\tFieldAccess fieldAccess = this.ast.newFieldAccess();", "+\t\t\tfinal FieldAccess fieldAccess = new FieldAccess(this.ast);", "-\t\t\tSimpleName simpleName = this.ast.newSimpleName(new String(reference.token)); ", "+\t\t\tfinal SimpleName simpleName = new SimpleName(this.ast);", "+\t\t\tsimpleName.internalSetIdentifier(new String(reference.token));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9842508337590c9b91f99867ad48f6f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \t\t \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\tMethodDeclaration methodDecl = this.ast.newMethodDeclaration();", "+\t\tMethodDeclaration methodDecl = new MethodDeclaration(this.ast);", "-\t\tSimpleName methodName = this.ast.newSimpleName(new String(methodDeclaration.selector));", "+\t\tfinal SimpleName methodName = new SimpleName(this.ast);", "+\t\tmethodName.internalSetIdentifier(new String(methodDeclaration.selector));", "-\t\t\t\t\tPrimitiveType returnType = this.ast.newPrimitiveType(PrimitiveType.VOID);", "+\t\t\t\t\tPrimitiveType returnType = new PrimitiveType(this.ast);", "+\t\t\t\t\treturnType.setPrimitiveTypeCode(PrimitiveType.VOID);", "-\t\t\t\tblock = this.ast.newBlock();", "+\t\t\t\tblock = new Block(this.ast);", "-\t\t\t\t\tBlock block = this.ast.newBlock();", "+\t\t\t\t\tBlock block = new Block(this.ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb43ee7b8f6f3dd55356c910d01c4cd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  public void getTYPE(int baseTypeID)", "signatureAfterChange": "  public void getTYPE(int baseTypeID)", "diff": ["-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size", "-\t\t\tgenerateFieldAccess(", "+\t\t\tfieldAccess(", "-\t\t\t\t\t1,", "+\t\t\t\t\t1, // return type size"]}], "num": 25346}