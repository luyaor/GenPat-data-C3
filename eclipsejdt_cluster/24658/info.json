{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7d0fa3440c80bde2f4a43c36381ef29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ad7099deeeb0a8db5ff8fcd010f5a8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "542ce5451500fe1306b92aaa9a7c04d8d83f7f3f", "commitAfterChange": "9cbf7e62288f060b33b2dc1c1d579dae84747012", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": "  \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds)", "diff": ["-\tprivate void findFieldsAndMethods(", "+\tprotected void findFieldsAndMethods(", "-\t\tboolean superCall) {", "+\t\tboolean superCall,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds) {", "+\t\t\t\t\tif (missingElements != null) {", "+\t\t\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (missingElements != null) {", "+\t\t\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t\t\t}", "-\t\t\t\tfalse);", "+\t\t\t\tfalse,", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds);", "-\t\t\t\tfalse);", "+\t\t\t\tfalse,", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61df5b123eff9cb590dec47fecc187b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "240396375bcd308bc801defacd8d000d9826bf17", "commitAfterChange": "d24d28f1cf95d80c381c825283113e7b36dcb836", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 124, "signatureBeforeChange": " \t\t \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType, \t\tboolean exactMatch, \t\tboolean isQualified, \t\tint relevance)", "signatureAfterChange": " \t\t \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tboolean exactMatch, \t\tboolean isQualified, \t\tint relevance)", "diff": ["+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems,", "-\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION)) {", "+\t\t\t\t\t\t\tif(!isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, missingElements != null)) {", "+\t\t\t\t\t\t\t\tif (missingElements != null) {", "+\t\t\t\t\t\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\t\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF) && (this.assistNodeInJavadoc & CompletionOnJavadoc.ONLY_INLINE_TAG) == 0) {", "+\t\t\t\t\t\t\tif(!isIgnored(CompletionProposal.METHOD_REF, missingElements != null) && (this.assistNodeInJavadoc & CompletionOnJavadoc.ONLY_INLINE_TAG) == 0) {", "+\t\t\t\t\t\t\t\tif (missingElements != null) {", "+\t\t\t\t\t\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\t\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t\t\t\t\t\t}"]}], "num": 24658}