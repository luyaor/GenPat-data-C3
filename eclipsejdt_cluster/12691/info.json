{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6acf0bfde40a4e86b7e43483d213dc41", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b4c5135529d6a29bdefe93d0e84a6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tTypeBinding typeBinding = type.resolveType(scope); // will check for null after args are resolved", "+\tthis.expressionType = type.resolveType(scope); // will check for null after args are resolved", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;", "-\tif (typeBinding == null)", "+\tif (this.expressionType == null)", "-\tif (!typeBinding.canBeInstantiated()) {", "-\t\tscope.problemReporter().cannotInstantiate(type, typeBinding);", "-\t\treturn typeBinding;", "+\tif (!this.expressionType.canBeInstantiated()) {", "+\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "+\t\treturn this.expressionType;", "-\tReferenceBinding allocatedType = (ReferenceBinding) typeBinding;", "+\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "-\t\t\t\t\treturn typeBinding;", "+\t\t\t\t\treturn this.expressionType;", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f238a9a287b832ed51d3a6f0f85ce1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "bd576a9c793017db2f7eae213c14590a7efc1565", "commitAfterChange": "6e6c13b31e68010feb85ecdb058f8741f0b58a41", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r \r \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding lhsTb = lhs.resolveType(scope);\r", "+\t\tthis.lhsType = lhs.resolveType(scope);\r", "-\t\tif (lhsTb == null || expressionTb == null)\r", "+\t\tif (this.lhsType == null || expressionTb == null)\r", "-\t\tif ((expression.isConstantValueOfTypeAssignableToType(expressionTb, lhsTb)\r", "-\t\t\t|| (lhsTb.isBaseType() && BaseTypeBinding.isWidening(lhsTb.id, expressionTb.id)))\r", "-\t\t\t|| (scope.areTypesCompatible(expressionTb, lhsTb))) {\r", "-\t\t\texpression.implicitWidening(lhsTb, expressionTb);\r", "-\t\t\treturn lhsTb;\r", "+\t\tif ((expression.isConstantValueOfTypeAssignableToType(expressionTb, this.lhsType)\r", "+\t\t\t|| (this.lhsType.isBaseType() && BaseTypeBinding.isWidening(this.lhsType.id, expressionTb.id)))\r", "+\t\t\t|| (scope.areTypesCompatible(expressionTb, this.lhsType))) {\r", "+\t\t\texpression.implicitWidening(this.lhsType, expressionTb);\r", "+\t\t\treturn this.lhsType;\r", "-\t\t\tlhsTb);\r", "+\t\t\tthis.lhsType);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f1555624e73b86bef7d38fc993fa5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedAllocationExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tTypeBinding typeBinding = null;", "+\tif (arguments != null) {", "+\t\tint argsLength = arguments.length;", "+\t\tfor (int a = argsLength; --a >= 0;)", "+\t\t\targuments[a].resolveType(scope);", "+\t}", "+\t", "-\t\ttypeBinding = ((SingleTypeReference) type).resolveTypeEnclosing(scope, (ReferenceBinding) enclosingType);", "-\t\tif (!(typeBinding instanceof ReferenceBinding))", "+\t\tthis.expressionType = ((SingleTypeReference) type).resolveTypeEnclosing(scope, (ReferenceBinding) enclosingType);", "+\t\tif (!(this.expressionType instanceof ReferenceBinding))", "-\t\tif (typeBinding.isInterface()) // handle the anonymous class definition case", "-\t\t\ttypeBinding = scope.getJavaLangObject();", "+\t\tif (this.expressionType.isInterface()) // handle the anonymous class definition case", "+\t\t\tthis.expressionType = scope.getJavaLangObject();", "-\t\ttypeBinding = type.resolveType(scope);", "-\t\tif (!(typeBinding instanceof ReferenceBinding))", "+\t\tthis.expressionType = type.resolveType(scope);", "+\t\tif (!(this.expressionType instanceof ReferenceBinding))", "-\tthrow new CompletionNodeFound(this, typeBinding, scope);", "+\tthrow new CompletionNodeFound(this, this.expressionType, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "993d2bd04cddb4e6c421e6ccebe4637c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "0068d668d02e74d5e05cae7551f5be0e4c9df655", "commitAfterChange": "50d6f2f45e4a04d5b51844d834d563b6a353f472", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r \r \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding type;\r", "-\t\t\t\ttype = BooleanBinding;\r", "+\t\t\t\tthis.typeBinding = BooleanBinding;\r", "-\t\t\t\ttype = ByteBinding;\r", "+\t\t\t\tthis.typeBinding = ByteBinding;\r", "-\t\t\t\ttype = CharBinding;\r", "+\t\t\t\tthis.typeBinding = CharBinding;\r", "-\t\t\t\ttype = DoubleBinding;\r", "+\t\t\t\tthis.typeBinding = DoubleBinding;\r", "-\t\t\t\ttype = FloatBinding;\r", "+\t\t\t\tthis.typeBinding = FloatBinding;\r", "-\t\t\t\ttype = IntBinding;\r", "+\t\t\t\tthis.typeBinding = IntBinding;\r", "-\t\t\t\ttype = LongBinding;\r", "+\t\t\t\tthis.typeBinding = LongBinding;\r", "-\t\treturn type;\r", "+\t\treturn this.typeBinding;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf84ccbfe1bb8c6b4a033759c75a5f96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding typeBinding = type.resolveType(scope);", "+\t\tthis.expressionType = type.resolveType(scope);", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\tif (typeBinding == null)", "+\t\tif (this.expressionType == null)", "-\t\tif (!typeBinding.canBeInstantiated()) {", "-\t\t\tscope.problemReporter().cannotInstantiate(type, typeBinding);", "-\t\t\treturn typeBinding;", "+\t\tif (!this.expressionType.canBeInstantiated()) {", "+\t\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "+\t\t\treturn this.expressionType;", "-\t\tReferenceBinding allocatedType = (ReferenceBinding) typeBinding;", "+\t\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;"]}], "num": 12691}