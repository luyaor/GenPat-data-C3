{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b70e6047fa4ee5c806b20b32f37e6c0f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "048d1aca67a4d751831afc242deea939", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SignatureWrapper.java", "commitBeforeChange": "26de20ae619c91a55a35147a34aba32ab3111d61", "commitAfterChange": "6aa15157c4a89778b30fbac85a8e1c76029da034", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int computeEnd()", "signatureAfterChange": " \tpublic int computeEnd()", "diff": ["-\t\twhile (this.signature[index] == '[')", "-\t\t\tindex++;", "-\t\tif (this.useExternalAnnotations && index > 0) {", "-\t\t\tswitch (this.signature[index]) {", "-\t\t\t\tcase ExternalAnnotationProvider.NONNULL :", "-\t\t\t\tcase ExternalAnnotationProvider.NULLABLE :", "-\t\t\t\t\tindex++; // skip null annotation token after '['", "+\t\tif (this.useExternalAnnotations) {", "+\t\t\t// in addition to '[' tokens accept null annotations after the first '['", "+\t\t\tskipDimensions: while(true) {", "+\t\t\t\tswitch (this.signature[index]) {", "+\t\t\t\t\tcase ExternalAnnotationProvider.NONNULL :", "+\t\t\t\t\tcase ExternalAnnotationProvider.NULLABLE :", "+\t\t\t\t\t\tif (index == this.start)", "+\t\t\t\t\t\t\tbreak skipDimensions;", "+\t\t\t\t\t\t//$FALL-THROUGH$", "+\t\t\t\t\tcase '[':", "+\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tbreak skipDimensions;", "+\t\t\t\t}", "+\t\t} else {", "+\t\t\twhile (this.signature[index] == '[')", "+\t\t\t\tindex++;", "-\t\t\t\tthis.end = this.start;", "+\t\t\t\tthis.end = index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38113144e4de243b432bbdbc1799ef3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tCompilationUnitScope unitScope)", "signatureAfterChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tCompilationUnitScope unitScope)", "diff": ["-\t\t\t\tboolean isPackageInfo = isPackageInfo();", "-\t\t\t\tif (this.types != null && isPackageInfo) {", "+\t\t\t\tif (this.types != null && isPackageInfo()) {", "-\t\t\t\t\tfinal Annotation[] annotations = this.currentPackage.annotations;", "-\t\t\t\t\tif (annotations != null) {", "-\t\t\t\t\t\tint annotationsLength = annotations.length;", "-\t\t\t\t\t\tfor (int i = 0; i < annotationsLength; i++) {", "-\t\t\t\t\t\t\tannotations[i].traverse(visitor, methodScope);", "+\t\t\t\t\tif (this.currentPackage != null) {", "+\t\t\t\t\t\tfinal Annotation[] annotations = this.currentPackage.annotations;", "+\t\t\t\t\t\tif (annotations != null) {", "+\t\t\t\t\t\t\tint annotationsLength = annotations.length;", "+\t\t\t\t\t\t\tfor (int i = 0; i < annotationsLength; i++) {", "+\t\t\t\t\t\t\t\tannotations[i].traverse(visitor, methodScope);", "+\t\t\t\t\t\t\t}", "-\t\t\t\tif (currentPackage != null) {", "-\t\t\t\t\tcurrentPackage.traverse(visitor, this.scope);", "+\t\t\t\tif (this.currentPackage != null) {", "+\t\t\t\t\tthis.currentPackage.traverse(visitor, this.scope);"]}], "num": 49364}