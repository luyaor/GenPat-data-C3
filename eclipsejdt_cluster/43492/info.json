{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3eb0563ad804ca78113c49c54e90931", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dfc99867340d685a7d5dd60c647367e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e556f9da5ae6c442ae4aa18b3f85e0ca7f743a2a", "commitAfterChange": "395344ae2ca7fe7319b203ab5ef051651606e818", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t.addPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\ttryInfo.nullInfoLessUnconditionalCopy())", "-\t\t\t\t\t\t\t\t// remove null info to protect point of", "-\t\t\t\t\t\t\t\t// exception null info", "+\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalCopy())", "-\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(", "-\t\t\t\t\t\t\t\ttryInfo.nullInfoLessUnconditionalCopy())", "-\t\t\t\t\t\t\t\t// remove null info to protect point of", "-\t\t\t\t\t\t\t\t// exception null info", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalCopy())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1a8294888587f64e3be8fcc19be119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "e31a3d332f7041212032bc8ecaf89b88f9f4b3f9", "commitAfterChange": "3191fdf4ab3026eda23ddff8ec464afdaeed80aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalInits());\r", "-\t\t\t//*/\r", "-\t\t\t// SMART ANALYSIS (see 1FBPLCY)\r", "-\t\t\t//FlowInfo catchInfo = handlingContext.initsOnException(caughtExceptionTypes[i]);\r", "-\t\t\t\r", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(tryInfo.unconditionalInits())\r", "+\t\t\t\t\t\t\t\t\t.addPotentialInitializationsFrom(handlingContext.initsOnReturn);\r", "+\r"]}], "num": 43492}