{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcb7affd0ba7b1090db777c3ac3d08ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af9e08b9e04dde104d434f4e8035ae4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 136, "signatureBeforeChange": "  \tpublic void testMethodDeclaration()", "signatureAfterChange": "  \tpublic void testMethodDeclaration()", "diff": ["-\t\tx1.setReturnType(T1);", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tx1.setReturnType(T1);", "+\t\t} else {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t\tx1.typeParameters().add(TP1);", "+\t\t\tx1.typeParameters().add(TP2);", "+\t\t\tx1.setReturnType2(T1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80c1de26a100841850c8e19e28578882", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 160, "signatureBeforeChange": " \tpublic void testTypeDeclaration()", "signatureAfterChange": " \tpublic void testTypeDeclaration()", "diff": ["-\t\tx1.setSuperclass(N2);", "-\t\tx1.superInterfaces().add(N3);", "-\t\tx1.superInterfaces().add(ast.newSimpleName(\"J\")); //$NON-NLS-1$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tx1.setSuperclass(N2);", "+\t\t\tx1.superInterfaces().add(N3);", "+\t\t\tx1.superInterfaces().add(N4);", "+\t\t} else {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t\tx1.typeParameters().add(TP1);", "+\t\t\tx1.typeParameters().add(TP2);", "+\t\t\tx1.setSuperclassType(PT1);", "+\t\t\tx1.superInterfaceTypes().add(T1);", "+\t\t\tx1.superInterfaceTypes().add(T2);", "+\t\t}"]}], "num": 44677}