{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c970f29ddda1d78d4bfdf3776accd139", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21906d32af27731d9b779db765c49e97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  protected void updateProblemsFor(String sourceLocation, CompilationResult result) throws CoreException", "signatureAfterChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "diff": ["-protected void updateProblemsFor(String sourceLocation, CompilationResult result) throws CoreException {", "-\tIResource resource = resourceForLocation(sourceLocation);", "-\tIMarker[] markers = JavaBuilder.getProblemsFor(resource);", "+protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException {", "+\tIMarker[] markers = JavaBuilder.getProblemsFor(sourceFile.resource);", "-\tif (problems == null && markers.length == 0 && JavaBuilder.getTasksFor(resource) == null) return;", "+\tif (problems == null && markers.length == 0 && JavaBuilder.getTasksFor(sourceFile.resource).length == 0) return;", "-\tJavaBuilder.removeProblemsAndTasksFor(resource);", "-\tstoreProblemsFor(resource, problems);", "+\tJavaBuilder.removeProblemsAndTasksFor(sourceFile.resource);", "+\tstoreProblemsFor(sourceFile, problems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495b4ce38b68978076bb363387d420ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException", "diff": ["-protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException {", "-\t", "-\tif (resource == null || problems == null || problems.length == 0) return;", "+protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException {", "+\tif (sourceFile == null || problems == null || problems.length == 0) return;", "-\tfor (int i = 0, length = problems.length; i < length; i++) {", "+\tIResource resource = sourceFile.resource;", "+\tfor (int i = 0, l = problems.length; i < l; i++) {", "-\t\t\t\tString fileLocation = resource.getLocation().toString();", "-\t\t\t\tif (!problemTypeLocations.contains(fileLocation))", "-\t\t\t\t\tproblemTypeLocations.add(fileLocation);", "+\t\t\t\tif (!problemSourceFiles.contains(sourceFile))", "+\t\t\t\t\tproblemSourceFiles.add(sourceFile);", "-\t\t\tif (JavaCore.COMPILER_TASK_PRIORITY_HIGH.equals(compilerPriority)) {", "+\t\t\tif (JavaCore.COMPILER_TASK_PRIORITY_HIGH.equals(compilerPriority))", "-\t\t\t} else if (JavaCore.COMPILER_TASK_PRIORITY_LOW.equals(compilerPriority)) {", "+\t\t\telse if (JavaCore.COMPILER_TASK_PRIORITY_LOW.equals(compilerPriority))", "-\t\t\t}"]}], "num": 4844}