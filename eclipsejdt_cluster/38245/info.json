{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79f2fa33937781761f5f7bcbda838c8e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e1e550df93bc9dcd527e1a84530d04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\tboolean onlyStaticMethods,", "-\t\t\tif(method.isStatic()) {", "-\t\t\t\tif(receiverType.isAnonymousType()) continue next;", "-\t\t\t\t", "-\t\t\t\tif(receiverType.isMemberType() && !receiverType.isStatic()) continue next;", "-\t\t\t\t", "-\t\t\t\tif(receiverType.isLocalType()) continue next;", "-\t\t\t} else  {", "-\t\t\t\tif(onlyStaticMethods) continue next;", "-\t\t\t}", "+\t\t\tif(method.isStatic()) continue next;", "-\t\t\trelevance += computeRelevanceForStaticOveride(method.isStatic());", "+\t\t\trelevance += R_METHOD_OVERIDE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d134ce9d13489295edb0da5058cd7f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b057a7f41b354df00fc836971733f7e56ec9e0f7", "commitAfterChange": "ed892004e9d31324e06eb4780bfb7eecc5b91586", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\t\tif (onlyStaticMethods && !method.isStatic()) continue next;", "+\t\t\tif(method.isStatic()) {", "+\t\t\t\tif(receiverType.isAnonymousType()) continue next;", "+\t\t\t\t", "+\t\t\t\tif(receiverType.isMemberType() && !receiverType.isStatic()) continue next;", "+\t\t\t\t", "+\t\t\t\tif(receiverType.isLocalType()) continue next;", "+\t\t\t} else  {", "+\t\t\t\tif(onlyStaticMethods) continue next;", "+\t\t\t}", "+\t\t\trelevance += computeRelevanceForStaticOveride(method.isStatic());"]}], "num": 38245}