{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2605dc241209fad9f7acb10532591a4a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11739f31f0d960206afdef9a26fed947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "e9c7ae15a8e3444e0a4d915eee6d3b7013c1ef90", "commitAfterChange": "7ccdb219c998345b81552f167498fc76ce4f9f3c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void updateProjectClasspath(IPath rootPath, IJavaProject project) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected void removeEntryFromClasspath(IPath rootPath, IJavaProject project) throws JavaModelException", "diff": ["-\tprotected void updateProjectClasspath(IPath rootPath, IJavaProject project)", "-\t\tthrows JavaModelException {", "+\tprotected void removeEntryFromClasspath(IPath rootPath, IJavaProject project) throws JavaModelException {", "+\t\t", "-\t\tfor (int j = 0; j < cpLength; j++) {", "-\t\t\tIClasspathEntry entry = classpath[j];", "+\t\t", "+\t\tfor (int i = 0; i < cpLength; i++) {", "+\t\t\tIClasspathEntry entry = classpath[i];", "-\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, j);", "-\t\t\t\t\tnewCPIndex = j;", "+\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, i);", "+\t\t\t\t\tnewCPIndex = i;", "-\t\t\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_SOURCE) { // library entry", "-\t\t\t\t\tnewClasspath[newCPIndex++] = copy(entry);", "-\t\t\t\t} // else source folder is moved to another project: deletes its classpath entry", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2605f86b6366091416f8b1a3973b06a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "c333ceff8dd520a0590ee780b2fe8c5efcd4c013", "commitAfterChange": "c77b24714f3e6f9d0a1f77d86a434cfb1d3d7793", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected void updateReferingProjectClasspaths(IPath rootPath) throws JavaModelException", "signatureAfterChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException", "diff": ["-\tprotected void updateReferingProjectClasspaths(IPath rootPath) throws JavaModelException {", "+\tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException {", "+\t\t\tint newCPIndex = -1;", "-\t\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, cpLength);", "+\t\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, j);", "+\t\t\t\t\t\tnewCPIndex = j;", "-\t\t\t\t\tnewClasspath[j] = copy(entry);", "+\t\t\t\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_SOURCE // library entry", "+\t\t\t\t\t\t\t|| this.destination.segment(0).equals(project.getElementName())) { // destination is in same project", "+\t\t\t\t\t\tnewClasspath[newCPIndex++] = copy(entry);", "+\t\t\t\t\t} // else source folder is moved to another project: deletes its classpath entry", "+\t\t\t\t} else if (newClasspath != null) {", "+\t\t\t\t\tnewClasspath[newCPIndex++] = entry;", "+\t\t\t\tif (newCPIndex < newClasspath.length) {", "+\t\t\t\t\tSystem.arraycopy(newClasspath, 0, newClasspath = new IClasspathEntry[newCPIndex], 0, newCPIndex);", "+\t\t\t\t}"]}], "num": 34411}