{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67a10fc6c1b5d13fa4c76b3df214f1db", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "060bd4dbab8c875e26a7c10e12678c5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "785590484a42fb55d87ed651ade76ffbada3e025", "commitAfterChange": "bd455e6c9addc83b3cc8bc437f8dd8f7f26f3c8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["+\t\t\t\t\t\tfinal boolean hasOutputs = !outputs.isEmpty();", "-\t\t\t\t\t\t\t\t\t\t\t\tif (outputs.contains(proxy.requestFullPath())) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif (hasOutputs && outputs.contains(proxy.requestFullPath())) {", "-\t\t\t\t\t\t\t\t\t\t\t\tif (outputs.contains(proxy.requestFullPath())) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif (hasOutputs && outputs.contains(proxy.requestFullPath())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f778e7a760225e5678e46026d3bb3a26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "16dca0cdbe17832dfb29f0072e09feca8f8a7af6", "commitAfterChange": "eb9694e0519c131ba8708de11ae2ad1c0157552f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["+\t\tboolean isCastingToBoundParameterized;", "-\t\t\t\tcastType.isBoundParameterizedType() ", "+\t\t\t\t(isCastingToBoundParameterized = castType.isBoundParameterizedType())", "-\t\t\tif (isNarrowing ? !expressionType.isEquivalentTo(match) : !match.isEquivalentTo(castType)) {", "+\t\t\tif (isCastingToBoundParameterized ", "+\t\t\t\t\t&& (isNarrowing ? !expressionType.isEquivalentTo(match) : !match.isEquivalentTo(castType))) {", "-\t\t\t}", "-\t\t\tif ((castType.tagBits & TagBits.HasDirectWildcard) == 0) {", "-\t\t\t\tif (!match.isParameterizedType() || expressionType.isRawType()) {", "-\t\t\t\t\tthis.bits |= UnsafeCast;", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "+\t\t\t} else if ((castType.tagBits & TagBits.HasDirectWildcard) == 0", "+\t\t\t\t\t&& (!match.isParameterizedType() || expressionType.isRawType())) {", "+\t\t\t\tthis.bits |= UnsafeCast;", "+\t\t\t\treturn true;"]}], "num": 35882}