{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c90936496f903618a82321a3c1ddf8ee", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215e1006db95a0fdd8084365c79aaf7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public BuildNotifier(IProgressMonitor monitor, IProject project)", "signatureAfterChange": "  public BuildNotifier(IProgressMonitor monitor, IProject project)", "diff": ["-\ttry {", "-\t\tIPath location = project.getDescription().getLocation();", "-\t\tif (location == null)", "-\t\t\tlocation = project.getParent().getLocation(); // default workspace location", "-\t\telse if (project.getName().equalsIgnoreCase(location.lastSegment()))", "-\t\t\tlocation = location.removeLastSegments(1); // want to show project name if possible", "-\t\tthis.rootPathLength = location.addTrailingSeparator().toString().length();", "-\t} catch(CoreException e) {", "-\t\tthis.rootPathLength = 0;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2969a0c326c1e513a84d0279fbff5ae2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "fd230c4ee1ceefd6a4812ebc7de0e734ce8df73c", "commitAfterChange": "e752367433ca417806253a6753c55772428a8bf6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic void diagnoseParse()", "signatureAfterChange": "   \tpublic void diagnoseParse()", "diff": ["-\t\tint forceRecoveryToken = -1;", "+//\t\tint forceRecoveryToken = -1;", "-\t\t\t\tif((tok != TokenNameRBRACE || (forceRecoveryToken != currentToken && (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0))", "-\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.IS_AFTER_JUMP) !=0) {", "-\t\t\t\t\tact = ERROR_ACTION;", "-\t\t\t\t\tif(forceRecoveryToken != currentToken", "-\t\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0) {", "-\t\t\t\t\t\tforceRecoveryAfterLBracketMissing = true;", "-\t\t\t\t\t\tforceRecoveryToken = currentToken;", "-\t\t\t\t\t}", "-\t\t\t\t}", "+//\t\t\t\tif((tok != TokenNameRBRACE || (forceRecoveryToken != currentToken && (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0))", "+//\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.IS_AFTER_JUMP) !=0) {", "+//\t\t\t\t\tact = ERROR_ACTION;", "+//\t\t\t\t\tif(forceRecoveryToken != currentToken", "+//\t\t\t\t\t\t&& (lexStream.flags(currentToken) & LexStream.LBRACE_MISSING) != 0) {", "+//\t\t\t\t\t\tforceRecoveryAfterLBracketMissing = true;", "+//\t\t\t\t\t\tforceRecoveryToken = currentToken;", "+//\t\t\t\t\t}", "+//\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d39fdc0ada0e9376f51e26fb7cbb512", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BasicCompilationUnit.java", "commitBeforeChange": "c76d746cb37ee26e445adfa9082cf0532abc2efb", "commitAfterChange": "6d551a6edd44dfa9f9c79c5f98af89623a71aa38", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public BasicCompilationUnit(char[] contents, char[][] packageName, String fileName)", "signatureAfterChange": "  public BasicCompilationUnit(char[] contents, char[][] packageName, String fileName)", "diff": ["-", "-\tint start = fileName.lastIndexOf(\"/\") + 1; //$NON-NLS-1$", "-\tif (start == 0 || start < fileName.lastIndexOf(\"\\\\\")) //$NON-NLS-1$", "-\t\tstart = fileName.lastIndexOf(\"\\\\\") + 1; //$NON-NLS-1$", "-", "-\tint end = fileName.lastIndexOf(\".\"); //$NON-NLS-1$", "-\tif (end == -1)", "-\t\tend = fileName.length();", "-", "-\tthis.mainTypeName = fileName.substring(start, end).toCharArray();", "-\tthis.encoding = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30b89518f6f2ced83646e8029499f92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "70b9f71bdfa4f15d433383739618a9fdcdbf50e8", "commitAfterChange": "d9dd3f3b4344311765aa43bd0ec69a035e3c1a0f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object preserveUserLinebreaksOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_PRESERVE_USER_LINEBREAKS);", "-\t\tif (preserveUserLinebreaksOption != null) {", "-\t\t\tthis.preserve_user_linebreaks = DefaultCodeFormatterConstants.TRUE.equals(preserveUserLinebreaksOption);", "-\t\t}", "-\t\tfinal Object fillingSpaceOption = getDeprecatedFillingSpaceOption(settings);", "-\t\tif (fillingSpaceOption != null) {", "-\t\t\ttry {", "-\t\t\t\tthis.filling_space = ((String) fillingSpaceOption).charAt(0);", "-\t\t\t} catch(IndexOutOfBoundsException e) {", "-\t\t\t\tthis.filling_space = ' ';", "-\t\t\t} catch(ClassCastException e) {", "-\t\t\t\tthis.filling_space = ' ';", "-\t\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64769e371a6b7249d73a011589843a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/SourceFile.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public SourceFile(String fileName, char[][] packageName)", "signatureAfterChange": "\r \r public SourceFile(String fileName, char[] mainTypeName, char[][] packageName)", "diff": ["-public SourceFile(String fileName, char[][] packageName) {\r", "-\tint start = CharOperation.lastIndexOf('/', this.fileName) + 1; //$NON-NLS-1$\r", "-\tint end = CharOperation.lastIndexOf('.', this.fileName); //$NON-NLS-1$\r", "-\tif (end == -1)\r", "-\t\tend = fileName.length();\r", "-\tthis.mainTypeName = fileName.substring(start, end).toCharArray();\r", "+public SourceFile(String fileName, char[] mainTypeName, char[][] packageName) {\r", "+\tthis.fileName = fileName.toCharArray();\r", "+\tCharOperation.replace(this.fileName, '\\\\', '/');\r", "+\r", "+\tthis.mainTypeName = mainTypeName;\r"]}], "num": 63540}