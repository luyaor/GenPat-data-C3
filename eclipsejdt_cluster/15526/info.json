{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b94b4427c0b96fa2d88a60582b5cdf2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aa3098562955789f38e406ea2046b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.receiverType = this.receiver.resolveType(scope);", "-\tif (this.receiverType == null) {", "+\tthis.actualReceiverType = this.receiver.resolveType(scope);", "+\tif (this.actualReceiverType == null) {", "-\t\tif (((CastExpression)this.receiver).expression.resolvedType == this.receiverType) {", "+\t\tif (((CastExpression)this.receiver).expression.resolvedType == this.actualReceiverType) {", "-\tFieldBinding fieldBinding = this.codegenBinding = this.binding = scope.getField(this.receiverType, this.token, this);", "+\tFieldBinding fieldBinding = this.binding = scope.getField(this.actualReceiverType, this.token, this);", "-\t\tscope.problemReporter().invalidField(this, this.receiverType);", "+\t\tscope.problemReporter().invalidField(this, this.actualReceiverType);", "-\tTypeBinding receiverErasure = this.receiverType.erasure();", "+\tTypeBinding receiverErasure = this.actualReceiverType.erasure();", "-\t\t\tthis.receiverType = fieldBinding.declaringClass; // handle indirect inheritance thru variable secondary bound", "+\t\t\tthis.actualReceiverType = fieldBinding.declaringClass; // handle indirect inheritance thru variable secondary bound", "-\tthis.receiver.computeConversion(scope, this.receiverType, this.receiverType);", "+\tthis.receiver.computeConversion(scope, this.actualReceiverType, this.actualReceiverType);", "-\t\t\t\t&& declaringClass != this.receiverType", "+\t\t\t\t&& declaringClass != this.actualReceiverType"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "769e1ff126746a0f10502ab13f0ab323", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.receiverType = this.receiver.resolveType(scope);", "-\tif (this.receiverType == null){", "+\tthis.actualReceiverType = this.receiver.resolveType(scope);", "+\tif (this.actualReceiverType == null){", "-\tthis.codegenBinding = this.binding = scope.getField(this.receiverType, this.token, this);", "+\tthis.binding = scope.getField(this.actualReceiverType, this.token, this);", "-\t\t\t\t\t\tscope.problemReporter().invalidField(this, this.receiverType);", "+\t\t\t\t\t\tscope.problemReporter().invalidField(this, this.actualReceiverType);", "+\t\t\t\t\tthis.actualReceiverType = this.delegateThis.type;", "-\t\t\t\t\tscope.problemReporter().invalidField(this, this.receiverType);", "+\t\t\t\t\tscope.problemReporter().invalidField(this, this.actualReceiverType);", "-\t\t\tthis.codegenBinding = this.binding = localScope.getFieldForCodeSnippet(this.delegateThis.type, this.token, this);", "+\t\t\tthis.binding = localScope.getFieldForCodeSnippet(this.delegateThis.type, this.token, this);", "-\t\t\tthis.codegenBinding = this.binding = firstAttempt;", "+\t\t\tthis.binding = firstAttempt;", "-\t\tscope.problemReporter().invalidField(this, this.receiverType);", "+\t\tscope.problemReporter().invalidField(this, this.actualReceiverType);"]}], "num": 15526}