{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a944ebb9c04398f94c3535da42b12623", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aebe5cc5c5ed77fff83cb5505819d20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "signatureAfterChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "diff": ["+\t\t// inclusion patterns (optional)", "+\t\tString inclusion = element.getAttribute(\"including\"); //$NON-NLS-1$ ", "+\t\tIPath[] inclusionPatterns = INCLUDE_ALL;", "+\t\tif (!inclusion.equals(\"\")) { //$NON-NLS-1$ ", "+\t\t\tchar[][] patterns = CharOperation.splitOn('|', inclusion.toCharArray());", "+\t\t\tint patternCount;", "+\t\t\tif ((patternCount  = patterns.length) > 0) {", "+\t\t\t\tinclusionPatterns = new IPath[patternCount];", "+\t\t\t\tfor (int j = 0; j < patterns.length; j++){", "+\t\t\t\t\tinclusionPatterns[j] = new Path(new String(patterns[j]));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+", "-\t\tIPath[] exclusionPatterns = ClasspathEntry.NO_EXCLUSION_PATTERNS;", "+\t\tIPath[] exclusionPatterns = EXCLUDE_NONE;", "-\t\t\t\t\treturn JavaCore.newSourceEntry(path, exclusionPatterns, outputLocation);", "+\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation);", "-\t\t\t\t\t\tClasspathEntry.NO_EXCLUSION_PATTERNS, ", "+\t\t\t\t\t\tClasspathEntry.INCLUDE_ALL, ", "+\t\t\t\t\t\tClasspathEntry.EXCLUDE_NONE, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed5d72e9d9b9d214c107b2b09d2304b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "489bd6f4fff60ffd577633f636fc992ac578a001", "commitAfterChange": "a9a6659f6e9383ba6c2ef999e9385837a38140d0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] patterns, boolean areExclusionPatterns, String specificOutputLocation) throws JavaModelException", "signatureAfterChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] inclusionPatterns, IPath[] exclusionPatterns, String specificOutputLocation) throws JavaModelException", "diff": ["-\tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] patterns, boolean areExclusionPatterns, String specificOutputLocation) throws JavaModelException {", "+\tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] inclusionPatterns, IPath[] exclusionPatterns, String specificOutputLocation) throws JavaModelException {", "-\t\tIClasspathEntry entry;", "-\t\tif (areExclusionPatterns)", "-\t\t\t// exclusion patterns", "-\t\t\tentry = JavaCore.newSourceEntry(path, patterns == null ? new Path[0] : patterns, outputPath);", "-\t\telse", "-\t\t\t// inclusion patterns", "-\t\t\tentry = JavaCore.newSourceEntry(path, patterns == null ? new Path[0] : patterns, new Path[0], outputPath);", "+\t\tIClasspathEntry entry = JavaCore.newSourceEntry(", "+\t\t\tpath,", "+\t\t\tinclusionPatterns == null ? new Path[0] : inclusionPatterns,", "+\t\t\texclusionPatterns == null ? new Path[0] : exclusionPatterns,", "+\t\t\toutputPath);"]}], "num": 63998}