{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26f25bd95c07d3b2c4e887ba118aa6d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6badb0366c032bc96b5062147ea43ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 622, "methodNumberAfterChange": 622, "signatureBeforeChange": " \tpublic void test618()", "signatureAfterChange": " \tpublic void test618()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in Map.java (at line 5)\\n\" + ", "-\t\t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "-\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method foo cannot be declared static; static methods can only be declared in a static or top level type\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in Map.java (at line 5)\\n\" + ", "-\t\t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in Map.java (at line 8)\\n\" + ", "-\t\t\t\"\tEntry<String> entry; // invalid static ref\\n\" + ", "-\t\t\t\"\t^^^^^\\n\" + ", "-\t\t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in Map.java (at line 11)\\n\" + ", "-\t\t\t\"\tvoid c(Map.Entry<String> e) { } // illegal \\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "-\t\t\t\"The member type Map.Entry<String> must be qualified with a parameterized type, since it is not static\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. ERROR in Map.java (at line 5)\\n\" + ", "+    \t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "+    \t\t\"\t            ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"The method foo cannot be declared static; static methods can only be declared in a static or top level type\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in Map.java (at line 5)\\n\" + ", "+    \t\t\"\tstatic void foo(Entry<String> e) { } // invalid static ref\\n\" + ", "+    \t\t\"\t                ^^^^^\\n\" + ", "+    \t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in Map.java (at line 8)\\n\" + ", "+    \t\t\"\tEntry<String> entry; // invalid static ref\\n\" + ", "+    \t\t\"\t^^^^^\\n\" + ", "+    \t\t\"Cannot make a static reference to the non-static type Entry\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. ERROR in Map.java (at line 11)\\n\" + ", "+    \t\t\"\tvoid c(Map.Entry<String> e) { } // illegal \\n\" + ", "+    \t\t\"\t       ^^^^^^^^^\\n\" + ", "+    \t\t\"The member type Map.Entry<String> must be qualified with a parameterized type, since it is not static\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. WARNING in Map.java (at line 12)\\n\" + ", "+    \t\t\"\tvoid b(Entry e) { } // OK\\n\" + ", "+    \t\t\"\t       ^^^^^\\n\" + ", "+    \t\t\"Type safety: Map.Entry is a raw type. References to generic type Map<M>.Entry<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da5544d5a35eea44299984abc6170d64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3f665dc08ffa02e27b74efb0940c16f2120a11f8", "commitAfterChange": "307e2de84d078daed3099015a7ac89d980746b6b", "methodNumberBeforeChange": 628, "methodNumberAfterChange": 628, "signatureBeforeChange": " \tpublic void _test0610()", "signatureAfterChange": " \tpublic void test0610()", "diff": ["-\tpublic void _test0610() {", "+\tpublic void test0610() {", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tnumbers= (List<Number>) objects; // correct - cast error\\n\" + ", "-\t\t\t\"\t         ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Cannot cast from List<Object> to List<Number>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"\text= (List<? extends Number>) objects; // wrong, should fail\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Cannot cast from List<Object> to List<? extends Number>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"\text= raw; // correct - raw conversion warning issued\\n\" + ", "-\t\t\t\"\t     ^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<? extends Number>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"\tnumbers= raw; // correct - raw conversion warning issued\\n\" + ", "-\t\t\t\"\t         ^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Number>\\n\" + ", "-\t\t\t\"----------\\n\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+    \t\t\"\tvoid foo(List<Object> objects, List raw) {\\n\" + ", "+    \t\t\"\t                               ^^^^\\n\" + ", "+    \t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+    \t\t\"\tnumbers= (List<Number>) objects; // correct - cast error\\n\" + ", "+    \t\t\"\t         ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Cannot cast from List<Object> to List<Number>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+    \t\t\"\text= (List<? extends Number>) objects; // wrong, should fail\\n\" + ", "+    \t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Cannot cast from List<Object> to List<? extends Number>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+    \t\t\"\text= raw; // correct - raw conversion warning issued\\n\" + ", "+    \t\t\"\t     ^^^\\n\" + ", "+    \t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<? extends Number>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. WARNING in X.java (at line 13)\\n\" + ", "+    \t\t\"\tnumbers= raw; // correct - raw conversion warning issued\\n\" + ", "+    \t\t\"\t         ^^^\\n\" + ", "+    \t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Number>\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 14504}