{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d603308cb51a2a386c17b02bfbc37368", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5f896990ac1087dedb963936b2a043", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "ee8ad1e40e9b16f34ac6204dee3c91af5b27ff77", "commitAfterChange": "a6e44391963b63fa0c27651827313192cc7a80a0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test037() throws Exception", "signatureAfterChange": " \tpublic void test037() throws Exception", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\t\"Type annotations are not allowed on type names used to access static members\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t                            ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t                                          ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96aecbdd136e6f1be9c768b3765499ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "aaa43eec904e27741de5c55121881f4c0383d53f", "commitAfterChange": "0ffd32ee08cd2dc832efa1134a050b16b350c66a", "methodNumberBeforeChange": 903, "methodNumberAfterChange": 903, "signatureBeforeChange": " public void test0883()", "signatureAfterChange": " public void test0883()", "diff": ["-\t\t\t\"\t\tList<U> v = null;\\n\" + ", "-\t\t\t\"\t\tString s = (String) foo(v);\\n\" + ", "+\t\t\t\"\t\tList<U> listu = null;\\n\" + ", "+\t\t\t\"\t\tString s = (String)foo(listu);\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tstatic <V extends List<V>> V bar(V v) {\\n\" + ", "+\t\t\t\"\t\tList<V> listv = null;\\n\" + ", "+\t\t\t\"\t\tString s = (String)foo(listv);\\n\" + ", "+\t\t\t\"\t\treturn v;\\n\" + ", "-\t\t\"\tString s = (String) foo(v);\\n\" + ", "-\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Cannot cast from List<U> to String\\n\" + // shouldn't it infer: List<List<U>> ?", "+\t\t\"\tString s = (String)foo(listu);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from List<U> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tString s = (String)foo(listu);\\n\" + ", "+\t\t\"\t                   ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<U>). The inferred type List<U> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tString s = (String)foo(listv);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from List<V> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tString s = (String)foo(listv);\\n\" + ", "+\t\t\"\t                   ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<V>). The inferred type List<V> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" + "]}], "num": 65194}