{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59b3622bf61cc04ee91e437eb85e6ffb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad2f74acba8594732a027960bf6d228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "372783581a5723abe8e5c388f38ff5c205e01380", "commitAfterChange": "b0c126113d3919e827d562fe7ceede775b6f96a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-        final int parametersLength = descriptorParameters.length;", "+        this.receiverType = lhsType;", "+\t\tfinal int parametersLength = descriptorParameters.length;", "-        \treturn this.resolvedType; // No binding construction possible. Code generator will have to conjure up a rabbit.", "+        \treturn this.resolvedType; // No binding construction possible right now. Code generator will have to conjure up a rabbit.", "-\t\t", "-        this.receiverType = lhsType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a37038cd3db5c1fbcad88a3c96d2d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "3aabc067e22084d59ef0ea59b0d58e1085dede4c", "commitAfterChange": "b7295bb19a68269f09e5fdceeecf4f4c701e7063", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+    \t\tif (isConstructorReference()) {", "+    \t\t\tthis.exactMethodBinding = scope.getExactConstructor(lhsType, this);", "+    \t\t}", "-        \tif (!lhsType.isCompatibleWith(this.descriptor.returnType)) {", "+        \tif (!lhsType.isCompatibleWith(this.descriptor.returnType) && this.descriptor.returnType.id != TypeIds.T_void) {", "-        \treturn this.resolvedType; // No binding construction possible right now. Code generator will have to conjure up a rabbit.", "+        \tthis.binding = this.exactMethodBinding = scope.getExactConstructor(lhsType, this);", "+        \treturn this.resolvedType;"]}], "num": 41651}