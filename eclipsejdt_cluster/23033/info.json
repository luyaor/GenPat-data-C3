{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c72d9d98df8554a59907d0a13042ef09", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5df8c19655401a2bdf7bf7c66a9db99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ProcessTaskManager.java", "commitBeforeChange": "48628a48bc30e9f74feb6b693bbfe398c063e4b8", "commitAfterChange": "fea4095ba208aac8a9915b5d68b0792beec39b62", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void run()", "signatureAfterChange": "  public void run()", "diff": ["-\t\tsynchronized (this) {", "-\t\t\tif (this.processingThread == null) return;", "-", "-\t\t\tunitToProcess = this.compiler.getUnitToProcess(this.unitIndex);", "-\t\t\tif (unitToProcess == null) {", "-\t\t\t\tthis.processingThread = null;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tindex = this.unitIndex++;", "-\t\t}", "-", "+\t\t\tsynchronized (this) {", "+\t\t\t\tif (this.processingThread == null) return;", "+", "+\t\t\t\tunitToProcess = this.compiler.getUnitToProcess(this.unitIndex);", "+\t\t\t\tif (unitToProcess == null) {", "+\t\t\t\t\tthis.processingThread = null;", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\tindex = this.unitIndex++;", "+\t\t\t}", "+", "-\t\t} catch (AbortCompilation e) {", "-\t\t\tthis.processingThread = null;", "-\t\t\tthis.compiler.handleInternalException(e, unitToProcess);", "-\t\t\treturn;", "-\t\t} catch (Error e) {", "-\t\t\tthis.processingThread = null;", "-\t\t\tthis.compiler.handleInternalException(e, unitToProcess, null);", "-\t\t\tthrow e; // rethrow", "-\t\t} catch (RuntimeException e) {", "-\t\t\tthis.processingThread = null;", "-\t\t\tthis.compiler.handleInternalException(e, unitToProcess, null);", "-\t\t\tthrow e; // rethrow", "-\t\t} finally {", "-\t\t\tunitToProcess.cleanUp();", "-\t\t}", "-\t\taddNextUnit(unitToProcess);", "+\t\t\taddNextUnit(unitToProcess);", "+\t\t} catch (Error e) {", "+\t\t\tsynchronized (this) {", "+\t\t\t\tthis.processingThread = null;", "+\t\t\t\tthis.caughtException = e;", "+\t\t\t}", "+\t\t\treturn;", "+\t\t} catch (RuntimeException e) {", "+\t\t\tsynchronized (this) {", "+\t\t\t\tthis.processingThread = null;", "+\t\t\t\tthis.caughtException = e;", "+\t\t\t}", "+\t\t\treturn;", "+\t\t} finally {", "+\t\t\tif (unitToProcess != null)", "+\t\t\t\tunitToProcess.cleanUp();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7fb9f8d5168e93df6ecc7f1c9a4e06a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ProcessTaskManager.java", "commitBeforeChange": "5b32c7baead1eab4ce156ce84a7f31603b769b12", "commitAfterChange": "82a4193502a7d958d285908a8dd55339720dc882", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void run()", "signatureAfterChange": "  public void run()", "diff": ["-\t\t\tsynchronized (this) {", "-\t\t\t\tif (this.processingThread == null) return;", "-", "-\t\t\t\tunitToProcess = this.compiler.getUnitToProcess(this.unitIndex);", "-\t\t\t\tif (unitToProcess == null) {", "-\t\t\t\t\tthis.processingThread = null;", "-\t\t\t\t\treturn;", "+\t\t\ttry {", "+\t\t\t\tsynchronized (this) {", "+\t\t\t\t\tif (this.processingThread == null) return;", "+\t", "+\t\t\t\t\tunitToProcess = this.compiler.getUnitToProcess(this.unitIndex);", "+\t\t\t\t\tif (unitToProcess == null) {", "+\t\t\t\t\t\tthis.processingThread = null;", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t\tindex = this.unitIndex++;", "-\t\t\t\tindex = this.unitIndex++;", "+\t", "+\t\t\t\tthis.compiler.reportProgress(Messages.bind(Messages.compilation_processing, new String(unitToProcess.getFileName())));", "+\t\t\t\tif (this.compiler.options.verbose)", "+\t\t\t\t\tthis.compiler.out.println(", "+\t\t\t\t\t\tMessages.bind(Messages.compilation_process,", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tString.valueOf(index + 1),", "+\t\t\t\t\t\t\tString.valueOf(this.compiler.totalUnits),", "+\t\t\t\t\t\t\tnew String(unitToProcess.getFileName())", "+\t\t\t\t\t\t}));", "+\t\t\t\tthis.compiler.process(unitToProcess, index);", "+\t", "+\t\t\t\taddNextUnit(unitToProcess);", "+\t\t\t} finally {", "+\t\t\t\tif (unitToProcess != null)", "+\t\t\t\t\tunitToProcess.cleanUp();", "-", "-\t\t\tthis.compiler.reportProgress(Messages.bind(Messages.compilation_processing, new String(unitToProcess.getFileName())));", "-\t\t\tif (this.compiler.options.verbose)", "-\t\t\t\tthis.compiler.out.println(", "-\t\t\t\t\tMessages.bind(Messages.compilation_process,", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tString.valueOf(index + 1),", "-\t\t\t\t\t\tString.valueOf(this.compiler.totalUnits),", "-\t\t\t\t\t\tnew String(unitToProcess.getFileName())", "-\t\t\t\t\t}));", "-\t\t\tthis.compiler.process(unitToProcess, index);", "-", "-\t\t\taddNextUnit(unitToProcess);", "-\t\t} finally {", "-\t\t\tif (unitToProcess != null)", "-\t\t\t\tunitToProcess.cleanUp();"]}], "num": 23033}