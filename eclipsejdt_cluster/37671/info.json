{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1e702826fca585786edd153c742335b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0025fa38ea1983f0d3a67911d1c099ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "f5f144eaadfc3b2a6a242fa2d3bde9667704484e", "commitAfterChange": "9685f68325ca1c38c2a5a18937ecdb479d81a800", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " private MethodBinding getMostApplicableMethod(List<MethodBinding> possibleMethods)", "signatureAfterChange": " private MethodBinding getMostApplicableMethod(List<MethodBinding> possibleMethods, MethodPattern methodPattern)", "diff": ["-private MethodBinding getMostApplicableMethod(List<MethodBinding> possibleMethods) {", "+private MethodBinding getMostApplicableMethod(List<MethodBinding> possibleMethods, MethodPattern methodPattern) {", "-\t\tMethodPattern methodPattern =  ((MethodPattern) this.pattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f66f90955ee9e2dc74624b3b8d9f8e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "3db4ce27557c02689107a83d27fb757d363e9707", "commitAfterChange": "6b9c67fdfa3245347902558ec7bd2d647d0b986f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException {", "-", "-\t\tSourceMethodElementInfo methodInfo = (SourceMethodElementInfo) methodHandle.getElementInfo();", "+\tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException {"]}], "num": 37671}