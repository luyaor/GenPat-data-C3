{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89d4c88530388a825f23b29f103d4a42", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311207a33f76015f56688b6d8ad590c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test_nonnull_parameter_015()", "signatureAfterChange": " public void test_nonnull_parameter_015()", "diff": ["-\t\t\t\"    void foo(@NonNull Object ... o) {\\n\" +", "+\t\t\t((this.complianceLevel < ClassFileConstants.JDK1_8)", "+\t\t\t ? \"    void foo(@NonNull Object ... o) {\\n\"", "+\t\t\t : \"    void foo(Object @NonNull... o) {\\n\") +", "-\t\t\t\"Redundant null check: The variable o is specified as @NonNull\\n\" + ", "+\t\t\tredundant_check_nonnull(\"The variable o\", \"Object @NonNull[]\") + ", "-\t\t\t\"Null type mismatch: required \\'@NonNull Object[]\\' but the provided value is null\\n\" + ", "+\t\t\t\"Null type mismatch: required \\'\"+nonNullArrayOf(\"Object\")+\"\\' but the provided value is null\\n\" + ", "-\t\t\t\"Null type mismatch: required \\'@NonNull Object[]\\' but the provided value is null\\n\" + ", "+\t\t\t\"Null type mismatch: required \\'\"+nonNullArrayOf(\"Object\")+\"\\' but the provided value is null\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc951e905f00e7b747e595956ccd57d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "commitAfterChange": "a6f21a01110fe95a43760ec08fc8cc1e27e1c4bc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test008() throws Exception", "signatureAfterChange": " \tpublic void test008() throws Exception", "diff": ["-\t\t\t\t\t\"        [pc: 20, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {java.lang.String[], int, java.lang.String}]\\n\" +", "+\t\t\t\t\t(this.complianceLevel >= ClassFileConstants.JDK1_8 ? // in 1.8 the ternary is resolved to its target type j.l.Object", "+\t\t\t\t\t\"        [pc: 20, full, stack: {java.io.PrintStream, java.lang.Object}, locals: {java.lang.String[], int, java.lang.String}]\\n\" :", "+\t\t\t\t\t\"        [pc: 20, full, stack: {java.io.PrintStream, java.lang.Comparable}, locals: {java.lang.String[], int, java.lang.String}]\\n\") +", "-\t\t\t\t\t\"  // Method descriptor #48 (Ljava/lang/Comparable;)V\\n\" +", "+\t\t\t\t\t(this.complianceLevel >= ClassFileConstants.JDK1_8 ?", "+\t\t\t\t\t\"  // Method descriptor #46 (Ljava/lang/Comparable;)V\\n\" :", "+\t\t\t\t\t\"  // Method descriptor #48 (Ljava/lang/Comparable;)V\\n\") +"]}], "num": 15310}