{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e8e775173b5dc401472cde9912d1d3a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e5ef96a4614f30d677fa069b78285f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "b3a2f7bfaa3438c01da8001220d197a764da19bb", "commitAfterChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic void test0552() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0552() throws JavaModelException", "diff": ["-\t */", "-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\", \"src\", \"test0552\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\", \"src\", \"test0552\", \"Test.java\");", "-\t\tASTNode result = runConversion(sourceUnit, false);", "-\t\tassertEquals(\"not a compilation unit\", ASTNode.COMPILATION_UNIT, result.getNodeType()); //$NON-NLS-1$", "+\t\tCompilationUnit result = (CompilationUnit) runConversion(sourceUnit, true);", "+\t\tassertEquals(\"Got errors\", 0, result.getProblems().length);", "+\t\tTypeDeclaration declaration = (TypeDeclaration) result.types().get(0);", "+\t\tBlock body = declaration.getMethods()[0].getBody();", "+\t\tExpressionStatement expr = (ExpressionStatement) body.statements().get(0);", "+\t\tMethodInvocation invocation = (MethodInvocation) expr.getExpression();", "+\t\tInfixExpression node = (InfixExpression) invocation.arguments().get(0);", "+\t\tITypeBinding typeBinding = node.resolveTypeBinding();", "+\t\tassertEquals(\"wrong type\", \"java.lang.String\", typeBinding.getQualifiedName());", "+\t\tcheckSourceRange(node, \"\\\"a\\\" + \\\"a\\\" + \\\"a\\\"\", source);", "+\t\tList extendedOperands = node.extendedOperands();", "+\t\tassertEquals(\"Wrong size\", 1, extendedOperands.size());", "+\t\tExpression leftOperand = node.getLeftOperand();", "+\t\tcheckSourceRange(leftOperand, \"\\\"a\\\"\", source);", "+\t\ttypeBinding = leftOperand.resolveTypeBinding();", "+\t\tassertEquals(\"wrong type\", \"java.lang.String\", typeBinding.getQualifiedName());", "+\t\tExpression rightOperand = node.getRightOperand();", "+\t\tcheckSourceRange(rightOperand, \"\\\"a\\\"\", source);", "+\t\ttypeBinding = rightOperand.resolveTypeBinding();", "+\t\tassertEquals(\"wrong type\", \"java.lang.String\", typeBinding.getQualifiedName());", "+\t\tExpression expression = (Expression) extendedOperands.get(0);", "+\t\tcheckSourceRange(expression, \"\\\"a\\\"\", source);", "+\t\ttypeBinding = expression.resolveTypeBinding();", "+\t\tassertEquals(\"wrong type\", \"java.lang.String\", typeBinding.getQualifiedName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439969140acb7bf70ca936c61a449dc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c370db17fcad0e528d16b2fecef0952e714ead1", "commitAfterChange": "73b4b882573d866af4a2886a5430207907acc99e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void test0037() throws JavaModelException", "signatureAfterChange": " \tpublic void test0037() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter15\" , \"src\", \"test0037\", \"A.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter15\" , \"src\", \"test0037\", \"X.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding.getName());", "+\t\tassertEquals(\"Wrong name\", \"T\", typeBinding.getName());", "-\t\tassertEquals(\"Wrong key\", \"Y:test0037/A\", typeBinding.getKey());", "+\t\tassertEquals(\"Wrong key\", \"T:test0037/X\", typeBinding.getKey());", "-\t\tassertEquals(\"Wrong name\", \"Y\", simpleName.getIdentifier());", "+\t\tassertEquals(\"Wrong name\", \"T\", simpleName.getIdentifier());", "-\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding2.getName());", "+\t\tassertEquals(\"Wrong name\", \"T\", typeBinding2.getName());", "-\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding3.getName());", "+\t\tassertEquals(\"Wrong name\", \"T\", typeBinding3.getName());", "-\t\tassertEquals(\"Wrong name\", \"X\", typeBinding.getName());", "+\t\tassertEquals(\"Wrong name\", \"U\", typeBinding.getName());", "-\t\tassertEquals(\"Wrong key\", \"X:test0037/A\", typeBinding.getKey());", "+\t\tassertEquals(\"Wrong key\", \"U:test0037/X\", typeBinding.getKey());", "-\t\tassertEquals(\"Wrong name\", \"X\", simpleName.getIdentifier());", "+\t\tassertEquals(\"Wrong name\", \"U\", simpleName.getIdentifier());", "-\t\tassertEquals(\"Wrong name\", \"X\", typeBinding2.getName());", "+\t\tassertEquals(\"Wrong name\", \"U\", typeBinding2.getName());", "-\t\tassertEquals(\"Wrong name\", \"X\", typeBinding3.getName());", "+\t\tassertEquals(\"Wrong name\", \"U\", typeBinding3.getName());"]}], "num": 22002}