{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcf4625b5512a2c6e99f5fd39f389c70", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738f4b7452f6e7eec14847c238dd9d72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "85a51230859ba76a62ce4d566f4cbd47aac06488", "commitAfterChange": "3885d0327ef37626bb68aa8a0a9e1a4a5bb4ba7a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 65, "signatureBeforeChange": " private static int appendTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "signatureAfterChange": " private static int appendTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer, boolean isVarArgs)", "diff": ["-\t\t// need a minimum 1 char", "-\t\tif (start >= string.length) {", "-\t\t\tthrow new IllegalArgumentException();", "+ */", "+private static int appendTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer, boolean isVarArgs) {", "+\t// need a minimum 1 char", "+\tif (start >= string.length) {", "+\t\tthrow new IllegalArgumentException();", "+\t}", "+\tchar c = string[start];", "+\tif (isVarArgs) {", "+\t\tswitch (c) {", "+\t\t\tcase C_ARRAY :", "+\t\t\t\treturn appendArrayTypeSignature(string, start, fullyQualifyTypeNames, buffer, true);", "+\t\t\tcase C_RESOLVED :", "+\t\t\tcase C_UNRESOLVED :", "+\t\t\tcase C_TYPE_VARIABLE :", "+\t\t\tcase C_BOOLEAN :", "+\t\t\tcase C_BYTE :", "+\t\t\tcase C_CHAR :", "+\t\t\tcase C_DOUBLE :", "+\t\t\tcase C_FLOAT :", "+\t\t\tcase C_INT :", "+\t\t\tcase C_LONG :", "+\t\t\tcase C_SHORT :", "+\t\t\tcase C_VOID :", "+\t\t\tcase C_STAR:", "+\t\t\tcase C_EXTENDS:", "+\t\t\tcase C_SUPER:", "+\t\t\tdefault:", "+\t\t\t\tthrow new IllegalArgumentException(); // a var args is an array type", "-\t\tchar c = string[start];", "+\t} else {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f81f3d35e537857af362f8cd9b667440", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "98f0de74a38b5d56ad4c7ad7bb857ae598d48654", "commitAfterChange": "ecaac3d2c5c743a7471099f473eb673438f5a50a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void format()", "signatureAfterChange": " \tprivate void format()", "diff": ["-\t\t\t\t\t\t\t&& !openAndCloseBrace)", "-\t\t\t\t\t\t\tspace();", "+\t\t\t\t\t\t\t&& !openAndCloseBrace) {", "+\t\t\t\t\t\t\t\tif (previousCompilableToken == TokenNameRPAREN) {", "+\t\t\t\t\t\t\t\t\tswitch(token) {", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameIdentifier :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameDoubleLiteral :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameIntegerLiteral :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameFloatingPointLiteral :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameStringLiteral :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameCharacterLiteral :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameLongLiteral :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamenew :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamethis :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamesuper :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameboolean :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamebyte :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamechar :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameint :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamelong :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNameshort :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamedouble :", "+\t\t\t\t\t\t\t\t\t\tcase TokenNamefloat :", "+\t\t\t\t\t\t\t\t\t\t\tif (options.isAddindSpaceInCastExpression()) {", "+\t\t\t\t\t\t\t\t\t\t\t\tspace();", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\tspace();", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tspace();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}], "num": 38289}