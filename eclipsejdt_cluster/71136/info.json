{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a52f31e37f90c840dd84ff3798c8d732", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e140dd4f7142bd95de60a6bd29a6d44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "7500727de4fcd9463cbf3fa6897680f7408a210c", "commitAfterChange": "b857987e664cb278638647fdea307afe81b34f28", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tProcessorEnvImpl env, \t\t\tIProgressMonitor progressMonitor) \tthrows CoreException", "signatureAfterChange": " \tpublic FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tProcessorEnvImpl env, \t\t\tIProgressMonitor progressMonitor) \tthrows CoreException", "diff": ["-\t\t\t\t\tis.reset();", "+\t\t\t\t\tif (is != null) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tis.close();", "+\t\t\t\t\t\t} ", "+\t\t\t\t\t\tcatch (IOException ioe) ", "+\t\t\t\t\t\t{}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f59342a2a7a0a37661c799ae9ce1272", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TestPessimisticProvider.java", "commitBeforeChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "commitAfterChange": "daf5838d3d0821f2a9be5ad5ca1a17918617a63a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic IStatus validateSave(IFile file)", "signatureAfterChange": "  \tpublic IStatus validateSave(IFile file)", "diff": ["-\t\t\tfile.setReadOnly(false);", "+\t\t\ttry {", "+\t\t\t\tsetReadOnly(file, false);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t\treturn e.getStatus();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad8f3f3b30d41ed7ede2c1e641e25ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "05ca87fa79cdcdbf8adddd11b0044e5bbc381076", "commitAfterChange": "1a08d829c1b17811d102043c26cfbba0a6765570", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean call()", "signatureAfterChange": "  \tpublic boolean call()", "diff": ["+\t\t\ttry {", "+\t\t\t\tif (this.fileManager != null) {", "+\t\t\t\t\tthis.fileManager.flush();", "+\t\t\t\t}", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// ignore", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f69198433ad31ee1e08c3bb592f5383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/VerifyTests.java", "commitBeforeChange": "988db3ec863dadeb2db80ab85efafc59fca27d63", "commitAfterChange": "bba7694c48471620eaabd1cb9ca1daab01462bcd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t\tpublic void run()", "signatureAfterChange": " \t\t\tpublic void run()", "diff": ["-\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\te1.printStackTrace();", "+\t\t\t\ttry {", "+\t\t\t\t\tout.flush();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\te.printStackTrace();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5382c6601e1ee60ac21ff9bdee231e9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "5d2539586eb52d651dc634d7ec387aa789cda914", "commitAfterChange": "0ac13cb75eb92a33e1c42045c6cf1b2e0f401eaa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\tpublic boolean execute(IProgressMonitor progress)", "signatureAfterChange": " \t\tpublic boolean execute(IProgressMonitor progress)", "diff": ["-\t\t\tstartJob();", "-\t\t\tsuspend();", "+\t\t\tthis.startingSem.release();", "+\t\t\ttry {", "+\t\t\t\tthis.runningSem.acquire(MAX_WAIT);", "+\t\t\t} catch (TimeOutException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t}"]}], "num": 71136}