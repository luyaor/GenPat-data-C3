{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c86087637ec9453f124cf12f97a072c1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01516cca9a46f64e2e686d693af62ce4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "bd18d68777c58ceeb387f1e95a381b5ed66e87ca", "commitAfterChange": "d46ae5068b0714a5ab659842d2655702483f78d9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public char[] getSourceName()", "signatureAfterChange": " public char[] getSourceName()", "diff": ["-\tif (this.sourceName != null) ", "+\tif (this.sourceName != null)", "-\t", "-\tthis.sourceName = getInnerSourceName(); // member or local scenario", "-\tif (this.sourceName == null) {", "-\t\tchar[] name = getName(); // extract from full name", "+", "+\tchar[] name = getInnerSourceName(); // member or local scenario", "+\tif (name == null) {", "+\t\tname = getName(); // extract from full name", "-\t\t\tstart = CharOperation.indexOf('$', name, CharOperation.lastIndexOf('/', name) + 1) + 1;\t\t\t", "+\t\t\tstart = CharOperation.indexOf('$', name, CharOperation.lastIndexOf('/', name) + 1) + 1;", "-\t\t\tstart = CharOperation.lastIndexOf('/', name) + 1;\t\t\t", "+\t\t\tstart = CharOperation.lastIndexOf('/', name) + 1;", "-\t\tif (start == 0) {", "-\t\t\tthis.sourceName = name;", "-\t\t} else {", "-\t\t\tthis.sourceName = new char[name.length - start];", "-\t\t\tSystem.arraycopy(name, start, this.sourceName, 0, this.sourceName.length);", "-\t\t}\t", "+\t\tif (start > 0) {", "+\t\t\tname = new char[name.length - start];", "+\t\t\tSystem.arraycopy(name, start, name, 0, name.length);", "+\t\t}", "-\treturn this.sourceName;\t", "+\treturn this.sourceName = name;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3300e710fdae050ca8812f4f534367bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "38faf3efd9d7a9e66ede29f2210a34a5031698a0", "commitAfterChange": "102c35a2a8562c276abba3a19ac61f3d18639af8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tString fileName = new String(binaryType.getFileName()); // file name is used to recreate the Java element, so it has to be the .class file name", "-\t\t\t\t\t\t\tsourceUnit = new BasicCompilationUnit(sourceString.toCharArray(), Util.toCharArrays(packageFragment.names), fileName, this.project);", "+\t\t\t\t\t\t\t// file name is used to recreate the Java element, so it has to be the toplevel .class file name", "+\t\t\t\t\t\t\tchar[] fileName = binaryType.getFileName();", "+\t\t\t\t\t\t\tint firstDollar = CharOperation.indexOf('$', fileName);", "+\t\t\t\t\t\t\tif (firstDollar != -1) {", "+\t\t\t\t\t\t\t\tchar[] suffix = SuffixConstants.SUFFIX_class;", "+\t\t\t\t\t\t\t\tint suffixLength = suffix.length;", "+\t\t\t\t\t\t\t\tchar[] newFileName = new char[firstDollar + suffixLength];", "+\t\t\t\t\t\t\t\tSystem.arraycopy(fileName, 0, newFileName, 0, firstDollar);", "+\t\t\t\t\t\t\t\tSystem.arraycopy(suffix, 0, newFileName, firstDollar, suffixLength);", "+\t\t\t\t\t\t\t\tfileName = newFileName;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tsourceUnit = new BasicCompilationUnit(sourceString.toCharArray(), Util.toCharArrays(packageFragment.names), new String(fileName), this.project);"]}], "num": 49323}