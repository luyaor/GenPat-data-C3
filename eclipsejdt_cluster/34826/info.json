{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f81e4f9e925543c27756a02f338b88a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36d69c9a260f6c1ed22739159b1b624f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["+\tif (fOutputLocation == null) {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NULL_PATH);\r", "+\t}\r", "+\t\r", "+\tif (fOutputLocation.isAbsolute()) {\r", "+\t\tIProject project = ((IJavaProject) fElementsToProcess[0]).getProject();\r", "+\r", "+\t\tif (project.getFullPath().isPrefixOf(fOutputLocation)) {\r", "+\t\t\t//project relative path\r", "+\t\t\tString projectName = fOutputLocation.segment(0);\r", "+\t\t\tif (!projectName.equals(fElementsToProcess[0].getElementName())) {\r", "+\t\t\t\t//a workspace relative path outside of this project\r", "+\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.PATH_OUTSIDE_PROJECT, fOutputLocation);\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DEVICE_PATH, fOutputLocation);\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn new JavaModelStatus(IJavaModelStatusConstants.RELATIVE_PATH, fOutputLocation);\r", "+\t}\r", "+\r", "-\treturn JavaConventions.validateClasspath((IJavaProject) fElementsToProcess[0], classpath, fOutputLocation);\r", "+\r", "+\t// check if any source entries coincidates with binary output - in which case nesting inside output is legal\r", "+\tboolean allowNestingInOutput = false;\r", "+\tboolean hasSource = false;\r", "+\tfor (int i = 0 ; i < classpath.length; i++) {\r", "+\t\tif (classpath[i].getEntryKind() == IClasspathEntry.CPE_SOURCE) hasSource = true;\r", "+\t\tif (classpath[i].getPath().equals(fOutputLocation)){\r", "+\t\t\tallowNestingInOutput = true;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\tif (!hasSource) allowNestingInOutput = true; // if no source, then allowed\r", "+\r", "+\t// check all entries\r", "+\tfor (int i = 0 ; i < classpath.length; i++) {\r", "+\t\tIClasspathEntry entry = classpath[i];\r", "+\t\tIPath entryPath = entry.getPath();\r", "+\r", "+\t\t// no further check if entry coincidates with project or output location\r", "+\t\tif (entryPath.equals(projectPath)) continue;\r", "+\t\tif (entryPath.equals(fOutputLocation)) continue;\r", "+\t\t\r", "+\t\t// prevent nesting output location inside entry\r", "+\t\tif (entryPath.isPrefixOf(fOutputLocation)) {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, fOutputLocation);\r", "+\t\t}\r", "+\r", "+\t\t// prevent nesting entry inside output location - when distinct from project or a source folder\r", "+\t\tif (!allowNestingInOutput && fOutputLocation.isPrefixOf(entryPath)) {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, fOutputLocation);\r", "+\t\t}\r", "+\t}\r", "+\treturn JavaModelStatus.VERIFIED_OK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcc0cbb2a6d44697659a2e01aee255fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["+\tif (fOutputLocation == null) {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NULL_PATH);\r", "+\t}\r", "+\t\r", "+\tif (fOutputLocation.isAbsolute()) {\r", "+\t\tIProject project = ((IJavaProject) fElementsToProcess[0]).getProject();\r", "+\r", "+\t\tif (project.getFullPath().isPrefixOf(fOutputLocation)) {\r", "+\t\t\t//project relative path\r", "+\t\t\tString projectName = fOutputLocation.segment(0);\r", "+\t\t\tif (!projectName.equals(fElementsToProcess[0].getElementName())) {\r", "+\t\t\t\t//a workspace relative path outside of this project\r", "+\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.PATH_OUTSIDE_PROJECT, fOutputLocation);\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DEVICE_PATH, fOutputLocation);\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn new JavaModelStatus(IJavaModelStatusConstants.RELATIVE_PATH, fOutputLocation);\r", "+\t}\r", "+\r", "-\treturn JavaConventions.validateClasspath((IJavaProject) fElementsToProcess[0], classpath, fOutputLocation);\r", "+\r", "+\t// check if any source entries coincidates with binary output - in which case nesting inside output is legal\r", "+\tboolean allowNestingInOutput = false;\r", "+\tboolean hasSource = false;\r", "+\tfor (int i = 0 ; i < classpath.length; i++) {\r", "+\t\tif (classpath[i].getEntryKind() == IClasspathEntry.CPE_SOURCE) hasSource = true;\r", "+\t\tif (classpath[i].getPath().equals(fOutputLocation)){\r", "+\t\t\tallowNestingInOutput = true;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\tif (!hasSource) allowNestingInOutput = true; // if no source, then allowed\r", "+\r", "+\t// check all entries\r", "+\tfor (int i = 0 ; i < classpath.length; i++) {\r", "+\t\tIClasspathEntry entry = classpath[i];\r", "+\t\tIPath entryPath = entry.getPath();\r", "+\r", "+\t\t// no further check if entry coincidates with project or output location\r", "+\t\tif (entryPath.equals(projectPath)) continue;\r", "+\t\tif (entryPath.equals(fOutputLocation)) continue;\r", "+\t\t\r", "+\t\t// prevent nesting output location inside entry\r", "+\t\tif (entryPath.isPrefixOf(fOutputLocation)) {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, fOutputLocation);\r", "+\t\t}\r", "+\r", "+\t\t// prevent nesting entry inside output location - when distinct from project or a source folder\r", "+\t\tif (!allowNestingInOutput && fOutputLocation.isPrefixOf(entryPath)) {\r", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, fOutputLocation);\r", "+\t\t}\r", "+\t}\r", "+\treturn JavaModelStatus.VERIFIED_OK;\r"]}], "num": 34826}