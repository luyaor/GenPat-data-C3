{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb022d1902c3fed212cef6acb7652649", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0038b06471ee80df89ea6770a0909f40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "6665973e9a36116a8cb24b7143317e47a83a98f0", "commitAfterChange": "305123b230bcfd1f733969b7cd2c687b75857ff0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tIJavaProject javaProject, \t\t\tList classpaths, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap options, \t\t\tWorkingCopyOwner owner, \t\t\tint flags, \t\t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tIJavaProject javaProject, \t\t\tList classpaths, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap options, \t\t\tWorkingCopyOwner owner, \t\t\tint flags, \t\t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tfinal int problemCount = unit.compilationResult.problemCount;", "-\t\t\t\tif (problemCount != 0) {", "-\t\t\t\t\tunitDeclaration.compilationResult.problems = new CategorizedProblem[problemCount];", "-\t\t\t\t\tSystem.arraycopy(unit.compilationResult.problems, 0, unitDeclaration.compilationResult.problems, 0, problemCount);", "-\t\t\t\t\tunitDeclaration.compilationResult.problemCount = problemCount;", "+\t\t\t\tif (unit != null) {", "+\t\t\t\t\tfinal int problemCount = unit.compilationResult.problemCount;", "+\t\t\t\t\tif (problemCount != 0) {", "+\t\t\t\t\t\tunitDeclaration.compilationResult.problems = new CategorizedProblem[problemCount];", "+\t\t\t\t\t\tSystem.arraycopy(unit.compilationResult.problems, 0, unitDeclaration.compilationResult.problems, 0, problemCount);", "+\t\t\t\t\t\tunitDeclaration.compilationResult.problemCount = problemCount;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (resolver.abortProblem != null) {", "+\t\t\t\t\tunitDeclaration.compilationResult.problemCount = 1;", "+\t\t\t\t\tunitDeclaration.compilationResult.problems = new CategorizedProblem[] { resolver.abortProblem };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d01319a6dd1230bac665ee15c375fd33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "45da29fec046b4bab81c695f4ab7b327659ef75f", "commitAfterChange": "a81195ff09b3e00d1785645fd080f14d3c2692cf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchType, \t\tSwitchStatement switchStatement)", "signatureAfterChange": "  \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchType, \t\tSwitchStatement switchStatement)", "diff": ["+\t\tif (constantExpression == null) {", "+\t\t\t// remember the default case into the associated switch statement", "+\t\t\tif (switchStatement.defaultCase != null)", "+\t\t\t\tscope.problemReporter().duplicateDefaultCase(this);", "+\t", "+\t\t\t// on error the last default will be the selected one .... (why not) ....\t", "+\t\t\tswitchStatement.defaultCase = this;", "+\t\t\treturn null;", "+\t\t}", "-\t\tif (caseType == null || switchType == null)", "-\t\t\treturn null;", "+\t\tif (caseType == null || switchType == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f8816fdcd5b9755980f091da82b6de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "6683040b5609c1d7dafc847899f24b15efcf2c86", "commitAfterChange": "2959d75e7376899a54fb3d20caece27cfc2642ae", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\t\t\t", "+\t\t\t\t\t\t// check for deprecated receiver type", "+\t\t\t\t\t\t// deprecation check for receiver type if not first token", "+\t\t\t\t\t\tif (indexOfFirstFieldBinding > 1) {", "+\t\t\t\t\t\t\tif (isTypeUseDeprecated(this.actualReceiverType, scope))", "+\t\t\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.actualReceiverType, this);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t", "-\t\t\t\t\t//deprecated test"]}], "num": 8484}