{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d234fff07b7491f88bc56ee1ef0252f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f18e5782773d2acad5d0f34477b532c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "c9e3f7ac10c4939465e6b1ff5b31b313cfe67791", "commitAfterChange": "37f9e28e78a2f90a7ad1571b5144e0b1d1fda973", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeClass(IPath projectPath, String className, String expectingOutput, String expectedError)", "signatureAfterChange": " \tprotected void executeClass(IPath projectPath, String className, String expectingOutput, String expectedError)", "diff": ["-\t\tassertTrue(\"unexpected error\", actualError.indexOf(expectedError) != -1);", "+\t\tassertTrue(\"unexpected error : \" + actualError + \" expected : \" + expectedError, actualError.indexOf(expectedError) != -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6fcd46ee61ac7156a608ffb944ecd21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuilderTests.java", "commitBeforeChange": "640820d78ee0410cf9fcb57eb9fe8c2d56063905", "commitAfterChange": "ef65bf83ab84e01d5e02e1dffd704e6b1e6f3a5b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void executeClass( \t\tIPath projectPath, \t\tString className, \t\tString expectingOutput, \t\tString expectedError)", "signatureAfterChange": " \tprotected void executeClass( \t\tIPath projectPath, \t\tString className, \t\tString expectingOutput, \t\tString expectedError)", "diff": ["-\t\tassertTrue(\"unexpected output\", actualOutput.indexOf(expectingOutput) != -1); //$NON-NLS-1$", "+\t\tassertTrue(\"unexpected output :\" + actualOutput + \" expected: \" + expectingOutput, actualOutput.indexOf(expectingOutput) != -1); //$NON-NLS-1$"]}], "num": 72038}