{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b20c6d3c75a6b1e11c7d7b0fba311bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f6b57fc279a35f98f775fa3c746ef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "055cf2299e246e07310e3c00069174f749475bd4", "commitAfterChange": "ee49c8f1081c02bdb311590036980191aff6a2f1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "signatureAfterChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "diff": ["-\t\t\t\tif (solutions == null) ", "-\t\t\t\t\tcontinue; // play safe, but shouldn't happen in a resolved context", "+\t\t\t\tif (solutions == null) {", "+\t\t\t\t\tif (binding instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\t\t\tInferenceContext18 innerCtx = innerMessage.getInferenceContext((ParameterizedGenericMethodBinding) binding);", "+\t\t\t\t\t\tif (innerCtx != null && !binding.isValidBinding()) {", "+\t\t\t\t\t\t\tif (innerMessage instanceof MessageSend)", "+\t\t\t\t\t\t\t\tinnerCtx.scope.problemReporter().invalidMethod((MessageSend) innerMessage, binding);", "+\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\tinnerCtx.scope.problemReporter().invalidConstructor(inner, binding);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue; // inner inference not requested -> not a problem", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfec87df7ece60aea0a6a6382407d370", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "299c63114977fb41c44f086c7b4cf110448a0c23", "commitAfterChange": "e7fead4adac4e5d682bbdf8cb7aaa3f524aab927", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "signatureAfterChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "diff": ["+\t// confer MessageSend.checkAgainstFinalTargetType(,,):", "+\tif (this.binding instanceof ParameterizedGenericMethodBinding) {", "+\t\tInferenceContext18 ctx = getInferenceContext((ParameterizedMethodBinding) this.binding);", "+\t\tif (ctx != null && ctx.stepCompleted < InferenceContext18.TYPE_INFERRED) {", "+\t\t\tthis.typeExpected = targetType;", "+\t\t\tMethodBinding updatedBinding = ctx.inferInvocationType(this, (ParameterizedGenericMethodBinding) this.binding);", "+\t\t\tif (updateBindings(updatedBinding, targetType)) {", "+\t\t\t\tASTNode.resolvePolyExpressionArguments(this, updatedBinding, scope);", "+\t\t\t}", "+\t\t}", "+\t}", "-\t\t// also: should this trigger any propagation to inners, too?", "-\treturn super.checkAgainstFinalTargetType(targetType, scope);", "+\treturn this.resolvedType;"]}], "num": 3791}