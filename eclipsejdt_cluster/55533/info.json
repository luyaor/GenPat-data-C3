{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b804cafc0d040b6b949695c2286e0a5b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623fb16a605e9c1dd39579e3f89e971a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "fe48af891d730b5d6dd7118c0e88b60766aa4a6a", "commitAfterChange": "210b89134044d06a70fa2c472f5e9a859c41ba00", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void storeDimension(PrintStream[] logStreams, String[] comments, Statistics statistics, int index)", "signatureAfterChange": "  \tprivate void storeDimension(PrintStream[] logStreams, String[] comments, Statistics statistics, int index)", "diff": ["-\t    \tSystem.out.println(\"\tWARNING: \"+DIM_NAMES[index]+\" error is over \"+ERROR_STRING+\"%: \"+this.d2Format.format(stddev)+\"/sqrt(\"+count+\")=\"+ this.percentFormat.format(error/average));", "-\t    \tcomments[index] = \"err=\" + this.percentFormat.format(error/average);", "+\t    \tSystem.out.println(\"\tWARNING: \"+DIM_NAMES[index]+\" error is over \"+ERROR_STRING+\"%: \"+d2Format.format(stddev)+\"/sqrt(\"+count+\")=\"+ percentFormat.format(error/average));", "+\t    \tcomments[index] = \"err=\" + percentFormat.format(error/average);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa52cf03f6dded88d82b53fde63d0da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void verifyNamePositions(int nameStart, Name name, char[] source)", "signatureAfterChange": " \tprivate void verifyNamePositions(int nameStart, Name name, char[] source)", "diff": ["-\t\t\tassumeEquals(this.prefix+\"Misplaced or wrong name for qualified name: \"+name, str, qualified.getName().toString());", "+\t\t\tassumeEquals(prefix+\"Misplaced or wrong name for qualified name: \"+name, str, qualified.getName().toString());", "-\t\t\tassumeEquals(this.prefix+\"Misplaced name for qualified name: \", str, name.toString());", "+\t\t\tassumeEquals(prefix+\"Misplaced name for qualified name: \", str, name.toString());", "-\t\t\tSystem.out.println(this.prefix+\"Name contains new line for qualified name: \"+name);", "+\t\t\tSystem.out.println(prefix+\"Name contains new line for qualified name: \"+name);"]}], "num": 55533}