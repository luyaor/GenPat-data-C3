{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42e2a97f03f1a8a50f4ea5ae7baf2077", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18e80011afcad86f432ca4b2fb103af6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test034()", "signatureAfterChange": " \tpublic void test034()", "diff": ["-\t\t\t\"1. ERROR in B.java (at line 3)\\n\" + ", "+\t\t\t\"1. WARNING in B.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface I<E extends Comparable> { void test(E element); }\\n\" + ", "+\t\t\t\"\t                      ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in B.java (at line 3)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in B.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class B extends A implements I<Integer> { public void test(Comparable i) {} }\\n\" + ", "+\t\t\t\"\t                                                                  ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in B.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class B extends A { public void test(Comparable i) {} }\\n\" + ", "+\t\t\t\"\t                                            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "-\t\t\t\"1. ERROR in B.java (at line 3)\\n\" + ", "+\t\t\t\"1. WARNING in B.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class AA<E extends Comparable> { abstract void test(E element); }\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in B.java (at line 3)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in B.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class B extends A { public void test(Comparable i) {} }\\n\" + ", "+\t\t\t\"\t                                            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0e294e0f00e897c0fd604218679aafa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 439, "methodNumberAfterChange": 439, "signatureBeforeChange": " \tpublic void test435()", "signatureAfterChange": " \tpublic void test435()", "diff": ["-\t\t\t\"1. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\r\\n\" + ", "+\t\t\t\"1. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\n\" + ", "-\t\t\t\"2. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\r\\n\" + ", "+\t\t\t\"3. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic Comparable previous(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t                           ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in orders\\\\impl\\\\IntegerOrder2.java (at line 14)\\n\" + ", "+\t\t\t\"\tpublic Comparable next(Comparable arg0) {\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}], "num": 12338}