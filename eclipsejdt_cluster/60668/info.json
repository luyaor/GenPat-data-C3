{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e6ac782cade9d975dfbe5f44c23161a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685210eb44ca12c530e83985d6dd66b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tfinal TokenScanner getScanner()", "signatureAfterChange": "  \tfinal TokenScanner getScanner()", "diff": ["-\t\t\tIScanner scanner= ToolFactory.createScanner(true, false, false, false);", "+\t\t\tCompilerOptions compilerOptions = new CompilerOptions(this.options);", "+\t\t\tScanner scanner;", "+\t\t\tif (this.recoveryScannerData == null) {", "+\t\t\t\tscanner = ", "+\t\t\t\t\tnew Scanner(", "+\t\t\t\t\t\t\ttrue,/*tokenizeComments*/", "+\t\t\t\t\t\t\tfalse,/*tokenizeWhiteSpace*/", "+\t\t\t\t\t\t\tfalse,/*checkNonExternalizedStringLiterals*/", "+\t\t\t\t\t\t\tcompilerOptions.sourceLevel,", "+\t\t\t\t\t\t\tcompilerOptions.complianceLevel,", "+\t\t\t\t\t\t\tnull/*taskTags*/,", "+\t\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\t\ttrue/*taskCaseSensitive*/);", "+\t\t\t} else {", "+\t\t\t\tscanner =", "+\t\t\t\t\tnew RecoveryScanner(", "+\t\t\t\t\t\t\tfalse,/*tokenizeWhiteSpace*/", "+\t\t\t\t\t\t\tfalse,/*checkNonExternalizedStringLiterals*/", "+\t\t\t\t\t\t\tcompilerOptions.sourceLevel,", "+\t\t\t\t\t\t\tcompilerOptions.complianceLevel,", "+\t\t\t\t\t\t\tnull/*taskTags*/,", "+\t\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\t\ttrue/*taskCaseSensitive*/,", "+\t\t\t\t\t\t\tthis.recoveryScannerData);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf46cc6af3f2589784a3b6239b0a258f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "287a8246425dec3b8e6cdd428f661326776e45cd", "commitAfterChange": "058b7e49b52c7b18f15a01083d7620b3d5aa8490", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void acceptLocalVariable(LocalVariableBinding binding, CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": " public void acceptLocalVariable(LocalVariableBinding binding)", "diff": ["-public void acceptLocalVariable(LocalVariableBinding binding, CompilationUnitDeclaration parsedUnit) {", "-\tIJavaElement localVar = this.handleFactory.createElement(binding.declaration, parsedUnit, this.openable);", "+}", "+public void acceptLocalVariable(LocalVariableBinding binding) {", "+\tLocalDeclaration local = binding.declaration;", "+\tIJavaElement parent = findLocalElement(local.sourceStart); // findLocalElement() cannot find local variable", "+\tIJavaElement localVar = null;", "+\tif(parent != null) {", "+\t\tlocalVar = new LocalVariable(", "+\t\t\t\t(JavaElement)parent, ", "+\t\t\t\tnew String(local.name), ", "+\t\t\t\tlocal.declarationSourceStart,", "+\t\t\t\tlocal.declarationSourceEnd,", "+\t\t\t\tlocal.sourceStart,", "+\t\t\t\tlocal.sourceEnd,", "+\t\t\t\tUtil.typeSignature(local.type));", "+\t}"]}], "num": 60668}