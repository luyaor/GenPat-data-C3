{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0915693eb0012d33590602826723d979", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a794baf343101919c674b72d0fcfaa14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tprotected JavaElement(int type, IJavaElement parent, String name)\r \t\tthrows IllegalArgumentException", "signatureAfterChange": "\r protected JavaElement(int type, IJavaElement parent, String name) throws IllegalArgumentException", "diff": ["-\t */\r", "-\tprotected JavaElement(int type, IJavaElement parent, String name)\r", "-\t\tthrows IllegalArgumentException {\r", "-\t\tif (type < JAVA_MODEL || type > IMPORT_DECLARATION) {\r", "-\t\t\tthrow new IllegalArgumentException(\"type is not one of the defined constants\");\r", "-\t\t}\r", "-\t\tfLEType = type;\r", "-\t\tfParent = parent;\r", "-\t\tfName = name;\r", "+ */\r", "+protected JavaElement(int type, IJavaElement parent, String name) throws IllegalArgumentException {\r", "+\tif (type < JAVA_MODEL || type > IMPORT_DECLARATION) {\r", "+\t\tthrow new IllegalArgumentException(Util.bind(\"element.invalidType\"/*nonNLS*/));\r", "+\tfLEType= type;\r", "+\tfParent= parent;\r", "+\tfName= name;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d667cd7a33350c4b13262969bb6cfed2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tpublic void setLoadFactor(double newLoadFactor)\r \t\tthrows IllegalArgumentException", "signatureAfterChange": "\r public void setLoadFactor(double newLoadFactor) throws IllegalArgumentException", "diff": ["-\t */\r", "-\tpublic void setLoadFactor(double newLoadFactor)\r", "-\t\tthrows IllegalArgumentException {\r", "-\t\tif (newLoadFactor <= 1.0 && newLoadFactor > 0.0)\r", "-\t\t\tfLoadFactor = newLoadFactor;\r", "-\t\telse\r", "-\t\t\tthrow new IllegalArgumentException(\"incorrect load factor\");\r", "-\t}\r", "+ */\r", "+public void setLoadFactor(double newLoadFactor) throws IllegalArgumentException {\r", "+\tif(newLoadFactor <= 1.0 && newLoadFactor > 0.0)\r", "+\t\tfLoadFactor = newLoadFactor;\r", "+\telse\r", "+\t\tthrow new IllegalArgumentException(Util.bind(\"cache.invalidLoadFactor\"/*nonNLS*/));\r", "+}\r"]}], "num": 72886}