{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "414194065209b3e890d362729717d72a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d9323efea653baf515d36a34312a24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "333e183ebe56f659f1083c452edbf2ef4089fa56", "commitAfterChange": "f09e5b387a9b27a1161db6587b5598aa2acd37a0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\tint methodLevel = matchMethod(method);", "+\tboolean skipVerif = this.pattern.findDeclarations && this.mayBeGeneric;", "+\tint methodLevel = matchMethod(method, skipVerif);", "-\t\tif (method != method.original()) methodLevel = matchMethod(method.original());", "+\t\tif (method != method.original()) methodLevel = matchMethod(method.original(), skipVerif);", "-\t\t\tif (this.pattern.findDeclarations && this.pattern.mustResolveGeneric) {", "-\t\t\t\tmethodLevel = matchOverriddenMethod(method.declaringClass);", "-\t\t\t}", "-\t\t\tif (methodLevel == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;", "+\t\t\treturn IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3c392a2fd63aaa8e6b2592979e66c99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "985d711c4d0025a5a5339070a94d4c12c56e272f", "commitAfterChange": "976958dd8f78f6a588e6f87c0884e364c261d98d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\t\tif (methodLevel == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;", "-\t\tmethod = method.original();", "+\t\tif (methodLevel == IMPOSSIBLE_MATCH) {", "+\t\t\tif (this.pattern.findDeclarations && this.pattern.mustResolveGeneric) {", "+\t\t\t\tmethodLevel = matchOverriddenMethod(method.declaringClass);", "+\t\t\t}", "+\t\t\tif (methodLevel == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;", "+\t\t} else {", "+\t\t\tmethod = method.original();", "+\t\t}"]}], "num": 51405}