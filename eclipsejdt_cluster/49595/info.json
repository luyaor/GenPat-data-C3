{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dacdc5d754bce50d2ce1f55c065d7b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "039777f022f3e92d3934fdf3fd2aa459", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public void test022() throws JavaModelException", "signatureAfterChange": "  public void test022() throws JavaModelException", "diff": ["+\t\t\"/**\\n\" + ", "+\t\t\" * Completion after: @link BasicTestTextIns\\n\" + ", "+\t\t\" */\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\t/**\\n\" + ", "-\t\t\"\t * Completion after: @link BasicTestTextIns\\n\" + ", "-\t\t\"\t */\\n\" + ", "-\tcompleteInJavadoc(\"/Completion/src/javadoc/text/BasicTestTextIns.java\", source, true, \"BasicTestTextIns\", 2); // 2nd occurence", "+\tcompleteInJavadoc(\"/Completion/src/javadoc/text/BasicTestTextIns.java\", source, true, \"BasicTestTextIns\");", "-\t\t\"BasicTestTextInsException[JAVADOC_TYPE_REF]{{@link BasicTestTextInsException }, javadoc.text, Ljavadoc.text.BasicTestTextInsException;, null, null, \"+this.positions+(51+R_INLINE_TAG)+\"}\\n\" + ", "-\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns }, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+(25+R_INLINE_TAG)+\"}\\n\" +", "-\t\t\"BasicTestTextInsException[TYPE_REF]{BasicTestTextInsException, javadoc.text, Ljavadoc.text.BasicTestTextInsException;, null, null, \"+this.positions+\"51}\\n\" + ", "-\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+\"25}\"", "+\t\t\"BasicTestTextIns[JAVADOC_TYPE_REF]{{@link BasicTestTextIns }, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+(R_DICENUNR+R_INLINE_TAG)+\"}\\n\" +", "+\t\t\"BasicTestTextInsException[JAVADOC_TYPE_REF]{{@link BasicTestTextInsException }, javadoc.text, Ljavadoc.text.BasicTestTextInsException;, null, null, \"+this.positions+R_DICUNRIT+\"}\\n\" + ", "+\t\t\"BasicTestTextIns[TYPE_REF]{BasicTestTextIns, javadoc.text, Ljavadoc.text.BasicTestTextIns;, null, null, \"+this.positions+R_DICENUNR+\"}\\n\" +", "+\t\t\"BasicTestTextInsException[TYPE_REF]{BasicTestTextInsException, javadoc.text, Ljavadoc.text.BasicTestTextInsException;, null, null, \"+this.positions+R_DICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d31c1432ac38164275383336d2503d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "7a4894572c8dc97616c8aa59652842aae37320e6", "commitAfterChange": "328c06fa136c963530115a367863b6a931384871", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testModifiers3()", "signatureAfterChange": " \tpublic void testModifiers3()", "diff": ["-\t\t\t\"Illegal modifier for the interface method foo1; only public & abstract are permitted\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo1; only public, abstract, default, static and strictfp are permitted\\n\" + ", "-\t\t\t\"Illegal modifier for the interface method foo3; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo3; only public, abstract, default, static and strictfp are permitted\\n\" + ", "-\t\t\t\"Illegal modifier for the interface method foo4; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo4; only public, abstract, default, static and strictfp are permitted\\n\" + ", "-\t\t\t\"Illegal modifier for the interface method foo5; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"Illegal combination of modifiers for the interface method foo5; only one of abstract, default, or static permitted\\n\" + ", "-\t\t\t\"Illegal modifier for the interface method foo6; only public, abstract and strictfp are permitted\\n\" + ", "+\t\t\t\"Illegal combination of modifiers for the interface method foo6; only one of abstract, default, or static permitted\\n\" + "]}], "num": 49595}