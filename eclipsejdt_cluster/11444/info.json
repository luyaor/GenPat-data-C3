{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0025e474c9492fae32944536f4c7c01", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4666d01b2ebd10428891faf9a3831ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testBug73336c() throws CoreException", "signatureAfterChange": " \tpublic void testBug73336c() throws CoreException", "diff": ["-\t\tICompilationUnit[] workingCopies = new ICompilationUnit[4];", "-\t\ttry {", "-\t\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\t\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/A.java\",", "-\t\t\t\t\"package b73336c;\\n\" + ", "-\t\t\t\t\"public class A {}\\n\",", "-\t\t\t\towner", "-\t\t\t\t);", "-\t\t\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/B.java\",", "-\t\t\t\t\"package b73336c;\\n\" + ", "-\t\t\t\t\"public class B extends X<A, A> {\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue);", "-\t\t\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/C.java\",", "-\t\t\t\t\"package b73336c;\\n\" + ", "-\t\t\t\t\"public class C implements X<A, A>.Interface<A>  {\\n\" + ", "-\t\t\t\t\"\tvoid bar() {}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue);", "-\t\t\tworkingCopies[3] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/X.java\",", "-\t\t\t\t\"package b73336c;\\n\" + ", "-\t\t\t\t\"public class X<T, U> {\\n\" + ", "-\t\t\t\t\"\tinterface Interface<V> {\\n\" + ", "-\t\t\t\t\"\t\tvoid bar();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue\t);", "-\t\t\t// search for first and second method should both return 2 inaccurate matches", "-\t\t\tIType type = workingCopies[0].getType(\"A\");", "-\t\t\tsearch(type,", "-\t\t\t\tREFERENCES,", "-\t\t\t\tgetJavaSearchScopeBugs(\"b73336c\", false), ", "-\t\t\t\tthis.resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b73336c/B.java b73336c.B [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336c/B.java b73336c.B [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336c/C.java b73336c.C [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336c/C.java b73336c.C [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336c/C.java b73336c.C [A] EXACT_MATCH\"", "-\t\t\t);", "-\t\t}", "-\t\tfinally {", "-\t\t\tdiscardWorkingCopies(workingCopies);", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[4];", "+\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/A.java\",", "+\t\t\t\"package b73336c;\\n\" + ", "+\t\t\t\"public class A {}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/B.java\",", "+\t\t\t\"package b73336c;\\n\" + ", "+\t\t\t\"public class B extends X<A, A> {\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/C.java\",", "+\t\t\t\"package b73336c;\\n\" + ", "+\t\t\t\"public class C implements X<A, A>.Interface<A>  {\\n\" + ", "+\t\t\t\"\tvoid bar() {}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[3] = getWorkingCopy(\"/JavaSearchBugs/src/b73336c/X.java\",", "+\t\t\t\"package b73336c;\\n\" + ", "+\t\t\t\"public class X<T, U> {\\n\" + ", "+\t\t\t\"\tinterface Interface<V> {\\n\" + ", "+\t\t\t\"\t\tvoid bar();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue\t);", "+\t\t// search for first and second method should both return 2 inaccurate matches", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+//\t\tsearch(type, REFERENCES, getJavaSearchScopeBugs(\"b73336c\", false));", "+\t\tsearch(type, REFERENCES); //, getJavaSearchScopeBugs(\"b73336\", false));", "+\t\tassertSearchResults(", "+\t\t\t\"src/b73336c/B.java b73336c.B [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336c/B.java b73336c.B [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336c/C.java b73336c.C [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336c/C.java b73336c.C [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336c/C.java b73336c.C [A] EXACT_MATCH\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e05c4d20f00c4b94fedca4245b64b709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void testBug73336b() throws CoreException", "signatureAfterChange": " \tpublic void testBug73336b() throws CoreException", "diff": ["-\t\tICompilationUnit[] workingCopies = new ICompilationUnit[4];", "-\t\ttry {", "-\t\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\t\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/A.java\",", "-\t\t\t\t\"package b73336b;\\n\" + ", "-\t\t\t\t\"public class A {}\\n\",", "-\t\t\t\towner", "-\t\t\t\t);", "-\t\t\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/B.java\",", "-\t\t\t\t\"package b73336b;\\n\" + ", "-\t\t\t\t\"public class B extends X<A, A> {\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue);", "-\t\t\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/C.java\",", "-\t\t\t\t\"package b73336b;\\n\" + ", "-\t\t\t\t\"public class C extends X<A, A>.Member<A> {\\n\" + ", "-\t\t\t\t\"\tpublic C() {\\n\" + ", "-\t\t\t\t\"\t\tnew X<A, A>().super();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue);", "-\t\t\tworkingCopies[3] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/X.java\",", "-\t\t\t\t\"package b73336b;\\n\" + ", "-\t\t\t\t\"public class X<T, U> {\\n\" + ", "-\t\t\t\t\"\t<V> void foo(V v) {}\\n\" + ", "-\t\t\t\t\"\tclass Member<T> {\\n\" + ", "-\t\t\t\t\"\t\tvoid foo() {}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\towner,", "-\t\t\t\ttrue\t);", "-\t\t\t// search for first and second method should both return 2 inaccurate matches", "-\t\t\tIType type = workingCopies[0].getType(\"A\");", "-\t\t\tsearch(type,", "-\t\t\t\tREFERENCES,", "-\t\t\t\tgetJavaSearchScopeBugs(\"b73336b\", false), ", "-\t\t\t\tthis.resultCollector);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b73336b/B.java b73336b.B [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336b/B.java b73336b.B [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336b/C.java b73336b.C [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336b/C.java b73336b.C [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336b/C.java b73336b.C [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336b/C.java b73336b.C() [A] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b73336b/C.java b73336b.C() [A] EXACT_MATCH\"", "-\t\t\t);", "-\t\t}", "-\t\tfinally {", "-\t\t\tdiscardWorkingCopies(workingCopies);", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[4];", "+\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/A.java\",", "+\t\t\t\"package b73336b;\\n\" + ", "+\t\t\t\"public class A {}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[1] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/B.java\",", "+\t\t\t\"package b73336b;\\n\" + ", "+\t\t\t\"public class B extends X<A, A> {\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[2] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/C.java\",", "+\t\t\t\"package b73336b;\\n\" + ", "+\t\t\t\"public class C extends X<A, A>.Member<A> {\\n\" + ", "+\t\t\t\"\tpublic C() {\\n\" + ", "+\t\t\t\"\t\tnew X<A, A>().super();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue);", "+\t\tworkingCopies[3] = getWorkingCopy(\"/JavaSearchBugs/src/b73336b/X.java\",", "+\t\t\t\"package b73336b;\\n\" + ", "+\t\t\t\"public class X<T, U> {\\n\" + ", "+\t\t\t\"\t<V> void foo(V v) {}\\n\" + ", "+\t\t\t\"\tclass Member<T> {\\n\" + ", "+\t\t\t\"\t\tvoid foo() {}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\towner,", "+\t\t\ttrue\t);", "+\t\t// search for first and second method should both return 2 inaccurate matches", "+\t\tIType type = workingCopies[0].getType(\"A\");", "+//\t\tsearch(type, REFERENCES, getJavaSearchScopeBugs(\"b73336b\", false));", "+\t\tsearch(type, REFERENCES); //, getJavaSearchScopeBugs(\"b73336\", false));", "+\t\tassertSearchResults(", "+\t\t\t\"src/b73336b/B.java b73336b.B [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336b/B.java b73336b.B [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336b/C.java b73336b.C [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336b/C.java b73336b.C [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336b/C.java b73336b.C [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336b/C.java b73336b.C() [A] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b73336b/C.java b73336b.C() [A] EXACT_MATCH\"", "+\t\t);"]}], "num": 11444}