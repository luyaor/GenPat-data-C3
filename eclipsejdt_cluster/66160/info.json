{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a2dc6ddd186b38a5cf71691834c2341", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aee0119d6d25f7a2bf1cfb5d5254bd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "90c4f87ff9590171c32b9a9ab9aa13acdfe2086c", "commitAfterChange": "1317e9ebe26807b45d83a46701194241e6f648d5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t// get buffer factory\r", "-\tBufferManager bufManager = getBufferManager();\r", "-\tIBufferFactory factory = \r", "-\t\tthis.bufferFactory == null ? \r", "-\t\t\tbufManager.getDefaultBufferFactory() :\r", "-\t\t\tthis.bufferFactory;\r", "-\t\t\t\r", "-\tIBuffer buffer = factory.createBuffer(this);\r", "-\tbufManager.addBuffer(buffer);\r", "+\tIBuffer buffer = this.bufferFactory.createBuffer(this);\r", "+\tthis.getBufferManager().addBuffer(buffer);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65641dc9f490a0f791f854ad77b103d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "0d04687b56af18c0d3597efa62c9f67d3fdc3a51", "commitAfterChange": "d471673792c33710d43ba989e7727f72f37f7860", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " private IBuffer mapSource(SourceMapper mapper, IBinaryType info)", "signatureAfterChange": " private IBuffer mapSource(SourceMapper mapper, IBinaryType info)", "diff": ["-\t\t", "+", "-\t\t", "+", "-\t\tbuffer.addBufferChangedListener(this);\t", "-\t\t\t\t", "+\t\tbuffer.addBufferChangedListener(this);", "+", "-\t\t", "+", "+\t\treturn buffer;", "+\t} else {", "+\t\t// create buffer", "+\t\tIBuffer buffer = BufferManager.createNullBuffer(this);", "+\t\tif (buffer == null) return null;", "+\t\tBufferManager bufManager = getBufferManager();", "+\t\tbufManager.addBuffer(buffer);", "+", "+\t\t// listen to buffer changes", "+\t\tbuffer.addBufferChangedListener(this);", "-\treturn null;"]}], "num": 66160}