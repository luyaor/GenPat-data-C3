{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3094cab83f7fbb679e89093d4b4ab76b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d34f3e761dd56866431862cbb62356b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "be945f896dfe94a8d4114819ea1c2afbe987ee6b", "commitAfterChange": "f7a4fed5e12ddd792bfd11e8778f8c9b3112f624", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration enumDeclaration, \t\t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration enumDeclaration, \t\t\tCompilationUnitScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.isSemiColon()) {", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.isSemiColon()) {", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d216a08b07fc54ec1ace2eb82ada54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "64151d299c94cd994364e344797612fa2bd1a461", "commitAfterChange": "87afee9399abda7dff755456c24d9246af8651dd", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\tif (isSemiColon()) {", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "-\t\t\tthis.scribe.printNewLine();", "-\t\t}", "+\t\tint blankLineBetweenTypeDeclarations = this.preferences.blank_lines_between_type_declarations;", "-\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t\tif (isSemiColon()) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\tif (blankLineBetweenTypeDeclarations != 0) {", "+\t\t\t\t\tthis.scribe.printEmptyLines(blankLineBetweenTypeDeclarations);", "+\t\t\t\t} else {", "-\t\t}", "-\t\tif (isSemiColon()) {", "-\t\t\tthis.scribe.printNewLine();", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "-\t\t\tthis.scribe.printNewLine();"]}], "num": 62803}