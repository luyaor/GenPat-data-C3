{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6513b7ca5d93cdafff364a914b88d782", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20080eff461aaa279287a75967e86188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\t            return pathname.isDirectory() || pathname.getPath().endsWith(\".java\");", "+\t\t\t\tString path = pathname.getPath();", "+\t\t\t\tboolean accept = pathname.isDirectory() || path.endsWith(\".java\");", "+\t\t\t\tif (accept) {", "+\t\t\t\t\tswitch (FILES_FILTER_KIND) {", "+\t\t\t\t\t\tcase 1: // Equals", "+\t\t\t\t\t\t\taccept = path.equals(FILES_FILTER);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 2: // Starts with", "+\t\t\t\t\t\t\taccept = path.startsWith(FILES_FILTER);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 3: // Starts with + same length", "+\t\t\t\t\t\t\taccept = path.startsWith(FILES_FILTER) && path.length() == FILES_FILTER.length();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 4: // Pattern", "+\t\t\t\t\t\t\taccept = path.matches(FILES_FILTER);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn accept;", "-\t\tbuffer.append(\"Comparison: \"+CAN_COMPARE);", "-\t\tbuffer.append(LINE_SEPARATOR);", "+\t\tbuffer.append(\"Compare vs: \");", "+\t\tif (CAN_COMPARE) {", "+\t\t\tif (clean) {", "+\t\t\t\tbuffer.append(JDT_CORE_VERSION);", "+\t\t\t} else {", "+\t\t\t\tFile versionFile = new File(OUTPUT_DIR, \"version.txt\");", "+\t\t\t\tif (versionFile.exists()) {", "+\t\t\t\t\tbuffer.append(Util.fileContent(versionFile.getAbsolutePath()));", "+\t\t\t\t} else {", "+\t\t\t\t\tbuffer.append(\"???\");", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tbuffer.append(\"none\");", "+\t\t}", "+//\t\tbuffer.append(LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5258b12623d7429ad454a9cbf7e4dfa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "dc9db9c22a51b01cfbe75b8acac7c7a000432f1b", "commitAfterChange": "d0c43348882f3d54a8f979ccfa7fbd36fd3e1b36", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\t\t\t\tboolean accept = pathname.isDirectory() || path.endsWith(\".java\");", "-\t\t\t\tif (accept) {", "-\t\t\t\t\tswitch (FILES_FILTER_KIND) {", "-\t\t\t\t\t\tcase 1: // Equals", "-\t\t\t\t\t\t\taccept = path.equals(FILES_FILTER);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 2: // Starts with", "-\t\t\t\t\t\t\taccept = path.startsWith(FILES_FILTER);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 3: // Starts with + same length", "-\t\t\t\t\t\t\taccept = path.startsWith(FILES_FILTER) && path.length() == FILES_FILTER.length();", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 4: // Pattern", "-\t\t\t\t\t\t\taccept = path.matches(FILES_FILTER);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\tif (pathname.isDirectory()) {", "+\t\t\t\t\tString dirName = path.substring(path.lastIndexOf(File.separatorChar)+1);", "+\t\t\t\t\treturn !dirName.equals(\"bin\");", "+\t\t\t\t}", "+\t\t\t\tif (path.endsWith(\".java\")) {", "+\t\t\t\t\tif (FILES_FILTER_KIND > 0) {", "+\t\t\t\t\t\tString fileName = path.substring(path.lastIndexOf(File.separatorChar)+1);", "+\t\t\t\t\t\tswitch (FILES_FILTER_KIND) {", "+\t\t\t\t\t\t\tcase 1: // Equals", "+\t\t\t\t\t\t\t\treturn fileName.equals(FILES_FILTER);", "+\t\t\t\t\t\t\tcase 2: // Starts with", "+\t\t\t\t\t\t\t\treturn fileName.startsWith(FILES_FILTER);", "+\t\t\t\t\t\t\tcase 3: // Starts with + same length", "+\t\t\t\t\t\t\t\treturn fileName.startsWith(FILES_FILTER) && fileName.length() == FILES_FILTER.length();", "+\t\t\t\t\t\t\tcase 4: // Pattern", "+\t\t\t\t\t\t\t\treturn fileName.matches(FILES_FILTER);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn true;", "-\t\t\t\treturn accept;", "+\t\t\t\treturn false;"]}], "num": 56371}