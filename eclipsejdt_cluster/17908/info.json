{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "389f66be32a1a0a18e1df5f5a6b56f24", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ab0f868e7694a018a763959a0c41f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2f12a5295b6777dd565c4f2976cdf05dda8b968b", "commitAfterChange": "161af7fbcd3da7eae08b0772a6e9520634a306f1", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \t \tprivate void computeExpectedTypesForMessageSendForInterface( \t\tReferenceBinding binding, \t\tchar[] selector, \t\tExpression[] arguments, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean isStatic)", "signatureAfterChange": " \t \tprivate void computeExpectedTypesForMessageSendForInterface( \t\tReferenceBinding binding, \t\tchar[] selector, \t\tExpression[] arguments, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean isStatic)", "diff": ["-\t\t\t", "+\t\t\tSimpleSet interfacesSeen = new SimpleSet(itsInterfaces.length * 2);", "+", "-\t\t\t\t\tif ((currentType.tagBits & TagBits.InterfaceVisited) == 0) {", "+\t\t\t\t\tif (!interfacesSeen.includes(currentType)) {", "-\t\t\t\t\t\tcurrentType.tagBits |= TagBits.InterfaceVisited;", "-\t", "+\t\t\t\t\t\tinterfacesSeen.add(currentType);", "+", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "-\t\t\t// bit reinitialization", "-\t\t\tfor (int i = 0; i <= lastPosition; i++) {", "-\t\t\t\tReferenceBinding[] interfaces = interfacesToVisit[i];", "-", "-\t\t\t\tfor (int j = 0, length = interfaces.length; j < length; j++){", "-\t\t\t\t\tinterfaces[j].tagBits &= ~TagBits.InterfaceVisited;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "628a6b5b225504aa3b5fa8fd4475c1a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2f12a5295b6777dd565c4f2976cdf05dda8b968b", "commitAfterChange": "161af7fbcd3da7eae08b0772a6e9520634a306f1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tprivate void findInterfacesMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "signatureAfterChange": "  \tprivate void findInterfacesMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed)", "diff": ["-\t\t\t", "+\t\t\tSimpleSet interfacesSeen = new SimpleSet(itsInterfaces.length * 2);", "+", "-\t\t\t\t\tif ((currentType.tagBits & TagBits.InterfaceVisited) == 0) {", "+\t\t\t\t\tif (!interfacesSeen.includes(currentType)) {", "-\t\t\t\t\t\tcurrentType.tagBits |= TagBits.InterfaceVisited;", "+\t\t\t\t\t\tinterfacesSeen.add(currentType);", "-\t\t\t\t}", "-\t\t\t}", "-", "-\t\t\t// bit reinitialization", "-\t\t\tfor (int i = 0; i <= lastPosition; i++) {", "-\t\t\t\tReferenceBinding[] interfaces = interfacesToVisit[i];", "-", "-\t\t\t\tfor (int j = 0, length = interfaces.length; j < length; j++){", "-\t\t\t\t\tinterfaces[j].tagBits &= ~TagBits.InterfaceVisited;"]}], "num": 17908}