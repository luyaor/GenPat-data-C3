{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caf6878200e2e1b8dd3f103d5943eb07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7de62032a37515b3a5e335937fca862b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "commitAfterChange": "4c0128f8b7916766f71600c5a09deeca3606acf9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance)", "signatureAfterChange": "\r public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance, boolean delegatedByParent)", "diff": ["+ */\r", "+public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance, boolean delegatedByParent) {\r", "-\t/* do not consider a local variable starting passed the block end (if set)\r", "+\t/* local variables inside method can only be final and non void */\r", "+/*\t\r", "+\tchar[][] localTypeName; \r", "+\tif ((localDeclaration.modifiers & ~AccFinal) != 0 // local var can only be final \r", "+\t\t|| (localDeclaration.type == null) // initializer\r", "+\t\t|| ((localTypeName = localDeclaration.type.getTypeName()).length == 1 // non void\r", "+\t\t\t&& CharOperation.equals(localTypeName[0], VoidBinding.sourceName()))){ \r", "+\r", "+\t\tif (delegatedByParent){\r", "+\t\t\treturn this; //ignore\r", "+\t\t} else {\r", "+\t\t\tthis.updateSourceEndIfNecessary(this.previousAvailableLineEnd(localDeclaration.declarationSourceStart - 1));\r", "+\t\t\treturn this.parent.add(localDeclaration, bracketBalance);\r", "+\t\t}\r", "+\t}\r", "+*/\t\r", "+\t\t/* do not consider a local variable starting passed the block end (if set)\r", "-\t\treturn this.parent.add(localDeclaration, bracketBalance);\r", "+\r", "+\t\tif (delegatedByParent){\r", "+\t\t\treturn this; //ignore\r", "+\t\t} else {\r", "+\t\t\treturn this.parent.add(localDeclaration, bracketBalance);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9acd0ae33fa33301b69da4681e64d6f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "commitAfterChange": "4c0128f8b7916766f71600c5a09deeca3606acf9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance)", "signatureAfterChange": "\r public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalance)", "diff": ["+\t/* local variables inside method can only be final and non void */\r", "+/*\t\r", "+\tchar[][] localTypeName; \r", "+\tif ((localDeclaration.modifiers & ~AccFinal) != 0 // local var can only be final \r", "+\t\t|| (localDeclaration.type == null) // initializer\r", "+\t\t|| ((localTypeName = localDeclaration.type.getTypeName()).length == 1 // non void\r", "+\t\t\t&& CharOperation.equals(localTypeName[0], VoidBinding.sourceName()))){ \r", "+\r", "+\t\tif (this.parent == null){\r", "+\t\t\treturn this; // ignore\r", "+\t\t} else {\r", "+\t\t\tthis.updateSourceEndIfNecessary(this.previousAvailableLineEnd(localDeclaration.declarationSourceStart - 1));\r", "+\t\t\treturn this.parent.add(localDeclaration, bracketBalance);\r", "+\t\t}\r", "+\t}\r", "+*/\r", "-\t/* method body should have been created */\r", "-\tBlock block = new Block(0);\r", "-\tblock.sourceStart = methodDeclaration.bodyStart;\r", "-\tRecoveredElement element = this.add(block, 1);\r", "-\treturn element.add(localDeclaration, bracketBalance);\t\r", "+\tif (methodBody == null){\r", "+\t\tBlock block = new Block(0);\r", "+\t\tblock.sourceStart = methodDeclaration.bodyStart;\r", "+\t\tthis.add(block, 1);\r", "+\t}\r", "+\treturn methodBody.add(localDeclaration, bracketBalance, true);\r"]}], "num": 12866}