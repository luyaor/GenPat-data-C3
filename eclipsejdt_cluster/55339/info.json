{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89339f2fc4743bb68a8481b094707995", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ac1376ddfcccb5af4c34e366f3f616", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BaseAnnotationProcessorManager.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@Override \tpublic void processAnnotations(CompilationUnitDeclaration[] units, boolean isLastRound)", "signatureAfterChange": " \t@Override \tpublic void processAnnotations(CompilationUnitDeclaration[] units, BinaryTypeBinding[] binaryTypeBindings, boolean isLastRound)", "diff": ["-\tpublic void processAnnotations(CompilationUnitDeclaration[] units, boolean isLastRound) {", "-\t\tRoundEnvImpl roundEnv = new RoundEnvImpl(units, isLastRound, _processingEnv);", "+\tpublic void processAnnotations(CompilationUnitDeclaration[] units, BinaryTypeBinding[] binaryTypeBindings, boolean isLastRound) {", "+\t\tRoundEnvImpl roundEnv = new RoundEnvImpl(units, binaryTypeBindings, isLastRound, _processingEnv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58d58bdb5ea80ea19019edad073da47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \t \tpublic static Set<AnnotationProcessorFactory> runAPTDuringBuild( \t\t\tICompilationParticipantResult[] filesWithAnnotations,  \t\t\tAptProject aptProject,  \t\t\tMap<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tSet<AnnotationProcessorFactory> dispatchedBatchFactories, \t\t\tboolean isFullBuild)", "signatureAfterChange": " \t \t \tpublic static Set<AnnotationProcessorFactory> runAPTDuringBuild( \t\t\tICompilationParticipantResult[] filesWithAnnotations,  \t\t\tICompilationParticipantResult[] filesWithoutAnnotations, \t\t\tAptProject aptProject,  \t\t\tMap<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tSet<AnnotationProcessorFactory> dispatchedBatchFactories, \t\t\tboolean isFullBuild)", "diff": ["+\t\t\tICompilationParticipantResult[] filesWithoutAnnotations,", "-\t\t APTDispatchRunnable runnable = new APTDispatchRunnable( filesWithAnnotations, aptProject, factories, dispatchedBatchFactories, isFullBuild );", "+\t\t APTDispatchRunnable runnable = ", "+\t\t\t new APTDispatchRunnable( ", "+\t\t\t\t\t filesWithAnnotations,", "+\t\t\t\t\t filesWithoutAnnotations,", "+\t\t\t\t\t aptProject, factories, ", "+\t\t\t\t\t dispatchedBatchFactories, isFullBuild );"]}], "num": 55339}