{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4436e45528f2849e084e8ff0d5b7f07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f03d1c14b61d69b85460858af82816", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/CommentFormatterUtil.java", "commitBeforeChange": "9fdf60099af5bd70d810793e82261fbcf589311b", "commitAfterChange": "862ae8342a82a200aa8036b2b41fe50ea56f4086", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static String format(int kind, String source, int offset, int length, Map preferences)", "signatureAfterChange": " \tpublic static String format(int kind, String source, int offset, int length, Map preferences)", "diff": ["+\t\tAssert.isNotNull(source);", "+\t\tIDocument document= new Document(source);", "+\t\t", "+\t\ttry {", "+\t\t\tint indentOffset= document.getLineOffset(document.getLineOfOffset(offset));", "+\t\t\tint indentationLevel= inferIndentationLevel(document.get(indentOffset, offset - indentOffset), getTabSize(preferences));", "+\t\t\treturn format(kind, source, offset, length, indentationLevel, preferences);", "+\t\t} catch (BadLocationException x) {", "+\t\t\tthrow new RuntimeException(x);", "+\t\t}", "+\t}", "-\t\ttry {", "-\t\t\tint indentOffset= document.getLineOffset(document.getLineOfOffset(offset));", "-\t\t\tint indentationLevel= inferIndentationLevel(document.get(indentOffset, offset - indentOffset), getTabSize(preferences));", "-\t\t\tedit= ToolFactory.createCodeFormatter(preferences).format(kind, source, offset, length, indentationLevel, TextUtilities.getDefaultLineDelimiter(document));", "-\t\t} catch (BadLocationException x) {", "-\t\t\tthrow new RuntimeException(x);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "635b8edf41173cd0168ae836a7078188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/CommentFormatterUtil.java", "commitBeforeChange": "9fdf60099af5bd70d810793e82261fbcf589311b", "commitAfterChange": "862ae8342a82a200aa8036b2b41fe50ea56f4086", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static String format(int kind, String source, int offset, int length, Map preferences)", "signatureAfterChange": " \tpublic static String format(int kind, String source, int offset, int length, int indentationLevel, Map preferences)", "diff": ["+\t */", "+\tpublic static String format(int kind, String source, int offset, int length, int indentationLevel, Map preferences) {", "-\t\ttry {", "-\t\t\tint indentOffset= document.getLineOffset(document.getLineOfOffset(offset));", "-\t\t\tint indentationLevel= inferIndentationLevel(document.get(indentOffset, offset - indentOffset), getTabSize(preferences));", "-\t\t\tedit= ToolFactory.createCodeFormatter(preferences).format(kind, source, offset, length, indentationLevel, TextUtilities.getDefaultLineDelimiter(document));", "-\t\t} catch (BadLocationException x) {", "-\t\t\tthrow new RuntimeException(x);", "-\t\t}", "+\t\tedit= ToolFactory.createCodeFormatter(preferences).format(kind, source, offset, length, indentationLevel, TextUtilities.getDefaultLineDelimiter(document));"]}], "num": 28061}