{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56c44b182bfc2e9edefff3b439099b95", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158c0eddfb1819e3074a548bb755d4d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "fa4cf904b1d5690e02fc0246dbc8bc14a58e5d04", "commitAfterChange": "4ddddb5424dafb4b8650d4349863e03fece6ac06", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate void disassemble(IMethodParametersAttribute methodParametersAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["+\tprivate void disassemble(IMethodParametersAttribute methodParametersAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "+\t\ttabNumber += 2;", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\tbuffer.append(Messages.disassembler_methodparametersheader);", "+\t\tfor (int i = 0; i < methodParametersAttribute.getMethodParameterLength(); ++i) {", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\tshort accessFlags = methodParametersAttribute.getAccessFlags(i);", "+\t\t\tdecodeModifiersForMethodParameters(buffer, accessFlags);", "+\t\t\tbuffer.append(methodParametersAttribute.getParameterName(i));", "+\t\t}", "+\t}", "-\t\t\tparameterNames = getParameterNames(methodDescriptor, codeAttribute, accessFlags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a25c840b2df08cdb249c5ce4b13033a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "66f0e8b8112bb13bbbf568db765302c9834a0001", "commitAfterChange": "8173bc34d19a76799af83a37be998ec65b3a1874", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   \tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate String disassemble(IVerificationTypeInfo[] infos, String lineSeparator, int tabNumber, int mode)", "diff": ["-", "-\tprivate void disassemble(IStackMapTableAttribute attribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "-\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "-\t\tint numberOfEntries = attribute.getNumberOfEntries();", "-\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader, Integer.toString(numberOfEntries)));", "-\t\tif (numberOfEntries != 0) {", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "-\t\t\tfinal IStackMapFrame[] stackMapFrames = attribute.getStackMapFrame();", "-\t\t\tfor (int i = 0; i < numberOfEntries; i++) {", "-\t\t\t\tdisassemble(stackMapFrames[i], buffer, lineSeparator, tabNumber + 2, mode);", "-\t\t\t}"]}], "num": 12062}