{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6389207fdf9f89be336988af34967975", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ae9cf475965af4070944f61d1bb0f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "a889669f3b6092488da28cece9e17491e979e98b", "commitAfterChange": "169461b0108d10746346c25bcb496c53ad944705", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tIClasspathEntry[] rawClasspath = affectedProject.getRawClasspath();\r", "-\t\t\tfor (int j = 0, cpLength = rawClasspath.length; j <cpLength; j++) {", "-\t\t\t\tIClasspathEntry entry = rawClasspath[j];\r", "-\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER && entry.getPath().equals(containerPath)){\r", "-\t\t\t\t\tfound = true;\r", "-\t\t\t\t\tbreak;\r", "+\t\t\tif (affectedProject.getProject().exists()){\r", "+\t\t\t\tIClasspathEntry[] rawClasspath = affectedProject.getRawClasspath();\r", "+\t\t\t\tfor (int j = 0, cpLength = rawClasspath.length; j <cpLength; j++) {", "+\t\t\t\t\tIClasspathEntry entry = rawClasspath[j];\r", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER && entry.getPath().equals(containerPath)){\r", "+\t\t\t\t\t\tfound = true;\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c515712912e2bf6014298cb4ef73d9d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "f9b52452a6eec9c220cdefd5d9ba6d84c588b191", "commitAfterChange": "86e9af9b4583ab9170462a2bcb720d1f414a2c9f", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  \tprotected URL getJavadocBaseLocation() throws JavaModelException", "signatureAfterChange": "  \tprotected URL getJavadocBaseLocation() throws JavaModelException", "diff": ["-\t\t\tIClasspathEntry entry= root.getRawClasspathEntry();", "-\t\t\tif (entry == null) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER) {", "-\t\t\t\tentry= getRealClasspathEntry(root.getJavaProject(), entry.getPath(), root.getPath());", "-\t\t\t\tif (entry == null) {", "-\t\t\t\t\treturn null;", "+\t\t\tIClasspathEntry entry= null;", "+\t\t\ttry {", "+\t\t\t\tentry= root.getResolvedClasspathEntry();", "+\t\t\t\tURL url = getLibraryJavadocLocation(entry);", "+\t\t\t\tif (url != null) {", "+\t\t\t\t\treturn url;", "-\t\t\treturn getLibraryJavadocLocation(entry);", "+\t\t\tcatch(JavaModelException jme) {", "+\t\t\t\t// Proceed with raw classpath", "+\t\t\t}", "+\t\t\t", "+\t\t\tentry= root.getRawClasspathEntry();", "+\t\t\tswitch (entry.getEntryKind()) {", "+\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:", "+\t\t\t\tcase IClasspathEntry.CPE_VARIABLE:", "+\t\t\t\t\treturn getLibraryJavadocLocation(entry);", "+\t\t\t\tdefault:", "+\t\t\t\t\treturn null;", "+\t\t\t}\t\t\t", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f956573ee0a3d2383b7d7ef6ca5ecf1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["+\t\t\t\t\t\t\tfor (int k = 0, cpLength = classpath.length; k < cpLength; k++){", "+\t\t\t\t\t\t\t\tif (classpath[k].getEntryKind() == IClasspathEntry.CPE_LIBRARY){", "+\t\t\t\t\t\t\t\t\tarchivePathsToRefresh.add(classpath[k].getPath());", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int k = 0, cpLength = classpath.length; k < cpLength; k++){", "-\t\t\t\t\t\t\tif (classpath[k].getEntryKind() == IClasspathEntry.CPE_LIBRARY){", "-\t\t\t\t\t\t\t\tarchivePathsToRefresh.add(classpath[k].getPath());", "-\t\t\t\t\t\t\t}", "-", "+\t\t\t\t\t\t\tjavaProject.resetResolvedClasspath(); // in case it contains a chained jar", "+\t\t\t\t\t\t\tjavaProject.resetResolvedClasspath(); // in case it contains a chained jar", "+\t\t\t\t\t\t\tjavaProject.resetResolvedClasspath(); // in case it contains a chained jar"]}], "num": 13081}