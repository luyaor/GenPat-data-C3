{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bfa6d8d48b482f66be51789a42dd4d6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5babb286d6fd2f57beeeff88c9dee748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ResourceLeakTests.java", "commitBeforeChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "commitAfterChange": "e113fe138f1e4be2f22f54aa73cae2174e2d64a6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test056l()", "signatureAfterChange": " public void test056l()", "diff": ["+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"4. ERROR in X.java (at line 25)\\n\" +", "+\t\t\t\t\"\tnew X(r2).foo(new FileReader(new File(\\\"notthere\\\"))); // potential problem: foo may/may not close the new FileReader\\n\" +", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"Potential resource leak: \\'<unassigned Closeable value>\\' may not be closed\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"2. ERROR in X.java (at line 25)\\n\" +", "+\t\t\t\t\"\tnew X(r2).foo(new FileReader(new File(\\\"notthere\\\"))); // potential problem: foo may/may not close the new FileReader\\n\" +", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"Potential resource leak: \\'<unassigned Closeable value>\\' may not be closed\\n\" +", "-\t\t\t\"        new X(r2).foo(new FileReader(new File(\\\"notthere\\\")));\\n\" +", "+\t\t\t\"        new X(r2).foo(new FileReader(new File(\\\"notthere\\\"))); // potential problem: foo may/may not close the new FileReader\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e870f1a128b6485b567567c07f1e5b00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1231, "methodNumberAfterChange": 1231, "signatureBeforeChange": " public void test1202()", "signatureAfterChange": " public void test1202()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tX.<Zork>foo();\\n\" + ", "+\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\"The method foo() of type X is not generic; it cannot be parameterized with arguments <Zork>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tX.<Zork>foo();\\n\" + ", "+\t\t\t\"\t   ^^^^\\n\" + ", "+\t\t\t\"Unused type arguments for the non generic method foo() of type X; it should not be parameterized with arguments <Zork>\\n\" + "]}], "num": 13590}