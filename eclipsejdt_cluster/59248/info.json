{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8df8371c292607f99cf04e6acdf8bee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c3d5e01ea40971f02da3bb53e35b34c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c7f9539fa0d2c7dd5ba718179636fb1d50eefced", "commitAfterChange": "1de4b4e3b8ec35df71e570f058c8d7726752e872", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void checkExternalArchiveChanges(IJavaElement[] elementsScope, boolean asynchronous, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprivate void checkExternalArchiveChanges(IJavaElement[] elementsScope, boolean asynchronous, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\t\tWorkspaceJob touchJob = new WorkspaceJob(Messages.updating_external_archives_jobName) {", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tpublic IStatus runInWorkspace(IProgressMonitor progressMonitor) throws CoreException {", "-\t\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\t\tif (progressMonitor != null)", "-\t\t\t\t\t\t\t\t\t\tprogressMonitor.beginTask(\"\", projectsToTouch.length); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\ttouchProjects(projectsToTouch, progressMonitor);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tfinally {", "-\t\t\t\t\t\t\t\t\tif (progressMonitor != null)", "-\t\t\t\t\t\t\t\t\t\tprogressMonitor.done();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tpublic boolean belongsTo(Object family) {", "-\t\t\t\t\t\t\t\treturn ResourcesPlugin.FAMILY_MANUAL_REFRESH == family;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "-\t\t\t\t\t\ttouchJob.schedule();", "+\t\t\t\t\t\tthis.manager.touchProjects(projectsToTouch, monitor);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf6509fbc274aeb125a26e5456b9ec08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "69c59f0267102692d57da5d57d379c16633b234c", "commitAfterChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void refreshReferences(IProject source, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void refreshReferences(IProject source, IProgressMonitor monitor)", "diff": ["+\t}", "-\t\t\tfinal Iterator iterator = externalFolders.iterator();", "-\t\t\tJob refreshJob = new Job(Messages.refreshing_external_folders) {", "-\t\t\t\tpublic boolean belongsTo(Object family) {", "-\t\t\t\t\treturn family == ResourcesPlugin.FAMILY_MANUAL_REFRESH;", "-\t\t\t\t}", "-\t\t\t\tprotected IStatus run(IProgressMonitor pm) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\t\t\tIPath externalPath = (IPath) iterator.next();", "-\t\t\t\t\t\t\tIFolder folder = getFolder(externalPath);", "-\t\t\t\t\t\t\tif (folder != null)", "-\t\t\t\t\t\t\t\tfolder.refreshLocal(IResource.DEPTH_INFINITE, pm);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\treturn e.getStatus();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn Status.OK_STATUS;", "-\t\t\t\t}", "-\t\t\t};", "+\t\t\tIterator iterator = externalFolders.iterator();", "+\t\t\t", "+\t\t\tJob refreshJob = new RefreshJob(iterator);"]}], "num": 59248}