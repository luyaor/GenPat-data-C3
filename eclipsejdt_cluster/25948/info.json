{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b547f4bef6887e71e08603f617272784", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893bc985b8f4eec66427cb6ff3f40698", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "commitAfterChange": "1b7cc740dd9297bd0f4bafe7fea18d712058ba6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["+\t\t// set the optimize constant to optimize code gen", "+\t\tif ((initsWhenTrue.tagBits & FlowInfo.UNREACHABLE) != 0) {", "+\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(false);", "+\t\t} else if ((initsWhenFalse.tagBits & FlowInfo.UNREACHABLE) != 0) {", "+\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d414c32a623ef13103a7a26e505e6ef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "cb764d0f635c3538feb2f431a07bf4883bc5e3de", "commitAfterChange": "2fc42eeb502a121cefe1f87a9fd2e92cf7c57bec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["-\t\t// set the optimize constant to optimize code gen", "-\t\tif ((initsWhenTrue.tagBits & FlowInfo.UNREACHABLE) != 0) {", "-\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(false);", "-\t\t} else if ((initsWhenFalse.tagBits & FlowInfo.UNREACHABLE) != 0) {", "-\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(true);", "-\t\t}"]}], "num": 25948}