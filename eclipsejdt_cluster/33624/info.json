{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "635d3963df966865b04f3da5b5c1a6e1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2ab48378fbda71a91ee13bd9925f43d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "2ea79cd27b58b7099f6b996d041a39e3044047e1", "commitAfterChange": "6dbf5570577282e7ba535f7862cbad7c0051d68a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic ASTNode runJLS3Conversion(ICompilationUnit unit, boolean resolveBindings, boolean checkJLS2)", "signatureAfterChange": "  \tpublic ASTNode runJLS3Conversion(ICompilationUnit unit, boolean resolveBindings, boolean checkJLS2)", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS2);", "-\t\tparser.setSource(unit);", "-\t\tparser.setResolveBindings(resolveBindings);", "-\t\tparser.createAST(null);", "+\t\tASTParser parser;", "+\t\tif (checkJLS2) {", "+\t\t\tparser = ASTParser.newParser(AST.JLS2);", "+\t\t\tparser.setSource(unit);", "+\t\t\tparser.setResolveBindings(resolveBindings);", "+\t\t\tparser.createAST(null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f791fbd714cbca1314a4fd0654fe73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "da348589e3fa3fe0a889394dbec5343c317d63e7", "commitAfterChange": "cfb672e66d17bef31f4b5a6058666168ba53b0d0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate static char[][] computeNonBaseTypeNames(char[] sourceName, boolean isConstantField, boolean onlyLongest)", "signatureAfterChange": "  \tprivate static char[][] computeNonBaseTypeNames(char[] sourceName, boolean isConstantField, boolean onlyLongest)", "diff": ["-\t\t\t\t\t\t\tif (i > 0) {", "-\t\t\t\t\t\t\t\tchar pc = sourceName[i - 1];", "-\t\t\t\t\t\t\t\tpreviousCharKind =", "-\t\t\t\t\t\t\t\t\tScannerHelper.isLowerCase(pc) ? IS_LOWER_CASE :", "-\t\t\t\t\t\t\t\t\t\tScannerHelper.isUpperCase(pc) ? IS_UPPER_CASE :", "-\t\t\t\t\t\t\t\t\t\t\tpc == '_' ? IS_UNDERSCORE : IS_OTHER;", "+\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=283539", "+\t\t\t\t\t\t\t// Process consecutive underscores only for constant types ", "+\t\t\t\t\t\t\tif (isConstantField) {", "+\t\t\t\t\t\t\t\tif (i > 0) {", "+\t\t\t\t\t\t\t\t\tchar pc = sourceName[i - 1];", "+\t\t\t\t\t\t\t\t\tpreviousCharKind =", "+\t\t\t\t\t\t\t\t\t\tScannerHelper.isLowerCase(pc) ? IS_LOWER_CASE :", "+\t\t\t\t\t\t\t\t\t\t\tScannerHelper.isUpperCase(pc) ? IS_UPPER_CASE :", "+\t\t\t\t\t\t\t\t\t\t\t\tpc == '_' ? IS_UNDERSCORE : IS_OTHER;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tendIndex = i;", "-\t\t\t\t\t\t\tendIndex = i;", "-\t\t\t\t\t\t\tendIndex = i;", "+\t\t\t\t\t\t\t// Include the '_' also. E.g. My_word -> \"My_\" and \"word\".", "+\t\t\t\t\t\t\tendIndex = i+1;"]}], "num": 33624}