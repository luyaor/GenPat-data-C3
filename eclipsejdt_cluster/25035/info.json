{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c92fc99b56580c7ead6c942679583b0e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7a357af84b62d91b520e2f04ea4c13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "commitAfterChange": "54adf8874a2139df84e504710c736c699ecdc8bd", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  public FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": "  public FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\tASTNode.copySE8AnnotationsToType(initializationScope, field, fieldDecl.annotations);", "+\t\t\t\t\tASTNode.copySE8AnnotationsToType(initializationScope, field, annotations,", "+\t\t\t\t\t\t\tfieldDecl.getKind() != AbstractVariableDeclaration.ENUM_CONSTANT); // type annotation is illegal on enum constant", "-\t\t\t\tAnnotation.isTypeUseCompatible(fieldDecl.type, this.scope, fieldDecl.annotations);", "+\t\t\t\tAnnotation.isTypeUseCompatible(fieldDecl.type, this.scope, annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b748b5a72cf1864516bc61a3f3f37794", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "98ea1cfbf8c156a194d5ecb17a824c89eb12361f", "commitAfterChange": "cdd7d3ab18b0522945b5ad8d6604c424fb55fd11", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\t\tif (sourceLevel >= ClassFileConstants.JDK1_8) {", "-\t\t\t\t\tAnnotationBinding [] annotations = method.getAnnotations();", "-\t\t\t\t\tif (annotations != null && annotations != Binding.NO_ANNOTATIONS) {", "+\t\t\t\tif (sourceLevel >= ClassFileConstants.JDK1_8 && !method.isVoidMethod()) {", "+\t\t\t\t\tAnnotation [] annotations = methodDecl.annotations;", "+\t\t\t\t\tif (annotations != null && annotations.length != 0) {", "+\t\t\t\t\tAnnotation.isTypeUseCompatible(returnType, this.scope, methodDecl.annotations);", "-\t\t\t\tAnnotation.isTypeUseCompatible(returnType, this.scope, methodDecl.annotations);"]}], "num": 25035}