{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa7955a86c43a37c51306558030c9136", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75dc56b8faa2bce044a9db00776b4a02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+", "+public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "+\t// empty block", "+\tif (this.statements == null)\treturn flowInfo;", "+\tint complaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) != 0 ? Statement.COMPLAINED_FAKE_REACHABLE : Statement.NOT_COMPLAINED;", "+\tfor (int i = 0, max = this.statements.length; i < max; i++) {", "+\t\tStatement stat = this.statements[i];", "+\t\tif ((complaintLevel = stat.complainIfUnreachable(flowInfo, this.scope, complaintLevel)) < Statement.COMPLAINED_UNREACHABLE) {", "+\t\t\tflowInfo = stat.analyseCode(this.scope, flowContext, flowInfo);", "+\t\t}", "-", "-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-", "-\t\t// empty block", "-\t\tif (this.statements == null)\treturn flowInfo;", "-\t\tboolean didAlreadyComplain = false;", "+\treturn flowInfo;", "+}", "-\t\t\tStatement stat = this.statements[i];", "-\t\t\tif (!stat.complainIfUnreachable(flowInfo, this.scope, didAlreadyComplain)) {", "-\t\t\t\tflowInfo = stat.analyseCode(this.scope, flowContext, flowInfo);", "-\t\t\t} else {", "-\t\t\t\tdidAlreadyComplain = true;", "-\t\t\t}", "-\t\treturn flowInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862cdd6274e764f3d1d644650d6aaa5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\t\tBlockScope currentScope,", "-\t\t\tFlowContext flowContext,", "-\t\t\tFlowInfo flowInfo) {", "-", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "-\t\t\tthis.preSwitchInitStateIndex =", "-\t\t\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+\t\t\tthis.preSwitchInitStateIndex = currentScope.methodScope().recordInitializationStates(flowInfo);", "-\t\t\t\tboolean didAlreadyComplain = false;", "+\t\t\t\tint initialComplaintLevel = (flowInfo.reachMode() & FlowInfo.UNREACHABLE) != 0 ? Statement.COMPLAINED_FAKE_REACHABLE : Statement.NOT_COMPLAINED;", "+\t\t\t\tint complaintLevel = initialComplaintLevel;", "-\t\t\t\t\t\tdidAlreadyComplain = false; // reset complaint", "+\t\t\t\t\t\tcomplaintLevel = initialComplaintLevel; // reset complaint", "-\t\t\t\t\t\tdidAlreadyComplain = false; // reset complaint", "+\t\t\t\t\t\tcomplaintLevel = initialComplaintLevel; // reset complaint", "-\t\t\t\t\tif (!statement.complainIfUnreachable(caseInits, this.scope, didAlreadyComplain)) {", "+\t\t\t\t\tif ((complaintLevel = statement.complainIfUnreachable(caseInits, this.scope, complaintLevel)) < Statement.COMPLAINED_UNREACHABLE) {", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tdidAlreadyComplain = true;", "-\t\t\t\tflowInfo.addPotentialInitializationsFrom(", "-\t\t\t\t\tcaseInits.mergedWith(switchContext.initsOnBreak));", "-\t\t\t\tthis.mergedInitStateIndex =", "-\t\t\t\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+\t\t\t\tflowInfo.addPotentialInitializationsFrom(caseInits.mergedWith(switchContext.initsOnBreak));", "+\t\t\t\tthis.mergedInitStateIndex = currentScope.methodScope().recordInitializationStates(flowInfo);"]}], "num": 62108}