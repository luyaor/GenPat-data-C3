{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fe8f794c58b023faf74997de888f3a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99640f2c6b46de1da1ca6f467188766d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "cbd48da7303f20fe27c3bb57f06cce9208a1cb77", "commitAfterChange": "46aba7a0faa3c2ef72f6a161b3ec052803ab1a41", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\t// TODO (kent) - if ((this.bits & ASTNode.IsSuperType) != 0)", "-\t\t\t\tif (isClassScope)", "+\t\t\t\tif ((this.bits & ASTNode.IsSuperType) != 0)", "-   \t\t\t    if ((this.bits & ASTNode.IsSuperType) != 0)", "-   \t\t\t    \tif (((ClassScope) scope).detectCycle(currentType, this, null))", "-   \t\t\t    \t\treturn null;", "-   \t\t\t    if (currentType.isGenericType()) { // check raw type", "+\t\t\t\tif ((this.bits & ASTNode.IsSuperType) != 0)", "+\t\t\t\t\tif (((ClassScope) scope).detectCycle(currentType, this, null))", "+\t\t\t\t\t\treturn null;", "+", "+\t\t\t\tif (currentType.isGenericType()) { // check raw type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3fd0afad94c3966fc19529959f72ecf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeParameter.java", "commitBeforeChange": "2f99f11ed182db13b52f83c7f61547c34d00226d", "commitAfterChange": "7089fcfd703b096f125599a900905c00e15535fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void getAllAnnotationContexts(int targetType, int typeParameterIndex, List allAnnotationContexts)", "signatureAfterChange": "  \tpublic void getAllAnnotationContexts(int targetType, int typeParameterIndex, List allAnnotationContexts)", "diff": ["-\t\tif (this.type != null && ((this.type.bits & ASTNode.HasTypeAnnotations) != 0)) {", "-\t\t\tcollector.info2 = 0;", "-\t\t\tthis.type.traverse(collector, (BlockScope) null);", "+\t\tint boundIndex = 0;", "+\t\tif (this.type != null) {", "+\t\t\t// boundIndex 0 is always a class", "+\t\t\tif (this.type.resolvedType.isInterface())", "+\t\t\t\tboundIndex = 1;", "+\t\t\tif ((this.type.bits & ASTNode.HasTypeAnnotations) != 0) {", "+\t\t\t\tcollector.info2 = boundIndex;", "+\t\t\t\tthis.type.traverse(collector, (BlockScope) null);", "+\t\t\t}", "-\t\t\t\tcollector.info2 = i + 1;", "+\t\t\t\tcollector.info2 = ++boundIndex;"]}], "num": 61266}