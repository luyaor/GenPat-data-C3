{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d412c8b0267894cf28809285bac87e6d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43bf775fc44b1886f3114908a3f3d828", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic MethodBinding[] methods()", "signatureAfterChange": " \tpublic MethodBinding[] methods()", "diff": ["-\t\tif ((tagBits & AreMethodsComplete) == 0) {", "-\t\t\ttry {", "-\t\t\t    MethodBinding[] originalMethods = this.type.methods();", "-\t\t\t    int length = originalMethods.length;", "-\t\t\t    MethodBinding[] parameterizedMethods = new MethodBinding[length];", "-\t\t\t    for (int i = 0; i < length; i++)", "-\t\t\t    \t// substitute all methods, so as to get updated declaring class at least", "-\t\t            parameterizedMethods[i] = createParameterizedMethod(originalMethods[i]);", "-\t\t\t    this.methods = parameterizedMethods;", "-\t\t\t} finally {", "-\t\t\t\t// if the original methods cannot be retrieved (ex. AbortCompilation), then assume we do not have any methods", "-\t\t\t    if (this.methods == null) ", "-\t\t\t        this.methods = NoMethods;", "-\t", "-\t\t\t\ttagBits |=  AreMethodsComplete;", "-\t\t\t}\t\t", "-\t\t}", "+\t\tif ((tagBits & AreMethodsComplete) != 0)", "+\t\t\treturn this.methods;", "+", "+\t\ttry {", "+\t\t    MethodBinding[] originalMethods = this.type.methods();", "+\t\t    int length = originalMethods.length;", "+\t\t    MethodBinding[] parameterizedMethods = new MethodBinding[length];", "+\t\t    for (int i = 0; i < length; i++)", "+\t\t    \t// substitute all methods, so as to get updated declaring class at least", "+\t            parameterizedMethods[i] = createParameterizedMethod(originalMethods[i]);", "+\t\t    this.methods = parameterizedMethods;", "+\t\t} finally {", "+\t\t\t// if the original methods cannot be retrieved (ex. AbortCompilation), then assume we do not have any methods", "+\t\t    if (this.methods == null) ", "+\t\t        this.methods = NoMethods;", "+", "+\t\t\ttagBits |=  AreMethodsComplete;", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf3e154d28ee5cc98bbd9e684b9f90f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic FieldBinding[] fields()", "signatureAfterChange": " \tpublic FieldBinding[] fields()", "diff": ["-\t\tif ((tagBits & AreFieldsComplete) == 0) {", "-\t\t\ttry {", "-\t\t\t\tFieldBinding[] originalFields = this.type.fields();", "-\t\t\t\tint length = originalFields.length;", "-\t\t\t\tFieldBinding[] parameterizedFields = new FieldBinding[length];", "-\t\t\t\tfor (int i = 0; i < length; i++)", "-\t\t\t\t\t// substitute all fields, so as to get updated declaring class at least", "-\t\t\t\t\tparameterizedFields[i] = new ParameterizedFieldBinding(this, originalFields[i]);", "-\t\t\t\tthis.fields = parameterizedFields;\t    ", "-\t\t\t} finally {", "-\t\t\t\t// if the original fields cannot be retrieved (ex. AbortCompilation), then assume we do not have any fields", "-\t\t\t\tif (this.fields == null) ", "-\t\t\t\t\tthis.fields = NoFields;", "-\t\t\t\ttagBits |= AreFieldsComplete;", "-\t\t\t}", "+\t\tif ((tagBits & AreFieldsComplete) != 0)", "+\t\t\treturn this.fields;", "+", "+\t\ttry {", "+\t\t\tFieldBinding[] originalFields = this.type.fields();", "+\t\t\tint length = originalFields.length;", "+\t\t\tFieldBinding[] parameterizedFields = new FieldBinding[length];", "+\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\t// substitute all fields, so as to get updated declaring class at least", "+\t\t\t\tparameterizedFields[i] = new ParameterizedFieldBinding(this, originalFields[i]);", "+\t\t\tthis.fields = parameterizedFields;\t    ", "+\t\t} finally {", "+\t\t\t// if the original fields cannot be retrieved (ex. AbortCompilation), then assume we do not have any fields", "+\t\t\tif (this.fields == null) ", "+\t\t\t\tthis.fields = NoFields;", "+\t\t\ttagBits |= AreFieldsComplete;"]}], "num": 31095}