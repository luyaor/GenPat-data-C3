{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc78e1c13b6c00586fffc3ed204f0a05", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad051ba36cd575fe84764ba3bbd53dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "\t \tpublic void test0078()", "signatureAfterChange": "\t \tpublic void test0078()", "diff": ["+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX x = new X((A)null, (A)null);\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX x = new X((A)null, (A)null);\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tA a = new A((A)null);\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"10. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"11. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"9. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"12. ERROR in X.java (at line 13)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7dc313282138ddc7b81dabd13057af2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic void test112()", "signatureAfterChange": " \tpublic void test112()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>{\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.MX.MMX is a raw type. References to generic type X<T>.MX<MT>.MMX<MMT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid foo(X<Thread>.MX<String>.MMX<X> mx) {}\\n\" + ", "+\t\t\t\"\t                                  ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>{\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.MX.MMX is a raw type. References to generic type X<T>.MX<MT>.MMX<MMT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass MX <MT extends Comparable> {\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X <T extends X<X.MX.MMX>.MX<Runnable>.MMX<Iterable<String>>>{\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.MX.MMX is a raw type. References to generic type X<T>.MX<MT>.MMX<MMT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass MMX <MMT extends Comparable> {}\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c56f5e37a78c4ba231f75f9dc272e586", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "\t \tpublic void test078()", "signatureAfterChange": "\t \tpublic void test078()", "diff": ["+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX x = new X((A)null, (A)null);\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX x = new X((A)null, (A)null);\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tA a = new A((A)null);\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tA a = new A((A)null);\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tA a = new A((A)null);\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"10. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"11. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"12. ERROR in X.java (at line 13)\\n\" + "]}], "num": 5468}