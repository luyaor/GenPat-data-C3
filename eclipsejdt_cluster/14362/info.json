{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cc8b4a15daa66687b2a3d9c6727e6e9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0cffaa8ecbe087948d46cd326041d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "87ae141af8fce3aef7e67ba02676b958a112fef6", "commitAfterChange": "5a6216b5646e4800b580b6acc994e6adb1594c6f", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": " \tpublic void test076a()", "signatureAfterChange": " \tpublic void test076a()", "diff": ["-\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" +", "-\t\t\t\"\t<T, S extends J & I<T>> void foo() { }\\r\\n\" +", "+\t\t\t\"1. ERROR in A.java (at line 2)\\n\" +", "+\t\t\t\"\t<T, S extends J & I<T>> void foo() { }\\n\" +", "-\t\t\t\"2. ERROR in A.java (at line 3)\\r\\n\" +", "-\t\t\t\"\t<T, S extends I<T> & J> void foo() { }\\r\\n\" +", "+\t\t\t\"2. ERROR in A.java (at line 3)\\n\" +", "+\t\t\t\"\t<T, S extends I<T> & J> void foo() { }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7272c2048e67f4ab1211eb167dfd33f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testJavadocMethodArgReference() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocMethodArgReference() throws CoreException", "diff": ["-\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"AnnSearched.java\").getType(\"AnnSearched\");", "-\t\tIMethod method = type.getMethod(\"annSearchedMethod\", new String[] { \"QString;\" });", "+\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"JavadocSearched.java\").getType(\"JavadocSearched\");", "+\t\tIMethod method = type.getMethod(\"javadocSearchedMethod\", new String[] { \"QString;\" });", "-\t\t\t\t\"src/j1/AnnValidRef.java void j1.AnnValidRef.valid() [annSearchedMethod] EXACT_MATCH\",", "+\t\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [javadocSearchedMethod] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37cbd205b5c0a07c4c0ffb14ddddb2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testBug83127f()", "signatureAfterChange": " \tpublic void testBug83127f()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}], "num": 14362}