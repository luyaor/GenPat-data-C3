{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51795ed4d34857c6245893e6079d4b32", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "373af2c2236c3cca75ec5d3ef9936f2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "commitAfterChange": "fe32c2fb1206f9aa293286057591b6614ed5e3a2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\tConstant cst = this.condition.optimizedBooleanConstant();", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;", "+\t\tif (isConditionOptimizedFalse) {", "+\t\t\tcondition.generateCode(currentScope, \tcodeStream, false);", "+\t\t\t// May loose some local variable initializations : affecting the local variable attributes", "+\t\t\tif (mergedInitStateIndex != -1) {", "+\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "+\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "+\t\t\t}", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\treturn;", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9100ea0fcbd99919218290388c05a7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "commitAfterChange": "fe32c2fb1206f9aa293286057591b6614ed5e3a2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-", "+\t\tConstant cst = this.condition == null ? null : this.condition.optimizedBooleanConstant();", "+\t\tboolean isConditionOptimizedFalse = cst != null && (cst != Constant.NotAConstant && cst.booleanValue() == false);", "+\t\tif (isConditionOptimizedFalse) {", "+\t\t\tcondition.generateCode(scope, codeStream, false);", "+\t\t\t// May loose some local variable initializations : affecting the local variable attributes", "+\t\t\tif (neededScope) {", "+\t\t\t\tcodeStream.exitUserScope(scope);", "+\t\t\t}", "+\t\t\tif (mergedInitStateIndex != -1) {", "+\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "+\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "+\t\t\t}", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\treturn;", "+\t\t}", "+\t\t"]}], "num": 29182}