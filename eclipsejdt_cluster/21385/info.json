{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52fccb0e847c627041d9dd34bfa605d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b6fe783c58efff377e453cb0cb3b88f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7a140644bb864b33a5703af3dc19c84a2bcb243d", "commitAfterChange": "0f61b5a730cd24bb7ab05a282fa3a07ec8b534a5", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  protected void resolveAnnotations(Scope scope)", "signatureAfterChange": "  protected void resolveAnnotations(Scope scope)", "diff": ["+\t\t\t\t// contradictory null annotations on the type are already detected in Annotation.resolveType() (SE7 treatment)", "-\t\t\t\tthis.resolvedType = resolveAnnotations(resolutionScope, annotationsOnDimensions, this.resolvedType);\t\t", "+\t\t\t\tthis.resolvedType = resolveAnnotations(resolutionScope, annotationsOnDimensions, this.resolvedType);", "+\t\t\t\tif (this.resolvedType instanceof ArrayBinding) {", "+\t\t\t\t\tlong[] nullTagBitsPerDimension = ((ArrayBinding)this.resolvedType).nullTagBitsPerDimension;", "+\t\t\t\t\tif (nullTagBitsPerDimension != null) {", "+\t\t\t\t\t\tfor (int i = 0; i < dimensions; i++) { // skip last annotations at [dimensions] (concerns the leaf type)", "+\t\t\t\t\t\t\tif ((nullTagBitsPerDimension[i] & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK) {", "+\t\t\t\t\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(annotationsOnDimensions[i]);", "+\t\t\t\t\t\t\t\tnullTagBitsPerDimension[i] = 0;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad56c9c96d8be374801aef85d5e1c71a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "7a140644bb864b33a5703af3dc19c84a2bcb243d", "commitAfterChange": "0f61b5a730cd24bb7ab05a282fa3a07ec8b534a5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (this.type.annotations != null", "+\t\t\t\t\t&& (referenceType.tagBits & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK)", "+\t\t\t{", "+\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(this.type.annotations[this.type.annotations.length-1]);", "+\t\t\t}", "+\t\t\t\tlong[] nullTagBitsPerDimension = ((ArrayBinding)this.resolvedType).nullTagBitsPerDimension;", "+\t\t\t\tif (nullTagBitsPerDimension != null) {", "+\t\t\t\t\tfor (int i = 0; i < this.annotationsOnDimensions.length; i++) {", "+\t\t\t\t\t\tif ((nullTagBitsPerDimension[i] & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK) {", "+\t\t\t\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(this.annotationsOnDimensions[i]);", "+\t\t\t\t\t\t\tnullTagBitsPerDimension[i] = 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 21385}