{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "734b85eb618a9ba016cd761dc60f51dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0773406b1e8dea310fbfcc5672f54947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "commitAfterChange": "c13b5c8fdc5b98528c9ff5d2f4f3b65852c12b48", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static String displayString(String inputString, int indent)", "signatureAfterChange": " public static String displayString(String inputString, int indent)", "diff": ["-\tboolean wasACr = false;", "-\tboolean newLine = false;", "-\t\t\twasACr = true;", "-\t\t\tnewLine = true;", "-\t\t} else if (token.equals(\"\\n\")) {", "-\t\t\tif (!wasACr) { // \\r\\n --> \\n", "-\t\t\t\tnewLine = true;", "-\t\t\t}", "-\t\t}\t", "-\t\tif (newLine) {", "-\t\t\tnewLine = false;", "+\t\t\tbuffer.append(\"\\\\r\");", "-\t\t\t\tbuffer.append(\"\\\\n\\\" + \\n\");", "+\t\t\t\ttoken = tokenizer.nextToken();", "+\t\t\t\tif (token.equals(\"\\n\")) {", "+\t\t\t\t\tbuffer.append(\"\\\\n\");", "+\t\t\t\t\tif (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\t\tbuffer.append(\"\\\" + \\n\");", "+\t\t\t\t\t\tfor (int i = 0; i < indent; i++) buffer.append(\"\\t\");", "+\t\t\t\t\t\tbuffer.append(\"\\\"\");", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "+\t\t\t\t} else {", "+\t\t\t\t\tbuffer.append(\"\\\" + \\n\");", "+\t\t\t\t\tfor (int i = 0; i < indent; i++) buffer.append(\"\\t\");", "+\t\t\t\t\tbuffer.append(\"\\\"\");", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t} else if (token.equals(\"\\n\")) {", "+\t\t\tbuffer.append(\"\\\\n\");", "+\t\t\tif (tokenizer.hasMoreTokens()) {", "+\t\t\t\tbuffer.append(\"\\\" + \\n\");", "-\t\t}", "-\t\twasACr = false;", "+\t\t}\t", "+", "-\tchar lastChar = length == 0 ? 0 : inputString.charAt(length-1);", "-\tif ((lastChar == '\\n') || (lastChar == '\\r')) buffer.append(\"\\\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6976925327756217c0a4b5e8d249795c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "19de0bf25a38cb3c78ae5b1452a4badcf6ffab4c", "commitAfterChange": "d45a6d72ecac1399ae839b8bb0faf0b4626c38b4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\tchar[] declaringKey = this.declaringElement.computeUniqueKey(false/*not a leaf*/);", "-\t\tint declaringLength = declaringKey.length;", "-\t\tchar[] sig = genericTypeSignature();", "-\t\tint sigLength = sig.length;", "-\t\tchar[] uniqueKey = new char[declaringLength + 1 + sigLength];", "-\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, 0, declaringLength);", "-\t\tuniqueKey[declaringLength] = ':';", "-\t\tSystem.arraycopy(sig, 0, uniqueKey, declaringLength+1, sigLength);", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tBinding declaring = this.declaringElement;", "+\t\tif (!isLeaf && declaring.kind() == Binding.METHOD) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=97902", "+\t\t\tMethodBinding methodBinding = (MethodBinding) declaring;", "+\t\t\tbuffer.append(methodBinding.declaringClass.computeUniqueKey(false/*not a leaf*/));", "+\t\t\tbuffer.append(':');", "+\t\t\tbuffer.append(methodBinding.sourceStart());", "+\t\t} else {", "+\t\t\tbuffer.append(declaring.computeUniqueKey(false/*not a leaf*/));", "+\t\t\tbuffer.append(':');\t\t\t", "+\t\t}", "+\t\tbuffer.append(genericTypeSignature());", "+\t\tint length = buffer.length();", "+\t\tchar[] uniqueKey = new char[length];", "+\t\tbuffer.getChars(0, length, uniqueKey, 0);"]}], "num": 61846}