{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7963372f8cffb94b626e04aee65c7e1c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bf04ae2559ed8301f22c679c051087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f6037f3e0e76e18ea82dd93d13e55dc410583456", "commitAfterChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void deleting(IProject project)", "signatureAfterChange": " \tprivate void deleting(IProject project)", "diff": ["-\t\t\tif (this.state.modelProjectsCache == null) {", "-\t\t\t\tthis.state.modelProjectsCache = this.manager.getJavaModel().getJavaProjects();", "-\t\t\t}", "+\t\t\tthis.state.getOldJavaProjecNames(); // foce list to be computed", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d2b4a9e124aa97b998563671759de7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0ed75f35ca94498545434b6438f338a95736639d", "commitAfterChange": "276188d41ab5c05b83f25b7f0299ac2e2a433c05", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\tint javaEventType;\r", "-\t\t\t\t\tjavaEventType = ElementChangedEvent.PRE_AUTO_BUILD;\r", "+\t\t\t\t\t// only fire already computed deltas (resource ones will be processed in post change only)\r", "+\t\t\t\t\tfire(null, ElementChangedEvent.PRE_AUTO_BUILD);\r", "-\t\t\t\t\tjavaEventType = ElementChangedEvent.POST_CHANGE;\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\r", "-\t\t\t\tdefault : // unhandled event\r", "-\t\t\t\t\treturn;\r", "+\t\t\t\t\tif (delta != null) {\r", "+\t\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t\tIJavaElementDelta[] translatedDeltas = fDeltaProcessor.processResourceDelta(delta, ElementChangedEvent.POST_CHANGE);\r", "+\t\t\t\t\t\t\tif (translatedDeltas.length > 0) {\r", "+\t\t\t\t\t\t\t\tfor (int i= 0; i < translatedDeltas.length; i++) {\r", "+\t\t\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDeltas[i]);\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tfire(null, ElementChangedEvent.POST_CHANGE);\r", "+\t\t\t\t\t\t} finally {\r", "+\t\t\t\t\t\t\t// fix for 1FWIAEQ: ITPJCORE:ALL - CRITICAL - \"projects being deleted\" cache not cleaned up when solution deleted\r", "+\t\t\t\t\t\t\tif (!fProjectsBeingDeleted.isEmpty()) {\r", "+\t\t\t\t\t\t\t\tfProjectsBeingDeleted= new ArrayList(1);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\t\t\t\r", "+\t\t\t\t\t}\t\t\r", "-\t\t\tif (delta != null) {\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tIJavaElementDelta[] translatedDeltas = fDeltaProcessor.processResourceDelta(delta);\r", "-\t\t\t\t\tif (translatedDeltas.length > 0) {\r", "-\t\t\t\t\t\tfor (int i= 0; i < translatedDeltas.length; i++) {\r", "-\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDeltas[i]);\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tfire(null, javaEventType);\r", "-\t\t\t\t} finally {\r", "-\t\t\t\t\t// fix for 1FWIAEQ: ITPJCORE:ALL - CRITICAL - \"projects being deleted\" cache not cleaned up when solution deleted\r", "-\t\t\t\t\tif (javaEventType == ElementChangedEvent.POST_CHANGE && !fProjectsBeingDeleted.isEmpty()) {\r", "-\t\t\t\t\t\tfProjectsBeingDeleted= new ArrayList(1);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\t\t\t\r", "-\t\t\t}\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70afd4aba6c9be56df870068f0a24dd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "6c2ec0a92a2511791f4e1e6a880792d44b96e311", "commitAfterChange": "58dc232e4ac3a587a92cd50ddedf4e70cf15b87c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void removeFile(IPath filePath)", "signatureAfterChange": " \tpublic void removeFile(IPath filePath)", "diff": ["-\t\tIFolder folder = fWorkspace.getRoot().getFolder(filePath.removeLastSegments(1));", "-\t\t\tfolder.getFile(filePath.lastSegment()).delete(true, null);", "+\t\t\tfWorkspace.getRoot().getFile(filePath).delete(true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb24757a848ba35d80f99be3e786d208", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate synchronized void containersReset(String[] containerIDs)", "signatureAfterChange": " \t \tprivate synchronized void containersReset(String[] containerIDs)", "diff": ["-\t\t\tIterator projectIterator = this.containers.keySet().iterator();", "+\t\t\tIterator projectIterator = this.containers.values().iterator();", "-\t\t\t\tIJavaProject project = (IJavaProject)projectIterator.next();", "-\t\t\t\tMap projectContainers = (Map)this.containers.get(project);", "+\t\t\t\tMap projectContainers = (Map) projectIterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e7bee2521c4a331e1816014074d2b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean visit(BooleanLiteral node)", "signatureAfterChange": " \tpublic boolean visit(BlockComment node)", "diff": ["+\t */", "+\tpublic boolean visit(BlockComment node) {", "+\t\tthis.buffer.append(\"/* */\");//$NON-NLS-1$", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d40ed1ab7a9c03b5b31ac162767a2ef4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "330aeaad59d1633d10c0cd3a9ee9ac57073b385f", "commitAfterChange": "960ce528d76bd309a28ce655fc14cff77629ffa5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\tchar[] tag = this.scanner.getCurrentIdentifierSource(); // first token is either an identifier or a keyword", "-\t\tint le = this.lineEnd;", "-\t\ttag = new char[length];", "+\t\tchar[] tag = new char[length];", "-\t\tthis.lineEnd = le;"]}], "num": 65570}