{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f6e17e2404acd18369353e1106346d7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0beccdbbe37aa5638112498859da5b01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d4d6b0243291019997a7d2e0c012e405a0f88778", "commitAfterChange": "b254baac66bf2889dacf5067873dc414e39763d4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations(BlockScope scope, Annotation[] annotations, Binding currentBinding)", "diff": ["-\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding, true);", "+\t\tboolean old = scope.insideTypeAnnotation;", "+\t\tscope.insideTypeAnnotation = true;", "+\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding);", "+\t\tscope.insideTypeAnnotation = old;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cfe8e2d16414a754ad023e343599539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "3a6f867acc472d548f3e2208b39ff3646fa86192", "commitAfterChange": "9cf41c9ac2023e53df50783ae7292b3f738401cf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\tint previous = initializationScope.fieldDeclarationIndex;", "+\t\t\tFieldBinding previousField = initializationScope.initializedField;", "+\t\t\tint previousFieldID = initializationScope.lastVisibleFieldID;", "-\t\t\t\tinitializationScope.fieldDeclarationIndex = this.binding.id;", "+\t\t\t\tinitializationScope.initializedField = this.binding;", "+\t\t\t\tinitializationScope.lastVisibleFieldID = this.binding.id;", "-\t\t\t\tinitializationScope.fieldDeclarationIndex = previous;", "+\t\t\t\tinitializationScope.initializedField = previousField;", "+\t\t\t\tinitializationScope.lastVisibleFieldID = previousFieldID;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c057cf38db3226b3e54354ed7d838652", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "141285694dc186f382cdc5e23d991883a93f9f68", "commitAfterChange": "bea430fec612168745d91278c4d6f4fccc5c2fd4", "methodNumberBeforeChange": 430, "methodNumberAfterChange": 430, "signatureBeforeChange": " public ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, CompilationUnitDeclaration unit)", "signatureAfterChange": " public ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, CompilationUnitDeclaration unit)", "diff": ["+\tboolean oldTolerateDefaultClassMethods = this.tolerateDefaultClassMethods;", "+\t\tthis.tolerateDefaultClassMethods = this.parsingJava8Plus;", "+\t\tthis.tolerateDefaultClassMethods = oldTolerateDefaultClassMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb4c0a775362bda3eb054a6c9e8752c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "4c3340d5161ff8147cc1c77f5526a0327c0dad09", "commitAfterChange": "302df05b099c1ea06faca0b00f806513c7db6904", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void resolve(MethodScope scope)", "signatureAfterChange": " \t \tpublic void resolve(MethodScope scope)", "diff": ["-\t\tint previous = scope.lastVisibleFieldID;", "+\t    FieldBinding previousField = scope.initializedField;", "+\t\tint previousFieldID = scope.lastVisibleFieldID;", "+\t\t    scope.initializedField = null;", "-\t\t\tscope.lastVisibleFieldID = previous;", "+\t\t    scope.initializedField = previousField;", "+\t\t\tscope.lastVisibleFieldID = previousFieldID;"]}], "num": 10246}