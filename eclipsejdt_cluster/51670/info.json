{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cb9d3311ec3844da60da14ee511be79", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095632c0d9266064b0caa32ee7fb4229", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cf072eeff121940a541295553114f490c9a9bb69", "commitAfterChange": "9617178877607b049b1a7c4f92c93a8d11facd28", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tBlockScope scope)", "diff": ["-\t\t\tfinal int numberOfParens = (arrayQualifiedTypeReference.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageOpeningParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "-\t\t\tthis.scribe.printArrayQualifiedReference(arrayQualifiedTypeReference.tokens.length, arrayQualifiedTypeReference.sourceEnd);", "-\t\t\tint dimensions = getDimensions();", "-\t\t\tif (dimensions != 0) {", "-\t\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageClosingParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "+\t\t\tformatArrayQualifiedTypeReference(arrayQualifiedTypeReference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aeb86e42c79586d7621fd2519f7ea7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "diff": ["-\t\t\tfinal int numberOfParens = (arrayQualifiedTypeReference.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageOpeningParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "-\t\t\tthis.scribe.printArrayQualifiedReference(arrayQualifiedTypeReference.tokens.length, arrayQualifiedTypeReference.sourceEnd);", "-\t\t\tint dimensions = getDimensions();", "-\t\t\tif (dimensions != 0) {", "-\t\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageClosingParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "+\t\t\tformatArrayQualifiedTypeReference(arrayQualifiedTypeReference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b0bdddb67d191f43ebd05a3ab16c87f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\t\tBlockScope scope)", "diff": ["-\t\tArrayQualifiedTypeReference arrayQualifiedTypeReference,", "-\t\tBlockScope scope) {", "+\t\t\tArrayQualifiedTypeReference arrayQualifiedTypeReference,", "+\t\t\tBlockScope scope) {", "-\t\t\tfinal int numberOfParens = (arrayQualifiedTypeReference.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageOpeningParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "-\t\t\tthis.scribe.printArrayQualifiedReference(arrayQualifiedTypeReference.tokens.length, arrayQualifiedTypeReference.sourceEnd);", "-\t\t\tint dimensions = getDimensions();", "-\t\t\tif (dimensions != 0) {", "-\t\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageClosingParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "+\t\t\tformatArrayQualifiedTypeReference(arrayQualifiedTypeReference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c207cca76f67e3ab1cb0ef43848fda69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cf072eeff121940a541295553114f490c9a9bb69", "commitAfterChange": "9617178877607b049b1a7c4f92c93a8d11facd28", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "diff": ["-\t\t\tfinal int numberOfParens = (arrayQualifiedTypeReference.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageOpeningParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "-\t\t\tthis.scribe.printArrayQualifiedReference(arrayQualifiedTypeReference.tokens.length, arrayQualifiedTypeReference.sourceEnd);", "-\t\t\tint dimensions = getDimensions();", "-\t\t\tif (dimensions != 0) {", "-\t\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (numberOfParens > 0) {", "-\t\t\t\tmanageClosingParenthesizedExpression(arrayQualifiedTypeReference, numberOfParens);", "-\t\t\t}", "+\t\t\tformatArrayQualifiedTypeReference(arrayQualifiedTypeReference);"]}], "num": 51670}