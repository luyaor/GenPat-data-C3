{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "911670cdb2880f0e561a3ae71ff8a3ff", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0d02a577399def2bdced08f32a7c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["-\t\t\t\t\t\t\tif (!CharOperation.prefixEquals(token, local.name, false /* ignore case */", "-\t\t\t\t\t\t\t\t))", "+\t\t\t\t\t\t\tif (!CharOperation.prefixEquals(token, local.name, false /* ignore case */)", "+\t\t\t\t\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(token, local.name)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07bdf4d4fa541d9c8af3af7cb062a15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\tif (!CharOperation.equals(methodName, method.selector, false /* ignore case */))", "+\t\t\tif (!CharOperation.equals(methodName, method.selector, false /* ignore case */)", "+\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(methodName, method.selector)))"]}], "num": 23090}