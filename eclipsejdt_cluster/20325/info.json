{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c99a5ddca0ae3b3e4c808cb36db895a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c71588da4d23db8b2b1ab2d455431c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "31d915ea88712a08a053d81dbaa3f51ee5d00b1e", "commitAfterChange": "6a649f40f31b6ce7e5ab331634b9ef2be77ed006", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tprotected boolean traverseDelta(IResourceDelta delta, int elementType, IJavaProject currentProject)", "signatureAfterChange": "\r \tprotected boolean traverseDelta(\r \t\tIResourceDelta delta, \r \t\tint elementType, \r \t\tIJavaProject currentProject,\r \t\tIPath currentOutput,\r \t\tboolean currentProjIsOutput)", "diff": ["-\tprotected boolean traverseDelta(IResourceDelta delta, int elementType, IJavaProject currentProject) {\r", "-\r", "+\tprotected boolean traverseDelta(\r", "+\t\tIResourceDelta delta, \r", "+\t\tint elementType, \r", "+\t\tIJavaProject currentProject,\r", "+\t\tIPath currentOutput,\r", "+\t\tboolean currentProjIsOutput) {\r", "+\t\t\t\r", "+\t\t}\r", "+\t\t\r", "+\t\t// get the project's output location\r", "+\t\tif (currentOutput == null) {\r", "+\t\t\ttry {\r", "+\t\t\t\tIJavaProject proj =\r", "+\t\t\t\t\tcurrentProject == null ?\r", "+\t\t\t\t\t\t(IJavaProject)this.createElement(res.getProject(), IJavaElement.JAVA_PROJECT, null) :\r", "+\t\t\t\t\t\tcurrentProject;\r", "+\t\t\t\tif (proj != null) {\r", "+\t\t\t\t\tcurrentOutput = proj.getOutputLocation();\r", "+\t\t\t\t\tcurrentProjIsOutput = proj.getProject().getFullPath().equals(currentOutput);\r", "+\t\t\t\t}\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t}\r", "+\t\t\t\t// filter out changes in output location\r", "+\t\t\t\tif (currentProjIsOutput) {\r", "+\t\t\t\t\t// case of proj=src\r", "+\t\t\t\t\tif (childType == IJavaElement.CLASS_FILE) {\r", "+\t\t\t\t\t\tcontinue;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\t// case of .class file under project and no source folder\r", "+\t\t\t\t\tif (childType == IJavaElement.JAVA_PROJECT \r", "+\t\t\t\t\t\t&& childRes instanceof IFile \r", "+\t\t\t\t\t\t&& Util.isValidClassFileName(childRes.getName())) {\r", "+\t\t\t\t\t\tcontinue;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} else if (currentOutput != null && currentOutput.isPrefixOf(childPath)) {\r", "+\t\t\t\t\tcontinue;\r", "+\t\t\t\t}\r", "+\t\t\t\t\r", "-\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject)) {\r", "+\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, currentProjIsOutput)) {\r", "-\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot);\r", "+\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, false);\r", "-\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {\r", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f743ce6d7b19f6ffe7cdde7aeaa0681c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5dde5c5122b6fd8476cd65e0c9985a4c2fa7aaf1", "commitAfterChange": "8cc940e0f7737c5f198b9632e86ecfcd6479e105", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tprotected boolean traverseDelta(\r \t\tIResourceDelta delta, \r \t\tint elementType, \r \t\tIJavaProject currentProject,\r \t\tIPath currentOutput,\r \t\tboolean currentProjIsOutput)", "signatureAfterChange": "\r \tprotected boolean traverseDelta(\r \t\tIResourceDelta delta, \r \t\tint elementType, \r \t\tIJavaProject currentProject,\r \t\tIPath currentOutput,\r \t\tint outputTraverseMode)", "diff": ["-\t\tboolean currentProjIsOutput) {\r", "+\t\tint outputTraverseMode) {\r", "-\t\t\t\t\tcurrentProjIsOutput = proj.getProject().getFullPath().equals(currentOutput);\r", "+\t\t\t\t\tif (proj.getProject().getFullPath().equals(currentOutput)){ // case of proj==bin==src\r", "+\t\t\t\t\t\toutputTraverseMode = SOURCE;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t// check case of src==bin\r", "+\t\t\t\t\t\tIClasspathEntry[] classpath = proj.getResolvedClasspath(true);\r", "+\t\t\t\t\t\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "+\t\t\t\t\t\t\tIClasspathEntry entry = classpath[i];\r", "+\t\t\t\t\t\t\tif (entry.getPath().equals(currentOutput)) {\r", "+\t\t\t\t\t\t\t\toutputTraverseMode = (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE) ? SOURCE : BINARY;\r", "+\t\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "-\t\t\t\tif (currentProjIsOutput) {\r", "-\t\t\t\t\t// case of proj=src\r", "-\t\t\t\t\tif (childType == IJavaElement.CLASS_FILE) {\r", "+\t\t\t\tif (currentOutput != null && currentOutput.isPrefixOf(childPath)) {\r", "+\t\t\t\t\tif (outputTraverseMode != IGNORE) {\r", "+\t\t\t\t\t\t// case of bin=src\r", "+\t\t\t\t\t\tif (outputTraverseMode == SOURCE && childType == IJavaElement.CLASS_FILE) {\r", "+\t\t\t\t\t\t\tcontinue;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t// case of .class file under project and no source folder\r", "+\t\t\t\t\t\t// proj=bin\r", "+\t\t\t\t\t\tif (childType == IJavaElement.JAVA_PROJECT \r", "+\t\t\t\t\t\t\t&& childRes instanceof IFile \r", "+\t\t\t\t\t\t\t&& Util.isValidClassFileName(childRes.getName())) {\r", "+\t\t\t\t\t\t\tcontinue;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else {\r", "-\t\t\t\t\t// case of .class file under project and no source folder\r", "-\t\t\t\t\tif (childType == IJavaElement.JAVA_PROJECT \r", "-\t\t\t\t\t\t&& childRes instanceof IFile \r", "-\t\t\t\t\t\t&& Util.isValidClassFileName(childRes.getName())) {\r", "-\t\t\t\t\t\tcontinue;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else if (currentOutput != null && currentOutput.isPrefixOf(childPath)) {\r", "-\t\t\t\t\tcontinue;\r", "-\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, currentProjIsOutput)) {\r", "+\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject, currentOutput, outputTraverseMode)) {\r", "-\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, false);\r", "+\t\t\t\t\tthis.traverseDelta(child, IJavaElement.PACKAGE_FRAGMENT_ROOT, projectOfRoot, null, IGNORE); // binary output of projectOfRoot cannot be this root\r"]}], "num": 20325}