{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0491afa83ed2d4cecd3cdb665f8b316", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5989f8a1205f60b460787ccc4551dc7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "db7093da2cf6f358a18d285a7e0e1a5ce941d97d", "commitAfterChange": "3656343b586266f36b536ed83d5f852f6a94c86f", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " \tpublic void updateClasspathMarkers(Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": " \tpublic void updateClasspathMarkers(Map preferredClasspaths, Map preferredOutputs)", "diff": ["-\t\t\t\tif (!status.isOK()) this.createClasspathProblemMarker(status);\t\t\t\t\t ", "+\t\t\t\tif (!status.isOK()) {", "+\t\t\t\t\tif (status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH && ((ClasspathEntry) classpath[i]).isOptional())", "+\t\t\t\t\t\tcontinue; // ignore this entry", "+\t\t\t\t\tthis.createClasspathProblemMarker(status);\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80be1092be7e46c5b7fe66a68f2fbf55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "2f1f44c662a4a09487e64c498b35dbe44a2d371f", "commitAfterChange": "721753033c2928e4315cf5ec101b949d71a6d0bc", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t \tprivate static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, IClasspathContainer entryContainer, boolean checkSourceAttachment, boolean referredByContainer)", "signatureAfterChange": " \t \tprivate static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, IClasspathContainer entryContainer, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=171136, ignore class path errors from optional entries", "+\t\t\t\tif (status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH && ((ClasspathEntry) entry).isOptional())", "+\t\t\t\t\tstatus = JavaModelStatus.VERIFIED_OK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95eae36209573025c8d766494ba9a4e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "db7093da2cf6f358a18d285a7e0e1a5ce941d97d", "commitAfterChange": "3656343b586266f36b536ed83d5f852f6a94c86f", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap rawReverseMap) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap rawReverseMap) \t\tthrows JavaModelException", "diff": ["-\t\t\t\tif (generateMarkerOnError && !status.isOK()) createClasspathProblemMarker(status);", "+\t\t\t\tif (generateMarkerOnError && !status.isOK()) {", "+\t\t\t\t\tif (status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH && ((ClasspathEntry) rawEntry).isOptional())", "+\t\t\t\t\t\tcontinue; // ignore this entry", "+\t\t\t\t\tcreateClasspathProblemMarker(status);", "+\t\t\t\t}"]}], "num": 36162}