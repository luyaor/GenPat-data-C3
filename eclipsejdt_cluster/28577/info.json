{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e41d95a792dd1c9c41c564233af541e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65a61bf4d5f648323e26d9526bf4408", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "215ebe5b137faf0e9e2c02060899bb72b6290076", "commitAfterChange": "75b36a9ed5cd2da7220cbd26b35e54ceed421c30", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void traverse(IAbstractSyntaxTreeVisitor visitor, BlockScope blockScope)", "signatureAfterChange": "\r \r \tpublic void traverse(IAbstractSyntaxTreeVisitor visitor, BlockScope blockScope)", "diff": ["-}\r", "-public void traverse(IAbstractSyntaxTreeVisitor visitor, BlockScope blockScope) {\r", "-\tif (visitor.visit(this, blockScope)) {\r", "-\t\texception.traverse(visitor, blockScope);\r", "-\tvisitor.endVisit(this, blockScope);\r", "-}\r", "+\r", "+\tpublic void traverse(IAbstractSyntaxTreeVisitor visitor, BlockScope blockScope) {\r", "+\t\tif (visitor.visit(this, blockScope))\r", "+\t\t\texception.traverse(visitor, blockScope);\r", "+\t\tvisitor.endVisit(this, blockScope);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5d7143ba5e249c9fc64cd7197d1bd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "7468b4698239a80427b0dfed58d4a9c2f96541d8", "commitAfterChange": "071d5ff69d1256ea784921a560116cf8719733a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (this.receiver instanceof CastExpression) {", "-\t\t\tthis.receiver.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "-\t\t\t//containsCast = true; - always ignore receiver cast, since may affect constant pool reference", "-\t}", "+\tif (this.receiver instanceof CastExpression) this.receiver.bits |= IgnoreNeedForCastCheckMASK; // will check later on"]}], "num": 28577}