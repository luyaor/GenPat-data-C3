{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8021e767cff1448c50870e3e6f3d67c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d5f98098ffdf36850af3c44a8900d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "signatureAfterChange": " \t \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "diff": ["+\t\tint relevance = computeBaseRelevance();", "+\t\trelevance += computeRelevanceForInterestingProposal();", "-\t\tif(this.requestor instanceof IExtendedCompletionRequestor) {", "-\t\t\tIExtendedCompletionRequestor extendedRequestor = (IExtendedCompletionRequestor) this.requestor;", "-\t\t\t", "-\t\t\tint relevance = computeBaseRelevance();", "-\t\t\trelevance += computeRelevanceForInterestingProposal();", "-\t\t\t", "-\t\t\textendedRequestor.acceptPotentialMethodDeclaration(", "-\t\t\t\t\treference.qualifiedPackageName(),", "-\t\t\t\t\treference.qualifiedSourceName(),", "-\t\t\t\t\ttoken,", "-\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\trelevance);", "+\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.POTENTIAL_METHOD_DECLARATION, this.actualCompletionPosition);", "+\t\tproposal.setDeclarationSignature(getSignature(reference));", "+\t\tproposal.setSignature(", "+\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\tVOID));", "+\t\tproposal.setDeclarationPackageName(reference.qualifiedPackageName());", "+\t\tproposal.setDeclarationTypeName(reference.qualifiedSourceName());", "+\t\t", "+\t\t//proposal.setPackageName(null);", "+\t\tproposal.setTypeName(VOID);", "+\t\tproposal.setName(token);", "+\t\t//proposal.setParameterPackageNames(null);", "+\t\t//proposal.setParameterTypeNames(null);", "+\t\t//proposal.setPackageName(null);", "+\t\tproposal.setCompletion(token);", "+\t\tproposal.setFlags(Flags.AccPublic);", "+\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\tproposal.setRelevance(relevance);", "+\t\tthis.requestor.accept(proposal);", "+\t\tif(DEBUG) {", "+\t\t\tthis.printDebug(proposal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab113c71a83ab183be7b9f32014924bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "signatureAfterChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "diff": ["-\t\t\tthis.requestor.acceptField(", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tclassField,", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\tclassField,", "-\t\t\t\tIConstants.AccStatic | IConstants.AccPublic,", "-\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\trelevance);", "+\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);", "+\t\t\t\t//proposal.setDeclarationSignature(null);", "+\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\tcreateNonGenericTypeSignature(", "+\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "+\t\t\t\t\t\t\t\tCLASS));", "+\t\t\t\t//proposal.setDeclarationPackageName(null);", "+\t\t\t\t//proposal.setDeclarationTypeName(null);", "+\t\t\t\tproposal.setPackageName(CharOperation.concatWith(JAVA_LANG, '.'));", "+\t\t\t\tproposal.setTypeName(CLASS);", "+\t\t\t\tproposal.setName(classField);", "+\t\t\t\tproposal.setCompletion(classField);", "+\t\t\t\tproposal.setFlags(Flags.AccStatic | Flags.AccPublic);", "+\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\tif(DEBUG) {", "+\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed227793ca5b78c3b1be970baf2dcfc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\tthis.requestor.acceptAnonymousType(", "-\t\t\t\tcurrentType.qualifiedPackageName(),", "-\t\t\t\tcurrentType.qualifiedSourceName(),", "-\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\tcompletion,", "-\t\t\t\tIConstants.AccPublic,", "-\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\trelevance);", "+\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION)) {", "+\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, this.actualCompletionPosition);", "+\t\t\t\tproposal.setDeclarationSignature(getSignature(currentType));", "+\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR));", "+\t\t\t\tproposal.setDeclarationPackageName(currentType.qualifiedPackageName());", "+\t\t\t\tproposal.setDeclarationTypeName(currentType.qualifiedSourceName());", "+\t\t\t\t//proposal.setParameterPackageNames(null);", "+\t\t\t\t//proposal.setParameterTypeNames(null);", "+\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t//proposal.setTypeName(null);", "+\t\t\t\tproposal.setCompletion(completion);", "+\t\t\t\tproposal.setFlags(Flags.AccPublic);", "+\t\t\t\tproposal.setReplaceRange(this.endPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\tif(DEBUG) {", "+\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 26400}