{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfe812b66bafc2b7e1766599eea07e1c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7547ffcf7a19ef5442728b3c4bfb47b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "a3da1013b6fe549ad5c2ee5b7dc726eba38ff59e", "commitAfterChange": "30692448718de71df165cc52c018bee7df31a8fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "signatureAfterChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar[][] typeParameterSignatures, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "diff": ["+\tchar[][] typeParameterSignatures,", "+\t", "+\tchar[] typeParameters = CharOperation.NO_CHAR;", "+\tint typeParametersLength = 0;", "+\tif (typeParameterSignatures != null) {", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tfor (int i = 0, length = typeParameterSignatures.length; i < length; i++) {", "+\t\t\tchar[] typeParameter = typeParameterSignatures[i];", "+\t\t\tbuffer.append(typeParameter);", "+\t\t\ttypeParametersLength += typeParameter.length;", "+\t\t\tif (i != length-1) {", "+\t\t\t\tbuffer.append(',');", "+\t\t\t\ttypeParametersLength++;", "+\t\t\t}", "+\t\t}", "+\t\ttypeParameters = new char[typeParametersLength];", "+\t\tbuffer.getChars(0, typeParametersLength, typeParameters, 0);", "+\t}", "-\t// superSimpleName / superQualification / simpleName / enclosingTypeName / packageName / superClassOrInterface classOrInterface modifiers", "+\t// superSimpleName / superQualification / simpleName / enclosingTypeName / typeParameters / packageName / superClassOrInterface classOrInterface modifiers", "-\tchar[] result = new char[superLength + superQLength + simpleLength + enclosingLength + packageLength + 8];", "+\tchar[] result = new char[superLength + superQLength + simpleLength + enclosingLength + typeParametersLength + packageLength + 9];", "+\t}", "+\tresult[pos++] = SEPARATOR;", "+\tif (typeParametersLength > 0) {", "+\t\tSystem.arraycopy(typeParameters, 0, result, pos, typeParametersLength);", "+\t\tpos += typeParametersLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54bbb217c5111e55ae8df29e66e7c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NamedMember.java", "commitBeforeChange": "f6b98e81e084c7fc5756b6873d78549cc1ce9d4c", "commitAfterChange": "334acc099e45b6ce9ec3bc9c1d31c4c1fb234636", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, ITypeParameter[] typeParameters) throws JavaModelException", "signatureAfterChange": " \t \tpublic String getFullyQualifiedName(char enclosingTypeSeparator, boolean showParameters) throws JavaModelException", "diff": ["-\tprotected String getFullyQualifiedParameterizedName(String fullyQualifiedName, ITypeParameter[] typeParameters) throws JavaModelException {", "-\t\tif (typeParameters.length == 0) return fullyQualifiedName;", "-\t\tStringBuffer buffer = new StringBuffer(fullyQualifiedName);", "-\t\tbuffer.append('<');", "-\t\tfor (int i = 0, length = typeParameters.length; i < length; i++) {", "-\t\t\tITypeParameter typeParameter = typeParameters[i];", "-\t\t\tbuffer.append(typeParameter.getElementName());", "-\t\t\tString[] bounds = typeParameter.getBounds();", "-\t\t\tint boundsLength = bounds.length;", "-\t\t\tif (boundsLength > 0) {", "-\t\t\t\tbuffer.append(\" extends \"); //$NON-NLS-1$", "-\t\t\t\tfor (int j = 0; j < boundsLength; j++) {", "-\t\t\t\t\tbuffer.append(bounds[j]);", "-\t\t\t\t\tif (j < boundsLength-1)", "-\t\t\t\t\t\tbuffer.append(\" & \"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (i < length-1)", "-\t\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t", "+\tpublic String getFullyQualifiedName(char enclosingTypeSeparator, boolean showParameters) throws JavaModelException {", "+\t\tString packageName = getPackageFragment().getElementName();", "+\t\tif (packageName.equals(IPackageFragment.DEFAULT_PACKAGE_NAME)) {", "+\t\t\treturn getTypeQualifiedName(enclosingTypeSeparator, showParameters);", "-\t\tbuffer.append('>');", "-\t\treturn buffer.toString();", "+\t\treturn packageName + '.' + getTypeQualifiedName(enclosingTypeSeparator, showParameters);"]}], "num": 28913}