{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7c87d5ddb4eaff6acb529236aea322f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0116f2d6e63b6165ac97127cb2d9bb33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "167bbad42ecb0a9d7f5fb34b71f36a09040fde91", "commitAfterChange": "f46971551de7cadf79c08b3a267e0e31fff38966", "methodNumberBeforeChange": 939, "methodNumberAfterChange": 939, "signatureBeforeChange": " public void _test933()", "signatureAfterChange": " public void test933()", "diff": ["-public void _test933() {", "+public void test933() {", "-\t\t\"import a.AbstractFoo;\\n\" + ", "+\t\t\"\t\t// Expect error\\n\" + ", "+\t\t\"\t\tString s11 = foo1.getCustomInner();\\n\" + ", "+\t\t\"\t\tString s12 = foo2.getDefaultInner();\\n\" + ", "+\t\t\"\t\tString s21 = foo2.getCustomInner();\\n\" + ", "+\t\t\"\t\tString s22 = foo2.getDefaultInner();\\n\" + \t\t", "+\t\t\"\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\tX<String>.Method();\\n\" + ", "-\t\t\"\t^^^^^^^^^^\\n\" + ", "-\t\t\"Syntax error on token(s), misplaced construct(s)\\n\" + ", "+\t\t\"1. ERROR in b\\\\DefaultFoo.java (at line 34)\\n\" + ", "+\t\t\"\tString s11 = foo1.getCustomInner();\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from AbstractFoo.Inner<CustomFoo> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in b\\\\DefaultFoo.java (at line 35)\\n\" + ", "+\t\t\"\tString s12 = foo2.getDefaultInner();\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from AbstractFoo.Inner<DefaultFoo> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in b\\\\DefaultFoo.java (at line 36)\\n\" + ", "+\t\t\"\tString s21 = foo2.getCustomInner();\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from AbstractFoo.Inner<CustomFoo> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in b\\\\DefaultFoo.java (at line 37)\\n\" + ", "+\t\t\"\tString s22 = foo2.getDefaultInner();\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from AbstractFoo.Inner<DefaultFoo> to String\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e914cc572d8683fbc4fccbff04b92e39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 904, "methodNumberAfterChange": 904, "signatureBeforeChange": " public void test0884()", "signatureAfterChange": " public void test0884()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tString s = getClass();\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends X> to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\treturn (String) getDefault(getClass());\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Cannot cast from capture#2-of ? extends X to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 8)\\n\" +", "-\t\t\"\treturn (String) getDefault(getClass());\\n\" +", "-\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation getDefault(Class<capture#2-of ? extends X>) of the generic method getDefault(Class<T>) of type X<C>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tString s = getClass();\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends X> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\treturn (String) getDefault(getClass());\\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from X to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\treturn (String) getDefault(getClass());\\n\" + ", "+\t\t\"\t                ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation getDefault(Class<capture#2-of ? extends X>) of the generic method getDefault(Class<T>) of type X<C>\\n\" + "]}], "num": 35338}