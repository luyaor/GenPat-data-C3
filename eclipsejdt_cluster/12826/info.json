{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59ffe193369b9a8ebc436939e73e615e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8231df3a1404ae64e4d8012595492d91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "105a4ca655d44213ffe23400e85e9364ac7516e4", "commitAfterChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate ASTNode buildAST(String contents) throws JavaModelException", "signatureAfterChange": " \tprivate ASTNode buildAST(String contents) throws JavaModelException", "diff": ["-\t\tString markerStart = \"/*start*/\";", "-\t\tString markerEnd = \"/*end*/\";", "-\t\tfinal int astStart = contents.indexOf(markerStart); // start of AST inclusive", "-\t\tcontents = new String(CharOperation.replace(contents.toCharArray(), markerStart.toCharArray(), CharOperation.NO_CHAR));", "-\t\tfinal int astEnd = contents.indexOf(markerEnd); // end of AST exclusive", "-\t\tcontents = new String(CharOperation.replace(contents.toCharArray(), markerEnd.toCharArray(), CharOperation.NO_CHAR));", "+\t\tMarkerInfo markerInfo = new MarkerInfo(contents);", "+\t\tcontents = markerInfo.source;", "-\t\tclass EndVisit extends RuntimeException {", "-\t\t\tprivate static final long serialVersionUID = 1L;", "-\t\t}", "-\t\tclass Visitor extends ASTVisitor {", "-\t\t\tASTNode found;", "-\t\t\tpublic void preVisit(ASTNode node) {", "-\t\t\t\tif (node instanceof CompilationUnit) return;", "-\t\t\t\tif (node.getStartPosition() == astStart && node.getStartPosition() + node.getLength() == astEnd) {", "-\t\t\t\t\tthis.found = node;", "-\t\t\t\t\tthrow new EndVisit();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tVisitor visitor = new Visitor();", "-\t\ttry {", "-\t\t\tunit.accept(visitor);", "-\t\t} catch (EndVisit e) {", "-\t\t\treturn visitor.found;", "-\t\t}", "-\t\treturn null;", "+\t\treturn findNode(unit, markerInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0bb4f52009ec9d8ac826bc0bfbd965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "commitAfterChange": "0768a01c46bf55c1ad1aefdbfa14c12019b43872", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tpublic MarkerInfo(String path, String source, int markerIndex)", "signatureAfterChange": " \t\t \t\tprivate void setStartAndEnd(int markerIndex)", "diff": ["-\t\t}", "-\t\tpublic MarkerInfo(String path, String source, int markerIndex) {", "-\t\t\tString markerNumber = markerIndex == -1 ? \"\" : Integer.toString(markerIndex);", "+\t\t", "+\t\tprivate void setStartAndEnd(int markerIndex) {", "+\t\t\tString markerNumber; ", "+\t\t\tif (markerIndex == -1) {", "+\t\t\t\tmarkerNumber = \"\";", "+\t\t\t\tmarkerIndex = this.astStarts.length; // *start* is always last", "+\t\t\t} else", "+\t\t\t\tmarkerNumber = Integer.toString(markerIndex);", "+\t\t\t", "-\t\t\tthis.astStart = source.indexOf(markerStart); // start of AST inclusive", "-\t\t\tthis.source = new String(CharOperation.replace(this.source.toCharArray(), markerStart.toCharArray(), CharOperation.NO_CHAR));", "-\t\t\tthis.astEnd = this.source.indexOf(markerEnd); // end of AST exclusive", "-\t\t\tthis.source = new String(CharOperation.replace(this.source.toCharArray(), markerEnd.toCharArray(), CharOperation.NO_CHAR));\t", "+\t\t\tint astStart = source.indexOf(markerStart); // start of AST inclusive", "+\t\t\tthis.astStarts[markerIndex-1] = astStart;", "+\t\t\tremoveMarkerFromSource(markerStart, astStart, markerIndex-1);", "+\t\t\tint astEnd = this.source.indexOf(markerEnd); // end of AST exclusive", "+\t\t\tthis.astEnds[markerIndex-1] = astEnd;", "+\t\t\tremoveMarkerFromSource(markerEnd, astEnd, markerIndex-1);"]}], "num": 12826}