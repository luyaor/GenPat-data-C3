{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f74297ef8bb6246afc960123e047882", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1296ab43f8ff45c7a2563ee71e4360bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean matchesName(char[] pattern, char[] name)", "signatureAfterChange": " public boolean matchesName(char[] pattern, char[] name)", "diff": ["-\t\tboolean isCamelCase = (this.matchRule & R_CAMELCASE_MATCH) != 0;", "+\t\tboolean isCamelCase = (this.matchRule & R_CAMEL_CASE_MATCH) != 0;", "-\t\tif (matchMode == R_PREFIX_MATCH && emptyPattern) return true;", "+\t\tboolean isPrefix = (this.matchRule & R_PREFIX_MATCH) != 0;", "+\t\tif (isPrefix && emptyPattern) return true;", "-\t\tif (isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "-\t\t\treturn true;", "+\t\tif (isCamelCase) {", "+\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, isPrefix)) {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\tif (isCaseSensitive) return false;", "-\t\t\tcase R_FULL_MATCH :", "-\t\t\t\tif (!isCamelCase) {", "-\t\t\t\t\tif (sameLength && matchFirstChar) {", "-\t\t\t\t\t\treturn CharOperation.equals(pattern, name, isCaseSensitive);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "+\t\t\t\tif (sameLength && matchFirstChar) {", "+\t\t\t\t\treturn CharOperation.equals(pattern, name, isCaseSensitive);", "-\t\t\t\t// fall through next case to match as prefix if camel case failed", "+\t\t\t\tbreak;", "+\t\t\t\t// TODO_PERFS (frederic) not sure this lowercase was necessary..."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91629fac1fe207181150e2887af8b933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean matchesName(char[] pattern, char[] name)", "signatureAfterChange": " public boolean matchesName(char[] pattern, char[] name)", "diff": ["-\t\tboolean isCamelCase = (this.matchRule & R_CAMEL_CASE_MATCH) != 0;", "-\t\tboolean isPrefix = (this.matchRule & R_PREFIX_MATCH) != 0;", "-\t\tif (isPrefix && emptyPattern) return true;", "+\t\tif (emptyPattern && (this.matchRule & R_PREFIX_MATCH) != 0) return true;", "-\t\tif (isCamelCase) {", "-\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, isPrefix)) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\tif (isCaseSensitive) return false;", "-\t\t}", "+", "+\t\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, false)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\t// only test case insensitive as CamelCase already verified prefix case sensitive", "+\t\t\t\tif (!isCaseSensitive && matchFirstChar && CharOperation.prefixEquals(pattern, name, false)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+", "+\t\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\treturn matchFirstChar && CharOperation.camelCaseMatch(pattern, name, true);", "+"]}], "num": 48537}