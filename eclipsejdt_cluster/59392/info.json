{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7783cc9ffec414624ec4d924c611649", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e774da92e9c19daf30855e5c0662a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\treturn vb.type;", "+\t\t\t\t\t\treturn this.expressionType = vb.type;", "-\t\t\t\t\treturn checkFieldAccess(scope);", "+\t\t\t\t\treturn this.expressionType = checkFieldAccess(scope);", "-\t\t\t\treturn (TypeBinding) binding;", "+\t\t\t\treturn this.expressionType = (TypeBinding) binding;", "-\treturn this.reportError(scope);", "+\treturn this.expressionType = this.reportError(scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "951a31001034c2afaf2b5f6a7b62f6fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\treturn getOtherFieldBindings(scope);", "+\t\t\t\t\t\treturn this.expressionType = getOtherFieldBindings(scope);", "-\t\t\t\t\t\treturn getOtherFieldBindings(scope);", "+\t\t\t\t\t\treturn this.expressionType = getOtherFieldBindings(scope);", "-\t\t\t\t\treturn (TypeBinding) binding;", "+\t\t\t\t\treturn this.expressionType = (TypeBinding) binding;", "-\t\treturn this.reportError(scope);", "+\t\treturn this.expressionType = this.reportError(scope);"]}], "num": 59392}