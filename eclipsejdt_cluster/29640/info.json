{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbafdb3a0205e4f58dc420c0e5c2040a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072ff37f67754b3b2cd5e8d1f660b3d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "86397dfc80023f615cc88c0705b2ada916e6efb2", "commitAfterChange": "24624a25f60573230ed7652730faedca15fd4d8b", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic ICompilationUnit getWorkingCopy(String path, String source, WorkingCopyOwner owner, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " \tpublic ICompilationUnit getWorkingCopy(String path, String source, WorkingCopyOwner owner, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = getCompilationUnit(path).getWorkingCopy(owner, problemRequestor, null/*no progress monitor*/);", "+\t\tICompilationUnit workingCopy = getCompilationUnit(path);", "+\t\tif (owner != null)", "+\t\t\tworkingCopy = workingCopy.getWorkingCopy(owner, problemRequestor, null/*no progress monitor*/);", "+\t\telse", "+\t\t\tworkingCopy.becomeWorkingCopy(problemRequestor, null/*no progress monitor*/);", "+\t\tif (problemRequestor instanceof ProblemRequestor)", "+\t\t\t((ProblemRequestor) problemRequestor).initialize(source.toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb966e736d12c40ad0bd7337aa04d78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "signatureAfterChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "diff": ["+", "+\tif (this.annotationPath != null) {", "+\t\tfor (FileSystem.Classpath cp : this.checkedClasspaths) {", "+\t\t\tif (cp instanceof ClasspathJar)", "+\t\t\t\t((ClasspathJar) cp).annotationPath = this.annotationPath;", "+\t\t}", "+\t}"]}], "num": 29640}