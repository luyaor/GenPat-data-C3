{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ea4da4ee4c5697783b1a05670c60a2d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "954b7e7f0f3e4a7c409bbe408f2b09c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic void _invokevirtual(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokevirtual(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-", "-\t\tchar[] methodDescriptor = constantMethodref.getMethodDescriptor();", "-\t\tCharOperation.replace(methodDescriptor, '/', '.');", "-\t\tchar[] returnType = Signature.getReturnType(methodDescriptor);", "-\t\tCharOperation.replace(returnType, '/', '.');", "-\t\t", "-\t\t\t.append(", "-\t\t\t\tSignature.toCharArray(", "-\t\t\t\t\tmethodDescriptor,", "-\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\tgetParameterNames(methodDescriptor),", "-\t\t\t\t\ttrue,", "-\t\t\t\t\tfalse))", "-\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t.append(Signature.toCharArray(returnType))", "+\t\t\t.append(constantMethodref.getMethodName())", "+\t\t\t.append(constantMethodref.getMethodDescriptor())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f056737a2902e026efcefa4219410644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void _invokestatic(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokestatic(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-", "-\t\tchar[] methodDescriptor = constantMethodref.getMethodDescriptor();", "-\t\tCharOperation.replace(methodDescriptor, '/', '.');", "-\t\tchar[] returnType = Signature.getReturnType(methodDescriptor);", "-\t\tCharOperation.replace(returnType, '/', '.');", "-\t\t", "-\t\t\t.append(", "-\t\t\t\tSignature.toCharArray(", "-\t\t\t\t\tmethodDescriptor,", "-\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\tgetParameterNames(methodDescriptor),", "-\t\t\t\t\ttrue,", "-\t\t\t\t\tfalse))", "-\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t.append(Signature.toCharArray(returnType))", "+\t\t\t.append(constantMethodref.getMethodName())", "+\t\t\t.append(constantMethodref.getMethodDescriptor())"]}], "num": 4304}