{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "127f75a09388a08c5739df5766999c6a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b246fa2af74c365f884fbfc94257d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "0be54bcd07d7e9a734200ac55807f54a7fc49b71", "commitAfterChange": "d1b26e65b6c143c400fb90a9f9fead6e4ed62e62", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 36, "signatureBeforeChange": " \t \tpublic void printStats()", "signatureAfterChange": " \t \tpublic void printStats()", "diff": ["-\t\t\t\tthis.out.println(", "+\t\t\t\tthis.logger.printlnOut(", "-\t\t\t\tthis.out.println(Main.bind(\"compile.totalTime\", String.valueOf(time))); //$NON-NLS-1$", "+\t\t\t\tthis.logger.printlnOut(Main.bind(\"compile.totalTime\", String.valueOf(time))); //$NON-NLS-1$", "-\t\t\t\tthis.err.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "+\t\t\t\tthis.logger.printErr(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "-\t\t\t\tthis.err.print(", "+\t\t\t\tthis.logger.printErr(", "-\t\t\tthis.err.print(\" (\"); //$NON-NLS-1$", "+\t\t\tthis.logger.printErr(\" (\"); //$NON-NLS-1$", "-\t\t\t\t\tthis.err.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "+\t\t\t\t\tthis.logger.printErr(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "-\t\t\t\t\tthis.err.print(", "+\t\t\t\t\tthis.logger.printErr(", "-\t\t\t\t\tthis.err.print(\", \"); //$NON-NLS-1$", "+\t\t\t\t\tthis.logger.printErr(\", \"); //$NON-NLS-1$", "-\t\t\t\t\tthis.err.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "+\t\t\t\t\tthis.logger.printErr(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "-\t\t\t\t\tthis.err.print(", "+\t\t\t\t\tthis.logger.printErr(", "-\t\t\tthis.err.println(\")\"); //$NON-NLS-1$", "+\t\t\tthis.logger.printlnErr(\")\"); //$NON-NLS-1$", "-\t\t\t\tthis.out.println(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "+\t\t\t\tthis.logger.printlnOut(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "-\t\t\t\tthis.out.println(", "+\t\t\t\tthis.logger.printlnOut("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ea2243d6eaff7a2591f7078db2571a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\tSystem.out.println(\"BasicSearchEngine.searchAllTypeNames(char[], char[], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- package name: \"+(packageName==null?\"null\":new String(packageName))); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tSystem.out.println(\"\t- type name: \"+(typeName==null?\"null\":new String(typeName))); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tSystem.out.println(\"\t- match rule: \"+getMatchRuleString(matchRule)); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- search for: \"+searchFor); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"\t- scope: \"+scope); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"BasicSearchEngine.searchAllTypeNames(char[], char[], int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor)\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- package name: \"+(packageName==null?\"null\":new String(packageName))); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"\t- type name: \"+(typeName==null?\"null\":new String(typeName))); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"\t- match rule: \"+getMatchRuleString(matchRule)); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- search for: \"+searchFor); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"\t- scope: \"+scope); //$NON-NLS-1$", "+\t\t}", "+", "+\t\t// Return on invalid combination of package and type names", "+\t\tif (packageName == null || packageName.length == 0) {", "+\t\t\tif (typeName != null && typeName.length == 0) {", "+\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\tUtil.verbose(\"\t=> return no result due to invalid empty values for package and type names!\"); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}", "-\t\t\t"]}], "num": 19130}