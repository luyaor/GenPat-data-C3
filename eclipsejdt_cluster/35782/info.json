{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0180b82f840911431591bab31fedeff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4197b3d05a574377c28db7f407b2938f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c1c274932491e0be8f680c6ad9f4ab9bacdf19f5", "commitAfterChange": "0c46c5213b09d0da0f69c7b26f904c0f9c4b8264", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 49, "signatureBeforeChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\tif (delta != null) {\r", "-\t\t\t\t\t\ttry {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tif (delta != null) {\r", "-\t\t\t\t\t\t} finally {\r", "-\t\t\t\t\t\t\t// fix for 1FWIAEQ: ITPJCORE:ALL - CRITICAL - \"projects being deleted\" cache not cleaned up when solution deleted\r", "-\t\t\t\t\t\t\tif (!this.projectsBeingDeleted.isEmpty()) {\r", "-\t\t\t\t\t\t\t\tthis.projectsBeingDeleted= new ArrayList(1);\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\t\t\t\r", "-\t\t\t\t\t}\t\t\r", "+\t\t\t\t\t\t}\t\t\r", "+\t\t\t\t\t} finally {\r", "+\t\t\t\t\t\t// workaround for bug 15168 circular errors not reported \r", "+\t\t\t\t\t\tthis.javaProjectsCache = null;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b3d399558d5285cae3e86eda72a4f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "3628f70cbcd54c8d129a1cc8c813e92d2b73fa38", "commitAfterChange": "83bcf331911b5706551c1e86ef65bbed7aeb26c7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "signatureAfterChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "diff": ["-\tif (this.binding == null && this.suspendedResolutionState != null && !this.suspendedResolutionState.hasReportedError) {", "+\tthis.typeExpected = targetType;", "+\tboolean needsUpdate = this.binding == null || \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// not yet resolved", "+\t\t\t(this.resolvedType != null && targetType != null && !this.resolvedType.isCompatibleWith(targetType));\t// previous attempt was wrong", "+\tif (needsUpdate && this.suspendedResolutionState != null && !this.suspendedResolutionState.hasReportedError) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33b4413943d6dababcb7ef5ddb77794", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b2a1a7d064fd5695fce4ad30f84d3e52d57db8d6", "commitAfterChange": "58d495f741112fe1313f49af60925198c18bb8e1", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public boolean compile(String[] argv)", "signatureAfterChange": " public boolean compile(String[] argv)", "diff": ["-\t\t\tfor (int i = 0; i < this.repetitions; i++) {", "+\t\t\tfor (this.currentRepetition = 0; this.currentRepetition < this.maxRepetition; this.currentRepetition++) {", "-\t\t\t\tthis.lineCount = 0;", "-\t\t\t\tif (this.repetitions > 1) {", "+\t\t\t\tif (this.maxRepetition > 1) {", "-\t\t\t\t\tthis.logger.logRepetition(i, this.repetitions);", "+\t\t\t\t\tthis.logger.logRepetition(this.currentRepetition, this.maxRepetition);", "-\t\t\tif (this.times != null) {", "-\t\t\t\tthis.logger.logAverage(this.times, this.lineCount);", "+\t\t\tif (this.compilerStats != null) {", "+\t\t\t\tthis.logger.logAverage();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f63c52ab4e4e58d8577120c5aadc825d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean performConcurrentJob( \t\tIJob searchJob, \t\tint waitingPolicy, \t\tIProgressMonitor progress)", "signatureAfterChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "diff": ["-\tpublic boolean performConcurrentJob(", "-\t\tIJob searchJob,", "-\t\tint waitingPolicy,", "-\t\tIProgressMonitor progress) {", "-", "+\tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress) {", "-\t\t\t\t\t", "+", "-\t\t\t\t\t\tif (t != null) {", "+\t\t\t\t\t\tif (t != null)", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (t != null) {", "+\t\t\t\t\t\tif (originalPriority > -1 && t.isAlive())", "-\t\t\t\t\t\t}", "-\t\t\t\t\tif (subProgress != null) {", "+\t\t\t\t\tif (subProgress != null)", "-\t\t\t\t\t}", "-\t\tif (progress != null) {", "+\t\tif (progress != null)", "-\t\t}"]}], "num": 35782}