{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3f5e9790eac6561f58e5360cb85108d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fde4f39364642debec01e8671f629ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "543f951d6390669f9bed8c637d9d6aef509af249", "commitAfterChange": "aac32d052b463fcebfbd1f5deeece1cbb26b197a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t((SourceTypeBinding) codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isReadAccess, isSuperAccess());", "+\t\t\t\t((SourceTypeBinding) codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isReadAccess, false /* not super ref in remote type*/);", "-\t\tSourceTypeBinding destinationType =", "-\t\t\t(SourceTypeBinding) (((QualifiedSuperReference) this.receiver)", "-\t\t\t\t.currentCompatibleType);", "+\t\tSourceTypeBinding destinationType = (SourceTypeBinding) (((QualifiedSuperReference) this.receiver).currentCompatibleType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a912a787dd1b081822ed3bb123913da1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "543f951d6390669f9bed8c637d9d6aef509af249", "commitAfterChange": "aac32d052b463fcebfbd1f5deeece1cbb26b197a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-", "-\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, isSuperAccess());", "+\t\t\tthis.syntheticAccessor = ((SourceTypeBinding)codegenBinding.declaringClass).addSyntheticMethod(codegenBinding, false /* not super access there */);"]}], "num": 1647}