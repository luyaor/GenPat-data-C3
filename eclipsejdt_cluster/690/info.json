{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5503cf07666df5c078082f98808cbd10", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02dcf49876ad647424459014b3565478", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "42fae1490ed2d92e261335f913496df0bca26df8", "commitAfterChange": "c61a3471dc232eb282f499e766b6240869dfcc94", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "     public void _test087()", "signatureAfterChange": "     public void test087()", "diff": ["-    public void _test087() {", "+    public void test087() {", "-            \"----------\\n\" + ", "-            \"1. WARNING in X.java (at line 5)\\n\" + ", "-            \"   int i = new X().foo(12);\\n\" + ", "-            \"           ^^^^^^^^^^^^^^^\\n\" + ", "-            \"The expression of type Integer is unboxed into int\\n\" + ", "-            \"----------\\n\" + ", "-            \"2. WARNING in X.java (at line 5)\\n\" + ", "-            \"   int i = new X().foo(12);\\n\" + ", "-            \"                       ^^\\n\" + ", "-            \"The expression of type int is boxed into Integer\\n\" + ", "-            \"----------\\n\" + ", "-            \"3. ERROR in X.java (at line 8)\\n\" + ", "-            \"   Zork z;\\n\" + ", "-            \"   ^^^^\\n\" + ", "-            \"Zork cannot be resolved to a type\\n\" + ", "-            \"----------\\n\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tint i = new X().foo(12);\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The expression of type Integer is unboxed into int\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tint i = new X().foo(12);\\n\" + ", "+\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31311929858b56593c3c81882b144ff1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "36440d35cfc7c6b6076914a8cb79667298381776", "commitAfterChange": "67906323c7f830a22c9808f11d16f98f257e4035", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "     public void _test128()", "signatureAfterChange": "     public void test128()", "diff": ["-    public void _test128() {", "+    public void test128() {", "-            \"----------\\n\" + ", "-            \"1. WARNING in X.java (at line 5)\\n\" + ", "-            \"   List<String> ls1 = list;\\n\" + ", "-            \"                      ^^^^\\n\" + ", "-            \"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "-            \"----------\\n\" + ", "-            \"2. ERROR in X.java (at line 11)\\n\" + ", "-            \"   Zork z\\n\" + ", "-            \"   ^^^^\\n\" + ", "-            \"Zork cannot be resolved to a type\\n\" + ", "-            \"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tList<String> ls1 = list;\\n\" + ", "+\t\t\t\"\t                   ^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");", "+    }       "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb9a7e5379638ae9272c3947113c889", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "36440d35cfc7c6b6076914a8cb79667298381776", "commitAfterChange": "67906323c7f830a22c9808f11d16f98f257e4035", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "     public void _test127()", "signatureAfterChange": "     public void test127()", "diff": ["-    public void _test127() {", "+    public void test127() {", "-            \"----------\\n\" + ", "-            \"1. WARNING in Y.java (at line 1)\\n\" + ", "-            \"   public class Y extends X {\\n\" + ", "-            \"                ^\\n\" + ", "-            \"The constructor X() is deprecated\\n\" + ", "-            \"----------\\n\" + ", "-            \"2. ERROR in Y.java (at line 4)\\n\" + ", "-            \"   Zork z;\\n\" + ", "-            \"   ^^^^\\n\" + ", "-            \"Zork cannot be resolved to a type\\n\" + ", "-            \"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y extends X {\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"The constructor X() is deprecated\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Y.java (at line 4)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 690}