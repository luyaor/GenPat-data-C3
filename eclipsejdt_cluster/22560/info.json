{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49cda3174d1d228125f25cddbfb36fff", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc632157280bc625e4a905efbb379cd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "0747d5e7c6159c917fde8175fc9c67a8bade55fc", "commitAfterChange": "07efa537488d0df9da9dc6880afc536aaccc6b60", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  private void setupExternalAnnotationProvider(IProject project, final IPath externalAnnotationPath, \t\tZipFile annotationZip, ClassFileReader reader, final String typeName)", "signatureAfterChange": "  private void setupExternalAnnotationProvider(IProject project, final IPath externalAnnotationPath, \t\tZipFile annotationZip, ClassFileReader reader, final String typeName)", "diff": ["-\tIResource resource = root.getFolder(externalAnnotationPath);", "+\tIResource resource = externalAnnotationPath.segmentCount() == 1", "+\t\t\t? root.getProject(externalAnnotationPath.lastSegment())", "+\t\t\t: root.getFolder(externalAnnotationPath);", "-\tString resolvedPath = resource.exists()", "-\t\t\t\t\t\t\t? resource.getLocation().toString() // workspace lookup succeeded -> resolve it", "-\t\t\t\t\t\t\t: externalAnnotationPath.toString(); // not in workspace, use as is", "+\tString resolvedPath;", "+\tif (resource.exists()) {", "+\t\tif (resource.isVirtual()) {", "+\t\t\tUtil.log(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, ", "+\t\t\t\t\t\"Virtual resource \"+externalAnnotationPath+\" cannot be used as annotationpath for project \"+project.getName())); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\treturn;", "+\t\t}", "+\t\tresolvedPath = resource.getLocation().toString(); // workspace lookup succeeded -> resolve it", "+\t} else {", "+\t\tresolvedPath = externalAnnotationPath.toString(); // not in workspace, use as is", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb7454a61113043adcdde068a57bf5ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java", "commitBeforeChange": "75f6c6b2c7c81985241a581f8bc5031f39fbaf5d", "commitAfterChange": "332e6bf80afa0c9205b8423548382e869a9bd2ee", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic IJavaElement getJavaElement()", "signatureAfterChange": " \tpublic IJavaElement getJavaElement()", "diff": ["+\t\t// this is not true in standalone DOM/AST", "+\t\tif (pkgs.length == 0) {", "+\t\t\t// add additional tracing as this should not happen", "+\t\t\torg.eclipse.jdt.internal.core.util.Util.log(", "+\t\t\t\tnew Status(", "+\t\t\t\t\t\tIStatus.WARNING,", "+\t\t\t\t\t\tJavaCore.PLUGIN_ID,", "+\t\t\t\t\t\t\"Searching for package \" + getName() + \" returns an empty array\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\treturn null;", "+\t\t}"]}], "num": 22560}