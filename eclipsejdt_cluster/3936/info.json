{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b1c3f7549c754e5e38439a1b9de6df7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96efb736a7d624faf66030f174936423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "signatureAfterChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "diff": ["- */\r", "-public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "-\tfType= (BinaryType)type;\r", "-\r", "-\tthis.searchedElement = searchedElement;\r", "-\tthis.types = new IType[1];\r", "-\tthis.typeDeclarationStarts = new int[1];\r", "-\tthis.typeNameRanges = new SourceRange[1];\r", "-\tthis.typeDepth = -1;\r", "-\r", "-\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "-\ttry {\r", "-\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "-\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "-\t\tif (searchedElement != null) {\r", "-\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\treturn range;\r", "-\t\t\treturn null;\r", "-\t} finally {\r", "-\t\tif (searchedElement != null) {\r", "-\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\tfType= null;\r", "-\t\tthis.searchedElement = null;\r", "-\t\tthis.types = null;\r", "-\t\tthis.typeDeclarationStarts = null;\r", "-\t\tthis.typeNameRanges = null;\r", "+\t */\r", "+\tpublic ISourceRange mapSource(\r", "+\t\tIType type,\r", "+\t\tchar[] contents,\r", "+\t\tIJavaElement searchedElement) {\r", "+\t\tfType = (BinaryType) type;\r", "+\r", "+\t\tthis.importsTable.remove(fType);\r", "+\t\tthis.importsCounterTable.remove(fType);\r", "+\t\tthis.searchedElement = searchedElement;\r", "+\t\tthis.types = new IType[1];\r", "+\t\tthis.typeDeclarationStarts = new int[1];\r", "+\t\tthis.typeNameRanges = new SourceRange[1];\r", "-\t}\r", "-}\r", "+\r", "+\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "+\t\ttry {\r", "+\t\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "+\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\t\tparser.parseCompilationUnit(\r", "+\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\" ), //$NON-NLS-1$\r", "+\t\t\t\tfalse);\r", "+\t\t\tif (searchedElement != null) {\r", "+\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\t\treturn range;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "+\t\t} finally {\r", "+\t\t\tif (searchedElement != null) {\r", "+\t\t\t\tfSourceRanges = oldSourceRanges;\r", "+\t\t\t}\r", "+\t\t\tfType = null;\r", "+\t\t\tthis.searchedElement = null;\r", "+\t\t\tthis.types = null;\r", "+\t\t\tthis.typeDeclarationStarts = null;\r", "+\t\t\tthis.typeNameRanges = null;\r", "+\t\t\tthis.typeDepth = -1;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24c03a902674a887feb633de0ee92e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "signatureAfterChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "diff": ["- */\r", "-public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "-\tfType= (BinaryType)type;\r", "-\r", "-\tthis.searchedElement = searchedElement;\r", "-\tthis.types = new IType[1];\r", "-\tthis.typeDeclarationStarts = new int[1];\r", "-\tthis.typeNameRanges = new SourceRange[1];\r", "-\tthis.typeDepth = -1;\r", "-\r", "-\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "-\ttry {\r", "-\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "-\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "-\t\tif (searchedElement != null) {\r", "-\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\treturn range;\r", "-\t\t\treturn null;\r", "-\t} finally {\r", "-\t\tif (searchedElement != null) {\r", "-\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\tfType= null;\r", "-\t\tthis.searchedElement = null;\r", "-\t\tthis.types = null;\r", "-\t\tthis.typeDeclarationStarts = null;\r", "-\t\tthis.typeNameRanges = null;\r", "+\t */\r", "+\tpublic ISourceRange mapSource(\r", "+\t\tIType type,\r", "+\t\tchar[] contents,\r", "+\t\tIJavaElement searchedElement) {\r", "+\t\tfType = (BinaryType) type;\r", "+\r", "+\t\tthis.importsTable.remove(fType);\r", "+\t\tthis.importsCounterTable.remove(fType);\r", "+\t\tthis.searchedElement = searchedElement;\r", "+\t\tthis.types = new IType[1];\r", "+\t\tthis.typeDeclarationStarts = new int[1];\r", "+\t\tthis.typeNameRanges = new SourceRange[1];\r", "-\t}\r", "-}\r", "+\r", "+\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "+\t\ttry {\r", "+\t\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "+\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\t\tparser.parseCompilationUnit(\r", "+\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\" ), //$NON-NLS-1$\r", "+\t\t\t\tfalse);\r", "+\t\t\tif (searchedElement != null) {\r", "+\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\t\treturn range;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "+\t\t} finally {\r", "+\t\t\tif (searchedElement != null) {\r", "+\t\t\t\tfSourceRanges = oldSourceRanges;\r", "+\t\t\t}\r", "+\t\t\tfType = null;\r", "+\t\t\tthis.searchedElement = null;\r", "+\t\t\tthis.types = null;\r", "+\t\t\tthis.typeDeclarationStarts = null;\r", "+\t\t\tthis.typeNameRanges = null;\r", "+\t\t\tthis.typeDepth = -1;\r", "+\t}\r"]}], "num": 3936}