{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86fcdd0e66bab62197d95d81820e61e2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28a340721e1567281c25a95fe0a212cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "c295624cf25dea9fdc929a62413bd288dbeb35d7", "commitAfterChange": "c9eaba06bc7b86cfbdd54b68a2792d02e0e113ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValues()", "signatureAfterChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValues()", "diff": ["-\t\t\tExecutableElement e = new ExecutableElementImpl(pair.getMethodBinding());", "-\t\t\tAnnotationValue v = new AnnotationValueImpl(pair.getValue());", "+\t\t\tMethodBinding method = pair.getMethodBinding();", "+\t\t\tExecutableElement e = new ExecutableElementImpl(method);", "+\t\t\tAnnotationValue v = new AnnotationValueImpl(pair.getValue(), method.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1e27a049917e5313be23941dc30e8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "04dd7b5662316f750b50889bfb38f6b2680c090a", "commitAfterChange": "0854fe8445ddc30ed993c5f051a33b881d287e7a", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "signatureAfterChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "diff": ["+\t\tINameEnvironment nameEnvironment = getNameEnvironment(new String[]{}, classLibraries);", "-\t\t\t\tgetNameEnvironment(new String[]{}, classLibraries),", "+\t\t\t\tnameEnvironment,", "+\t\t\tnameEnvironment.cleanup();"]}], "num": 55052}