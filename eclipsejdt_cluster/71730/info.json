{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b9f04420e8c13f560210a5c68c78164", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42bd4ce86806fc3d386819b7028373f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "563f1e739f7eaff2bdc82dc1444b07f38b7a7a82", "commitAfterChange": "b1f709bd1fd47a690112f71bf976691c90f21c2e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void fire(IJavaElementDelta customDelta, int eventType)", "signatureAfterChange": " \tpublic void fire(IJavaElementDelta customDelta, int eventType)", "diff": ["-\t\tIElementChangedListener[] listeners = this.state.elementChangedListeners;", "-\t\tint[] listenerMask = this.state.elementChangedListenerMasks;", "-\t\tint listenerCount = this.state.elementChangedListenerCount;", "+\t\tIElementChangedListener[] listeners;", "+\t\tint[] listenerMask;", "+\t\tint listenerCount;", "+\t\tsynchronized (this.state) {", "+\t\t\tlisteners = this.state.elementChangedListeners;", "+\t\t\tlistenerMask = this.state.elementChangedListenerMasks;", "+\t\t\tlistenerCount = this.state.elementChangedListenerCount;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834efbb3fab95568bad1e32366d2dedf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public synchronized void resetBatchProcessors(IJavaProject javaProj)", "signatureAfterChange": "     public void resetBatchProcessors(IJavaProject javaProj)", "diff": ["-    public synchronized void resetBatchProcessors(IJavaProject javaProj) {", "+    public void resetBatchProcessors(IJavaProject javaProj) {", "-    \tMap<AnnotationProcessorFactory, Attributes> factories = _project2Java5Factories.get(javaProj);", "+    \t", "+    \tMap<AnnotationProcessorFactory, Attributes> factories;", "+\t\tMap<IServiceFactory, Attributes> java6factories;", "+\t\tsynchronized (cacheMutex) {", "+\t\t\tfactories = _project2Java5Factories.get(javaProj);", "+\t\t\tjava6factories = _project2Java6Factories.get(javaProj);", "+    \t}", "-    \t\tMap<IServiceFactory, Attributes> java6factories = _project2Java6Factories.get(javaProj);", "-    \t}", "-    \tif (batchProcsFound) {", "-    \t\t_project2Java5Factories.remove(javaProj);", "-    \t\t_project2Java6Factories.remove(javaProj);", "-    \t}", "+\t\t}", "-    \tClassLoader c = _batchLoaders.remove(javaProj);", "+\t\tClassLoader c;", "+\t\tsynchronized (cacheMutex) {", "+\t\t\tif (batchProcsFound) {", "+\t\t\t\t_project2Java5Factories.remove(javaProj);", "+\t\t\t\t_project2Java6Factories.remove(javaProj);", "+\t\t\t}", "+", "+\t\t\tc = _batchLoaders.remove(javaProj);", "+    \t}"]}], "num": 71730}