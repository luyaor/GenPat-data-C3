{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5219f15b0b0ed15ac59344082a59e5f1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736e6c15ca95b42fc3ec84fcc87c1f00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/base/XMLComparer.java", "commitBeforeChange": "e5afcb0ec821099a058acc796f2348c4c58a2e3e", "commitAfterChange": "1a36ae2092977e6a13134bbe916d1e02aefe6f2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate boolean collectDeclarationContents(Element declarationNode, DeclarationContents contents)", "signatureAfterChange": " \tprivate boolean collectDeclarationContents(Element declarationNode, DeclarationContents contents)", "diff": ["-\t\t\tif (ANNOTATIONS.equals(nodeName)) {", "+\t\t\tif (ANNOTATIONS_TAG.equals(nodeName)) {", "+\t\t\t} else if (SUPERCLASS_TAG.equals(nodeName)) {", "+\t\t\t\tif (contents.superclass != null) {", "+\t\t\t\t\tprintProblem(\"XML syntax error: a declaration contained more than one <superclass> node\");", "+\t\t\t\t\tprintDifferences();", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\tcontents.superclass = e;", "+\t\t\t} else if (INTERFACES_TAG.equals(nodeName)) {", "+\t\t\t\tif (contents.interfaces != null) {", "+\t\t\t\t\tprintProblem(\"XML syntax error: a declaration contained more than one <interfaces> node\");", "+\t\t\t\t\tprintDifferences();", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\tcontents.interfaces = e;", "-\t\t\t\tString sname = e.getAttribute(SNAME);", "+\t\t\t\tString sname = e.getAttribute(SNAME_TAG);", "-\t\t\t\tif (EXECUTABLE_ELEMENT.equals(nodeName)) {", "+\t\t\t\tif (EXECUTABLE_ELEMENT_TAG.equals(nodeName)) {", "-\t\t\t\t} else if (TYPE_ELEMENT.equals(nodeName)) {", "+\t\t\t\t} else if (TYPE_ELEMENT_TAG.equals(nodeName)) {", "-\t\t\t\t} else if (VARIABLE_ELEMENT.equals(nodeName)) {", "+\t\t\t\t} else if (VARIABLE_ELEMENT_TAG.equals(nodeName)) {", "+\t\t\t\t\tprintDifferences();", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabd095b05629af6f68fc4569652918c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/base/XMLComparer.java", "commitBeforeChange": "e5afcb0ec821099a058acc796f2348c4c58a2e3e", "commitAfterChange": "1a36ae2092977e6a13134bbe916d1e02aefe6f2e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate boolean compareDeclarations(Element actualDecl, Element expectedDecl)", "signatureAfterChange": " \tprivate boolean compareDeclarations(Element actualDecl, Element expectedDecl)", "diff": ["-\t\t\t\t\t+ expectedDecl.getAttribute(SNAME));", "+\t\t\t\t\t+ expectedDecl.getAttribute(SNAME_TAG));", "-\t\t\t\t\t+ actualDecl.getAttribute(SNAME));", "+\t\t\t\t\t+ actualDecl.getAttribute(SNAME_TAG));", "+\t\t", "+\t\t// compare superclasses.  Ignore if reference does not specify a superclass.", "+\t\tif (expectedContents.superclass != null) {", "+\t\t\tif (actualContents.superclass == null) {", "+\t\t\t\tprintProblem(\"No superclass found for element: \" + actualDecl.getAttribute(SNAME_TAG));", "+\t\t\t\tprintDifferences();", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (!compareSuperclassNodes(actualContents.superclass, expectedContents.superclass)) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\t// compare interface lists.  Ignore if reference does not specify interfaces.", "+\t\t// TODO: javac fails to provide unresolved interfaces.  Here, we ignore interfaces altogether", "+\t\t// if we're ignoring javac bugs, which means we also ignore the non-error cases.", "+\t\tif (expectedContents.interfaces != null && !_ignoreJavacBugs) {", "+\t\t\tif (actualContents.interfaces == null) {", "+\t\t\t\tprintProblem(\"No interfaces list found for element: \" + actualDecl.getAttribute(SNAME_TAG));", "+\t\t\t\tprintDifferences();", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (!compareInterfacesNodes(actualContents.interfaces, expectedContents.interfaces)) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}"]}], "num": 41933}