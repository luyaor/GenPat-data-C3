{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1713e6ea7b277aceee2fd2bf6a564aa8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3ab48e6b3b1c2030d25497878b9626", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean shouldIndex(IDocument document)", "signatureAfterChange": " \tprotected void addIndexEntry(char[] category, char[] key)", "diff": ["- */", "-public boolean shouldIndex(IDocument document) {", "-\tString type = document.getType();", "-\tString[] supportedTypes = this.getFileTypes();", "-\tfor (int i = 0, l = supportedTypes.length; i < l; i++)", "-\t\tif (supportedTypes[i].equals(type)) return true;", "-\treturn false;", "-}", "+\t}", "+\tprotected void addIndexEntry(char[] category, char[] key) {", "+\t\tSearchParticipant.addIndexEntry(category, key, this.document.getPath(), this.indexPath);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9954d06662091b83d7aaea7c94ae02c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "f5186f4bb592c82c031d71e3ac997120db3572db", "commitAfterChange": "e5922a5706d1abdae05b12aa57fc816aa6feb6e1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 16, "signatureBeforeChange": "  boolean uses(TypeVariableBinding variable)", "signatureAfterChange": "  public boolean isReferencing(TypeVariableBinding variable)", "diff": ["+", "+public boolean isReferencing(TypeVariableBinding variable) {", "+\tif (this == variable) {", "+\t\treturn true;", "+\t}", "+\tif (this.firstBound.isReferencing(variable)) {", "+\t\treturn true;", "+\t}", "+\tfor (int i = 0, l = this.superInterfaces.length ; i < l ; i++) {", "+\t\tif (this.superInterfaces[i].isReferencing(variable)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}", "+\treturn false;", "+}", "-", "-boolean uses(TypeVariableBinding variable) {", "-\treturn CharOperation.equals(variable.sourceName, this.sourceName);", "-}"]}], "num": 53884}