{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff779fd1e50f1e0a2116efb0d616e82e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb6dc30b2275876b95752bc5e83b8bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "47f26d8c04a2e4027106cdff03430707105db9f2", "commitAfterChange": "5022709d9b0934611de6ddf11e79067d32b49675", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "signatureAfterChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "diff": ["+\tFlowInfo upstreamCopy = this.upstreamNullFlowInfo.copy();", "-\t\t\tthis.parent.recordUsingNullReference(scope, local, location,", "-\t\t\t\t\tthis.nullCheckTypes[i], flowInfo);", "+\t\t\t// https://bugs.eclipse.org/376263: avoid further deferring if the upstream info", "+\t\t\t// already has definite information (which might get lost for deferred checking).", "+\t\t\tif (!(this.nullCheckTypes[i] == MAY_NULL && upstreamCopy.isDefinitelyNonNull(local))) {", "+\t\t\t\tthis.parent.recordUsingNullReference(scope, local, location,", "+\t\t\t\t\t\tthis.nullCheckTypes[i], flowInfo);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a49a08e876f09ce2aa32ca1e0794ad9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "e49db6968e42abb8ff526d386a122936552a3efd", "commitAfterChange": "aae374b319008b3e7997fb943d9dfc19fcb7029e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "signatureAfterChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "diff": ["+\tFlowInfo upstreamCopy = this.upstreamNullFlowInfo.copy();", "-\t\t\tthis.parent.recordUsingNullReference(scope, local, location,", "-\t\t\t\t\tthis.nullCheckTypes[i], flowInfo);", "+\t\t\t// https://bugs.eclipse.org/376263: avoid further deferring if the upstream info", "+\t\t\t// already has definite information (which might get lost for deferred checking).", "+\t\t\tif (!(this.nullCheckTypes[i] == MAY_NULL && upstreamCopy.isDefinitelyNonNull(local))) {", "+\t\t\t\tthis.parent.recordUsingNullReference(scope, local, location,", "+\t\t\t\t\t\tthis.nullCheckTypes[i], flowInfo);", "+\t\t\t}"]}], "num": 26619}