{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cae2d376ab397555b364bfe1c51c6b6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e9783dab5e9fb61ea61aaf1db0881b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\t\t\tthis.memberTypes[i] = environment.getTypeFromConstantPoolName(memberTypeStructures[i].getName(), 0, -1, false);", "+\t\t\t\tthis.memberTypes[i] = environment.getTypeFromConstantPoolName(memberTypeStructures[i].getName(), 0, -1, false, null /* could not be missing */);", "+\t", "+\tchar[][][] missingTypeNames = binaryType.getMissingTypeNames();\t", "-\t\t\tthis.superclass = environment.getTypeFromConstantPoolName(superclassName, 0, -1, false);", "+\t\t\tthis.superclass = environment.getTypeFromConstantPoolName(superclassName, 0, -1, false, missingTypeNames);", "-\t\t\t\t\tthis.superInterfaces[i] = environment.getTypeFromConstantPoolName(interfaceNames[i], 0, -1, false);", "+\t\t\t\t\tthis.superInterfaces[i] = environment.getTypeFromConstantPoolName(interfaceNames[i], 0, -1, false, missingTypeNames);", "-\t\t\tthis.typeVariables = createTypeVariables(wrapper, true);", "+\t\t\tthis.typeVariables = createTypeVariables(wrapper, true, missingTypeNames);", "-\t\tthis.superclass = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this);", "+\t\tthis.superclass = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this, missingTypeNames);", "-\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this));", "+\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, Binding.NO_TYPE_VARIABLES, this, missingTypeNames));", "-\t\tcreateFields(binaryType.getFields(), sourceLevel);", "-\t\tcreateMethods(binaryType.getMethods(), sourceLevel);", "+\t\tcreateFields(binaryType.getFields(), sourceLevel, missingTypeNames);", "+\t\tcreateMethods(binaryType.getMethods(), sourceLevel, missingTypeNames);", "-\t\tsetAnnotations(createAnnotations(binaryType.getAnnotations(), this.environment));\t", "+\t\tsetAnnotations(createAnnotations(binaryType.getAnnotations(), this.environment, missingTypeNames));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d50553fab3cd59fd68fb74ef30d6fff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "signatureAfterChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-private MethodBinding createMethod(IBinaryMethod method, long sourceLevel) {", "+private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames) {", "-\t\t\t\t\tparameters[i - startIndex] = environment.getTypeFromSignature(methodDescriptor, index, end, false, this);", "+\t\t\t\t\tparameters[i - startIndex] = environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames);", "-\t\t\t\t\t\tparamAnnotations[i - startIndex] = createAnnotations(method.getParameterAnnotations(i), this.environment);", "+\t\t\t\t\t\tparamAnnotations[i - startIndex] = createAnnotations(method.getParameterAnnotations(i), this.environment, missingTypeNames);", "-\t\t\t\t\texceptions[i] = environment.getTypeFromConstantPoolName(exceptionTypes[i], 0, -1, false);", "+\t\t\t\t\texceptions[i] = environment.getTypeFromConstantPoolName(exceptionTypes[i], 0, -1, false, missingTypeNames);", "-\t\t\treturnType = environment.getTypeFromSignature(methodDescriptor, index + 1, -1, false, this);   // index is currently pointing at the ')'", "+\t\t\treturnType = environment.getTypeFromSignature(methodDescriptor, index + 1, -1, false, this, missingTypeNames);   // index is currently pointing at the ')'", "-\t\t\ttypeVars = createTypeVariables(wrapper, false);", "+\t\t\ttypeVars = createTypeVariables(wrapper, false, missingTypeNames);", "-\t\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, typeVars, this));", "+\t\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, typeVars, this, missingTypeNames));", "-\t\t\t\t\t\tparamAnnotations[i] = createAnnotations(method.getParameterAnnotations(i), this.environment);", "+\t\t\t\t\t\tparamAnnotations[i] = createAnnotations(method.getParameterAnnotations(i), this.environment, missingTypeNames);", "-\t\treturnType = environment.getTypeFromTypeSignature(wrapper, typeVars, this);", "+\t\treturnType = environment.getTypeFromTypeSignature(wrapper, typeVars, this, missingTypeNames);", "-\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, typeVars, this));", "+\t\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, typeVars, this, missingTypeNames));", "-\t\t\t\t\t\texceptions[i] = environment.getTypeFromConstantPoolName(exceptionTypes[i], 0, -1, false);", "+\t\t\t\t\t\texceptions[i] = environment.getTypeFromConstantPoolName(exceptionTypes[i], 0, -1, false, missingTypeNames);", "-\t\t\tcreateAnnotations(method.getAnnotations(), this.environment),", "+\t\t\tcreateAnnotations(method.getAnnotations(), this.environment, missingTypeNames),", "-\t\t\tisAnnotationType() ? convertMemberValue(method.getDefaultValue(), this.environment) : null);", "+\t\t\tisAnnotationType() ? convertMemberValue(method.getDefaultValue(), this.environment, missingTypeNames) : null);"]}], "num": 7528}