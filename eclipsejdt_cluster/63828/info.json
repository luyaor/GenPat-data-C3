{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35e136894b63fa5aa77a096d0d1a4c7c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "475dfad181b550befcfc076e3e262b33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperFieldAccess.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof SuperFieldAccess)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tSuperFieldAccess o = (SuperFieldAccess) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getName(), o.getName())\r", "-\t\t\t&& ASTNode.equalNodes(getQualifier(), o.getQualifier()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94870bb38c3e5b3f49dba5d857ba9139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof FieldAccess)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tFieldAccess o = (FieldAccess) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getExpression(), o.getExpression())\r", "-\t\t\t&& ASTNode.equalNodes(getName(), o.getName()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e573a218d5fd60027c34c43b789e7cb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof QualifiedName)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tQualifiedName o = (QualifiedName) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getQualifier(), o.getQualifier())\r", "-\t\t\t&& ASTNode.equalNodes(getName(), o.getName()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}], "num": 63828}