{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18bc570ccf494c4834d758e19d5dd437", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0816e08a29d465d02da6502d65b750f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "4363912f18eb1d976122576b794dd16e256f3f9f", "commitAfterChange": "431faff9c8cb5108eaa2142661cdcdc8781fb704", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "  \tprotected int retrieveEndingSemiColonPosition(int start, int end)", "signatureAfterChange": "  \tprotected int retrieveSemiColonPosition(Expression node)", "diff": ["-\tprotected int retrieveEndingSemiColonPosition(int start, int end) {", "-\t\tint count = 0;", "-\t\tthis.scanner.resetTo(start, end);", "+\tprotected int retrieveSemiColonPosition(Expression node) {", "+\t\tint start = node.getStartPosition();", "+\t\tint length = node.getLength();", "+\t\tint end = start + length;", "+\t\tthis.scanner.resetTo(end, this.compilationUnitSourceLength);", "-\t\t\t\t\t\tif (count == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE :", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "-\t\t\t\t\t\tcount--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN :", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN :", "-\t\t\t\t\t\tcount--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACKET :", "-\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET :", "-\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17de90620a11642c891111064251d797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "117709f4602294baf15bac7bcb137817e3cbd3c5", "commitAfterChange": "5812b4b743789dbe0634db5995ddcd73f06840be", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tprotected int retrievePositionBeforeNextCommaOrSemiColon(int start, int end)", "signatureAfterChange": " \tprotected int retrievePositionBeforeNextCommaOrSemiColon(int start, int end)", "diff": ["-\t\tint braceCounter = 0;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACKET :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tif (braceCounter == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.startPosition - 1;", "+\t\t\t\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isFakeToken()) {", "+\t\t\t\t\t\t\treturn -1;", "+\t\t\t\t\t\treturn this.scanner.startPosition - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779f8720eb2c3b389038fdf39c2382a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0aed651787bbf037293557b7c88429b8514a95c0", "commitAfterChange": "1719c13f5400eb5914bb79f89f0e1d4c54e3cd14", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " protected void reportAccurateParameterizedTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy) throws CoreException", "signatureAfterChange": " protected void reportAccurateParameterizedTypeReference(ASTNode typeRef, char[] name, IJavaElement element, int accuracy) throws CoreException", "diff": ["-\t\t\ttry {", "-\t\t\t\tint count = 0;", "-\t\t\t\twhile (token != TerminalTokens.TokenNameGREATER || count > 0) {", "-\t\t\t\t\ttoken = scanner.getNextToken();", "-\t\t\t\t\tswitch (token) {", "-\t\t\t\t\t\tcase TerminalTokens.TokenNameLESS:", "-\t\t\t\t\t\t\tcount++;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TerminalTokens.TokenNameGREATER:", "-\t\t\t\t\t\t\tcount--;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TerminalTokens.TokenNameEOF:", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "+\t\t\tint count = 0;", "+\t\t\tint ch = -1;", "+\t\t\twhile (ch != '>' || count > 0) {", "+\t\t\t\tch = scanner.getNextChar();", "+\t\t\t\tswitch (ch) {", "+\t\t\t\t\tcase '<':", "+\t\t\t\t\t\tcount++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '>':", "+\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase -1:", "+\t\t\t\t\t\t// we missed type parameters declarations! => do not report match", "+\t\t\t\t\t\treturn;", "-\t\t\t} catch (InvalidInputException e1) {", "-\t\t\t\t// ignore"]}], "num": 16231}