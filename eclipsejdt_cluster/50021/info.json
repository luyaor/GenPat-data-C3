{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "378e82566e0ba4061aef0ea5bedfdbab", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd07bfcb2a8353da49626c7d028190e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "5292c15945b50fef548808f853ce39423b5670f2", "commitAfterChange": "e32dbbc9904e1f7eb4c6e79a7595e742217638b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "signatureAfterChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator)", "diff": ["+", "-\t\t\t\tassertSourceEquals(counterString+\" formatting is different from first one!\", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(newResult));", "+\t\t\t\tif (!isExpectedFailure()) {", "+\t\t\t\t\tassertSourceEquals(counterString+\" formatting is different from first one!\", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(newResult));", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55dd46456ea931b4d7d455531e0cd0df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "ad454227af2b5bd765a6f2cc0f9b685b740fdeff", "commitAfterChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["+\t\t}", "+\t\t", "+\t\tif (!examineGetDocComment()) {", "+\t\t\t// Test disabled; our implementation of getDocComment() is not quite right yet", "+\t\t\t// return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fadbde47bcb70dec4e2649b19a2fa717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "71cf21d1f82b6e6d4f06e9ca9787ac93cc80bb37", "commitAfterChange": "c4dc5e9f7180282833c9d2737618358db5400234", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected void closeBuffer(OpenableElementInfo info)", "signatureAfterChange": "\r protected void closeBuffer(OpenableElementInfo info)", "diff": ["+\tif (!hasBuffer()) return; // nothing to do\r"]}], "num": 50021}