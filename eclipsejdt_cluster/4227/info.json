{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f64632b8167bce95a49ac8c4f174cf8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79973698b00cd037d72a4a0f2cf3c39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "commitAfterChange": "e5768103d107f9b2dcb4a1b6e2eaa25ca6df9ded", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testExternalJarRemoved1() throws CoreException", "signatureAfterChange": " public void testExternalJarRemoved1() throws CoreException, IOException", "diff": ["-public void testExternalJarRemoved1() throws CoreException {", "+public void testExternalJarRemoved1() throws CoreException, IOException {", "-\t\tString libPath = getLibraryPath();", "-\t\tString pPath = getExternalPath()+\"/p.jar\";", "-\t\tString p2Path = libPath+\"/p2.jar\";", "-\t\t", "+\t\tString pPath = getExternalPath() + File.separator + \"p.jar\";", "-\t\tFile f2 = new File(p2Path);", "-\t\t", "-\t\tcopy(f2, f);", "+\t\tf.createNewFile();", "-\t} catch (IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffce112b6e2e4de7ede8daccd9a6f281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f1d83e37dc72ba6d2676594fd1c64161817b3d74", "commitAfterChange": "50c8fc7c21507137e2b63d15c742a120cb954eef", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void removeMissingFactoryJars(IJavaProject jproj, Map<FactoryContainer, Attributes> containers)", "signatureAfterChange": " \tprivate void removeMissingFactoryJars(IJavaProject jproj, Map<FactoryContainer, Attributes> containers)", "diff": ["-\t\t\t\tURL url = null;", "-\t\t\t\ttry {", "-\t\t\t\t\turl = ((JarFactoryContainer)fc).getJarFileURL();", "-\t\t\t\t\t// Open the jar to see if it exists - else we'll enter a build marker.", "-\t\t\t\t\t// TODO: we might want to move the \"exists()\" method into JarFactoryContainer,", "-\t\t\t\t\t// and implement it more like ClasspathEntry.validateClasspathEntry().", "-\t\t\t\t\tInputStream is = url.openStream();", "-\t\t\t\t\tis.close();", "-\t\t\t\t} catch (IOException e) {", "+\t\t\t\tFile file = ((JarFactoryContainer)fc).getJarFile();", "+\t\t\t\tif (!file.exists()) {", "-\t\t\t\t\tString jarName = (url != null) ? url.toString() : fc.getId();", "-\t\t\t\t\treportMissingFactoryJar( jarName, jproj );", "+\t\t\t\t\treportMissingFactoryJar( file.toString(), jproj );"]}], "num": 4227}