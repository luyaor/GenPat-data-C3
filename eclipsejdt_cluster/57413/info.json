{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dd601f6868f2f3ff0b8c8ef9a5865d8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281127710802e7f39271b7c4ff949638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "8db2a22a82e2d4efc29edee16188f254a9d47da3", "commitAfterChange": "72fd8c6a4dc73c6ac3a3682b35550798adce77f5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "signatureAfterChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "diff": ["-\t\t\tfinal ArrayList participants = new ArrayList();", "+\t\t\tfinal HashMap modifyingEnv = new HashMap();", "+\t\t\tfinal HashMap creatingProblems = new HashMap();", "+\t\t\tfinal HashMap others = new HashMap();", "-\t\t\t\t\tIConfigurationElement [] configElements = extensions[j].getConfigurationElements();", "+\t\t\t\t\tIConfigurationElement[] configElements = extensions[j].getConfigurationElements();", "-\t\t\t\t\t\t\t\t\tparticipants.add(execExt);", "+\t\t\t\t\t\t\t\t\tif (\"true\".equals(configElement.getAttribute(\"modifiesEnvironment\"))) //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\t\t\tmodifyingEnv.put(configElement, execExt);", "+\t\t\t\t\t\t\t\t\telse if (\"true\".equals(configElement.getAttribute(\"createsProblems\"))) //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\t\t\tcreatingProblems.put(configElement, execExt);", "+\t\t\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\t\t\tothers.put(configElement, execExt);", "-\t\t\tint size = participants.size();", "+\t\t\tint size = modifyingEnv.size() + creatingProblems.size() + others.size();", "-\t\t\tparticipants.toArray(result);", "-\t\t\tfor (int i = 0; i < size; i++) {", "-\t\t\t\tfinal CompilationParticipant participant = result[i];", "-\t\t\t\tPlatform.run(new ISafeRunnable() {", "-\t\t\t\t\tpublic void handleException(Throwable exception) {", "-\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while configuring compilation participant\"); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic void run() throws Exception {", "-\t\t\t\t\t\tparticipant.configure(participants);", "-\t\t\t\t\t}", "-\t\t\t\t});", "-\t\t\t}", "-\t\t\tsize = participants.size();", "-\t\t\tif (size != result.length)", "-\t\t\t\tresult = new CompilationParticipant[size];", "-\t\t\tparticipants.toArray(result);", "+\t\t\tint index = 0;", "+\t\t\tindex = sortParticipants(modifyingEnv, result, index);", "+\t\t\tindex = sortParticipants(creatingProblems, result, index);", "+\t\t\tindex = sortParticipants(others, result, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74240a464b83b55b21ee6bc845ba951b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "bb4e6bac07124b460a049d2b185093478c4f0c72", "commitAfterChange": "9cf59650b85352257b29d89bc6a53254086661f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "signatureAfterChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "diff": ["-\t\t\tArrayList participants = new ArrayList();", "+\t\t\tfinal ArrayList participants = new ArrayList();", "-\t\t\t\t\tfor(int k = 0; k < configElements.length; k++){", "-\t\t\t\t\t\tString elementName = configElements[k].getName();", "+\t\t\t\t\tfor(int k = 0; k < configElements.length; k++) {", "+\t\t\t\t\t\tfinal IConfigurationElement configElement = configElements[k];", "+\t\t\t\t\t\tString elementName =configElement.getName();", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tObject execExt = configElements[j].createExecutableExtension(\"class\"); //$NON-NLS-1$ ", "-\t\t\t\t\t\t\tif (execExt instanceof CompilationParticipant){", "-\t\t\t\t\t\t\t\tparticipants.add(execExt);", "+\t\t\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while creating compilation participant\"); //$NON-NLS-1$", "-\t\t\t\t\t\t} catch(CoreException e) {", "-\t\t\t\t\t\t\t// executable extension could not be created: ignore this participant", "-\t\t\t\t\t\t\tUtil.log(e, \"Unexpected exception trying to instanciate compilation participant\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\t\t\tObject execExt = configElement.createExecutableExtension(\"class\"); //$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tif (execExt instanceof CompilationParticipant) {", "+\t\t\t\t\t\t\t\t\tparticipants.add(execExt);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t});", "-\t\t\tthis.registeredParticipants = new CompilationParticipant[size];", "-\t\t\tparticipants.toArray(this.registeredParticipants);", "-\t\t\treturn this.registeredParticipants;", "+\t\t\tCompilationParticipant[] result = new CompilationParticipant[size];", "+\t\t\tparticipants.toArray(result);", "+\t\t\tfor (int i = 0; i < size; i++) {", "+\t\t\t\tfinal CompilationParticipant participant = result[i];", "+\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\tpublic void handleException(Throwable exception) {", "+\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while configuring compilation participant\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void run() throws Exception {", "+\t\t\t\t\t\tparticipant.configure(participants);", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t\tsize = participants.size();", "+\t\t\tif (size != result.length)", "+\t\t\t\tresult = new CompilationParticipant[size];", "+\t\t\tparticipants.toArray(result);", "+\t\t\treturn this.registeredParticipants = result;"]}], "num": 57413}