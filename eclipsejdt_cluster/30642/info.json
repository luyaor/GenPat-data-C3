{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f30338af03eb0c1b85fde9c592c0bc1d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc284a4f6502130b7e7b9cb01178f58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic boolean visit(IfStatement node)", "signatureAfterChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["+\t */", "+\tpublic boolean visit(EnumConstantDeclaration node) {", "+\t\tif (node.getJavadoc() != null) {", "+\t\t\tnode.getJavadoc().accept(this);", "+\t\t}", "+\t\tprintModifiers(node.modifiers());", "+\t\tnode.getName().accept(this);", "+\t\tif (!node.arguments().isEmpty()) {", "+\t\t\tthis.buffer.append(\"(\");//$NON-NLS-1$", "+\t\t\tfor (Iterator it = node.arguments().iterator(); it.hasNext(); ) {", "+\t\t\t\tExpression e = (Expression) it.next();", "+\t\t\t\te.accept(this);", "+\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.buffer.append(\")\");//$NON-NLS-1$", "+\t\t}", "+\t\tif (!node.bodyDeclarations().isEmpty()) {", "+\t\t\tthis.buffer.append(\"{\");//$NON-NLS-1$", "+\t\t\tfor (Iterator it = node.bodyDeclarations().iterator(); it.hasNext(); ) {", "+\t\t\t\tBodyDeclaration d = (BodyDeclaration) it.next();", "+\t\t\t\td.accept(this);", "+\t\t\t}", "+\t\t\tthis.buffer.append(\"}\");//$NON-NLS-1$", "+\t\t}", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b480c768def6b2fd37711eb507e8ff77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\tprintModifiers(node.getModifiers());", "+\t\tif (node.getAST().API_LEVEL == AST.LEVEL_2_0) {", "+\t\t\tprintModifiers(node.getModifiers());", "+\t\t}", "+\t\tif (node.getAST().API_LEVEL >= AST.LEVEL_3_0) {", "+\t\t\tprintModifiers(node.modifiers());", "+\t\t\tif (!node.typeParameters().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeParameters().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tTypeParameter t = (TypeParameter) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "-\t\t\tnode.getReturnType().accept(this);", "+\t\t\tif (node.getAST().API_LEVEL == AST.LEVEL_2_0) {", "+\t\t\t\tnode.getReturnType().accept(this);", "+\t\t\t} else {", "+\t\t\t\tif (node.getReturnType2() != null) {", "+\t\t\t\t\tnode.getReturnType2().accept(this);", "+\t\t\t\t} else {", "+\t\t\t\t\t// methods really ought to have a return type", "+\t\t\t\t\tthis.buffer.append(\"void\");//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 30642}