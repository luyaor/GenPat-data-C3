{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f92c92c62a43df3ef13a11662a0f96a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35bf870c779797e30a0a4fc40ff7405f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void consumeCastExpressionWithPrimitiveType()", "signatureAfterChange": " protected void consumeCastExpressionWithPrimitiveType()", "diff": ["-\tExpression exp, cast, castType;", "+\tExpression exp;", "+\tExpression cast;", "+\tTypeReference castType;", "-\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr+1], castType = this.expressionStack[this.expressionPtr]);", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr+1], castType = (TypeReference) this.expressionStack[this.expressionPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e6216fc23c8efdbf7eb5f1843896b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " protected void consumeCastExpressionWithGenericsArray()", "signatureAfterChange": " protected void consumeCastExpressionWithGenericsArray()", "diff": ["-\tExpression exp, cast, castType;", "+\tExpression exp;", "+\tExpression cast;", "+\tTypeReference castType;", "-\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr + 1], castType = this.expressionStack[this.expressionPtr]);", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr + 1], castType = (TypeReference) this.expressionStack[this.expressionPtr]);"]}], "num": 1773}