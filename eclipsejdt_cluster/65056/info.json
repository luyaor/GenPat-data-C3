{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e36ebb129414e42450490458759731a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603cb7d52f5206f2e3204566d7b80904", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a253e12d0e5500dde78cb361a701e1e0a42cc195", "commitAfterChange": "e6906c72fd0737bba033cc849684f3e2192fc730", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tif (this.destinationPath != null)", "+\t\t\t\t\tif (this.destinationPath != null) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateOutputPath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateOutputPath\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (bootclasspaths.size() > 0)", "+\t\t\t\t\tif (bootclasspaths.size() > 0) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateBootClasspath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateBootClasspath\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (sourcepathClasspaths.size() > 0)", "+\t\t\t\t\tif (sourcepathClasspaths.size() > 0) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\t\t\tif (extdirsNames.size() > 0)", "+\t\t\t\t\tif (extdirsNames.size() > 0) {", "+\t\t\t\t\t\tStringBuffer errorMessage = new StringBuffer();", "+\t\t\t\t\t\terrorMessage.append(currentArg);", "+\t\t\t\t\t\tif ((index + 1) < argCount) {", "+\t\t\t\t\t\t\terrorMessage.append(' ');", "+\t\t\t\t\t\t\terrorMessage.append(newCommandLineArgs[index + 1]);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", errorMessage.toString())); //$NON-NLS-1$", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b3ecb6be880167f4c13538579d1967", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ee762753cd61547b0946cb35fcfd8e6f1db999a1", "commitAfterChange": "23d0eb606afafd696f3233ebc12d98689422aa13", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\"\tvalues: {\" //$NON-NLS-1$", "+\t\t\t\t\"\tvalues: {\\n\" //$NON-NLS-1$", "-\t\t\t\t\t\t\tpublic String displayString(Object o) { return ((IClasspathContainer) o).getDescription(); }", "+\t\t\t\t\t\t\tpublic String displayString(Object o) { ", "+\t\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(\"\t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tif (o == null) {", "+\t\t\t\t\t\t\t\t\tbuffer.append(\"<null>\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\treturn buffer.toString();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tIClasspathContainer container = (IClasspathContainer) o;", "+\t\t\t\t\t\t\t\tbuffer.append(container.getDescription());", "+\t\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "+\t\t\t\t\t\t\t\tif (entries != null){", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < entries.length; i++){", "+\t\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\tbuffer.append(entries[i]); ", "+\t\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbuffer.append(\" \t\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\treturn buffer.toString();", "+\t\t\t\t\t\t\t}", "-\t\t\t\t+ \"}\"); //$NON-NLS-1$", "+\t\t\t\t+ \"\\n\t}\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"\tprevious value: \" + previousContainer.getDescription()); //$NON-NLS-1$", "+\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(previousContainer.getDescription());", "+\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tIClasspathEntry[] entries = previousContainer.getClasspathEntries();", "+\t\t\t\t\t\t\tif (entries != null){", "+\t\t\t\t\t\t\t\tfor (int j = 0; j < entries.length; j++){", "+\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tbuffer.append(entries[j]); ", "+\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbuffer.append(\" \t\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(\"\tprevious value: \" + buffer.toString()); //$NON-NLS-1$"]}], "num": 65056}