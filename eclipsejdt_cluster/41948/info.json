{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f9c7ddf292662ac57a4424fee6251b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326f416fa6204eab1ed3ec1caabb4973", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t\tcase FIELD : // assigning to a field", "+\t\t\tcase Binding.FIELD : // assigning to a field", "-\t\t\tcase LOCAL : // assigning to a local variable (cannot assign to outer local)", "+\t\t\tcase Binding.LOCAL : // assigning to a local variable (cannot assign to outer local)", "-\t\t\tcase FIELD : // assigning to a field", "+\t\t\tcase Binding.FIELD : // assigning to a field", "-\t\t\tcase LOCAL : // assigning to a local variable", "+\t\t\tcase Binding.LOCAL : // assigning to a local variable"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9939562e762047ec0c7c059d595d7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\tcase FIELD : // assigning to a field", "+\t\tcase Binding.FIELD : // assigning to a field", "-\t\tcase LOCAL : // assigning to a local variable (cannot assign to outer local)", "+\t\tcase Binding.LOCAL : // assigning to a local variable (cannot assign to outer local)", "-\t\tcase FIELD : // assigning to a field", "+\t\tcase Binding.FIELD : // assigning to a field", "-\t\tcase LOCAL : // assigning to a local variable", "+\t\tcase Binding.LOCAL : // assigning to a local variable"]}], "num": 41948}