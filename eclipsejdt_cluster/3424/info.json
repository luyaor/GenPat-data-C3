{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa18fbc2bec3ceba43b8729348aa552b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23fd94d9133ab3316127369ed3595862", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "2f99f11ed182db13b52f83c7f61547c34d00226d", "commitAfterChange": "7089fcfd703b096f125599a900905c00e15535fa", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void test034() throws Exception", "signatureAfterChange": " \tpublic void test034() throws Exception", "diff": ["+\t\t// javac b100", "+\t\t//\t\t  RuntimeInvisibleTypeAnnotations:", "+\t\t//\t\t\t    0: #13(): CLASS_TYPE_PARAMETER_BOUND, param_index=0, bound_index=1\t\t", "+\t\t// bound_index is 1 because the bound is an interface, not a class", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "+\t\t\t\t\"// Signature: <T::Ljava/lang/Comparable;>Ljava/lang/Object;\\n\" + ", "+\t\t\t\t\"class X {\\n\" + ", "+\t\t\t\t\"  Constant pool:\\n\" + ", "+\t\t\t\t\"    constant #1 class: #2 X\\n\" + ", "+\t\t\t\t\"    constant #2 utf8: \\\"X\\\"\\n\" + ", "+\t\t\t\t\"    constant #3 class: #4 java/lang/Object\\n\" + ", "+\t\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 utf8: \\\"<init>\\\"\\n\" + ", "+\t\t\t\t\"    constant #6 utf8: \\\"()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #7 utf8: \\\"Code\\\"\\n\" + ", "+\t\t\t\t\"    constant #8 method_ref: #3.#9 java/lang/Object.<init> ()V\\n\" + ", "+\t\t\t\t\"    constant #9 name_and_type: #5.#6 <init> ()V\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"LineNumberTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"LX;\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 utf8: \\\"LocalVariableTypeTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #15 utf8: \\\"LX<TT;>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #18 utf8: \\\"Signature\\\"\\n\" + ", "+\t\t\t\t\"    constant #19 utf8: \\\"<T::Ljava/lang/Comparable;>Ljava/lang/Object;\\\"\\n\" + ", "+\t\t\t\t\"    constant #20 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #21 utf8: \\\"LNonNull;\\\"\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  X();\\n\" + ", "+\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    1  invokespecial java.lang.Object() [8]\\n\" + ", "+\t\t\t\t\"    4  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 4]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"      type parameter index = 0 type parameter bound index = 0\\n\" + ", "+\t\t\t\t\"      type parameter index = 0 type parameter bound index = 1\\n\" + ", "+\t\t\t\t\"    )\\n\" + ", "+\t\t\t\t\"}\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81268445a393488f8cff2d5d49f01ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "5c94036938fe400e122792407c5c35d8914790e5", "commitAfterChange": "e002812d8385bfcab83bbcee92fbb80489aadeb5", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test030() throws Exception", "signatureAfterChange": " \tpublic void test030() throws Exception", "diff": ["-\tpublic void test030() throws Exception { // WILL FAIL WHEN https://bugs.eclipse.org/bugs/show_bug.cgi?id=415470 IS FIXED.", "+\tpublic void test030() throws Exception {", "+\t\t\t\t\"@Target({TYPE}) @interface Annotation { }\\n\" +", "+\t\t\t\t\"@Annotation @TypeAnnotation class X {\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t},", "+\t\t\"\");", "+\t\t// javac b100 produces:", "+\t\t//\t\t  RuntimeInvisibleAnnotations:", "+\t\t//\t\t\t    0: #11() LAnnotation;", "+\t\t//\t\t\t    1: #12() LTypeAnnotation;", "+\t\tString expectedOutput =", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "+\t\t\t\t\"class X {\\n\" + ", "+\t\t\t\t\"  Constant pool:\\n\" + ", "+\t\t\t\t\"    constant #1 class: #2 X\\n\" + ", "+\t\t\t\t\"    constant #2 utf8: \\\"X\\\"\\n\" + ", "+\t\t\t\t\"    constant #3 class: #4 java/lang/Object\\n\" + ", "+\t\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 utf8: \\\"<init>\\\"\\n\" + ", "+\t\t\t\t\"    constant #6 utf8: \\\"()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #7 utf8: \\\"Code\\\"\\n\" + ", "+\t\t\t\t\"    constant #8 method_ref: #3.#9 java/lang/Object.<init> ()V\\n\" + ", "+\t\t\t\t\"    constant #9 name_and_type: #5.#6 <init> ()V\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"LineNumberTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"LX;\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #15 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"RuntimeInvisibleAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"LAnnotation;\\\"\\n\" + ", "+\t\t\t\t\"    constant #18 utf8: \\\"LTypeAnnotation;\\\"\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  X();\\n\" + ", "+\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    1  invokespecial java.lang.Object() [8]\\n\" + ", "+\t\t\t\t\"    4  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"  RuntimeInvisibleAnnotations: \\n\" + ", "+\t\t\t\t\"    #17 @Annotation(\\n\" + ", "+\t\t\t\t\"    )\\n\" + ", "+\t\t\t\t\"    #18 @TypeAnnotation(\\n\" + ", "+\t\t\t\t\"    )\\n\" + ", "+\t\t\t\t\"}\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t\t\t\t\"    constant #16 utf8: \\\"RuntimeInvisibleAnnotations\\\"\\n\" + ", "-\t\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "-\t\t\t\t\"  RuntimeInvisibleAnnotations: \\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878e4a6650b90b288be1edf608388529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "3e3b51c55228cb418d3e20ad2161182869812a5e", "commitAfterChange": "2f99f11ed182db13b52f83c7f61547c34d00226d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test033() throws Exception", "signatureAfterChange": " \tpublic void test033() throws Exception", "diff": ["-\tpublic void test033() throws Exception { // WILL NEED TO BE ADJUSTED ONCE https://bugs.eclipse.org/bugs/show_bug.cgi?id=415541 IS FIXED.", "+\tpublic void test033() throws Exception {", "+\t\t// javac b100", "+\t\t// For the annotations in the static {...} the clinit has:", "+\t\t//\t\tRuntimeInvisibleTypeAnnotations:", "+\t\t//\t        0: #11(): CAST, offset=0, type_index=0", "+\t\t//\t        1: #11(): NEW, offset=0", "+\t\t// javac is skipping production of the cast so offset is 0. JDT is currently always producing the", "+\t\t// checkcast for an annotated cast so the offset is 7.", "+\t\t", "+\t\t// For the annotations in the initializer {...} the constructors both have:", "+\t\t//\t      RuntimeInvisibleTypeAnnotations:", "+\t\t//\t          0: #11(): NEW, offset=4", "+", "-\t\t\t\t\"    constant #13 utf8: \\\"this\\\"\\n\" + ", "-\t\t\t\t\"    constant #14 utf8: \\\"LX;\\\"\\n\" + ", "-\t\t\t\t\"    constant #15 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "-\t\t\t\t\"    constant #16 utf8: \\\"LNonNull;\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 utf8: \\\"LNonNull;\\\"\\n\" + ", "+\t\t\t\t\"    constant #15 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"LX;\\\"\\n\" + ", "-\t\t\t\t\"    0  new java.lang.Object [3]\\n\" + ", "-\t\t\t\t\"    3  dup\\n\" + ", "-\t\t\t\t\"    4  invokespecial java.lang.Object() [8]\\n\" + ", "-\t\t\t\t\"    7  astore_0\\n\" + ", "-\t\t\t\t\"    8  return\\n\" + ", "+\t\t\t\t\"     0  new java.lang.Object [3]\\n\" + ", "+\t\t\t\t\"     3  dup\\n\" + ", "+\t\t\t\t\"     4  invokespecial java.lang.Object() [8]\\n\" + ", "+\t\t\t\t\"     7  checkcast java.lang.Object [3]\\n\" + ", "+\t\t\t\t\"    10  astore_0\\n\" + ", "+\t\t\t\t\"    11  return\\n\" + ", "-\t\t\t\t\"        [pc: 8, line: 7]\\n\" + ", "+\t\t\t\t\"        [pc: 11, line: 7]\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #14 @NonNull(\\n\" + ", "+\t\t\t\t\"        target type = 0x44 NEW\\n\" + ", "+\t\t\t\t\"        offset = 0\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"      #14 @NonNull(\\n\" + ", "+\t\t\t\t\"        target type = 0x47 CAST\\n\" + ", "+\t\t\t\t\"        offset = 7\\n\" + ", "+\t\t\t\t\"        type argument index = 0\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "-\t\t\t\t\"      #16 @NonNull(\\n\" + ", "+\t\t\t\t\"      #14 @NonNull(\\n\" + ", "-\t\t\t\t\"      #16 @NonNull(\\n\" + ", "+\t\t\t\t\"      #14 @NonNull(\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0da6f034a5af384c08ff83f77d6a7dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "7089fcfd703b096f125599a900905c00e15535fa", "commitAfterChange": "ef77db37669242a4bac152127ea8ae67d10be39c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test028() throws Exception", "signatureAfterChange": " \tpublic void test028() throws Exception", "diff": ["-\tpublic void test028() throws Exception { // // WILL FAIL WHEN https://bugs.eclipse.org/bugs/show_bug.cgi?id=415397 IS FIXED.", "+\tpublic void test028() throws Exception {", "+\t\t// javac b100", "+\t\t// On the type declaration:", "+\t\t//  RuntimeInvisibleTypeAnnotations:", "+\t\t//   0: #9(): CLASS_TYPE_PARAMETER, param_index=0", "+\t\t// On the method:", "+\t    //  RuntimeInvisibleTypeAnnotations:", "+\t    //   0: #9(): METHOD_TYPE_PARAMETER, param_index=0", "+\t\t// On the field:", "+\t\t//  RuntimeInvisibleTypeAnnotations:", "+\t\t//   0: #9(): FIELD, location=[TYPE_ARGUMENT(0)]", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "+\t\t\t\t\"// Signature: <T:Ljava/lang/Object;>Ljava/lang/Object;\\n\" + ", "+\t\t\t\t\"class X {\\n\" + ", "+\t\t\t\t\"  Constant pool:\\n\" + ", "+\t\t\t\t\"    constant #1 class: #2 X\\n\" + ", "+\t\t\t\t\"    constant #2 utf8: \\\"X\\\"\\n\" + ", "+\t\t\t\t\"    constant #3 class: #4 java/lang/Object\\n\" + ", "+\t\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 utf8: \\\"l\\\"\\n\" + ", "+\t\t\t\t\"    constant #6 utf8: \\\"Ljava/util/List;\\\"\\n\" + ", "+\t\t\t\t\"    constant #7 utf8: \\\"Signature\\\"\\n\" + ", "+\t\t\t\t\"    constant #8 utf8: \\\"Ljava/util/List<*>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #9 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"LNonNull;\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"<init>\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"Code\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 method_ref: #3.#15 java/lang/Object.<init> ()V\\n\" + ", "+\t\t\t\t\"    constant #15 name_and_type: #11.#12 <init> ()V\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"LineNumberTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #18 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #19 utf8: \\\"LX;\\\"\\n\" + ", "+\t\t\t\t\"    constant #20 utf8: \\\"LocalVariableTypeTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #21 utf8: \\\"LX<TT;>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #22 utf8: \\\"foo\\\"\\n\" + ", "+\t\t\t\t\"    constant #23 utf8: \\\"<K:Ljava/lang/Object;>()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #24 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #25 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #26 utf8: \\\"<T:Ljava/lang/Object;>Ljava/lang/Object;\\\"\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Field descriptor #6 Ljava/util/List;\\n\" + ", "+\t\t\t\t\"  // Signature: Ljava/util/List<*>;\\n\" + ", "+\t\t\t\t\"  java.util.List l;\\n\" + ", "-\t\t\t\t\"      #23 @NonNull(\\n\" + ", "+\t\t\t\t\"      #10 @NonNull(\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  X();\\n\" + ", "+\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    1  invokespecial java.lang.Object() [14]\\n\" + ", "+\t\t\t\t\"    4  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 6]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\t\t\"  // Signature: <K:Ljava/lang/Object;>()V\\n\" + ", "+\t\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\t\t\"  void foo();\\n\" + ", "+\t\t\t\t\"    0  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 7]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @NonNull(\\n\" + ", "-\t\t\t\t\"    #23 @NonNull(\\n\" + ", "+\t\t\t\t\"    #10 @NonNull(\\n\" + "]}], "num": 3424}