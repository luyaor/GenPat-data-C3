{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fe186716ceed948ce69d3827ac84ca7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b2a7c0b8cf10859b7d72ad7bd993d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "69622d139cf7be8059928288f19c2f5b2d55bdc5", "commitAfterChange": "bd0b42da240c9e3160dab0f23f741fededbd0813", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "signatureAfterChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "diff": ["-\tif (unicodeAsBackSlash) {", "+\tif (this.unicodeAsBackSlash) {", "-\t\tunicodeAsBackSlash = false;", "-\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\') && (source[currentPosition] == 'u')) {", "+\t\tthis.unicodeAsBackSlash = false;", "+\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {", "-\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\tcurrentCharacter = source[currentPosition++];", "-\tswitch (currentCharacter) {", "+\t\tthis.currentCharacter = this.source[this.currentPosition++];", "+\tswitch (this.currentCharacter) {", "-\t\t\tcurrentCharacter = '\\b';", "+\t\t\tthis.currentCharacter = '\\b';", "-\t\t\tcurrentCharacter = '\\t';", "+\t\t\tthis.currentCharacter = '\\t';", "-\t\t\tcurrentCharacter = '\\n';", "+\t\t\tthis.currentCharacter = '\\n';", "-\t\t\tcurrentCharacter = '\\f';", "+\t\t\tthis.currentCharacter = '\\f';", "-\t\t\tcurrentCharacter = '\\r';", "+\t\t\tthis.currentCharacter = '\\r';", "-\t\t\tcurrentCharacter = '\\\"';", "+\t\t\tthis.currentCharacter = '\\\"';", "-\t\t\tcurrentCharacter = '\\'';", "+\t\t\tthis.currentCharacter = '\\'';", "-\t\t\tcurrentCharacter = '\\\\';", "+\t\t\tthis.currentCharacter = '\\\\';", "-\t\t\tint number = Character.getNumericValue(currentCharacter);", "+\t\t\tint number = Character.getNumericValue(this.currentCharacter);", "-\t\t\t\tif (Character.isDigit(currentCharacter = source[currentPosition++])) {", "-\t\t\t\t\tint digit = Character.getNumericValue(currentCharacter);", "+\t\t\t\tif (Character.isDigit(this.currentCharacter = this.source[this.currentPosition++])) {", "+\t\t\t\t\tint digit = Character.getNumericValue(this.currentCharacter);", "-\t\t\t\t\t\tif (Character.isDigit(currentCharacter = source[currentPosition++])) {", "+\t\t\t\t\t\tif (Character.isDigit(this.currentCharacter = this.source[this.currentPosition++])) {", "-\t\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\t\t\tdigit = Character.getNumericValue(currentCharacter);", "+\t\t\t\t\t\t\t\tdigit = Character.getNumericValue(this.currentCharacter);", "-\t\t\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\tcurrentCharacter = (char) number;", "+\t\t\t\tthis.currentCharacter = (char) number;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c5fc67bafcbeecd943960030acccc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "2e3b506bd16c2dfca1b01615ff44e6bfc5c42dab", "commitAfterChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "signatureAfterChange": "  public final void scanEscapeCharacter() throws InvalidInputException", "diff": ["-\tif (unicodeAsBackSlash) {", "+\tif (this.unicodeAsBackSlash) {", "-\t\tunicodeAsBackSlash = false;", "-\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\') && (source[currentPosition] == 'u')) {", "+\t\tthis.unicodeAsBackSlash = false;", "+\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {", "-\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\tcurrentCharacter = source[currentPosition++];", "-\tswitch (currentCharacter) {", "+\t\tthis.currentCharacter = this.source[this.currentPosition++];", "+\tswitch (this.currentCharacter) {", "-\t\t\tcurrentCharacter = '\\b';", "+\t\t\tthis.currentCharacter = '\\b';", "-\t\t\tcurrentCharacter = '\\t';", "+\t\t\tthis.currentCharacter = '\\t';", "-\t\t\tcurrentCharacter = '\\n';", "+\t\t\tthis.currentCharacter = '\\n';", "-\t\t\tcurrentCharacter = '\\f';", "+\t\t\tthis.currentCharacter = '\\f';", "-\t\t\tcurrentCharacter = '\\r';", "+\t\t\tthis.currentCharacter = '\\r';", "-\t\t\tcurrentCharacter = '\\\"';", "+\t\t\tthis.currentCharacter = '\\\"';", "-\t\t\tcurrentCharacter = '\\'';", "+\t\t\tthis.currentCharacter = '\\'';", "-\t\t\tcurrentCharacter = '\\\\';", "+\t\t\tthis.currentCharacter = '\\\\';", "-\t\t\tint number = Character.getNumericValue(currentCharacter);", "+\t\t\tint number = Character.getNumericValue(this.currentCharacter);", "-\t\t\t\tif (Character.isDigit(currentCharacter = source[currentPosition++])) {", "-\t\t\t\t\tint digit = Character.getNumericValue(currentCharacter);", "+\t\t\t\tif (Character.isDigit(this.currentCharacter = this.source[this.currentPosition++])) {", "+\t\t\t\t\tint digit = Character.getNumericValue(this.currentCharacter);", "-\t\t\t\t\t\tif (Character.isDigit(currentCharacter = source[currentPosition++])) {", "+\t\t\t\t\t\tif (Character.isDigit(this.currentCharacter = this.source[this.currentPosition++])) {", "-\t\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\t\t\tdigit = Character.getNumericValue(currentCharacter);", "+\t\t\t\t\t\t\t\tdigit = Character.getNumericValue(this.currentCharacter);", "-\t\t\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\tcurrentCharacter = (char) number;", "+\t\t\t\tthis.currentCharacter = (char) number;"]}], "num": 26561}