{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0eb8e6e4312a5258484c1c64ac485dfd", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4230390b7b1e4f9763e91bd0f03e4938", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1297, "methodNumberAfterChange": 1298, "signatureBeforeChange": " public void test1263()", "signatureAfterChange": " public void test1263()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "+\tString xSource =", "+\t\t\t\t\"        @SuppressWarnings(\\\"rawtypes\\\")\\n\" +", "-\t\t\t\t\"}\\n\", // =================", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" +", "-\t\t\"\tstatic XList<Sub<?>> LIST = asList(ARRAY); \\n\" +", "-\t\t\"\t                            ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from XList<X.Foo.Sub<? super Object>> to XList<X.Foo.Sub<?>>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"\tstatic Sub<? super Object>[] ARRAY = new Sub[] { };\\n\" +", "-\t\t\"\t                                     ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type X.Foo.Sub[] needs unchecked conversion to conform to X.Foo.Sub<? super Object>[]\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" +", "+\t\t\t\"\tstatic XList<Sub<?>> LIST = asList(ARRAY); \\n\" +", "+\t\t\t\"\t                            ^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from XList<X.Foo.Sub<? super Object>> to XList<X.Foo.Sub<?>>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" +", "+\t\t\t\"\tstatic Sub<? super Object>[] ARRAY = new Sub[] { };\\n\" +", "+\t\t\t\"\t                                     ^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type X.Foo.Sub[] needs unchecked conversion to conform to X.Foo.Sub<? super Object>[]\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(new String[]{ \"X.java\", xSource });", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ecd818a1c84dd181c529af86ea1c43b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1293, "methodNumberAfterChange": 1294, "signatureBeforeChange": " public void test1259()", "signatureAfterChange": " public void test1259()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "+\tString xSource =", "+\t\t\t\t\"        @SuppressWarnings(\\\"rawtypes\\\")\\n\" +", "-\t\t\t\t\"}\\n\", // =================", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" +", "-\t\t\"\tstatic XList<Sub<? extends Number>> LIST = asList(ARRAY); \\n\" +", "-\t\t\"\t                                           ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from XList<X.Foo.Sub<? extends Integer>> to XList<X.Foo.Sub<? extends Number>>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 7)\\n\" +", "-\t\t\"\tstatic Sub<? extends Integer>[] ARRAY = new Sub[] { };\\n\" +", "-\t\t\"\t                                        ^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type X.Foo.Sub[] needs unchecked conversion to conform to X.Foo.Sub<? extends Integer>[]\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" +", "+\t\t\t\"\tstatic XList<Sub<? extends Number>> LIST = asList(ARRAY); \\n\" +", "+\t\t\t\"\t                                           ^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from XList<X.Foo.Sub<? extends Integer>> to XList<X.Foo.Sub<? extends Number>>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" +", "+\t\t\t\"\tstatic Sub<? extends Integer>[] ARRAY = new Sub[] { };\\n\" +", "+\t\t\t\"\t                                        ^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type X.Foo.Sub[] needs unchecked conversion to conform to X.Foo.Sub<? extends Integer>[]\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(new String[]{ \"X.java\", xSource });", "+\t}"]}], "num": 14922}