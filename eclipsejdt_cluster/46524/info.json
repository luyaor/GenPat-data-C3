{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9ee62175e590d0d71ad2c517aff8ab1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1928ce8fc5848027c413e0b387b3268f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "ff85c5b54aa9fc56d47aadc341dff43fe1def608", "commitAfterChange": "309a387f480d97625be10c0bbfacfac3334e06f2", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["+\t\tboolean lineHasTokens = false;", "+    \t\tboolean isTokenStar = false;", "-\t\t\t\t\tlineNumber = Util.getLineNumber(this.scanner.getCurrentTokenEndPosition(), this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\t\t\tlineNumber = Util.getLineNumber(this.scanner.currentPosition, this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\t\t\tisTokenStar = true;", "+\t\t\t\t\tlineNumber = Util.getLineNumber(this.scanner.currentPosition, this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\t\t\tif (lineNumber == firstLine && previousToken == SKIP_FIRST_WHITESPACE_TOKEN) {", "+\t\t\t\t\t\teditStart = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\t}", "-\t\t\t\t\tlineNumber = Util.getLineNumber(this.scanner.getCurrentTokenEndPosition(), this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "-\t\t\t\t\tscannerLine = lineNumber;", "-\t\t\t\t\tcontinue;", "+\t\t\t\t\tif (newLine) {", "+\t\t\t\t\t\tscannerLine = lineNumber;", "+\t\t\t\t\t\tnewLine = false;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "-\t\t\t\t\t\tscannerLine = Util.getLineNumber(this.scanner.getCurrentTokenEndPosition(), this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\t\t\t\tscannerLine = Util.getLineNumber(this.scanner.currentPosition, this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "-\t\t\tlineNumber = Util.getLineNumber(this.scanner.getCurrentTokenEndPosition(), this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\tlineNumber = Util.getLineNumber(this.scanner.currentPosition, this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "-\t\t\t\tmax = joinLines ? 1 : 0;", "+\t\t\t\tmax = joinLines && lineHasTokens ? 1 : 0;", "+    \t\tif (newLine) lineHasTokens = false;", "-    \t\tif (hasTextOnFirstLine == 0) {", "+    \t\tif (!isTokenStar) lineHasTokens = true;", "+    \t\tif (hasTextOnFirstLine == 0 && !isTokenStar) {", "-\t\t\tif (!firstWord && lastColumn > maxColumn) {", "+\t\t\tif (lineHasTokens && !firstWord && lastColumn > maxColumn) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe20c9b29691f5121c84b6d55ecab166", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "00cabdb6b90ee48364f71e75a5da5edca1e7837c", "commitAfterChange": "fcccc4dd1377e549112e0bdc9a74b0eb625c6ab2", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tprivate void printJavadocTextLine(StringBuffer buffer, int textStart, int textEnd, FormatJavadocBlock block, boolean firstText, boolean needIndentation, boolean isHtmlTag)", "signatureAfterChange": " \tprivate void printJavadocTextLine(StringBuffer buffer, int textStart, int textEnd, FormatJavadocBlock block, boolean firstText, boolean needIndentation, boolean isHtmlTag)", "diff": ["-\t\tboolean headerLine = block.isHeaderLine() && this.lastNumberOfNewLines == 0;", "+\t\tboolean headerLine = (buffer.indexOf(Util.LINE_SEPARATOR) < 0) && block.isHeaderLine() && this.lastNumberOfNewLines == 0;", "+\t\t\tboolean openedString  =false;", "+\t\t\t\t\tboolean insertSpace = previousToken == TerminalTokens.TokenNameWHITESPACE;", "+\t\t\t\t\t\tif (insertSpace) {", "+\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\tif (openedString) {", "+\t\t\t\t\t\t\topenedString = false;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (insertSpace) {", "+\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\topenedString = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.column++;", "-\t\t\t\t\tthis.column++;", "+\t\t\t\t\tpreviousToken = 1;", "-\t\t\t    \tthis.column = firstColumn;", "+\t\t\t    \tthis.column = headerLine ? firstColumn-1 : firstColumn;"]}], "num": 46524}