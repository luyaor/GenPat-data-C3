{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccf56aab6fbfff998eda926585220c29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae590417880f8490d4da0399e215eef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "4d9b6dd48460588022f3db99a5b8b6d522485afc", "commitAfterChange": "4e1c84d7f1b5cbfdb04337ad1ef6661973bb5b54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t \tprotected void checkClassFile(String directoryName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "signatureAfterChange": " \t\t \tprotected void checkClassFile(String directoryName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "diff": ["+\t\t\t}", "+\t\t\t", "+\t\t\ttry {", "+\t\t\t\tFileInputStream stream = new FileInputStream(f);", "+\t\t\t\tClassFileReader.read(stream, className + \".class\", true);", "+\t\t\t\tstream.close();", "+\t\t\t} catch (org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException e1) {", "+\t\t\t\tassertTrue(\"ClassFormatException\", false);", "+\t\t\t} catch (IOException e1) {", "+\t\t\t\tassertTrue(\"IOException\", false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59160d7f961104bf48a83b0291cbef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "334acc099e45b6ce9ec3bc9c1d31c4c1fb234636", "commitAfterChange": "3ab051c7144639ad3b44ef74fafd7a028bb82a56", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void test047()", "signatureAfterChange": " \tpublic void test047()", "diff": ["+\t\ttry {", "+\t\t\tClassFileReader fileReader = ClassFileReader.read(new File(OUTPUT_DIR + File.separator  +\"I.class\"));", "+\t\t\tassertEquals(\"Not an annotation type declaration\", IGenericType.ANNOTATION_TYPE_DECL, fileReader.getKind());", "+\t\t} catch (ClassFormatException e1) {", "+\t\t\tassertTrue(\"ClassFormatException\", false);", "+\t\t} catch (IOException e1) {", "+\t\t\tassertTrue(\"IOException\", false);", "+\t\t}"]}], "num": 66574}