{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cd8a2cca19681a27fe0ddb326179ef1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "152d01fdcf271de4a0732ddbaf56a26c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "6781b5445d9813f939573ded9d37ee82c9dbbd15", "commitAfterChange": "6989e5bb4ed8f3be37ea69298930332629e9b475", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tTypeBinding receiverErasure = this.receiverType.erasure();", "+\t\tif (receiverErasure instanceof ReferenceBinding) {", "+\t\t\tReferenceBinding match = ((ReferenceBinding)receiverErasure).findSuperTypeErasingTo((ReferenceBinding)this.binding.declaringClass.erasure());", "+\t\t\tif (match == null) {", "+\t\t\t\tthis.receiverType = this.binding.declaringClass; // handle indirect inheritance thru variable secondary bound", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b546c77ea4991a44f5329570cefeeeec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "78b182da9e370f6f00f239fd2a2de8309bdf9aac", "commitAfterChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\treceiver.computeConversion(scope, this.actualReceiverType, this.actualReceiverType);", "-\t\t\t\t\tthis.actualReceiverType = this.binding.declaringClass; // handle indirect inheritance thru variable secondary bound", "+\t\t\t\t\tthis.receiverGenericCast = this.binding.declaringClass; // handle indirect inheritance thru variable secondary bound", "-\t\t\treceiver.computeConversion(scope, this.actualReceiverType, this.actualReceiverType);"]}], "num": 49786}