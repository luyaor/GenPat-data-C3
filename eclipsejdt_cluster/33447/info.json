{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ad0801f3bb2eb5f0e5f2e95d58ca755", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bbe9558e42c8a4b72f12d40582da47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "f6d62cf5509e336368d118f27513759c555039cb", "commitAfterChange": "89f7cc9d4d0d48b1e9133696ddad31d6d3751273", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "diff": ["-// anonymous type constructor creation", "+// anonymous type constructor creation: rank is important since bindings already got sorted", "-\t\tSystem.arraycopy(", "-\t\t\tthis.methods,", "-\t\t\t0,", "-\t\t\tnewMethods = new AbstractMethodDeclaration[this.methods.length + 1],", "-\t\t\t1,", "-\t\t\tthis.methods.length);", "+\t\tSystem.arraycopy(this.methods, 0, newMethods = new AbstractMethodDeclaration[this.methods.length + 1], 1, this.methods.length);", "+\tSourceTypeBinding sourceType = this.binding;", "-\t\t\tthis.binding); //declaringClass", "+\t\t\tsourceType); //declaringClass", "-\tMethodBinding[] oldMethods = this.binding.methods(); // trigger sorting", "+\tMethodBinding[] oldMethods = sourceType.methods(); // trigger sorting", "-\tSystem.arraycopy(", "-\t\tthis.binding.methods(),", "-\t\t0,", "-\t\tnewMethods = new MethodBinding[oldMethods.length + 1],", "-\t\t1,", "-\t\toldMethods.length);", "-\tnewMethods[0] = constructor.binding; // position 0 is important, since if sorted, constructor will still be ahead", "-\tthis.binding.setMethods(newMethods);", "+\tSystem.arraycopy(oldMethods, 0, newMethods = new MethodBinding[oldMethods.length + 1], 1, oldMethods.length);", "+\tnewMethods[0] = constructor.binding; ", "+\tsourceType.tagBits &= ~(TagBits.AreMethodsComplete|TagBits.AreMethodsSorted); // still need to resort, since could be valid methods ahead (140643)", "+\tsourceType.setMethods(newMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9be09308c037154c6ea231f6e80be376", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "commitAfterChange": "4aad3541005b227c1c4489d6142b68e14885b9dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["-\tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor) {", "+\t */", "+\tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor) {", "-\t\tif (this.refreshedElements == null) return false;", "-\t\t\t", "-\t\tIterator iterator = this.refreshedElements.iterator();", "-\t\tthis.refreshedElements = null; // null out early to avoid concurrent modification exception (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=63534)", "+\t\tIterator iterator = refreshedElements.iterator();", "+\t\t}", "+\t\tif (hasDelta){", "+\t\t\t// force classpath marker refresh of affected projects", "+\t\t\tJavaModel.flushExternalFileCache();", "+\t\t\t", "+\t\t\t// flush jar type cache", "+\t\t\tJavaModelManager.getJavaModelManager().resetJarTypeCache();"]}], "num": 33447}