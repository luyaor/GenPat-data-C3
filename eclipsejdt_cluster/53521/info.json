{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80da6980364402bbb20c1382a4d999dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d193ba2800b6cdaafe21e5af783ae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "94923d3acfa7fb7266e9eb4199d83aab0f8b9fca", "commitAfterChange": "3300bd0a2560c278ec7d1063d301ade85a3f2d14", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected IDOMNode followPath(ArrayList path, int position, IDOMNode node)", "signatureAfterChange": " \tprotected IDOMNode followPath(ArrayList path, int position, IDOMNode node)", "diff": ["-\t\ttry {", "-\t\t\tif (equalsDOMNode(node)) {", "-\t\t\t\tif (position == (path.size() - 1)) {", "-\t\t\t\t\treturn node;", "-\t\t\t\t} else {", "-\t\t\t\t\tif (node.getFirstChild() != null) {", "-\t\t\t\t\t\tposition++;", "-\t\t\t\t\t\treturn ((JavaElement)path.get(position)).followPath(path, position, node.getFirstChild());", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else if (node.getNextNode() != null) {", "-\t\t\t\treturn followPath(path, position, node.getNextNode());", "+\t\tif (equalsDOMNode(node)) {", "+\t\t\tif (position == (path.size() - 1)) {", "+\t\t\t\treturn node;", "-\t\t\t\treturn null;", "+\t\t\t\tif (node.getFirstChild() != null) {", "+\t\t\t\t\tposition++;", "+\t\t\t\t\treturn ((JavaElement)path.get(position)).followPath(path, position, node.getFirstChild());", "+\t\t\t\t} else {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "-\t\t} catch (JavaModelException e) {", "+\t\t} else if (node.getNextNode() != null) {", "+\t\t\treturn followPath(path, position, node.getNextNode());", "+\t\t} else {", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2b0dab1fd218f2f7201635c45138d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "3f9a272754f4dbcde614fed0b8e02a6b49fdf380", "commitAfterChange": "07ee10ab5650bcb39d86bc9b77c1572a63409b02", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic String findSourceFileName(IType type, IBinaryType info)", "signatureAfterChange": " \tpublic String findSourceFileName(IType type, IBinaryType info)", "diff": ["-\t\t\ttry {", "-\t\t\t\tif (type.isMember()) {", "-\t\t\t\t\tIType enclosingType = type.getDeclaringType();", "-\t\t\t\t\tif (enclosingType == null) return null; // play it safe", "-\t\t\t\t\twhile (enclosingType.getDeclaringType() != null) {", "-\t\t\t\t\t\tenclosingType = enclosingType.getDeclaringType();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn enclosingType.getElementName() + SUFFIX_STRING_java;", "-\t\t\t\t} else if (type.isLocal() || type.isAnonymous()){", "-\t\t\t\t\tString typeQualifiedName = type.getTypeQualifiedName();", "-\t\t\t\t\treturn typeQualifiedName.substring(0, typeQualifiedName.indexOf('$')) + SUFFIX_STRING_java;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn type.getElementName() + SUFFIX_STRING_java;", "+\t\t\tif (info.isMember()) {", "+\t\t\t\tIType enclosingType = type.getDeclaringType();", "+\t\t\t\tif (enclosingType == null) return null; // play it safe", "+\t\t\t\twhile (enclosingType.getDeclaringType() != null) {", "+\t\t\t\t\tenclosingType = enclosingType.getDeclaringType();", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// ignore", "+\t\t\t\treturn enclosingType.getElementName() + SUFFIX_STRING_java;", "+\t\t\t} else if (info.isLocal() || info.isAnonymous()){", "+\t\t\t\tString typeQualifiedName = type.getTypeQualifiedName();", "+\t\t\t\treturn typeQualifiedName.substring(0, typeQualifiedName.indexOf('$')) + SUFFIX_STRING_java;", "+\t\t\t} else {", "+\t\t\t\treturn type.getElementName() + SUFFIX_STRING_java;", "-\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f81b668ad8f74bdf0465e8ade8ba70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "f447b16dd60f42cc2ef6fd3675d34b42ed951cdb", "commitAfterChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "signatureAfterChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "diff": ["-\t\t\t\ttry {", "-\t\t\t\t\tif (type.isMember() && method.isConstructor() && !Flags.isStatic(type.getFlags())) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=48261", "-\t\t\t\t\t\tfirstIsSynthetic = true;", "-\t\t\t\t\t\targCount++;", "-\t\t\t\t\t}", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t// ignored", "+\t\t\t\tif (reader.isMember() && method.isConstructor() && !Flags.isStatic(reader.getModifiers())) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=48261", "+\t\t\t\t\tfirstIsSynthetic = true;", "+\t\t\t\t\targCount++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8780a030f1fb1a3517e2b499c40feb05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "94923d3acfa7fb7266e9eb4199d83aab0f8b9fca", "commitAfterChange": "3300bd0a2560c278ec7d1063d301ade85a3f2d14", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public IType getSuperclass(IType type)", "signatureAfterChange": " public IType getSuperclass(IType type)", "diff": ["-\ttry {", "-\t\tif (this.isInterface(type)) {", "-\t\t\treturn null;", "-\t\t}", "-\t\treturn (IType) this.classToSuperclass.get(type);", "-", "-\t} catch (JavaModelException npe) {", "+\tif (this.isInterface(type)) {", "+\treturn (IType) this.classToSuperclass.get(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d13c88245ae347e968803586a864ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MultiOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["- */", "-protected void executeOperation() throws JavaModelException {", "-\ttry {", "-\t\tprocessElements();", "-\t} catch (JavaModelException jme) {", "-\t\tthrow jme;", "-\t} finally {", "-\t\tmergeDeltas();", "-\t}", "-}", "+\t */", "+\tprotected void executeOperation() throws JavaModelException {", "+\t\tprocessElements();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ea6dd9a2a227d62bddc453702b51f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "4a0d3f43b00b98cd9b9910b76cc59ad213b24c41", "commitAfterChange": "b52526c4f9ea8f8d773a3ff82b8dce78d1d6eaf6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      \tpublic PackageDeclaration getPackage(String name)", "signatureAfterChange": "      \tpublic PackageDeclaration getPackage(String name)", "diff": ["-\t\t\ttry {", "-\t\t\t\ttype = classFile.getType();", "-\t\t\t}", "-\t\t\tcatch (JavaModelException e) {}", "+\t\t\ttype = classFile.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87d39df1ae4ed51eb2b606623d711c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "94923d3acfa7fb7266e9eb4199d83aab0f8b9fca", "commitAfterChange": "3300bd0a2560c278ec7d1063d301ade85a3f2d14", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);", "-\t\t\t\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(null);"]}], "num": 53521}