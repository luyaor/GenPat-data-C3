{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d2dfda773b4b42c79223fcf4b6bc3ac", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4ce426a99fe719642035506c0922a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope blockScope)", "diff": ["-public TypeBinding resolveType(BlockScope scope) {", "+public TypeBinding resolveType(BlockScope blockScope) {", "-\t\tthis.resolvedType = getTypeBinding(scope);", "+\t\tthis.resolvedType = getTypeBinding(blockScope);", "-\t\t\tscope.problemReporter().invalidType(this, this.resolvedType);", "+\t\t\tblockScope.problemReporter().invalidType(this, this.resolvedType);", "-\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "-\t\t\tscope.problemReporter().deprecatedType(this.resolvedType, this);", "+\t\tif (isTypeUseDeprecated(this.resolvedType, blockScope))", "+\t\t\tblockScope.problemReporter().deprecatedType(this.resolvedType, this);", "+\t}", "+\treturn this.resolvedType;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd837762a617364ec5f21fa8af91fcb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (binding != null) { // is a shared type reference which was already resolved", "-\t\tif (!binding.isValidBinding())", "+\tif (this.resolvedType != null) { // is a shared type reference which was already resolved", "+\t\tif (!this.resolvedType.isValidBinding())", "-\t\tbinding = getTypeBinding(scope);", "-\t\tif (!binding.isValidBinding()) {", "-\t\t\tscope.problemReporter().invalidType(this, binding);", "+\t\tthis.resolvedType = getTypeBinding(scope);", "+\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\t\tscope.problemReporter().invalidType(this, this.resolvedType);", "-\t\tif (isTypeUseDeprecated(binding, scope))", "-\t\t\tscope.problemReporter().deprecatedType(binding, this);", "+\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\t\tscope.problemReporter().deprecatedType(this.resolvedType, this);", "-\treturn this.expressionType = binding;", "+\treturn this.resolvedType = this.resolvedType;"]}], "num": 51989}