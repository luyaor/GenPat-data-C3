{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfa4b6d3b5d4bc65a7ce765612c4f5b3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "140da9af0dd5a79a1cf9472cac179c56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic boolean match(Initializer node, Object other)", "signatureAfterChange": " \tpublic boolean match(Initializer node, Object other)", "diff": ["+\t\tint level = node.getAST().API_LEVEL;", "+\t\tif (level == AST.LEVEL_2_0) {", "+\t\t\tif (node.getModifiers() != o.getModifiers()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\tif (level >= AST.LEVEL_3_0) {", "+\t\t\tif (!safeSubtreeListMatch(node.modifiers(), o.modifiers())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "-\t\t\t(node.getModifiers() == o.getModifiers())", "-\t\t\t\t&& safeSubtreeMatch(node.getJavadoc(), o.getJavadoc())", "+\t\t\t\tsafeSubtreeMatch(node.getJavadoc(), o.getJavadoc())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6228c9053dc34cc1268d094fe6a8d143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic boolean match(SingleVariableDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(SingleVariableDeclaration node, Object other)", "diff": ["-\t\treturn (", "-\t\t\t(node.getModifiers() == o.getModifiers())", "-\t\t\t\t&& safeSubtreeMatch(node.getType(), o.getType())", "+\t\tint level = node.getAST().API_LEVEL;", "+\t\tif (level == AST.LEVEL_2_0) {", "+\t\t\tif (node.getModifiers() != o.getModifiers()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\tif (level >= AST.LEVEL_3_0) {", "+\t\t\tif (!safeSubtreeListMatch(node.modifiers(), o.modifiers())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (node.isVariableArity() != o.isVariableArity()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn ", "+\t\t    safeSubtreeMatch(node.getType(), o.getType())", "-\t\t\t\t&& safeSubtreeMatch(node.getInitializer(), o.getInitializer()));", "+\t\t\t\t&& safeSubtreeMatch(node.getInitializer(), o.getInitializer());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fcdc8f85ec64e227f296962caedb089", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationExpression node, Object other)", "signatureAfterChange": " \tpublic boolean match(VariableDeclarationExpression node, Object other)", "diff": ["-\t\treturn node.getModifiers() == o.getModifiers()", "-\t\t\t&& safeSubtreeMatch(node.getType(), o.getType())", "+\t\tint level = node.getAST().API_LEVEL;", "+\t\tif (level == AST.LEVEL_2_0) {", "+\t\t\tif (node.getModifiers() != o.getModifiers()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\tif (level >= AST.LEVEL_3_0) {", "+\t\t\tif (!safeSubtreeListMatch(node.modifiers(), o.modifiers())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn safeSubtreeMatch(node.getType(), o.getType())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9741262232fee8394aed418342834429", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(VariableDeclarationStatement node, Object other)", "diff": ["-\t\treturn node.getModifiers() == o.getModifiers()", "-\t\t\t&& safeSubtreeMatch(node.getType(), o.getType())", "+\t\tint level = node.getAST().API_LEVEL;", "+\t\tif (level == AST.LEVEL_2_0) {", "+\t\t\tif (node.getModifiers() != o.getModifiers()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\tif (level >= AST.LEVEL_3_0) {", "+\t\t\tif (!safeSubtreeListMatch(node.modifiers(), o.modifiers())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn safeSubtreeMatch(node.getType(), o.getType())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b178286bf1c2048dcc80a50d009c8695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic boolean match(ClassInstanceCreation node, Object other)", "signatureAfterChange": " \tpublic boolean match(ClassInstanceCreation node, Object other)", "diff": ["-\t\treturn (", "+\t\tint level = node.getAST().API_LEVEL;", "+\t\tif (level == AST.LEVEL_2_0) {", "+\t\t\tif (!safeSubtreeMatch(node.getName(), o.getName())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\tif (level >= AST.LEVEL_3_0) {", "+\t\t\tif (!safeSubtreeMatch(node.getType(), o.getType())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn ", "-\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName())", "-\t\t\t\t\to.getAnonymousClassDeclaration()));", "+\t\t\t\t\to.getAnonymousClassDeclaration());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86767075149445391f398cc3651bba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic boolean match(FieldDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(FieldDeclaration node, Object other)", "diff": ["-\t\treturn node.getModifiers() == o.getModifiers()", "-\t\t\t&& safeSubtreeMatch(node.getJavadoc(), o.getJavadoc())", "+\t\tint level = node.getAST().API_LEVEL;", "+\t\tif (level == AST.LEVEL_2_0) {", "+\t\t\tif (node.getModifiers() != o.getModifiers()) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\tif (level >= AST.LEVEL_3_0) {", "+\t\t\tif (!safeSubtreeListMatch(node.modifiers(), o.modifiers())) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\treturn ", "+\t\t\tsafeSubtreeMatch(node.getJavadoc(), o.getJavadoc())"]}], "num": 6956}