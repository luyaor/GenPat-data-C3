{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d856595743810d33c5d9275408bd967a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406bc0306d2ac585e22b22e50db75ed0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "fe024fd7797ce73b0a83969f685073606863b79e", "commitAfterChange": "124641ac651bbea2bd062a9605817d39b473bf0e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void indexResolvedDocument()", "signatureAfterChange": "  \tpublic void indexResolvedDocument()", "diff": ["-", "-public void indexResolvedDocument() {", "-\tif (this.cu != null && this.cu.scope != null) {", "-\t\tfinal ASTVisitor visitor = new ASTVisitor() {", "+\tpublic void indexResolvedDocument() {", "+\t\ttry {", "+\t\t\tif (DEBUG) {", "+\t\t\t\tSystem.out.println(new String(this.cud.compilationResult.fileName) + ':');", "+\t\t\t}", "+\t\t\tfinal ASTVisitor visitor = new ASTVisitor() {", "+\t\t\t\t\t\tif (DEBUG) {", "+\t\t\t\t\t\t\tSystem.out.println('\\t' + new String(lambdaExpression.descriptor.declaringClass.sourceName()) + '.' + ", "+\t\t\t\t\t\t\t\t\tnew String(lambdaExpression.descriptor.selector) + \"-> {}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (DEBUG) {", "+\t\t\t\t\t\t\tSystem.out.println(\"\\tnull/bad binding in lambda\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (DEBUG) {", "+\t\t\t\t\t\t\tSystem.out.println('\\t' + new String(referenceExpression.descriptor.declaringClass.sourceName()) + \"::\"  //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t+ new String(referenceExpression.descriptor.selector) + \" == \" + new String(binding.declaringClass.sourceName()) + '.' + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tnew String(binding.selector));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (DEBUG) {", "+\t\t\t\t\t\t\tSystem.out.println(\"\\tnull/bad binding in reference expression\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\tthis.cu.traverse(visitor , this.cu.scope, false);", "+\t\t\tthis.cud.traverse(visitor , this.cud.scope, false);", "+\t\t} catch (Exception e) {", "+\t\t\tif (JobManager.VERBOSE) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t}", "+\t\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce52fc4aba5e093b16d901a0b863da71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "dc9a89d9f844d31b09ec158bf347daa2976701f3", "commitAfterChange": "7bcf1741dcb918f3307ee7d52f0450e52fdd3029", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012() throws Exception", "signatureAfterChange": " public void test012() throws Exception", "diff": ["+\tEvaluationResult[] results = requestor.results;", "+\tSystem.out.println(\"\\nDebugEvaluationTests:test012: Results (1):\");", "+\tfor(int i = 0; i < results.length; i++) {", "+\t\tEvaluationResult r = results[i];", "+\t\tif (r == null) continue;", "+\t\tSystem.out.println(\"\\t[\" + i + \"] Evaluation Type: \"+ r.getEvaluationType() + ", "+\t\t\t\t\" Value Type: \" + new String(r.getValueTypeName()) + ", "+\t\t\t\t\" Value: \" + new String(r.getValueDisplayString()));", "+\t}", "+\tresults = requestor.results;", "+\tSystem.out.println(\"\\nDebugEvaluationTests:test012: Results (2):\");", "+\tfor(int i = 0; i < results.length; i++) {", "+\t\tEvaluationResult r = results[i];", "+\t\tif (r == null) continue;", "+\t\tSystem.out.println(\"\\t[\" + i + \"] Evaluation Type: \"+ r.getEvaluationType() + ", "+\t\t\t\t\" Value Type: \" + new String(r.getValueTypeName()) + ", "+\t\t\t\t\" Value: \" + new String(r.getValueDisplayString()));", "+\t}"]}], "num": 57119}