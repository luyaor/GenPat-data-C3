{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2f1509a67a4f1e7e7d0abe5107858b7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f36d49580a667faaaef69cb5a7b1e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " private void writeStreamInt(FileOutputStream stream, int val) throws IOException", "signatureAfterChange": " private void writeStreamInt(FileOutputStream stream, int val) throws IOException", "diff": ["-\tif ((this.bufferIndex+4) < BUFFER_WRITE_SIZE)  {", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) val;", "-\t} else {", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) val;", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "+\tif ((this.bufferIndex + 4) >= BUFFER_WRITE_SIZE)  {", "+\t\tstream.write(this.streamBuffer, 0, this.bufferIndex);", "+\t\tthis.bufferIndex = 0;", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) val;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efb119a084ad07fc7b650efb9d71c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "ce7bef49e9ed96b08f61ac987775cd5b5704ee11", "commitAfterChange": "07a11e1e272139637f646eb5763c54327cd4bc46", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " private int readStreamInt(FileInputStream stream) throws IOException", "signatureAfterChange": " private int readStreamInt(FileInputStream stream) throws IOException", "diff": ["-\tint idx = this.bufferIndex;", "-\tthis.bufferIndex += 4;", "-\tint bufferSize = BUFFER_READ_SIZE;", "-\tif (this.bufferIndex >= bufferSize) {", "-\t\tthis.bufferIndex -= bufferSize;", "-\t\tint readSize = this.streamEnd == -1 ? BUFFER_READ_SIZE : this.streamEnd - this.streamPos;", "-\t\tif (readSize > bufferSize) readSize = bufferSize;", "-\t\tint val = (streamBuffer[idx++]&0xFF)<<24;", "-\t\tif (idx == bufferSize) {", "-\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize);", "-\t\t\tidx = 0;", "-\t\t}", "-\t\tval += (streamBuffer[idx++]&0xFF)<<16;", "-\t\tif (idx == bufferSize) {", "-\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize);", "-\t\t\tidx = 0;", "-\t\t}", "-\t\tval += (streamBuffer[idx++]&0xFF)<<8;", "-\t\tif (idx == bufferSize) {", "-\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize);", "-\t\t\tidx = 0;", "-\t\t}", "-\t\tval += (streamBuffer[idx++]&0xFF);", "-\t\tif (idx == bufferSize) {", "-\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize);", "-\t\t\tidx = 0;", "-\t\t}", "-\t\treturn val;", "+\tif (this.bufferIndex + 4 >= this.bufferEnd) {", "+\t\treadStreamBuffer(stream);", "-\tint val = (streamBuffer[idx]&0xFF)<<24;", "-\tval += (streamBuffer[idx+1]&0xFF)<<16;", "-\tval += (streamBuffer[idx+2]&0xFF)<<8;", "-\treturn val + (streamBuffer[idx+3]&0xFF);", "+\tint val = (streamBuffer[this.bufferIndex++] & 0xFF) << 24;", "+\tval += (streamBuffer[this.bufferIndex++] & 0xFF) << 16;", "+\tval += (streamBuffer[this.bufferIndex++] & 0xFF) << 8;", "+\treturn val + (streamBuffer[this.bufferIndex++] & 0xFF);"]}], "num": 41254}