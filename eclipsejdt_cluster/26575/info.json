{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1fa8849a3d33ec4f0ac65cf2d8a98bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138626fcd4529ca320aaae30e9671820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "4d1b2a602aa63e2d641e31567150dab25a5e04f3", "commitAfterChange": "7935d7046a5948ba0caaa49b731ab944081ed079", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "signatureAfterChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "diff": ["-\t\tfor (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\tint paramLength = typeParameters.length;", "+\t\tfor (int i = 0; i < paramLength; i++) {", "-\t\tnextVariable: for (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\tnextVariable: for (int i = 0; i < paramLength; i++) {", "+\t\t// after bounds have been resolved we're ready for resolving the type parameter itself,", "+\t\t// which includes resolving/evaluating type annotations and checking for inconsistencies", "+\t\tfor (int i = 0; i < paramLength; i++)", "+\t\t\tresolveTypeParameter(typeParameters[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b315c62616c0f3e3beb2d65fc2fe1a10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "55faaf3dfc47830873dee6e41f09fe7164caaea8", "commitAfterChange": "8165ce534efddbff7578af3af8689c03385c50b5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "signatureAfterChange": " \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters, boolean checkForErasedCandidateCollisions)", "diff": ["-\t\tnextVariable: for (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\t// preinitializing each type variable", "+\t\tfor (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "-", "+\t\t}", "+\t\tnextVariable: for (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\t\tTypeParameter typeParameter = typeParameters[i];", "+\t\t\tTypeVariableBinding typeVariable = typeParameter.binding;"]}], "num": 26575}