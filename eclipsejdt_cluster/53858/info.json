{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f0ba99090b8f805243e2a6514320b8d", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f16c35ef8d60e599e0370d6ce469fc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void addMethodDeclaration(char[] methodName, char[][] parameterTypes, char[] returnType, char[][] exceptionTypes)", "signatureAfterChange": " \tpublic void addMethodDeclaration(char[] methodName, char[][] parameterTypes, char[] returnType, char[][] exceptionTypes)", "diff": ["-}", "-public void addMethodDeclaration(char[] methodName, char[][] parameterTypes, char[] returnType, char[][] exceptionTypes) {", "-\tint argCount = parameterTypes == null ? 0 : parameterTypes.length;", "-\tthis.output.addRef(MethodPattern.createDeclaration(methodName, argCount));", "-", "-\tfor (int i = 0; i < argCount; i++)", "-\t\taddTypeReference(parameterTypes[i]);", "-\tif (exceptionTypes != null)", "-\t\tfor (int i = 0, max = exceptionTypes.length; i < max; i++)", "-\t\t\taddTypeReference(exceptionTypes[i]);", "-\tif (returnType != null)", "-\t\taddTypeReference(returnType);", "-}", "+\t}", "+\tpublic void addMethodDeclaration(char[] methodName, char[][] parameterTypes, char[] returnType, char[][] exceptionTypes) {", "+\t\tint argCount = parameterTypes == null ? 0 : parameterTypes.length;", "+\t\taddIndexEntry(METHOD_DECL, MethodPattern.createIndexKey(methodName, argCount));", "+\t", "+\t\tfor (int i = 0; i < argCount; i++)", "+\t\t\taddTypeReference(parameterTypes[i]);", "+\t\tif (exceptionTypes != null)", "+\t\t\tfor (int i = 0, max = exceptionTypes.length; i < max; i++)", "+\t\t\t\taddTypeReference(exceptionTypes[i]);", "+\t\tif (returnType != null)", "+\t\t\taddTypeReference(returnType);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9320039719dce7b47422dbfa2160b995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void addConstructorDeclaration(char[] typeName, char[][] parameterTypes, char[][] exceptionTypes)", "signatureAfterChange": " \tpublic void addConstructorDeclaration(char[] typeName, char[][] parameterTypes, char[][] exceptionTypes)", "diff": ["-}", "-public void addConstructorDeclaration(char[] typeName, char[][] parameterTypes, char[][] exceptionTypes) {", "-\tint argCount = parameterTypes == null ? 0 : parameterTypes.length;", "-\tthis.output.addRef(ConstructorPattern.createDeclaration(CharOperation.lastSegment(typeName,'.'), argCount));", "-", "-\tfor (int i = 0; i < argCount; i++)", "-\t\taddTypeReference(parameterTypes[i]);", "-\tif (exceptionTypes != null)", "-\t\tfor (int i = 0, max = exceptionTypes.length; i < max; i++)", "-\t\t\taddTypeReference(exceptionTypes[i]);", "-}", "+\t}", "+\tpublic void addConstructorDeclaration(char[] typeName, char[][] parameterTypes, char[][] exceptionTypes) {", "+\t\tint argCount = parameterTypes == null ? 0 : parameterTypes.length;", "+\t\taddIndexEntry(CONSTRUCTOR_DECL, ConstructorPattern.createIndexKey(CharOperation.lastSegment(typeName,'.'), argCount));", "+\t", "+\t\tfor (int i = 0; i < argCount; i++)", "+\t\t\taddTypeReference(parameterTypes[i]);", "+\t\tif (exceptionTypes != null)", "+\t\t\tfor (int i = 0, max = exceptionTypes.length; i < max; i++)", "+\t\t\t\taddTypeReference(exceptionTypes[i]);", "+\t}"]}], "num": 53858}