{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b770b3df74fb47ba3b637f09c3497c4a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7163d8a998f8e7a625edf920269b5e81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d8fdcf17a6a4f58acd9ec9d53426880134d9869a", "commitAfterChange": "e0a0631e6ad0dd184a0c6f7c90e330e7c7d93f89", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tif (typeBinding.isClass()){", "+\t\t\t\t\t\t\tif (typeBinding.isClass()) {", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(typeBinding));", "-\t\t\t\t\t\t\t\t\tproposal.setPackageName(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeBinding.qualifiedSourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setCompletion(typeBinding.sourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setFlags(typeBinding.modifiers);", "-\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "-\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "-\t\t\t\t\t\t\t\t\tif(DEBUG) {", "-\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t} else if(typeBinding.isEnum()) {", "+\t\t\t\t\t\t\t\trelevance += computeRelevanceForEnum();", "+\t\t\t\t\t\t\t} else if(typeBinding.isInterface()) {", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(typeBinding));", "-\t\t\t\t\t\t\t\t\tproposal.setPackageName(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeBinding.qualifiedSourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setCompletion(typeBinding.sourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setFlags(typeBinding.modifiers);", "-\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "-\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "-\t\t\t\t\t\t\t\t\tif(DEBUG) {", "-\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(typeBinding.qualifiedPackageName());", "+\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(typeBinding));", "+\t\t\t\t\t\t\t\tproposal.setPackageName(typeBinding.qualifiedPackageName());", "+\t\t\t\t\t\t\t\tproposal.setTypeName(typeBinding.qualifiedSourceName());", "+\t\t\t\t\t\t\t\tproposal.setCompletion(typeBinding.sourceName());", "+\t\t\t\t\t\t\t\tproposal.setFlags(typeBinding.modifiers);", "+\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c6ac1c3798d1eccf7072729145f14e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d8fdcf17a6a4f58acd9ec9d53426880134d9869a", "commitAfterChange": "e0a0631e6ad0dd184a0c6f7c90e330e7c7d93f89", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "-\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "-\t\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "-\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "-\t\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "-\t\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers);", "-\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "-\t\t\t\t\t\t\t\t\tproposal.setAccessibility(accessibility);", "-\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "-\t\t\t\t\t\t\t\t\tif(DEBUG) {", "-\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else if (refBinding.isInterface()) {", "+\t\t\t\t\t\t\t} else if(refBinding.isEnum()) {", "+\t\t\t\t\t\t\t\trelevance += computeRelevanceForEnum();", "+\t\t\t\t\t\t\t} else if(refBinding.isInterface()) {", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "-\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "-\t\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "-\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "-\t\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "-\t\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers | Flags.AccInterface);", "-\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "-\t\t\t\t\t\t\t\t\tproposal.setAccessibility(accessibility);", "-\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "-\t\t\t\t\t\t\t\t\tif(DEBUG) {", "-\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\t\t\t\t\t\tproposal.setPackageName(packageName);", "+\t\t\t\t\t\t\t\tproposal.setTypeName(typeName);", "+\t\t\t\t\t\t\t\tproposal.setCompletion(completionName);", "+\t\t\t\t\t\t\t\tproposal.setFlags(refBinding.modifiers);", "+\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\tproposal.setAccessibility(accessibility);", "+\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);"]}], "num": 61480}