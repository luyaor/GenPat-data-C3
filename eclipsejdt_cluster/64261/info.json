{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "127a97f0f62bc0189736a3aec225b7ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862725fdad348a99dc36efb5b6b515c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3ef93f23afcd2f32a7f2e702fed5d9d29c70e752", "commitAfterChange": "a54ce0f1a5965500a06d345ce2b572137c5b2f38", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \r \tpublic ArrayCreation convert(ArrayAllocationExpression expression)", "signatureAfterChange": "\r \r \tpublic ArrayCreation convert(ArrayAllocationExpression expression)", "diff": ["+\t\tif (this.resolveBindings) {\r", "+\t\t\trecordNodes(type, expression.type);\r", "+\t\t}\t\t\r", "+\t\t\tint start = type.getStartPosition();\r", "+\t\t\tint end = type.getStartPosition() + type.getLength();\r", "+\t\t\tint previousSearchStart = end;\r", "+\t\t\tArrayType componentType = (ArrayType) type.getParent();\r", "+\t\t\tfor (int i = 0; i < dimensionsLength; i++) {\r", "+\t\t\t\tpreviousSearchStart = retrieveRightBracketPosition(previousSearchStart + 1, this.compilationUnitSource.length);\r", "+\t\t\t\tcomponentType.setSourceRange(start, previousSearchStart - start + 1);\r", "+\t\t\t\tcomponentType = (ArrayType) componentType.getParent();\r", "+\t\t\t}\r", "+\t\tif (this.resolveBindings) {\r", "+\t\t\trecordNodes(arrayType, expression);\r", "+\t\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebf9df1d6ef015f2e0265a76fa4e7e43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "1ba6cf1a1cd58ea6964d3e53d500ba37300ad6c5", "commitAfterChange": "122386dad13a4daa4a6eb3fe318a2c079a2655ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tITypeBinding resolveType(Type type)", "signatureAfterChange": "\r \tITypeBinding resolveType(Type type)", "diff": ["+\t\t\t\t\tif (type.isArrayType()) {\r", "+\t\t\t\t\t\tArrayType array = (ArrayType) type;\r", "+\t\t\t\t\t\tif (typeBinding.getDimensions() != array.getDimensions()) {\r", "+\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)typeReference.binding;\r", "+\t\t\t\t\t\t\tfor (int i = 0, max = typeBinding.getDimensions() - array.getDimensions(); i < max; i++) {\r", "+\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else if (typeBinding.isArray() && type.isSimpleType()) {\r", "+\t\t\t\t\t\treturn this.getTypeBinding(((ArrayBinding)typeReference.binding).leafComponentType());\r", "+\t\t\t\t\t}\r"]}], "num": 64261}