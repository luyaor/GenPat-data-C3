{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59a979c8c3e239ac2597e678f48bfa81", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50ee78ec0d73483377e7220d931ba248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tif (this.pattern.isParameterized() && !this.isEquivalentMatch &&!this.isErasureMatch) {", "+\tif (this.pattern.hasTypeArguments() && !this.isEquivalentMatch &&!this.isErasureMatch) {", "-\tboolean patternHasParameters = false;", "-\tif (this.pattern.isParameterized()) {", "-\t\tpatternHasParameters = this.pattern.typeArguments[0] != null && this.pattern.typeArguments[0].length != 0;", "-\t}", "-\tif (patternHasParameters) { // binding has no type params, compatible erasure if pattern does", "+\tif (this.pattern.hasTypeArguments()) { // binding has no type params, compatible erasure if pattern does", "-\t\t\t\t\t\tif (this.pattern.typeSignatures != null) {", "-\t\t\t\t\t\t\tif (this.pattern.typeSignatures.length > 1) {", "-\t\t\t\t\t\t\t\tindex = lastIndex - (this.pattern.typeSignatures.length - 1);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tindex = lastIndex - this.pattern.segmentsSize;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tindex = lastIndex - this.pattern.segmentsSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb020d07dbb9104c1d1c711ac3d6cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void matchReportReference(Expression expr, IJavaElement element, int accuracy, int start, int end, int lastIndex, TypeBinding refBinding, MatchLocator locator) throws CoreException", "signatureAfterChange": " void matchReportReference(Expression expr, IJavaElement element, int accuracy, int start, int end, int lastIndex, TypeBinding refBinding, MatchLocator locator) throws CoreException", "diff": ["-\tboolean patternHasParameters = false;", "-\tif (this.pattern.isParameterized()) {", "-\t\tpatternHasParameters = this.pattern.typeArguments[0] != null && this.pattern.typeArguments[0].length != 0;", "-\t}", "-\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeArguments, this.pattern.typeSignatures==null, 0, locator);", "+\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.getTypeArguments(), this.pattern.hasTypeParameters(), 0, locator);", "-\t\t if (refBinding.isParameterizedType() && this.pattern.isParameterized())  {", "+\t\t if (refBinding.isParameterizedType() && this.pattern.hasTypeArguments())  {", "-\t} else if (patternHasParameters) { // binding has no type params, compatible erasure if pattern does", "+\t} else if (this.pattern.hasTypeArguments()) { // binding has no type params, compatible erasure if pattern does"]}], "num": 45940}