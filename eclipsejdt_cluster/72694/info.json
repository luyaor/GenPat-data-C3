{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4bb4727f2a4a3e8c11e6f0312956361", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28887309709157a0fcdaae88cbfef5e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "60205bed5116ad3496dacec47d060779de36e647", "commitAfterChange": "af3a6832e3b1c1003f856c7a02d77d240881ed44", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory, boolean isManaged) throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory) throws JavaModelException", "diff": ["- */\r", "-public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory, boolean isManaged) throws JavaModelException {\r", "-\tWorkingCopy workingCopy;\r", "-\tMap managedWorkingCopies = null;\r", "-\tJavaModelManager manager = null;\r", "-\tif (isManaged) {\r", "-\t\tmanager = JavaModelManager.getJavaModelManager();\r", "-\t\tmanagedWorkingCopies = manager.managedWorkingCopies;\r", "-\t\tworkingCopy = (WorkingCopy)managedWorkingCopies.get(this);\r", "-\t\tif (workingCopy != null) {\r", "-\t\t\tworkingCopy.managedCount++;\r", "-\t\t\treturn workingCopy;\r", "-\t\t}\r", "-\t}\r", "-\tworkingCopy = new WorkingCopy((IPackageFragment)getParent(), getElementName(), factory);\r", "-\t// open the working copy now to ensure contents are that of the current state of this element\r", "-\tIBuffer buffer = factory == null ? null : factory.createBuffer(workingCopy);\r", "-\tworkingCopy.open(pm, buffer);\r", "-\tif (isManaged) {\r", "-\t\tmanagedWorkingCopies.put(this, workingCopy);\r", "-\t\t\r", "+ */\r", "+public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory) throws JavaModelException {\r", "+\tWorkingCopy workingCopy = new WorkingCopy((IPackageFragment)getParent(), getElementName(), factory);\r", "+\t// open the working copy now to ensure contents are that of the current state of this element\r", "+\tIBuffer buffer = factory == null ? null : factory.createBuffer(workingCopy);\r", "+\tworkingCopy.open(pm, buffer);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4f185f84faf16e8d5c50b19ec95ddc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "b862404e19fe1b0dc511da72b2317fa3ac05de7d", "commitAfterChange": "b39d81cc881475e2f341750790402944124a9023", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory) throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory) throws JavaModelException", "diff": ["+\treturn getSharedWorkingCopy(pm, factory, null);\r", "+}\r", "-\t\tworkingCopy = (WorkingCopy)this.getWorkingCopy(pm, factory);\r"]}], "num": 72694}