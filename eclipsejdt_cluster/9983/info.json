{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb7af391674180a957c2bb804534edbd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43fa1e54ace16686c00992d7ec86dc9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["+\t} else if (this.binding.isNonNull()) {", "+\t\t// in a context where it can be assigned?", "+\t\tif (   !isCompound", "+\t\t\t&& this.receiver.isThis()", "+\t\t\t&& !(this.receiver instanceof QualifiedThisReference)", "+\t\t\t&& ((this.receiver.bits & ASTNode.ParenthesizedMASK) == 0)) { // (this).x is forbidden", "+\t\t\tflowInfo.markAsDefinitelyAssigned(this.binding);", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e677f8ef6b5cfc7114d47cecf39f1d68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "b14a6c4d09a9bece1bab75937908ff44df19fa09", "commitAfterChange": "a846071c58f9098177eef02be0134294158f9c4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["+\t} else if (this.binding.isNonNull()) {", "+\t\t// in a context where it can be assigned?", "+\t\tif (   !isCompound", "+\t\t\t&& this.receiver.isThis()", "+\t\t\t&& !(this.receiver instanceof QualifiedThisReference)", "+\t\t\t&& ((this.receiver.bits & ASTNode.ParenthesizedMASK) == 0)) { // (this).x is forbidden", "+\t\t\tflowInfo.markAsDefinitelyAssigned(this.binding);", "+\t\t}\t\t"]}], "num": 9983}