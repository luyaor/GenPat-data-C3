{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fed814c4ddb75cc69d2310cc0d9c99a9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98c9035d71e007b8e95b3b6aa8169c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "48774e458dcfc41c34b203c6488c7b9a8716e5cc", "commitAfterChange": "6224a5dcda094820e09b86e019ae927259ff3273", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tpublic TextEdit getRootEdit()", "signatureAfterChange": "  \tpublic TextEdit getRootEdit()", "diff": ["-", "-\t\t\tif (isValidEdit(currentEdit)) {", "-\t\t\t\ttry {", "-\t\t\t\t\tedit.addChild(new ReplaceEdit(currentEdit.offset, currentEdit.length, currentEdit.replacement));", "-\t\t\t\t}", "-\t\t\t\tcatch (MalformedTreeException ex) {", "-\t\t\t\t\t// log exception in case of error", "-\t\t\t\t\tCommentFormatterUtil.log(ex);", "- \t\t\t\t\tthrow ex;", "+\t\t\tif (currentEdit.offset >= 0 && currentEdit.offset <= this.scannerEndPosition) {", "+\t\t\t\tif (currentEdit.length == 0 || (currentEdit.offset != this.scannerEndPosition && isMeaningfulEdit(currentEdit))) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tedit.addChild(new ReplaceEdit(currentEdit.offset, currentEdit.length, currentEdit.replacement));", "+\t\t\t\t\t}", "+\t\t\t\t\tcatch (MalformedTreeException ex) {", "+\t\t\t\t\t\t// log exception in case of error", "+\t\t\t\t\t\tCommentFormatterUtil.log(ex);", "+\t \t\t\t\t\tthrow ex;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7882e1a6e50fad8670c8b64c6c265b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "7882956f959d3c6393e0d8829373f1d0522732ab", "commitAfterChange": "5147f5a5f17d6e4dce9e06801af75e51b27b5773", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean matchesDecodedKey(SearchPattern decodedPattern)", "signatureAfterChange": " public boolean matchesDecodedKey(SearchPattern decodedPattern)", "diff": ["-\tif (this.checkOnlySuperinterfaces)", "+\tif (this.superRefKind == ONLY_SUPER_INTERFACES)", "+\tif (this.superRefKind == ONLY_SUPER_CLASSES && pattern.enclosingTypeName != IIndexConstants.ONE_ZERO/*not an anonymous*/) ", "+\t\t// consider enumerations as classes, reject interfaces and annotations", "+\t\tif (pattern.superClassOrInterface == IIndexConstants.INTERFACE_SUFFIX ", "+\t\t\t|| pattern.superClassOrInterface == IIndexConstants.ANNOTATION_TYPE_SUFFIX) ", "+\t\t\treturn false;"]}], "num": 56448}