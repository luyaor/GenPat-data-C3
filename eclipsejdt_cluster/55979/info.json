{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a433beab415253907215b82c23af9ef3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425eab8b90df6a5e5c32ee55a6594f03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "e657b912c1ef94d48e9749f2cbf91c83fff8728f", "commitAfterChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["+\tchar[] qualifiedPattern = qualifiedPattern(this.pattern.declaringSimpleName, this.pattern.declaringQualification);", "+\tif (qualifiedPattern == null) return methodLevel; // since any declaring class will do", "+", "-\t\tdeclaringLevel = resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass);", "+\t\tdeclaringLevel = resolveLevelAsSubtype(qualifiedPattern, method.declaringClass);", "-\t\tdeclaringLevel = resolveLevelForType(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass);", "+\t\tdeclaringLevel = resolveLevelForType(qualifiedPattern, method.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8f635c94f773499578fc4c799ee6e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "e657b912c1ef94d48e9749f2cbf91c83fff8728f", "commitAfterChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["+\tchar[] qualifiedPattern = qualifiedPattern(this.pattern.declaringSimpleName, this.pattern.declaringQualification);", "+\tif (qualifiedPattern == null) return methodLevel; // since any declaring class will do", "+", "-\t\t? resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass)", "-\t\t: resolveLevelForType(this.pattern.declaringSimpleName, this.pattern.declaringQualification, method.declaringClass);", "+\t\t? resolveLevelAsSubtype(qualifiedPattern, method.declaringClass)", "+\t\t: resolveLevelForType(qualifiedPattern, method.declaringClass);"]}], "num": 55979}