{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caed7496260eeba0e3a924511a8374c4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7909d53347cbcbe8586f82116ca987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c134ad1ad3401a1f009440008892b2e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteral expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.IntLiteral expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}], "num": 51256}