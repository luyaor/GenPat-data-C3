{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef2ee3249831efc5b5174fe2d91579ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d7f25e06ba40bc7db57c6f46b04e0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " public int[] getJavaDocPositions()", "signatureAfterChange": " public int[] getJavaDocPositions()", "diff": ["-\tfor (int i = 0, max = scanner.commentPtr; i <= max; i++){", "+\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\tif (scanner.commentStops[i] > 0){", "+\t\tif (this.scanner.commentStops[i] > 0){", "-\tfor (int i = 0, max = scanner.commentPtr; i <= max; i++){", "+\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\tif (scanner.commentStops[i] > 0){", "-\t\t\tpositions[index++] = scanner.commentStarts[i];", "-\t\t\tpositions[index++] = scanner.commentStops[i]-1; //stop is one over\t\t\t", "+\t\tif (this.scanner.commentStops[i] > 0){", "+\t\t\tpositions[index++] = this.scanner.commentStarts[i];", "+\t\t\tpositions[index++] = this.scanner.commentStops[i]-1; //stop is one over\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c7555e477e0b3a8b985d96e74ea312", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6272ddbc393added5976d56f44f1521fcf876495", "commitAfterChange": "a738cdbf5d0b40e078d2ec76d22bcb613279cff6", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": " public int[] getJavaDocPositions()", "signatureAfterChange": " public int[] getJavaDocPositions()", "diff": ["-\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\t// javadoc only (non javadoc comment have negative end positions.)", "-\t\tif (this.scanner.commentStops[i] > 0){", "+\tint max = this.scanner.commentPtr;", "+\tfor (int i = 0; i <= max; i++){", "+\t\t// javadoc only (non javadoc comment have negative start and/or end positions.)", "+\t\tif (this.scanner.commentStarts[i] >= 0 && this.scanner.commentStops[i] > 0) {", "-\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\t// javadoc only (non javadoc comment have negative end positions.)", "-\t\tif (this.scanner.commentStops[i] > 0){", "-\t\t\tpositions[index++] = this.scanner.commentStarts[i];", "-\t\t\tpositions[index++] = this.scanner.commentStops[i]-1; //stop is one over", "+\tfor (int i = 0; i <= max; i++){", "+\t\t// javadoc only (non javadoc comment have negative start and/or end positions.)", "+\t\tint commentStart = this.scanner.commentStarts[i];", "+\t\tif (commentStart >= 0) {", "+\t\t\tint commentStop = this.scanner.commentStops[i];", "+\t\t\tif (commentStop > 0){", "+\t\t\t\tpositions[index++] = commentStart;", "+\t\t\t\tpositions[index++] = commentStop-1; //stop is one over", "+\t\t\t}"]}], "num": 5507}