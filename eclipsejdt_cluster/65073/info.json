{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb193e78e6eb9543af3da5c2956e3583", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21193be551e14b68ff287f0ae7448f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": " \t \tprivate static void recreatePersistedContainer(final IJavaProject project, final IPath containerPath, String containerString, boolean addToContainerValues)", "signatureAfterChange": " \t \tprivate static void recreatePersistedContainer(final IJavaProject project, final IPath containerPath, String containerString, boolean addToContainerValues)", "diff": ["-\t\t\tfinal IClasspathEntry[] containerEntries = ((JavaProject) project).decodeClasspath(containerString, false, false);", "-\t\t\tif (containerEntries != null && containerEntries != JavaProject.INVALID_CLASSPATH) {", "+\t\t\tIClasspathEntry[] entries;", "+\t\t\ttry {", "+\t\t\t\tentries = ((JavaProject) project).decodeClasspath(containerString, null/*not interested in unknown elements*/);", "+\t\t\t} catch (IOException e) {", "+\t\t\t\tUtil.log(e, \"Could not recreate persisted container: \\n\" + containerString); //$NON-NLS-1$", "+\t\t\t\tentries = JavaProject.INVALID_CLASSPATH;", "+\t\t\t}", "+\t\t\tif (entries != JavaProject.INVALID_CLASSPATH) {", "+\t\t\t\tfinal IClasspathEntry[] containerEntries = entries;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5db9284d908a2f8c1fadb09b3748b26c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory.java", "commitBeforeChange": "b14ecb9470662b23addd99b5801b067f2e1d219f", "commitAfterChange": "acdcff420df49056275dd64e658ce1f499c1ddee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static String[] loadMessageTemplates(Locale loc)", "signatureAfterChange": " public static String[] loadMessageTemplates(Locale loc)", "diff": ["-\tResourceBundle bundle = ResourceBundle.getBundle(\"org.eclipse.jdt.internal.compiler.problem.messages\", loc); //$NON-NLS-1$", "+\tResourceBundle bundle = null;", "+\tString bundleName = \"org.eclipse.jdt.internal.compiler.problem.messages\"; //$NON-NLS-1$", "+\ttry {", "+\t\tbundle = ResourceBundle.getBundle(bundleName, loc); ", "+\t} catch(MissingResourceException e) {", "+\t\tSystem.out.println(\"Missing resource : \" + bundleName.replace('.', '/') + \".properties for locale \" + loc); //$NON-NLS-1$//$NON-NLS-2$", "+\t\tthrow e;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84031b59a364a926092036806ff7d96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f2f45b09c61cdc4a3bb7702f92f8e4fdcb969052", "commitAfterChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void generatedSourceFolderDeleted()", "signatureAfterChange": " \tpublic void generatedSourceFolderDeleted(final boolean projectDeleted)", "diff": ["-\tpublic void generatedSourceFolderDeleted()", "+\tpublic void generatedSourceFolderDeleted(final boolean projectDeleted)", "-\t\t// jdt-core will remove the generated source folder from the java ", "-\t\t// project's classpath, so we'll just clean out our maps. ", "-\t\tsynchronized( this )", "-\t\t{", "+\t\t", "+\t\tIFolder srcFolder;", "+\t\tsynchronized(this){", "+\t\t\tsrcFolder = getGeneratedSourceFolder();", "+\t\t", "+\t\ttry{", "+\t\t\tif( !projectDeleted )", "+\t\t\t\tremoveFromProjectClasspath( _javaProject, srcFolder, null );", "+\t\t}catch(JavaModelException e){", "+\t\t\tAptPlugin.log( e, \"Error occurred deleting old generated src folder \" + srcFolder.getName() ); //$NON-NLS-1$", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf205bc3760d07863a5bc18d5cf0bf7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "signatureAfterChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "diff": ["-\t\t\tthis.initializeRoots();\r", "+\t\t\tIJavaModel model = JavaModelManager.getJavaModel(ResourcesPlugin.getWorkspace());\r", "+\t\t\tif (!model.isOpen()) {\r", "+\t\t\t\t// force opening of java model so that java element delta are reported\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tmodel.open(null);\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\tif (VERBOSE) {\r", "+\t\t\t\t\t\te.printStackTrace();\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn NO_DELTA;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tthis.initializeRoots(model);\r", "-\t\t\t\tJavaModel model = JavaModelManager.getJavaModel(res.getWorkspace());\r", "-\t\t\t\tif (model != null) {\r", "-\t\t\t\t\tfCurrentDelta = new JavaElementDelta(model);\r", "-\t\t\t\t\t\r", "-\t\t\t\t\t// find out whether the delta is a package fragment root\r", "-\t\t\t\t\tIJavaProject projectOfRoot = (IJavaProject)this.roots.get(res.getFullPath());\r", "-\t\t\t\t\tboolean isPkgFragmentRoot = projectOfRoot != null;\r", "-\t\t\t\t\tint elementType = this.elementType(delta, IJavaElement.JAVA_MODEL, isPkgFragmentRoot);\r", "-\t\t\t\t\t\r", "-\t\t\t\t\ttraverseDelta(delta, elementType, projectOfRoot); // traverse delta\r", "-\t\t\t\t\ttranslatedDeltas[i] = fCurrentDelta;\r", "-\t\t\t\t}\r", "+\t\t\t\tfCurrentDelta = new JavaElementDelta(model);\r", "+\t\t\t\t\r", "+\t\t\t\t// find out whether the delta is a package fragment root\r", "+\t\t\t\tIJavaProject projectOfRoot = (IJavaProject)this.roots.get(res.getFullPath());\r", "+\t\t\t\tboolean isPkgFragmentRoot = projectOfRoot != null;\r", "+\t\t\t\tint elementType = this.elementType(delta, IJavaElement.JAVA_MODEL, isPkgFragmentRoot);\r", "+\t\t\t\t\r", "+\t\t\t\ttraverseDelta(delta, elementType, projectOfRoot); // traverse delta\r", "+\t\t\t\ttranslatedDeltas[i] = fCurrentDelta;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfcd4015a778870dd0185594ad1dd51c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "9311f01535700952280c267b61bac8e5f05b9f55", "commitAfterChange": "833acf9fd171cc3b88beb3f35c58318abd7b1b7c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprotected void checkDisassembledClassFile(String fileName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "signatureAfterChange": " \tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode)", "diff": ["-\t", "-\tprotected void checkDisassembledClassFile(String fileName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException {", "+\tprotected void checkDisassembledClassFile(String fileName, String className, String expectedOutput, int mode) {", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(classFile);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", mode);", "+\t\tString result = null;", "+\t\ttry {", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(classFile);", "+\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\t\tresult = disassembler.disassemble(classFileBytes, \"\\n\", mode);", "+\t\t} catch (IOException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tassertTrue(\"Should not happen : \", false);", "+\t\t} catch (ClassFormatException e) {", "+\t\t\te.printStackTrace();", "+\t\t\tassertTrue(\"Should not happen : \", false);", "+\t\t}"]}], "num": 65073}