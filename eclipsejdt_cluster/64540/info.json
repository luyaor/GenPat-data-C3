{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "553421cbdda29c2bc05e612c7b49f14a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257cc5864c6742483dcfd276f074aea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tcodeStream.invokespecial(this.codegenBinding);", "+\t\tcodeStream.invoke(Opcodes.OPC_invokespecial, this.codegenBinding, null /* default declaringClass */);", "-\t\tcodeStream.invokespecial(this.syntheticAccessor);", "+\t\tcodeStream.invoke(Opcodes.OPC_invokespecial, this.syntheticAccessor, null /* default declaringClass */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56715e84d8bd6a0255e22ffe6baa0945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void fieldStore(CodeStream codeStream, FieldBinding fieldBinding, MethodBinding syntheticWriteAccessor, boolean valueRequired)", "signatureAfterChange": " public void fieldStore(CodeStream codeStream, FieldBinding fieldBinding, MethodBinding syntheticWriteAccessor, boolean valueRequired)", "diff": ["-\t\t\tcodeStream.invokestatic(syntheticWriteAccessor);", "+\t\t\tcodeStream.invoke(Opcodes.OPC_invokestatic, syntheticWriteAccessor, null /* default declaringClass */);", "-\t\t\tcodeStream.invokestatic(syntheticWriteAccessor);", "+\t\t\tcodeStream.invoke(Opcodes.OPC_invokestatic, syntheticWriteAccessor, null /* default declaringClass */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e090b927c70a4bd422e0d4fca023002", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\tcodeStream.invokespecial(this.codegenBinding);", "+\t\t\tcodeStream.invoke(Opcodes.OPC_invokespecial, this.codegenBinding, null /* default declaringClass */);", "-\t\t\tcodeStream.invokespecial(this.syntheticAccessor);", "+\t\t\tcodeStream.invoke(Opcodes.OPC_invokespecial, this.syntheticAccessor, null /* default declaringClass */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3f894e2ab9a9f76d50fb9d12afc925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tcodeStream.invokespecial(this.syntheticAccessor);", "+\t\t\t\tcodeStream.invoke(Opcodes.OPC_invokespecial, this.syntheticAccessor, null /* default declaringClass */);", "-\t\t\t\tcodeStream.invokespecial(this.codegenBinding);", "+\t\t\t\tcodeStream.invoke(Opcodes.OPC_invokespecial, this.codegenBinding, null /* default declaringClass */);"]}], "num": 64540}