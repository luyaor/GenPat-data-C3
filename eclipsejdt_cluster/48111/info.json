{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea15519918058fee8a2d8607058c35ff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ead2899c35d6875afdfc85a6659afeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic void _test0229_for()", "signatureAfterChange": " public void test0709_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0229_for() {", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t for (o.toString(); o == null;) { /* */ }\\n\" + // complain: protected then unchanged", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tfor (o.toString(); o == null;) { /* */ }\\n\" + ", "-\t\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+// null analysis -- for", "+public void test0709_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    for (o.toString(); o == null;) { /* */ }\\n\" + // complain: protected then unchanged", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tfor (o.toString(); o == null;) { /* */ }\\n\" + ", "+\t\t\"\t                   ^\\n\" + ", "+\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afd331988804005091c9c98962c89a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test0225_for()", "signatureAfterChange": " \tpublic void test0153_try_finally()", "diff": ["+\t\t\t\t\"\t\t\t x = null;\\n\" +                // complain, already null", "+\t\t\t\t\"\t\t } finally { /* */ }\\n\" + ", "+\t\t\t\t\"\t }\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tx = null;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable x can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+\t}", "-\tpublic void test0225_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t for (;o == null;) {\\n\" + ", "-\t\t\t\t       // complain: first iteration is sure to find it null, ", "-\t\t\t\t       // and other iterations won't change it ", "-\t\t\t\t\"\t\t   /* */\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tfor (;o == null;) {\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}"]}], "num": 48111}