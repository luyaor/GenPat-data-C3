{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f06758810c9184774292898a98ddfef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062b3cb38de6dda5cfa76d4fb21a4e6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "7e8c39a9e3d7dea3d8b022efbc3b049165785892", "commitAfterChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test012()", "signatureAfterChange": "  \tpublic void test012()", "diff": ["+", "+\tpublic void test012() { // varargs and autoboxing", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\t\"\t\tInteger x = new Integer(15); \\n\" +", "+\t\t\t\t\"\t\tint y = 32;\\n\" +", "+\t\t\t\t\"\t\tSystem.out.printf(\\\"%x + %x\\\", x, y);\\n\" +", "-\t// varargs and autoboxing", "-\tpublic void test012() {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\tdouble x = 0XaP1; \\n\" +", "-\t\t\t\t\"\tdouble y = 0XFFP2D;\\n\" +", "-\t\t\t\t\"\tfloat z  = 0Xf.FP2F;\\n\" +", "-\t\t\t\t\"\tSystem.out.printf(\\\"%f %f %f%n\\\", x, y, z);\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\"20,000000 1020,000000 63,750000\"", "-\t\t);", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"    public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\tDouble x = new Double(0XaP1); \\n\" +", "-\t\t\t\t\"\tdouble y = 0XFFP2D;\\n\" +", "-\t\t\t\t\"\tfloat z  = 0Xf.FP2F;\\n\" +", "-\t\t\t\t\"\tSystem.out.printf(\\\"%f %f %f%n\\\", x, y, z);\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"}\",", "-\t\t\t},", "-\t\t\t\"20,000000 1020,000000 63,750000\"", "+\t\t\t\"f + 20\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71b7535d62c0f2ff3c4e74ee0142c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test0013_attribute_synchronized()", "signatureAfterChange": " \tpublic void test0013_field_synchronized()", "diff": ["-\tpublic void test0013_attribute_synchronized() {", "+\t// TODO (maxime) reset diagnostic once supported", "+\tpublic void test0013_field_synchronized() {", "-\t\t\t\t\"\t\t // bar();\\n\" + ", "-\t\t\t\t\"\t\t if (false) {\\n\" + ", "-\t\t\t\t\"\t\t\t o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t if (true) {\\n\" + ", "-\t\t\t\t\"\t\t\t //\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t else {\\n\" + ", "-\t\t\t\t\"\t\t\t o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t System.out.println(o.toString());\\n\" + ", "+\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\t\"\tSystem.out.println(o.toString());\\n\" + ", "-\t\t\t\"\t                   ^\\n\" + ", "-\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\" ", "+\t\t\t\"\"", "+//\t\t\t\"----------\\n\" + ", "+//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+//\t\t\t\" o.toString();\\n\" + ", "+//\t\t\t\"\t^\\n\" + ", "+//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//\t\t\t\"----------\\n\" "]}], "num": 10822}