{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbded52ddfc3c08a76e5c1455f2e69c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6526b1b57ccf39914bdcb2f2e288720f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate static FakedTrackingVariable analyseCloseableExpression(FlowInfo flowInfo, LocalVariableBinding local,  \t\t\t\t\t\t\t\t\tASTNode location, Expression expression, FakedTrackingVariable previousTracker)", "signatureAfterChange": " \tprivate static FakedTrackingVariable analyseCloseableExpression(FlowInfo flowInfo, LocalVariableBinding local,  \t\t\t\t\t\t\t\t\tASTNode location, Expression expression, FakedTrackingVariable previousTracker)", "diff": ["-\t\t\treturn tracker;\t\t\t", "-\t\t} else if ((expression.bits & RestrictiveFlagMASK) == Binding.FIELD) ", "+\t\t\treturn tracker;", "+\t\t} else if (", "+\t\t\t\t(expression.bits & RestrictiveFlagMASK) == Binding.FIELD", "+\t\t\t\t||((expression instanceof QualifiedNameReference)", "+\t\t\t\t\t\t&& ((QualifiedNameReference) expression).isFieldAccess()))", "-\t\treturn new FakedTrackingVariable(local, location);", "+\t\tFakedTrackingVariable newTracker = new FakedTrackingVariable(local, location);", "+\t\tLocalVariableBinding rhsLocal = expression.localVariableBinding();", "+\t\tif (rhsLocal != null && rhsLocal.isParameter()) {", "+\t\t\tnewTracker.globalClosingState |= OWNED_BY_OUTSIDE;", "+\t\t}", "+\t\treturn newTracker;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ac9ef248e398877d38965d0ce02337", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "6f6b135c3443a1f802996624e28e3fccc1ffade1", "commitAfterChange": "179d5d1c5c2a0bb83cd907094171a8fb72cf869e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public IndexBasedHierarchyBuilder(TypeHierarchy hierarchy, IJavaSearchScope scope) throws JavaModelException", "signatureAfterChange": "\r public IndexBasedHierarchyBuilder(TypeHierarchy hierarchy, IJavaSearchScope scope) throws JavaModelException", "diff": ["+\tthis.handleToWorkingCopy = new HashMap(1);\r", "+\tIType focusType = hierarchy.getType();\r", "+\torg.eclipse.jdt.core.ICompilationUnit handle;\r", "+\tif (focusType != null && (handle = focusType.getCompilationUnit()) != null && handle.isWorkingCopy()) {\r", "+\t\tthis.handleToWorkingCopy.put(handle.getOriginalElement(), handle); \r", "+\t}\r"]}], "num": 8721}