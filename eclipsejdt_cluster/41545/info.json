{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f663e7ef4e15aa7e30e963fb41d2124f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef16fbe053bc3e7a464eaf9b946e72f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "645b7bfaa2fa6e51ee8178c0b98a65d610d989c2", "commitAfterChange": "6cb5df5deb874bcd03782569c94840e1aa61cfba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": "\r private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\tchar[] packageChars = null, typeChars = null;\r", "+\tchar[] qualificationChars = null, typeChars = null;\r", "-\t\t\tpackageChars = CharOperation.subarray(typePart, 0, lastDotPosition);\r", "-\t\t\tif (packageChars.length == 1 && packageChars[0] == '*') packageChars = null;\r", "+\t\t\tqualificationChars = CharOperation.subarray(typePart, 0, lastDotPosition);\r", "+\t\t\tif (qualificationChars.length == 1 && qualificationChars[0] == '*') qualificationChars = null;\r", "-\t\t\tpackageChars = null;\r", "+\t\t\tqualificationChars = null;\r", "-\t\t\tsearchPattern = new TypeDeclarationPattern(packageChars, null, typeChars, TYPE_SUFFIX, matchMode, isCaseSensitive);\r", "+\t\t\tsearchPattern = new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchMode, isCaseSensitive);\r", "-\t\t\tsearchPattern = new TypeReferencePattern(packageChars, typeChars, matchMode, isCaseSensitive);\r", "+\t\t\tsearchPattern = new TypeReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);\r", "-\t\t\tsearchPattern = new SuperInterfaceReferencePattern(packageChars, typeChars, matchMode, isCaseSensitive);\r", "+\t\t\tsearchPattern = new SuperInterfaceReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);\r", "-\t\t\t\tnew TypeDeclarationPattern(packageChars, null, typeChars, TYPE_SUFFIX, matchMode, isCaseSensitive),// cannot search for explicit member types\r", "-\t\t\t\tnew TypeReferencePattern(packageChars, typeChars, matchMode, isCaseSensitive));\r", "+\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchMode, isCaseSensitive),// cannot search for explicit member types\r", "+\t\t\t\tnew TypeReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c404d86bb4d27b0a8acd5e8ac9c6843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\twhile (token != TerminalTokens.TokenNameEOF){", "+\twhile (token != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tif (type == null){", "+\t\t\t\tif (type == null)", "-\t\t\t\t} else {", "+\t\t\t\telse", "-\t\t\t\t}", "-\tif (type != null){", "+\tif (type != null) {", "-\t\tif (lastDotPosition >= 0){", "+\t\tif (lastDotPosition >= 0) {", "-\t\t\tif (qualificationChars.length == 1 && qualificationChars[0] == '*') qualificationChars = null;", "+\t\t\tif (qualificationChars.length == 1 && qualificationChars[0] == '*')", "+\t\t\t\tqualificationChars = null;", "-\t\tif (typeChars.length == 1 && typeChars[0] == '*') typeChars = null;", "+\t\tif (typeChars.length == 1 && typeChars[0] == '*')", "+\t\t\ttypeChars = null;", "-\tSearchPattern searchPattern = null;", "-\tswitch (limitTo){", "+\tswitch (limitTo) {", "-\t\t\tsearchPattern = new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchMode, isCaseSensitive);", "-\t\t\tbreak;", "+\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = new TypeReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);", "-\t\t\tbreak;", "+\t\t\treturn new TypeReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = new SuperInterfaceReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);", "-\t\t\tbreak;", "+\t\t\treturn new SuperInterfaceReferencePattern(qualificationChars, typeChars, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = new OrPattern(", "+\t\t\treturn new OrPattern(", "-\t\t\tbreak;", "-\treturn searchPattern;", "-", "-}", "+\treturn null;"]}], "num": 41545}