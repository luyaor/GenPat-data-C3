{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b998ffb0aa13f40ecb7b9b203ad88195", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f789828c998b6f3a6a0394c45ebe2aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "a738cdbf5d0b40e078d2ec76d22bcb613279cff6", "commitAfterChange": "b41120aee6f499b9a774d71aea9151d984f245c5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void processDelta(IJavaElementDelta delta, int eventType)", "signatureAfterChange": " public void processDelta(IJavaElementDelta delta, int eventType)", "diff": ["-\t\t\t\tIPath path = null;", "+\t\t\t\tString path = null;", "-\t\t\t\t\t\tpath = ((IJavaProject)element).getProject().getFullPath();", "+\t\t\t\t\t\tpath = ((IJavaProject)element).getProject().getFullPath().toString();", "+\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tif (path == null) {", "-\t\t\t\t\t\t\tpath = ((IPackageFragmentRoot)element).getPath();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tint toRemove = -1;", "-\t\t\t\t\t\tfor (int i = 0; i < this.pathsCount; i++) {", "-\t\t\t\t\t\t\tif (this.relativePaths[i].equals(path)) { // TODO (jerome) this compares String and IPath !", "-\t\t\t\t\t\t\t\ttoRemove = i;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (toRemove != -1) {", "-\t\t\t\t\t\t\tthis.relativePaths[toRemove] = null;", "-\t\t\t\t\t\t\trehash();", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tpath = ((IPackageFragmentRoot)element).getPath().toString();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\tfor (int i = 0; i < this.pathsCount; i++) {", "+\t\t\t\t\tif (this.relativePaths[i].equals(path)) {", "+\t\t\t\t\t\tthis.relativePaths[i] = null;", "+\t\t\t\t\t\trehash();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f45352551635ff89a69c61ec0d688ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "a4c0884f4909a7148eef43d80a79301d90c42921", "commitAfterChange": "04ac73525421db342cbea7b61068c93b1fac3e50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t\tpublic boolean accept(File pathname)", "signatureAfterChange": " \t\t \t\tpublic boolean accept(File pathname)", "diff": ["-\t\t{", "-\t\t\tpublic boolean accept(File pathname)", "-\t\t\t{", "-\t\t\t\tIPath f = new Path( pathname.getAbsolutePath() );", "-", "-\t\t\t\tint nsegments = f.matchingFirstSegments( new Path(", "-\t\t\t\t\tgetPluginClassesDir() ) );", "-\t\t\t\tboolean ok = true;", "-\t\t\t\tint min = Math.min( f.segmentCount() - nsegments,", "-\t\t\t\t\tANNOTATIONS_PKG_PARTS.length );", "-\t\t\t\tfor( int i = nsegments, j = 0; j < min; i++, j++ )", "-\t\t\t\t{", "-\t\t\t\t\tif( !f.segment( i ).equals( ANNOTATIONS_PKG_PARTS[j] ) )", "-\t\t\t\t\t{", "-\t\t\t\t\t\tok = false;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn ok;", "-\t\t\t}", "+\t\t", "+\t\tpublic boolean accept(File pathname)", "+\t\t{", "+\t\t\tIPath f = new Path( pathname.getAbsolutePath() );", "+\t\t\tint nsegments = f.matchingFirstSegments( _binDir );", "+\t\t\tboolean ok = true;", "+\t\t\tint min = Math.min( f.segmentCount() - nsegments,", "+\t\t\t\t\t_packageParts.length );", "+\t\t\tfor( int i = nsegments, j = 0; j < min; i++, j++ )", "+\t\t\t{", "+\t\t\t\tif( !f.segment( i ).equals( _packageParts[j] ) )", "+\t\t\t\t{", "+\t\t\t\t\tok = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn ok;", "+\t\t}"]}], "num": 1718}