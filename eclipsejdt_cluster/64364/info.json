{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21f18909ea8663135672c34f222761a3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e321d3023ac0ea418c997fbe1674add", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "faddcb079bee5b548a6f2f972d8258d3ff3dc5d3", "commitAfterChange": "7596807cbc20be2267cc443bfe387f40df0774fb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["+\t\t\tMethodBinding[] existingMethods = receiverType.methods();\r", "+\t\t\tfor(int i =0 ; i < existingMethods.length ; i++){\r", "+\t\t\t\tMethodBinding existingMethod = existingMethods[i];\r", "+\t\t\t\tif (CharOperation.equals(method.selector, existingMethod.selector, true)\r", "+\t\t\t\t\t&& method.areParametersEqual(existingMethod)){\r", "+\t\t\t\t\tcontinue next;\t\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba299e8f53fdf8d426ed94df44c75519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "f7ce86a79f082187bb9d131f12b4c9c140c05c32", "commitAfterChange": "908256095b93d8e1bbc7e5e244cc22e547564057", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  private MethodBinding getMethodBinding(ReferenceBinding type, TypeBinding[] argumentTypes)", "signatureAfterChange": "  private MethodBinding getMethodBinding(ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes)", "diff": ["-private MethodBinding getMethodBinding(ReferenceBinding type, TypeBinding[] argumentTypes) {", "-\tMethodBinding[] methods = type.getMethods(this.pattern.selector);", "+private MethodBinding getMethodBinding(ReferenceBinding type, char[] methodName, TypeBinding[] argumentTypes) {", "+\tMethodBinding[] methods = type.getMethods(methodName);"]}], "num": 64364}