{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31de20791a63db838e0f440c1b3f41cb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32a30b58e7a123704ecb76871917c3a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "e1603137cbd3b78896e1d2a36adea56f02cf4403", "commitAfterChange": "a446855af1d75ce4a9db853f60a76eb10d11782d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\ttypeBinding = (TypeBinding)binding;", "+\t\t\tif (binding instanceof ProblemBinding) {", "+\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "+\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "+\t\t\t\tchar[] partialQualifiedName = pbBinding.name;", "+\t\t\t\tlastIndex = CharOperation.occurencesOf('.', partialQualifiedName) - 1; // index of last bound token is one before the pb token", "+\t\t\t} else {", "+\t\t\t\ttypeBinding = (TypeBinding)binding;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "559ab73beb6adc8d139c36358f31689a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "e1603137cbd3b78896e1d2a36adea56f02cf4403", "commitAfterChange": "a446855af1d75ce4a9db853f60a76eb10d11782d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected int matchLevel(QualifiedNameReference qNameRef, boolean resolve)", "signatureAfterChange": " protected int matchLevel(QualifiedNameReference qNameRef, boolean resolve)", "diff": ["-\t\t\ttypeBinding = (TypeBinding)binding;", "+\t\t\tif (binding instanceof ProblemBinding) {", "+\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "+\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "+\t\t\t\tchar[] partialQualifiedName = pbBinding.name;", "+\t\t\t\tlastIndex = CharOperation.occurencesOf('.', partialQualifiedName) - 1; // index of last bound token is one before the pb token", "+\t\t\t\tif (typeBinding == null || lastIndex < 0) return INACCURATE_MATCH;", "+\t\t\t} else {", "+\t\t\t\ttypeBinding = (TypeBinding)binding;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c05c2936cd8b2de691e69a6de03002", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "e1603137cbd3b78896e1d2a36adea56f02cf4403", "commitAfterChange": "a446855af1d75ce4a9db853f60a76eb10d11782d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\ttypeBinding = (TypeBinding)binding;", "+\t\t\t\tif (binding instanceof ProblemBinding) {", "+\t\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "+\t\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "+\t\t\t\t\tchar[] partialQualifiedName = pbBinding.name;", "+\t\t\t\t\tmaxType = CharOperation.occurencesOf('.', partialQualifiedName) - 1; // index of last bound token is one before the pb token", "+\t\t\t\t\tif (typeBinding == null || maxType < 0) return;", "+\t\t\t\t} else {", "+\t\t\t\t\ttypeBinding = (TypeBinding)binding;", "+\t\t\t\t}"]}], "num": 770}