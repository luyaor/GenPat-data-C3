{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b35a17c0823226aee553eb118700a724", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68fe73912b400b930f08468e4bd9f88a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     @Override     public WildcardType getWildcardType(TypeMirror extendsBound, TypeMirror superBound)", "signatureAfterChange": "     @Override     public WildcardType getWildcardType(TypeMirror extendsBound, TypeMirror superBound)", "diff": ["-            return new WildcardTypeImpl(_env, this._env.getLookupEnvironment().createWildcard(", "-                    null,", "-                    0,", "-                    typeBinding,", "-                    null,", "-                    Wildcard.EXTENDS));", "+            return (WildcardType) _env.getFactory().newTypeMirror(", "+            \t\tthis._env.getLookupEnvironment().createWildcard(", "+\t                    null,", "+\t                    0,", "+\t                    typeBinding,", "+\t                    null,", "+\t                    Wildcard.EXTENDS));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a53a03b2a0571acddb3466993e0b4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Override     public ArrayType getArrayType(TypeMirror componentType)", "signatureAfterChange": "     @Override     public ArrayType getArrayType(TypeMirror componentType)", "diff": ["-        return new ArrayTypeImpl(_env, this._env.getLookupEnvironment().createArrayType(", "-                typeBinding.leafComponentType(),", "-                typeBinding.dimensions() + 1));", "+        return (ArrayType) _env.getFactory().newTypeMirror(", "+        \t\tthis._env.getLookupEnvironment().createArrayType(", "+        \t\t\t\ttypeBinding.leafComponentType(),", "+        \t\t\t\ttypeBinding.dimensions() + 1));"]}], "num": 19419}