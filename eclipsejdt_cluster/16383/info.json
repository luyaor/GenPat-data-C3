{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6e91972ecb6c4931b4f5c770992dc2a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0c9580a367df4287c51cb92c71610d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 209, "signatureBeforeChange": " \tpublic void test073d()", "signatureAfterChange": " \tpublic void test073d()", "diff": ["+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in NumericArray5.java (at line 5)\\r\\n\" + ", "+\t\t\t\"\t@Override public void add(Number n, Integer i) {}\\r\\n\" + ", "+\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method add(Number, Integer) of type NumericArray5<T> must override a superclass method\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in NumericArray5.java (at line 5)\\n\" + ", "+\t\t\t\"\t@Override public void add(Number n, Integer i) {}\\n\" + ", "+\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method add(Number, Integer) of type NumericArray5<T> must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\";\t\t", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in NumericArray5.java (at line 5)\\r\\n\" + ", "-\t\t\t\"\t@Override public void add(Number n, Integer i) {}\\r\\n\" + ", "-\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method add(Number, Integer) of type NumericArray5<T> must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\texpectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a0de9d6f16a9b32d6a11561cb760e6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void test077()", "signatureAfterChange": " \tpublic void test077()", "diff": ["+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t\t?\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\t\"\tvoid foo() {}\\n\" + ", "+\t\t\t\t\"\t     ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type X must override a superclass method\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\t\"\tpublic void baz() {}\\n\" + ", "+\t\t\t\t\"\t            ^^^^^\\n\" + ", "+\t\t\t\t\"The method baz() of type X must override a superclass method\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t:\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\t\"\tvoid foo() {}\\n\" + ", "+\t\t\t\t\"\t     ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type X must override or implement a supertype method\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"\tvoid foo() {}\\n\" + ", "-\t\t\t\"\t     ^^^^^\\n\" + ", "-\t\t\t\"The method foo() of type X must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\"\tpublic void baz() {}\\n\" + ", "-\t\t\t\"\t            ^^^^^\\n\" + ", "-\t\t\t\"The method baz() of type X must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\texpectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fe737fd2725973054f803c17838eea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": "     public void test168()", "signatureAfterChange": "     public void test168()", "diff": ["-        this.runNegativeTest(", "+    \tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t\t?\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\t@Override I clone();\\n\" + ", "+\t\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\t\"The method clone() of type I must override a superclass method\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t@Override void foo();\\n\" + ", "+\t\t\t\t\"\t               ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type J must override a superclass method\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t:\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\t@Override I clone();\\n\" + ", "+\t\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\t\"The method clone() of type I must override or implement a supertype method\\n\" + ", "+\t\t\t\t\"----------\\n\";", "+    \tthis.runNegativeTest(", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\t@Override I clone();\\n\" + ", "-\t\t\"\t            ^^^^^^^\\n\" + ", "-\t\t\"The method clone() of type I must override a superclass method\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\"\t@Override void foo();\\n\" + ", "-\t\t\"\t               ^^^^^\\n\" + ", "-\t\t\"The method foo() of type J must override a superclass method\\n\" + ", "-\t\t\"----------\\n\");", "+           expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7e256ae2fb17a2d652a367368b8e6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 208, "signatureBeforeChange": " \tpublic void test073c()", "signatureAfterChange": " \tpublic void test073c()", "diff": ["+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in NumericArray4.java (at line 5)\\r\\n\" + ", "+\t\t\t\"\t@Override public <U> void add(Number n) {}\\r\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method add(Number) of type NumericArray4<T> must override a superclass method\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in NumericArray4.java (at line 5)\\n\" + ", "+\t\t\t\"\t@Override public <U> void add(Number n) {}\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method add(Number) of type NumericArray4<T> must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in NumericArray4.java (at line 5)\\r\\n\" + ", "-\t\t\t\"\t@Override public <U> void add(Number n) {}\\r\\n\" + ", "-\t\t\t\"\t                          ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method add(Number) of type NumericArray4<T> must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\texpectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5460c17aad87039f16d6b8491743513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "     public void test140()", "signatureAfterChange": "     public void test140()", "diff": ["+    \tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 6)\\r\\n\" + ", "+    \t\t\"\tstatic void foo(){}\t\\r\\n\" + ", "+    \t\t\"\t            ^^^^^\\n\" + ", "+    \t\t\"The method foo() of type Bar must override a superclass method\\n\" + ", "+    \t\t\"----------\\n\"", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tstatic void foo(){}\t\\n\" + ", "+\t\t\t\"\t            ^^^^^\\n\" + ", "+\t\t\t\"The method foo() of type Bar must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\";    \t", "-    \t\t\"----------\\n\" + ", "-    \t\t\"1. ERROR in X.java (at line 6)\\r\\n\" + ", "-    \t\t\"\tstatic void foo(){}\t\\r\\n\" + ", "-    \t\t\"\t            ^^^^^\\n\" + ", "-    \t\t\"The method foo() of type Bar must override a superclass method\\n\" + ", "-    \t\t\"----------\\n\");", "+            expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdd5affff907c730741ae91de918de92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " \tpublic void test075b()", "signatureAfterChange": " \tpublic void test075b()", "diff": ["+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" + ", "+\t\t\t\"\tclass B<V> extends A<V> { @Override <T1, S1 extends K & I<T1>> void foo(V v, T1 t, S1 s) { } }\\r\\n\" + ", "+\t\t\t\"\t                                                                    ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method foo(V, T1, S1) of type B<V> must override a superclass method\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass B<V> extends A<V> { @Override <T1, S1 extends K & I<T1>> void foo(V v, T1 t, S1 s) { } }\\n\" + ", "+\t\t\t\"\t                                                                    ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method foo(V, T1, S1) of type B<V> must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\";\t\t\t\t", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tclass B<V> extends A<V> { @Override <T1, S1 extends K & I<T1>> void foo(V v, T1 t, S1 s) { } }\\r\\n\" + ", "-\t\t\t\"\t                                                                    ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method foo(V, T1, S1) of type B<V> must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedOutput"]}], "num": 16383}