{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e956050f6cb365141e68f4e06b38f6f0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ec11f20a884807af3b1c703cdf4d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "ddf48a7e21056eecd0111cd750a59c8617c397eb", "commitAfterChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tpublic void setInstantiation(TypeBinding type, InferenceVariable variable, LookupEnvironment environment)", "signatureAfterChange": " \t\tpublic void setInstantiation(TypeBinding type, InferenceVariable variable, LookupEnvironment environment)", "diff": ["-\t\t\t\tlong oldBits = ((this.instantiation != null) ? this.instantiation.tagBits : variable.tagBits)", "-\t\t\t\t\t\t\t\t& TagBits.AnnotationNullMASK;", "-\t\t\t\tlong requestedBits = type.tagBits & TagBits.AnnotationNullMASK;", "-\t\t\t\tlong newBits = (oldBits == TagBits.AnnotationNonNull) ? oldBits : requestedBits; // need to preserve @NonNull", "-\t\t\t\tif (this.instantiation != null && oldBits == newBits) {", "-\t\t\t\t\treturn; // no update needed", "+\t\t\t\tlong variableBits = variable.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\tlong allBits = type.tagBits | variableBits;", "+\t\t\t\tif (this.instantiation != null)", "+\t\t\t\t\tallBits |= this.instantiation.tagBits;", "+\t\t\t\tallBits &= TagBits.AnnotationNullMASK;", "+\t\t\t\tif (allBits == TagBits.AnnotationNullMASK) { // contradiction", "+\t\t\t\t\tallBits = variableBits;", "-\t\t\t\tif (requestedBits != newBits) {", "-\t\t\t\t\t// adjust 'type' to fit the newBits", "-\t\t\t\t\tAnnotationBinding[] annot = environment.nullAnnotationsFromTagBits(newBits);", "+\t\t\t\tif (allBits != (type.tagBits & TagBits.AnnotationNullMASK)) {", "+\t\t\t\t\tAnnotationBinding[] annot = environment.nullAnnotationsFromTagBits(allBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a1e458568d9db5b5c26cf71cffd1df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "e963839bb05bb99a55cdc5d5481f68a4f85ef528", "commitAfterChange": "9bbf6f5c6011b94aa504d5f2bba9aecfb52bdb59", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public long getAnnotationTagBits()", "signatureAfterChange": " public final boolean isViewedAsDeprecated()", "diff": ["- */", "-public long getAnnotationTagBits() {", "-\tif ((this.tagBits & TagBits.AnnotationResolved) != 0)", "-\t\treturn this.tagBits;", "-", "-\tthis.tagBits |= (TagBits.AnnotationResolved | TagBits.DeprecatedAnnotationResolved);", "-\tif (this.compoundName == CharOperation.NO_CHAR_CHAR)", "-\t\treturn this.tagBits;", "-", "-\tReferenceBinding packageInfo = this.getType(TypeConstants.PACKAGE_INFO_NAME);", "-\tif (packageInfo != null)", "-\t\tthis.tagBits |= (packageInfo.getAnnotationTagBits() & TagBits.AllStandardAnnotationsMask);", "-\treturn this.tagBits;", "+public final boolean isViewedAsDeprecated() {", "+\tif ((this.tagBits & TagBits.DeprecatedAnnotationResolved) == 0) {", "+\t\tthis.tagBits |= TagBits.DeprecatedAnnotationResolved;", "+\t\tif (this.compoundName != CharOperation.NO_CHAR_CHAR) {", "+\t\t\tReferenceBinding packageInfo = this.getType(TypeConstants.PACKAGE_INFO_NAME);", "+\t\t\tif (packageInfo != null) {", "+\t\t\t\tpackageInfo.initializeDeprecatedAnnotationTagBits();", "+\t\t\t\tthis.tagBits |= packageInfo.tagBits & TagBits.AllStandardAnnotationsMask;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn (this.tagBits & TagBits.AnnotationDeprecated) != 0;"]}], "num": 68310}