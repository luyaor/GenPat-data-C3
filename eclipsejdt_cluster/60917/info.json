{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ff42da4cb160918c3093531c4245ec2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae1acf9f158ba99efc4d08d99f8a1c2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "58f6afc12cba62ef8d27c501894e3dd000ed5c7a", "commitAfterChange": "c077066d38e166a56e4eb4a0d6b6c8b7125fd6f2", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void test0230() throws JavaModelException", "signatureAfterChange": " \tpublic void test0230() throws JavaModelException", "diff": ["-\t\t\t// initially, this test expected \"000\", but after https://bugs.eclipse.org/186342", "-\t\t\t// annotations are resolved more eagerly, which makes the annotations on Test2 show up,", "-\t\t\t// which is actually the right outcome.", "-\t\t\tassertEquals(\"Wrong number of annotations\", \"020\", String.valueOf(buffer));", "+\t\t\t// the right outcome would be \"020\", but depending on the strategy when exactly", "+\t\t\t// annotations are resolved the annotations on Test2 are (not) present when", "+\t\t\t// traversing the super-class chain.", "+\t\t\t// The patch in https://bugs.eclipse.org/186342#c196 produced \"020\" but", "+\t\t\t// the previous behavior (\"000\") was restored in https://bugs.eclipse.org/365387", "+\t\t\t// (see the change in SourceTypeBinding.resolveTypesFor(..))", "+\t\t\tassertEquals(\"Wrong number of annotations\", \"000\", String.valueOf(buffer));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0de9906fa045058c55b087b6c007f13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15JLS4Test.java", "commitBeforeChange": "58f6afc12cba62ef8d27c501894e3dd000ed5c7a", "commitAfterChange": "c077066d38e166a56e4eb4a0d6b6c8b7125fd6f2", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void test0230() throws JavaModelException", "signatureAfterChange": " \tpublic void test0230() throws JavaModelException", "diff": ["-\t\t\t// initially, this test expected \"000\", but after https://bugs.eclipse.org/186342", "-\t\t\t// annotations are resolved more eagerly, which makes the annotations on Test2 show up,", "-\t\t\t// which is actually the right outcome.", "-\t\t\tassertEquals(\"Wrong number of annotations\", \"020\", String.valueOf(buffer));", "+\t\t\t// the right outcome would be \"020\", but depending on the strategy when exactly", "+\t\t\t// annotations are resolved the annotations on Test2 are (not) present when", "+\t\t\t// traversing the super-class chain.", "+\t\t\t// The patch in https://bugs.eclipse.org/186342#c196 produced \"020\" but", "+\t\t\t// the previous behavior (\"000\") was restored in https://bugs.eclipse.org/365387", "+\t\t\t// (see the change in SourceTypeBinding.resolveTypesFor(..))", "+\t\t\tassertEquals(\"Wrong number of annotations\", \"000\", String.valueOf(buffer));"]}], "num": 60917}