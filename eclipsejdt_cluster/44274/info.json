{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9c18179ff639b83ecf52a27d2af3070", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a242f8d9ef1c2b52e98dbee9dfa7a1ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "8b559ddce6982a78fabc126c4d719f68c189bfdb", "commitAfterChange": "99f1f2030748a78aa47d20289420461bb423e8b1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r public boolean hasStructuralChanges(byte[] newBytes)", "signatureAfterChange": "\r \r private boolean hasStructuralFieldChanges(FieldInfo currentFieldInfo, FieldInfo otherFieldInfo)", "diff": ["-\t\t\treturn true;\r", "-\t\tif (otherFieldInfosLength != 0) {\r", "-//\t\t\tArrays.sort(this.fields);\r", "-//\t\t\tArrays.sort(otherFieldInfos);\r", "-\t\t\tfor (int i = 0; i < otherFieldInfosLength; i++) {\r", "-\t\t\t\tFieldInfo currentFieldInfo = this.fields[i];\r", "-\t\t\t\tFieldInfo otherFieldInfo = otherFieldInfos[i];\r", "-\t\t\t\tif (currentFieldInfo.getModifiers() != otherFieldInfo.getModifiers()) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!CharOperation.equals(currentFieldInfo.getName(), otherFieldInfo.getName())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!CharOperation.equals(currentFieldInfo.getTypeName(), otherFieldInfo.getTypeName())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (currentFieldInfo.hasConstant()) {\r", "-\t\t\t\t\tif (!otherFieldInfo.hasConstant()) {\r", "-\t\t\t\t\tConstant currentConstant = currentFieldInfo.getConstant();\r", "-\t\t\t\t\tConstant otherConstant = otherFieldInfo.getConstant();\r", "-\t\t\t\t\tif (!currentConstant.getClass().equals(otherConstant.getClass())) {\r", "-\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t} \r", "-\t\t\t\t\tswitch (currentConstant.typeID()) {\r", "-\t\t\t\t\t\t\tcase TypeIds.T_int : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_int) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.intValue() != currentConstant.intValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_byte :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_byte) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.byteValue() != currentConstant.byteValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_short : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_short) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.shortValue() != currentConstant.shortValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_char : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_char) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.charValue() != currentConstant.charValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_float :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_float) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.floatValue() != currentConstant.floatValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_double :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_double) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.doubleValue() != currentConstant.doubleValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_boolean : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_boolean) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.booleanValue() != currentConstant.booleanValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_String : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_String) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.stringValue() != currentConstant.stringValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_null :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_null) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant != NullConstant.Default) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else if (otherFieldInfo.hasConstant()) {\r", "-\t\t\treturn true;\r", "-\t\tif (otherMethodInfosLength != 0) {\r", "-//\t\t\tArrays.sort(this.methods);\r", "-//\t\t\tArrays.sort(otherMethodInfos);\r", "-\t\t\tfor (int i = 0; i < otherMethodInfosLength; i++) {\r", "-\t\t\t\tif (otherMethodInfo.getModifiers() != currentMethodInfo.getModifiers()) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\t\t\t\t\r", "-\t\t\t\tif (!CharOperation.equals(otherMethodInfo.getSelector(), currentMethodInfo.getSelector())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!CharOperation.equals(otherMethodInfo.getMethodDescriptor(), currentMethodInfo.getMethodDescriptor())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tchar[][] otherThrownExceptions = otherMethodInfo.getExceptionTypeNames();\r", "-\t\t\t\tint otherThrownExceptionsLength = otherThrownExceptions == null ? 0 : otherThrownExceptions.length;\r", "-\t\t\t\tchar[][] currentThrownExceptions = currentMethodInfo.getExceptionTypeNames();\r", "-\t\t\t\tint currentThrownExceptionsLength = currentThrownExceptions == null ? 0 : currentThrownExceptions.length;\r", "-\t\t\t\tif (currentThrownExceptionsLength != otherThrownExceptionsLength) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (currentThrownExceptionsLength != 0) {\r", "-\t\t\t\t\tfor (int k = 0; k < currentThrownExceptionsLength; k++) {\r", "-\t\t\t\t\t\tif (!CharOperation.equals(currentThrownExceptions[k], otherThrownExceptions[k])) {\r", "+\r", "+private boolean hasStructuralFieldChanges(FieldInfo currentFieldInfo, FieldInfo otherFieldInfo) {\r", "+\r", "+\tif (currentFieldInfo.getModifiers() != otherFieldInfo.getModifiers()) {\r", "+\t\treturn true;\r", "+\t}\r", "+\tif (!CharOperation.equals(currentFieldInfo.getName(), otherFieldInfo.getName())) {\r", "+\t\treturn true;\r", "+\t}\r", "+\tif (!CharOperation.equals(currentFieldInfo.getTypeName(), otherFieldInfo.getTypeName())) {\r", "+\t\treturn true;\r", "+\t}\r", "+\tif (currentFieldInfo.hasConstant()) {\r", "+\t\tif (!otherFieldInfo.hasConstant()) {\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t\tConstant currentConstant = currentFieldInfo.getConstant();\r", "+\t\tConstant otherConstant = otherFieldInfo.getConstant();\r", "+\t\tif (!currentConstant.getClass().equals(otherConstant.getClass())) {\r", "+\t\t\treturn true;\r", "+\t\t} \r", "+\t\tswitch (currentConstant.typeID()) {\r", "+\t\t\t\tcase TypeIds.T_int : \r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_int) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.intValue() != currentConstant.intValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_byte :\r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_byte) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.byteValue() != currentConstant.byteValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_short : \r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_short) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.shortValue() != currentConstant.shortValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_char : \r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_char) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.charValue() != currentConstant.charValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_float :\r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_float) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.floatValue() != currentConstant.floatValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_double :\r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_double) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.doubleValue() != currentConstant.doubleValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_boolean : \r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_boolean) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.booleanValue() != currentConstant.booleanValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_String : \r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_String) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant.stringValue() != currentConstant.stringValue()) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase TypeIds.T_null :\r", "+\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_null) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tif (otherConstant != NullConstant.Default) {\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t}\r", "+\t} else if (otherFieldInfo.hasConstant()) {\r", "+\t\treturn true;\r", "+\t}\r", "+\treturn false;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed108bcd5674091eabff2ed488cf8344", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "8b559ddce6982a78fabc126c4d719f68c189bfdb", "commitAfterChange": "99f1f2030748a78aa47d20289420461bb423e8b1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r public boolean hasStructuralChanges(byte[] newBytes)", "signatureAfterChange": "\r public boolean hasStructuralChanges(byte[] newBytes)", "diff": ["+\treturn hasStructuralChanges(newBytes, false, false);\r", "+}\r", "-\t\t\treturn true;\r", "-\t\tif (otherFieldInfosLength != 0) {\r", "-//\t\t\tArrays.sort(this.fields);\r", "-//\t\t\tArrays.sort(otherFieldInfos);\r", "-\t\t\tfor (int i = 0; i < otherFieldInfosLength; i++) {\r", "-\t\t\t\tFieldInfo currentFieldInfo = this.fields[i];\r", "-\t\t\t\tFieldInfo otherFieldInfo = otherFieldInfos[i];\r", "-\t\t\t\tif (currentFieldInfo.getModifiers() != otherFieldInfo.getModifiers()) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!CharOperation.equals(currentFieldInfo.getName(), otherFieldInfo.getName())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!CharOperation.equals(currentFieldInfo.getTypeName(), otherFieldInfo.getTypeName())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (currentFieldInfo.hasConstant()) {\r", "-\t\t\t\t\tif (!otherFieldInfo.hasConstant()) {\r", "-\t\t\t\t\tConstant currentConstant = currentFieldInfo.getConstant();\r", "-\t\t\t\t\tConstant otherConstant = otherFieldInfo.getConstant();\r", "-\t\t\t\t\tif (!currentConstant.getClass().equals(otherConstant.getClass())) {\r", "-\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t} \r", "-\t\t\t\t\tswitch (currentConstant.typeID()) {\r", "-\t\t\t\t\t\t\tcase TypeIds.T_int : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_int) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.intValue() != currentConstant.intValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_byte :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_byte) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.byteValue() != currentConstant.byteValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_short : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_short) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.shortValue() != currentConstant.shortValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_char : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_char) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.charValue() != currentConstant.charValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_float :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_float) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.floatValue() != currentConstant.floatValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_double :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_double) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.doubleValue() != currentConstant.doubleValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_boolean : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_boolean) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.booleanValue() != currentConstant.booleanValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_String : \r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_String) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant.stringValue() != currentConstant.stringValue()) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase TypeIds.T_null :\r", "-\t\t\t\t\t\t\t\tif (otherConstant.typeID() != TypeIds.T_null) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tif (otherConstant != NullConstant.Default) {\r", "-\t\t\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else if (otherFieldInfo.hasConstant()) {\r", "-\t\t\treturn true;\r", "-\t\tif (otherMethodInfosLength != 0) {\r", "-//\t\t\tArrays.sort(this.methods);\r", "-//\t\t\tArrays.sort(otherMethodInfos);\r", "-\t\t\tfor (int i = 0; i < otherMethodInfosLength; i++) {\r", "-\t\t\t\tif (otherMethodInfo.getModifiers() != currentMethodInfo.getModifiers()) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\t\t\t\t\r", "-\t\t\t\tif (!CharOperation.equals(otherMethodInfo.getSelector(), currentMethodInfo.getSelector())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!CharOperation.equals(otherMethodInfo.getMethodDescriptor(), currentMethodInfo.getMethodDescriptor())) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tchar[][] otherThrownExceptions = otherMethodInfo.getExceptionTypeNames();\r", "-\t\t\t\tint otherThrownExceptionsLength = otherThrownExceptions == null ? 0 : otherThrownExceptions.length;\r", "-\t\t\t\tchar[][] currentThrownExceptions = currentMethodInfo.getExceptionTypeNames();\r", "-\t\t\t\tint currentThrownExceptionsLength = currentThrownExceptions == null ? 0 : currentThrownExceptions.length;\r", "-\t\t\t\tif (currentThrownExceptionsLength != otherThrownExceptionsLength) {\r", "-\t\t\t\t\treturn true;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (currentThrownExceptionsLength != 0) {\r", "-\t\t\t\t\tfor (int k = 0; k < currentThrownExceptionsLength; k++) {\r", "-\t\t\t\t\t\tif (!CharOperation.equals(currentThrownExceptions[k], otherThrownExceptions[k])) {\r"]}], "num": 44274}