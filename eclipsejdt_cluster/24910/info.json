{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4760b386415401ab6bbc3b77c9d18927", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bdfbabb4e7cf895b80b243823cb3e42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "b90ae111ff29246e99448511171a44d6aca74c50", "commitAfterChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build(boolean computeSubtypes)", "signatureAfterChange": "  public void build(boolean computeSubtypes)", "diff": ["-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 30);", "+\t\t\t\t\tSubMonitor.convert(this.hierarchy.progressMonitor, 30);", "-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 70);", "+\t\t\t\t\tSubMonitor.convert(this.hierarchy.progressMonitor, 70);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96582ad7216c1358c880002a8640b9b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "b90ae111ff29246e99448511171a44d6aca74c50", "commitAfterChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void build(boolean computeSubtypes)", "signatureAfterChange": " public void build(boolean computeSubtypes)", "diff": ["-\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, amountOfWorkForSubtypes);", "+\t\t\t\t\tSubMonitor.convert(this.hierarchy.progressMonitor, amountOfWorkForSubtypes);", "-\t\t\t\t\t\tnew SubProgressMonitor(this.hierarchy.progressMonitor, 100 - amountOfWorkForSubtypes);", "+\t\t\t\t\t\tSubMonitor.convert(this.hierarchy.progressMonitor, 100 - amountOfWorkForSubtypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5d3b8413c86b0dd53d9fb0396ec1af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "b90ae111ff29246e99448511171a44d6aca74c50", "commitAfterChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\tusedAstRoot= (CompilationUnit) parser.createAST(new SubProgressMonitor(monitor, 1));", "+\t\t\t\tusedAstRoot= (CompilationUnit) parser.createAST(SubMonitor.convert(monitor, 1));", "-\t\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(new SubProgressMonitor(monitor, 1));", "+\t\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(SubMonitor.convert(monitor, 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd77181262acfd79eb1a835354432faf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "b90ae111ff29246e99448511171a44d6aca74c50", "commitAfterChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tvoid findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\t\t\tmonitor==null ? null : new SubProgressMonitor(monitor, 50));", "+\t\t\t\t\t\tmonitor==null ? null : SubMonitor.convert(monitor, 50));", "-\t\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, monitor==null ? null : new SubProgressMonitor(monitor, 50));", "+\t\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, monitor==null ? null : SubMonitor.convert(monitor, 50));"]}], "num": 24910}