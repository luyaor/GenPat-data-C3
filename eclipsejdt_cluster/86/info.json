{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6d9bca585be89574fe5ff428c3fdd0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f6e75aaeb077153992737039b7c8c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Archive getArchive(File f)", "signatureAfterChange": "  \tprivate Archive getArchive(File f)", "diff": ["+\t\t\tarchive = Archive.UNKNOWN_ARCHIVE;", "-    \t\t\ttry {", "-    \t\t\t\tarchive = new Archive(f);", "-    \t\t\t} catch (ZipException e) {", "-    \t\t\t\t// ignore", "-    \t\t\t} catch (IOException e) {", "-    \t\t\t\t// ignore", "-    \t\t\t}", "-    \t\t\tif (archive != null) {", "-    \t\t\t\tthis.archivesCache.put(f, archive);", "-    \t\t\t} else {", "-    \t\t\t\tthis.archivesCache.put(f, Archive.UNKNOWN_ARCHIVE);", "-    \t\t\t}", "-\t\t\t} else {", "-\t\t\t\tthis.archivesCache.put(f, Archive.UNKNOWN_ARCHIVE);", "+\t\t\t\ttry {", "+\t\t\t\t\tarchive = new Archive(f);", "+\t\t\t\t} catch (ZipException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t\tif (archive != null) {", "+\t\t\t\t\tthis.archivesCache.put(f, archive);", "+\t\t\t\t}", "+\t\t\tthis.archivesCache.put(f, archive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72372365032ac074b06cc67b690a94ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Archive getArchive(File f)", "signatureAfterChange": "  \tprivate Archive getArchive(File f)", "diff": ["+\t\t\tarchive = Archive.UNKNOWN_ARCHIVE;", "-    \t\t\ttry {", "-    \t\t\t\tarchive = new Archive(f);", "-    \t\t\t} catch (ZipException e) {", "-    \t\t\t\t// ignore", "-    \t\t\t} catch (IOException e) {", "-    \t\t\t\t// ignore", "-    \t\t\t}", "-    \t\t\tif (archive != null) {", "-    \t\t\t\tthis.archivesCache.put(f, archive);", "-    \t\t\t} else {", "-    \t\t\t\tthis.archivesCache.put(f, Archive.UNKNOWN_ARCHIVE);", "-    \t\t\t}", "-\t\t\t} else {", "-\t\t\t\tthis.archivesCache.put(f, Archive.UNKNOWN_ARCHIVE);", "+\t\t\t\ttry {", "+\t\t\t\t\tarchive = new Archive(f);", "+\t\t\t\t} catch (ZipException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t\tif (archive != null) {", "+\t\t\t\t\tthis.archivesCache.put(f, archive);", "+\t\t\t\t}", "+\t\t\tthis.archivesCache.put(f, archive);"]}], "num": 86}