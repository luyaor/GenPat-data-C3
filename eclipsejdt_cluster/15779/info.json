{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "954dd250d70764b45e702c5f2d03e61e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b51eacd2d9a5512cd73a046e447070c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "signatureAfterChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "diff": ["-\t\t\tIPackageFragment newFrag = root.getPackageFragment(newFragName);", "+\t\t\tPackageFragment newFrag = root.getPackageFragment(newFragName);", "-\t\t\tboolean shouldMoveFolder = isMove() && !newFrag.getResource().exists(); // if new pkg fragment exists, it is an override", "-\t\t\tIFolder srcFolder = (IFolder)source.getResource();", "+\t\t\tboolean shouldMoveFolder = isMove() && !newFrag.resource().exists(); // if new pkg fragment exists, it is an override", "+\t\t\tIFolder srcFolder = (IFolder)source.resource();", "-\t\t\tboolean containsReadOnlySubPackageFragments = createNeededPackageFragments((IContainer) source.getParent().getResource(), root, newFragName, shouldMoveFolder);", "+\t\t\tboolean containsReadOnlySubPackageFragments = createNeededPackageFragments((IContainer) source.parent.resource(), root, newFragName, shouldMoveFolder);", "-\t\t\t\tupdateReadOnlyPackageFragmentsForMove((IContainer) source.getParent().getResource(), root, newFragName, sourceIsReadOnly);", "+\t\t\t\tupdateReadOnlyPackageFragmentsForMove((IContainer) source.parent.resource(), root, newFragName, sourceIsReadOnly);", "-\t\t\t\t\t\trootResource = newFrag.getResource();", "+\t\t\t\t\t\trootResource = newFrag.resource();", "-\t\t\t\t\t\trootResource =  source.getParent().getResource();", "+\t\t\t\t\t\trootResource =  source.parent.resource();", "-\t\t\t\tupdateReadOnlyPackageFragmentsForCopy((IContainer) source.getParent().getResource(), root, newFragName);", "+\t\t\t\tupdateReadOnlyPackageFragmentsForCopy((IContainer) source.parent.resource(), root, newFragName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f53c600fe9cd7a0507d41ae6f40baa2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void processPackageFragmentResource(IPackageFragment source, IPackageFragmentRoot root, String newName) throws JavaModelException", "signatureAfterChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "diff": ["-\tprivate void processPackageFragmentResource(IPackageFragment source, IPackageFragmentRoot root, String newName) throws JavaModelException {", "+\tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException {", "-\t\t\tString newFragName = (newName == null) ? source.getElementName() : newName;", "+\t\t\tString[] newFragName = (newName == null) ? source.names : Util.getTrimmedSimpleNames(newName);", "-\t\t\tif (!newFrag.getElementName().equals(source.getElementName())) { // if package has been renamed, update the compilation units", "-\t\t\t\tchar[][] inclusionPatterns = ((PackageFragmentRoot)root).fullInclusionPatternChars();", "-\t\t\t\tchar[][] exclusionPatterns = ((PackageFragmentRoot)root).fullExclusionPatternChars();", "+\t\t\tif (!Util.equalArraysOrNull(newFragName, source.names)) { // if package has been renamed, update the compilation units", "+\t\t\t\tchar[][] inclusionPatterns = root.fullInclusionPatternChars();", "+\t\t\t\tchar[][] exclusionPatterns = root.fullExclusionPatternChars();"]}], "num": 15779}