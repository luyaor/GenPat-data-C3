{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f6934d034963a1f904ff1c19fd04edb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023ffba7e6f9cedacbe2f7731146cbd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugs18Tests.java", "commitBeforeChange": "bb7b9521196186c5be108c1f350a453c12233137", "commitAfterChange": "871cac4ba4cecfc6322ce0af5777177652a514a9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testBug434821() throws Exception", "signatureAfterChange": " public void testBug434821() throws Exception", "diff": ["-\t\t\t\"\t\t} ).start();\\n\"+", "+\t\t\t\"\t\t}).start();\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079bc4677e7c9d6b9f3a36657321633f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void testCommentNls3()", "signatureAfterChange": "  \tpublic void testCommentNls3()", "diff": ["-\t\tassertEquals(\"//$NON-NLS-1\", testFormat(\"//$NON-NLS-1\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertEquals(\"// $NON-NLS-1\", testFormat(\"//$NON-NLS-1\")); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c90fc9aff8e4d87fc5bbc4edf37a2f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "fa568df637cfba49109de9a23ecbf57eda89325f", "commitAfterChange": "699f85df0061a8b41250aa99562a0fc140375ee5", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void test402081() throws JavaModelException", "signatureAfterChange": " public void test402081() throws JavaModelException", "diff": ["-\tassertResults(\"longMethodName[METHOD_IMPORT]{longMethodName, LX;, (Ljava.lang.String;)Ljava.lang.String;, null, null, longMethodName, (x), [183, 187], 35}\", requestor.getResults());", "+\tassertResults(\"longMethodName[METHOD_NAME_REFERENCE]{longMethodName, LX;, (Ljava.lang.String;)Ljava.lang.String;, null, null, longMethodName, (x), [183, 187], 35}\", requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177b3ce8fa65987f63a4a6f641356cd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "a4e58088a1010e10b50ef0d8683567f65215eac1", "commitAfterChange": "e58a2ebf19f99fca487e8ddd26a3dd844cc59501", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r \tpublic void testBinary07()", "signatureAfterChange": "\r \tpublic void testBinary07()", "diff": ["-\t\t\t\t\"Null constraint mismatch: The type \\'@NonNull Object\\' is not a valid substitute for the type parameter \\'@Nullable V extends @Nullable Object\\'\\n\" + \r", "+\t\t\t\t\"Null constraint mismatch: The type \\'@NonNull Object\\' is not a valid substitute for the type parameter \\'V extends @Nullable Object\\'\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c04cdafc64fc9a7c359fe0d628ee383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "fa568df637cfba49109de9a23ecbf57eda89325f", "commitAfterChange": "699f85df0061a8b41250aa99562a0fc140375ee5", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void test402081c() throws JavaModelException", "signatureAfterChange": " public void test402081c() throws JavaModelException", "diff": ["-\t\t\t\"longMethodName[METHOD_IMPORT]{longMethodName, Ltest.Y;, (Ljava.lang.String;)Ljava.lang.String;, longMethodName, (x), 35}\",", "+\t\t\t\"longMethodName[METHOD_NAME_REFERENCE]{longMethodName, Ltest.Y;, (Ljava.lang.String;)Ljava.lang.String;, longMethodName, (x), 35}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392729dc1c85c52ad7261d8a4d71d443", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodHandleTest.java", "commitBeforeChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "commitAfterChange": "dc6be4d1880713315c6901a8e8e763dd417a08df", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t\t\t\t\"\t\t\t\thandle.invokeGeneric(null);\\n\" + ", "+\t\t\t\t\"\t\t\t\thandle.invoke(null);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bdf18bab32d2cd40ffbaaf0a1d28b25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodHandleTest.java", "commitBeforeChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "commitAfterChange": "dc6be4d1880713315c6901a8e8e763dd417a08df", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test005()", "signatureAfterChange": " \tpublic void test005()", "diff": ["-\t\t\t\t\"\t\t\t\tObject o = handle.invokeGeneric(new Object());\\n\" + ", "+\t\t\t\t\"\t\t\t\tObject o = handle.invoke(new Object());\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1a180db218a408453396214670df34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "6e5ceb8786f5ada5e37df504e04cd8d390bc4075", "commitAfterChange": "27e2724327c75ddbe7646447a4af212947b149ed", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.discouragedInvocationArgumentNotCastable\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.discouragedInvocationAcceptCastableArgument\\\" value=\\\"disabled\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527cf8b6297902f77375799bfaee6ae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodHandleTest.java", "commitBeforeChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "commitAfterChange": "dc6be4d1880713315c6901a8e8e763dd417a08df", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test003()", "signatureAfterChange": " \tpublic void test003()", "diff": ["-\t\t\t\t\"\t\t\t\thandle.invokeGeneric(null);\\n\" + ", "+\t\t\t\t\"\t\t\t\thandle.invoke(null);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d2f3929204008cb9fb207a511c642a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodHandleTest.java", "commitBeforeChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "commitAfterChange": "dc6be4d1880713315c6901a8e8e763dd417a08df", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["-\t\t\t\t\"\t\tObject o = mh.invokeGeneric(new X(), (Object)\\\"foo:\\\", i);\\n\" +", "+\t\t\t\t\"\t\tObject o = mh.invoke(new X(), (Object)\\\"foo:\\\", i);\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fcd047dab5e2f237404d089d3f03149", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void testCommentNls4()", "signatureAfterChange": "  \tpublic void testCommentNls4()", "diff": ["-\t\tassertEquals(\"//$NON-NLS-4\", testFormat(\"//$NON-NLS-4\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertEquals(\"// $NON-NLS-4\", testFormat(\"//$NON-NLS-4\")); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621377d1d4158996235b9bda3ca750db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void testCommentNls5()", "signatureAfterChange": "  \tpublic void testCommentNls5()", "diff": ["-\t\tassertEquals(\"//$NON-NLS-15$\", testFormat(\"//$NON-NLS-15$\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertEquals(\"// $NON-NLS-15$\", testFormat(\"//$NON-NLS-15$\")); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70974d5007d8bbb033ad26f4ed84da4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "fa568df637cfba49109de9a23ecbf57eda89325f", "commitAfterChange": "699f85df0061a8b41250aa99562a0fc140375ee5", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void test402081d() throws JavaModelException", "signatureAfterChange": " public void test402081d() throws JavaModelException", "diff": ["-\t\t\t\"longMethodName[METHOD_IMPORT]{longMethodName, Ltest.Y;, (Ljava.lang.String;)Ljava.lang.String;, longMethodName, (x), 35}\",", "+\t\t\t\"longMethodName[METHOD_NAME_REFERENCE]{longMethodName, Ltest.Y;, (Ljava.lang.String;)Ljava.lang.String;, longMethodName, (x), 35}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d1f72009f95a82313881e69bc83fa60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "6a618f5105b380b0a9a5dc6bfffb855693be7fab", "commitAfterChange": "93613529f4763965d02155d2aaa1cabf71be7897", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void testBug215759b() throws CoreException", "signatureAfterChange": "  public void testBug215759b() throws CoreException", "diff": ["-\t\t\t\"1:SIMPLE_NAME,[66,6],,,[VARIABLE,Lp/X;.foo(Ljava/lang/String;)Ljava/lang/String;#string,]\\n\" +", "+\t\t\t\"1:SIMPLE_NAME,[66,6],,,[VARIABLE,Lp/X;.foo(Ljava/lang/String;)Ljava/lang/String;#string#0#0,]\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "995dbd3b5a768a6a8262c09bfddc8780", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void testAddImports6() throws Exception", "signatureAfterChange": " \tpublic void testAddImports6() throws Exception", "diff": ["+\t\t// With on-demand threshold set to 1, java.util.Map.Entry is reduced to java.util.Map.*.", "-\t\t\t\t\"import java.util.Map.Entry;\\n\" + ", "+\t\t\t\t\"import java.util.Map.*;\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7c7b6cafb3702cf59ad77d4ffc5e2be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBugsTest.java", "commitBeforeChange": "6a618f5105b380b0a9a5dc6bfffb855693be7fab", "commitAfterChange": "93613529f4763965d02155d2aaa1cabf71be7897", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testBug215759a() throws CoreException", "signatureAfterChange": " public void testBug215759a() throws CoreException", "diff": ["-\t\t\t\"1:SIMPLE_NAME,[66,6],,,[VARIABLE,Lp/X;.foo(Ljava/lang/String;)Ljava/lang/String;#string,]\\n\" +", "+\t\t\t\"1:SIMPLE_NAME,[66,6],,,[VARIABLE,Lp/X;.foo(Ljava/lang/String;)Ljava/lang/String;#string#0#0,]\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb74dcf912cda9b0fb6109c8a8ac6b35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "a4e58088a1010e10b50ef0d8683567f65215eac1", "commitAfterChange": "e58a2ebf19f99fca487e8ddd26a3dd844cc59501", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": "\r public void testBug448777()", "signatureAfterChange": "\r public void testBug448777()", "diff": ["-\t\t\"Contradictory null annotations: method was inferred as \\'@NonNull @Nullable String a(@NonNull @Nullable String)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + \r", "+\t\t\"Contradictory null annotations: method was inferred as \\'@Nullable @NonNull String a(@Nullable @NonNull String)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5df7a83b8d48512ada2641b6cf5178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodHandleTest.java", "commitBeforeChange": "51213023943da7653dfbcc6859baaa171fa1aac9", "commitAfterChange": "dc6be4d1880713315c6901a8e8e763dd417a08df", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test004()", "signatureAfterChange": " \tpublic void test004()", "diff": ["-\t\t\t\t\"\t\t\t\thandle.invokeGeneric(new Object());\\n\" + ", "+\t\t\t\t\"\t\t\t\thandle.invoke(new Object());\\n\" + "]}], "num": 55685}