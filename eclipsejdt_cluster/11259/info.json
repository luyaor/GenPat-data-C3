{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ade7e2dcec7187024637994d3c645fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a750a00f726b3910242016658edc387", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4136248cb1581d6af7c774a979b9c48c11440c8d", "commitAfterChange": "442dd8a935e1c62f80c182f45106d33d72b0162e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "signatureAfterChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "diff": ["+\t\tAstNode[] mergedNodes = computeMergedMemberDeclarations(nodes);", "-\t\t\t\tfor (int i = startIndex, max = nodes.length; i < max; i++) {", "-\t\t\t\t\tAstNode member = nodes[i];", "+\t\t\t\tfor (int i = startIndex, max = mergedNodes.length; i < max; i++) {", "+\t\t\t\t\tAstNode member = mergedNodes[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ac92593e8be42be8c33f10df3add01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "diff": ["-\tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "+\tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "-\t\tfinal int len = _filesToProcess.length;", "+\t\tfinal IFile[] files = processorEnv.getFiles();", "+\t\tfinal int len = files.length;", "-\t\t\treturn _filesToProcess[0].getName();", "+\t\t\treturn files[0].getName();", "-\t\t\tfor (IFile file : _filesToProcess) {", "+\t\t\tfor (IFile file : files) {"]}], "num": 11259}