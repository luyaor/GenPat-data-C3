{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40b3c0394b311780cb481f6b08efd6b8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51afca06f1aba1a2e1dd3d8db617fe5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test001()", "signatureAfterChange": " protected void runNegativeReferenceTest(String[] testFiles, String expected)", "diff": ["-public void test001() { ", "-\tMap customOptions = getCompilerOptions();", "-\tcustomOptions.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.ERROR);", "-\tthis.runNegativeTest(", "-\t\t\t\"X.java\",", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"\t\\n\" + ", "-\t\t\t\"\t{\\n\" + ", "-\t\t\t\"\t\tnew Z().foo();\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\",", "-\t\t\t\"Z.java\",", "-\t\t\t\"public class Z {\\n\" + ", "-\t\t\t\"  /** \\n\"+", "-\t\t\t\"   * \\n\"+", "-\t\t\t\"   * ** \f  ** ** ** @deprecated */\\n\" +", "-\t\t\t\"\tpublic void foo() { \\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\"\tnew Z().foo();\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The method foo() from the type Z is deprecated\\n\" + ", "-\t\t\"----------\\n\");", "+}", "+protected void runNegativeReferenceTest(String[] testFiles, String expected) {", "+\tString[] completedFiles = testFiles;", "+\tif (!useLibrary) {", "+\t\tcompletedFiles = new String[testFiles.length + referencedClasses.length];", "+\t\tSystem.arraycopy(referencedClasses, 0, completedFiles, 0, referencedClasses.length);", "+\t\tSystem.arraycopy(testFiles, 0, completedFiles, referencedClasses.length, testFiles.length);", "+\t}", "+\trunNegativeTest(completedFiles, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6624adefbdb8baa7b240c21b1622ec1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "090fe346c72e2854da50fe3a145f46de3d4f7de0", "commitAfterChange": "a0b059290bf7b15573bfcb14661207df6f99dd45", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void test028()", "signatureAfterChange": " public void test028()", "diff": ["-public void test028() { ", "-\tthis.runNegativeTest(", "+public void test028() {", "+\tCompilerOptions options = new CompilerOptions(getCompilerOptions());", "+\tif (options.sourceLevel < ClassFileConstants.JDK1_5) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"    A a = null;\\n\" + ", "+\t\t\t\t\"    B b = null;\\n\" + ", "+\t\t\t\t\"    boolean c = a == b;\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"interface A {\\n\" + ", "+\t\t\t\t\"  void doSomething();\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"interface B {\\n\" + ", "+\t\t\t\t\"  int doSomething();\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tboolean c = a == b;\\n\" + ", "+\t\t\t\"\t            ^^^^^^\\n\" + ", "+\t\t\t\"Incompatible operand types A and B\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t\treturn;", "+\t}", "+\tthis.runConformTest(", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tboolean c = a == b;\\n\" + ", "-\t\t\"\t            ^^^^^^\\n\" + ", "-\t\t\"Incompatible operand types A and B\\n\" + ", "-\t\t\"----------\\n\",", "-\t\tnull,", "-\t\ttrue);", "+\t\t\"\");", "+\t"]}], "num": 25883}