{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d0e8776d6148ceb6f50325020ff2e29", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e46bfcac724675d5582cf9e9444e53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c289b9a951cfd3e36c9387c73b3893fba2c0158", "commitAfterChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " boolean detectInheritedMethodClash(MethodBinding inherited, MethodBinding otherInherited)", "signatureAfterChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "diff": ["-boolean detectInheritedMethodClash(MethodBinding inherited, MethodBinding otherInherited) {", "+boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited) {", "-\tif (doTypeVariablesClash(inherited, otherInherited) || doParametersClash(inherited, otherInherited)) {", "-\t\tproblemReporter().inheritedMethodsHaveNameClash(this.type, inherited, otherInherited);", "-\t\treturn true;", "-\t}", "-\treturn false;", "+", "+\tproblemReporter().inheritedMethodsHaveNameClash(this.type, inherited, otherInherited);", "+\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c509cfd8e9da80baeeae592129352cb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "0b99e59f5b8c33dba4fea6bb15ed5a9967aeb172", "commitAfterChange": "f963317eb29ffe4dba07b023619d08ff06cca487", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t\tif (bestAbstractMethod == null) {", "-\t\t\tproblemReporter().inheritedMethodsHaveIncompatibleReturnTypes(this.type, methods, length);", "-\t\t} else if (mustImplementAbstractMethod(bestAbstractMethod.declaringClass)) {", "+\t\tboolean noMatch = bestAbstractMethod == null;", "+\t\tif (noMatch)", "+\t\t\tbestAbstractMethod = methods[0];", "+\t\tif (mustImplementAbstractMethod(bestAbstractMethod.declaringClass)) {", "+\t\t} else if (noMatch) {", "+\t\t\tproblemReporter().inheritedMethodsHaveIncompatibleReturnTypes(this.type, methods, length);"]}], "num": 13228}