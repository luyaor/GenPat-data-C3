{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f6507960288e94eeaf23e66737bfe59", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92d38625adca0372922dc09d7a382890", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 252, "signatureBeforeChange": " public void removeStackFrameFor(int pos)", "signatureAfterChange": " public void removeStackFrameFor(int pos)", "diff": ["-\tStackMapFrame frame = this.frames;", "-\twhile (frame.prevFrame != null && frame.pc >= pos) {", "-\t\tif (frame.pc == pos) {", "-\t\t\tStackMapFrame next = frame.nextFrame;", "-\t\t\tStackMapFrame prev = frame.prevFrame;", "-\t\t\tprev.nextFrame = next;", "-\t\t\tif (next != null) {", "-\t\t\t\tnext.prevFrame = prev;", "-\t\t\t}", "-\t\t\tframe.nextFrame = null;", "-\t\t\tframe.prevFrame = null;", "-\t\t\tframe = prev;", "-\t\t\twhile (frame.nextFrame != null) {", "-\t\t\t\tframe = frame.nextFrame;", "-\t\t\t}", "-\t\t\tthis.frames = frame;", "-\t\t\tthis.framesCounter--;", "-\t\t\treturn;", "-\t\t}", "-\t\tframe = frame.prevFrame;", "-\t}", "+\t// TODO (olivier) need to see how to get rid of some unnecessary frames"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad86d62d2ed602dd6131a3882b9e85b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 93, "signatureBeforeChange": " protected int getPosition()", "signatureAfterChange": " protected int getPosition()", "diff": ["-\ttry {", "-\t\tif (this.frames.pc != pos) {", "-\t\t\tStackMapFrame newFrame = (StackMapFrame) this.currentFrame.clone();", "-\t\t\tthis.frames.nextFrame = newFrame;", "-\t\t\tnewFrame.pc = pos;", "-\t\t\tnewFrame.prevFrame = this.frames;", "-\t\t\tthis.frames = newFrame;", "-\t\t\tframesCounter++;", "-\t\t} else {", "-\t\t\t// the frame already exists", "-\t\t\tthis.frames.tagBits |= StackMapFrame.USED;", "-\t\t}", "-\t} catch (CloneNotSupportedException e) {", "-\t\te.printStackTrace();", "-\t}\t\t", "+\tthis.framePositions.add(new Integer(this.position));", "+\tstoreStackMapFrame();"]}], "num": 17487}