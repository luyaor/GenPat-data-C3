{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07e572d7a7e377ee55045536b1f3f503", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0564038e01b4e1e7d8907d96c570bc83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ae9c2f31a90b47398d8d35cc3e43c6bf47ddbbd7", "commitAfterChange": "8963c675854a4d25e2dd13b9b3101b015fe978eb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\t\t\t\r \tprivate void computeExpandedClasspath(\r \t\tJavaProject initialProject, \r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError,\r \t\tHashSet visitedProjects, \r \t\tObjectVector accumulatedEntries) throws JavaModelException", "signatureAfterChange": "\t\t\t\r \tprivate void computeExpandedClasspath(\r \t\tJavaProject initialProject, \r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError,\r \t\tHashSet visitedProjects, \r \t\tObjectVector accumulatedEntries) throws JavaModelException", "diff": ["+\t\tIWorkspaceRoot workspaceRoot = this.getWorkspace().getRoot();\r", "-\t\t\t\t\tIProject projRsc = (IProject) getWorkspace().getRoot().findMember(entry.getPath());\r", "+\t\t\t\t\tIProject projRsc = (IProject) workspaceRoot.findMember(entry.getPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75391bf9ad618d399f6c9951945f9e46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "591b3befccafa73608a18aec511ef48a3ca050bb", "commitAfterChange": "6d7da1254151724e22f25d1be0ba01cba8049f5e", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 290, "signatureBeforeChange": " protected void consumeLambdaExpression()", "signatureAfterChange": " protected void consumeLambdaExpression()", "diff": ["-\tthis.nestedMethod[this.nestedType]--;", "+\tthis.nestedType--;", "-\t", "+\tpushOnExpressionStack(lexp);", "-\t\tthis.restartRecovery = true;", "+\t\tthis.lastCheckPoint = lexp.sourceEnd + 1;"]}], "num": 1940}