{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8dbd79927907c6423292264dbfdec6e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d9052bc386853988489f99fa03181e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemTypeAndMethodTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void test074()", "signatureAfterChange": " public void test074()", "diff": ["-\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "+\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" +", "-\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "+\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" +", "-\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "+\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" +", "-\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "+\t\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5 or greater\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6594150b38814203595a8167252ec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void testTypeRefGenericsTest09_TypeArgument() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericsTest09_TypeArgument() throws CoreException", "diff": ["-\t\t\"src/test09/Test.java test09.Test.x [\tX<? extends \ufffd|Exception|\ufffd> x; @49] EXACT_MATCH\\n\" +", "-\t\t\"src/test09/Test.java test09.Test.y [\tY<? extends \ufffd|Object|\ufffd, ? super String, ? extends Exception> y; @77] EXACT_MATCH\\n\" +", "-\t\t\"src/test09/Test.java test09.Test.y [\tY<? extends Object, ? super \ufffd|String|\ufffd, ? extends Exception> y; @93] EXACT_MATCH\\n\" +", "-\t\t\"src/test09/Test.java test09.Test.y [\tY<? extends Object, ? super String, ? extends \ufffd|Exception|\ufffd> y; @111] EXACT_MATCH\"", "+\t\t\"src/test09/Test.java test09.Test.x [\tX<? extends !|Exception|!> x; @49] EXACT_MATCH\\n\" +", "+\t\t\"src/test09/Test.java test09.Test.y [\tY<? extends !|Object|!, ? super String, ? extends Exception> y; @77] EXACT_MATCH\\n\" +", "+\t\t\"src/test09/Test.java test09.Test.y [\tY<? extends Object, ? super !|String|!, ? extends Exception> y; @93] EXACT_MATCH\\n\" +", "+\t\t\"src/test09/Test.java test09.Test.y [\tY<? extends Object, ? super String, ? extends !|Exception|!> y; @111] EXACT_MATCH\""]}], "num": 71698}