{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7898bfbafdf1479b99d42efb331a157e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c781ca4a69dbff045bd60c1cf5974d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5e4ea8ac03b51c08067ab35c8af60e3999ca1301", "commitAfterChange": "aaea57f144ce91db666531c49de57c996bd81422", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, MatchingNodeSet nodeSet, boolean matchedClassContainer) throws CoreException", "signatureAfterChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, MatchingNodeSet nodeSet, boolean matchedClassContainer) throws CoreException", "diff": ["-\tif (superReference instanceof ParameterizedSingleTypeReference) {", "-\t\tTypeReference[] typeArguments = ((ParameterizedSingleTypeReference)superReference).typeArguments;", "-\t\tif (typeArguments != null && typeArguments.length > 0) {", "-\t\t\tnodes = nodeSet.matchingNodes(superReference.sourceStart, typeArguments[typeArguments.length-1].sourceEnd);", "-\t\t}", "-\t} else if (superReference instanceof ParameterizedQualifiedTypeReference) {", "-\t\tTypeReference[][] typeArguments = ((ParameterizedQualifiedTypeReference)superReference).typeArguments;", "-\t\tif (typeArguments != null && typeArguments.length > 0) {", "-\t\t\tTypeReference[] lastTypeArgs = typeArguments[typeArguments.length-1];", "-\t\t\tint end = superReference.sourceEnd;", "-\t\t\tif (lastTypeArgs != null && lastTypeArgs.length > 0 && lastTypeArgs[lastTypeArgs.length-1].sourceEnd > end) {", "-\t\t\t\tend = lastTypeArgs[lastTypeArgs.length-1].sourceEnd;", "-\t\t\t}", "-\t\t\tnodes = nodeSet.matchingNodes(superReference.sourceStart, end);", "-\t\t}", "+\tif (superReference instanceof ParameterizedSingleTypeReference || superReference instanceof ParameterizedQualifiedTypeReference) {", "+\t\tlong lastTypeArgumentInfo = findLastTypeArgumentInfo(superReference);", "+\t\tnodes = nodeSet.matchingNodes(superReference.sourceStart, (int)lastTypeArgumentInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86515b6e923249cab774fc9155ff7a3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.ReferenceExpression reference)", "signatureAfterChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.ReferenceExpression reference)", "diff": ["-\t\tif (name.getStartPosition() < start) {// check for new ", "+\t\tif (name.getStartPosition() == -1 && name.getIdentifier().equals(\"<init>\")) { // check for \"new\"  //$NON-NLS-1$", "-\t\t\tif (!name.getIdentifier().equals(\"<init>\")) { //$NON-NLS-1$", "-\t\t\t\tNullLiteral nullLiteral = new NullLiteral(this.ast);", "-\t\t\t\tnullLiteral.setFlags(nullLiteral.getFlags() | ASTNode.MALFORMED);", "-\t\t\t\tresult = nullLiteral;", "-\t\t\t} else {", "-\t\t\t\tCreationReference creationReference = new CreationReference(this.ast);", "-\t\t\t\tcreationReference.setExpression(convert(lhs));", "-\t\t\t\ttypeArguments = creationReference.typeArguments();", "-\t\t\t\tresult = creationReference;", "+\t\t\tType type = null;", "+\t\t\tif (lhs instanceof TypeReference) {", "+\t\t\t\ttype = convertType((TypeReference) lhs);", "+\t\t\t} else if (lhs instanceof NameReference) {", "+\t\t\t\tName typeName = convert((NameReference) lhs);", "+\t\t\t\tSimpleType simpleType = new SimpleType(this.ast);", "+\t\t\t\tsimpleType.setName(typeName);", "+\t\t\t\tif (this.resolveBindings) {", "+\t\t\t\t\trecordNodes(simpleType, lhs);", "+\t\t\t\t}", "+\t\t\t\tsimpleType.setSourceRange(lhs.sourceStart, lhs.sourceEnd - lhs.sourceStart + 1);", "+\t\t\t\ttype = simpleType;", "+\t\t\tCreationReference creationReference = new CreationReference(this.ast);", "+\t\t\tcreationReference.setType(type);", "+\t\t\ttypeArguments = creationReference.typeArguments();", "+\t\t\tresult = creationReference;"]}], "num": 37597}