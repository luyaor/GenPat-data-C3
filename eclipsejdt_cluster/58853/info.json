{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a54325a9718aa6f46a3889043842516", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2cfb3482545084048fec87830f11e45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "9a9af4e642a47932f3bfeeec13330339dcc48de3", "commitAfterChange": "c3ad34ec44b228feb09e91ff5ac00fc774236d05", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void test051()", "signatureAfterChange": " \tpublic void test051()", "diff": ["+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=89470", "-\t\t\t\t\"import java.util.List;\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tclass C1 {\\n\" + ", "-\t\t\t\t\"\t\tInteger foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t\tString foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tclass C2 {\\n\" + ", "-\t\t\t\t\"\t\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tclass C3 {\\n\" + ", "-\t\t\t\t\"\t\tInteger foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t\t<T extends String> T foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tclass C4 {\\n\" + ", "-\t\t\t\t\"\t\tList<Integer> foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t\tList<String> foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tclass C5 {\\n\" + ", "-\t\t\t\t\"\t\tList<Integer> foo(List<Integer> o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t\tList<String> foo(List<String> o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tclass C6 {\\n\" + ", "-\t\t\t\t\"\t\t<T extends Integer> T foo(List<Integer> o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t\t<T extends String> T foo(List<String> o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tclass C7 {\\n\" + ", "-\t\t\t\t\"\t\t<T extends Integer, U> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t}\t\\n\" + ", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"//\t\tnew X().new C2().foo((List<String>) null);\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"public class X implements I {\\n\" + ", "+\t\t\t\t\"\t\t public <T extends I> void foo(T t) {}\\n\" + ", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"interface I {\\n\" + ", "+\t\t\t\t\"\t\t <T> void foo(T t);\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tInteger foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t        ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tString foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"\tInteger foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t        ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t           ^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t                     ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\"\tList<Integer> foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"9. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\t\"\tList<String> foo(Object o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t             ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"10. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\"\tList<Integer> foo(List<Integer> o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(List<Integer>) in type X.C5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"11. ERROR in X.java (at line 23)\\n\" + ", "-\t\t\t\"\tList<String> foo(List<String> o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t             ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(List<String>) in type X.C5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"12. WARNING in X.java (at line 26)\\n\" + ", "-\t\t\t\"\t<T extends Integer> T foo(List<Integer> o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"13. WARNING in X.java (at line 27)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(List<String> o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"14. WARNING in X.java (at line 30)\\n\" + ", "-\t\t\t\"\t<T extends Integer, U> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"15. WARNING in X.java (at line 31)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\");", "-\t}\t", "+\t\t\t\"1. ERROR in X.java (at line 1)\\r\\n\" + ", "+\t\t\t\"\tpublic class X implements I {\\r\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"The type X must implement the inherited abstract method I.foo(T)\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t\t// X is not abstract and does not override abstract method <T>foo(T) in I", "+\t\t);", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tvoid foo(A<String> a) {}\\n\" + ", "+\t\t\t\t\"\tObject foo(A<Integer> a) { return null; }\\n\" +", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class A<T> {}\\n\",", "+\t\t\t},", "+\t\t\t\"\"", "+\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b312c70a8f6f74826fef1bbbccd6b123", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test050b()", "signatureAfterChange": " \tpublic void test050b()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\t\t\t\"\t\t<T extends Y> T foo(Object o) {  return null; } // ok\\n\" +", "-\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" +", "+\t\t\t\t\"\t\t<T extends Y> T foo(Object o) {  return null; } // duplicate\\n\" +", "+\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\t\"class A<T> {}\" +", "-\t\t\t\t\"class Y {}\" +", "+\t\t\t\t\"class A<T> {}\\n\" +", "+\t\t\t\t\"class Y {}\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" +", "-\t\t\t\"\tZ foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in X.java (at line 11)\\n\" +", "-\t\t\t\"\tA<Y> foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 12)\\n\" +", "-\t\t\t\"\tA<Z> foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. ERROR in X.java (at line 15)\\n\" +", "-\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in X.java (at line 16)\\n\" +", "-\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tZ foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t<T extends Y> T foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tA<Y> foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tA<Z> foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" + ", "-\t\t\t// foo(java.lang.Object) is already defined in X.C1", "-\t\t\t// foo(java.lang.Object) is already defined in X.C3", "-\t\t\t// foo(java.lang.Object) is already defined in X.C4", "+/* javac 7", "+X.java:4: foo(Object) is already defined in X.C1", "+                Z foo(Object o) {  return null; } // duplicate", "+                  ^", "+X.java:8: name clash: <T#1>foo(Object) and <T#2>foo(Object) have the same erasure", "+                <T extends Z> T foo(Object o) {  return null; } // duplicate", "+                                ^", "+  where T#1,T#2 are type-variables:", "+    T#1 extends Z declared in method <T#1>foo(Object)", "+    T#2 extends Y declared in method <T#2>foo(Object)", "+X.java:12: foo(Object) is already defined in X.C3", "+                A<Z> foo(Object o) {  return null; } // duplicate", "+                     ^", "+X.java:16: foo(Object) is already defined in X.C4", "+                <T extends Z> T foo(Object o) {  return null; } // duplicate", "+                                ^", "+4 errors", "+ */"]}], "num": 58853}