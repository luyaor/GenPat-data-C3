{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e857439afaeb10a77e92e2678f92be49", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c572b72f67248a9a592d9c7acbbe4d8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected void reduceParseTree(CompilationUnitDeclaration unit, MatchingNodeSet nodeSet)", "signatureAfterChange": " protected void reduceParseTree(CompilationUnitDeclaration unit)", "diff": ["+ */", "+protected void reduceParseTree(CompilationUnitDeclaration unit) {", "+\t// remove statements from methods that have no possible matching nodes", "+\tTypeDeclaration[] types = unit.types;", "+\tfor (int i = 0, l = types.length; i < l; i++)", "+\t\tpurgeMethodStatements(types[i], true);", "+}", "- */", "-protected void reduceParseTree(CompilationUnitDeclaration unit, MatchingNodeSet nodeSet) {", "-\t// remove statements from methods that have no possible matching nodes", "-\tTypeDeclaration[] types = unit.types;", "-\tfor (int i = 0, l = types.length; i < l; i++)", "-\t\tpurgeMethodStatements(types[i], nodeSet, true);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0cfc39ddc2109b0dee2ebf8c2df217", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " private AstNode[] potentialMatchingNodes(int start, int end)", "signatureAfterChange": " public void reduceParseTree(CompilationUnitDeclaration unit)", "diff": ["- */", "-private AstNode[] potentialMatchingNodes(int start, int end) {", "-\treturn this.nodesInRange(start, end, this.potentialMatchingNodes);", "+ */", "+public void reduceParseTree(CompilationUnitDeclaration unit) {", "+\t// remove statements from methods that have no potential matching nodes", "+\tTypeDeclaration[] types = unit.types;", "+\tfor (int i = 0, l = types.length; i < l; i++) {", "+\t\tTypeDeclaration type = types[i];", "+\t\tpurgeMethodStatements(type, hasPotentialNodes(type.declarationSourceStart, type.declarationSourceEnd));", "+\t}", "+}"]}], "num": 61106}