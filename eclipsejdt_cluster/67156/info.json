{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d64473f1bb00b21363ec269e780a4e8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b4132bfcb1f628f5734c005678bfd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c83f12517cdac51319ba031385bd9a380905c315", "commitAfterChange": "3230c94014e69f2e2750889e5eaac5c1e552ded1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public final void getNextUnicodeChar() \tthrows InvalidInputException", "signatureAfterChange": " public final void getNextUnicodeChar() \tthrows InvalidInputException", "diff": ["-\t\t} else {", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t//need the unicode buffer", "+\t\tif (this.withoutUnicodePtr == 0) {", "+\t\t\t//buffer all the entries that have been left aside....", "+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "+\t\t}", "+\t\t//fill the buffer with the char", "+\t\tunicodeStoreAt(++this.withoutUnicodePtr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aecc2344a786c1771ddbb7a9ef9ef667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6bbe631c4aee5403134035d5558f68ceeb91c520", "commitAfterChange": "a387db32f06bcc44b6b47e5aa021853a1cfee33c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public final void getNextUnicodeChar() \tthrows InvalidInputException", "signatureAfterChange": " public final void getNextUnicodeChar() \tthrows InvalidInputException", "diff": ["-\t\t} else {", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t//need the unicode buffer", "+\t\tif (this.withoutUnicodePtr == 0) {", "+\t\t\t//buffer all the entries that have been left aside....", "+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "+\t\t}", "+\t\t//fill the buffer with the char", "+\t\tunicodeStoreAt(++this.withoutUnicodePtr);"]}], "num": 67156}