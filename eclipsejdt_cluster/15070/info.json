{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "942b1765ecc877ace5c559cc3b958527", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b10b3ee6165f0a92331d20a67a3c30c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "98c08ded096494364ca74f948e8f494b3f447e89", "commitAfterChange": "423cede7ef9cde15030dc54ef2266be4ddcc9112", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void _test018()", "signatureAfterChange": " public void _test018b()", "diff": ["-// TODO (maxime) enforce working directory", "-\tpublic void _test018(){", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"\tOK1 ok1;\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"OK1.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class OK1 {\\n\" +", "-\t\t\t\t\t\"\t// empty\\n\" +", "-\t\t\t\t\t\"}\"", "-\t\t\t},", "-\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"X.java\\\"\"", "-\t        + \" -1.5 -g -preserveAllLocals\"", "-\t        + \" -verbose -proceedOnError -referenceInfo\"", "-\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "-\t        \"[2 .class files generated]\\n\",", "-\t        \"\",", "-\t        true);", "+// empty sourcepath works with javac but not with ecj", "+public void _test018b(){", "+\tString currentWorkingDirectoryPath = System.getProperty(\"user.dir\");", "+\tif (currentWorkingDirectoryPath == null) {", "+\t\tSystem.err.println(\"BatchCompilerTest#18b could not access the current working directory \" + currentWorkingDirectoryPath);", "+\t} else if (!new File(currentWorkingDirectoryPath).isDirectory()) {", "+\t\tSystem.err.println(\"BatchCompilerTest#18b current working directory is not a directory \" + currentWorkingDirectoryPath);", "+\t} else {", "+\t\tString xPath = currentWorkingDirectoryPath + File.separator + \"X.java\";", "+\t\tString ok1Path = currentWorkingDirectoryPath + File.separator + \"OK1.java\";", "+\t\tPrintWriter sourceFileWriter;", "+\t\ttry {", "+\t\t\tFile file = new File(xPath);", "+\t\t\tsourceFileWriter = new PrintWriter(new FileOutputStream(file));", "+\t\t\tsourceFileWriter.write(", "+\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tOK1 ok1;\\n\" +", "+\t\t\t\t\"}\");", "+\t\t\tsourceFileWriter.close();", "+\t\t\tfile = new File(ok1Path);", "+\t\t\tsourceFileWriter = new PrintWriter(new FileOutputStream(file));", "+\t\t\tsourceFileWriter.write(", "+\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\"public class OK1 {\\n\" +", "+\t\t\t\t\"\t// empty\\n\" +", "+\t\t\t\t\"}\");", "+\t\t\tsourceFileWriter.close();", "+\t\t\tthis.runTest(", "+\t\t\t\ttrue,", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"dummy.java\", // enforce output directory creation", "+\t\t\t\t\t\"\"", "+\t\t\t\t},", "+\t\t        \"X.java\"", "+\t\t        + \" -1.5 -g -preserveAllLocals\"", "+\t\t        + \" -verbose -proceedOnError\"", "+\t\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+\t\t        TWO_FILES_GENERATED_MATCHER,", "+\t\t        EMPTY_STRING_MATCHER,", "+\t\t        false);", "+\t\t} catch (FileNotFoundException e) {", "+\t\t\tSystem.err.println(\"BatchCompilerTest#18b could not write to current working directory \" + currentWorkingDirectoryPath);", "+\t\t} finally {", "+\t\t\tnew File(xPath).delete();", "+\t\t\tnew File(ok1Path).delete();", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc11bc85d7c23c32c0165088aa3f7aee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "9a29f2fad40fa1e2b0d373aaf34df3ba9377261b", "commitAfterChange": "b94b9c1bbb377f2117762ccb335e3f6e3ab0fd36", "methodNumberBeforeChange": 282, "methodNumberAfterChange": 306, "signatureBeforeChange": " public void test235_jar_ref_in_jar()", "signatureAfterChange": " public void test262_jar_ref_in_jar()", "diff": ["-// using relative paths for libs", "-public void test235_jar_ref_in_jar(){", "-\tString currentWorkingDirectoryPath = System.getProperty(\"user.dir\");", "-\tif (currentWorkingDirectoryPath == null) {", "-\t\tSystem.err.println(\"BatchCompilerTest#235 could not access the current working directory \" + currentWorkingDirectoryPath);", "-\t} else if (!new File(currentWorkingDirectoryPath).isDirectory()) {", "-\t\tSystem.err.println(\"BatchCompilerTest#235 current working directory is not a directory \" + currentWorkingDirectoryPath);", "-\t} else {", "-\t\tString lib1Path = currentWorkingDirectoryPath + File.separator + \"lib1.jar\";", "-\t\tString lib2Path = currentWorkingDirectoryPath + File.separator + \"lib2.jar\";", "-\t\ttry {", "-\t\t\tUtil.createJar(", "-\t\t\t\tnull,", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"META-INF/MANIFEST.MF\",", "-\t\t\t\t\t\"Manifest-Version: 1.0\\n\" +", "-\t\t\t\t\t\"Created-By: Eclipse JDT Test Harness\\n\" +", "-\t\t\t\t\t\"Class-Path: lib2.jar\\n\",", "-\t\t\t\t},", "-\t\t\t\tlib1Path,", "-\t\t\t\tJavaCore.VERSION_1_4);", "-\t\t\tUtil.createJar(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"p/A.java\",", "-\t\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\t\"public class A {\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t\t},", "-\t\t\t\tnull,", "-\t\t\t\tlib2Path,", "-\t\t\t\tJavaCore.VERSION_1_4);", "-\t\t\tthis.runConformTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"src/p/X.java\",", "-\t\t\t\t\t\"package p;\\n\" +", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"  A a;\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t\t},", "-\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src/p/X.java\\\"\"", "-\t\t\t\t+ \" -cp lib1.jar\" // relative", "-\t\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src\\\"\"", "-\t\t        + \" -1.5 -g -preserveAllLocals\"", "-\t\t        + \" -proceedOnError -referenceInfo\"", "-\t\t        + \" -d \\\"\" + OUTPUT_DIR + File.separator + \"bin\\\" \",", "-\t\t        \"\",", "-\t\t        \"\",", "-\t\t        true);", "-\t\t} catch (IOException e) {", "-\t\t\tSystem.err.println(\"BatchCompilerTest#235 could not write to current working directory \" + currentWorkingDirectoryPath);", "-\t\t} finally {", "-\t\t\tnew File(lib1Path).delete();", "-\t\t\tnew File(lib2Path).delete();", "-\t\t}", "-\t}", "-}", "+// using relative paths for libs", "+public void test262_jar_ref_in_jar(){", "+\tString currentWorkingDirectoryPath = System.getProperty(\"user.dir\");", "+\tif (currentWorkingDirectoryPath == null) {", "+\t\tSystem.err.println(\"BatchCompilerTest#235 could not access the current working directory \" + currentWorkingDirectoryPath);", "+\t} else if (!new File(currentWorkingDirectoryPath).isDirectory()) {", "+\t\tSystem.err.println(\"BatchCompilerTest#235 current working directory is not a directory \" + currentWorkingDirectoryPath);", "+\t} else {", "+\t\tString lib1Path = currentWorkingDirectoryPath + File.separator + \"lib1.jar\";", "+\t\tString lib2Path = currentWorkingDirectoryPath + File.separator + \"lib2.jar\";", "+\t\ttry {", "+\t\t\tUtil.createJar(", "+\t\t\t\tnull,", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"META-INF/MANIFEST.MF\",", "+\t\t\t\t\t\"Manifest-Version: 1.0\\n\" +", "+\t\t\t\t\t\"Created-By: Eclipse JDT Test Harness\\n\" +", "+\t\t\t\t\t\"Class-Path: lib2.jar\\n\",", "+\t\t\t\t},", "+\t\t\t\tlib1Path,", "+\t\t\t\tJavaCore.VERSION_1_4);", "+\t\t\tUtil.createJar(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"p/A.java\",", "+\t\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\t\"public class A {\\n\" +", "+\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t\t\tnull,", "+\t\t\t\tlib2Path,", "+\t\t\t\tJavaCore.VERSION_1_4);", "+\t\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"src/p/X.java\",", "+\t\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\"  A a;\\n\" +", "+\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src/p/X.java\\\"\"", "+\t\t\t\t+ \" -cp lib1.jar\" // relative", "+\t\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src\\\"\"", "+\t\t        + \" -1.5 -g -preserveAllLocals\"", "+\t\t        + \" -proceedOnError -referenceInfo\"", "+\t\t        + \" -d \\\"\" + OUTPUT_DIR + File.separator + \"bin\\\" \",", "+\t\t        \"\",", "+\t\t        \"\",", "+\t\t        true);", "+\t\t} catch (IOException e) {", "+\t\t\tSystem.err.println(\"BatchCompilerTest#235 could not write to current working directory \" + currentWorkingDirectoryPath);", "+\t\t} finally {", "+\t\t\tnew File(lib1Path).delete();", "+\t\t\tnew File(lib2Path).delete();", "+\t\t}", "+\t}", "+}"]}], "num": 15070}