{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf13ba023954bd8961ad45b0ae84cf69", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bc0a21e1850d4472699b8b44444230b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "9dccafa0339bc7819f07b3f80a49e2da470c0aab", "commitAfterChange": "d5a8002dc2e54e83510f5a6b529dcb15e511539a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic MethodBinding tiebreakMethod()", "signatureAfterChange": " \tpublic MethodBinding tiebreakMethod()", "diff": ["+\t\t\tTypeVariableBinding[] originalVariables = originalMethod.typeVariables;", "+\t\t\tint length = originalVariables.length;", "+\t\t\tTypeBinding[] newArguments = new TypeBinding[length];", "-\t\t\t\tTypeVariableBinding[] originalVariables = originalMethod.typeVariables;", "-\t\t\t\tint length = originalVariables.length;", "-\t\t\t\tTypeBinding[] newArguments = new TypeBinding[length];", "-\t\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tthis.tiebreakMethod = this.environment.createParameterizedGenericMethod(this.originalMethod, newArguments);", "+\t\t\t\t}", "-\t\t\t\tTypeVariableBinding[] originalVariables = originalMethod.typeVariables;", "-\t\t\t\tint length = originalVariables.length;", "-\t\t\t\tTypeBinding[] rawArguments = new TypeBinding[length];", "-\t\t\t\tfor (int i = 0; i < length; i++)", "-\t\t\t\t\trawArguments[i] =  environment.convertToRawType(originalVariables[i].upperBound());", "-\t\t\t\tthis.tiebreakMethod = this.environment.createParameterizedGenericMethod(this.originalMethod, rawArguments);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tnewArguments[i] =  environment.convertToRawType(originalVariables[i].upperBound());", "+\t\t\t\t}", "+\t\t\tthis.tiebreakMethod = this.environment.createParameterizedGenericMethod(this.originalMethod, newArguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cced1c9dc30efdf3dc40a0e7fa35a885", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "f00bbaa23fed1154a64cf4ed92a1441708756023", "commitAfterChange": "8d1d658761d5e634e1f9986cdb54c46ecd8cbc2e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "signatureAfterChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "diff": ["-\tif (inheritedTypeVariables == Binding.NO_TYPE_VARIABLES) return inheritedMethod;", "+\tif (inheritedLength == 0) return inheritedMethod; // no substitution needed", "-\tif (length > 0 && inheritedLength != length) return inheritedMethod; // no match JLS 8.4.2", "-\tTypeBinding[] arguments = new TypeBinding[inheritedLength];", "-\tif (inheritedLength <= length) {", "-\t\tSystem.arraycopy(typeVariables, 0, arguments, 0, inheritedLength);", "-\t} else {", "-\t\tSystem.arraycopy(typeVariables, 0, arguments, 0, length);", "-\t\tfor (int i = length; i < inheritedLength; i++)", "-\t\t\targuments[i] = inheritedTypeVariables[i].upperBound();", "-\t}", "-\tParameterizedGenericMethodBinding substitute =", "-\t\tthis.environment.createParameterizedGenericMethod(inheritedMethod, arguments);", "+\tif (length == 0)", "+\t\treturn inheritedMethod.asRawMethod(this.environment);", "+\tif (length != inheritedLength)", "+\t\treturn inheritedMethod; // no match JLS 8.4.2", "+\tTypeBinding[] arguments = new TypeBinding[length];", "+\tSystem.arraycopy(typeVariables, 0, arguments, 0, length);", "+\tParameterizedGenericMethodBinding substitute =", "+\t\tthis.environment.createParameterizedGenericMethod(inheritedMethod, arguments);", "-\t    \t\treturn inheritedMethod;", "+\t    \treturn inheritedMethod;"]}], "num": 68531}