{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da0e36d3eeb098f9edb808cb2b70e202", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fdf3d43e98fe741f0df535ad6e3a61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/FactoryLoaderTests.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testExternalJarLoader() throws Exception", "signatureAfterChange": " \t \tpublic void testExternalJarLoader() throws Exception", "diff": ["-\t\t// add _extJar to the factory list and rebuild.", "-\t\tFactoryContainer jarContainer = FactoryPath.newExtJarFactoryContainer(_extJar);", "-\t\tMap<FactoryContainer, Boolean> containers = new LinkedHashMap<FactoryContainer, Boolean>(1);", "-\t\tcontainers.put(jarContainer, true);", "-\t\tFactoryPath.addContainers(jproj, containers);", "+\t\tIFactoryPath ifp = AptConfig.getFactoryPath(jproj);", "+\t\t", "+\t\t// add _extJar to the factory list and rebuild.", "+\t\tifp.addExternalJar(_extJar);", "+\t\tAptConfig.setFactoryPath(jproj, ifp);", "-\t\t// remove _extJar from the factory list.", "-\t\tFactoryPath.removeContainer(jproj, jarContainer);", "+\t\t// restore to the original", "+\t\tifp.removeExternalJar(_extJar);", "+\t\tAptConfig.setFactoryPath(jproj, ifp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326410034747c14b5ba2bf86178a9dd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tprivate void saveSettings()", "signatureAfterChange": " \t \tprivate void saveSettings()", "diff": ["-\t\tMap<FactoryContainer, Boolean> containers;", "+\t\tList<FactoryPathEntry> containers;", "-\t\t\tcontainers = new LinkedHashMap<FactoryContainer, Boolean>();", "-\t\t\tint count = fFactoryPathList.getSize();", "-\t\t\tfor (int i = 0; i < count; ++i) {", "-\t\t\t\tFactoryContainer fc = (FactoryContainer)fFactoryPathList.getElement(i);", "-\t\t\t\tBoolean enabled = fFactoryPathList.isChecked(fc);", "-\t\t\t\tcontainers.put(fc, new Boolean(enabled));", "-\t\t\t}", "+\t\t\tcontainers = getListContents();", "+\t\tMap<FactoryContainer, FactoryPath.Attributes> map = FactoryPathEntry.pathMapFromList(containers);", "+\t\t", "-\t\t\tFactoryPath.setContainers(fJProj, containers);", "+\t\t\tFactoryPath fp = new FactoryPath();", "+\t\t\tfp.setContainers(map);", "+\t\t\tAptConfig.setFactoryPath(fJProj, fp);"]}], "num": 38705}