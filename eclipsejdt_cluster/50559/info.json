{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb43d961e6e79911310125cbe299d759", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8358e3a56f322af896e5cf1d10710ce7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9f0162708ef3ad281e157ce3ba268bca0e9b1dde", "commitAfterChange": "a291a37a897de20cd8c895370c415618ede4cf7f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\tReferenceBinding temp = resolvedImport instanceof PackageBinding", "-\t\t\t\t\t\t\t? findType(name, (PackageBinding) resolvedImport, currentPackage)", "-\t\t\t\t\t\t\t: (someImport.isStatic()", "-\t\t\t\t\t\t\t\t? findMemberType(name, (ReferenceBinding) resolvedImport) // static imports are allowed to see inherited member types", "-\t\t\t\t\t\t\t\t: findDirectMemberType(name, (ReferenceBinding) resolvedImport));", "-\t\t\t\t\t\tif (temp != null) {", "+\t\t\t\t\t\tReferenceBinding temp = null;", "+\t\t\t\t\t\tif (resolvedImport instanceof PackageBinding) {", "+\t\t\t\t\t\t\ttemp = findType(name, (PackageBinding) resolvedImport, currentPackage);", "+\t\t\t\t\t\t} else if (someImport.isStatic()) {", "+\t\t\t\t\t\t\ttemp = findMemberType(name, (ReferenceBinding) resolvedImport); // static imports are allowed to see inherited member types", "+\t\t\t\t\t\t\tif (temp != null && !temp.isStatic())", "+\t\t\t\t\t\t\t\ttemp = null;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\ttemp = findDirectMemberType(name, (ReferenceBinding) resolvedImport);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (temp != type && temp != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b9c665f43b7b654feaf1306dbc1aa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "56dbcf2a723a2496d9406a9295b337384afdff1d", "commitAfterChange": "356ef270158cfd8719df7baf47652712175545cd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = ((FieldBinding) importBinding.resolvedImport).declaringClass;", "-\t\t\t\t\t\t\t\t\t\tif (declaringClass.canBeSeenBy(this)) {", "-\t\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "-\t\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(declaringClass);\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\treturn importBinding.resolvedImport;", "+\t\t\t\t\t\t\t\t\t\tfoundField = (FieldBinding) importBinding.resolvedImport;", "+\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "+\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(foundField.declaringClass);\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\tif (foundField.isValidBinding()) {", "+\t\t\t\t\t\t\t\t\t\t\treturn foundField;", "-\t\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ProblemReasons.ReceiverTypeNotVisible);", "+\t\t\t\t\t\t\t\t\t\t\tproblemField = foundField;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9245bd4a0d98e4a6dd880f99186d5dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\tSourceTypeBinding enclosingType = classScope.referenceContext.binding;", "+\t\t\t\t\t\t\tReferenceBinding receiverType = classScope.enclosingReceiverType();", "-\t\t\t\t\t\t\t\tFieldBinding fieldBinding = classScope.findField(enclosingType, name, invocationSite, needResolve);", "+\t\t\t\t\t\t\t\tFieldBinding fieldBinding = classScope.findField(receiverType, name, invocationSite, needResolve);", "-\t\t\t\t\t\t\t\t\t\tif (enclosingType == fieldBinding.declaringClass || compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4) {", "+\t\t\t\t\t\t\t\t\t\tif (receiverType == fieldBinding.declaringClass || compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(enclosingType);", "+\t\t\t\t\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(receiverType);", "-\t\t\t\t\t\t\t\t\t\tfoundActualReceiverType = enclosingType;", "+\t\t\t\t\t\t\t\t\t\tfoundActualReceiverType = receiverType;", "-\t\t\t\t\t\t\tinsideStaticContext |= enclosingType.isStatic();", "+\t\t\t\t\t\t\tinsideStaticContext |= receiverType.isStatic();"]}], "num": 50559}