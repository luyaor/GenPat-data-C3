{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "236e856f36392f12334b7f8bf3d21ea2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2b0dab1fd218f2f7201635c45138d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "3f9a272754f4dbcde614fed0b8e02a6b49fdf380", "commitAfterChange": "07ee10ab5650bcb39d86bc9b77c1572a63409b02", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic String findSourceFileName(IType type, IBinaryType info)", "signatureAfterChange": " \tpublic String findSourceFileName(IType type, IBinaryType info)", "diff": ["-\t\t\ttry {", "-\t\t\t\tif (type.isMember()) {", "-\t\t\t\t\tIType enclosingType = type.getDeclaringType();", "-\t\t\t\t\tif (enclosingType == null) return null; // play it safe", "-\t\t\t\t\twhile (enclosingType.getDeclaringType() != null) {", "-\t\t\t\t\t\tenclosingType = enclosingType.getDeclaringType();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn enclosingType.getElementName() + SUFFIX_STRING_java;", "-\t\t\t\t} else if (type.isLocal() || type.isAnonymous()){", "-\t\t\t\t\tString typeQualifiedName = type.getTypeQualifiedName();", "-\t\t\t\t\treturn typeQualifiedName.substring(0, typeQualifiedName.indexOf('$')) + SUFFIX_STRING_java;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn type.getElementName() + SUFFIX_STRING_java;", "+\t\t\tif (info.isMember()) {", "+\t\t\t\tIType enclosingType = type.getDeclaringType();", "+\t\t\t\tif (enclosingType == null) return null; // play it safe", "+\t\t\t\twhile (enclosingType.getDeclaringType() != null) {", "+\t\t\t\t\tenclosingType = enclosingType.getDeclaringType();", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// ignore", "+\t\t\t\treturn enclosingType.getElementName() + SUFFIX_STRING_java;", "+\t\t\t} else if (info.isLocal() || info.isAnonymous()){", "+\t\t\t\tString typeQualifiedName = type.getTypeQualifiedName();", "+\t\t\t\treturn typeQualifiedName.substring(0, typeQualifiedName.indexOf('$')) + SUFFIX_STRING_java;", "+\t\t\t} else {", "+\t\t\t\treturn type.getElementName() + SUFFIX_STRING_java;", "-\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f81b668ad8f74bdf0465e8ade8ba70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "f447b16dd60f42cc2ef6fd3675d34b42ed951cdb", "commitAfterChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "signatureAfterChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "diff": ["-\t\t\t\ttry {", "-\t\t\t\t\tif (type.isMember() && method.isConstructor() && !Flags.isStatic(type.getFlags())) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=48261", "-\t\t\t\t\t\tfirstIsSynthetic = true;", "-\t\t\t\t\t\targCount++;", "-\t\t\t\t\t}", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t// ignored", "+\t\t\t\tif (reader.isMember() && method.isConstructor() && !Flags.isStatic(reader.getModifiers())) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=48261", "+\t\t\t\t\tfirstIsSynthetic = true;", "+\t\t\t\t\targCount++;"]}], "num": 44942}