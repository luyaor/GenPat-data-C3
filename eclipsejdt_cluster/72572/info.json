{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "108d7b91d630d7d3145f826303febef7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3737c928b738aebbd3636269444a0d65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "e534993434659c9a128067cc81e53b914d835480", "commitAfterChange": "85fca2365612e79a6e7b22f1bfd4842ccf0748ee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void testMissingLibrary2() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testMissingLibrary2() throws JavaModelException", "diff": ["-\t\t\tnew Problem(\"\", \"The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project.\", projectPath)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"\", \"The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project\", projectPath)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest1, new Problem(\"p1\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files.\", classTest1)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest1, new Problem(\"p1\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest1)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest2, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files.\", classTest2)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest2, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest2)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest3, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files.\", classTest3)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest3, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest3)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db188f9bfd80fd7453c7d25a3762c88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "0a2ac075c4c856fa99a690dbbe5d8bb93c4e0de4", "commitAfterChange": "5d080762ae8d3ca1ae1910319f56194e1932135d", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 581, "signatureBeforeChange": " public void testBug216875g() throws CoreException", "signatureAfterChange": " public void testBug216875g() throws CoreException", "diff": ["-\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\t\ufffd|t1|\ufffd = t2;] WRITE ACCESS\\n\" +", "-\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\t\ufffd|t1|\ufffd.field = t1.field;] READ ACCESS\\n\" +", "-\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\tt1.field = \ufffd|t1|\ufffd.field;] READ ACCESS\\n\" +", "-\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\tt2.field = \ufffd|t1|\ufffd.field;] READ ACCESS\"", "+\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\t\ufffd|t1|\ufffd = t2;] WRITE ACCESS\\n\" +", "+\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\t\ufffd|t1|\ufffd.field = t1.field;] READ ACCESS\\n\" +", "+\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\tt1.field = \ufffd|t1|\ufffd.field;] READ ACCESS\\n\" +", "+\t\t\"src/test/X.java void test.X.foo(Test, Test) [\t\tt2.field = \ufffd|t1|\ufffd.field;] READ ACCESS\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b75d9fbbf646adc34124804862bbc7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "bb2219f73a65d80105bc92727133ff8011c4e284", "commitAfterChange": "28ac5b5368dcd64802ba668460817e2bb2a5db8e", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": " public void testBug294618a()", "signatureAfterChange": " public void testBug294618a()", "diff": ["-\t\t\" * \\n\" + ", "+\t\t\" *\\n\" + ", "-\t\t\" * \\n\" + ", "+\t\t\" *\\n\" + ", "-\t\t\" * \\n\" + ", "+\t\t\" *\\n\" + ", "-\t\t\" * \\n\" + ", "+\t\t\" *\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac51a0c14b132c2e5de6dd5d4a1f8ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "983c7fc5343f245d128eb822bd7ee4cfaee29d49", "commitAfterChange": "4aca51e66d266745777f6bebbf32a133f70b622d", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void testBug47968method() throws CoreException", "signatureAfterChange": " \tpublic void testBug47968method() throws CoreException", "diff": ["-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s [foo] EXACT_MATCH INSIDE_JAVADOC\\n\" + // This match was not found before...", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s.y [foo] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "-\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s() [foo] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "-\t\t\t\"src/j2/Bug47968s.java void j2.Bug47968s.bar() [foo] EXACT_MATCH INSIDE_JAVADOC\",", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s [foo(int)] EXACT_MATCH INSIDE_JAVADOC\\n\" + // This match was not found before...", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s.y [foo(int)] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j2/Bug47968s.java j2.Bug47968s() [foo(int)] EXACT_MATCH INSIDE_JAVADOC\\n\" + ", "+\t\t\t\"src/j2/Bug47968s.java void j2.Bug47968s.bar() [foo(int)] EXACT_MATCH INSIDE_JAVADOC\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af16f4e4ab1f3c404f30a2d5807272b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void test021()", "signatureAfterChange": " \tpublic void test021()", "diff": ["-\t\t\t\"     7  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     7  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    11  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    11  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 15] local: i index: 1 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 15] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 3, pc: 15] local: i index: 1 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e81cdf2632d5bd660509dccbded4c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testJavadocFieldStringReference() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocFieldStringReference() throws CoreException", "diff": ["-\t\t\t\t\"annSearchedVar\",", "+\t\t\t\t\"javadocSearchedVar\",", "-\t\t\t\t\"src/j1/AnnInvalidRef.java void j1.AnnInvalidRef.invalid() [annSearchedVar] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/j1/AnnInvalidRef.java void j1.AnnInvalidRef.invalid() [annSearchedVar] POTENTIAL_MATCH\\n\" + ", "-\t\t\t\t\"src/j1/AnnValidRef.java void j1.AnnValidRef.valid() [annSearchedVar] EXACT_MATCH\",", "+\t\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [javadocSearchedVar] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/j1/JavadocInvalidRef.java void j1.JavadocInvalidRef.invalid() [javadocSearchedVar] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\t\"src/j1/JavadocValidRef.java void j1.JavadocValidRef.valid() [javadocSearchedVar] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9883df05dbbae45290e4ba707f7d73c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "448d62b2ff66cd7ed3c1bda65bd5259a6d0971b0", "commitAfterChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "methodNumberBeforeChange": 577, "methodNumberAfterChange": 578, "signatureBeforeChange": " public void testBug247564i_3()", "signatureAfterChange": " public void testBug247564i_3()", "diff": ["-\t\t\t\"    static Object xinnerfield;\\n\" +", "-\t\t\t\"    XInner getXInner() { return new XInner();\\n}\" +", "-\t\t\t\"    void goo(Object var) {\\n\" +", "+\t\t\t\"   static Object xinnerfield;\\n\" +", "+\t\t\t\"   XInner getXInner() { return new XInner();\\n}\" +", "+\t\t\t\"   void goo(Object var) {\\n\" +", "-\t\t\t\"    }\\n\" +", "+\t\t\t\"   }\\n\" +"]}], "num": 72572}