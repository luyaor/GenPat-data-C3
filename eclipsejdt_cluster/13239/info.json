{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45be063f81b1bb89122e9c5986bc19c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aa895a9cd32f152bb9b74b6fc289b65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "756e1981ccaf3561b93bab71937951ef14b72eb6", "commitAfterChange": "30210dace16fbfb20e6910ce9f1394f40ee548a8", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void testBug54776() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug54776() throws JavaModelException", "diff": ["+\t\t// get comments range", "-\t\tint commentLength = ((Comment) compilUnit.getCommentList().get(1)).getStartPosition()-commentStart+comment.getLength();", "+\t\tint extendedLength = ((Comment) compilUnit.getCommentList().get(1)).getStartPosition()-commentStart+comment.getLength();", "+\t\t// get method invocation in field initializer", "+\t\t// verify  that methodinvocation extended range includes leading and trailing comment", "-\t\tassumeEquals(\"Method invocation \"+methodInvocation+\" does not have the correct length\", commentLength, methodLength);", "+\t\tassumeEquals(\"Method invocation \"+methodInvocation+\" does not have the correct length\", extendedLength, methodLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab967a8bc98ecf7cf6f8b31c92474048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "807b2bf6b37b8c98063e0b73f3e9e111197c660a", "commitAfterChange": "3b4394afa293384076b51eeac920f3d24cc5f8bc", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void testBug54776() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug54776() throws JavaModelException", "diff": ["+\t\t// get comments range", "-\t\tint commentLength = ((Comment) compilUnit.getCommentList().get(1)).getStartPosition()-commentStart+comment.getLength();", "+\t\tint extendedLength = ((Comment) compilUnit.getCommentList().get(1)).getStartPosition()-commentStart+comment.getLength();", "+\t\t// get method invocation in field initializer", "+\t\t// verify  that methodinvocation extended range includes leading and trailing comment", "-\t\tassumeEquals(\"Method invocation \"+methodInvocation+\" does not have the correct length\", commentLength, methodLength);", "+\t\tassumeEquals(\"Method invocation \"+methodInvocation+\" does not have the correct length\", extendedLength, methodLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0bf06dc0a0d6ab594ee6cd81d01c075", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "8fb88598900ff0c1072aa7669424703dbc139194", "commitAfterChange": "4c091ce71f1c6a2472a4afd7104c5d8f3424456d", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void testBug54776() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug54776() throws JavaModelException", "diff": ["-\t\t// get comments range", "-\t\tint extendedLength = ((Comment) compilUnit.getCommentList().get(1)).getStartPosition()-commentStart+comment.getLength();", "-\t\t// get method invocation in field initializer", "+\t\tint commentLength = ((Comment) compilUnit.getCommentList().get(1)).getStartPosition()-commentStart+comment.getLength();", "-\t\t// verify  that methodinvocation extended range includes leading and trailing comment", "-\t\tassumeEquals(\"Method invocation \"+methodInvocation+\" does not have the correct length\", extendedLength, methodLength);", "+\t\tassumeEquals(\"Method invocation \"+methodInvocation+\" does not have the correct length\", commentLength, methodLength);"]}], "num": 13239}