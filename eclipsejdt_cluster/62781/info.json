{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47babee52a22dd92ff3c5d58de9e85f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a41f163c696b4ba0dbd1a0c1cbfb45e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "c31c921d319cbf1346e5bfb26cf42ff15297484d", "commitAfterChange": "2becf6dcab514ae8708935b2b42eed94f2bad821", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tvoid buildFields()", "signatureAfterChange": "  \tvoid buildFields()", "diff": ["-\t\tboolean duplicate = false;", "-\t\t\t\t\tduplicate = true;", "-\t\t\t\t\tFieldBinding previousBinding = (FieldBinding) knownFieldNames.get(field.name);", "-\t\t\t\t\tif (previousBinding != null) {", "-\t\t\t\t\t\tfor (int f = 0; f < i; f++) {", "-\t\t\t\t\t\t\tFieldDeclaration previousField = fields[f];", "-\t\t\t\t\t\t\tif (previousField.binding == previousBinding) {", "-\t\t\t\t\t\t\t\tproblemReporter().duplicateFieldInType(sourceType, previousField);", "-\t\t\t\t\t\t\t\tpreviousField.binding = null;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tknownFieldNames.put(field.name, null); // ensure that the duplicate field is found & removed", "-\t\tif (duplicate) {", "-\t\t\tFieldBinding[] newFieldBindings = new FieldBinding[fieldBindings.length];", "-\t\t\t// we know we'll be removing at least 1 duplicate name", "-\t\t\tsize = count;", "-\t\t\tcount = 0;", "-\t\t\tfor (int i = 0; i < size; i++) {", "-\t\t\t\tFieldBinding fieldBinding = fieldBindings[i];", "-\t\t\t\tif (knownFieldNames.get(fieldBinding.name) != null) {", "-\t\t\t\t\tfieldBinding.id = count;", "-\t\t\t\t\tnewFieldBindings[count++] = fieldBinding;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tfieldBindings = newFieldBindings;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9ae9a6b171432681cec60835d77846", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "72447fc8301129ec23ec2cfbe469aedc3b4c9d3e", "commitAfterChange": "a337a67d07e229d2e8a590edfef8bdffb92e4516", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012() throws Exception", "signatureAfterChange": " public void test012() throws Exception", "diff": ["-\t\t\"date.toString();\";", "+\t\t\"System.out.println(\\\"Old date =\\t\\\" + date.toString());\";", "-\tEvaluationResult[] results = requestor.results;", "-\tSystem.out.println(\"\\nDebugEvaluationTests:test012: Results (1):\");", "-\tfor(int i = 0; i < results.length; i++) {", "-\t\tEvaluationResult r = results[i];", "-\t\tif (r == null) continue;", "-\t\tSystem.out.println(\"\\t[\" + i + \"] Evaluation Type: \"+ r.getEvaluationType() + ", "-\t\t\t\t\" Value Type: \" + new String(r.getValueTypeName()) + ", "-\t\t\t\t\" Value: \" + new String(r.getValueDisplayString()));", "-\t}", "-\tsnippet = \"return date.after(cal.getGregorianChange());\".toCharArray();", "+\tuserCode = \"System.out.println(\\\"new date =\\t\\\" + date.toString());\\n\" +", "+\t\t\t\t\"System.out.println(\\\"cal.getGregorianChange() =\\t\\\" + cal.getGregorianChange());\\n\" +", "+\t\t\t\t\"return date.after(cal.getGregorianChange());\";", "+\tsnippet = userCode.toCharArray();", "-\tresults = requestor.results;", "-\tSystem.out.println(\"\\nDebugEvaluationTests:test012: Results (2):\");", "-\tfor(int i = 0; i < results.length; i++) {", "-\t\tEvaluationResult r = results[i];", "-\t\tif (r == null) continue;", "-\t\tSystem.out.println(\"\\t[\" + i + \"] Evaluation Type: \"+ r.getEvaluationType() + ", "-\t\t\t\t\" Value Type: \" + new String(r.getValueTypeName()) + ", "-\t\t\t\t\" Value: \" + new String(r.getValueDisplayString()));", "-\t}"]}], "num": 62781}