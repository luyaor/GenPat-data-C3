{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61c7583706adadd52d865fd95f8c568d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2885eb9779307bf8d79e21ec07fafcd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "da0b64a41a819b0bc05baa0b849f027f121c825e", "commitAfterChange": "2b7552f783a2d4bb0c0a1609551da2b723f5860d", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "signatureAfterChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "diff": ["-\t\t// set the units to look inside", "-\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "-\t\tlookup.setUnitsToLookInside(workingCopies);", "-\t\t\t", "+\t\t// set the units to look inside only for problem detection purpose", "+\t\tif (forceProblemDetection) {", "+\t\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "+\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78788c0ea12ed2c27fc60a0f4fe869b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "7ff16b3c41a4787598b4b10fa9250f3f4d03eb7b", "commitAfterChange": "28e62cb12c30aaca5e9cb07c8b5842b88ac8e145", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test004() throws JavaModelException", "signatureAfterChange": " \tpublic void test004() throws JavaModelException", "diff": ["-\t\tString[] paramNames = method.getParameterNames();", "-\t\tassertNotNull(paramNames);", "-\t\tassertEquals(\"Wrong size\", 3, paramNames.length); //$NON-NLS-1$", "-\t\tassertEquals(\"Wrong name for first param\", \"i\", paramNames[0]); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tassertEquals(\"Wrong name for second param\", \"l\", paramNames[1]); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tassertEquals(\"Wrong name for third param\", \"s\", paramNames[2]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t// TODO (olivier) reenable once 117740 is fixed", "+\t\tif (false) {", "+\t\t\tString[] paramNames = method.getParameterNames();", "+\t\t\tassertNotNull(paramNames);", "+\t\t\tassertEquals(\"Wrong size\", 3, paramNames.length); //$NON-NLS-1$", "+\t\t\tassertEquals(\"Wrong name for first param\", \"i\", paramNames[0]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"Wrong name for second param\", \"l\", paramNames[1]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"Wrong name for third param\", \"s\", paramNames[2]); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}"]}], "num": 52236}