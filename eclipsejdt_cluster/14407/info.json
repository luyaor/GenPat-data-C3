{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b0b1cfc4521840ed9235fd0efb2a164", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02651b36d419f532ff1c9848487827d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "5bb2bc7f924033ac90ef06377adaf6e8028c136c", "commitAfterChange": "ef1e5cb9e8f1ed367497f33911cb9848dee28aa7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected boolean parseComment(int javadocStart, int javadocEnd)", "signatureAfterChange": " \tprotected boolean parseComment(int javadocStart, int javadocEnd)", "diff": ["-\t\t\tint endTextPosition = this.index;", "-\t\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocInvalidTag(this.inlineTagStart, endTextPosition);", "+\t\t\t\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocUnexpectedTag(this.inlineTagStart, this.inlineTagStart);", "-\t\t\t\t\t\t\t\t\tif (this.textStart != -1 && this.textStart < endTextPosition) {", "-\t\t\t\t\t\t\t\t\t\tpushText(this.textStart, endTextPosition);", "+\t\t\t\t\t\t\t\t\tif (this.textStart != -1 && this.textStart < this.inlineTagStart) {", "+\t\t\t\t\t\t\t\t\t\tpushText(this.textStart, this.inlineTagStart);", "-\t\t\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_SEE) ||", "-\t\t\t\t\t\t\t\t\t\t\t\t\tCharOperation.equals(tag, TAG_LINK)) {", "+\t\t\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_SEE)) {", "+\t\t\t\t\t\t\t\t\t\t\t} else if (CharOperation.equals(tag, TAG_LINK)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif (this.inlineTagStarted) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tvalid = parseSee(false);", "+\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tvalid = parseTag();", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\tvalid = parseSee(true);", "+\t\t\t\t\t\t\t\t\t\t\t\tif (this.inlineTagStarted) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tvalid = parseSee(true);", "+\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tvalid = parseTag();", "+\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tendTextPosition = previousPosition;", "-\t\t\t\t\t\tendTextPosition = previousPosition;", "-\t\t\t\t\t\tendTextPosition = previousPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b4c5135529d6a29bdefe93d0e84a6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tTypeBinding typeBinding = type.resolveType(scope); // will check for null after args are resolved", "+\tthis.expressionType = type.resolveType(scope); // will check for null after args are resolved", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;", "-\tif (typeBinding == null)", "+\tif (this.expressionType == null)", "-\tif (!typeBinding.canBeInstantiated()) {", "-\t\tscope.problemReporter().cannotInstantiate(type, typeBinding);", "-\t\treturn typeBinding;", "+\tif (!this.expressionType.canBeInstantiated()) {", "+\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "+\t\treturn this.expressionType;", "-\tReferenceBinding allocatedType = (ReferenceBinding) typeBinding;", "+\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "-\t\t\t\t\treturn typeBinding;", "+\t\t\t\t\treturn this.expressionType;", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;"]}], "num": 14407}