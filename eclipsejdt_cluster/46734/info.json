{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9356cba802576dbeb7d81a168f6991c3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad7c2ed62a54c9e36a64bce26c02c2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic boolean visit(SingleNameReference singleNameReference, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(MemberValuePair pair, BlockScope scope)", "diff": ["+\t}", "+\tpublic boolean visit(MemberValuePair pair, BlockScope scope) {", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "+\t\tif (this.preferences.insert_space_after_assignment_operator) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tpair.value.traverse(this, scope);\t", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4da62dd21b9941086c8a98fc26949d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\t\targument.type.traverse(this, scope);", "+\t\t\tif (argument.type instanceof UnionTypeReference) {", "+\t\t\t\tformatMultiCatchArguments(", "+\t\t\t\t\t\targument, ", "+\t\t\t\t\t\tthis.preferences.insert_space_before_binary_operator, ", "+\t\t\t\t\t\tthis.preferences.insert_space_after_binary_operator,", "+\t\t\t\t\t\tthis.preferences.alignment_for_union_type_in_multicatch,", "+\t\t\t\t\t\tscope);", "+\t\t\t} else {", "+\t\t\t\targument.type.traverse(this, scope);", "+\t\t\t}"]}], "num": 46734}