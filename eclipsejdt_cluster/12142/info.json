{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d29bdf4aadec85cde68fe0e321baf305", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d395d7ea4f0a4103f5a4bc9f55ec0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b9b3f6eb89afdba4e3c5afffb4e19fe2c2403500", "commitAfterChange": "1b9f72549c0f4a9738e1600d1d1680441854347a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["-\t\t\t\t\t\t\t\t\t\tthis.state.rootsAreStale = true;", "+\t\t\t\t\t\t\t\t\tthis.state.rootsAreStale = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92428a01e66cd2dda2593ff0c9af8a65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AstNodeFinder.java", "commitBeforeChange": "918eef64ca6418a800e340287b8f92eb641467b8", "commitAfterChange": "7c141e053110b57e59472c1bab43d4de82d0dd5d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeDeclaration findType(IType typeHandle)", "signatureAfterChange": " \tpublic TypeDeclaration findType(IType typeHandle)", "diff": ["+\t\tclass Visitor extends AbstractSyntaxTreeVisitorAdapter {", "+\t\t\tTypeDeclaration result;", "+\t\t\tint count = 0;", "+\t\t\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "+\t\t\t\tif (result != null) return false;", "+\t\t\t\tif (isAnonymous && ++count == occurenceCount) {", "+\t\t\t\t\tresult = anonymousTypeDeclaration;", "+\t\t\t\t}", "+\t\t\t\treturn false; // visit only one level", "+\t\t\t}", "+\t\t\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {", "+\t\t\t\tif (result != null) return false;", "+\t\t\t\tif (!isAnonymous && CharOperation.equals(typeName, typeDeclaration.name)) {", "+\t\t\t\t\tresult = typeDeclaration;", "+\t\t\t\t}", "+\t\t\t\treturn false; // visit only one level", "+\t\t\t}", "+\t\t}", "-\t\t\t\tclass Visitor extends AbstractSyntaxTreeVisitorAdapter {", "-\t\t\t\t\tTypeDeclaration result;", "-\t\t\t\t\tint count = 0;", "-\t\t\t\t\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "-\t\t\t\t\t\tif (result != null) return false;", "-\t\t\t\t\t\tif (isAnonymous && ++count == occurenceCount) {", "-\t\t\t\t\t\t\tresult = anonymousTypeDeclaration;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn false; // visit only one level", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {", "-\t\t\t\t\t\tif (result != null) return false;", "-\t\t\t\t\t\tif (!isAnonymous && CharOperation.equals(typeName, typeDeclaration.name)) {", "-\t\t\t\t\t\t\tresult = typeDeclaration;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn false; // visit only one level", "-\t\t\t\t\t}", "-\t\t\t\t}"]}], "num": 12142}