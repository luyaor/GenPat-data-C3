{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2bbb1e0bdc83051b2a2d6c39672bfc3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1a9d1393b567f75853d666dedeb1312", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Util.java", "commitBeforeChange": "103f961b66fc59d439ce4272afa7ee8cde98c569", "commitAfterChange": "f09494e3cb6e296352ece47fd4a1ff30c7910e53", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "\r public static String bind(String id, String[] bindings)", "signatureAfterChange": "\r public static String bind(String id, String[] bindings)", "diff": ["+\t// for compatibility with MessageFormat which eliminates double quotes in original message\r", "+\tchar[] messageWithNoDoubleQuotes =\r", "+\tCharOperation.replace(message.toCharArray(), DOUBLE_QUOTES, SINGLE_QUOTE);\r", "+\tmessage = new String(messageWithNoDoubleQuotes);\r", "+\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2661d4849d58e0831431764c4afc6ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProblemFactory.java", "commitBeforeChange": "103f961b66fc59d439ce4272afa7ee8cde98c569", "commitAfterChange": "f09494e3cb6e296352ece47fd4a1ff30c7910e53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public String getLocalizedMessage(int id, String[] problemArguments)", "signatureAfterChange": "\r \tpublic String getLocalizedMessage(int id, String[] problemArguments)", "diff": ["- */\r", "-public String getLocalizedMessage(int id, String[] problemArguments) {\r", "-\tStringBuffer output = new StringBuffer(80);\r", "-\tString message = fMessageTemplates[ (id & ProblemIrritants.IgnoreCategoriesMask)];\r", "-\tif (message == null) {\r", "-\t\treturn \"Unable to retrieve the error message for problem id: \"+ id + \". Check compiler resources.\"; //$NON-NLS-1$ //$NON-NLS-2$\r", "-\tint length = message.length();\r", "-\tint start = -1, end = length;\r", "-\twhile (true) {\r", "-\t\tif ((end = message.indexOf('{', start)) > -1) {\r", "-\t\t\toutput.append(message.substring(start + 1, end));\r", "-\t\t\tif ((start = message.indexOf('}', end)) > -1) {\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\toutput.append(problemArguments[Integer.parseInt(message.substring(end + 1, start))]);\r", "-\t\t\t\t} catch (NumberFormatException nfe) {\r", "-\t\t\t\t\toutput.append(message.substring(end + 1, start + 1));\r", "-\t\t\t\t} catch (ArrayIndexOutOfBoundsException e) {\r", "-\t\t\t\t\treturn \"Corrupted compiler resources for problem id: \" + (id & ProblemIrritants.IgnoreCategoriesMask) + \". Check compiler resources.\"; //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t */\r", "+\tpublic String getLocalizedMessage(int id, String[] problemArguments) {\r", "+\t\tStringBuffer output = new StringBuffer(80);\r", "+\t\tString message =\r", "+\t\t\tfMessageTemplates[(id & ProblemIrritants.IgnoreCategoriesMask)];\r", "+\t\tif (message == null) {\r", "+\t\t\treturn \"Unable to retrieve the error message for problem id: \" //$NON-NLS-1$\r", "+\t\t\t\t+ id\r", "+\t\t\t\t+ \". Check compiler resources.\";//$NON-NLS-1$\r", "+\t\t}\r", "+\t\t// for compatibility with MessageFormat which eliminates double quotes in original message\r", "+\t\tchar[] messageWithNoDoubleQuotes =\r", "+\t\t\tCharOperation.replace(message.toCharArray(), DOUBLE_QUOTES, SINGLE_QUOTE);\r", "+\t\tmessage = new String(messageWithNoDoubleQuotes);\r", "+\t\t\r", "+\t\tint length = message.length();\r", "+\t\tint start = -1, end = length;\r", "+\t\twhile (true) {\r", "+\t\t\tif ((end = message.indexOf('{', start)) > -1) {\r", "+\t\t\t\toutput.append(message.substring(start + 1, end));\r", "+\t\t\t\tif ((start = message.indexOf('}', end)) > -1) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\toutput.append(\r", "+\t\t\t\t\t\t\tproblemArguments[Integer.parseInt(message.substring(end + 1, start))]);\r", "+\t\t\t\t\t} catch (NumberFormatException nfe) {\r", "+\t\t\t\t\t\toutput.append(message.substring(end + 1, start + 1));\r", "+\t\t\t\t\t} catch (ArrayIndexOutOfBoundsException e) {\r", "+\t\t\t\t\t\treturn \"Corrupted compiler resources for problem id: \"//$NON-NLS-1$\r", "+\t\t\t\t\t\t\t+ (id & ProblemIrritants.IgnoreCategoriesMask)\r", "+\t\t\t\t\t\t\t+ \". Check compiler resources.\";//$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\toutput.append(message.substring(end, length));\r", "+\t\t\t\t\tbreak;\r", "-\t\t\t\toutput.append(message.substring(end, length));\r", "+\t\t\t\toutput.append(message.substring(start + 1, length));\r", "-\t\t} else {\r", "-\t\t\toutput.append(message.substring(start + 1, length));\r", "-\t\t\tbreak;\r", "+\t\treturn output.toString();\r", "-\treturn output.toString();\r", "-}\r"]}], "num": 53482}