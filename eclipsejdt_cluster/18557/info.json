{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6863494e051da7802877a4d73a354a4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b9f324fe0bd136380c2c73803b095f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/util/JdtCorePerformanceMeter.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void storeCpuTime(Sample sample)", "signatureAfterChange": "  private void storeDataPoints(Sample sample)", "diff": ["-\tprivate void storeCpuTime(Sample sample) {", "-\t\tDataPoint[] dataPoints= sample.getDataPoints();", "-\t\tSystem.out.println(\"Scenario '\" + getReadableName()+ \"':\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tif (dataPoints.length > 0) {", "-\t\t\tStatisticsSession s= new StatisticsSession(dataPoints);", "-\t\t\tDim[] dimensions= dataPoints[0].getDimensions();", "-\t\t\tif (dimensions.length > 0) {", "-\t\t\t\tfor (int i= 0; i < dimensions.length; i++) {", "-\t\t\t\t    Dim dimension= dimensions[i];", "-\t\t\t\t\tif (dimension.getName().equals(\"CPU Time\")) {", "-\t\t\t\t\t\tStatistics stat = new Statistics(s, dimension);", "-\t\t\t\t\t    CPU_TIMES.put(getReadableName(), stat);", "-\t\t\t\t\t\tSystem.out.println(\"\t- CPU Time: \"+stat.toString());", "-\t\t\t\t\t} else if (dimension.getName().startsWith(\"Elapsed\")) {", "-\t\t\t\t\t\tStatistics stat = new Statistics(s, dimension);", "-\t\t\t\t\t    ELAPSED_TIMES.put(getReadableName(), stat);", "-\t\t\t\t\t\tSystem.out.println(\"\t- Elapsed process: \"+stat.toString());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+private void storeDataPoints(Sample sample) {", "+\tDataPoint[] dataPoints = sample.getDataPoints();", "+\tint length = dataPoints.length;", "+\tif (length > 0) {", "+\t\tSystem.out.println(\"\tStore \" + length + \" data points...\");", "+\t\tSTATISTICS.put(getReadableName(), dataPoints);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b0924c77d76e299410ea1067cb26c65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tpublic void fire()", "signatureAfterChange": "\r \tpublic void fire()", "diff": ["-\t\t\tIterator deltas= null;\r", "-\t\t\tif (fJavaModelDeltas.isEmpty()) {\r", "-\t\t\t\tdeltas= fResourceDeltas.iterator();\r", "-\t\t\t} else {\r", "-\t\t\t\tdeltas= fJavaModelDeltas.iterator();\r", "-\t\t\t}\r", "+\t\t\tthis.mergeDeltas();\r", "-\t\t\t\twhile (deltas.hasNext()) {\r", "-\t\t\t\t\tIJavaElementDelta delta= (IJavaElementDelta) deltas.next();\r", "-\t\t\t\t\tif (DeltaProcessor.VERBOSE){\r", "-\t\t\t\t\t\tSystem.out.println(\"FIRING Delta (\"+ Thread.currentThread()+\"):\"+ delta);//$NON-NLS-1$//$NON-NLS-2$\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tElementChangedEvent event= new ElementChangedEvent(delta);\r", "-\t\t\t\t\t// Clone the listeners since they could remove themselves when told about the event \r", "-\t\t\t\t\t// (eg. a type hierarchy becomes invalid (and thus it removes itself) when the type is removed\r", "-\t\t\t\t\tArrayList listeners= (ArrayList) fElementChangedListeners.clone();\r", "-\t\t\t\t\tfor (int i= 0; i < listeners.size(); i++) {\r", "-\t\t\t\t\t\tIElementChangedListener listener= (IElementChangedListener) listeners.get(i);\r", "-\t\t\t\t\t\tlistener.elementChanged(event);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "+\t\t\t\tthis.fire(fJavaModelDeltas);\r", "-\t\t\t\t// empty the queues\r", "-\t\t\t\tflush();\r", "+\t\t\t\t// empty the queue\r", "+\t\t\t\tfJavaModelDeltas= new ArrayList();\r"]}], "num": 18557}