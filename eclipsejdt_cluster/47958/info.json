{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0941cd24961f3746abb8f4e6bd465106", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b32aaa27ee2d587e390448e76aa7200", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "10234afdc4f5690ec37e139071f618abb52d00b8", "commitAfterChange": "8aa3c69cecd84b3c2c3bfd8031419f42f6bb2e8f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean isSubTypeCompatible(ITypeBinding type)", "signatureAfterChange": " \tpublic boolean isSubTypeCompatible(ITypeBinding type)", "diff": ["-\t\tif (this == type) return true;", "-\t\tif (this.binding.isBaseType()) return false;", "-\t\tTypeBinding other = (TypeBinding) type;", "-\t\tif (other.binding.isBaseType()) return false;", "-\t\treturn this.binding.isCompatibleWith(other.binding);", "+\t\ttry {", "+\t\t\tif (this == type) return true;", "+\t\t\tif (this.binding.isBaseType()) return false;", "+\t\t\tTypeBinding other = (TypeBinding) type;", "+\t\t\tif (other.binding.isBaseType()) return false;", "+\t\t\treturn this.binding.isCompatibleWith(other.binding);", "+\t\t} catch (AbortCompilation e) {", "+\t\t\t// don't surface internal exception to clients", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=143013", "+\t\t\treturn false;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27f8eb5c0379cc6d51feaa1457a47256", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "10234afdc4f5690ec37e139071f618abb52d00b8", "commitAfterChange": "8aa3c69cecd84b3c2c3bfd8031419f42f6bb2e8f", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic boolean isAssignmentCompatible(ITypeBinding type)", "signatureAfterChange": " \tpublic boolean isAssignmentCompatible(ITypeBinding type)", "diff": ["-\t\tif (this == type) return true;", "-\t\tTypeBinding other = (TypeBinding) type;", "-\t\tScope scope = this.resolver.scope();", "-\t\tif (scope == null) return false;", "-\t\treturn this.binding.isCompatibleWith(other.binding) || scope.isBoxingCompatibleWith(this.binding, other.binding);", "+\t\ttry {", "+\t\t\tif (this == type) return true;", "+\t\t\tTypeBinding other = (TypeBinding) type;", "+\t\t\tScope scope = this.resolver.scope();", "+\t\t\tif (scope == null) return false;", "+\t\t\treturn this.binding.isCompatibleWith(other.binding) || scope.isBoxingCompatibleWith(this.binding, other.binding);", "+\t\t} catch (AbortCompilation e) {", "+\t\t\t// don't surface internal exception to clients", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=143013", "+\t\t\treturn false;", "+\t\t}"]}], "num": 47958}