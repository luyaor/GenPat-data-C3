{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ae990d6ea97a7b6d7122be1824fb0a2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ebe54f0cca2193ddb3b4509657d790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "diff": ["-\t\t\t\treturn createMethodPattern(stringPattern, limitTo, matchRule);", "+\t\t\t\treturn createMethodOrConstructorPattern(stringPattern, limitTo, matchRule, false/*not a constructor*/);", "-\t\t\t\treturn createConstructorPattern(stringPattern, limitTo, matchRule);", "+\t\t\t\treturn createMethodOrConstructorPattern(stringPattern, limitTo, matchRule, true/*constructor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6c56c317d408655640eedd7b461415", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "50125dca81221f803e384aaa4267a637e226f1c2", "commitAfterChange": "4cd48b026de7e60c67fbe844fd9c5a5b27c059ca", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "diff": ["-\t\t\t\tJavaCore.getOptions(),", "+\t\t\t\tjavaProject.getOptions(true),", "-\t\t\tString encoding = JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\t\tString encoding = javaProject.getOption(JavaCore.CORE_ENCODING, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2edff215979de51e6ec38bbe7e38c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "9217377dd950bb41269565e1e7c851d4d0d370b5", "commitAfterChange": "1711cd3c2a5b80208f9ca8c0106649ad2ac334e9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "signatureAfterChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "diff": ["-\t\t\t\t\tBinding binding = this.scope.getTypeOrPackage(CharOperation.subarray(importReference.tokens, 0, importReference.tokens.length));", "+\t\t\t\t\tBinding binding = this.scope.getImport(CharOperation.subarray(importReference.tokens, 0, importReference.tokens.length), true);", "-\t\t\t\t\tBinding binding = this.scope.getTypeOrPackage(importReference.tokens);", "+\t\t\t\t\tBinding binding = this.scope.getImport(importReference.tokens, false);"]}], "num": 72825}