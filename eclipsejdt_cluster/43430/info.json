{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e93daead457769e7394fa1735dbc3c11", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54de9adae61935841df6059e4e3cc632", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */", "+protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {", "+\tif (type == null) return INACCURATE_MATCH;", "+", "+\tchar[] qualifiedPackageName = type.qualifiedPackageName();", "+\tchar[] qualifiedSourceName = type instanceof LocalTypeBinding", "+\t\t\t? CharOperation.concat(\"1\".toCharArray(), type.qualifiedSourceName(), '.') //$NON-NLS-1$", "+\t\t\t: type.qualifiedSourceName();", "+\tchar[] fullyQualifiedTypeName = qualifiedPackageName.length == 0", "+\t\t? qualifiedSourceName", "+\t\t: CharOperation.concat(qualifiedPackageName, qualifiedSourceName, '.');", "+\tif (this.matchesType(simpleNamePattern, qualificationPattern, fullyQualifiedTypeName))", "+\t\treturn ACCURATE_MATCH;", "+\treturn IMPOSSIBLE_MATCH;", "+}", "- */", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {", "-\tif (type == null) return INACCURATE_MATCH;", "-\tchar[] qualifiedPackageName = type.qualifiedPackageName();", "-\tchar[] qualifiedSourceName = ", "-\t\ttype instanceof LocalTypeBinding ?", "-\t\t\tCharOperation.concat(\"1\".toCharArray(), type.qualifiedSourceName(), '.') : //$NON-NLS-1$", "-\t\t\ttype.qualifiedSourceName();", "-\tif (this.matchesType(", "-\t\t\tsimpleNamePattern, ", "-\t\t\tqualificationPattern, ", "-\t\t\tqualifiedPackageName.length == 0 ? ", "-\t\t\t\tqualifiedSourceName : ", "-\t\t\t\tCharOperation.concat(qualifiedPackageName, qualifiedSourceName, '.'))) {", "-\t\treturn ACCURATE_MATCH;", "-\t} else {", "-\t\treturn IMPOSSIBLE_MATCH;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7cb19cf157db79068a7a509272785a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "signatureAfterChange": "\r protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type)", "diff": ["+ */\r", "+protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "+\tif (type == null) return false; \r", "+\treturn \r", "+\t\tthis.matchesType(\r", "+\t\t\tsimpleNamePattern, \r", "+\t\t\tqualificationPattern, \r", "+\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "+\t\t\t\ttype.qualifiedSourceName() : \r", "+\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.')\r", "+\t\t);\r", "+}\r", "- */\r", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding type) {\r", "-\tif (type == null) return INACCURATE_MATCH;\r", "-\tif (this.matchesType(\r", "-\t\t\tsimpleNamePattern, \r", "-\t\t\tqualificationPattern, \r", "-\t\t\ttype.qualifiedPackageName().length == 0 ? \r", "-\t\t\t\ttype.qualifiedSourceName() : \r", "-\t\t\t\tCharOperation.concat(type.qualifiedPackageName(), type.qualifiedSourceName(), '.'))) {\r", "-\t\treturn ACCURATE_MATCH;\r", "-\t} else {\r", "-\t\treturn IMPOSSIBLE_MATCH;\r"]}], "num": 43430}