{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d45d07af28414d36fb7e54b47fc9ad95", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5b837bc620ca8eb5840bcf5d72f3b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "74ceca813d8e9be557353622cfb1779e5fa562ad", "commitAfterChange": "2d7d544af40c78aee4e80de194acd385e8eab51a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] otherInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] otherInheritedMethods) {", "-\tboolean isAnnotationMember = this.type.isAnnotationType();", "+void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods) {", "+\tif (this.type.isAnnotationType()) { // annotation cannot override any method", "+\t\tproblemReporter().annotationCannotOverrideMethod(currentMethod, methods[length - 1]);", "+\t\treturn; // do not repoort against subsequent inherited methods", "+\t}", "-\t\tif (isAnnotationMember) { // annotation cannot override any method", "-\t\t\tproblemReporter().annotationCannotOverrideMethod(currentMethod, inheritedMethod);", "-\t\t\treturn; // do not repoort against subsequent inherited methods", "-\t\t}", "-\t\tcheckForBridgeMethod(currentMethod, inheritedMethod, otherInheritedMethods);", "+\t\tcheckForBridgeMethod(currentMethod, inheritedMethod, allInheritedMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d649d5322e047276f7a31cccb233239e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a510ea82e69cf57e5501100da81589ab64a9b9cc", "commitAfterChange": "d939c06c1bb86210ecdbf93881e5113054d8f519", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic ClassFile( \t\tSourceTypeBinding aType, \t\tClassFile enclosingClassFile, \t\tboolean creatingProblemType)", "signatureAfterChange": " \tpublic ClassFile( \t\tSourceTypeBinding aType, \t\tClassFile enclosingClassFile, \t\tboolean creatingProblemType)", "diff": ["-\t\tproduceDebugAttributes = options.produceDebugAttributes;", "+\t\tproduceAttributes = options.produceDebugAttributes;", "-\t\tfinal boolean target16 = this.targetJDK >= ClassFileConstants.JDK1_6;", "-\t\tthis.generateStackMapTable = target16;", "-\t\tif (target16) {", "+\t\tif (this.targetJDK >= ClassFileConstants.JDK1_6) {", "+\t\t\tthis.produceAttributes |= ClassFileConstants.ATTR_STACK_MAP;"]}], "num": 38112}