{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fe7d662acaf37a7a4adb4af3e6c0847", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "699640f1970c66b95d3eb9c9aa8c95fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tprotected String getPackageName(IFolder folder) throws JavaModelException", "signatureAfterChange": "\r protected String getPackageName(IFolder folder) throws JavaModelException", "diff": ["-\t */\r", "-\tprotected String getPackageName(IFolder folder) throws JavaModelException {\r", "-\t\tIPath myPath = getPath();\r", "-\t\tIPath pkgPath = folder.getFullPath();\r", "-\t\tint mySegmentCount = myPath.segmentCount();\r", "-\t\tint pkgSegmentCount = pkgPath.segmentCount();\r", "-\t\tStringBuffer name = new StringBuffer(IPackageFragment.DEFAULT_PACKAGE_NAME);\r", "-\t\tfor (int i = mySegmentCount; i < pkgSegmentCount; i++) {\r", "-\t\t\tif (i > mySegmentCount) {\r", "-\t\t\t\tname.append(\".\");\r", "-\t\t\t}\r", "-\t\t\tname.append(pkgPath.segment(i));\r", "-\t\t}\r", "-\t\treturn name.toString();\r", "-\t}\r", "+ */\r", "+protected String getPackageName(IFolder folder) throws JavaModelException {\r", "+\tIPath myPath= getPath();\r", "+\tIPath pkgPath= folder.getFullPath();\r", "+\tint mySegmentCount= myPath.segmentCount();\r", "+\tint pkgSegmentCount= pkgPath.segmentCount();\r", "+\tStringBuffer name = new StringBuffer(IPackageFragment.DEFAULT_PACKAGE_NAME);\r", "+\tfor (int i= mySegmentCount; i < pkgSegmentCount; i++) {\r", "+\t\tif (i > mySegmentCount) {\r", "+\t\t\tname.append('.');\r", "+\t\tname.append(pkgPath.segment(i));\r", "+\treturn name.toString();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7dba4661b71a5ffc8e8fb4050e0cf29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "a446855af1d75ce4a9db853f60a76eb10d11782d", "commitAfterChange": "b39119968c7f32d55ae4a97790cb0a2d7d32153a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected char[] toArrayName(char[] simpleName, int dimensions)", "signatureAfterChange": " protected boolean matchesTypeReference(char[] pattern, TypeReference type)", "diff": ["+ */", "+protected boolean matchesTypeReference(char[] pattern, TypeReference type) {", "+\tif (pattern == null) return true; // null is as if it was \"*\"", "+", "+\tchar[][] compoundName = type.getTypeName();", "+\tchar[] simpleName = compoundName[compoundName.length - 1];", "+\tint dimensions = type.dimensions() * 2;", "+\tif (dimensions > 0) {", "+\t\tint length = simpleName.length;", "+\t\tchar[] result = new char[length + dimensions];", "+\t\tSystem.arraycopy(simpleName, 0, result, 0, length);", "+\t\tfor (int i = length, l = result.length; i < l;) {", "+\t\t\tresult[i++] = '[';", "+\t\t\tresult[i++] = ']';", "+\t\t}", "+\t\tsimpleName = result;", "+\t}", "+", "+\treturn matchesName(pattern, simpleName);", "+}", "- */", "-protected char[] toArrayName(char[] simpleName, int dimensions) {", "-\tif (dimensions == 0) return simpleName;", "-\tint length = simpleName.length;", "-\tchar[] result = new char[length + dimensions * 2];", "-\tSystem.arraycopy(simpleName, 0, result, 0, length);", "-\tfor (int i = 0; i < dimensions; i++) {", "-\t\tresult[simpleName.length + i*2] = '[';", "-\t\tresult[simpleName.length + i*2 + 1] = ']';", "-\t}", "-\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c78453cdcf2519e3cbc714a8fecd9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic NameEnvironmentAnswer findType(char[] name, char[][] packages)", "signatureAfterChange": "\r public NameEnvironmentAnswer findType(char[] name, char[][] packages)", "diff": ["+ */\r", "+public NameEnvironmentAnswer findType(char[] name, char[][] packages) {\r", "+\tif (name == null)\r", "+\t\treturn null;\r", "+\tif (packages == null || packages.length == 0)\r", "+\t\treturn find(new String(name), null);\r", "+\t\t\r", "+\tint length = packages.length;\r", "+\tStringBuffer buffer = new StringBuffer(length * 6);\r", "+\tfor(int i = 0; i < length; i++) {\r", "+\t\tbuffer.append(packages[i]);\r", "+\t\tif (i + 1 != length)\r", "+\t\t\tbuffer.append('.');\r", "+\tString className = new String(name);\r", "+\treturn find(className, buffer.toString());\r", "+}\r", "-\t */\r", "-\tpublic NameEnvironmentAnswer findType(char[] name, char[][] packages) {\r", "-\t\tif (name == null)\r", "-\t\t\treturn null;\r", "-\r", "-\t\tif (packages == null || packages.length == 0)\r", "-\t\t\treturn find(new String(name), null);\r", "-\r", "-\t\tint length = packages.length;\r", "-\t\tStringBuffer buffer = new StringBuffer(length * 6);\r", "-\t\tfor (int i = 0; i < length; i++) {\r", "-\t\t\tbuffer.append(packages[i]);\r", "-\t\t\tif (i + 1 != length)\r", "-\t\t\t\tbuffer.append(\".\");\r", "-\t\t}\r", "-\t\tString className = new String(name);\r", "-\t\treturn find(className, buffer.toString());\r", "-\t}\r"]}], "num": 69736}