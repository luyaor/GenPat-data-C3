{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b58800fc59b28d81f82a976ef9a6292", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28620d117cc6ea37e034b37e8073ab1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/GetResourcesTests.java", "commitBeforeChange": "d5e254d0a9c77fa2a79add6067d5064eaaf81ae1", "commitAfterChange": "30d624a69b99891d8c1d0a531a3ee9719784577a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test006() throws JavaModelException", "signatureAfterChange": " \tpublic void test006() throws JavaModelException", "diff": ["-\t\tIPath projectPath = env.addProject(\"Project\", \"1.5\"); //$NON-NLS-1$", "+\t\tIPath projectPath = null;", "+\t\ttry {", "+\t\t\tprojectPath = env.addProject(\"Project\", \"1.5\"); //$NON-NLS-1$", "+\t\t} catch (RuntimeException e) {", "+\t\t\t// no 1.5 VM or above is available", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2d553eed75afe853584d824ee08e00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "425796166fe87ca6859ec25dda216910325a546d", "commitAfterChange": "acb78a276c067a425abc6d87dbb7eb61d13a2cd0", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tprivate boolean isOnClasspath(IPath path) throws JavaModelException", "signatureAfterChange": " \tprivate boolean isOnClasspath(IPath path)", "diff": ["-\tprivate boolean isOnClasspath(IPath path) throws JavaModelException {", "-\t\tIClasspathEntry[] classpath = this.getResolvedClasspath(true/*ignore unresolved variable*/);", "+\tprivate boolean isOnClasspath(IPath path) {", "+\t\tIClasspathEntry[] classpath;", "+\t\ttry {", "+\t\t\tclasspath = this.getResolvedClasspath(true/*ignore unresolved variable*/);", "+\t\t} catch(JavaModelException e){", "+\t\t\treturn false; // not a Java project", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13be7fba6e010ba0b125596f5d3dfe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "82df20b890997b460029c62b45168bb5a5634394", "commitAfterChange": "420d9d48be0a94236d75f55da361f3eeb5245f54", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\t\tIClasspathEntry[] classpath = ((JavaProject) projects[i]).getResolvedClasspath();", "+\t\t\t\t\tIClasspathEntry[] classpath;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tclasspath = ((JavaProject) projects[i]).getResolvedClasspath();", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// project no longer exist: ignore", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}"]}], "num": 30406}