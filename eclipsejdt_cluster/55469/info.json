{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8c7a183d27629797a1c388a23867b7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ba2cf50d7b76bf9dde807431dddd7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "f797a4fefd78f3a1e278248a5427c284f913a1e4", "commitAfterChange": "aa4e1bcbd015d2517f92b0ecb8f5e5cc59766723", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tITypeBinding resolveType(Type type)", "signatureAfterChange": "\r \tITypeBinding resolveType(Type type)", "diff": ["-\t\tAstNode node = (AstNode) this.newAstToOldAst.get(type);\r", "+\t\tint index = 0;\r", "+\t\tASTNode parentType = type.getParent();\r", "+\t\tType arrayType = null;\r", "+\t\twhile ((parentType instanceof Type) && ((Type) parentType).isArrayType()) {\r", "+\t\t\tarrayType = (Type) parentType;\r", "+\t\t\tparentType = parentType.getParent();\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tAstNode node = null;\r", "+\t\tif (index != 0) {\r", "+\t\t\tnode = (AstNode) this.newAstToOldAst.get(arrayType);\r", "+\t\t} else {\r", "+\t\t\tnode = (AstNode) this.newAstToOldAst.get(type);\r", "+\t\t}\r", "-\t\t\t\treturn this.getTypeBinding(typeReference.binding);\r", "+\t\t\t\tITypeBinding typeBinding = this.getTypeBinding(typeReference.binding);\r", "+\t\t\t\tif (index != 0) {\r", "+\t\t\t\t\tif (typeBinding.isArray()) {\r", "+\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)typeReference.binding;\r", "+\t\t\t\t\t\tif (index == arrayBinding.dimensions) {\r", "+\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding.leafComponentType);\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tfor (int i = 0; i < index; i++) {\r", "+\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn typeBinding;\r", "+\t\t\t\t}\r", "-\t\t\t\t\treturn this.getTypeBinding((ReferenceBinding)singleNameReference.binding);\r", "+\t\t\t\t\tITypeBinding typeBinding = this.getTypeBinding((ReferenceBinding)singleNameReference.binding);\r", "+\t\t\t\t\tif (index != 0) {\r", "+\t\t\t\t\t\tif (typeBinding.isArray()) {\r", "+\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)singleNameReference.binding;\r", "+\t\t\t\t\t\t\tif (index == arrayBinding.dimensions) {\r", "+\t\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding.leafComponentType);\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < index; i++) {\r", "+\t\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn null;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn typeBinding;\r", "+\t\t\t\t\t}\r", "-\t\t\t\t\treturn this.getTypeBinding((ReferenceBinding)qualifiedNameReference.binding);\r", "+\t\t\t\t\tITypeBinding typeBinding = this.getTypeBinding((ReferenceBinding)qualifiedNameReference.binding);\r", "+\t\t\t\t\tif (index != 0) {\r", "+\t\t\t\t\t\tif (typeBinding.isArray()) {\r", "+\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)qualifiedNameReference.binding;\r", "+\t\t\t\t\t\t\tif (index == arrayBinding.dimensions) {\r", "+\t\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding.leafComponentType);\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < index; i++) {\r", "+\t\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\treturn null;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn typeBinding;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de92b64f1b08a4351355b9a4447246ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "dc897dd3e4818ca2b15bd3d143de606b0ce0335f", "commitAfterChange": "8536e94c328f058d5f377b8328af7061c65f8af1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tITypeBinding resolveType(Type type)", "signatureAfterChange": " \tITypeBinding resolveType(Type type)", "diff": ["-\t\tint index = 0;", "-\t\tif (node == null) {", "-\t\t\tType arrayType = null;", "-\t\t\tASTNode parentType = type.getParent();", "-\t\t\tif (parentType instanceof ArrayCreation) {", "-\t\t\t\tnode = (AstNode) this.newAstToOldAst.get(parentType);", "-\t\t\t} else {", "-\t\t\t\t// we try to retrieve the type as an element type of an array type", "-\t\t\t\twhile ((parentType instanceof Type) && ((Type) parentType).isArrayType()) {", "-\t\t\t\t\tarrayType = (Type) parentType;", "-\t\t\t\t\tparentType = parentType.getParent();", "-\t\t\t\t\tindex++;", "-\t\t\t\t}", "-\t\t\t\tif (index != 0) {", "-\t\t\t\t\tnode = (AstNode) this.newAstToOldAst.get(arrayType);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\torg.eclipse.jdt.internal.compiler.lookup.TypeBinding binding = null;", "-\t\t\t\tif (typeReference.binding == null || !typeReference.binding.isValidBinding()) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t\tITypeBinding typeBinding = this.getTypeBinding(typeReference.binding);", "-\t\t\t\tif (typeBinding == null) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t\tif (index != 0) {", "-\t\t\t\t\tif (typeBinding.isArray()) {", "-\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)typeReference.binding;", "-\t\t\t\t\t\tif (index == arrayBinding.dimensions) {", "-\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding.leafComponentType);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tfor (int i = 0; i < index; i++) {", "-\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (type.isArrayType()) {", "-\t\t\t\t\t\tArrayType array = (ArrayType) type;", "-\t\t\t\t\t\tif (typeBinding.getDimensions() != array.getDimensions()) {", "-\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)typeReference.binding;", "-\t\t\t\t\t\t\tfor (int i = 0, max = typeBinding.getDimensions() - array.getDimensions(); i < max; i++) {", "-\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (typeBinding.isArray() && type.isSimpleType()) {", "-\t\t\t\t\t\treturn this.getTypeBinding(((ArrayBinding)typeReference.binding).leafComponentType());", "-\t\t\t\t\t}", "-\t\t\t\t\treturn typeBinding;", "-\t\t\t\t}", "-\t\t\t} else if (node instanceof SingleNameReference) {", "-\t\t\t\tSingleNameReference singleNameReference = (SingleNameReference) node;", "-\t\t\t\tif (singleNameReference.binding == null || !singleNameReference.binding.isValidBinding()) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t\tif (singleNameReference.isTypeReference()) {", "-\t\t\t\t\tITypeBinding typeBinding = this.getTypeBinding((ReferenceBinding)singleNameReference.binding);", "-\t\t\t\t\tif (typeBinding == null) {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (index != 0) {", "-\t\t\t\t\t\tif (typeBinding.isArray()) {", "-\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)singleNameReference.binding;", "-\t\t\t\t\t\t\tif (index == arrayBinding.dimensions) {", "-\t\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding.leafComponentType);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tfor (int i = 0; i < index; i++) {", "-\t\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn typeBinding;", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\t// it should be a type reference", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t} else if (node instanceof QualifiedNameReference) {", "-\t\t\t\tQualifiedNameReference qualifiedNameReference = (QualifiedNameReference) node;", "-\t\t\t\tif (qualifiedNameReference.isTypeReference()) {", "-\t\t\t\t\tif (qualifiedNameReference.binding == null || !qualifiedNameReference.binding.isValidBinding()) {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t\tITypeBinding typeBinding = this.getTypeBinding((ReferenceBinding)qualifiedNameReference.binding);", "-\t\t\t\t\tif (typeBinding == null) {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t} ", "-\t\t\t\t\tif (index != 0) {", "-\t\t\t\t\t\tif (typeBinding.isArray()) {", "-\t\t\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding)qualifiedNameReference.binding;", "-\t\t\t\t\t\t\tif (index == arrayBinding.dimensions) {", "-\t\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding.leafComponentType);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tfor (int i = 0; i < index; i++) {", "-\t\t\t\t\t\t\t\t\tarrayBinding = (ArrayBinding) arrayBinding.elementsType(this.scope);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn this.getTypeBinding(arrayBinding);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\treturn null;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn typeBinding;", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\t// it should be a type reference", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "+\t\t\t\tbinding = typeReference.binding;", "+\t\t\t} else if (node instanceof SingleNameReference && ((SingleNameReference)node).isTypeReference()) {", "+\t\t\t\tbinding = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) (((SingleNameReference)node).binding);", "+\t\t\t} else if (node instanceof QualifiedNameReference && ((QualifiedNameReference)node).isTypeReference()) {", "+\t\t\t\tbinding = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) (((QualifiedNameReference)node).binding);", "-\t\t\t\tArrayAllocationExpression arrayAllocationExpression = (ArrayAllocationExpression) node;", "-\t\t\t\tArrayBinding arrayBinding = arrayAllocationExpression.arrayTb;", "-\t\t\t\tif (arrayBinding == null || !arrayBinding.isValidBinding()) {", "-\t\t\t\t\treturn null;", "+\t\t\t\tbinding = ((ArrayAllocationExpression) node).arrayTb;", "+\t\t\t}", "+\t\t\tif (binding == null || !binding.isValidBinding()) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tif (type.isArrayType()) {", "+\t\t\t\tArrayType arrayType = (ArrayType) type;", "+\t\t\t\tif (binding.isArrayType()) {", "+\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding) binding;", "+\t\t\t\t\treturn getTypeBinding(this.scope.createArray(arrayBinding.leafComponentType, arrayType.getDimensions()));", "+\t\t\t\t} else {", "+\t\t\t\t\treturn getTypeBinding(this.scope.createArray(binding, arrayType.getDimensions()));", "-\t\t\t\tif (index != 0) {", "-\t\t\t\t\treturn this.getTypeBinding(this.scope.createArray(arrayBinding.leafComponentType, arrayBinding.dimensions - index));", "-\t\t\t\t} ", "-\t\t\t\treturn this.getTypeBinding(arrayBinding);", "+\t\t\t} else {", "+\t\t\t\tif (binding.isArrayType()) {", "+\t\t\t\t\tArrayBinding arrayBinding = (ArrayBinding) binding;", "+\t\t\t\t\treturn getTypeBinding(arrayBinding.leafComponentType);", "+\t\t\t\t} else {", "+\t\t\t\t\treturn getTypeBinding(binding);", "+\t\t\t\t}"]}], "num": 55469}