{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08bdb00e8fa38bccd0c0b59439004399", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ad4ee8bb4091d58d79a8bc59638c90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tvoid manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " \tvoid manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\tReferenceBinding superTypeErasure = (ReferenceBinding) binding.declaringClass.erasure();", "+\t\tReferenceBinding superTypeErasure = (ReferenceBinding) this.binding.declaringClass.erasure();", "-\t\t\t\t((LocalTypeBinding) superTypeErasure).addInnerEmulationDependent(currentScope, qualification != null);", "+\t\t\t\t((LocalTypeBinding) superTypeErasure).addInnerEmulationDependent(currentScope, this.qualification != null);", "-\t\t\t\tcurrentScope.propagateInnerEmulation(superTypeErasure, qualification != null);", "+\t\t\t\tcurrentScope.propagateInnerEmulation(superTypeErasure, this.qualification != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3f8abb9df123b5edf1b024e2a2d2514", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "133e081382658fdf4b2c93257a825d3355922192", "commitAfterChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\tReferenceBinding allocatedTypeErasure = (ReferenceBinding) binding.declaringClass.erasure();", "+\t\tReferenceBinding allocatedTypeErasure = (ReferenceBinding) this.binding.declaringClass.erasure();", "-\t\t\t\t((LocalTypeBinding) allocatedTypeErasure).addInnerEmulationDependent(currentScope, enclosingInstance != null);", "+\t\t\t\t((LocalTypeBinding) allocatedTypeErasure).addInnerEmulationDependent(currentScope, this.enclosingInstance != null);", "-\t\t\t\tcurrentScope.propagateInnerEmulation(allocatedTypeErasure, enclosingInstance != null);", "+\t\t\t\tcurrentScope.propagateInnerEmulation(allocatedTypeErasure, this.enclosingInstance != null);"]}], "num": 47158}