{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8160c7335bf4201122e61635ee420838", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917192949957a84734c044e5f85219d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd83ae139f6a8eb3890f448532614d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["- */\r", "-private IType createTypeHandle(char[][] simpleTypeNames) {\r", "-\t// creates compilation unit\r", "-\tCompilationUnit unit = (CompilationUnit) this.currentOpenable;\r", "-\t// create type\r", "-\tint length = simpleTypeNames.length;\r", "-\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\tfor (int i = 1; i < length; i++) {\r", "-\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "-\treturn type;\r", "-}\r", "+\t */\r", "+\tprivate IType createTypeHandle(char[][] simpleTypeNames) {\r", "+\t\t// creates compilation unit\r", "+\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "+\r", "+\t\t// create type\r", "+\t\tint length = simpleTypeNames.length;\r", "+\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\treturn type;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf34e06a20569b9222a69131faf30849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "signatureAfterChange": "\r \tprivate IType createTypeHandle(char[][] simpleTypeNames)", "diff": ["-\t\t// creates compilation unit\r", "-\t\tCompilationUnit unit = (CompilationUnit) this.getCurrentOpenable();\r", "-\r", "-\t\t// create type\r", "-\t\tint length = simpleTypeNames.length;\r", "-\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "-\t\tfor (int i = 1; i < length; i++) {\r", "-\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\tOpenable currentOpenable = this.getCurrentOpenable();\r", "+\t\tif (currentOpenable instanceof CompilationUnit) {\r", "+\t\t\t// creates compilation unit\r", "+\t\t\tCompilationUnit unit = (CompilationUnit)currentOpenable;\r", "+\t\r", "+\t\t\t// create type\r", "+\t\t\tint length = simpleTypeNames.length;\r", "+\t\t\tIType type = unit.getType(new String(simpleTypeNames[0]));\r", "+\t\t\tfor (int i = 1; i < length; i++) {\r", "+\t\t\t\ttype = type.getType(new String(simpleTypeNames[i]));\r", "+\t\t\t}\r", "+\t\t\treturn type;\r", "+\t\t} else {\r", "+\t\t\ttry {\r", "+\t\t\t\treturn ((org.eclipse.jdt.internal.core.ClassFile)currentOpenable).getType();\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "-\t\treturn type;\r"]}], "num": 25906}