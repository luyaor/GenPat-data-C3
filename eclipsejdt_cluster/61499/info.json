{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7f3784cb749ef9058e4e3d9fd4990b3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f8655666bbac29b80adde58a94aa0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "9cee1a1ab489dcab686c4840c5cbf41450bb5e75", "commitAfterChange": "8ff32a67561d85d16e0a42904446ef1ba698078c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["+\t\texpectedProblemAttributes.put(\"ConstructorReferenceNotBelow18\", SKIP);", "+\t\texpectedProblemAttributes.put(\"DefaultMethodNotBelow18\", SKIP);", "+\t\texpectedProblemAttributes.put(\"LambdaExpressionNotBelow18\", SKIP);", "+\t\texpectedProblemAttributes.put(\"MethodReferenceNotBelow18\", SKIP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd70e66cbb7a958420bdf9ff3fd493e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "235acd4d55a5d1530017bd02392adee980469a8e", "commitAfterChange": "440b4b521b7797502e0cf79a706cec62e93966a5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \r \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "\r \r \tpublic Type convertType(TypeReference typeReference)", "diff": ["+\t\t\t\t\ttype.setSourceRange(sourceStart, length);\r", "+\t\t\t\t\ttype.setSourceRange(sourceStart, length);\r", "+\t\t\t\t\ttype.setSourceRange(sourceStart, length);\r", "-\t\t\ttype.setSourceRange(sourceStart, length);\r", "-\t\t\t\ttype.setSourceRange(sourceStart, end - sourceStart + 1);\r", "+\t\t\t\tif (end != -1) {\r", "+\t\t\t\t\ttype.setSourceRange(sourceStart, end - sourceStart + 1);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\ttype.setSourceRange(sourceStart, length);\r", "+\t\t\t\t}\r"]}], "num": 61499}