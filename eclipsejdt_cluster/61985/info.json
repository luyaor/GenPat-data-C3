{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d964fd852481e9063fa4df279fc4a87", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14a6415dd264b1b16b8338e3f761afcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "119ab5f40e72a2e48985fa6b9f7f154cd8ab7391", "commitAfterChange": "8f964ebcfbbe015096db590c4a751ad5a6ca4f58", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "diff": ["-\t\t\t\t}\t", "+\t\t\t\t} else if (alternateLeftTypeId == T_null) {", "+\t\t\t\t\talternateLeftTypeId = leftTypeId;  // tolerate null argument cast", "+\t\t\t\t\tleftIsCast = false;", "+\t\t\t\t}", "+\t\t\t\t} else if (alternateRightTypeId == T_null) {", "+\t\t\t\t\talternateRightTypeId = rightTypeId;  // tolerate null argument cast", "+\t\t\t\t\trightIsCast = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80ace58da90da5897764e43fbc24b28a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "5d7b0ed4ccf6dc91337d9ac62f14ae585f547855", "commitAfterChange": "e706e02e84b0ab73a5fa0bab5675fe627a8c0157", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "diff": ["+\t\t\tif (alternateLeftTypeId > 15 || alternateRightTypeId > 15) { // must convert String + Object || Object + String", "+\t\t\t\tif (alternateLeftTypeId == T_String) {", "+\t\t\t\t\talternateRightTypeId = T_Object;", "+\t\t\t\t} else if (alternateRightTypeId == T_String) {", "+\t\t\t\t\talternateLeftTypeId = T_Object;", "+\t\t\t\t} else {", "+\t\t\t\t\treturn; // invalid operator", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95bc1f1718e80f7df48ad00157cd319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, boolean leftIsCast, Expression right, int rightTypeId, boolean rightIsCast)", "diff": ["-\t\t\t\tif (alternateLeftTypeId == T_String) {", "-\t\t\t\t\talternateRightTypeId = T_Object;", "-\t\t\t\t} else if (alternateRightTypeId == T_String) {", "-\t\t\t\t\talternateLeftTypeId = T_Object;", "+\t\t\t\tif (alternateLeftTypeId == T_JavaLangString) {", "+\t\t\t\t\talternateRightTypeId = T_JavaLangObject;", "+\t\t\t\t} else if (alternateRightTypeId == T_JavaLangString) {", "+\t\t\t\t\talternateLeftTypeId = T_JavaLangObject;"]}], "num": 61985}