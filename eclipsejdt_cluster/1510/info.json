{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a39408a2f65165ba03d03acf77603e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b968b919a808e8fc6d727710103e338", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void test065()", "signatureAfterChange": " \tpublic void test065()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX x = new X();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tX x = new X();\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX x2 = xioe;\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ba088d86d32e71b5d555b044e5a17e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "\t\t  \tpublic void test086()", "signatureAfterChange": "\t\t  \tpublic void test086()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tAX ax = new AX();\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tAX ax = new AX();\\n\" + ", "+\t\t\t\"\t            ^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tAX ax2 = ax.p;\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + "]}], "num": 1510}