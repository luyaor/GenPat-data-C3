{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7264e8694b5843fe4e6be489bea0e76e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54847f19c8f14165de89f4b721aa34e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "66645ff7b2e7900a6e51de489fc3a747bdbf1458", "commitAfterChange": "a24bdada3de440570b8b103bca0325b799f298f1", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory,  \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "signatureAfterChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory,  \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "diff": ["-\t", "+// WORK log test files in all failure cases (ez cut and paste)\t", "-\t\t\t\t\tassertTrue(\"Unexpected success\", requestor.hasErrors);", "+\t\t\t\t\tif (!requestor.hasErrors) {", "+\t\t\t\t\t\tlogTestFiles(true, testFiles);", "+\t\t\t\t\t\tfail(\"Unexpected success\");", "+\t\t\t\t\t}", "-\t\t\t\t\tassertEquals(\"Unexpected failure\", \"\", requestor.problemLog);", "+\t\t\t\t\tif (!\"\".equals(requestor.problemLog)) {", "+\t\t\t\t\t\tlogTestFiles(true, testFiles);", "+\t\t\t\t\t\tassertEquals(\"Unexpected failure\", \"\", requestor.problemLog);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a2e3f610c4bc636051f0e0e5f0fcdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testGetText() throws CoreException", "signatureAfterChange": " public void testGetText() throws CoreException", "diff": ["-\t\tassertEquals(\"Unexpected text (1)\", \"p\", buffer.getText(0, 1));", "-\t\tassertEquals(\"Unexpected text (2)\", \"public\", buffer.getText(13, 6));", "-\t\tassertEquals(\"Unexpected text (3)\", \"\", buffer.getText(10, 0));", "+\t\tassertSourceEquals(\"Unexpected text (1)\", \"p\", buffer.getText(0, 1));", "+\t\tassertSourceEquals(\"Unexpected text (2)\", \"public\", buffer.getText(13, 6));", "+\t\tassertSourceEquals(\"Unexpected text (3)\", \"\", buffer.getText(10, 0));"]}], "num": 69577}