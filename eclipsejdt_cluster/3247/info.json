{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e3f0251ab4ab5cb096ed7dfd24343cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d18bb48c8e7b2cfce27783544c290b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tvoid parseSingleName() throws InvalidInputException", "signatureAfterChange": "  \tprivate void pushParamName(Argument arg)", "diff": ["-\tvoid parseSingleName() throws InvalidInputException {", "-\t\tif (readToken(TerminalTokens.TokenNameIdentifier)) {", "-\t\t\tpushIdentifier();", "-\t\t\treturn;", "-\t\t}", "-\t\tthrow new InvalidInputException();", "-\t\t", "-\t}", "+", "+\tprivate void pushParamName(Argument arg) {", "+\t\t// TODO: (frederic) To be changed when mixed tags declaration will be accepted ", "+\t\tswitch (this.astLengthPtr) {", "+\t\t\tcase -1:\t// push first param name", "+\t\t\t\tpushOnAstStack(arg, true);", "+\t\t\t\tbreak;", "+\t\t\tcase 0:\t\t// push other param name", "+\t\t\t\tpushOnAstStack(arg, false);", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tthis.sourceParser.problemReporter().annotationUnexpectedTag(arg.declarationSourceStart, arg.declarationSourceEnd);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9908d23784b98276954374c6dffcf026", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "bbb21a5affc4d3b9808e8ab897f64d3b1e68b6b2", "commitAfterChange": "e57c1379bf2ab200d310135306edb2776411f753", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void setIdentifier(String identifier)", "signatureAfterChange": "  \tpublic void setIdentifier(String identifier)", "diff": ["-\t\tscanner.resetTo(0, length);", "+\t\tscanner.resetTo(0, length - 1);", "-\t\t\tint tokenType = scanner.getNextToken();", "-\t\t\tswitch(tokenType) {", "-\t\t\t\tcase TerminalTokens.TokenNameIdentifier:", "-\t\t\t\t\tif (scanner.getCurrentTokenEndPosition() != length - 1) {", "-\t\t\t\t\t\t// this is the case when there is only one identifier see 87849", "-\t\t\t\t\t\tthrow new IllegalArgumentException();", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\tint tokenType = scanner.scanIdentifier();", "+\t\t\tif (tokenType != TerminalTokens.TokenNameIdentifier) {", "+\t\t\t\tthrow new IllegalArgumentException();", "+\t\t\t}", "+\t\t\tif (scanner.currentPosition != length) {", "+\t\t\t\t// this is the case when there is only one identifier see 87849", "+\t\t\t\tthrow new IllegalArgumentException();"]}], "num": 3247}