{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8113d2565439554e69ad209178423914", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7a3a6ad03d04f6ecf639d9cacf08ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " private void verifyConstantEqualsAndHashcode( \t\tObject constant, \t\tObject constant2, \t\tObject constant3, \t\tObject constant4)", "signatureAfterChange": " private void verifyConstantEqualsAndHashcode( \t\tObject o, \t\tObject o2, \t\tObject o3, \t\tObject o4)", "diff": ["-\t\tObject constant,", "-\t\tObject constant2,", "-\t\tObject constant3,", "-\t\tObject constant4) {", "-\tassertTrue(constant.equals(constant));", "-\tassertTrue(constant.equals(constant3));", "-\tassertFalse(constant.equals(constant2));", "-\tassertFalse(constant.equals(constant4));", "-\tassertFalse(constant.equals(null));", "-\tassertFalse(constant.hashCode() == constant2.hashCode());", "-\tassertNotNull(constant.toString());", "+\t\tObject o,", "+\t\tObject o2,", "+\t\tObject o3,", "+\t\tObject o4) {", "+\tassertTrue(o.equals(o));", "+\tassertTrue(o.equals(o3));", "+\tassertFalse(o.equals(o2));", "+\tassertFalse(o.equals(o4));", "+\tassertFalse(o.equals(null));", "+\tassertFalse(o.hashCode() == o2.hashCode());", "+\tassertNotNull(o.toString());", "+\t", "+\tif (o instanceof Constant) {", "+\t\tassertTrue(\"Not the same values\", ((Constant) o).hasSameValue((Constant) o3));", "+\t\tassertFalse(\"Have same values\", ((Constant) o).hasSameValue((Constant) o2));", "+\t\tassertFalse(\"Have same values\", ((Constant) o).hasSameValue((Constant) o4));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8ee83b8c86f543a17e3c7459372964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "commitAfterChange": "c01ae722f1b8e267f566f56a56228af04d49effb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object getConstant() throws JavaModelException", "signatureAfterChange": " public Object getConstant() throws JavaModelException", "diff": ["+\tif (this.constant != null) {", "+\t\treturn this.constant;", "+\t}", "-\treturn info.initializationSource;", "+\tif (info.initializationSource == null) {", "+\t\treturn null;", "+\t}", "+\t\t\t", "+\tString constantSource = new String(info.initializationSource);", "+\tString signature = info.getTypeSignature();", "+\tif (signature.equals(Signature.SIG_INT)) {", "+\t\tthis.constant = new Integer(constantSource);", "+\t} else if (signature.equals(Signature.SIG_SHORT)) {", "+\t\tthis.constant = new Short(constantSource);", "+\t} else if (signature.equals(Signature.SIG_BYTE)) {", "+\t\tthis.constant = new Byte(constantSource);", "+\t} else if (signature.equals(Signature.SIG_BOOLEAN)) {", "+\t\tthis.constant = new Boolean(constantSource);", "+\t} else if (signature.equals(Signature.SIG_CHAR)) {", "+\t\tthis.constant = new Character(constantSource.charAt(0));", "+\t} else if (signature.equals(Signature.SIG_DOUBLE)) {", "+\t\tthis.constant = new Double(constantSource);", "+\t} else if (signature.equals(Signature.SIG_FLOAT)) {", "+\t\tthis.constant = new Float(constantSource);", "+\t} else if (signature.equals(Signature.SIG_LONG)) { ", "+\t\tthis.constant = new Long(constantSource);", "+\t} else if (signature.equals(\"QString;\")) {//$NON-NLS-1$", "+\t\tthis.constant = constantSource;", "+\t}", "+\treturn this.constant;"]}], "num": 45969}