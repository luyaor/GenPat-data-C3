{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d1aa794790e2bf11210ae48402f898b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ea137fa9e97f3ec77051b1a9794852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (isPolyExpression()) {", "-\t\t\t\tif (this.expectedType == null) {", "-\t\t\t\t\tthis.polyExpressionScope = scope; // preserve for eventual resolution/error reporting.", "-\t\t\t\t}", "-\t\t\t}", "-", "-\t\t\t/* Not reached as of now as we don't evaluate conditional expressions multiple times, left in for now.", "-\t\t\t   If in future, we change things so control reaches here, a precondition is that this.expectedType is", "-\t\t\t   the final target type.", "-\t\t\t*/", "+", "+\t\t\t", "+\t\t\tif (this.originalValueIfTrueType == null || !this.originalValueIfTrueType.isValidBinding())", "+\t\t\t\treturn this.resolvedType = null;", "+\t\t\tif (this.originalValueIfFalseType == null || !this.originalValueIfFalseType.isValidBinding())", "+\t\t\t\treturn this.resolvedType = null;", "-\t\t\t\tthis.polyExpressionScope = scope; // preserve for eventual resolution/error reporting.", "-\t\t\tcomputeConversions(scope, this.expectedType);", "-\t\t\treturn this.resolvedType = this.expectedType;", "+\t\t\treturn this.resolvedType = computeConversions(scope, this.expectedType) ? this.expectedType : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04488ed297e7e57be1a126f39ed2981", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tupdateIndex(element, delta);\r", "-\t\t\telementAdded(element, delta);\r", "+\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\tthis.elementAdded(element, delta);\r", "-\t\t\tupdateIndex(element, delta);\r", "-\t\t\telementRemoved(element, delta);\r", "+\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\tthis.elementRemoved(element, delta);\r", "+\t\t\t\t// content has changed\r", "-\t\t\t\tupdateIndex(element, delta);\r", "-\t\t\t\tcontentChanged(element, delta);\r", "-\t\t\t} else if ((flags & IResourceDelta.OPEN) != 0) {\r", "-\t\t\t\telement = this.createElement(delta.getResource(), elementType, project);\r", "+\t\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\t\tthis.contentChanged(element, delta);\r", "+\t\t\t} else if (elementType == IJavaElement.JAVA_PROJECT\r", "+\t\t\t\t\t&& (flags & IResourceDelta.OPEN) != 0) {\r", "+\t\t\t\t// project has been opened or closed\r", "+\t\t\t\tIProject res = (IProject)delta.getResource();\r", "+\t\t\t\telement = this.createElement(res, elementType, project);\r", "-\t\t\t\tupdateIndex(element, delta);\r", "-\t\t\t\tif (isOpen(delta.getResource())) {\r", "-\t\t\t\t\telementOpened(element, delta);\r", "+\t\t\t\tif (res.isOpen()) {\r", "+\t\t\t\t\tthis.elementOpened(element, delta);\r", "-\t\t\t\t\telementClosed(element, delta);\r", "+\t\t\t\t\tthis.elementClosed(element, delta);\r", "+\t\t\t\tthis.updateIndex(element, delta);\r"]}], "num": 31362}