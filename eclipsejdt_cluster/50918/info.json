{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ab8815633290b747e2979d0e11f4fd6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed2e592ed155a055ed5d9383636da25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "c3bc9435ae5f771b490381d71d5245c83cf6d0cb", "commitAfterChange": "9a37cc8c27d2ce81469956404b5e25a8551c0848", "methodNumberBeforeChange": 296, "methodNumberAfterChange": 296, "signatureBeforeChange": " \tpublic void test0652() throws CoreException", "signatureAfterChange": " \tpublic void test0652() throws CoreException", "diff": ["-\t\t\t\t\"11. ERROR in /Converter/src/TestCharset.java (at line 17)\\n\" +", "+\t\t\t\t\"11. ERROR in /Converter/src/TestCharset.java (at line 10)\\n\" +", "+\t\t\t\t\"\tCharsetDecoder(CharSet\\n\" +", "+\t\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"Return type for the method is missing\\n\" +", "+\t\t\t\t\"12. ERROR in /Converter/src/TestCharset.java (at line 11)\\n\" +", "+\t\t\t\t\"\tprotected CoderResult decodeLoop(ByteBuffer in,\\n\" +", "+\t\t\t\t\"\t          ^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"CoderResult cannot be resolved to a type\\n\" +", "+\t\t\t\t\"13. ERROR in /Converter/src/TestCharset.java (at line 11)\\n\" +", "+\t\t\t\t\"\tprotected CoderResult decodeLoop(ByteBuffer in,\\n\" +", "+\t\t\t\t\"\t                                 ^^^^^^^^^^\\n\" +", "+\t\t\t\t\"ByteBuffer cannot be resolved to a type\\n\" +", "+\t\t\t\t\"14. ERROR in /Converter/src/TestCharset.java (at line 12)\\n\" +", "+\t\t\t\t\"\tCharBuffer out) {\\n\" +", "+\t\t\t\t\"\t^^^^^^^^^^\\n\" +", "+\t\t\t\t\"CharBuffer cannot be resolved to a type\\n\" +", "+\t\t\t\t\"15. ERROR in /Converter/src/TestCharset.java (at line 17)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b99ca0e52fe0c87e4e90ce4ef7dc4ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "2824ba5423780c179acf9a0b6a91351bf791cbe9", "commitAfterChange": "88e68aadcb2bef0d42f85bcbc67cd3093bf6d159", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void setUpGenericJar() throws IOException, CoreException", "signatureAfterChange": " private void setUpGenericJar() throws IOException, CoreException", "diff": ["+\t\t\"  void foo(boolean b, X<? extends X> x) {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"  void foo(float f, X<?> x) {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"  void foo(Y<? extends Integer, ? extends Object> y) {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"  void foo(Z.Inner<Object> inner) {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"  void foo(AType<Object> t) {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Y<K, V> {\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z {\\n\" +", "+\t\t\"  class Inner<E> {\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class AType<E> {\\n\" + // type name containing character 'T'"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84318427b904547fd8b947113633df4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "b524a2e75280a0f2690531c4f00fea7a6004673b", "commitAfterChange": "7e90cfc843b0651b2df6811a5c412b5db3d07d3e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test008() throws Exception", "signatureAfterChange": " \tpublic void test008() throws Exception", "diff": ["-\t\t\t\t\t\"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\\n\" +", "+\t\t\t\t\t\"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_PARAMETER)\\n\" +", "-\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\t@Marker int p;\\n\" + ", "+\t\t\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\t\t\"The annotation @Marker is disallowed for this location\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tfinal @Marker int q;\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\t\"The annotation @Marker is disallowed for this location\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\t@Marker final int r;\\n\" + ", "+\t\t\t\t\"\t^^^^^^^\\n\" + ", "+\t\t\t\t\"The annotation @Marker is disallowed for this location\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8452d1127c2f6298105466f3f4514c9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tpublic void test223()", "signatureAfterChange": " \tpublic void test223()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\t= new HashMap<String, Class>();\\n\" + ", "+\t\t\t\"\t                      ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"\tMX<Class> mx2 = new MX<Class>();\\n\" + ", "+\t\t\t\"\t   ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"\tMX<Class> mx2 = new MX<Class>();\\n\" + ", "+\t\t\t\"\t                       ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 18)\\n\" + "]}], "num": 50918}