{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da3ec473d387381771c9ccf6b5ba080b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ed3f04c6bc6e258d0e483a8a172408", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "commitAfterChange": "1e3ac51cb3938f7e9fd57cd2551e590148671265", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "\r public void illegalVoidExpression(AstNode location)", "signatureAfterChange": "\r public void illegalVoidExpression(AstNode location)", "diff": ["-\t\tInvalidVoidExpression,\r", "+\t\tIProblem.InvalidVoidExpression,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69938117ca34952a027afa9f3b066a79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "commitAfterChange": "1e3ac51cb3938f7e9fd57cd2551e590148671265", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "\r public void invalidTypeReference(Expression expression)", "signatureAfterChange": "\r public void invalidTypeReference(Expression expression)", "diff": ["-\t\tInvalidTypeExpression,\r", "+\t\tIProblem.InvalidTypeExpression,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ac79d2bfe620f214c3a8a8f7cf63cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "commitAfterChange": "1e3ac51cb3938f7e9fd57cd2551e590148671265", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "\r public void invalidUnaryExpression(Expression expression)", "signatureAfterChange": "\r public void invalidUnaryExpression(Expression expression)", "diff": ["-\t\tInvalidUnaryExpression,\r", "+\t\tIProblem.InvalidUnaryExpression,\r"]}], "num": 24665}