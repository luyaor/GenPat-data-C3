{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1f0f2d53188b9cb663ffbe0e2de2545", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66be2216db1c3bafa0c2a55379672684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \tprivate void printIndentationIfNecessary()", "signatureAfterChange": "  \tprivate void printIndentationIfNecessary()", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tprintIndentationIfNecessary(buffer);", "-\t\tif (buffer.length() > 0) {", "+\t\tint indentationColumn = (this.useTab ? this.indentationLevel * this.tabSize : this.indentationLevel)+1;", "+\t\tif (this.column < indentationColumn) {", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tfor (int i = getColumnIndentationLevel(), max = this.indentationLevel; i < max; i++) { ", "+\t\t\t\tif (this.useTab) {", "+\t\t\t\t\tthis.tab(buffer);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.column++;", "+\t\t\t\t\tbuffer.append(this.fillingSpace);", "+\t\t\t\t\tthis.needSpace = false;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "769da3bb687e0bc151ab0894870d1624", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic void printLastComment()", "signatureAfterChange": "   \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "diff": ["-", "-\tpublic void printLastComment() {", "-\t\tthis.printComment();", "-\t\tif (positionsToMap != null) {", "-\t\t\tthis.mapRemainingPositions();", "-\t\t}", "-\t}", "+", "+\tprivate void printIndentationIfNecessary(StringBuffer buffer) {", "+\t\tint indentationColumn = (this.useTab ? this.indentationLevel * this.tabSize : this.indentationLevel)+1;", "+\t\tif (this.column < indentationColumn) {", "+\t\t\tfor (int i = getColumnIndentationLevel(), max = this.indentationLevel; i < max; i++) { ", "+\t\t\t\tif (this.useTab) {", "+\t\t\t\t\tthis.tab(buffer);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.column++;", "+\t\t\t\t\tbuffer.append(this.fillingSpace);", "+\t\t\t\t\tthis.needSpace = false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 32812}