{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e7dbc3b124ed96d18922c9806608d16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2adb89d7482290c46bfc4445334bb844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "b36a137cc1f0fb3b34ff097a37fce4ecbf12fde7", "commitAfterChange": "8c1c24f11889e708a63d72ff98b6b9dc79890757", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic PropertyLocation getPropertyLocation(Object value, int kind)", "signatureAfterChange": " \t \tpublic PropertyLocation getPropertyLocation(Object value, int kind)", "diff": ["-\t\tfor (int i= 0; i < this.events.size(); i++) {", "-\t\t\tEventHolder holder= (EventHolder) this.events.get(i);", "-\t\t\tRewriteEvent event= holder.event;", "-\t\t\tif (isNodeInEvent(event, value, kind)) {", "-\t\t\t\treturn new PropertyLocation(holder.parent, holder.childProperty);", "-\t\t\t}", "-\t\t\tif (event.isListRewrite()) {", "-\t\t\t\tRewriteEvent[] children= event.getChildren();", "-\t\t\t\tfor (int k= 0; k < children.length; k++) {", "-\t\t\t\t\tif (isNodeInEvent(children[k], value, kind)) {", "-\t\t\t\t\t\treturn new PropertyLocation(holder.parent, holder.childProperty);", "+\t\tfor (Iterator iter= this.eventLookup.values().iterator(); iter.hasNext();) {", "+\t\t\tList events= (List) iter.next();", "+\t\t\tfor (int i= 0; i < events.size(); i++) {", "+\t\t\t\tEventHolder holder= (EventHolder) events.get(i);", "+\t\t\t\tRewriteEvent event= holder.event;", "+\t\t\t\tif (isNodeInEvent(event, value, kind)) {", "+\t\t\t\t\treturn new PropertyLocation(holder.parent, holder.childProperty);", "+\t\t\t\t}", "+\t\t\t\tif (event.isListRewrite()) {", "+\t\t\t\t\tRewriteEvent[] children= event.getChildren();", "+\t\t\t\t\tfor (int k= 0; k < children.length; k++) {", "+\t\t\t\t\t\tif (isNodeInEvent(children[k], value, kind)) {", "+\t\t\t\t\t\t\treturn new PropertyLocation(holder.parent, holder.childProperty);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ec4610d5e602a33befdb2e79aa5ac86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "b36a137cc1f0fb3b34ff097a37fce4ecbf12fde7", "commitAfterChange": "8c1c24f11889e708a63d72ff98b6b9dc79890757", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic RewriteEvent findEvent(Object value, int kind)", "signatureAfterChange": " \tpublic RewriteEvent findEvent(Object value, int kind)", "diff": ["-\t\tfor (int i= 0; i < this.events.size(); i++) {", "-\t\t\tRewriteEvent event= ((EventHolder) this.events.get(i)).event;", "-\t\t\tif (isNodeInEvent(event, value, kind)) {", "-\t\t\t\treturn event;", "-\t\t\t}", "-\t\t\tif (event.isListRewrite()) {", "-\t\t\t\tRewriteEvent[] children= event.getChildren();", "-\t\t\t\tfor (int k= 0; k < children.length; k++) {", "-\t\t\t\t\tif (isNodeInEvent(children[k], value, kind)) {", "-\t\t\t\t\t\treturn children[k];", "+\t\tfor (Iterator iter= this.eventLookup.values().iterator(); iter.hasNext();) {", "+\t\t\tList events= (List) iter.next();", "+\t\t\tfor (int i= 0; i < events.size(); i++) {", "+\t\t\t\tRewriteEvent event= ((EventHolder) events.get(i)).event;", "+\t\t\t\tif (isNodeInEvent(event, value, kind)) {", "+\t\t\t\t\treturn event;", "+\t\t\t\t}", "+\t\t\t\tif (event.isListRewrite()) {", "+\t\t\t\t\tRewriteEvent[] children= event.getChildren();", "+\t\t\t\t\tfor (int k= 0; k < children.length; k++) {", "+\t\t\t\t\t\tif (isNodeInEvent(children[k], value, kind)) {", "+\t\t\t\t\t\t\treturn children[k];", "+\t\t\t\t\t\t}"]}], "num": 37374}