{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a1d44cf26ac6a2f92bf7a1e3ca24f45", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fe79dd921c1fb5e90a64cf14840a883", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "70337366d47ddb1b6bf810cfbab10722a3defded", "commitAfterChange": "4264b3d6b24e1d383a61389ea63fe7d21d4ef1c4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " private static void initVersion(StringBuffer buffer)", "signatureAfterChange": " private static void initVersion(StringBuffer buffer)", "diff": ["+\tString patch_line = null;", "+\t\t\t\t\tpatch_line = line;", "-\t\t\t\t\tString version = tokenizer.nextToken();", "-\t\t\t\t\tif (version.length() == 3 && version.charAt(0) == 'v') {", "-\t\t\t\t\t\tPATCH_VERSION = version;", "-\t\t\t\t\t}", "-\t\tbuffer.append(PATCH_BUG);", "-\t\tbuffer.append(' ');", "-\t\tbuffer.append(PATCH_VERSION);", "-\t\tbuffer.append(\" applied on \");", "+\t\tbuffer.append('\\'');", "+\t\tbuffer.append(patch_line);", "+\t\tbuffer.append(\"' applied on \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f61ca0d7e5c48d2a5469e83d8f69429c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMType.java", "commitBeforeChange": "79d0c2f491160c45c925011f7ac69394bca87445", "commitAfterChange": "5e822caf41e5c8401dd961b84bb7f6d0d93a554e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected void appendMemberDeclarationContents(CharArrayBuffer  buffer)", "signatureAfterChange": "\r protected void appendMemberDeclarationContents(CharArrayBuffer  buffer)", "diff": ["-\t\t\t\tbuffer.append(\" extends \");\r", "+\t\t\t\tbuffer.append(\" extends \"/*nonNLS*/);\r", "-\t\t\t\tbuffer.append(\" implements \");\r", "+\t\t\t\tbuffer.append(\" implements \"/*nonNLS*/);\r", "-\t\t\t\tbuffer.append(\" \");\r", "+\t\t\t\tbuffer.append(' ');\r", "-\t\t\t\t\tbuffer.append(\" \");\r", "+\t\t\t\t\tbuffer.append(' ');\r", "-\t\t\t\tbuffer.append(\" extends \");\r", "+\t\t\t\tbuffer.append(\" extends \"/*nonNLS*/);\r", "-\t\t\t\tbuffer.append(\" \");\r", "+\t\t\t\tbuffer.append(' ');\r"]}], "num": 1290}