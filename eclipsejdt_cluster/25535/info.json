{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb6c0d9babba78b8e607387647d20424", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059e887f9ab4fa85ef4086fb44856374", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void processAnnotations(ICompilationParticipantResult[] allfiles)", "signatureAfterChange": " \t \tpublic void processAnnotations(ICompilationParticipantResult[] allfiles)", "diff": ["-\t\tfinally {", "-\t\t\tif (_isBatch) {", "-\t\t\t\t// In order to keep from locking jars, we explicitly close any batch-based", "-\t\t\t\t// classloaders we opened", "-\t\t\t\tAnnotationProcessorFactoryLoader.getLoader().closeBatchClassLoader();", "-\t\t\t}", "+\t\tfinally {\t\t\t", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe770582b9abb549e79079b7ae180c40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "5abd1ee1b70e462326f31eebb9828d44dfca68e9", "commitAfterChange": "e5dc9955d70be2318753a2da74e8119f31103afc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate static ClassLoader _createIterativeClassLoader( Map<FactoryContainer, FactoryPath.Attributes> containers )", "signatureAfterChange": " \tprivate static ClassLoader _createIterativeClassLoader( Map<FactoryContainer, FactoryPath.Attributes> containers )", "diff": ["-\t\t\tcl = createClassLoader( fileList, AnnotationProcessorFactoryLoader.class.getClassLoader() );", "+\t\t\tcl = createClassLoader( fileList, getParentClassLoader());", "-\t\t\tcl = AnnotationProcessorFactoryLoader.class.getClassLoader();", "+\t\t\tcl = getParentClassLoader();"]}], "num": 25535}