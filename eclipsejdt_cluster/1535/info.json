{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b27cd0b073d31e98d56e1d906b2dfc43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5b7dd0995f92742cfdb5291cea2030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/HierarchyOnWorkingCopiesTests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test429537() throws CoreException, IOException", "signatureAfterChange": " public void test429537() throws CoreException, IOException", "diff": ["-\t\t\t\t\t\t\t\"  Lambda(I) [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\" + ", "-\t\t\t\t\t\t\t\"  Lambda(I) [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\" + ", "-\t\t\t\t\t\t\t\"  Lambda(I) [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\" + ", "-\t\t\t\t\t\t\t\"  Lambda(I) [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\",", "+\t\t\t\t\t\t\t\"  <lambda #1> [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\" + ", "+\t\t\t\t\t\t\t\"  <lambda #1> [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\" + ", "+\t\t\t\t\t\t\t\"  <lambda #1> [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\" + ", "+\t\t\t\t\t\t\t\"  <lambda #1> [in main(String[]) [in X [in [Working copy] A.java [in x.y [in src [in P]]]]]]\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308003ec792ebd6826aca273d2876082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "6616b103b53af13bafcc8a32713ca6371865f9c4", "commitAfterChange": "fcd90e4a2f5e40578ea3ad28461a3e5ea180ab4e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["-\t\t\tSystem.out.println(\"Aborted build because project has classpath errors (incomplete or involved in cycle)\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"JavaBuilder: Aborted build because project has classpath errors (incomplete or involved in cycle)\"); //$NON-NLS-1$", "-\t\t\t\t\tSystem.out.println(\"Continued to build even though prereq project \" + p.getName() //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println(\"JavaBuilder: Continued to build even though prereq project \" + p.getName() //$NON-NLS-1$", "-\t\t\t\t\tSystem.out.println(\"Continued to build even though prereq project \" + p.getName() //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println(\"JavaBuilder: Continued to build even though prereq project \" + p.getName() //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(\"Aborted build because prereq project \" + p.getName() //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"JavaBuilder: Aborted build because prereq project \" + p.getName() //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730683ff5e0c8ea915ba3d79398c15a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "4ce47574d95f211bec6cf02737b4ec30e386f5b1", "commitAfterChange": "6c173db4ca33e9b5b355fdac19466f82485aafe6", "methodNumberBeforeChange": 277, "methodNumberAfterChange": 277, "signatureBeforeChange": " \tpublic void test0276() throws JavaModelException", "signatureAfterChange": " \tpublic void test0276() throws JavaModelException", "diff": ["-\t\t\t\"public void foo() {\\r\\n\" +", "-\t\t\t\"\t\tfoo();\\r\\n\" +", "+\t\t\t\"public void foo() {\\n\" +", "+\t\t\t\"\t\tfoo();\\n\" +", "-\t\t\t\"{\\r\\n\" +", "-\t\t\t\"\t\tfoo();\\r\\n\" +", "+\t\t\t\"{\\n\" +", "+\t\t\t\"\t\tfoo();\\n\" +"]}], "num": 1535}