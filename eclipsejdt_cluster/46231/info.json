{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c889ab20a9fe676bb13ff83bd1c1d4db", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b163474967943dc1a81ac8d052f575", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "commitAfterChange": "25fdae674503d8fe99a15a82b42402cfb3039bdc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\t\t\t&& methodScope.enclosingSourceType() == fieldBinding.declaringClass", "-\t\t\t&& methodScope.lastVisibleFieldID >= 0", "-\t\t\t&& fieldBinding.id >= methodScope.lastVisibleFieldID) {", "-\t\t\t//if the field is static and ms is not .... then it is valid", "-\t\t\tif (!fieldBinding.isStatic() || methodScope.isStatic)", "-\t\t\t\tscope.problemReporter().forwardReference(this, 0, methodScope.enclosingSourceType());", "+\t\t\t\t&& methodScope.enclosingSourceType() == fieldBinding.original().declaringClass", "+\t\t\t\t&& methodScope.lastVisibleFieldID >= 0", "+\t\t\t\t&& fieldBinding.id >= methodScope.lastVisibleFieldID", "+\t\t\t\t&& (!fieldBinding.isStatic() || methodScope.isStatic)) {", "+\t\t\tscope.problemReporter().forwardReference(this, 0, methodScope.enclosingSourceType());", "-\t\t//====================================================", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b481dccf793223ca46f307af907d8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b5d4921bec60805d2efcf945c1b0c0e907d3aeed", "commitAfterChange": "5fbb7a295fe51a8ea6177a5aeab11cf819ed3177", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " \t \tprivate void findTypesFromExpectedTypes(char[] token, Scope scope, ObjectVector typesFound, boolean proposeType, boolean proposeConstructor)", "signatureAfterChange": " \t \tprivate void findTypesFromExpectedTypes(char[] token, Scope scope, ObjectVector typesFound, boolean proposeType, boolean proposeConstructor)", "diff": ["-\t\t\t\t\t\tif (typeFound == refBinding) {", "+\t\t\t\t\t\tif (typeFound == refBinding.erasure()) {", "-\t\t\t\t\t\tif (proposeType && (!this.assistNodeIsConstructor || !allowingLongComputationProposals || hasStaticMemberTypes(refBinding, scope.enclosingSourceType() ,this.unitScope))) {", "+\t\t\t\t\t\tif (proposeType &&", "+\t\t\t\t\t\t\t\t(!this.assistNodeIsConstructor ||", "+\t\t\t\t\t\t\t\t\t\t!allowingLongComputationProposals ||", "+\t\t\t\t\t\t\t\t\t\thasStaticMemberTypes(refBinding, scope.enclosingSourceType() ,this.unitScope)) ||", "+\t\t\t\t\t\t\t\t\t\thasArrayTypeAsExpectedSuperTypes()) {"]}], "num": 46231}