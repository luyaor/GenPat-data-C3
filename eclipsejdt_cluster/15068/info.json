{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "753fb388f678ac6827eb72f961b1bbfe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ccb1878f9efcf3abee2d47d0ffc6772", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t}", "-", "-\t// if the binding declaring class is not visible, need special action", "-\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding", "-\t// NOTE: from target 1.2 on, method's declaring class is touched if any different from receiver type", "-\t// and not from Object or implicit static method call.", "-\tif (this.binding.declaringClass != this.actualReceiverType", "-\t\t\t&& this.receiverGenericCast == null", "-\t\t\t&& !this.actualReceiverType.isArrayType()) {", "-\t\tCompilerOptions options = currentScope.compilerOptions();", "-\t\tif ((options.targetJDK >= ClassFileConstants.JDK1_2", "-\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !(this.receiver.isImplicitThis() && this.codegenBinding.isStatic()))", "-\t\t\t\t&& this.binding.declaringClass.id != TypeIds.T_JavaLangObject) // no change for Object methods", "-\t\t\t|| !this.binding.declaringClass.canBeSeenBy(currentScope)) {", "-", "-\t\t\tthis.codegenBinding = currentScope.enclosingSourceType().getUpdatedMethodBinding(", "-\t\t\t        \t\t\t\t\t\t\t\t\t\tthis.codegenBinding, (ReferenceBinding) this.actualReceiverType.erasure());", "-\t\t}", "-\t\t// Post 1.4.0 target, array clone() invocations are qualified with array type", "-\t\t// This is handled in array type #clone method binding resolution (see Scope and UpdatedMethodBinding)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49aa5082ab612207a25782256eff5e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\tthis.codegenBinding = codegenField;", "-\t\t}", "-\t\t// if the binding declaring class is not visible, need special action", "-\t\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding", "-\t\t// NOTE: from target 1.2 on, field's declaring class is touched if any different from receiver type", "-\t\t// and not from Object or implicit static field access.", "-\t\tif (fieldBinding.declaringClass != this.actualReceiverType", "-\t\t\t\t&& !this.actualReceiverType.isArrayType()", "-\t\t\t\t&& fieldBinding.declaringClass != null // array.length", "-\t\t\t\t&& fieldBinding.constant() == Constant.NotAConstant) {", "-\t\t\tCompilerOptions options = currentScope.compilerOptions();", "-\t\t\tif ((options.targetJDK >= ClassFileConstants.JDK1_2", "-\t\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !fieldBinding.isStatic())", "-\t\t\t\t\t&& fieldBinding.declaringClass.id != TypeIds.T_JavaLangObject) // no change for Object fields", "-\t\t\t\t\t|| !fieldBinding.declaringClass.canBeSeenBy(currentScope)) {", "-", "-\t\t\t\t\tthis.codegenBinding =", "-\t\t\t\t\t    currentScope.enclosingSourceType().getUpdatedFieldBinding(", "-\t\t\t\t\t\t       codegenField,", "-\t\t\t\t\t\t        (ReferenceBinding)this.actualReceiverType.erasure());", "-\t\t\t}"]}], "num": 15068}