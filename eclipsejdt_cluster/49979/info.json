{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1b227ca1967e87749bf4e0678ac8286", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c889a549790d1f309c0a712f066841", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "64c79aaade93cc6bf9061f58a0917e55ce5f44d7", "commitAfterChange": "0f30dd165e42ed7c89f5ae15972d54606f639fe9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["-\tint errorThreshold = this.options.errorThreshold;", "-\tint warningThreshold = this.options.warningThreshold;", "-\t", "-\t\t\tif ((errorThreshold & CompilerOptions.UnreachableCode) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.UnreachableCode) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnreachableCode);", "-\t\t\tif ((errorThreshold & CompilerOptions.MaskedCatchBlock) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.MaskedCatchBlock) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "-\t\t\t", "-/*", "-\t\tcase Never Used  :", "-\t\t\tif ((errorThreshold & ParsingOptionalError) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & ParsingOptionalError) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "-*/", "+\t\t\treturn this.options.getSeverity(CompilerOptions.MaskedCatchBlock);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.ImportProblem) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.ImportProblem) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "-\t\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.ImportProblem);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.ImportProblem) == 0 ", "-\t\t\t\t&& (warningThreshold & CompilerOptions.ImportProblem) == 0){", "+\t\t\tif (this.options.getSeverity(CompilerOptions.ImportProblem) == Ignore) {", "-\t\t\tif ((errorThreshold & CompilerOptions.UnusedImport) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.UnusedImport) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedImport);", "-\t\t\tif ((errorThreshold & CompilerOptions.MethodWithConstructorName) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.MethodWithConstructorName) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.MethodWithConstructorName);", "-\t\t\tif ((errorThreshold & CompilerOptions.OverriddenPackageDefaultMethod) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.OverriddenPackageDefaultMethod) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.OverriddenPackageDefaultMethod);", "-\t\t\tif ((errorThreshold & CompilerOptions.IncompatibleNonInheritedInterfaceMethod) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.IncompatibleNonInheritedInterfaceMethod) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.IncompatibleNonInheritedInterfaceMethod);", "-\t\t\tif ((errorThreshold & CompilerOptions.UsingDeprecatedAPI) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.UsingDeprecatedAPI) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UsingDeprecatedAPI);", "-\t\t\tif ((errorThreshold & CompilerOptions.UnusedLocalVariable) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.UnusedLocalVariable) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedLocalVariable);", "-\t\t\tif ((errorThreshold & CompilerOptions.UnusedArgument) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.UnusedArgument) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedArgument);", "-\t\t\tif ((errorThreshold & CompilerOptions.NoImplicitStringConversion) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.NoImplicitStringConversion) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.NoImplicitStringConversion);", "-\t\t\tif ((errorThreshold & CompilerOptions.AccessEmulation) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.AccessEmulation) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.AccessEmulation);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.NonExternalizedString) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.NonExternalizedString) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;", "+\t\t\treturn this.options.getSeverity(CompilerOptions.NonExternalizedString);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.AssertUsedAsAnIdentifier) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.AssertUsedAsAnIdentifier) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.AssertUsedAsAnIdentifier);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.StaticAccessReceiver) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.StaticAccessReceiver) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.NonStaticAccessToStatic);", "+", "+\t\tcase IProblem.IndirectAccessToStaticMethod :", "+\t\tcase IProblem.IndirectAccessToStaticField :", "+\t\tcase IProblem.IndirectAccessToStaticType :", "+\t\t\treturn this.options.getSeverity(CompilerOptions.IndirectStaticAccess);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.NoEffectAssignment) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.NoEffectAssignment) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.NoEffectAssignment);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.UnusedPrivateMember) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.UnusedPrivateMember) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedPrivateMember);", "+", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.LocalVariableHiding) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.LocalVariableHiding) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.LocalVariableHiding);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.FieldHiding) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.FieldHiding) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.FieldHiding);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.AccidentalBooleanAssign) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.AccidentalBooleanAssign) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.AccidentalBooleanAssign);", "+", "-\t\t\tif ((errorThreshold & CompilerOptions.SuperfluousSemicolon) != 0){", "-\t\t\t\treturn Error;", "-\t\t\t}", "-\t\t\tif ((warningThreshold & CompilerOptions.SuperfluousSemicolon) != 0){", "-\t\t\t\treturn Warning;", "-\t\t\t}", "-\t\t\treturn Ignore;\t\t", "+\t\t\treturn this.options.getSeverity(CompilerOptions.SuperfluousSemicolon);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad47d7c15a2849e8e9ca5676eba7fa3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \tpublic int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["+ */\r", "+public int computeSeverity(int problemId){\r", "+\t// severity can have been preset on the problem\r", "+//\tif ((problem.severity & Fatal) != 0){\r", "+//\t\treturn Error;\r", "+//\t}\r", "+\t// if not then check whether it is a configurable problem\r", "+\tint errorThreshold = options.errorThreshold;\r", "+\tint warningThreshold = options.warningThreshold;\r", "+\t\r", "+\tswitch(problemId){\r", "-\t */\r", "-\tpublic int computeSeverity(int problemId) {\r", "-\r", "-\t\t// severity can have been preset on the problem\r", "-\t\t//\tif ((problem.severity & Fatal) != 0){\r", "-\t\t//\t\treturn Error;\r", "-\t\t//\t}\r", "-\r", "-\t\t// if not then check whether it is a configurable problem\r", "-\t\tint errorThreshold = options.errorThreshold;\r", "-\t\tint warningThreshold = options.warningThreshold;\r", "-\r", "-\t\tswitch (problemId) {\r", "-\r", "-\t\t\tcase UnreachableCatch :\r", "-\t\t\tcase CodeCannotBeReached :\r", "-\t\t\t\tif ((errorThreshold & UnreachableCode) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UnreachableCode) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase MaskedCatch :\r", "-\t\t\t\tif ((errorThreshold & MaskedCatchBlock) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & MaskedCatchBlock) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\t\t/*\r", "-\t\t\t\t\t\tcase Never Used  :\r", "-\t\t\t\t\t\t\tif ((errorThreshold & ParsingOptionalError) != 0){\r", "-\t\t\t\t\t\t\t\treturn Error;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tif ((warningThreshold & ParsingOptionalError) != 0){\r", "-\t\t\t\t\t\t\t\treturn Warning;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\treturn Ignore;\r", "-\t\t\t\t*/\r", "-\t\t\tcase ImportProblemBase + NotFound :\r", "-\t\t\tcase ImportProblemBase + NotVisible :\r", "-\t\t\tcase ImportProblemBase + Ambiguous :\r", "-\t\t\tcase ImportProblemBase + InternalNameProvided :\r", "-\t\t\tcase ImportProblemBase + InheritedNameHidesEnclosingName :\r", "-\t\t\tcase DuplicateImport :\r", "-\t\t\tcase ConflictingImport :\r", "-\t\t\tcase CannotImportPackage :\r", "-\t\t\t\tif ((errorThreshold & ImportProblem) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & ImportProblem) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\t\t\t\t/*\t\t\r", "-\t\t\t\t\t\tcase UnnecessaryEnclosingInstanceSpecification :\r", "-\t\t\t\t\t\t\tif ((errorThreshold & UnnecessaryEnclosingInstance) != 0){\r", "-\t\t\t\t\t\t\t\treturn Error;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tif ((warningThreshold & UnnecessaryEnclosingInstance) != 0){\r", "-\t\t\t\t\t\t\t\treturn Warning;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\treturn Ignore;\r", "-\t\t\t\t*/\r", "-\t\t\tcase MethodButWithConstructorName :\r", "-\t\t\t\tif ((errorThreshold & MethodWithConstructorName) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & MethodWithConstructorName) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase OverridingNonVisibleMethod :\r", "-\t\t\t\tif ((errorThreshold & OverriddenPackageDefaultMethod) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & OverriddenPackageDefaultMethod) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase OverridingDeprecatedMethod :\r", "-\t\t\tcase UsingDeprecatedType :\r", "-\t\t\tcase UsingDeprecatedMethod :\r", "-\t\t\tcase UsingDeprecatedConstructor :\r", "-\t\t\tcase UsingDeprecatedField :\r", "-\t\t\t\tif ((errorThreshold & UsingDeprecatedAPI) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UsingDeprecatedAPI) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase LocalVariableIsNeverUsed :\r", "-\t\t\t\tif ((errorThreshold & UnusedLocalVariable) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UnusedLocalVariable) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase ArgumentIsNeverUsed :\r", "-\t\t\t\tif ((errorThreshold & UnusedArgument) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UnusedArgument) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase NoImplicitStringConversionForCharArrayExpression :\r", "-\t\t\t\tif ((errorThreshold & TemporaryWarning) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & TemporaryWarning) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase NeedToEmulateFieldReadAccess :\r", "-\t\t\tcase NeedToEmulateFieldWriteAccess :\r", "-\t\t\tcase NeedToEmulateMethodAccess :\r", "-\t\t\tcase NeedToEmulateConstructorAccess :\r", "-\t\t\t\tif ((errorThreshold & AccessEmulation) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & AccessEmulation) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tdefault :\r", "+\t\tcase UnreachableCatch :\r", "+\t\tcase CodeCannotBeReached :\r", "+\t\t\tif ((errorThreshold & UnreachableCode) != 0){\r", "-\t\t}\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnreachableCode) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase MaskedCatch : \r", "+\t\t\tif ((errorThreshold & MaskedCatchBlock) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & MaskedCatchBlock) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\t\r", "+/*\r", "+\t\tcase Never Used  :\r", "+\t\t\tif ((errorThreshold & ParsingOptionalError) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & ParsingOptionalError) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+*/\r", "+\t\tcase ImportProblemBase + NotFound :\r", "+\t\tcase ImportProblemBase + NotVisible :\r", "+\t\tcase ImportProblemBase + Ambiguous :\r", "+\t\tcase ImportProblemBase + InternalNameProvided :\r", "+\t\tcase ImportProblemBase + InheritedNameHidesEnclosingName :\r", "+\t\tcase DuplicateImport :\r", "+\t\tcase ConflictingImport :\r", "+\t\tcase CannotImportPackage :\r", "+\t\t\tif ((errorThreshold & ImportProblem) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & ImportProblem) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+/*\t\t\r", "+\t\tcase UnnecessaryEnclosingInstanceSpecification :\r", "+\t\t\tif ((errorThreshold & UnnecessaryEnclosingInstance) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnnecessaryEnclosingInstance) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+*/\t\t\r", "+\t\tcase MethodButWithConstructorName :\r", "+\t\t\tif ((errorThreshold & MethodWithConstructorName) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & MethodWithConstructorName) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tcase OverridingNonVisibleMethod :\r", "+\t\t\tif ((errorThreshold & OverriddenPackageDefaultMethod) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & OverriddenPackageDefaultMethod) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase OverridingDeprecatedMethod :\t\t\t\t\r", "+\t\tcase UsingDeprecatedType :\t\t\t\t\r", "+\t\tcase UsingDeprecatedMethod :\r", "+\t\tcase UsingDeprecatedConstructor :\r", "+\t\tcase UsingDeprecatedField :\r", "+\t\t\tif ((errorThreshold & UsingDeprecatedAPI) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UsingDeprecatedAPI) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tcase LocalVariableIsNeverUsed :\r", "+\t\t\tif ((errorThreshold & UnusedLocalVariable) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnusedLocalVariable) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tcase ArgumentIsNeverUsed :\r", "+\t\t\tif ((errorThreshold & UnusedArgument) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnusedArgument) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase NoImplicitStringConversionForCharArrayExpression :\r", "+\t\t\tif ((errorThreshold & TemporaryWarning) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & TemporaryWarning) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase NeedToEmulateFieldReadAccess :\r", "+\t\tcase NeedToEmulateFieldWriteAccess :\r", "+\t\tcase NeedToEmulateMethodAccess :\r", "+\t\tcase NeedToEmulateConstructorAccess :\t\t\t\r", "+\t\t\tif ((errorThreshold & AccessEmulation) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AccessEmulation) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\tcase NonExternalizedStringLiteral :\r", "+\t\t\tif ((errorThreshold & NonExternalizedString) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & NonExternalizedString) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tdefault:\r", "+\t\t\treturn Error;\r", "+}\r"]}], "num": 49979}