{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0d38dfb5d63cda13ca3990dd23aaedc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fba031e0f88cf9dde1f2ecbeab64eba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c10286277f9239e3088b8d188b41d6fe94e627af", "commitAfterChange": "0537003e571cfeb53f220f7f5e8c40a8ad99bcc6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r public final void pushLineSeparator() throws InvalidInputException", "signatureAfterChange": "\r public final void pushLineSeparator() throws InvalidInputException", "diff": ["-\t\tif (source[currentPosition] == '\\n') {\r", "-\t\t\t//System.out.println(\"look-ahead LF-\" + currentPosition);\t\t\t\r", "-\t\t\tlineEnds[linePtr] = currentPosition;\r", "-\t\t\tcurrentPosition++;\r", "-\t\t\twasAcr = false;\r", "-\t\t} else {\r", "+\t\ttry {\r", "+\t\t\tif (source[currentPosition] == '\\n') {\r", "+\t\t\t\t//System.out.println(\"look-ahead LF-\" + currentPosition);\t\t\t\r", "+\t\t\t\tlineEnds[linePtr] = currentPosition;\r", "+\t\t\t\tcurrentPosition++;\r", "+\t\t\t\twasAcr = false;\r", "+\t\t\t} else {\r", "+\t\t\t\twasAcr = true;\r", "+\t\t\t}\r", "+\t\t} catch(IndexOutOfBoundsException e) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb0b9f3d10d1a54e7a52d104688dcb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "ef26de670ead73cc3e16060217656a0a8919f1d5", "commitAfterChange": "9579b84ceaab0473eb674994db1f38b5ee7b5115", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \tprotected boolean traverseDelta(IResourceDelta delta, int elementType, IJavaProject currentProject)", "signatureAfterChange": "\r \tprotected boolean traverseDelta(IResourceDelta delta, int elementType, IJavaProject currentProject)", "diff": ["-\t\t\tprocessChildren = this.updateCurrentDeltaAndIndex(delta, elementType, currentProject);\r", "+\t\t\ttry {\r", "+\t\t\t\tprocessChildren = this.updateCurrentDeltaAndIndex(delta, elementType, currentProject);\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t// non java resource\r", "+\t\t\t\treturn false;\r", "+\t\t\t}\r", "+\t\t\t\t\tprocessChildren = this.updateCurrentDeltaAndIndex(delta, elementType, currentProject);\r", "+\t\t\t\t\t// invalid project\r", "-\t\t\t\tprocessChildren = this.updateCurrentDeltaAndIndex(delta, elementType, currentProject);\r"]}], "num": 46748}