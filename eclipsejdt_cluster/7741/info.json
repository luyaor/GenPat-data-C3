{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6baec19b5a355bf2e26f04906fc3260", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5051423d19abf839e5df7c88e60816", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "37207b2312332e7eb9b138e12e2db23f9f9da53e", "commitAfterChange": "1829731a70d63f049379e6ceb23edadc61e7b589", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "signatureAfterChange": "  public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "diff": ["-\t// need type annotations before processing methods (for @NonNullByDefault)", "-\tif (this.globalOptions.isAnnotationBasedNullAnalysisEnabled)", "-\t\tbinaryBinding.scanTypeForNullDefaultAnnotation(binaryType, packageBinding, binaryBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d40417d2d353fc1edfd283d3a7ef41e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "562bd70d52b78a80d9ea0f036f9a91cfb91468db", "commitAfterChange": "e77c75055c6e55ba37ac2535228b20280659d48b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "signatureAfterChange": "  public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods, AccessRestriction accessRestriction)", "diff": ["+\t// need type annotations before processing methods (for @NonNullByDefault)", "+\tif (this.globalOptions.isAnnotationBasedNullAnalysisEnabled)", "+\t\tbinaryBinding.scanTypeForNullDefaultAnnotation(binaryType, packageBinding, binaryBinding);"]}], "num": 7741}