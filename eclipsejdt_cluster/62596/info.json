{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b334f030243cac6a4550452f416a1331", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eff3045ec075b1993d82721eaca1220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "8758dd14429783f320e9886f9e8b83edae58524b", "commitAfterChange": "5d659b26c6aa5eb4fc698fe62dca975ceee0bdfd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\tif (strictCommentMode) {", "-\t\t\t\t\t\t\t\t\t// a line comment needs to be followed by a line break to be valid", "-\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(UNTERMINATED_COMMENT);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\trecordComment(false);", "-\t\t\t\t\t\t\t\t\tif (this.taskTags != null) checkTaskTag(this.startPosition, this.currentPosition-1);", "-\t\t\t\t\t\t\t\t\tif (tokenizeComments) {", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition--; // reset one character behind", "-\t\t\t\t\t\t\t\t\t\treturn TokenNameCOMMENT_LINE;", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\trecordComment(false);", "+\t\t\t\t\t\t\t\tif (this.taskTags != null) checkTaskTag(this.startPosition, this.currentPosition-1);", "+\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition--; // reset one character behind", "+\t\t\t\t\t\t\t\t\treturn TokenNameCOMMENT_LINE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d66568ebacea3de790616871e86cea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "8758dd14429783f320e9886f9e8b83edae58524b", "commitAfterChange": "5d659b26c6aa5eb4fc698fe62dca975ceee0bdfd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\tif (strictCommentMode) {", "-\t\t\t\t\t\t\t\t\t// a line comment needs to be followed by a line break to be valid", "-\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(UNTERMINATED_COMMENT);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\trecordComment(false);", "-\t\t\t\t\t\t\t\t\tif (this.taskTags != null) checkTaskTag(this.startPosition, this.currentPosition-1);", "-\t\t\t\t\t\t\t\t\tif (tokenizeComments) {", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition--; // reset one character behind", "-\t\t\t\t\t\t\t\t\t\treturn TokenNameCOMMENT_LINE;", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\trecordComment(false);", "+\t\t\t\t\t\t\t\tif (this.taskTags != null) checkTaskTag(this.startPosition, this.currentPosition-1);", "+\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition--; // reset one character behind", "+\t\t\t\t\t\t\t\t\treturn TokenNameCOMMENT_LINE;"]}], "num": 62596}