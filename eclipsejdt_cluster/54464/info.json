{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "021a239baad31027841bf001942f24fb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "202391b8ca6ec044a4285f40e7e6c3e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/DeleteTests.java", "commitBeforeChange": "e7fbe3d2e46c3f4c5a40be9178ef6e8a36680f90", "commitAfterChange": "01f17876d50bd632100cd19774bf74ad112ea3f6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testDeleteWithInvalidInput() throws CoreException", "signatureAfterChange": " public void testDeleteWithInvalidInput() throws CoreException", "diff": ["-\tcreateFile(", "-\t\t\"P/X.java\",", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tICompilationUnit cu = getCompilationUnit(\"P/X.java\");", "-\tIType type = cu.getType(\"X\");", "+\tIType type = null;", "+\t\tcreateFile(", "+\t\t\t\"P/X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tICompilationUnit cu = getCompilationUnit(\"P/X.java\");", "+\t\ttype = cu.getType(\"X\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2eb0d957b84285bdededfb7c5d70fbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "d26bd96cc9e1c9e59f2c9d083b9a2725de90852a", "commitAfterChange": "8b048c313a1c6f07bac23f1c84c9ba7d1df315ac", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchRule)", "diff": ["-\t\tint[] wildcards = new int[10];", "+\t\tint[] wildcards = null;", "-\t\t\t\t\t\t\t\t// SEARCH_15 (frederic) Not treated yet...", "+\t\t\t\t\t\t\t\t// TODO (frederic) Should warn user that syntax is not valid", "-\t\t\t\t\t\t\t\t\t// SEARCH_15 (frederic) Invalid syntax", "+\t\t\t\t\t\t\t\t\t// TODO (frederic) Should warn user that syntax is not valid", "-\t\t\t\t\t\t\t\t\t// SEARCH_15 (frederic) Invalid syntax", "+\t\t\t\t\t\t\t\t\t// TODO (frederic) Should warn user that syntax is not valid", "-\t\t\t\t\t\t\t\t\t// SEARCH_15 (frederic) Invalid syntax", "+\t\t\t\t\t\t\t\t\t// TODO (frederic) Should warn user that syntax is not valid", "+\t\t\t\t\t\t\t\twildcards = new int[10]; // 10 parameters max"]}], "num": 54464}