{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a284c7c8081189172a35e8463ceaf41", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05faf2199ddb92ba2dd7bffd6e40645b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "76097c7811a80c4f8a439f21e9c70befef38173c", "commitAfterChange": "e1b7d251e62d7ec5a5ecbcecf562edf55d456045", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CodeSnippetClassFile(\r \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType,\r \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile,\r \tboolean creatingProblemType)", "signatureAfterChange": "\r public CodeSnippetClassFile(\r \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType,\r \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile,\r \tboolean creatingProblemType)", "diff": ["-\tif (((SourceTypeBinding) referenceBinding).scope.environment().options.targetJDK == CompilerOptions.JDK1_2) {\r", "+\tif (((SourceTypeBinding) referenceBinding).scope.environment().options.targetJDK >= CompilerOptions.JDK1_2) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06641e1af0fa1a2130d186573b10b6cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/ProcessorTestStatus.java", "commitBeforeChange": "f644354e45904d24db02795e349ee282324692a9", "commitAfterChange": "b212a396bd35d04ce1c52a2b14fdf872183168a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static boolean hasErrors()", "signatureAfterChange": " \tpublic static boolean hasErrors()", "diff": ["-\t\treturn s_errorStatus == NO_ERRORS;", "+\t\treturn s_errorStatus != NO_ERRORS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ca08d6ff59ca331ab5f54c75157f397", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "057a656f6a48d3c59f76041823639e5ee5c7ef88", "commitAfterChange": "f5dedbad023ed535da8140c4ada528c2bf574f20", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate final void addDeleteEdit(int start, int end)", "signatureAfterChange": " \t \tprivate final void addDeleteEdit(int start, int end)", "diff": ["-\t\tif (this.textRegionStart <= start && end <= this.textRegionEnd) {", "+\t\tif (this.textRegionStart < start && end <= this.textRegionEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "222802659208bc780df61fb585d80cd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/BinaryParameterDeclarationImpl.java", "commitBeforeChange": "a41851d986ce7151c1ab28395b6c9d8eaed706ac", "commitAfterChange": "3b832f4dfb110e33b2a7abd5be2caa6077d0fd80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public BinaryParameterDeclarationImpl(ExecutableDeclarationImpl executable,  \t\t\t\t\t\t\t\t\t\t  ITypeBinding typeBinding,                                           int index,                                           BaseProcessorEnv env)", "signatureAfterChange": "     public BinaryParameterDeclarationImpl(ExecutableDeclarationImpl executable,  \t\t\t\t\t\t\t\t\t\t  ITypeBinding typeBinding,                                           int index,                                           BaseProcessorEnv env)", "diff": ["-        assert( index > 0 ) : \"invalid index \" + index; //$NON-NLS-1$", "+        assert( index >= 0 ) : \"invalid index \" + index; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231ea890b175c2dfffc42d873607c790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "signatureAfterChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "diff": ["-\t\t\t\t\t\tfor (int i=0; i<dims; i++) {", "+\t\t\t\t\t\tfor (int i=0; i<=dims; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ccb3ca9f1f1f3ef194cf490ce684297", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "f657f893ed970d58ce4565eab2924c903044ce31", "commitAfterChange": "bfbe9b06c5798f1baef8d69d4a33bb41763f82a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate final void addInsertEdit(int insertPosition, String insertedString)", "signatureAfterChange": " \t \tprivate final void addInsertEdit(int insertPosition, String insertedString)", "diff": ["-\t\tif (this.textRegionStart < insertPosition && insertPosition <= this.textRegionEnd) {", "+\t\tif (this.textRegionStart <= insertPosition && insertPosition <= this.textRegionEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4e16a19b56d175b735f7c7ba4856d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "057a656f6a48d3c59f76041823639e5ee5c7ef88", "commitAfterChange": "f5dedbad023ed535da8140c4ada528c2bf574f20", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate final void addReplaceEdit(int start, int end, String replacement)", "signatureAfterChange": " \t \tprivate final void addReplaceEdit(int start, int end, String replacement)", "diff": ["-\t\tif (this.textRegionStart <= start && end <= this.textRegionEnd) {", "+\t\tif (this.textRegionStart < start && end <= this.textRegionEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6b15019d01d6db139156390dd35247", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "5c6cb8db910a517d56a630d54a58e799b87e5f3d", "commitAfterChange": "5ec0d4f852b715851ad782798e616c99fb28d2e1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "signatureAfterChange": "\r private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "diff": ["-\twhile (maxType > 0 && type != null) {\r", "+\twhile (maxType >= 0 && type != null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4e468a05d22812674bfbd92e852b09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "eb98db8467dab9b499bde6848602a31af6a605b6", "commitAfterChange": "62542d77179e2d9d9eae2d205be3f0fefe8aabb4", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  public FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": "  public FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\t\t\tfieldDecl.getKind() != AbstractVariableDeclaration.ENUM_CONSTANT); // type annotation is illegal on enum constant", "+\t\t\t\t\t\t\tfieldDecl.getKind() == AbstractVariableDeclaration.ENUM_CONSTANT); // type annotation is illegal on enum constant"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4197d3753bda7b5dad7fcc261c0f3a4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "44bc8bb24de374506385d6361730798867bd9b35", "commitAfterChange": "4eb272881c87b1bea3aa02e641fb6fc8190374ff", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tif (this.tabLength >= 0) {", "+\t\tif (this.tabLength > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a911d0a2dcdfc26b54d12440ea6d74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic boolean isInsideStream(int index)", "signatureAfterChange": " \t \tpublic boolean isInsideStream(int index)", "diff": ["+\t", "-\t\t} else if(this.tokenCacheIndex - tokenCache.length > index) {", "+\t\t} else if(this.tokenCacheIndex - tokenCache.length >= index) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa440ef2ea149b74c99db803f199162", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMType.java", "commitBeforeChange": "afe46e20cfbeafcd5d8df4f1e0cbc3b22ed8c133", "commitAfterChange": "269b55d9c218da20e67d75b452dd2f783b531eb9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " void normalize(ILineStartFinder finder)", "signatureAfterChange": " void normalize(ILineStartFinder finder)", "diff": ["-\tif (fInsertionPosition < openBodyEnd) {", "+\tif (fInsertionPosition <= openBodyEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "516c62b3a6b389299fc3ce766f693673", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "4fd98abe69a6425880abe243fa431e365710bef2", "commitAfterChange": "eb40a119cd5ecacf8e90c38261ec37c99b5a07b7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic List resources()", "signatureAfterChange": " \tpublic List resources()", "diff": ["-\t\tif (this.resources != null) {", "+\t\tif (this.resources == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722f57cceac9be336abfe698e0e71ff0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "15af5c9febf3e53f2418ebc52d74d4a523f18cbf", "commitAfterChange": "7dc1c421a8772020350b2d04aa54da24bd0cbbe9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\tprivate void removeCountersOlderThan(int counter)", "signatureAfterChange": " \t\tprivate void removeCountersOlderThan(int counter)", "diff": ["+\t\t}", "-\t\t\t\tif (this.counters[i] > counter) {", "+\t\t\t\tif (this.counters[i] >= counter) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75ba8b05d112b0f74b5a7fbfad17edfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "575a3f90413b1058462517ab2df66b33bcdaf3b3", "commitAfterChange": "e828ea2c8d39b972cae93c4405da77a411a20e03", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\t\tboolean generateCurrentLocalVar = (local.useFlag != LocalVariableBinding.UNUSED && local.constant() == Constant.NotAConstant);", "+\t\t\tboolean generateCurrentLocalVar = (local.useFlag > LocalVariableBinding.UNUSED && local.constant() == Constant.NotAConstant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c6cf29bb1bb9041ccc91fe5c2f9123", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMBuilder.java", "commitBeforeChange": "3016b5c28bad9ea6a922d0ddb629a3165f3b600c", "commitAfterChange": "60db242354a2d6c44cf4cccd274c8b540315e2cc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void acceptInitializer(int declarationStart, int declarationEnd, int[] javaDocPositions, int modifiers,  \tint modifiersStart, int bodyStart, int bodyEnd)", "signatureAfterChange": " public void acceptInitializer(int declarationStart, int declarationEnd, int[] javaDocPositions, int modifiers,  \tint modifiersStart, int bodyStart, int bodyEnd)", "diff": ["-\tif (modifiersStart > declarationStart) {", "+\tif (modifiersStart >= declarationStart) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8306a1b36b8b634a13af7069172ed5b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/IndentManipulation.java", "commitBeforeChange": "ee30320ed05f71a30424f51c6bb037a21f240577", "commitAfterChange": "1fb9a788acb6df81a5066976488be3d71b508599", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int indentUnitsToRemove, int tabWidth, int indentWidth, String newIndentString)", "signatureAfterChange": " \tpublic static ReplaceEdit[] getChangeIndentEdits(String source, int indentUnitsToRemove, int tabWidth, int indentWidth, String newIndentString)", "diff": ["-\t\tif (tabWidth < 0 || indentWidth <= 0 || source == null || indentUnitsToRemove < 0 || newIndentString == null) {", "+\t\tif (tabWidth < 0 || indentWidth < 0 || source == null || indentUnitsToRemove < 0 || newIndentString == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "847322ede23ada1436c072d04e7a93e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "36cb759fb58f0968f07f65b43e4b7f6601eaeb36", "commitAfterChange": "f5aa17fb301b5b2fbb8e21dcfde4a08a56986e8f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods)", "diff": ["-\t\t\tif (toSkip != null && toSkip[i] == 0) continue;", "+\t\t\tif (toSkip != null && toSkip[i] < 0) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b73e6ccf247f15bff30cc67e7afc3bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "454c09645419e42e424c8ed7d147ba861f3f0f93", "commitAfterChange": "9d8ef2fe9a94d29d41ecb29dff07f3d9ede1a855", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tprotected void runPostActions() throws JavaModelException", "signatureAfterChange": " \tprotected void runPostActions() throws JavaModelException", "diff": ["-\t\tfor (int i = 0; i < this.actionsPtr; i++) {", "+\t\tfor (int i = 0; i <= this.actionsPtr; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db75edce9963f93315c2044265932dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "212fb4a61079c57776e428535d84e1576de20de4", "commitAfterChange": "3f2f09008b2e6444affbeadc53eccae823273e63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t&& currentScope.compilerOptions().sourceLevel <= ClassFileConstants.JDK1_5) {", "+\t\t\t\t&& currentScope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8190f5805868a2d805ecbfbc3d9d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "4d822ffbe0dcb140c39c46f5c9cfa6ac77dc5a48", "commitAfterChange": "22dfb29015980684f8c134336f7b55238ec69ca1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "signatureAfterChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "diff": ["-\t\tif (dirLength != 62) {", "+\t\tif (dirLength < 62) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "925ba8194c2cc197b4abcc79c0fa88cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "232201d6380e7830296a82a7b3422a333db36b2e", "commitAfterChange": "378f419edc5509790bbfa3083244109f6abafbe2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\tif (i < last && isTypeUseDeprecated(this.resolvedType, scope)) {", "+\t\t\tif (i <= last && isTypeUseDeprecated(this.resolvedType, scope)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96f0717fce1e5b85edf826b52e2cbca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ObjectSet.java", "commitBeforeChange": "70cbe7acdddd1bc611a051ad9e8acd9c535b5615", "commitAfterChange": "046c8e5916a3ce959f2896f469ebc86c2aa9dba5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r \tpublic boolean remove(Object element)", "signatureAfterChange": "\r \r \tpublic boolean remove(Object element)", "diff": ["-\t\tint index = (hash & 0x7FFFFFFF) % length;\r", "+\t\tint index = (hash  & 0x7FFFFFFF) % length;\r", "-\t\t\t\twhile (this.elementTable[next = (next + 1) % length] != null && next != index) {\r", "+\t\t\t\twhile (this.elementTable[next = ((next + 1) % length)] != null && (next != index)) {\r", "-\t\t\t\tif (lastMatching > 0){\r", "+\t\t\t\tif (lastMatching >= 0){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a00e862eef1134042543907528f8c58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ParameterDeclarationImpl.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParameterDeclarationImpl(ExecutableDeclarationImpl executable,  \t\t\t\t\t\t\t\t\tITypeBinding type,  \t\t\t\t\t\t\t\t\tint index, \t\t\t\t\t\t\t\t\tProcessorEnvImpl env)", "signatureAfterChange": "     public ParameterDeclarationImpl(ExecutableDeclarationImpl executable,  \t\t\t\t\t\t\t\t\tITypeBinding type,  \t\t\t\t\t\t\t\t\tint index, \t\t\t\t\t\t\t\t\tProcessorEnvImpl env)", "diff": ["-        assert _paramIndex > 0 : \"invalid param index \" + _paramIndex;", "+        assert _paramIndex >= 0 : \"invalid param index \" + _paramIndex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23915875ca1b45534782e56af3af99d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "bc9fb826fad258109fd282b013c3bd67797f6224", "commitAfterChange": "0bc9dd202c6e847a333047931c61d8acd765f32c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic MethodBinding tiebreakMethod()", "signatureAfterChange": " \tpublic MethodBinding tiebreakMethod()", "diff": ["-\t\t\t\tif (originalVariable.boundsCount() == 1) {", "+\t\t\t\tif (originalVariable.boundsCount() <= 1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a547b9f68804f5c98b130d84d051313f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "313bb3b90feaf95f9289243c38e9c7d16c7913a6", "commitAfterChange": "de7d932de462fede863747a07fe68ac9f7daaf00", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static boolean checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static boolean checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t\t   if (lastIndex < argLength) { // vararg argument was provided", "+\t\t\t   if (lastIndex <= argLength) { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=337093"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7efc9bbb7b8874ccdb9168fe1508281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a2c3fa426987fea1df02a769a09ab41096904030", "commitAfterChange": "24e8620f38d0bac0083481eee336dcf026693233", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\t\tboolean generateCurrentLocalVar = (local.useFlag > LocalVariableBinding.UNUSED && local.constant() == Constant.NotAConstant);", "+\t\t\tboolean generateCurrentLocalVar = (local.useFlag != LocalVariableBinding.UNUSED && local.constant() == Constant.NotAConstant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ef0b7ce1e0a19965d99d817a30356c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "1d03d0a8c4be0dfec42ef7bde36b1b4052d873e5", "commitAfterChange": "98729ca9cf5338761154c2603bf3818eceaff9a3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " protected void popUntilElement(int kind)", "signatureAfterChange": " protected void popUntilElement(int kind)", "diff": ["-\tif(i > 0) {", "+\tif(i >= 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1dd460e27ca18c8886b0f8bc6b2a8d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "f20fffc4a99e8adbeeb586f85659c5e5f3b94884", "commitAfterChange": "b1ce5a863ad0a541f80dd0793ff207f1e4ecf677", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tint storeLeadingComments(ASTNode node, int previousEnd)", "signatureAfterChange": " \tint storeLeadingComments(ASTNode node, int previousEnd)", "diff": ["-\t\t\t\t\twhile (this.scanner.currentPosition != commentStart) {", "+\t\t\t\t\twhile (this.scanner.currentPosition < commentStart) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ce9769850edf8859152ed79d9fa2ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "c451305d9bf2559ccbbd07e6bd458c03bd8020ad", "commitAfterChange": "9df5be4a36832dc62c270f51baaa2d061d29fa15", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void indexLibrary(IPath path, IProject requestingProject)", "signatureAfterChange": " public void indexLibrary(IPath path, IProject requestingProject)", "diff": ["-\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\tfor (int i = this.jobEnd; i > this.jobStart; i--)  // NB: don't check job at jobStart, as it may have already started (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=32488)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd04e44e16e94a0bb02ea373ddaa0cba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "057a656f6a48d3c59f76041823639e5ee5c7ef88", "commitAfterChange": "f5dedbad023ed535da8140c4ada528c2bf574f20", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate final void addInsertEdit(int insertPosition, String insertedString)", "signatureAfterChange": " \t \tprivate final void addInsertEdit(int insertPosition, String insertedString)", "diff": ["-\t\tif (this.textRegionStart <= insertPosition && insertPosition <= this.textRegionEnd) {", "+\t\tif (this.textRegionStart < insertPosition && insertPosition <= this.textRegionEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd8c98ac4dfa0bde44eab86b91b25172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2b9c88a229690b467744c591ed8778e99c91df03", "commitAfterChange": "3c97a12fe797bc8f1a4e22eb2cfe11932a52f122", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 281, "signatureBeforeChange": " private final void resizeByteArray()", "signatureAfterChange": " private final void resizeByteArray()", "diff": ["-\tif (classFileOffset > requiredSize) {", "-\t\t// must be sure to grow by enough", "+\tif (classFileOffset >= requiredSize) {", "+\t\t// must be sure to grow enough"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb5c65b17efcaaaed7921c63b565d03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "5310010ea476ca7ed78e13436a10230c37a42f22", "commitAfterChange": "8d1f92c7f516a53c2fe63e50127d644b549b65d9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t\tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \t\tprotected boolean parseReference() throws InvalidInputException", "diff": ["-\t\t\tboolean completed = this.completionNode == null;", "+\t\t\tboolean completed = this.completionNode != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ff377edf9b055d07a1efcc0ad59af3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "5a2c558297a8fbdb56dcb1ae50c90cfd6316609c", "commitAfterChange": "d5aec99580068e96f0c4b7e7c368f7bab90dd5f3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tif (currentPosition >= eofPosition)", "+\t\t\t\t\t\t\tif (currentPosition > eofPosition)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b8d5b4e29909d118d50562d8a6e9e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ad762a77ab2b73ee385fa05996b4bf6c674c82d4", "commitAfterChange": "087fc490b3f2eceb06ee753232cc58bb9c007c8d", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["-\t\t\t\t\t\tif(arguments[i][j] == node && typeVariables.length >= j) {", "+\t\t\t\t\t\tif(arguments[i][j] == node && typeVariables.length > j) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5dcbdd8bd877bd97c85d56a93d4f63e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "9eac203f2453ab21a49dee5eceed3025656c3aee", "commitAfterChange": "8ab95da8a0ea0d6e3c8c0619022e89253da6eb42", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic List resources()", "signatureAfterChange": " \tpublic List resources()", "diff": ["-\t\tif (this.resources == null) {", "+\t\tif (this.resources != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa49dda069ad9f0d5053d0857e1aa14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "ff1eb602a8aea39b1e15b206441aadf76bfaa984", "commitAfterChange": "dc5ee42cb3e5694c60c3a1f62c20766cb3cb2274", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void runComplianceParserTest( \tString[] testFiles, \tString expected13ProblemLog, \tString expected14ProblemLog, \tString expected15ProblemLog)", "signatureAfterChange": " public void runComplianceParserTest( \tString[] testFiles, \tString expected13ProblemLog, \tString expected14ProblemLog, \tString expected15ProblemLog)", "diff": ["-\t} else if(this.complianceLevel > ClassFileConstants.JDK1_5) {", "+\t} else if(this.complianceLevel >= ClassFileConstants.JDK1_5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1dd5bc2b2f15c3406365369a4e8408a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "76097c7811a80c4f8a439f21e9c70befef38173c", "commitAfterChange": "e1b7d251e62d7ec5a5ecbcecf562edf55d456045", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic ClassFile(\r \t\tSourceTypeBinding aType,\r \t\tClassFile enclosingClassFile,\r \t\tboolean creatingProblemType)", "signatureAfterChange": "\r \tpublic ClassFile(\r \t\tSourceTypeBinding aType,\r \t\tClassFile enclosingClassFile,\r \t\tboolean creatingProblemType)", "diff": ["-\t\t\t== CompilerOptions.JDK1_2) {\r", "+\t\t\t>= CompilerOptions.JDK1_2) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda77062a2539d19bd26e5d1dda79385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "207ee9452fd93bac118ef54e81b9d1aad5d49a34", "commitAfterChange": "7480a7a028b761dd989d906922ba7da2f58b3ecc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "signatureAfterChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "diff": ["-\t\t\t} while (this.scanner.currentPosition <= sourceEnd);", "+\t\t\t} while (this.scanner.currentPosition < sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3beb651a34488d0522dd5af028f155c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "70b9f71bdfa4f15d433383739618a9fdcdbf50e8", "commitAfterChange": "d9dd3f3b4344311765aa43bd0ec69a035e3c1a0f", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "signatureAfterChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "diff": ["-\t\t\t} while (this.scanner.currentPosition < sourceEnd);", "+\t\t\t} while (this.scanner.currentPosition <= sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82b73a9a5851672ee7641d3f25d4f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "c451305d9bf2559ccbbd07e6bd458c03bd8020ad", "commitAfterChange": "9df5be4a36832dc62c270f51baaa2d061d29fa15", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void indexAll(IProject project)", "signatureAfterChange": " public void indexAll(IProject project)", "diff": ["-\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\tfor (int i = this.jobEnd; i > this.jobStart; i--) // NB: don't check job at jobStart, as it may have already started (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=32488)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f869dac11b78dfe6037bba340ccfdbf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "2f242a591f6e92c69b595dfe6bd7382f8ad687aa", "commitAfterChange": "e7b237f1fc1e102c040cf571485b55d10c8db677", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public boolean isMember() throws JavaModelException", "signatureAfterChange": " public boolean isMember() throws JavaModelException", "diff": ["-\treturn getDeclaringType() == null;", "+\treturn getDeclaringType() != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd83a71996996654023c54e2cdea1ae1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b4ed764544883a2f3322e402a5b231e6fd0e7845", "commitAfterChange": "c32f4faa0e0e05b7548ab150030a448443121451", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void checkNonNLSAfterBodyEnd(int declarationEnd)", "signatureAfterChange": " protected void checkNonNLSAfterBodyEnd(int declarationEnd)", "diff": ["-\tif(scanner.currentPosition - 1 < declarationEnd) {", "+\tif(scanner.currentPosition - 1 <= declarationEnd) {"]}], "num": 15400}