{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2808a33086421f5aa2776ac8655a133a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0225bdc865f86c1d176c04c330b80fa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void testBug400904_0002() throws CoreException", "signatureAfterChange": " public void testBug400904_0002() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.doit() [super::<String>foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.doit() [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a7ca2d607e9ee580e56b1e0aa6de383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  public void testBug400904_0001a() throws CoreException", "signatureAfterChange": "  public void testBug400904_0001a() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.doit() [super::foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.doit() [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfc11fe1a3d5183dada748c07c2e1df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type 'B' is not API (restriction on required project 'Project1')\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d710442c81f453ba5e1f53a8eb96e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void testBug400904_0009() throws CoreException", "signatureAfterChange": " public void testBug400904_0009() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [Y<String>::foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14eab4dfaebb7d566484ed496a39e703", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test430026() throws CoreException", "signatureAfterChange": " \tpublic void test430026() throws CoreException", "diff": ["-\t\t\tassertElementEquals(\"Wrong element\", \"v [in apply(V) [in Lambda(MyFunction) [in compose(MyFunction<? super V,? extends T>) [in MyFunction [in X.java [in <default> [in src [in Bug429966]]]]]]]]\", elements[0]);", "+\t\t\tassertElementEquals(\"Wrong element\", \"v [in apply(V) [in <lambda #1> [in compose(MyFunction<? super V,? extends T>) [in MyFunction [in X.java [in <default> [in src [in Bug429966]]]]]]]]\", elements[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a146609394e4c0253caedf1e5c6d9f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "b17c7970aa52528427b488a1895b516cefe9f2a2", "commitAfterChange": "54d5d6327963fa0a594e194ca892843ef2014c42", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test430136() throws CoreException", "signatureAfterChange": " \tpublic void test430136() throws CoreException", "diff": ["-\t\t\tString expected = \"=\\\\(\\\\[Bug430136\\\\]\\\\)/src<{X.java[MyFunction~compose~QMyFunction\\\\<-QV;+QT;>;=)Lambda\\\\(MyFunction\\\\)=\\\"LMyFunction\\\\<TV;TR;>;!148!174!151\";", "+\t\t\tString expected = \"=\\\\(\\\\[Bug430136\\\\])/src<{X.java[MyFunction~compose~QMyFunction\\\\<-QV;+QT;>;=)Lambda\\\\(MyFunction)=\\\"LMyFunction\\\\<TV;TR;>;!148!174!151=&apply!1=\\\"TV;=\\\"v=\\\"TR;=\\\"LX\\\\~MyFunction\\\\<LX\\\\~MyFunction;:1TV;LX\\\\~MyFunction;:TR;>;.apply\\\\(TV;)TR;@v!148!148!148!148!Ljava\\\\/lang\\\\/Object;!0!true=)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22911d237da014b72871d266d8b19849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void testBug400905_0014() throws CoreException", "signatureAfterChange": " public void testBug400905_0014() throws CoreException", "diff": ["-\t\t\t\t\t\t\t\"src/X.java int void X.zoo():Lambda(I).doit(int) [(x) ->] EXACT_MATCH\");", "+\t\t\t\t\t\t\t\"src/X.java int void X.zoo():<lambda #1>.doit(int) [(x) ->] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262b2066bfcf10e1de1193f6096e04fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "83a8a3171c136f3d1c745fbc6bc7fb39eeacdff1", "commitAfterChange": "7cbfac0f262651a92552aa1b245acf5ef1db3bb0", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void testSearchPatternCreation37()", "signatureAfterChange": " public void testSearchPatternCreation37()", "diff": ["-\t\t\" | \" + // unused slots", "+\t\t\"METHOD_REFERENCE_EXPRESSION | \" + // unused slots"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bdec1dc3d5e3f03254cffffe3fae4cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void test040()", "signatureAfterChange": " public void test040()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 4)\\n\" +", "-\t\t\"\tp.Z z;\\n\" +", "-\t\t\"\t^^^\\n\" +", "-\t\t\"Access restriction: The type Z is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1 problem (1 warning)\\n\",", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 4)\\n\" + ", "+        \"\tp.Z z;\\n\" + ", "+        \"\t^^^\\n\" + ", "+        \"Access restriction: The type \\'Z\\' is not API (restriction on classpath entry \\'---OUTPUT_DIR_PLACEHOLDER---\\')\\n\" + ", "+        \"----------\\n\" + ", "+        \"1 problem (1 warning)\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7d75ef1cf7e870d2120ec1c972de39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void test036()", "signatureAfterChange": " public void test036()", "diff": ["-        \"----------\\n\" +", "-        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java (at line 2)\\n\" +", "-        \"\tpublic class Y extends p.X {\\n\" +", "-        \"\t                       ^^^\\n\" +", "-        \"Discouraged access: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---/bin1\\n\" +", "-        \"----------\\n\" +", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java (at line 2)\\n\" + ", "+        \"\tpublic class Y extends p.X {\\n\" + ", "+        \"\t                       ^^^\\n\" + ", "+        \"Discouraged access: The type \\'X\\' is not API (restriction on classpath entry \\'---OUTPUT_DIR_PLACEHOLDER---/bin1\\')\\n\" + ", "+        \"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37907415350719161ff17fe5f3ae8c79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test0026() throws JavaModelException", "signatureAfterChange": " public void test0026() throws JavaModelException", "diff": ["-\t\t\"abc [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"abc [in foo(int) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37b50d6b3999b98c37a21ba94ec4343c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void testBug400904_0007() throws CoreException", "signatureAfterChange": " public void testBug400904_0007() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [new Y()::foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c53780a3f2036c7a3ac2c8de2392a48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testIgnoreIfBetterNonAccessibleRule2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIgnoreIfBetterNonAccessibleRule2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project3Path, new Problem(\"\", \"Discouraged access: The type A is not accessible due to restriction on required project Project2\", b, 35, 38, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_WARNING)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project3Path, new Problem(\"\", \"Discouraged access: The type 'A' is not API (restriction on required project 'Project2')\", b, 35, 38, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_WARNING)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "401fbcc1f7ce3a8830c317d68b6730c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR335ClassFileTest.java", "commitBeforeChange": "8661797f1bd928923b1bc22705d473b796245b84", "commitAfterChange": "7e775f80a476a234606eb1dbcc7af2d1b2170fde", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void test430015() throws IOException, ClassFormatException", "signatureAfterChange": " public void test430015() throws IOException, ClassFormatException", "diff": ["-\t\t\t\t\"         \t\tParameter[] parameters = methods[2].getParameters();\\n\" +", "+\t\t\t\t\"         \t\tParameter[] parameters = method.getParameters();\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4412468a7f631644e7735317e616e460", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "a209f427039b5b4db27a67f609cb706801ba28e5", "commitAfterChange": "712689471fd4116d08552bca059239228ce897f6", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r \tpublic void test420038()", "signatureAfterChange": "\r \tpublic void test420038()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + \r", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "458334ead0a5a2b081184049f9950e20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void testBug400905_0021() throws CoreException", "signatureAfterChange": " public void testBug400905_0021() throws CoreException", "diff": ["-\t\t\t\t\"src/p400905/Collectors.java R Function<I,R> p400905.Collectors.castingIdentity():Lambda(Function).apply(I) [i ->] EXACT_MATCH\");", "+\t\t\t\t\"src/p400905/Collectors.java R Function<I,R> p400905.Collectors.castingIdentity():<lambda #1>.apply(I) [i ->] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d2c5e568c5a856d9b8544a304617d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void testBug400904_0006() throws CoreException", "signatureAfterChange": " public void testBug400904_0006() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [Y.Z::<String>foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49309629de21ab497c2c712422503642", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void test422468c() throws JavaModelException", "signatureAfterChange": " public void test422468c() throws JavaModelException", "diff": ["-\t\t\"y [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"y [in foo(I) [in Lambda(I) [in foo(I) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca73c99e185a886009e5c12c7ac0543", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "d43bd70d5c6c4fa98b6c25564f2818572a108eac", "commitAfterChange": "3655fb3ae21ac46b5060eb9e240a41cd2462bac2", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void testBug427168()", "signatureAfterChange": " public void testBug427168()", "diff": ["-\t\t\"The method perform(Producer<T>) in the type X is not applicable for the arguments (() -> 13)\\n\" + ", "+\t\t\"The method perform(Producer<T>) in the type X is not applicable for the arguments (() -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4db0d39810e517cef082b088d07ad658", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test0025() throws JavaModelException", "signatureAfterChange": " public void test0025() throws JavaModelException", "diff": ["-\t\t\"abc [in foo(int) [in Lambda(I) [in foo() [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"abc [in foo(int) [in <lambda #1> [in foo() [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0a827bfbd30afe34b4c2f9f7555d12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void test424198c() throws JavaModelException", "signatureAfterChange": " public void test424198c() throws JavaModelException", "diff": ["-\t\t\"s2 [in withoutWildcard(Stream<String>) [in InsistentCapture [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"s2 [in accept(java/lang/String) [in Lambda(Consumer) [in withoutWildcard(Stream<String>) [in InsistentCapture [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67807056a94e94f06cd1841429db70fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "ed946ccd4c40fd03fb87770eaaaa24036f629ae3", "commitAfterChange": "425b0c5314087893896fa849d0ee8761b973ef60", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void testProjectMemento2()", "signatureAfterChange": " public void testProjectMemento2()", "diff": ["-\t\t\"=P \\\\(abc) \\\\~\",", "+\t\t\"=P \\\\(abc\\\\) \\\\~\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68691dc178f071729bb586f74f254e82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r \tpublic void test420038()", "signatureAfterChange": "\r \tpublic void test420038()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + \r", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69813f0f4790a014d40882ef26cbabf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testAccessRestriction4() throws CoreException", "signatureAfterChange": " public void testAccessRestriction4() throws CoreException", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in /P3/src/Y.java (at line 1)\\n\" +", "-\t\t\t\"\tpublic class Y extends p.X {}\\n\" +", "-\t\t\t\"\t                       ^^^\\n\" +", "-\t\t\t\"Access restriction: The type X is not accessible due to restriction on required project P1\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in /P3/src/Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Y extends p.X {}\\n\" + ", "+\t\t\t\"\t                       ^^^\\n\" + ", "+\t\t\t\"Access restriction: The type \\'X\\' is not API (restriction on required project \\'P1\\')\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69cd50b490ea891c8c7664eefb01e87d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type 'B' is not API (restriction on required project 'Project1')\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a416729a6f502f5949c1430bd5bbfb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test0028() throws JavaModelException", "signatureAfterChange": " public void test0028() throws JavaModelException", "diff": ["-\t\t\"xyz [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"xyz [in doit(I) [in Lambda(I) [in doit(I) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c541dc728a73fe6f64dbdf5c14efe64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void testIgnoreIfBetterNonAccessibleRule3() throws CoreException", "signatureAfterChange": " public void testIgnoreIfBetterNonAccessibleRule3() throws CoreException", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 2)\\n\" +", "-\t\t\t\"\tpublic class X extends p.internal.Y {\\n\" +", "-\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Access restriction: The type Y is not accessible due to restriction on required project P1\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic class X extends p.internal.Y {\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Access restriction: The type \\'Y\\' is not API (restriction on required project \\'P1\\')\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9a993408b58c514c9ff4b5f0641fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void testBug400905_0006() throws CoreException", "signatureAfterChange": " public void testBug400905_0006() throws CoreException", "diff": ["-\t\t\t\t\t\t\"src/X.java void void X.main(String[]):Lambda(I).foo() [()->] EXACT_MATCH\"", "+\t\t\t\t\t\t\"src/X.java void void X.main(String[]):<lambda #1>.foo() [()->] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebd0667915ee0b0506fa50b4c556cf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void test430159c() throws CoreException", "signatureAfterChange": " public void test430159c() throws CoreException", "diff": ["-\t\t\"src/b429498/X.java b429498.X.i [X :: foo] EXACT_MATCH\\n\" + ", "+\t\t\"src/b429498/X.java b429498.X.i [foo] EXACT_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711ecdd6191c889021ff73c180229d2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void test0032() throws JavaModelException", "signatureAfterChange": " public void test0032() throws JavaModelException", "diff": ["-\t\t\"hij [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"hij [in doit(I) [in Lambda(I) [in doit(I) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74735db08413d15248fd1e91055e9e28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test422468() throws JavaModelException", "signatureAfterChange": " public void test422468() throws JavaModelException", "diff": ["-\t\t\"first [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"first [in foo(X, java/lang/Object) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7482a73140d9244c51453fe3ac2d8d13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "589528097d9e55f2c9b149940adf643197d6126d", "commitAfterChange": "f940793ad6a8d5d0b9d6787ffa3657f56433791f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void test044()", "signatureAfterChange": " public void test044()", "diff": ["-\t\t\t\"Illegal lambda expression: Method foo of type A is generic \\n\" + ", "+\t\t\t\"Illegal lambda expression: Method foo of type B is generic \\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780f351722d0ec8b2afeaedfb3e74edc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void testIgnoreIfBetterNonAccessibleRule4() throws CoreException", "signatureAfterChange": " public void testIgnoreIfBetterNonAccessibleRule4() throws CoreException", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 2)\\n\" +", "-\t\t\t\"\tpublic class X extends p.internal.Y {\\n\" +", "-\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Access restriction: The type Y is not accessible due to restriction on required project P1\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic class X extends p.internal.Y {\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Access restriction: The type \\'Y\\' is not API (restriction on required project \\'P1\\')\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a90c6ccab3bbf0ada42a2d3a044217b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void testBug400905_0005() throws CoreException", "signatureAfterChange": " public void testBug400905_0005() throws CoreException", "diff": ["-\t\t\t\t\t\"src/b400905/X.java void b400905/Y void b400905.X.main(String[]):Lambda(I).foo():Lambda(Y).bar() [() /* bar */ ->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\t\"src/b400905/X.java void b400905.Y void b400905.X.main(String[]):Lambda(I).foo():Lambda(Y).bar() [() /* bar */ ->] EXACT_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862bc067aa3225c04acafbcceca7d7ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type 'B' is not API (restriction on required project 'Project1')\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863911c8a6d37f7dbc5808e814f127f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " public void test073_per_source_output_directory()", "signatureAfterChange": " public void test073_per_source_output_directory()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Z.java (at line 2)\\n\" +", "-\t\t\"\tX f;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Access restriction: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---/src1\\n\" +", "-\t\t\"----------\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Z.java (at line 2)\\n\" + ", "+\t\t\"\tX f;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Access restriction: The type \\'X\\' is not API (restriction on classpath entry \\'---OUTPUT_DIR_PLACEHOLDER---/src1\\')\\n\" + ", "+\t\t\"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c7d6f2714a023605a5ab72626474af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void testBug400905_0005() throws CoreException", "signatureAfterChange": " public void testBug400905_0005() throws CoreException", "diff": ["-\t\t\t\t\t\"src/b400905/X.java void b400905.Y void b400905.X.main(String[]):Lambda(I).foo():Lambda(Y).bar() [() /* bar */ ->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\t\"src/b400905/X.java void b400905.Y void b400905.X.main(String[]):<lambda #1>.foo():<lambda #1>.bar() [() /* bar */ ->] EXACT_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba092da6732852475dfe5e01b090dc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void testBug400905_0016() throws CoreException", "signatureAfterChange": " public void testBug400905_0016() throws CoreException", "diff": ["-\t\t\t\t\"src/X.java int void X.zoo():Lambda(I).doit(int) [(x) ->] EXACT_MATCH\");", "+\t\t\t\t\"src/X.java int void X.zoo():<lambda #1>.doit(int) [(x) ->] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d51cef8b6ca0369b3cc011adac064a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void testBug400905_0008() throws CoreException", "signatureAfterChange": " public void testBug400905_0008() throws CoreException", "diff": ["-\t\tassertSearchResults(\"src/X.java void X.main(String[]) [Y::goo] EXACT_MATCH\");", "+\t\tassertSearchResults(\"src/X.java void X.main(String[]) [goo] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ea7d0e0450b5c22b8d3de88ab8284c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void test429738() throws CoreException", "signatureAfterChange": " public void test429738() throws CoreException", "diff": ["-\t\t\t\"src/b400905/X.java int b400905.X.f1:Lambda(Foo).foo(int).x [x] EXACT_MATCH\");\t", "+\t\t\t\"src/b400905/X.java int b400905.X.f1:<lambda #1>.foo(int).x [x] EXACT_MATCH\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920fcdd82f5890bb84dd5a9db9346294", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void test424198() throws JavaModelException", "signatureAfterChange": " public void test424198() throws JavaModelException", "diff": ["-\t\t\"v1 [in apply(java/lang/String) [in Lambda(Function) [in processJar(Path) [in InsistentCapture [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"v1 [in apply(java.lang.String) [in Lambda(Function) [in processJar(Path) [in InsistentCapture [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92c2c435ecff93e7ccd5bc36a15be8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void testBug400904_0010() throws CoreException", "signatureAfterChange": " public void testBug400904_0010() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [Y<String>::<String>foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944c1c7309dfb6db87fcc3118831fe16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " public void test079_per_source_output_directory()", "signatureAfterChange": " public void test079_per_source_output_directory()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Z.java (at line 2)\\n\" +", "-\t\t\"\tX f;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Access restriction: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---/src1\\n\" +", "-\t\t\"----------\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Z.java (at line 2)\\n\" + ", "+\t\t\"\tX f;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Access restriction: The type \\'X\\' is not API (restriction on classpath entry \\'---OUTPUT_DIR_PLACEHOLDER---/src1\\')\\n\" + ", "+\t\t\"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967e3e3e04839d9c71eb321d8e1cc228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test430136() throws CoreException", "signatureAfterChange": " \tpublic void test430136() throws CoreException", "diff": ["-\t\t\tString expected = \"=\\\\(\\\\[Bug430136\\\\])/src<{X.java[MyFunction~compose~QMyFunction\\\\<-QV;+QT;>;=)Lambda\\\\(MyFunction)=\\\"LMyFunction\\\\<TV;TR;>;!148!174!151=&apply!1=\\\"TV;=\\\"v=\\\"TR;=\\\"LX\\\\~MyFunction\\\\<LX\\\\~MyFunction;:1TV;LX\\\\~MyFunction;:TR;>;.apply\\\\(TV;)TR;@v!148!148!148!148!Ljava\\\\/lang\\\\/Object;!0!true=)\";", "+\t\t\tString expected = \"=\\\\(\\\\[Bug430136\\\\])/src<{X.java[MyFunction~compose~QMyFunction\\\\<-QV;+QT;>;=)MyFunction=\\\"LMyFunction\\\\<TV;TR;>;!148!174!151=&apply!1=\\\"TV;=\\\"v=\\\"TR;=\\\"LX\\\\~MyFunction\\\\<LX\\\\~MyFunction;:1TV;LX\\\\~MyFunction;:TR;>;.apply\\\\(TV;)TR;@v!148!148!148!148!Ljava\\\\/lang\\\\/Object;!0!true=)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6b24fc1efd4a1cffbded0c01c7e2e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void test0033() throws JavaModelException", "signatureAfterChange": " public void test0033() throws JavaModelException", "diff": ["-\t\t\"hij [in doit(I) [in Lambda(I) [in doit(I) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\",", "+\t\t\"hij [in doit(I) [in <lambda #1> [in doit(I) [in <lambda #1> [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28ca820ca641aa3a78b2b80e46de01a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " public void testBug400905_0022() throws CoreException", "signatureAfterChange": " public void testBug400905_0022() throws CoreException", "diff": ["-\t\t\t\"src/test/Test.java int test.X.i:Lambda(FunctionalInterface).thrice(int) [(x) ->] EXACT_MATCH\"", "+\t\t\t\"src/test/Test.java int test.X.i:<lambda #1>.thrice(int) [(x) ->] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0e75f8398cf827c60f5acb55db32c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void test0024() throws JavaModelException", "signatureAfterChange": " public void test0024() throws JavaModelException", "diff": ["-\t\t\"xyz [in foo(int) [in Lambda(I) [in foo() [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"xyz [in foo(int) [in <lambda #1> [in foo() [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af92e8d6f43419f34912841e84ef18f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "8661797f1bd928923b1bc22705d473b796245b84", "commitAfterChange": "7e775f80a476a234606eb1dbcc7af2d1b2170fde", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " public void test430015()", "signatureAfterChange": " public void test430015()", "diff": ["-\t\t\t\t\"         \t\tParameter[] parameters = methods[2].getParameters();\\n\" +", "+\t\t\t\t\"         \t\tParameter[] parameters = method.getParameters();\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b013d3add6a4bd1d93c49e7cd77306e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "ed946ccd4c40fd03fb87770eaaaa24036f629ae3", "commitAfterChange": "425b0c5314087893896fa849d0ee8761b973ef60", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testBinaryMethodMemento4() throws JavaModelException", "signatureAfterChange": " public void testBinaryMethodMemento4() throws JavaModelException", "diff": ["-\t\t\"=P/lib<p(X.class[X~foo~Ljava.util.Collection\\\\<\\\\*\\\\>;\",", "+\t\t\"=P/lib<p(X.class[X~foo~Ljava.util.Collection\\\\<*>;\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b221e3be0d7cf12ce8131f444e178975", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test422468() throws JavaModelException", "signatureAfterChange": " public void test422468() throws JavaModelException", "diff": ["-\t\t\"first [in foo(X, java/lang/Object) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"first [in foo(X, java.lang.Object) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2dab7a1a1a918fcd3ba35ea7b82c876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void testBug400905_0025() throws CoreException", "signatureAfterChange": " public void testBug400905_0025() throws CoreException", "diff": ["-\tassertSearchResults(\"src/test/Test.java void test.X.main(String[]) [this::goo] EXACT_MATCH\");", "+\tassertSearchResults(\"src/test/Test.java void test.X.main(String[]) [goo] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b551e4660e1e25908c0cef7563c51d34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void test422468e() throws JavaModelException", "signatureAfterChange": " public void test422468e() throws JavaModelException", "diff": ["-\t\t\"q [in foo(java/lang/String, int) [in Lambda(K) [in foo(java/lang/String, java/lang/String) [in Lambda(J) [in foo(java/lang/String, java/lang/String) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]]]\",", "+\t\t\"q [in foo(java.lang.String, int) [in Lambda(K) [in foo(java.lang.String, java.lang.String) [in Lambda(J) [in foo(java.lang.String, java.lang.String) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7407f1f2b17e38dfeee43b50a6bb7cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testBug400904_0013() throws CoreException", "signatureAfterChange": " public void testBug400904_0013() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [Y<String>.Z<String>::foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb179a0cf3afcb52838013952da932b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "1fd45230f199f97d97dc93f43f8c1ecd8d598be3", "commitAfterChange": "e25e05f313fe0e8cf47abe127e89db464a1d8bc4", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void testBug400904_0008() throws CoreException", "signatureAfterChange": " public void testBug400904_0008() throws CoreException", "diff": ["-\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [new Y()::<String>foo] EXACT_MATCH\"", "+\t\t\t\"src/b400904/X.java void b400904.X.main(String[]) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf572bdaae24628f8da14f2bc80276b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void testParser() throws JavaModelException", "signatureAfterChange": " public void testParser() throws JavaModelException", "diff": ["-\t\t\"x [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"x [in foo(java/lang/String, java/lang/Integer) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00f7e1fb160097a4474704cc6fc491e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void test0031() throws JavaModelException", "signatureAfterChange": " public void test0031() throws JavaModelException", "diff": ["-\t\t\"xyz [in doit(I) [in Lambda(I) [in doit(I) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\",", "+\t\t\"xyz [in doit(I) [in <lambda #1> [in doit(I) [in <lambda #1> [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c22427c7dda1e32ea236b4c14cf0f2a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "ed946ccd4c40fd03fb87770eaaaa24036f629ae3", "commitAfterChange": "425b0c5314087893896fa849d0ee8761b973ef60", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testImportDeclarationMemento()", "signatureAfterChange": " public void testImportDeclarationMemento()", "diff": ["-\t\t\"=P/src<p{X.java#java.util.\\\\*\",", "+\t\t\"=P/src<p{X.java#java.util.*\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb094850f8d01772d4ed73c0ba1454af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type 'B' is not API (restriction on required project 'Project1')\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5f806f363b6796e262f225afc6c8b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void test048()", "signatureAfterChange": " public void test048()", "diff": ["-        \"----------\\n\" +", "-        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 2)\\n\" +", "-        \"\t@SuppressWarnings(\\\"deprecation\\\")\\n\" +", "-        \"\t                  ^^^^^^^^^^^^^\\n\" +", "-        \"Unnecessary @SuppressWarnings(\\\"deprecation\\\")\\n\" +", "-        \"----------\\n\" +", "-        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 4)\\n\" +", "-        \"\tp.X x;\\n\" +", "-        \"\t^^^\\n\" +", "-        \"Discouraged access: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---\\n\" +", "-        \"----------\\n\" +", "+        \"----------\\n\" + ", "+        \"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 2)\\n\" + ", "+        \"\t@SuppressWarnings(\\\"deprecation\\\")\\n\" + ", "+        \"\t                  ^^^^^^^^^^^^^\\n\" + ", "+        \"Unnecessary @SuppressWarnings(\\\"deprecation\\\")\\n\" + ", "+        \"----------\\n\" + ", "+        \"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Y.java (at line 4)\\n\" + ", "+        \"\tp.X x;\\n\" + ", "+        \"\t^^^\\n\" + ", "+        \"Discouraged access: The type \\'X\\' is not API (restriction on classpath entry \\'---OUTPUT_DIR_PLACEHOLDER---\\')\\n\" + ", "+        \"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4843d571a0b4e6b8a7e52d9edcb6f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AccessRestrictionsTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test004() throws CoreException", "signatureAfterChange": " public void test004() throws CoreException", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in /P2/src/p/Z.java (at line 2)\\n\" +", "-\t\t\t\"\tpublic class Z extends X1 {\\n\" +", "-\t\t\t\"\t                       ^^\\n\" +", "-\t\t\t\"Discouraged access: The type X1 is not accessible due to restriction on required project P1\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in /P2/src/p/Z.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic class Z extends X1 {\\n\" + ", "+\t\t\t\"\t                       ^^\\n\" + ", "+\t\t\t\"Discouraged access: The type \\'X1\\' is not API (restriction on required project \\'P1\\')\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe404697ee749535150f98b2483cc5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "c9149a9e01b5270f227b43ea4becd111429960bf", "commitAfterChange": "f770276621cb01dea1860e5b5f92afb477474e6a", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void test429738a() throws CoreException", "signatureAfterChange": " public void test429738a() throws CoreException", "diff": ["-\t\t\t\"src/b400905/X.java int b400905.X.f1:Lambda(Foo).foo(int).x [x] EXACT_MATCH\");\t", "+\t\t\t\"src/b400905/X.java int b400905.X.f2:Lambda(Foo).foo(int).x [x] EXACT_MATCH\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f84e7211b49eb0dfb7c9c1eb72cecf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testImportDeclarationMemento()", "signatureAfterChange": " public void testImportDeclarationMemento()", "diff": ["-\t\t\"=P/src<p{X.java#java.util.*\",", "+\t\t\"=P/src<p{X.java#java.util.\\\\*\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d753f4b3441036537665b8a68797304f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void testParser() throws JavaModelException", "signatureAfterChange": " public void testParser() throws JavaModelException", "diff": ["-\t\t\"x [in foo(java/lang/String, java/lang/Integer) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"x [in foo(java.lang.String, java.lang.Integer) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8147f59f408e17740d82c4af38a51e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test430141() throws Exception", "signatureAfterChange": " \tpublic void test430141() throws Exception", "diff": ["-\t\t\t\t\t\t\t\"    Lambda(J) [in main(String[]) [in X [in X.java [in <default> [in src [in Bug430141]]]]]]\\n\",", "+\t\t\t\t\t\t\t\"    <lambda #1> [in main(String[]) [in X [in X.java [in <default> [in src [in Bug430141]]]]]]\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce39fe43f054fcc726a7796f2490ee5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test0026() throws JavaModelException", "signatureAfterChange": " public void test0026() throws JavaModelException", "diff": ["-\t\t\"abc [in foo(int) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"abc [in foo(int) [in <lambda #1> [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd443d4fb84a35e7b60de4d22f6d5052", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void test424198() throws JavaModelException", "signatureAfterChange": " public void test424198() throws JavaModelException", "diff": ["-\t\t\"v1 [in processJar(Path) [in InsistentCapture [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]\",", "+\t\t\"v1 [in apply(java/lang/String) [in Lambda(Function) [in processJar(Path) [in InsistentCapture [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc4160027e33ffb0b8a2375cdbcfba0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 341, "signatureBeforeChange": " public void test293()", "signatureAfterChange": " public void test293()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src/p/X.java (at line 4)\\n\" +", "-\t\t\"\tA a;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Discouraged access: The type A is not accessible due to restriction on classpath entry ---LIB_DIR_PLACEHOLDER---/lib3.jar\\n\" +", "-\t\t\"----------\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src/p/X.java (at line 4)\\n\" + ", "+\t\t\"\tA a;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Discouraged access: The type \\'A\\' is not API (restriction on classpath entry \\'---LIB_DIR_PLACEHOLDER---/lib3.jar\\')\\n\" + ", "+\t\t\"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e067f6e401f84bb0e746105b857afde3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "2d127f9c4f7d2f6e84664bc558e4d5a8224f5ac8", "commitAfterChange": "ba102afaa27b3b6b63ee0fd01eab5a8d45f4d8a9", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void testProjectMemento2()", "signatureAfterChange": " public void testProjectMemento2()", "diff": ["-\t\t\"=P \\\\(abc\\\\) \\\\~\",", "+\t\t\"=P \\\\(abc) \\\\~\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e507ad668f7910ba60e66d5663704608", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void testBug400905_0017() throws CoreException", "signatureAfterChange": " public void testBug400905_0017() throws CoreException", "diff": ["-\t\t\t\t\"src/Y.java java/lang/Object Function<I,R> Collectors.castingIdentity():Lambda(Function).apply(java/lang/Object) [i ->] EXACT_MATCH\");", "+\t\t\t\t\"src/Y.java R Function<I,R> Collectors.castingIdentity():Lambda(Function).apply(I) [i ->] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e71035abc62657547068e2575f993fd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void testExcludePartOfAnotherProject1() throws CoreException", "signatureAfterChange": " public void testExcludePartOfAnotherProject1() throws CoreException", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 2)\\n\" +", "-\t\t\t\"\tpublic class X extends p.internal.Y {\\n\" +", "-\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Access restriction: The type Y is not accessible due to restriction on required project P\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic class X extends p.internal.Y {\\n\" + ", "+\t\t\t\"\t                       ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Access restriction: The type \\'Y\\' is not API (restriction on required project \\'P\\')\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7239bfbfb331032124655709cfa92d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void test422468b() throws JavaModelException", "signatureAfterChange": " public void test422468b() throws JavaModelException", "diff": ["-\t\t\"y [in foo(I) [in Lambda(I) [in foo(I) [in Lambda(I) [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\",", "+\t\t\"y [in foo(I) [in <lambda #1> [in foo(I) [in <lambda #1> [in main(String[]) [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91a4d41bda3d581757cd56927edf059", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void test422468a() throws JavaModelException", "signatureAfterChange": " public void test422468a() throws JavaModelException", "diff": ["-\t\t\"second [in foo(X, java/lang/Object) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\",", "+\t\t\"second [in foo(X, java.lang.Object) [in Lambda(I) [in i [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a67315843f5c41ac8a9452ab3adf78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " public void test085_per_source_output_directory()", "signatureAfterChange": " public void test085_per_source_output_directory()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Z.java (at line 2)\\n\" +", "-\t\t\"\tX f;\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Access restriction: The type X is not accessible due to restriction on classpath entry ---OUTPUT_DIR_PLACEHOLDER---/src1\\n\" +", "-\t\t\"----------\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/Z.java (at line 2)\\n\" + ", "+\t\t\"\tX f;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Access restriction: The type \\'X\\' is not API (restriction on classpath entry \\'---OUTPUT_DIR_PLACEHOLDER---/src1\\')\\n\" + ", "+\t\t\"----------\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa06d37644b9439296b5839d9aec364f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "64774f020d7005b54827ff53032895aaf4555d81", "commitAfterChange": "e2d31ef7ac94c5bb6285f9813df43a1164c5ca8d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type 'B' is not API (restriction on required project 'Project1')\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "febff8836cb1089ead4ddd1d227f4815", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test430033() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test430033() throws CoreException, IOException", "diff": ["-\t\t\tassertElementEquals(\"Wrong element\", \"value [in test(int) [in Lambda(IntPredicate) [in and(IntPredicate) [in IntPredicate [in IntPredicate.class [in <default> [in Elements.jar [in Bug430033]]]]]]]]\", elements[0]);", "+\t\t\tassertElementEquals(\"Wrong element\", \"value [in test(int) [in <lambda #1> [in and(IntPredicate) [in IntPredicate [in IntPredicate.class [in <default> [in Elements.jar [in Bug430033]]]]]]]]\", elements[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee8e5fc06e72218c346563b3b23d1b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void testBug400905_0013() throws CoreException", "signatureAfterChange": " public void testBug400905_0013() throws CoreException", "diff": ["-\t\t\t\t\"src/X.java int void X.zoo():Lambda(I).doit() [() ->] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/X.java int void X.zoo():<lambda #1>.doit() [() ->] EXACT_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff4baf7502ca46778360619af7db3938", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "a8cbebd170009b62a902461aed94df473d2c0d4a", "commitAfterChange": "399be45f49aecd84827a437a645f51d2664e149c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test429948a() throws Exception", "signatureAfterChange": " \tpublic void test429948a() throws Exception", "diff": ["-\t\t\t\t\t\"           execureOuter(() -> {\\n\" +", "+\t\t\t\t\t\"           executeOuter(() -> {\\n\" +"]}], "num": 21917}