{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f530db0447c91f1a0911f45b347545ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d31b48e8d64a5c6d7590136d3c7371", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "c92e1e709227502247b6cd9614267d98d05ca337", "commitAfterChange": "49a932a4071f1fa961e8d0ff39b16afa0b45e7a1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void generateTypeParameterInfos(BinaryMember parent, char[] signature, HashMap newElements, ArrayList typeParameterHandles)", "signatureAfterChange": " private void generateTypeParameterInfos(BinaryMember parent, char[] signature, HashMap newElements, ArrayList typeParameterHandles)", "diff": ["+\t\tCharOperation.replace(typeParameterSignature, '/', '.');", "-\t\t\tCharOperation.replace(typeParameterBounds[j], '/', '.');", "+\t\tinfo.boundsSignatures = typeParameterBoundSignatures;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8801b687ba9f89f44e4ba1c936e1b26a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "21f559feffbf2460bdd3a9d1e827cbd3c01012af", "commitAfterChange": "686f3b257f4d32050f06213668cbddf17fedbfcf", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "signatureAfterChange": "  \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "diff": ["-\t\tif (one.isVarargs() && two.isVarargs() && oneParamsLength > twoParamsLength) {", "-\t\t\t// special case when autoboxing makes (int, int...) better than (Object...) but not (int...) or (Integer, int...)", "-\t\t\tif (((ArrayBinding) twoParams[twoParamsLength - 1]).elementsType().id != TypeIds.T_JavaLangObject)", "-\t\t\t\treturn false;", "+\t\tif (one.isVarargs() && two.isVarargs()) {", "+\t\t\tif (oneParamsLength > twoParamsLength) {", "+\t\t\t\t// special case when autoboxing makes (int, int...) better than (Object...) but not (int...) or (Integer, int...)", "+\t\t\t\tif (((ArrayBinding) twoParams[twoParamsLength - 1]).elementsType().id != TypeIds.T_JavaLangObject)", "+\t\t\t\t\treturn false;", "+\t\t\t}", "-\t\t\tfor (int i = twoParamsLength - 2; i >= 0; i--)", "+\t\t\tfor (int i = (oneParamsLength > twoParamsLength ? twoParamsLength : oneParamsLength) - 2; i >= 0; i--)"]}], "num": 15525}