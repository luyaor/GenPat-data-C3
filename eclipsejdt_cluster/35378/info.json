{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07ee76908dfece0bf3c360c4ec2efdcd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18bfde167506e3d7844d2a64ec56f026", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationFieldReference.java", "commitBeforeChange": "d5b9ab15bb3f769b7e2ac485fe6da55027818828", "commitAfterChange": "e98478cd38caef5e23457b8b0fdc364bf2846afc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t */", "-\t\t}", "-\t\telse {", "+\t\t} else {", "-\t\t// the case receiverType.isArrayType and token = 'length' is handled by the scope API", "-\t\tthis.codegenBinding = this.binding = scope.getField(this.receiverType, this.token, this);", "+", "+\t\tthis.binding = scope.getField(this.receiverType, this.token, this);", "-\t\tif (isFieldUseDeprecated(binding, scope, (this.bits & IsStrictlyAssignedMASK) !=0)) {", "+\t\tif (isFieldUseDeprecated(binding, scope, (this.bits & IsStrictlyAssignedMASK) != 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1782758454f4ec3f6cc1d98919939d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "64c79aaade93cc6bf9061f58a0917e55ce5f44d7", "commitAfterChange": "0f30dd165e42ed7c89f5ae15972d54606f639fe9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.codegenBinding =", "-\t\t\tthis.binding = scope.getField(this.receiverType, token, this);", "+\t\tthis.codegenBinding = this.binding = scope.getField(this.receiverType, token, this);", "-\t\tif (isFieldUseDeprecated(binding, scope, (this.bits & IsStrictlyAssignedMASK) !=0))", "+\t\tif (isFieldUseDeprecated(binding, scope, (this.bits & IsStrictlyAssignedMASK) !=0)) {", "-", "+\t\t}", "-\t\t\t\tscope.problemReporter().unnecessaryReceiverForStaticField(this, binding);", "+\t\t\t\tscope.problemReporter().nonStaticAccessToStaticField(this, binding);", "+\t\t\t}", "+\t\t\tif (!isImplicitThisRcv && binding.declaringClass != receiverType) {", "+\t\t\t\tscope.problemReporter().indirectAccessToStaticField(this, binding);"]}], "num": 35378}