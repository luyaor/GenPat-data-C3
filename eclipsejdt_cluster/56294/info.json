{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c88fe58e2ea157159f14d064afa6057", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c304d4d5d0121402d936f2c8020c43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "8b646a2b78393ed9ea2f29131035a93ec637cf8c", "commitAfterChange": "df73b66d317840a2a0ee344392b35b1c55584cbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(String patternString, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\tpublic static SearchPattern createPattern(String patternString, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive) {", "-\t\tif (patternString == null || patternString.length() == 0) return null;", "+\t */", "+\tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive) {", "+\t\tif (stringPattern == null || stringPattern.length() == 0) return null;", "-\t\t\t\treturn createTypePattern(patternString, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "-\t\t\t\treturn createMethodPattern(patternString, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createMethodPattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "-\t\t\t\treturn createConstructorPattern(patternString, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createConstructorPattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "-\t\t\t\treturn createFieldPattern(patternString, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createFieldPattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "-\t\t\t\treturn createPackagePattern(patternString, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createPackagePattern(stringPattern, limitTo, matchMode, isCaseSensitive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af7b25ce16403c082f0deafd045cb595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static SearchPattern createPattern(String patternString, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " public static SearchPattern createPattern(String patternString, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["+\tif (patternString == null || patternString.length() == 0) return null;", "-\tif (patternString == null || patternString.length() == 0)", "-\t\treturn null;", "-", "-\tSearchPattern searchPattern = null;", "-", "-\t\t\tsearchPattern = createTypePattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tbreak;", "+\t\t\treturn createTypePattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = createMethodPattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tbreak;\t\t\t", "+\t\t\treturn createMethodPattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = createConstructorPattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tbreak;\t\t\t", "+\t\t\treturn createConstructorPattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = createFieldPattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tbreak;", "+\t\t\treturn createFieldPattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\t\t\tsearchPattern = createPackagePattern(patternString, limitTo, matchMode, isCaseSensitive);", "+\t\t\treturn createPackagePattern(patternString, limitTo, matchMode, isCaseSensitive);", "-\treturn searchPattern;", "+\treturn null;"]}], "num": 56294}