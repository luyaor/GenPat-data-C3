{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4912dffb8fa557d432df9f9b320adef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bd08a6fd372a4666a2b04264f3dd97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "54503993aac98c2e38062e5e25d7566a8b5f1389", "commitAfterChange": "7358239d6b862255b4b51fc6ef9f249d713405ea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["-\tthis.hasSeparateOutputFolder = !outputFolder.getFullPath().equals(javaBuilder.currentProject.getFullPath());\r", "+\t// only perform resource copying if no source folders coincidates with the output location\r", "+\t// corresponds to: project == src == bin, or several source folders are contributing resources,\r", "+\t// but one is the output location too (and would get populated with other source folder resources).\r", "+\tthis.hasSeparateOutputFolder = true;\r", "+\tfor (int i = 0; i < this.sourceFolders.length; i++) {\r", "+\t\tIContainer sourceFolder = this.sourceFolders[i];\r", "+\t\tif (sourceFolder.getFullPath().equals(this.outputFolder)){\r", "+\t\t\tthis.hasSeparateOutputFolder = false;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fb31d99076001d93e83fdcd91a484d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "04969acd296957373e2c11d1fa6749ece6b3b165", "commitAfterChange": "a6b612a10e662a9a3068db57f25ae43c85426c25", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic ASTNode getNodeStartingAt(int start)", "signatureAfterChange": " \tpublic ASTNode getNodeStartingAt(int start)", "diff": ["+\t\t// unexpected parameters array", "+\t\tif (this.invalidParameters != null) {", "+\t\t\tfor (int i=0; i<this.invalidParameters.length; i++) {", "+\t\t\t\tJavadocSingleNameReference param = this.invalidParameters[i];", "+\t\t\t\tif (param.sourceStart==start) {", "+\t\t\t\t\treturn param;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 49950}