{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ac2e9f1da32e116590337f74d5ac8ea", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07059defdcc3750560f62a6e02014eb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void checkMatching(AstNode node)", "signatureAfterChange": " public void addMatch(AstNode node, int matchLevel)", "diff": ["+}", "+public void addMatch(AstNode node, int matchLevel) {", "+\tswitch (matchLevel) {", "+\t\tcase PatternLocator.POTENTIAL_MATCH:", "+\t\t\taddPossibleMatch(node);", "+\t\t\tbreak;", "+\t\tcase PatternLocator.ACCURATE_MATCH:", "+\t\t\taddTrustedMatch(node);", "+\t}", "-}", "-public void checkMatching(AstNode node) {", "-\tthis.locator.pattern.matchCheck(node, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a2874aae005370abb6491ba86c0d6e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "eb6a62cd301dd92365462b5f4580a54624129ed5", "commitAfterChange": "f363db69d77a20757ac0ea9e878cf9c696cd79df", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": " protected void disableWarnings()", "signatureAfterChange": " protected void disableAll(int severity)", "diff": ["-protected void disableWarnings() {", "-\t\tif (((String) entry.getValue()).equals(CompilerOptions.WARNING)) {", "-\t\t\tthis.options.put(entry.getKey(), CompilerOptions.IGNORE);", "+protected void disableAll(int severity) {", "+\tString checkedValue = null;", "+\tswitch(severity) {", "+\t\tcase ProblemSeverities.Error :", "+\t\t\tcheckedValue = CompilerOptions.ERROR;", "+\t\t\tbreak;", "+\t\tcase ProblemSeverities.Warning :", "+\t\t\tcheckedValue = CompilerOptions.WARNING;", "+\t\t\tbreak;", "+\t}", "+\t\tif (((String) entry.getValue()).equals(checkedValue)) {"]}], "num": 48209}