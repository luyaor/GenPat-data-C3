{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59ec0226d9f6b6f2be15632c39a5223f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a37363b98ed71f96397d75b3a6fd689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public IType[] getAllTypes() throws JavaModelException", "signatureAfterChange": "\r public IType[] getAllTypes() throws JavaModelException", "diff": ["-\tVector allTypes = new Vector(types.length);\r", "-\tVector typesToTraverse = new Vector(types.length);\r", "+\tArrayList allTypes = new ArrayList(types.length);\r", "+\tArrayList typesToTraverse = new ArrayList(types.length);\r", "-\t\ttypesToTraverse.addElement(types[i]);\r", "+\t\ttypesToTraverse.add(types[i]);\r", "-\t\tIType type = (IType) typesToTraverse.elementAt(0);\r", "-\t\ttypesToTraverse.removeElement(type);\r", "-\t\tallTypes.addElement(type);\r", "+\t\tIType type = (IType) typesToTraverse.get(0);\r", "+\t\ttypesToTraverse.remove(type);\r", "+\t\tallTypes.add(type);\r", "-\t\t\ttypesToTraverse.addElement(types[i]);\r", "+\t\t\ttypesToTraverse.add(types[i]);\r", "-\t}\r", "-\tallTypes.trimToSize();\r", "+\t} \r", "-\tallTypes.copyInto(arrayOfAllTypes);\r", "+\tallTypes.toArray(arrayOfAllTypes);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce54458e7e4ba3417dcf844ab3543f0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private void readBinaryChildren()", "signatureAfterChange": "\r private void readBinaryChildren()", "diff": ["-\tVector children = new Vector();\r", "-\tHashtable newElements = new Hashtable();\r", "+\tArrayList children = new ArrayList();\r", "+\tHashMap newElements = new HashMap();\r", "-\tfor (Enumeration e = newElements.keys(); e.hasMoreElements();) {\r", "-\t\tIJavaElement key = (IJavaElement) e.nextElement();\r", "-\t\tObject value = newElements.get(key);\r", "-\t\tmanager.putInfo(key, value);\r", "+\t\r", "+\tfor (Iterator iter = newElements.entrySet().iterator(); iter.hasNext();) {\r", "+\t\tMap.Entry entry = (Map.Entry) iter.next();\r", "+\t\tmanager.putInfo(\r", "+\t\t\t(IJavaElement) entry.getKey(), \r", "+\t\t\tentry.getValue());\r", "-\tchildren.copyInto(fBinaryChildren);\r", "+\tchildren.toArray(fBinaryChildren);\r"]}], "num": 34696}