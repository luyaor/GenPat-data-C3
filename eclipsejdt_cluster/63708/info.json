{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18a8cc54f29d8fd14d79ff9fb18016aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba59adbf0c7a78921e185da3e0d2d6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "037e016f273f6cb8c7cfb305cfc86199e4a2172f", "commitAfterChange": "afc1e4846bc636d931af46ddbcc6782cb35abd8f", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["+\t\t// fake new line to handle empty lines before package declaration or import declarations", "+\t\tthis.scribe.lastNumberOfNewLines = 1;", "-\t\t\t\t// add a fake new line to add potential blank lines", "-\t\t\t\tint blankLinesBeforePackage = this.preferences.blank_lines_before_package;", "-\t\t\t\tif (blankLinesBeforePackage > 0) {", "-\t\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforePackage);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tint blankLinesBeforePackage = this.preferences.blank_lines_before_package;", "-\t\t\t\tif (blankLinesBeforePackage > 0) {", "-\t\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforePackage - 1);", "-\t\t\t\t}", "+\t\t\tint blankLinesBeforePackage = this.preferences.blank_lines_before_package;", "+\t\t\tif (blankLinesBeforePackage > 0) {", "+\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforePackage);", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a896f7e433eae1c8fab2fbbe7af5e943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8530f36dbde13058837d240762ab3a756916ff70", "commitAfterChange": "6ff398e9a76534bfecc521165b8d25d00b6a6735", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\t\tthis.scribe.printComment();", "-\t\t\t// OPTION", "-\t\t\t// dump the package keyword", "-\t\t\tint blankLinesBeforePackage = this.preferences.blank_lines_before_package;", "-\t\t\tif (blankLinesBeforePackage > 0) {", "-\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforePackage - 1);", "+\t\t\tif (hasComments()) {", "+\t\t\t\tthis.scribe.printComment();", "+\t\t\t\t// add a fake new line to add potential blank lines", "+\t\t\t\tint blankLinesBeforePackage = this.preferences.blank_lines_before_package;", "+\t\t\t\tif (blankLinesBeforePackage > 0) {", "+\t\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforePackage);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tint blankLinesBeforePackage = this.preferences.blank_lines_before_package;", "+\t\t\t\tif (blankLinesBeforePackage > 0) {", "+\t\t\t\t\tthis.scribe.printEmptyLines(blankLinesBeforePackage - 1);", "+\t\t\t\t}", "+\t\t\t// dump the package keyword"]}], "num": 63708}