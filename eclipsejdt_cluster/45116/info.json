{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "400f5d6779583b1d5bd175bae8d56e4d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "684d55e48b8f390db5b87e4be95a2858", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 41, "signatureBeforeChange": " boolean implementsMethod(MethodBinding method)", "signatureAfterChange": " boolean implementsMethod(MethodBinding method)", "diff": ["+\tchar[] selector = method.selector;", "-\t\tMethodBinding[] methods = type.getMethods(method.selector);", "-\t\tfor (int i = methods.length; --i >= 0;)", "-\t\t\tif (methods[i].areParametersEqual(method))", "-\t\t\t\treturn true;", "+\t\tMethodBinding[] methods = type.methods();", "+\t\tlong range;", "+\t\tif ((range = ReferenceBinding.binarySearch(selector, methods)) >= 0) {", "+\t\t\tint start = (int) range, end = (int) (range >> 32);", "+\t\t\tfor (int i = start; i <= end; i++) {", "+\t\t\t\tif (methods[i].areParametersEqual(method))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4fc95cb29e6f1045fc836aebb95cf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tvoid cleanLine(StringBuffer buffer, char[] line)", "signatureAfterChange": "  \tvoid addResultLine(StringBuffer buffer, char[] line)", "diff": ["-\tvoid cleanLine(StringBuffer buffer, char[] line) {", "-\t\tif (!CharOperation.match(RESULT_EXACT_MATCH, line, true))", "-\t\t\treturn;", "-\t\tif (buffer.length() > 0) buffer.append('\\n');", "-\t\tbuffer.append(line);", "-\t}", "+\tvoid addResultLine(StringBuffer buffer, char[] line) {", "+\t\tint[] positions = removeLastTypeArgument(line);", "+\t\tif (buffer.length() > 0) buffer.append('\\n');", "+\t\tif (positions != null) {", "+\t\t\tint stop = positions[0];", "+\t\t\tint restart = positions[1];", "+\t\t\tbuffer.append(line, 0, stop);", "+\t\t\tbuffer.append(line, restart, line.length-restart);", "+\t\t} else {", "+\t\t\tbuffer.append(line);"]}], "num": 45116}