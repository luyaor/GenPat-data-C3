{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9414d93579e10abf32b413dcce2fcc83", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080e1106d9047cc09c8b06b6ad2f0baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "0f549220f498cda7c86a65324f594a6b8e8c2616", "commitAfterChange": "17fcd420e0756889bcaffeff4cf983b2cff84a3e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public static int validateMatchRule(String stringPattern, int matchRule)", "signatureAfterChange": " public static int validateMatchRule(String stringPattern, int matchRule)", "diff": ["-\t\tboolean validCamelCase = false;", "-\t\tif (length > 1) {", "-\t\t\tint idx = 0;", "-\t\t\tchar ch = stringPattern.charAt(idx++);", "-\t\t\tif (ScannerHelper.isJavaIdentifierStart(ch)) {", "-\t\t\t\tch = stringPattern.charAt(idx++);", "-\t\t\t\tif (ScannerHelper.isUpperCase(ch)) {", "-\t\t\t\t\twhile (idx<length && ScannerHelper.isUpperCase(stringPattern.charAt(idx))) {", "-\t\t\t\t\t\tidx++;", "-\t\t\t\t\t}", "-\t\t\t\t\twhile (idx<length && (!ScannerHelper.isUpperCase(ch=stringPattern.charAt(idx)) && ScannerHelper.isJavaIdentifierPart(ch))) {", "-\t\t\t\t\t\tidx++;", "-\t\t\t\t\t}", "-\t\t\t\t\tvalidCamelCase = idx == length;", "-\t\t\t\t}", "-\t\t\t}", "+\t\tboolean validCamelCase = true;", "+\t\tfor (int i=0; i<length && validCamelCase; i++) {", "+\t\t\tchar ch = stringPattern.charAt(i++);", "+\t\t\tvalidCamelCase = ScannerHelper.isJavaIdentifierStart(ch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b8926148a9a85b1fd8efcccec0dd46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "dbb24333d1a9f6e740de2fc6e65eb72985f1b637", "commitAfterChange": "06941e026ea4dbfbd7f404b306f62a143ee43165", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\tpublic void preferenceChange(PreferenceChangeEvent event)", "signatureAfterChange": " \t\tpublic void preferenceChange(PreferenceChangeEvent event)", "diff": ["-\t\t\t// update the changed value in the options map.", "-\t\t\tMap<String, String> options = _optionsMaps.get(_proj);", "-\t\t\tif (null == options) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\toptions.put(event.getKey(), (String)event.getNewValue());", "-\t\t\t", "-\t\t\t// handle change to generated source directory", "-\t\t\tif ( AptPreferenceConstants.APT_GENSRCDIR.equals( event.getKey() ) ) {", "-", "-\t\t\t\tif ( event.getNewValue() != null && ! event.getNewValue().equals( event.getOldValue())) {", "-\t\t\t\t\tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( _proj );", "-\t\t\t\t\tgfm.setGeneratedSourceFolderName( (String)event.getNewValue() );", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "+            changePreference(event.getKey(), (String)event.getNewValue(), (String)event.getOldValue());"]}], "num": 57508}