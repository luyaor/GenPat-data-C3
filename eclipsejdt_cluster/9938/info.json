{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e52becadc68b98682a90e309eb261039", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c369932e458c585018ca3c52545313", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "19a809bd1e2b2fc92385fe5f8ca9f89249ad244c", "commitAfterChange": "bcb46990486d868577608d099b51c359510600ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies, Map rootToResolvedEntries)", "signatureAfterChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies, Map rootToResolvedEntries)", "diff": ["+\t\tlong start = -1;", "+\t\t\tstart = System.currentTimeMillis();", "-\t\t\t\t\t\tthis.packageFragments.put(pkgName, new IPackageFragmentRoot[] {(PackageFragmentRoot) existing, root});", "+\t\t\t\t\t\tif (!existing.equals(root))", "+\t\t\t\t\t\t\tthis.packageFragments.put(pkgName, new IPackageFragmentRoot[] {(PackageFragmentRoot) existing, root});", "-\t\t\t\t\t\tSystem.arraycopy(roots, 0, roots = new IPackageFragmentRoot[rootLength+1], 0, rootLength);", "-\t\t\t\t\t\troots[rootLength] = root;", "-\t\t\t\t\t\tthis.packageFragments.put(pkgName, roots);", "+\t\t\t\t\t\tboolean containsRoot = false;", "+\t\t\t\t\t\tfor (int j = 0; j < rootLength; j++) {", "+\t\t\t\t\t\t\tif (roots[j].equals(root)) {", "+\t\t\t\t\t\t\t\tcontainsRoot = true;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (containsRoot) {", "+\t\t\t\t\t\t\tSystem.arraycopy(roots, 0, roots = new IPackageFragmentRoot[rootLength+1], 0, rootLength);", "+\t\t\t\t\t\t\troots[rootLength] = root;", "+\t\t\t\t\t\t\tthis.packageFragments.put(pkgName, roots);", "+\t\t\t\t\t\t}", "+        if (VERBOSE) {", "+            System.out.println(Thread.currentThread() + \" -> spent: \" + (start - System.currentTimeMillis()) + \"ms\");  //$NON-NLS-1$ //$NON-NLS-2$", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c274365fefc719fcb1e64b0b0d6d94a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "c13b5c8fdc5b98528c9ff5d2f4f3b65852c12b48", "commitAfterChange": "08ce0253d3f5d5ff59d7d3b857a3b4f1f87c7e61", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic char[] findSource(IType type, IBinaryType info)", "signatureAfterChange": " \tpublic char[] findSource(IType type, IBinaryType info)", "diff": ["+\t\tlong time = 0;", "+\t\tif (VERBOSE) {", "+\t\t\ttime = System.currentTimeMillis();", "+\t\t}", "+\t\tIPackageFragment pkgFrag = type.getPackageFragment();", "-\t\t\tIPackageFragment pkgFrag = type.getPackageFragment();", "-\t\t\t\tString pkg = type.getPackageFragment().getElementName().replace('.', '/');", "+\t\t\t\tString pkg = pkgFrag.getElementName().replace('.', '/');", "+\t\t", "+\t\tif (!areRootPathsComputed) {", "+\t\t\tcomputeAllRootPaths(type);", "+\t\t}", "+\t\t", "-\t\t\tif (source == null) {", "-\t\t\t\t// Try to recompute it and add the new root path to the rootPaths collection", "-\t\t\t\tString newRootPath = computeRootPath(name);", "-\t\t\t\tif (newRootPath != null) {", "-\t\t\t\t\tif (this.rootPaths == null) {", "-\t\t\t\t\t\tthis.rootPaths = new HashSet();", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.rootPaths.add(newRootPath);", "-\t\t\t\t\tthis.rootPath = newRootPath;", "-\t\t\t\t\tsource = getSourceForRootPath(newRootPath, name);", "-\t\t\t\t}", "-\t\t\t}", "+\t\t}", "+\t\tif (VERBOSE) {", "+\t\t\tSystem.out.println(\"spent \" + (System.currentTimeMillis() - time) + \"ms for \" + type.getElementName());"]}], "num": 9938}