{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8bae189217429b68db25f0dda1e58c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cfdd2c07cb0505605b9a1563c21de90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1f208848d9d92ae1f4b172b0ad007166a9efef48", "commitAfterChange": "5b3251005dd395c785cb3022359f7008572b8d06", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor)", "signatureAfterChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor)", "diff": ["-\t\tprintModifiers(annotations, visitor, false);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfbce253a3ba7e80071547ebba05d36b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate int parseCheck(int stck[], int stack_top, int first_token, int buffer_position)", "signatureAfterChange": " \tprivate int parseCheck(int stck[], int stack_top, int first_token, int buffer_position)", "diff": ["+\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\tSystem.out.println(tempStackTop);", "+\t\t\t}", "+\t\t\t\t// same loop as 'process_non_terminal'", "+\t\t\t\t\t", "+\t\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\t\tSystem.out.print(\" (\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(-(Parser.rhs[act]-1));", "+\t\t\t\t\t\tSystem.out.print(\") [max:\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\t\t\tSystem.out.print(\"]\\tprocess_non_terminal\\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(act);", "+\t\t\t\t\t\tSystem.out.print(\"\\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.print(Parser.name[Parser.non_terminal_index[Parser.lhs[act]]]);", "+\t\t\t\t\t\tSystem.out.println();", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tif(Parser.rules_compliance[act] > this.options.sourceLevel) {", "+\t\t\t\t\t \treturn 0;", "+\t\t\t\t\t}", "+\t\t\t", "+\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\tSystem.out.println(tempStackTop);", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\tSystem.out.print(tempStackTop + 1);", "+\t\t\t\tSystem.out.print(\" (+1) [max:\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\tSystem.out.print(\"]\\tprocess_terminal    \\t\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(ct);", "+\t\t\t\tSystem.out.print(\"\\t\"); //$NON-NLS-1$", "+\t\t\t\tSystem.out.print(Parser.name[Parser.terminal_index[ct]]);", "+\t\t\t\tSystem.out.println();", "+\t\t\t}", "+\t\t\t", "+\t\t\t\t", "+\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\tSystem.out.print(\" (-1) [max:\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\t\tSystem.out.print(\"]\\treduce\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.println();", "+\t\t\t\t}", "-\t\t\t\t\t act -= ERROR_ACTION;", "+\t\t\t\t\tact -= ERROR_ACTION;", "+\t\t\t\t\t", "+\t\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\t\tSystem.out.print(\"\\tshift reduce\"); //$NON-NLS-1$", "+\t\t\t\t\t\tSystem.out.println();", "+\t\t\t\t\t}", "+\t\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\t\tSystem.out.println(\"\\tshift\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t// same loop as first token initialization", "+\t\t\t\t", "+\t\t\t\tif(DEBUG_PARSECHECK) {", "+\t\t\t\t\tSystem.out.print(tempStackTop);", "+\t\t\t\t\tSystem.out.print(\" (\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(-(Parser.rhs[act]-1));", "+\t\t\t\t\tSystem.out.print(\") [max:\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(max_pos);", "+\t\t\t\t\tSystem.out.print(\"]\\tprocess_non_terminal\\t\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(act);", "+\t\t\t\t\tSystem.out.print(\"\\t\"); //$NON-NLS-1$", "+\t\t\t\t\tSystem.out.print(Parser.name[Parser.non_terminal_index[Parser.lhs[act]]]);", "+\t\t\t\t\tSystem.out.println();", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tif(act <= NUM_RULES) {", "+\t\t\t\t\tif(Parser.rules_compliance[act] > this.options.sourceLevel) {", "+\t\t\t\t\t \treturn 0;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 6787}