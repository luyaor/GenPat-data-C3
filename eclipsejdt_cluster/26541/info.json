{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf8dbed3998b39b38ebc9b803bfd1521", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c04fc2352e2775743b5a950228a691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "commitAfterChange": "1bf6db68524b43c8e140351de0b8d9940aee5925", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "signatureAfterChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "diff": ["-\tif (!compatible.isPartOfRawType()) return false;", "-\tdo {", "-\t\tif (compatible.isRawType() && (targetType.isBoundParameterizedType() || targetType.isGenericType())) {", "+", "+\twhile (compatible.isRawType()) {", "+\t\tif (targetType.isBoundParameterizedType() || targetType.isGenericType()) {", "-\t} while ((compatible = compatible.enclosingType()) != null && (targetType = targetType.enclosingType()) != null);", "+\t\tif (compatible.isStatic()) break;", "+\t\tif ((compatible = compatible.enclosingType()) == null) break;", "+\t\tif ((targetType = targetType.enclosingType()) == null) break;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4482f596273cc0762cd649888e6d7895", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "509b5d0893b6487ed9d9f869674ce451a529a2e9", "commitAfterChange": "fe90b8dc2ad912f6469c4bf76947d5468c18045b", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4) {", "-\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_5) {", "-\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_5) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_6) {", "-\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_6) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);"]}], "num": 26541}