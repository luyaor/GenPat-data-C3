{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72a8eec4e039c3953d7ab7d6d353b22e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13b0c06108b86800e48c45a502d25a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "66645ff7b2e7900a6e51de489fc3a747bdbf1458", "commitAfterChange": "a24bdada3de440570b8b103bca0325b799f298f1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected void checkCompilerLog(String[] testFiles, Requestor requestor,  \t\t\tString platformIndependantExpectedLog, Throwable exception)", "signatureAfterChange": " \tprotected void checkCompilerLog(String[] testFiles, Requestor requestor,  \t\t\tString platformIndependantExpectedLog, Throwable exception)", "diff": ["-\t\t\tSystem.out.println(getClass().getName() + '#' + getName());", "+\t\t\tlogTestTitle();", "-\t\t\tfor (int i = 0; i < testFiles.length; i += 2) {", "-\t\t\t\tSystem.out.print(testFiles[i]);", "-\t\t\t\tSystem.out.println(\" [\"); //$NON-NLS-1$", "-\t\t\t\tSystem.out.println(testFiles[i + 1]);", "-\t\t\t\tSystem.out.println(\"]\"); //$NON-NLS-1$", "-\t\t\t}", "+\t\t\tlogTestFiles(false, testFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f493491876c631ca9251c5f1b963bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "667082d03e8bfe408693d885daad756a164263a3", "commitAfterChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic boolean visit(ArrayCreation node)", "signatureAfterChange": " \tpublic boolean visit(ArrayCreation node)", "diff": ["-", "-\t\telementType.accept(this);", "-", "-\t\tfor (int i= 0; i < list.size(); i++) {", "-\t\t\tthis.result.append('[');", "-\t\t\t((ASTNode) list.get(i)).accept(this);", "-\t\t\tthis.result.append(']');", "-\t\t\tdimensions--;", "-\t\t}", "+\t\tvisitArrayTypeWithExpression(arrayType, list, --dimensions);", "-\t\t// add empty \"[]\" for each extra array dimension", "-\t\tfor (int i= 0; i < dimensions; i++) {", "-\t\t\tthis.result.append(\"[]\"); //$NON-NLS-1$", "-\t\t}"]}], "num": 15283}