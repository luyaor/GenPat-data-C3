{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2844e1be0849492243479c8f567b9bf4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "307b39777e2a71059778d42e8d21f4a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "747c1eb91c4c0949e5f9ce17bdd2a765ef496fa4", "commitAfterChange": "f657f893ed970d58ce4565eab2924c903044ce31", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "signatureAfterChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "diff": ["-\tString lhs_fileName = prefix + (++i) + \".rsc\"; //$NON-NLS-1$", "-\tbuildFileOfIntFor(lhs_fileName, \"lhs\", tokens); //$NON-NLS-1$", "+\tchar[] newLhs = buildFileOfIntFor(prefix + (++i) + \".rsc\", \"lhs\", tokens); //$NON-NLS-1$ //$NON-NLS-2$", "-\tString non_terminal_index_fileName = prefix + (++i) + \".rsc\"; //$NON-NLS-1$", "-\tbuildFileOfIntFor(non_terminal_index_fileName, \"non_terminal_index\", tokens); //$NON-NLS-1$", "+\tchar[] newNonTerminalIndex = buildFileOfIntFor(prefix + (++i) + \".rsc\", \"non_terminal_index\", tokens); //$NON-NLS-1$ //$NON-NLS-2$", "-\tString name_fileName = prefix + (++i) + \".rsc\";//$NON-NLS-1$", "-\tbuildFileForName(name_fileName, new String(contents));", "+\tString[] newName = buildFileForName(prefix + (++i) + \".rsc\", new String(contents)); //$NON-NLS-1$", "-\tbuildFileForReadableName(READABLE_NAMES_FILE+\".properties\", lhs_fileName, non_terminal_index_fileName, name_fileName, tokens);//$NON-NLS-1$", "+\tbuildFileForReadableName(READABLE_NAMES_FILE+\".properties\", newLhs, newNonTerminalIndex, newName, tokens);//$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0a7a922100bf3937968018d19c3f640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d95cddc2779658eead76d04d49201937dc19989e", "commitAfterChange": "16d13599c672f7d6ba6274375893bf3e03d51bfe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " public final static void buildFilesFromLPG(String dataFilename)\tthrows java.io.IOException", "signatureAfterChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "diff": ["-public final static void buildFilesFromLPG(String dataFilename)\tthrows java.io.IOException {", "+public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException {", "-\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"lhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\t", "+\tString lhs_fileName = prefix + (++i) + \".rsc\"; //$NON-NLS-1$", "+\tbuildFileOfIntFor(lhs_fileName, \"lhs\", tokens); //$NON-NLS-1$", "-\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"non_terminal_index\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tString non_terminal_index_fileName = prefix + (++i) + \".rsc\"; //$NON-NLS-1$", "+\tbuildFileOfIntFor(non_terminal_index_fileName, \"non_terminal_index\", tokens); //$NON-NLS-1$", "-\tbuildFileForName(prefix + (++i) + \".rsc\", new String(contents));//$NON-NLS-1$", "+\tString name_fileName = prefix + (++i) + \".rsc\";//$NON-NLS-1$", "+\tbuildFileForName(name_fileName, new String(contents));", "+\t", "+\tcontents = new char[] {};", "+\ttry {", "+\t\tcontents = Util.getFileCharContent(new File(dataFilename2), null);", "+\t} catch (IOException ex) {", "+\t\tSystem.out.println(Util.bind(\"parser.incorrectPath\")); //$NON-NLS-1$", "+\t\treturn;", "+\t}", "+\tst = new java.util.StringTokenizer(new String(contents), \"\\t\\n\\r=\");  //$NON-NLS-1$", "+\ttokens = new String[st.countTokens()];", "+\ti = 0;", "+\twhile (st.hasMoreTokens()) {", "+\t\ttokens[i++] = st.nextToken();", "+\t}", "+\tbuildFileForReadableName(READABLE_NAMES_FILE+\".properties\", lhs_fileName, non_terminal_index_fileName, name_fileName, tokens);//$NON-NLS-1$"]}], "num": 38028}