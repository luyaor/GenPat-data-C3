{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd4b3be6ada8040171325d92667d6ef0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a8beecc7302a4a2963f83c28df047a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "448ae23adb108f1617f4369b1adec593688f3d28", "commitAfterChange": "69fffb15fc59ff123f4afc9cb4102b90d392b429", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\tprivate void endTag(String name)", "signatureAfterChange": " \t\tprivate void endTag(String name)", "diff": ["-\t\t\t((GenericXMLWriter) this.log).endTag(name, true, true);", "+\t\t\tif (this.log != null) {", "+\t\t\t\t((GenericXMLWriter) this.log).endTag(name, true, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3e0e6cba19f99e8beefd53e42abb05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   \tpublic void resetStateForCodeGeneration()", "signatureAfterChange": "   \tpublic void resetStateForCodeGeneration()", "diff": ["-", "-\t\tthis.breakLabel.resetStateForCodeGeneration();", "+\t\tif (this.breakLabel != null) {", "+\t\t\tthis.breakLabel.resetStateForCodeGeneration();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103fd6c5e264b488cba29eab8ea5447e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "98c08ded096494364ca74f948e8f494b3f447e89", "commitAfterChange": "423cede7ef9cde15030dc54ef2266be4ddcc9112", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void initialize() throws IOException", "signatureAfterChange": " public void initialize() throws IOException", "diff": ["-\tthis.zipFile = new ZipFile(this.file);", "+\tif (this.zipFile == null) {", "+\t\tthis.zipFile = new ZipFile(this.file);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20969a35d2443c429635323b90b77269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "ed45f69d40b17b59915e726fa4a306f40a296886", "commitAfterChange": "3168f520c145ac4dd47d54a812acd1c888ed8ea9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType)", "signatureAfterChange": " \t \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType)", "diff": ["-\t\tthis.valueIfTrue.checkAgainstFinalTargetType(targetType);", "-\t\tthis.valueIfFalse.checkAgainstFinalTargetType(targetType);", "-\t\tthis.resolvedType = targetType;", "-\t\treturn targetType;", "+\t\tif (isPolyExpression()) {", "+\t\t\tthis.valueIfTrue.checkAgainstFinalTargetType(targetType);", "+\t\t\tthis.valueIfFalse.checkAgainstFinalTargetType(targetType);", "+\t\t\tthis.resolvedType = targetType;", "+\t\t}", "+\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250f0dd5145bf8c74f490b8aa1f44eae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resetStateForCodeGeneration()", "signatureAfterChange": "  \tpublic void resetStateForCodeGeneration()", "diff": ["-", "-\t\tthis.subRoutineStartLabel.resetStateForCodeGeneration();", "+\t\tif (this.subRoutineStartLabel != null) {", "+\t\t\tthis.subRoutineStartLabel.resetStateForCodeGeneration();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3690937e093224d9a3145fa6b8b8d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BinaryFileOutputStream.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate void saveToDisk(InputStream toSave, boolean create) throws IOException", "signatureAfterChange": " \t \tprivate void saveToDisk(InputStream toSave, boolean create) throws IOException", "diff": ["-\t\t\tAptPlugin.log(ce, \"Could not create generated file\"); //$NON-NLS-1$", "-\t\t\tthrow new IOException(ce.getMessage());", "+\t\t\tif (_file.exists()) {", "+\t\t\t\t// Do nothing. This is a case-insensitive file system mismatch,", "+\t\t\t\t// and the underlying platform has saved the contents already.", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tAptPlugin.log(ce, \"Could not create generated file\"); //$NON-NLS-1$", "+\t\t\t\tthrow new IOException(ce.getMessage());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514b6fa1f8b4e0ab32389a143adb7809", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TestPessimisticProvider.java", "commitBeforeChange": "847811aba616fe8ef974c21595a3a8f5a0b4a4ab", "commitAfterChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void setReadOnly(IResource resource, boolean readOnly) throws CoreException", "signatureAfterChange": "  \tpublic void setReadOnly(IResource resource, boolean readOnly) throws CoreException", "diff": ["-\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "-\t\tif (resourceAttributes != null) {", "-\t\t\tresourceAttributes.setReadOnly(readOnly);", "-\t\t\tresource.setResourceAttributes(resourceAttributes);", "-\t\t}\t\t", "-\t}", "+\t\tif (Util.isReadOnlySupported()) {", "+\t\t\tResourceAttributes resourceAttributes = resource.getResourceAttributes();", "+\t\t\tif (resourceAttributes != null) {", "+\t\t\t\tresourceAttributes.setReadOnly(readOnly);", "+\t\t\t\tresource.setResourceAttributes(resourceAttributes);", "+\t\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cfaa6c0bf46bc272ccb2a8edba9aff4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BranchStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void resetStateForCodeGeneration()", "signatureAfterChange": " public void resetStateForCodeGeneration()", "diff": ["-\tthis.targetLabel.resetStateForCodeGeneration();", "+\tif (this.targetLabel != null) {", "+\t\tthis.targetLabel.resetStateForCodeGeneration();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5687da50af4246ea64d3f255ad6b7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t// default is to report a match as a regular ref.", "-\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\tif (locator.encloses(element)) {", "+\t\t// default is to report a match as a regular ref.", "+\t\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43ff3300092cc76358f3094783b132b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "6a31f7b894cb57eee0afe92309b5b578eca7edb4", "commitAfterChange": "bf2e2c31e0526a90c108625fb27251b19561bd51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprivate ExternalFoldersManager()", "signatureAfterChange": "  \tprivate ExternalFoldersManager()", "diff": ["-\t\tgetFolders();", "+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=377806", "+\t\tif (Platform.isRunning()) {", "+\t\t\tgetFolders();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa408a25146c9453d476e36de43d8a78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r public void open(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r public void open(IProgressMonitor pm) throws JavaModelException", "diff": ["-\tthis.open(pm, null);\r", "-}\r", "+\t\tthis.openWhenClosed(pm);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87cfd5d97727d137ee2c661cdf39531", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "dce94b0c0eeb9d47d8633b3457a8df0582e6afe6", "commitAfterChange": "ebe45f1f388a3abbe4072748912313068fb2673a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resetStateForCodeGeneration()", "signatureAfterChange": "  \tpublic void resetStateForCodeGeneration()", "diff": ["-", "-\t\tthis.targetLabel.resetStateForCodeGeneration();", "+\t\tif (this.targetLabel != null) {\t", "+\t\t\tthis.targetLabel.resetStateForCodeGeneration();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c10275ad60a91e85817f7a7c460c9ec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "3671d0e017d81395ff4a6bea02d5d5cfc7d04dd3", "commitAfterChange": "70823bcdc247c361af65329f86a126cf9616a2fa", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void shutdown()", "signatureAfterChange": " \tpublic void shutdown()", "diff": ["-\t\t\tthread.join();", "+\t\t\tif (thread != null) { // see http://bugs.eclipse.org/bugs/show_bug.cgi?id=31858", "+\t\t\t\tthread.join();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf994b8c6c88c2971677d68ccc92cfe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "35fd76e356146458b564c231f44085c52b0d1c47", "commitAfterChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void consumeType()", "signatureAfterChange": " \t \tpublic void consumeKey()", "diff": ["-\tpublic void consumeType() {", "-\t\tthis.typeBinding = getArrayBinding(this.dimension, this.typeBinding);", "-\t\tthis.compilerBinding = this.typeBinding;", "+\tpublic void consumeKey() {", "+\t\tif (this.typeBinding != null) {", "+\t\t\tthis.typeBinding = getArrayBinding(this.dimension, this.typeBinding);", "+\t\t\tthis.compilerBinding = this.typeBinding;", "+\t\t}"]}], "num": 38}