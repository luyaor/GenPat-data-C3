{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ecb60a2ef379d3e3a76b3dca22c80b9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0853fbd6fd89cb5e550bf032d54f895b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "ff0f273134715ebe56da0c734cf01d3ec147080d", "commitAfterChange": "d4a7d6c22416e2be9cf431487df4dcd297320b81", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " SimpleSet findSuperinterfaceCollisions(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "signatureAfterChange": " SimpleSet findSuperinterfaceCollisions(ReferenceBinding superclass, ReferenceBinding[] superInterfaces)", "diff": ["-\tif (!this.type.isHierarchyInconsistent())", "-\t\treturn null; // hasErasedCandidatesCollisions() did NOT mark the type has inconsistent", "-", "+\tboolean isInconsistent = this.type.isHierarchyInconsistent();", "+\t\tisInconsistent |= superType.isHierarchyInconsistent();", "+\t\t\tisInconsistent |= superType.isHierarchyInconsistent();", "+\tif (!isInconsistent) return null; // hierarchy is consistent so no collisions are possible"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "534509309c80551e717cfc45d38abcb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tif (this.constant != NotAConstant) {", "+\tif (this.constant != Constant.NotAConstant) {", "-\t\t\tif (!this.codegenBinding.isConstantValue()) {", "+\t\t\tConstant fieldConstant = this.codegenBinding.constant();", "+\t\t\tif (fieldConstant == Constant.NotAConstant) {", "-\t\t\t\tcodeStream.generateConstant(this.codegenBinding.constant(), this.implicitConversion);", "+\t\t\t\tcodeStream.generateConstant(fieldConstant, this.implicitConversion);"]}], "num": 68635}