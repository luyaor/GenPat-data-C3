{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71e0e8a679bb55d6e74b5689c4eb5842", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3510f45bc6486d890f91636aca3e2ee8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "c1bb30283df026c4a2a5d897b14fca7bf877a83d", "commitAfterChange": "1f0c86832f53bb27ba689df50c93da060905a26e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "signatureAfterChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "diff": ["+\t\t\t} else if ((offset + length == previousOffset) && (previousLength + length == replacementLength + previousReplacementLength)) {", "+\t\t\t\t// check if both edits corresponds to the orignal source code", "+\t\t\t\tboolean canBeRemoved = true;", "+\t\t\t\tString totalReplacement = replacement + previousReplacement;", "+\t\t\t\tloop: for (int i = 0; i < previousLength + length; i++) {", "+\t\t\t\t\tif (scanner.source[i + offset] != totalReplacement.charAt(i)) {", "+\t\t\t\t\t\tthis.edits[this.editsIndex - 1] = new OptimizedReplaceEdit(offset, previousLength + length, totalReplacement);", "+\t\t\t\t\t\tcanBeRemoved = false;", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (canBeRemoved) {", "+\t\t\t\t\tif (this.currentAlignment != null) {", "+\t\t\t\t\t\tfinal Location location = this.currentAlignment.location;", "+\t\t\t\t\t\tif (location.editsIndex == this.editsIndex) {", "+\t\t\t\t\t\t\tlocation.editsIndex--;", "+\t\t\t\t\t\t\tlocation.textEdit = previous;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.editsIndex--;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f45352551635ff89a69c61ec0d688ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "a4c0884f4909a7148eef43d80a79301d90c42921", "commitAfterChange": "04ac73525421db342cbea7b61068c93b1fac3e50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t\tpublic boolean accept(File pathname)", "signatureAfterChange": " \t\t \t\tpublic boolean accept(File pathname)", "diff": ["-\t\t{", "-\t\t\tpublic boolean accept(File pathname)", "-\t\t\t{", "-\t\t\t\tIPath f = new Path( pathname.getAbsolutePath() );", "-", "-\t\t\t\tint nsegments = f.matchingFirstSegments( new Path(", "-\t\t\t\t\tgetPluginClassesDir() ) );", "-\t\t\t\tboolean ok = true;", "-\t\t\t\tint min = Math.min( f.segmentCount() - nsegments,", "-\t\t\t\t\tANNOTATIONS_PKG_PARTS.length );", "-\t\t\t\tfor( int i = nsegments, j = 0; j < min; i++, j++ )", "-\t\t\t\t{", "-\t\t\t\t\tif( !f.segment( i ).equals( ANNOTATIONS_PKG_PARTS[j] ) )", "-\t\t\t\t\t{", "-\t\t\t\t\t\tok = false;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn ok;", "-\t\t\t}", "+\t\t", "+\t\tpublic boolean accept(File pathname)", "+\t\t{", "+\t\t\tIPath f = new Path( pathname.getAbsolutePath() );", "+\t\t\tint nsegments = f.matchingFirstSegments( _binDir );", "+\t\t\tboolean ok = true;", "+\t\t\tint min = Math.min( f.segmentCount() - nsegments,", "+\t\t\t\t\t_packageParts.length );", "+\t\t\tfor( int i = nsegments, j = 0; j < min; i++, j++ )", "+\t\t\t{", "+\t\t\t\tif( !f.segment( i ).equals( _packageParts[j] ) )", "+\t\t\t\t{", "+\t\t\t\t\tok = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn ok;", "+\t\t}"]}], "num": 61150}