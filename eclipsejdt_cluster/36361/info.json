{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "032c8a4543f56469d7e9be9a23831186", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14672d7eb1b8946674c3a54a3a3579e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "a7fe6395dce54d2384dd4aa345db8c43a8d1a565", "commitAfterChange": "8b8c1ed665af3bdbf0dad55abbadedba77110867", "methodNumberBeforeChange": 368, "methodNumberAfterChange": 368, "signatureBeforeChange": " public void test1050_options_all_default()", "signatureAfterChange": " public void test1050_options_all_default()", "diff": ["+// changed default for null access to warning", "-\t\tthis.runConformTest(", "+\t\trunTest(", "-\t\t\t\t  \"}\\n\"});", "+\t\t\t\t  \"}\\n\"", "+\t\t\t\t  } /* testFiles */,", "+\t\t\tfalse /* expectingCompilerErrors */,", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\to.toString();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Null pointer access: The variable o can only be null at this location\\n\" + ", "+\t\t\t\"----------\\n\" /* expectedCompilerLog */,", "+\t\t\t\"\" /* expectedOutputString */,", "+\t\t\tfalse /* forceExecution */,", "+\t\t\tnull /* classLib */,", "+\t\t\ttrue /* shouldFlushOutputDirectory */, ", "+\t\t\tnull /* vmArguments */, ", "+\t\t\tnull /* customOptions */,", "+\t\t\tnull /* clientRequestor */,", "+\t\t\tfalse /* skipJavac */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b45f612c33c8f5df9e3528f9f31f61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProgrammingProblemsTest.java", "commitBeforeChange": "11d133b5f616706b0584be738dcd49dfc1721768", "commitAfterChange": "3df203dd14216a5a05c7609bcd2dd61cc345cbe4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void test0034_declared_thrown_checked_exceptions()", "signatureAfterChange": " public void test0034_declared_thrown_checked_exceptions()", "diff": ["-\t\t\t\"  public void foo() {\\n\" + ", "+\t\t\t\"  public void foo() throws Throwable {\\n\" + ", "+\t\t\t\"}\"", "+\t\t\t},", "+\t\tnull /* errorOptions */,", "+\t\tnew String[] {", "+\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException", "+\t\t\t} /* warningOptions */,", "+\t\tnull /* ignoreOptions */,", "+\t\tfalse /* expectingCompilerErrors */,", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tpublic void foo() throws Throwable {\\n\" + ", "+\t\t\"\t                         ^^^^^^^^^\\n\" + ", "+\t\t\"The declared exception Throwable is not actually thrown by the method foo() from type X\\n\" + ", "+\t\t\"----------\\n\" /* expectedCompilerLog */,", "+\t\t\"\" /* expectedOutputString */,", "+\t\tfalse /* forceExecution */,", "+\t\tnull /* classLib */,", "+\t\ttrue /* shouldFlushOutputDirectory */, ", "+\t\tnull /* vmArguments */, ", "+\t\tcustomOptions,", "+\t\tnull /* clientRequestor */,", "+\t\ttrue /* skipJavac */);", "+}"]}], "num": 36361}