{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "665f739c37507b167685ef758642a298", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fbd58cb7275100dad2206f67c918cd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "28b443981c71a5524cd8b98cc2e3b0a404e9b941", "commitAfterChange": "63dd935c4ddd77e21a308d8409617c74ad6fb4bf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void printBlockComment(char[] s)", "signatureAfterChange": " \tpublic void printBlockComment(char[] s)", "diff": ["-\t\tStringTokenizer tokenizer = new StringTokenizer(new String(s), \"\\r\\n\");\t//$NON-NLS-1$", "+\t\tString commentSource = new String(s);", "+\t\tStringTokenizer tokenizer = new StringTokenizer(commentSource, \"\\r\\n\");\t//$NON-NLS-1$", "+\t\tint startSearchIndex = 0;", "-\t\t\t\tbuffer.append(lineContents);", "-\t\t\t\tcolumn += lineContents.length();", "+\t\t\t\tString reduceLine = lineContents.trim();", "+\t\t\t\tfinal int reduceLineLength = reduceLine.length();", "+\t\t\t\tif (this.positionsToMap != null) {", "+\t\t\t\t\tint start = commentSource.indexOf(reduceLine, startSearchIndex);", "+\t\t\t\t\tmapPositions(start, this.buffer.length(), reduceLineLength);", "+\t\t\t\t\tstartSearchIndex = start + reduceLineLength + 1;", "+\t\t\t\t}", "+\t\t\t\tbuffer.append(reduceLine);", "+\t\t\t\tcolumn += reduceLineLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8b681e17744b7b02ad56e14f133539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/APIDocumentationTests.java", "commitBeforeChange": "d6d10602861f99a2e87d2ce2ba051c7b3da388a8", "commitAfterChange": "7e04164b6ff5e1f953daad29cd865817aa19cb20", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void analyze()", "signatureAfterChange": " \tprivate void analyze()", "diff": ["-\t\t\t\t\tif (line.startsWith(\" * <dt>Option id:\")) {", "-\t\t\t\t\t\tthis.optionID = line.substring(33, line.length() - 13);", "-\t\t\t\t\t} else if (line.startsWith(\" * <dt>Default:\")) {", "-\t\t\t\t\t\tthis.defaultValue = line.substring(31, line.length() - 13);", "-\t\t\t\t\t\treturn;", "+\t\t\t\t\tint start = line.indexOf(OPTION_BEGIN);", "+\t\t\t\t\tif (start > -1) {", "+\t\t\t\t\t\tint end = line.indexOf(END, start);", "+\t\t\t\t\t\tthis.optionID = line.substring(start+OPTION_BEGIN.length(), end);", "+\t\t\t\t\tstart = line.indexOf(DEFAULT_BEGIN);", "+\t\t\t\t\tif (start > -1) {", "+\t\t\t\t\t\tint end = line.indexOf(END, start);", "+\t\t\t\t\t\tthis.defaultValue = line.substring(start+DEFAULT_BEGIN.length(), end);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (this.optionID != null && this.defaultValue != null)", "+\t\t\t\t\t\treturn;"]}], "num": 28823}