{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74e3cd8a9c6aa9688c6f875f420ad78e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6b4ba338a591d23859a6b87cc88cd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "027433d18c80815de3076b7fd489422a48401f1a", "commitAfterChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate JavaElement getJavaElement(LocalVariableBinding binding)", "signatureAfterChange": "  \tprivate JavaElement getJavaElement(LocalVariableBinding binding)", "diff": ["-\t\tReferenceContext referenceContext = binding.declaringScope.referenceContext();", "+\t\tReferenceContext referenceContext = binding.declaringScope.isLambdaSubscope() ? binding.declaringScope.namedMethodScope().referenceContext() : binding.declaringScope.referenceContext();", "-\t\t\t\tUtil.typeSignature(local.type),", "+\t\t\t\tlocal.type == null ? Signature.createTypeSignature(binding.type.readableName(), true) : Util.typeSignature(local.type),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f00ff62d6e3e5bcc53587caf6792a950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "1cea001b9d44aeafa7d8262bd9f3c32408e69f62", "commitAfterChange": "c39067a219cc5b11225cbf55d515b0b3b7602c21", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "signatureAfterChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "diff": ["-\t\t\tTypeBinding firstErasure = firstType.erasure();", "+\t\t\tTypeBinding firstErasure = firstType.isTypeVariable() ? firstType : firstType.erasure();", "-\t\t\t\t\tTypeBinding itsInterfaceErasure = itsInterface.erasure();", "+\t\t\t\t\tTypeBinding itsInterfaceErasure = itsInterface.isTypeVariable() ? itsInterface : itsInterface.erasure();", "-\t\t\t\t\tTypeBinding itsSuperclassErasure = itsSuperclass.erasure();", "+\t\t\t\t\tTypeBinding itsSuperclassErasure = itsSuperclass.isTypeVariable() ? itsSuperclass : itsSuperclass.erasure();", "-\t\t\t\terasedSuperTypes[rank++] = ((TypeBinding)iter.next()).erasure();", "+\t\t\t\tTypeBinding type = (TypeBinding)iter.next();", "+\t\t\t\terasedSuperTypes[rank++] = type.isTypeVariable() ? type : type.erasure();"]}], "num": 70269}