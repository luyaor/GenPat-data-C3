{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "468ecceab5555bc42a2c778129fc262a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092bb52427e5aa6e95d832f45efab01b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "72dd2259c6b0bf873e52961aeda8ec4762bdb50b", "commitAfterChange": "10d3d29806a9eb1e3355f50b876505f44e0cf880", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic ICompilationUnit[] getWorkingCopies(WorkingCopyOwner owner, boolean addPrimary)", "signatureAfterChange": " \tpublic ICompilationUnit[] getWorkingCopies(WorkingCopyOwner owner, boolean addPrimary)", "diff": ["+\t\t\tint index = 0;", "-\t\t\t\tSystem.arraycopy(primaryWCs, 0, result, 0, primaryLength);", "+\t\t\t\tfor (int i = 0; i < primaryLength; i++) {", "+\t\t\t\t\tICompilationUnit primaryWorkingCopy = primaryWCs[i];", "+\t\t\t\t\tICompilationUnit workingCopy = new CompilationUnit((PackageFragment) primaryWorkingCopy.getParent(), primaryWorkingCopy.getElementName(), owner);", "+\t\t\t\t\tif (!workingCopyToInfos.containsKey(workingCopy))", "+\t\t\t\t\t\tresult[index++] = primaryWorkingCopy;", "+\t\t\t\t}", "+\t\t\t\tif (index != primaryLength)", "+\t\t\t\t\tSystem.arraycopy(result, 0, result = new ICompilationUnit[index+size], 0, index);", "-\t\t\tint index = primaryLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d32004b4d2addcf64461e5f389e9301", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "e94247ea6ac5ec863496bda9d3658e2dc349e6ab", "commitAfterChange": "9448736fbeb476ae8eacb15d6ea8788cf2db77a1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private int getHtmlTagIndex(char[] htmlTag)", "signatureAfterChange": " private int getHtmlTagIndex(char[] htmlTag)", "diff": ["+\tint tagId = 0;", "+\t\tfor (int i=0, max=IJavaDocTagConstants.JAVADOC_SPECIAL_TAGS.length; i<max; i++) {", "+\t\t\tchar[] tag = IJavaDocTagConstants.JAVADOC_SPECIAL_TAGS[i];", "+\t\t\tif (length == tag.length && CharOperation.equals(htmlTag, tag, false)) {", "+\t\t\t\ttagId = JAVADOC_SPECIAL_TAGS_ID;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\t\t\treturn JAVADOC_SINGLE_BREAK_TAG_ID + i;", "+\t\t\t\treturn (tagId | JAVADOC_SINGLE_BREAK_TAG_ID) + i;", "-\t\t\t\treturn JAVADOC_CODE_TAGS_ID + i;", "+\t\t\t\treturn (tagId | JAVADOC_CODE_TAGS_ID) + i;", "-\t\t\t\treturn JAVADOC_BREAK_TAGS_ID + i;", "+\t\t\t\treturn (tagId | JAVADOC_BREAK_TAGS_ID) + i;", "-\t\t\t\treturn JAVADOC_IMMUTABLE_TAGS_ID + i;", "+\t\t\t\treturn (tagId | JAVADOC_IMMUTABLE_TAGS_ID) + i;", "-\t\t\t\treturn JAVADOC_SEPARATOR_TAGS_ID + i;", "+\t\t\t\treturn (tagId | JAVADOC_SEPARATOR_TAGS_ID) + i;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abfbb789af5c3fc03cb0e1fa55103936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "e5ec858b61a389d637c622e33623fd1d71a39c0b", "commitAfterChange": "94766f343683d59a7b041742c84a770b158a6400", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t\t\tif (compilerArgs.length != 0) {", "-\t\t        cmd.addArguments(compilerArgs);", "+\t\t\tfinal int length = compilerArgs.length;", "+\t\t\tif (length != 0) {", "+\t\t\t\tfor (int i = 0, max = length; i < max; i++) {", "+\t\t\t\t\tString arg = compilerArgs[i];", "+\t\t\t\t\tif (this.logFileName == null && \"-log\".equals(arg) && ((i + 1) < max)) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.logFileName = compilerArgs[i + 1];", "+\t\t\t\t\t}", "+\t\t\t        cmd.createArgument().setValue(arg);", "+\t\t\t\t}"]}], "num": 52990}