{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c32d993360cd37469cf360fd1cd1f02f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35dc88b385695bdc552ceaec7fc7a7fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "96e4072a76c3a91579211c50af335fca366c6865", "commitAfterChange": "0820a82c6894474b441ab0cfbd23169998d12164", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source)", "diff": ["-\t\tif (source == null) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\tCompilationUnitDeclaration compilationUnitDeclaration = ", "-\t\t\tCompilationUnitResolver.parse(source, JavaCore.getOptions()); // no better custom options", "-", "-\t\tASTConverter converter = new ASTConverter(JavaCore.getOptions(), false);", "-\t\tAST ast = new AST();", "-\t\tast.setBindingResolver(new BindingResolver());", "-\t\tconverter.setAST(ast);", "-\t\t\t\t", "-\t\tCompilationUnit cu = converter.convert(compilationUnitDeclaration, source);", "-\t\t", "-\t\t// line end table should be extracted from scanner", "-\t\tcu.setLineEndTable(compilationUnitDeclaration.compilationResult.lineSeparatorPositions);", "-\t\treturn cu;", "+\t\treturn parseCompilationUnit(source, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c6572b15675be246a91ed34484b5a2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "d58ac9ff3539593dfae389309f0a004a827e6e1d", "commitAfterChange": "fb7a35642d5a98e1d93d405beda0d552d2abaaa6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options, IProgressMonitor monitor)", "diff": ["+\t */", "+\tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options, IProgressMonitor monitor) {", "+\t\treturn parseCompilationUnit(source, options);", "+\t}", "-\tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options, IProgressMonitor monitor) {", "-\t\tASTConverter converter = new ASTConverter(options, false, monitor);"]}], "num": 54206}