{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bceefd65a9a5a675adc009bc2ef1286", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77cda90df4fa167a891da65a9face20b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1d5b841741b609cf6927afba3dde0ac1dd2572e2", "commitAfterChange": "09c7c7b4fe8a9c0ad49252ee63d32d12d87dd8ea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate static ISearchableNameEnvironment getNameEnvironment(JavaProject project, WorkingCopyOwner owner, final IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \t\tCancelableNameEnvironment(JavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "diff": ["+", "+\t\tCancelableNameEnvironment(JavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException {", "+\t\t\tsuper(project, owner);", "+\t\t\tthis.monitor = monitor;", "+\t\t}", "-\tprivate static ISearchableNameEnvironment getNameEnvironment(JavaProject project, WorkingCopyOwner owner, final IProgressMonitor monitor) throws JavaModelException {", "-\t\treturn new SearchableEnvironment(project, owner) {", "-\t\t\tprivate void checkCanceled() {", "-\t\t\t\tif (monitor != null && monitor.isCanceled()) ", "-\t\t\t\t\tthrow new AbortCompilation(true/*silent*/, new OperationCanceledException());", "-\t\t\t}", "-\t\t\tpublic void findPackages(char[] prefix, ISearchRequestor requestor) {", "-\t\t\t\tcheckCanceled();", "-\t\t\t\tsuper.findPackages(prefix, requestor);", "-\t\t\t}", "-\t\t\tpublic NameEnvironmentAnswer findType(char[] name, char[][] packageName) {", "-\t\t\t\tcheckCanceled();", "-\t\t\t\treturn super.findType(name, packageName);", "-\t\t\t}", "-\t\t\tpublic NameEnvironmentAnswer findType(char[][] compoundTypeName) {", "-\t\t\t\tcheckCanceled();", "-\t\t\t\treturn super.findType(compoundTypeName);", "-\t\t\t}", "-\t\t\tpublic void findTypes(char[] prefix, ISearchRequestor storage) {", "-\t\t\t\tcheckCanceled();", "-\t\t\t\tsuper.findTypes(prefix, storage);", "-\t\t\t}", "-\t\t};", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd1f52824bd61d6691d620a4a4b7e0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "4dfe9f04d4f1fc7a9e70c8aba9edf4b323d079b9", "commitAfterChange": "03f4a4782f5839bc6b71dbdaa61bddb7d624d757", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void start(BundleContext context) throws Exception", "signatureAfterChange": " \tpublic void start(BundleContext context) throws Exception", "diff": ["+\t\t\t// Listen to instance preferences node removal from parent in order to refresh stored one", "+\t\t\tIEclipsePreferences.INodeChangeListener listener = new IEclipsePreferences.INodeChangeListener() {", "+\t\t\t\tpublic void added(IEclipsePreferences.NodeChangeEvent event) {", "+\t\t\t\t\t// do nothing", "+\t\t\t\t}", "+\t\t\t\tpublic void removed(IEclipsePreferences.NodeChangeEvent event) {", "+\t\t\t\t\tif (event.getChild() == preferencesLookup[PREF_INSTANCE]) {", "+\t\t\t\t\t\tpreferencesLookup[PREF_INSTANCE] = new InstanceScope().getNode(PLUGIN_ID);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\t((IEclipsePreferences) getInstancePreferences().parent()).addNodeChangeListener(listener);", "+", "+\t\t\t// Listen to default preferences node removal from parent in order to refresh stored one", "+\t\t\tlistener = new IEclipsePreferences.INodeChangeListener() {", "+\t\t\t\tpublic void added(IEclipsePreferences.NodeChangeEvent event) {", "+\t\t\t\t\t// do nothing", "+\t\t\t\t}", "+\t\t\t\tpublic void removed(IEclipsePreferences.NodeChangeEvent event) {", "+\t\t\t\t\tif (event.getChild() == preferencesLookup[PREF_DEFAULT]) {", "+\t\t\t\t\t\tpreferencesLookup[PREF_DEFAULT] = new DefaultScope().getNode(PLUGIN_ID);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\t((IEclipsePreferences) getDefaultPreferences().parent()).addNodeChangeListener(listener);", "+"]}], "num": 64397}