{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc2f7731ae66980cbb030f55e5fd92c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ae129bddb501fba012d91db5321135", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveTests.java", "commitBeforeChange": "a56d2afc8ddb8dcda8f74b90d2b39898295865d2", "commitAfterChange": "fc69abbb26faa5011e1c3f5f4862367455008505", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void movePositive(IJavaElement[] elements, IJavaElement[] destinations, IJavaElement[] siblings, String[] names, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void movePositive(IJavaElement[] elements, IJavaElement[] destinations, IJavaElement[] siblings, String[] names, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tdestDelta = getDeltaFor(moved.getParent());", "+\t\t\t\tdestDelta = this.deltaListener.getDeltaFor(moved.getParent());", "-\t\t\t\tdestDelta = getDeltaFor(destinations[i], true);", "+\t\t\t\tdestDelta = this.deltaListener.getDeltaFor(destinations[i], true);", "-\t\t\t\tIJavaElementDelta sourceDelta= getDeltaFor(element, false);", "+\t\t\t\tIJavaElementDelta sourceDelta= this.deltaListener.getDeltaFor(element, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cae91174df1520db9b49aed91706873", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "396d47b23135e9fb3aaeb3d8f844ebea73195461", "commitAfterChange": "05a0f872d8ef1609f1817f5edabf70e0b1737e8d", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\tprintVersion();", "+\t\t\t\tthis.logger.logVersion(true);", "+\t\tthis.logger.logVersion(printVersionRequired);", "-\t\t}", "-\t\tif (printVersionRequired) {", "-\t\t\tprintVersion();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57f337d668aafc82367039b8d38f7e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "a56d2afc8ddb8dcda8f74b90d2b39898295865d2", "commitAfterChange": "fc69abbb26faa5011e1c3f5f4862367455008505", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void movePositive(IJavaElement[] elements, IJavaElement[] destinations, IJavaElement[] siblings, String[] names, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void movePositive(IJavaElement[] elements, IJavaElement[] destinations, IJavaElement[] siblings, String[] names, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tdestDelta = getDeltaFor(moved.getParent());", "+\t\t\t\tdestDelta = this.deltaListener.getDeltaFor(moved.getParent());", "-\t\t\t\tdestDelta = getDeltaFor(destinations[i], true);", "+\t\t\t\tdestDelta = this.deltaListener.getDeltaFor(destinations[i], true);", "-\t\t\t\tIJavaElementDelta sourceDelta = getDeltaFor(element, true);", "+\t\t\t\tIJavaElementDelta sourceDelta = this.deltaListener.getDeltaFor(element, true);"]}], "num": 30697}