{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62e8709bbe66a10484e56b4bde6a8581", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e2efffaa831ef63192dd02bc043bd12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "9c54fc68601f285c843bcd7b2852a6c2522ba140", "commitAfterChange": "e961d0e40f08123117b7b8d39d8f2dc3504c267f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private void checkMethods()", "signatureAfterChange": "\r \r private void checkMethods()", "diff": ["-\t\t\t\t\t\tif (mustImplementAbstractMethod(matchingInherited[0]))\r", "-\t\t\t\t\t\t\tthis.problemReporter().abstractMethodMustBeImplemented(this.type, matchingInherited[0]);\r", "+\t\t\t\t\t\tif (mustImplementAbstractMethod(matchingInherited[0])) {\r", "+\t\t\t\t\t\t\tTypeDeclaration typeDeclaration = this.type.scope.referenceContext;\r", "+\t\t\t\t\t\t\tif (typeDeclaration != null) {\r", "+\t\t\t\t\t\t\t\tMethodDeclaration missingAbstractMethod = typeDeclaration.addMissingAbstractMethodFor(matchingInherited[0]);\r", "+\t\t\t\t\t\t\t\tmissingAbstractMethod.scope.problemReporter().abstractMethodMustBeImplemented(this.type, matchingInherited[0]);\r", "+\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\tthis.problemReporter().abstractMethodMustBeImplemented(this.type, matchingInherited[0]);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd24f406bd186a3769295169c763e3a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "9c54fc68601f285c843bcd7b2852a6c2522ba140", "commitAfterChange": "e961d0e40f08123117b7b8d39d8f2dc3504c267f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t\t\tthis.problemReporter().abstractMethodMustBeImplemented(this.type, methods[0]);\r", "+\r", "+\t\t\t\tTypeDeclaration typeDeclaration = this.type.scope.referenceContext;\r", "+\t\t\t\tif (typeDeclaration != null) {\r", "+\t\t\t\t\tMethodDeclaration missingAbstractMethod = typeDeclaration.addMissingAbstractMethodFor(methods[0]);\r", "+\t\t\t\t\tmissingAbstractMethod.scope.problemReporter().abstractMethodMustBeImplemented(this.type, methods[0]);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tthis.problemReporter().abstractMethodMustBeImplemented(this.type, methods[0]);\r", "+\t\t\t\t}\r"]}], "num": 33049}