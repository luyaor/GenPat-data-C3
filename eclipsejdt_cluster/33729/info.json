{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b8ca83ad392dc7b8943b6ab84543ece", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73d00a20dc8c4ddbc11ea1d0cc832e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug83127a()", "signatureAfterChange": " \tpublic void testBug83127a()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" +", "-\t\t\t\"\t* @see Test#add(T) \\n\" +", "-\t\t\t\"\t                ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" +", "-\t\t\t\"\t* @see #add(T)\\n\" +", "-\t\t\t\"\t            ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in Test.java (at line 4)\\n\" +", "-\t\t\t\"\t* @see Test#Test(T)\\n\" +", "-\t\t\t\"\t                 ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in Test.java (at line 5)\\n\" +", "-\t\t\t\"\t* @see #Test(T)\\n\" +", "-\t\t\t\"\t             ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. ERROR in Test.java (at line 11)\\n\" +", "-\t\t\t\"\tpublic class Test<T> {\\n\" +", "-\t\t\t\"\t                  ^\\n\" +", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in Test.java (at line 12)\\n\" +", "-\t\t\t\"\tTest(T t) {}\\n\" +", "-\t\t\t\"\t     ^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"7. ERROR in Test.java (at line 13)\\n\" +", "-\t\t\t\"\tpublic boolean add(T t) {\\n\" +", "-\t\t\t\"\t                   ^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"8. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "-\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"9. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "-\t\t\t\"\t                                         ^\\n\" +", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"10. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "-\t\t\t\"\t                                         ^\\n\" +", "-\t\t\t\"E cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"11. ERROR in Test.java (at line 19)\\n\" +", "-\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "-\t\t\t\"\t     ^\\n\" +", "-\t\t\t\"E cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"12. ERROR in Test.java (at line 19)\\n\" +", "-\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "-\t\t\t\"\t           ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"The constructor Test(T) refers to the missing type T\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"13. ERROR in Test.java (at line 20)\\n\" +", "-\t\t\t\"\tpublic boolean add(E e) {\\n\" +", "-\t\t\t\"\t                   ^\\n\" +", "-\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" + ", "+\t\t\t\"\t* @see Test#add(T) \\n\" + ", "+\t\t\t\"\t            ^^^\\n\" + ", "+\t\t\t\"Javadoc: The method add(Object) in the type Test is not applicable for the arguments (T)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "+\t\t\t\"\t* @see #add(T)\\n\" + ", "+\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\"Javadoc: The method add(Object) in the type Test is not applicable for the arguments (T)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in Test.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test#Test(T)\\n\" + ", "+\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The constructor Test(T) is undefined\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in Test.java (at line 5)\\n\" + ", "+\t\t\t\"\t* @see #Test(T)\\n\" + ", "+\t\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The constructor Test(T) is undefined\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in Test.java (at line 11)\\n\" + ", "+\t\t\t\"\tpublic class Test<T> {\\n\" + ", "+\t\t\t\"\t                  ^\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in Test.java (at line 18)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in Test.java (at line 18)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "+\t\t\t\"\t                                         ^\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc983a2b2d976276831719ec5e41821", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug83127a()", "signatureAfterChange": " \tpublic void testBug83127a()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" +", "-\t\t\t\"\t* @see Test#add(T) \\n\" +", "-\t\t\t\"\t                ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" +", "-\t\t\t\"\t* @see #add(T)\\n\" +", "-\t\t\t\"\t            ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in Test.java (at line 4)\\n\" +", "-\t\t\t\"\t* @see Test#Test(T)\\n\" +", "-\t\t\t\"\t                 ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in Test.java (at line 5)\\n\" +", "-\t\t\t\"\t* @see #Test(T)\\n\" +", "-\t\t\t\"\t             ^\\n\" +", "-\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. ERROR in Test.java (at line 11)\\n\" +", "-\t\t\t\"\tpublic class Test<T> {\\n\" +", "-\t\t\t\"\t                  ^\\n\" +", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in Test.java (at line 12)\\n\" +", "-\t\t\t\"\tTest(T t) {}\\n\" +", "-\t\t\t\"\t     ^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"7. ERROR in Test.java (at line 13)\\n\" +", "-\t\t\t\"\tpublic boolean add(T t) {\\n\" +", "-\t\t\t\"\t                   ^\\n\" +", "-\t\t\t\"T cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"8. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "-\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"9. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "-\t\t\t\"\t                                         ^\\n\" +", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"10. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" +", "-\t\t\t\"\t                                         ^\\n\" +", "-\t\t\t\"E cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"11. ERROR in Test.java (at line 19)\\n\" +", "-\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "-\t\t\t\"\t     ^\\n\" +", "-\t\t\t\"E cannot be resolved to a type\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"12. ERROR in Test.java (at line 19)\\n\" +", "-\t\t\t\"\tSub (E e) {super(null);}\\n\" +", "-\t\t\t\"\t           ^^^^^^^^^^^^\\n\" +", "-\t\t\t\"The constructor Test(T) refers to the missing type T\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"13. ERROR in Test.java (at line 20)\\n\" +", "-\t\t\t\"\tpublic boolean add(E e) {\\n\" +", "-\t\t\t\"\t                   ^\\n\" +", "-\t\t\t\"E cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" + ", "+\t\t\t\"\t* @see Test#add(T) \\n\" + ", "+\t\t\t\"\t            ^^^\\n\" + ", "+\t\t\t\"Javadoc: The method add(Object) in the type Test is not applicable for the arguments (T)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "+\t\t\t\"\t* @see #add(T)\\n\" + ", "+\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\"Javadoc: The method add(Object) in the type Test is not applicable for the arguments (T)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in Test.java (at line 4)\\n\" + ", "+\t\t\t\"\t* @see Test#Test(T)\\n\" + ", "+\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The constructor Test(T) is undefined\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in Test.java (at line 5)\\n\" + ", "+\t\t\t\"\t* @see #Test(T)\\n\" + ", "+\t\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The constructor Test(T) is undefined\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in Test.java (at line 11)\\n\" + ", "+\t\t\t\"\tpublic class Test<T> {\\n\" + ", "+\t\t\t\"\t                  ^\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in Test.java (at line 18)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in Test.java (at line 18)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "+\t\t\t\"\t                                         ^\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}], "num": 33729}