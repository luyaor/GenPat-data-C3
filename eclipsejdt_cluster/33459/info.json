{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaeb946495cfbd86b06afe3a24892b42", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494eafcc004d56c301a9938a7bf8841a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void consumeWildCard(int kind, int rank)", "signatureAfterChange": " \t \tpublic void consumeWildCard(int kind)", "diff": ["-\tpublic void consumeWildCard(int kind, int rank) {", "-\t\tTypeBinding bound = ", "-\t\t\tkind != Wildcard.UNBOUND ? ", "-\t\t\t\t\t(TypeBinding) this.types.remove(this.types.size()-1) : ", "-\t\t\t\t\tnull;", "-\t\tTypeBinding wildCardBinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank, bound, null /*no extra bound*/, kind);", "-\t\tthis.types.add(wildCardBinding);", "+\tpublic void consumeWildCard(int kind) {", "+\t\tthis.wildcardKind = kind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6a6fb0d6eb45bd89d9c67e181ff1f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyToSignature.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void consumeWildCard(int wildCardKind, int rank)", "signatureAfterChange": " \t \tpublic void consumeWildCard(int wildCardKind)", "diff": ["-\tpublic void consumeWildCard(int wildCardKind, int rank) {", "+\tpublic void consumeWildCard(int wildCardKind) {", "-\t\t\t\tthis.arguments.add(new StringBuffer(\"*\")); //$NON-NLS-1$", "+\t\t\t\tthis.signature.append('*');", "-\t\t\t\t((StringBuffer) this.arguments.get(this.arguments.size()-1)).insert(0, '+');", "+\t\t\t\tthis.signature.append('+');", "-\t\t\t\t((StringBuffer) this.arguments.get(this.arguments.size()-1)).insert(0, '-');", "+\t\t\t\tthis.signature.append('-');", "+\t\t\tdefault:", "+\t\t\t\t// malformed", "+\t\t\t\treturn;"]}], "num": 33459}