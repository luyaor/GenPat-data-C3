{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb3218cab4ecd870b0c1771629da3205", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87df2cd8fb96c2f2fc79aef34278750", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "392fe1925e6e34041c0a038441760cebd6b1a531", "commitAfterChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprotected String getURLContents(String docUrlValue, String defaultEncoding) throws JavaModelException", "signatureAfterChange": " \tprotected String getURLContents(String docUrlValue, String defaultEncoding) throws JavaModelException", "diff": ["-\t\t\tURL docUrl = new URL(docUrlValue);", "-\t\t\tURLConnection connection = docUrl.openConnection();", "-\t\t\tconnection.setUseCaches(false);", "-\t\t\tstream = connection.getInputStream();", "+\t\t\t// long time = System.currentTimeMillis();", "+\t\t\tURL docUrl = new URL(docUrlValue);", "+\t\t\tURLConnection connection = docUrl.openConnection();", "+\t\t\t// System.out.println(\"Time spent \" + (System.currentTimeMillis() - time) + \"ms for opening connection for \" + docUrlValue); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t// time = System.currentTimeMillis();", "+\t\t\tconnection.setUseCaches(false);", "+\t\t\tstream = connection.getInputStream();", "+\t\t\t// System.out.println(\"Time spent \" + (System.currentTimeMillis() - time) + \"ms for getting stream for \" + docUrlValue); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t// time = System.currentTimeMillis();", "+\t\t\t// System.out.println(\"Time spent \" + (System.currentTimeMillis() - time) + \"ms for reading stream for \" + docUrlValue); //$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebac8faa05f505f284b69469afd38d57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "3955cb5ed164f548af2b37e146846edf5ccfd711", "commitAfterChange": "c52fdadde45f5a8a52e99f0d46c9c166e07a1017", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  private void denseCycleDetection(final int numberOfParticipants) throws CoreException", "signatureAfterChange": "  private void denseCycleDetection(final int numberOfParticipants) throws CoreException", "diff": ["-//\tfinal long[] start = new long[1];", "-//\tfinal long[] time = new long[1];", "+\tfinal long[] start = new long[1];", "+\tfinal long[] time = new long[1];", "-//\t\t\t\t\tlong start = System.currentTimeMillis(); // time spent in individual CP setting", "+\t\t\t\t\tlong start = System.currentTimeMillis(); // time spent in individual CP setting", "-//\t\t\t\t\ttime[0] += System.currentTimeMillis() - start;", "+\t\t\t\t\ttime[0] += System.currentTimeMillis() - start;", "-//\t\t\t\tstart[0] = System.currentTimeMillis(); // time spent in delta refresh", "+\t\t\t\tstart[0] = System.currentTimeMillis(); // time spent in delta refresh", "-//\t\ttime[0] += System.currentTimeMillis()-start[0];", "-//\t\tSystem.out.println(\"Dense cycle check (\"+numberOfParticipants+\" participants) : \"+ time[0]+\" ms\");", "+\t\ttime[0] += System.currentTimeMillis()-start[0];", "+\t\tSystem.out.println(\"Dense cycle check (\"+numberOfParticipants+\" participants) : \"+ time[0]+\" ms\");"]}], "num": 40394}