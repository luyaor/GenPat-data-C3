{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d83d51a20b8ca8611d0e69d34c7d1ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8073225a35def4f8094759a532470848", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "signatureAfterChange": "  protected void fillInDefaultNonNullness18(AbstractMethodDeclaration sourceMethod, LookupEnvironment env)", "diff": ["-\t\t\t\tthis.parameters[i] = env.createAnnotatedType(parameter, TagBits.AnnotationNonNull);", "+\t\t\t\t// TODO(Stephan): Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "+\t\t\t\t// this.parameters[i] = env.createAnnotatedType(parameter, TagBits.AnnotationNonNull);", "-\t\tthis.returnType = env.createAnnotatedType(this.returnType, TagBits.AnnotationNonNull);", "+\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "+\t\t// this.returnType = env.createAnnotatedType(this.returnType, TagBits.AnnotationNonNull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca45644315d45cb19edfce01e80e18d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 499, "methodNumberAfterChange": 499, "signatureBeforeChange": " private boolean excludeDueToAnnotation(Annotation[] annotations, int problemId)", "signatureAfterChange": " private boolean excludeDueToAnnotation(Annotation[] annotations, int problemId)", "diff": ["-\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNull:", "-\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNullable:", "-\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNullByDefault:", "-\t\t\t\t\t// non-standard annotation found, don't warn", "-\t\t\t\t\treturn true;", "+\t\t\t\t\tif (resolvedType instanceof ReferenceBinding)", "+\t\t\t\t\t\tif (((ReferenceBinding) resolvedType).hasNullBit(TypeIds.BitNullableAnnotation|TypeIds.BitNonNullAnnotation|TypeIds.BitNonNullByDefaultAnnotation))", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\treturn true; // non-standard annotation found, don't warn"]}], "num": 52980}