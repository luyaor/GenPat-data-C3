{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c2b85518492bb2a38ede37d90dd3fb1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ca070d6f3d5b353ccef3b44606503c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public int getFlags() throws JavaModelException", "signatureAfterChange": " public int getFlags() throws JavaModelException", "diff": ["-\tif (this.parent instanceof LambdaExpression)", "-\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "787b70842e9d9ab7f6a3a832854d0422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void addClasspathDeltas( \t\tIPackageFragmentRoot[] roots, \t\tint flag, \t\tJavaElementDelta delta)", "signatureAfterChange": " \tprotected void addClasspathDeltas( \t\tIPackageFragmentRoot[] roots, \t\tint flag, \t\tJavaElementDelta delta)", "diff": ["-\t\t\t\tif (root instanceof JarPackageFragmentRoot) {", "-\t\t\t\t\t((JarPackageFragmentRoot) root).setSourceAttachmentProperty(null);// loose info - will be recomputed", "-\t\t\t\t}", "+\t\t\t\t((PackageFragmentRoot) root).setSourceAttachmentProperty(null);// loose info - will be recomputed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c85a93ceb1b247965f2071d68031cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "7691e377e6a3f67a1337716bc77c2ad7f6446dc7", "commitAfterChange": "ba9391e4c434f83f729da7aa6be3c7a6812bfd1a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "signatureAfterChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "diff": ["-\t\t// only collect for method type parameters", "-\t\tif (!(this.declaringElement instanceof MethodBinding)) return;", "+            // recurse in variable bounds (82187)", "+            if (this.superclass != null && this.firstBound == this.superclass) {", "+                this.superclass.collectSubstitutes(otherType, substitutes);", "+            }", "+            for (int i = 0, length = this.superInterfaces.length; i < length; i++) {", "+                this.superInterfaces[i].collectSubstitutes(otherType, substitutes);", "+            }", "-\t    // recurse in variable bounds (82187)", "-\t    if (this.superclass != null && this.firstBound == this.superclass) {", "-\t    \tthis.superclass.collectSubstitutes(otherType, substitutes);", "-\t    }", "-\t   \tfor (int i = 0, length = this.superInterfaces.length; i < length; i++) {", "-\t   \t\tthis.superInterfaces[i].collectSubstitutes(otherType, substitutes);", "-\t   \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8343660f1495f3676827647744fdc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "964d2b4d225adb16891c1f3f43547e1047f89000", "commitAfterChange": "22fa73dc034dca717547a9f3bcacb57ec44d92ea", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": "  \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\tif (currentNode instanceof AbstractTypeDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn typeDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn typeDecl.initializerScope;", "-\t\t\t\t}", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "+\t\t\t\treturn typeDecl.staticInitializerScope;", "+\t\t\t} else {", "+\t\t\t\treturn typeDecl.initializerScope;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab768ac6abc39e58410318f053244a95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "027433d18c80815de3076b7fd489422a48401f1a", "commitAfterChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(Statement stmt, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(Statement stmt, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\tif (stmt instanceof LambdaExpression) // lambdas are recovered up to the containing statement anyways.", "-\t\treturn this;", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb33fda822fb5cbb4e94e27dc66f773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "f3d2174dec517027066c43e3b315efb919730221", "commitAfterChange": "500a5aa84b022935fc6923268f3f464d29a2a467", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "diff": ["-\t\t\tif (assignableTypeBinding instanceof ReferenceBinding) {", "-\t\t\t\tassignableTypeBinding = BinaryTypeBinding.resolveType(assignableTypeBinding, this.lookupEnvironment, true);", "-\t\t\t}", "+\t\t\tassignableTypeBinding = BinaryTypeBinding.resolveType(assignableTypeBinding, this.lookupEnvironment, true);"]}], "num": 13472}