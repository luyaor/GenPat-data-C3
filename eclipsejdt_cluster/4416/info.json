{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d8e3b26f4903e8160d6b93614831d36", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20911dc73045998240f47fb05d59af44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "5ee2151c41af9ff855348a169dff9645033b3177", "commitAfterChange": "44dd3fd78d480cf979c77fad7d9bdc1e1fe0ad4d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tpublic void test0027() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0027() throws JavaModelException", "diff": ["+\t\tIMethodBinding methodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e43d7802d09f9d814bcf879fad5f94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "5ee2151c41af9ff855348a169dff9645033b3177", "commitAfterChange": "44dd3fd78d480cf979c77fad7d9bdc1e1fe0ad4d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void test0026() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0026() throws JavaModelException", "diff": ["+\t\tIMethodBinding methodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "-\t\tassertEquals(\"wrong size\", 0, enumConstantDeclaration.arguments().size());\t\t", "+\t\tassertEquals(\"wrong size\", 0, enumConstantDeclaration.arguments().size());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());", "+\t\tmethodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());"]}], "num": 4416}