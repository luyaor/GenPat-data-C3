{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef23c63aed3e935969158ebb808908ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780a390d824486df6aad1301f491f922", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/FactoryLoaderTests.java", "commitBeforeChange": "7177897be6073a1c35ee9a465aa5f0559da1bff1", "commitAfterChange": "3ef396e7cc3e0323aa7fad284fecd31681852465", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void setUp() throws Exception", "signatureAfterChange": "  \tpublic void setUp() throws Exception", "diff": ["+\t\t// This file will be locked until GC takes care of unloading the", "+\t\t// annotation processor classes, so we can't delete it ourselves.", "+\t\t_extJar.deleteOnExit();", "+\t\t", "+\t\t// Create a classpath variable for the same jar file, so we can", "+\t\t// refer to it that way.", "+\t\tFile canonicalJar = _extJar.getCanonicalFile();", "+\t\tIPath jarDir = new Path( canonicalJar.getParent() );", "+\t\tString extJarName = canonicalJar.getName();", "+\t\tIPath varPath = new Path( TEMPJARDIR_CPVAR );", "+\t\t_extVarJar = varPath.append( extJarName );", "+\t\tJavaCore.setClasspathVariable( TEMPJARDIR_CPVAR, jarDir, null );", "-}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d5937ef74c8a05bb50133184dd8a53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "0c9f31ea2ca6f747fc91ab022c7efc052d0b1c5a", "commitAfterChange": "8c64bffbde25c824dd307f6fe5deea636346d85b", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "signatureAfterChange": "  \tprotected void setUpProjectCompliance(IJavaProject javaProject, String compliance) throws JavaModelException, IOException", "diff": ["+\t\t// At 1.8 compliance, replace JCL15_LIB with JCL18_LIB, JCL15_SRC with JCL18_SRC", "+\t\tIPath jcl5Lib = new Path(\"JCL15_LIB\");", "+\t\tIPath jcl8Lib = new Path(\"JCL18_LIB\");", "+\t\tboolean compliance18Plus = compliance.charAt(2) > '7';", "-\t\t\tif (entry.getPath().equals(jclLib)) {", "+\t\t\tfinal IPath path = entry.getPath();", "+\t\t\tif (path.equals(jclLib) || (compliance18Plus && path.equals(jcl5Lib)) || (!compliance18Plus && path.equals(jcl8Lib))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c91a45ae6be4f6f969f6d99dc3c23dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchParticipant.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "signatureAfterChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "diff": ["-\t\tJavaModelManager.getJavaModelManager().getIndexManager().scheduleDocumentIndexing(document, indexLocation, this);", "+\t\tIPath documentPath = new Path(document.getPath());", "+\t\tIWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();", "+\t\tIResource resource = root.findMember(documentPath);", "+\t\tIPath containerPath = resource == null ? documentPath : resource.getProject().getFullPath();", "+\t\tJavaModelManager.getJavaModelManager().getIndexManager().scheduleDocumentIndexing(document, containerPath, indexLocation.toOSString(), this);"]}], "num": 58430}