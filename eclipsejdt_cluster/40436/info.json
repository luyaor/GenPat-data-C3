{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b51aabe4caea79f983a18ab755656f7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36e3a2c00e296b8c0e0488a02801a9bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void generateOptimizedStringBufferCreation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \t \tpublic void generateOptimizedStringConcatenationCreation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\tpublic void generateOptimizedStringBufferCreation(", "+\tpublic void generateOptimizedStringConcatenationCreation(", "-\t\t\t\tcodeStream.newStringBuffer(); // new: java.lang.StringBuffer", "+\t\t\t\tcodeStream.newStringContatenation(); // new: java.lang.StringBuffer", "-\t\t\t\tcodeStream.invokeStringBufferStringConstructor();", "+\t\t\t\tcodeStream.invokeStringConcatenationStringConstructor();", "-\t\t\t\tleft.generateOptimizedStringBufferCreation(", "+\t\t\t\tleft.generateOptimizedStringConcatenationCreation(", "-\t\t\t\tright.generateOptimizedStringBuffer(", "+\t\t\t\tright.generateOptimizedStringConcatenation(", "-\t\t\tsuper.generateOptimizedStringBufferCreation(blockScope, codeStream, typeID);", "+\t\t\tsuper.generateOptimizedStringConcatenationCreation(blockScope, codeStream, typeID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2c8bb605843e576a806f221a35f230", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generateOptimizedStringBufferCreation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \tpublic void generateOptimizedStringConcatenationCreation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\tpublic void generateOptimizedStringBufferCreation(", "+\tpublic void generateOptimizedStringConcatenationCreation(", "-\t\t\tcodeStream.newStringBuffer();", "+\t\t\tcodeStream.newStringContatenation();", "-\t\t\tcodeStream.invokeStringBufferDefaultConstructor();", "+\t\t\tcodeStream.invokeStringConcatenationDefaultConstructor();", "-\t\t\tcodeStream.invokeStringBufferAppendForType(T_Object);", "+\t\t\tcodeStream.invokeStringConcatenationAppendForType(T_Object);", "-\t\tcodeStream.newStringBuffer();", "+\t\tcodeStream.newStringContatenation();", "-\t\t\t\t\tcodeStream.invokeStringBufferDefaultConstructor();", "+\t\t\t\t\tcodeStream.invokeStringConcatenationDefaultConstructor();", "-\t\tcodeStream.invokeStringBufferStringConstructor();", "-\t}", "+\t\tcodeStream.invokeStringConcatenationStringConstructor();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccdefbc6fb55e8e34c3a764882e1fda1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public void generateStringAppend(BlockScope blockScope, Expression oper1, Expression oper2)", "signatureAfterChange": " public void generateStringConcatenationAppend(BlockScope blockScope, Expression oper1, Expression oper2)", "diff": ["-public void generateStringAppend(BlockScope blockScope, Expression oper1, Expression oper2) {", "+public void generateStringConcatenationAppend(BlockScope blockScope, Expression oper1, Expression oper2) {", "-\t\tthis.newStringBuffer();", "+\t\tthis.newStringContatenation();", "-\t\tthis.invokeStringBufferStringConstructor();", "+\t\tthis.invokeStringConcatenationStringConstructor();", "-\t\toper1.generateOptimizedStringBufferCreation(blockScope, this, oper1.implicitConversion & 0xF);", "+\t\toper1.generateOptimizedStringConcatenationCreation(blockScope, this, oper1.implicitConversion & 0xF);", "-\toper2.generateOptimizedStringBuffer(blockScope, this, oper2.implicitConversion & 0xF);", "+\toper2.generateOptimizedStringConcatenation(blockScope, this, oper2.implicitConversion & 0xF);", "-\tthis.invokeStringBufferToString();", "+\tthis.invokeStringConcatenationToString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4a436597804f29e4088ee3f8d88b70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void generateOptimizedStringBuffer( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \t \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\tpublic void generateOptimizedStringBuffer(", "+\tpublic void generateOptimizedStringConcatenation(", "-\t\t\t\tcodeStream.invokeStringBufferAppendForType(implicitConversion & 0xF);", "+\t\t\t\tcodeStream.invokeStringConcatenationAppendForType(implicitConversion & 0xF);", "-\t\t\t\tleft.generateOptimizedStringBuffer(", "+\t\t\t\tleft.generateOptimizedStringConcatenation(", "-\t\t\t\tright.generateOptimizedStringBuffer(", "+\t\t\t\tright.generateOptimizedStringConcatenation(", "-\t\t\tsuper.generateOptimizedStringBuffer(blockScope, codeStream, typeID);", "+\t\t\tsuper.generateOptimizedStringConcatenation(blockScope, codeStream, typeID);"]}], "num": 40436}