{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "546f3e3f5c1c05a145717f977c44db3b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48773e117e7cd684b6222cfa66b7104b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "40f76b3d0fb01a4a7fa1aad4b09c356c31458c94", "commitAfterChange": "323d52f789e646d704223fd3ac5d22c4e4efec25", "methodNumberBeforeChange": 433, "methodNumberAfterChange": 433, "signatureBeforeChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location, ASTNode expectingLocation)", "signatureAfterChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location, ASTNode expectingLocation)", "diff": ["+\tchar[] actualReadableName = actualType.readableName();", "+\tchar[] expectedReadableName = expectedType.readableName();", "-\t\tactualShortReadableName = actualType.readableName();", "-\t\texpectedShortReadableName = expectedType.readableName();", "+\t\tif (CharOperation.equals(actualReadableName, expectedReadableName)) {", "+\t\t\t// if full type names are equal, assume the incompatibility is due to mismatching null annotations:", "+\t\t\tactualReadableName = actualType.nullAnnotatedReadableName(this.options, false);", "+\t\t\texpectedReadableName = expectedType.nullAnnotatedReadableName(this.options, false);", "+\t\t\tactualShortReadableName = actualType.nullAnnotatedReadableName(this.options, true);", "+\t\t\texpectedShortReadableName = expectedType.nullAnnotatedReadableName(this.options, true);", "+\t\t} else {", "+\t\t\tactualShortReadableName = actualReadableName;", "+\t\t\texpectedShortReadableName = expectedReadableName;", "+\t\t}", "-\t\tnew String[] {new String(actualType.readableName()), new String(expectedType.readableName())},", "+\t\tnew String[] {new String(actualReadableName), new String(expectedReadableName)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2e145cf44a0d910bd909157663c4dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b431324ca9f8ebdb583b032473f6a457a8535ab8", "commitAfterChange": "257b6e58540a166bfdc82d7501c5719c3c3b813e", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location, ASTNode expectingLocation)", "signatureAfterChange": " public void typeMismatchError(TypeBinding actualType, TypeBinding expectedType, ASTNode location, ASTNode expectingLocation)", "diff": ["+\tchar[] actualShortReadableName = actualType.shortReadableName();", "+\tchar[] expectedShortReadableName = expectedType.shortReadableName();", "+\tif (CharOperation.equals(actualShortReadableName, expectedShortReadableName)) {", "+\t\tactualShortReadableName = actualType.readableName();", "+\t\texpectedShortReadableName = expectedType.readableName();", "+\t}", "-\t\tnew String[] {new String(actualType.shortReadableName()), new String(expectedType.shortReadableName())},", "+\t\tnew String[] {new String(actualShortReadableName), new String(expectedShortReadableName)},"]}], "num": 7809}