{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49443a20215c3e04477c1cbae7d88128", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14723a8eec44b3c0f87839d21cb2062d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "e09ed0fcb68cd7d9bf9f6aac9b134faa70815a8e", "commitAfterChange": "60532165038664c30ff2432e43f4dc89f46bcdd4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["+\t\t\t\t\t\tcase IResourceDelta.REMOVED :", "+\t\t\t\t\t\t\t// in case of removal (IResourceDelta.REMOVED) this will reset the classpath to its default and create the right delta", "+\t\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=211290)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2106ae66e99889e7224f8f2a5efe96b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SignatureWrapper.java", "commitBeforeChange": "34f724a9738d7636a75842e2910c694725115548", "commitAfterChange": "9b49fc6edec0d13e82a14df97219e6ae294f74cc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int computeEnd()", "signatureAfterChange": " \tpublic int computeEnd()", "diff": ["+\t\t\t\t\tcase ExternalAnnotationProvider.NO_ANNOTATION :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30edbbdfdc9124eb5d65b8e65a50fa31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "b78a341d9c2ae71ec75ebc5229ccf7d4bba66b46", "commitAfterChange": "cee72fca9d21d8ecea9da9111153a7e6090893c1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit, CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit, CompilationUnitResolver resolver)", "diff": ["+\t \t\t\t\tcase BindingKeyScanner.PACKAGE:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37585c950ffb635fee65817a618a8c2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "8e06b1c936db0f10c372087d8b39d30b88ad9d78", "commitAfterChange": "4015f9a338ca2f66537cce07f78a17ab467ebe74", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["+\t\t\t\t\t\t\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54886919733e3a9436a53aeef1fb60c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "4023f573a75388bf96a5a09a25197e5b80de3b71", "commitAfterChange": "00c42145a98af76c17f15294be6170e6defe1ae9", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tprivate int retrieveExtraDimension(int start, int end)", "signatureAfterChange": " \tprivate int retrieveExtraDimension(int start, int end)", "diff": ["+\t\t\t\t\tcase Scanner.TokenNameLBRACE ://90\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5787ca4957c38cadd82dc2b09088c583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "253db1ad159947db401a053aab34e948bedb1e92", "commitAfterChange": "6ebd66d084b36e21840502fb2a7d814341a3b190", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveExpressionType(Expression expression)", "diff": ["+\t\t\t\tcase ASTNode.LAMBDA_EXPRESSION:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7242719224aaab0e37be59e35621e361", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "04642b0ddeaa500eebee3186c54a3dab77831936", "commitAfterChange": "ce56356bb8207f0820e02fceece1037f8dcc2c38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["+\t\t\tcase ITerminalSymbols.TokenNameQUESTION:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95ec0c52d002672c2c9672d7d39c8f6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "57f40e6c0dfcf939f53a8ca5092a4521d28a033f", "commitAfterChange": "315acf11b0c9cb31cc22fc01fb1efb136ce92270", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void addSpecialMethods()", "signatureAfterChange": " \tpublic void addSpecialMethods()", "diff": ["-\t\t\t\t\t\t// a private field", "+\t\t\t\t\t\t// a non-accessible field", "-\t\t\t\t\t\t// a private field", "+\t\t\t\t\t\t// a non-accessible field", "-\t\t\t\t\t\t// generate a method info to emulate an access to a private method", "+\t\t\t\t\tcase SyntheticAccessMethodBinding.SuperMethodAccess :", "+\t\t\t\t\t\t// generate a method info to emulate an access to a non-accessible method / super-method", "-\t\t\t\t\t\t// generate a method info to emulate an access to a private method", "+\t\t\t\t\t\t// generate a method info to emulate an access to a non-accessible constructor"]}], "num": 42559}