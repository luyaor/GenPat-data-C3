{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "897adab7f4fa6a4a2957fe495af0a9e5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1815de63516007d919e7ab8200872d39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation) throws JavaModelException", "signatureAfterChange": " \tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation, boolean newIsCleaning) throws JavaModelException", "diff": ["-\tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation) throws JavaModelException {", "+\tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation, boolean newIsCleaning) throws JavaModelException {", "-\t\tif (fileEntries != null && isClasspathEqualsTo(newClasspath, newOutputLocation, fileEntries)) {", "+\t\tif (fileEntries != null && isClasspathEqualsTo(newClasspath, newOutputLocation, newIsCleaning, fileEntries)) {", "-\t\t\t\tgetClasspathAsXML(newClasspath, newOutputLocation));", "+\t\t\t\tgetClasspathAsXML(newClasspath, newOutputLocation, newIsCleaning));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4892cd8ff6cf73b5fa7ab3ab123f779a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "059f363b90720be2cfec29b82372fbde98d39325", "commitAfterChange": "609730836b397ffdc0b5952d3e247524104747b7", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] newEntries,\r \t\tIProgressMonitor monitor,\r \t\tboolean canChangeResource,\r \t\tboolean forceSave,\r \t\tIClasspathEntry[] oldClasspath)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] newEntries,\r \t\tIPath newOutputLocation,\r \t\tIProgressMonitor monitor,\r \t\tboolean canChangeResource,\r \t\tboolean forceSave,\r \t\tIClasspathEntry[] oldClasspath)\r \t\tthrows JavaModelException", "diff": ["+\r", "+\tpublic void setRawClasspath(\r", "+\t\tIPath newOutputLocation,\r", "-\t\t\tIJavaModelStatus status = verifyClasspath(newEntries); //JavaConventions.validateClasspath(this, newEntries, this.getOutputLocation());\r", "-\t\t\tif (!status.isOK()) {\r", "-\t\t\t\tthrow new JavaModelException(status);\r", "-\t\t\t}\r", "-\t\t\t\tnew SetClasspathOperation(this, oldClasspath, newRawPath, canChangeResource, forceSave);\r", "+\t\t\t\tnew SetClasspathOperation(\r", "+\t\t\t\t\tthis, \r", "+\t\t\t\t\toldClasspath, \r", "+\t\t\t\t\tnewRawPath, \r", "+\t\t\t\t\tnewOutputLocation,\r", "+\t\t\t\t\tcanChangeResource, \r", "+\t\t\t\t\tforceSave);\r", "+\t\t\t\r"]}], "num": 6}