{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a884036d11a4e0c4e1280eb37df7e8b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c14c1710267475d80aea17c6323c6ff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "de7e4b40954d182f333159de9571c0420d75e2aa", "commitAfterChange": "bbe83fbd85bca6d9714766efe7501065c33cddbf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public static void searchAllPossibleSubTypes( \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)", "signatureAfterChange": " public static void searchAllPossibleSubTypes( \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tfinal IProgressMonitor progressMonitor)", "diff": ["-\tIProgressMonitor progressMonitor) {", "+\tfinal IProgressMonitor progressMonitor) {", "-\t\t\tindexManager.performConcurrentJob(job, waitingPolicy, null); // no sub progress monitor since its too costly for deep hierarchies", "+\t\t\tindexManager.performConcurrentJob(job, waitingPolicy, progressMonitor == null ? null : new NullProgressMonitor() { ", "+\t\t\t\t// don't report progress since this is too costly for deep hierarchies", "+\t\t\t\t// just handle isCanceled() (seehttps://bugs.eclipse.org/bugs/show_bug.cgi?id=179511)", "+\t\t\t\tpublic void setCanceled(boolean value) {", "+\t\t\t\t\tprogressMonitor.setCanceled(value);", "+\t\t\t\t}", "+\t\t\t\tpublic boolean isCanceled() {", "+\t\t\t\t\treturn progressMonitor.isCanceled();", "+\t\t\t\t}", "+\t\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce62c21f046cf99e8da750863aed0cb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "00ed64e1bf214044a50057310b238bdbcda1c4d6", "commitAfterChange": "c9e65320b7b7e3c8966a4d3db69665c269fd36f5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "diff": ["+\t\t\tJavaProjectElementInfo projectInfo = (JavaProjectElementInfo) getJavaModelManager().getInfo(project);", "+\t\t\tProjectCache projectCache = projectInfo == null ? null : projectInfo.projectCache;", "+\t\t\tHashtableOfArrayToObject allPkgFragmentsCache = projectCache == null ? null : projectCache.allPkgFragmentsCache;", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t// if package name is in the cache, then it has already been validated", "+\t\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=133141)", "+\t\t\t\t\t\t\tif (allPkgFragmentsCache != null && allPkgFragmentsCache.containsKey(pkgName))", "+\t\t\t\t\t\t\t\treturn root.getPackageFragment(pkgName);", "+\t\t\t\t\t\t\t"]}], "num": 32869}