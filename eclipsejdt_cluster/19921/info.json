{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f596c1ecfadbdd50f3f21aa7adf39ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7360b8793a4c9a48ddf2c10d301352f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tpublic IJavaProject getJavaProject(IResource resource)", "signatureAfterChange": "\r public IJavaProject getJavaProject(IResource resource)", "diff": ["-\t */\r", "-\tpublic IJavaProject getJavaProject(IResource resource) {\r", "-\t\tif (resource.getType() == IResource.FOLDER) {\r", "-\t\t\treturn new JavaProject(((IFolder) resource).getProject(), this);\r", "-\t\t} else\r", "-\t\t\tif (resource.getType() == IResource.FILE) {\r", "-\t\t\t\treturn new JavaProject(((IFile) resource).getProject(), this);\r", "-\t\t\t} else\r", "-\t\t\t\tif (resource.getType() == IResource.PROJECT) {\r", "-\t\t\t\t\treturn new JavaProject((IProject) resource, this);\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Illegal argument - must be one of IProject, IFolder, or IFile\");\r", "-\t\t\t\t}\r", "-\t}\r", "+ */\r", "+public IJavaProject getJavaProject(IResource resource) {\r", "+\tif (resource.getType() == IResource.FOLDER) {\r", "+\t\treturn new JavaProject(((IFolder)resource).getProject(), this);\r", "+\t} else if (resource.getType() == IResource.FILE) {\r", "+\t\treturn new JavaProject(((IFile)resource).getProject(), this);\r", "+\t} else if (resource.getType() == IResource.PROJECT) {\r", "+\t\treturn new JavaProject((IProject)resource, this);\r", "+\t} else {\r", "+\t\tthrow new IllegalArgumentException(Util.bind(\"element.invalidResourceForProject\"/*nonNLS*/));\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd985c4c1329a8a322088657207937f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "5158f4f499166dbc52302f8195c73110e357532f", "commitAfterChange": "d656b5c8e5701277aa9c2918799a60289bc10084", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public IJavaProject getJavaProject(IResource resource)", "signatureAfterChange": " public IJavaProject getJavaProject(IResource resource)", "diff": ["-\tif (resource.getType() == IResource.FOLDER) {", "-\t\treturn new JavaProject(((IFolder)resource).getProject(), this);", "-\t} else if (resource.getType() == IResource.FILE) {", "-\t\treturn new JavaProject(((IFile)resource).getProject(), this);", "-\t} else if (resource.getType() == IResource.PROJECT) {", "-\t\treturn new JavaProject((IProject)resource, this);", "-\t} else {", "-\t\tthrow new IllegalArgumentException(Util.bind(\"element.invalidResourceForProject\")); //$NON-NLS-1$", "+\tswitch(resource.getType()){", "+\t\tcase IResource.FOLDER:", "+\t\t\treturn new JavaProject(((IFolder)resource).getProject(), this);", "+\t\tcase IResource.FILE:", "+\t\t\treturn new JavaProject(((IFile)resource).getProject(), this);", "+\t\tcase IResource.PROJECT:", "+\t\t\treturn new JavaProject((IProject)resource, this);", "+\t\tdefault:", "+\t\t\tthrow new IllegalArgumentException(Util.bind(\"element.invalidResourceForProject\")); //$NON-NLS-1$"]}], "num": 19921}