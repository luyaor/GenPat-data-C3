{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bafd14704f81d72cf7abe480e9dc4c00", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0038b06471ee80df89ea6770a0909f40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "6665973e9a36116a8cb24b7143317e47a83a98f0", "commitAfterChange": "305123b230bcfd1f733969b7cd2c687b75857ff0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tIJavaProject javaProject, \t\t\tList classpaths, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap options, \t\t\tWorkingCopyOwner owner, \t\t\tint flags, \t\t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tIJavaProject javaProject, \t\t\tList classpaths, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap options, \t\t\tWorkingCopyOwner owner, \t\t\tint flags, \t\t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tfinal int problemCount = unit.compilationResult.problemCount;", "-\t\t\t\tif (problemCount != 0) {", "-\t\t\t\t\tunitDeclaration.compilationResult.problems = new CategorizedProblem[problemCount];", "-\t\t\t\t\tSystem.arraycopy(unit.compilationResult.problems, 0, unitDeclaration.compilationResult.problems, 0, problemCount);", "-\t\t\t\t\tunitDeclaration.compilationResult.problemCount = problemCount;", "+\t\t\t\tif (unit != null) {", "+\t\t\t\t\tfinal int problemCount = unit.compilationResult.problemCount;", "+\t\t\t\t\tif (problemCount != 0) {", "+\t\t\t\t\t\tunitDeclaration.compilationResult.problems = new CategorizedProblem[problemCount];", "+\t\t\t\t\t\tSystem.arraycopy(unit.compilationResult.problems, 0, unitDeclaration.compilationResult.problems, 0, problemCount);", "+\t\t\t\t\t\tunitDeclaration.compilationResult.problemCount = problemCount;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (resolver.abortProblem != null) {", "+\t\t\t\t\tunitDeclaration.compilationResult.problemCount = 1;", "+\t\t\t\t\tunitDeclaration.compilationResult.problems = new CategorizedProblem[] { resolver.abortProblem };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7946e2caccee0c3c6a8e3a8e0b4128a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "89b5443004d9ddbeb89e7694fbe0c5e6bd87d8cd", "commitAfterChange": "77977ef4d2299bee1b96b81654af812c0dcdac27", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tIProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "+\t\tIProgressMonitor monitor) throws JavaModelException {", "-\t\t\t\t\ttrue); // generate code\t\t\t\t\t", "+\t\t\t\t\ttrue); // generate code", "+\t\t\tif (resolver.hasCompilationAborted) {", "+\t\t\t\t// the bindings could not be resolved due to missing types in name environment", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=86541", "+\t\t\t\tCompilationUnitDeclaration unitDeclaration = parse(sourceUnit, nodeSearcher, options);", "+\t\t\t\tfinal int problemCount = unit.compilationResult.problemCount;", "+\t\t\t\tif (problemCount != 0) {", "+\t\t\t\t\tunitDeclaration.compilationResult.problems = new IProblem[problemCount];", "+\t\t\t\t\tSystem.arraycopy(unit.compilationResult.problems, 0, unitDeclaration.compilationResult.problems, 0, problemCount);", "+\t\t\t\t\tunitDeclaration.compilationResult.problemCount = problemCount;", "+\t\t\t\t}", "+\t\t\t\treturn unitDeclaration;", "+\t\t\t}"]}], "num": 70867}