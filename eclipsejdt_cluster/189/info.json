{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02ca254530accfc074642d59f5c3b67c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "851d9bad45958ec05e3ad2138fd4466e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "e719dd5a3586c01e5265dc68f8e6023c180424cf", "commitAfterChange": "4e66475f9a73014d666c99c51fe059857a4663fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic void findTypes(char[] prefix, final ISearchRequestor storage)", "signatureAfterChange": "\r \tpublic void findTypes(char[] prefix, final ISearchRequestor storage)", "diff": ["-\t\t\tIProject projectRsc = (IProject) this.project.getUnderlyingResource();\r", "-\t\t\tIJavaSearchScope scope =\r", "-\t\t\t\tsearchEngine.createJavaSearchScope(new IResource[] { projectRsc });\r", "-\r", "+\t\t\t// Collect the project and its prerequisites (ie. referenced projects and jars)\r", "+\t\t\tJavaSearchScope scope = new JavaSearchScope();\r", "+\t\t\tIWorkspaceRoot root = this.project.getUnderlyingResource().getWorkspace().getRoot();\r", "+\t\t\tIClasspathEntry[] entries = this.project.getExpandedClasspath(true);\r", "+\t\t\tfor (int i = 0, length = entries.length; i < length; i++) {\r", "+\t\t\t\tIClasspathEntry entry = entries[i];\r", "+\t\t\t\tswitch (entry.getEntryKind()) {\r", "+\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\r", "+\t\t\t\t\t\tscope.add(root.getFile(entry.getPath()), false);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IClasspathEntry.CPE_PROJECT:\r", "+\t\t\t\t\t\tscope.add(root.getProject(entry.getPath().lastSegment()), false);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:\r", "+\t\t\t\t\t\tIPath path = entry.getPath();\r", "+\t\t\t\t\t\tif (path.segmentCount() == 1) {\r", "+\t\t\t\t\t\t\t// project is source\r", "+\t\t\t\t\t\t\tscope.add(root.getProject(path.lastSegment()), false);\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t// regular source folder\r", "+\t\t\t\t\t\t\tscope.add(root.getFolder(path), false);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\t\r", "-\t\t\t\t\tprojectRsc.getWorkspace(),\r", "+\t\t\t\t\tthis.project.getUnderlyingResource().getWorkspace(),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f162f1d47538b9872d2ca58c1dd11434", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "2ae41539e386d12d9e7c121e231730e370deda2f", "commitAfterChange": "05dd526dbb279df7b7e23a1d7ccb53d445943919", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic void findTypes(char[] prefix, final ISearchRequestor storage)", "signatureAfterChange": "\r \tpublic void findTypes(char[] prefix, final ISearchRequestor storage)", "diff": ["-\t\t\tJavaSearchScope scope = new JavaSearchScope();\r", "-\t\t\tIWorkspaceRoot root = this.project.getUnderlyingResource().getWorkspace().getRoot();\r", "-\t\t\tIClasspathEntry[] entries = ((JavaProject)this.project).getExpandedClasspath(true);\r", "-\t\t\tfor (int i = 0, length = entries.length; i < length; i++) {\r", "-\t\t\t\tIClasspathEntry entry = entries[i];\r", "-\t\t\t\tswitch (entry.getEntryKind()) {\r", "-\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\r", "-\t\t\t\t\t\tscope.add(root.getFile(entry.getPath()), false);\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tcase IClasspathEntry.CPE_PROJECT:\r", "-\t\t\t\t\t\tscope.add(root.getProject(entry.getPath().lastSegment()), false);\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:\r", "-\t\t\t\t\t\tIPath path = entry.getPath();\r", "-\t\t\t\t\t\tif (path.segmentCount() == 1) {\r", "-\t\t\t\t\t\t\t// project is source\r", "-\t\t\t\t\t\t\tscope.add(root.getProject(path.lastSegment()), false);\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t// regular source folder\r", "-\t\t\t\t\t\t\tscope.add(root.getFolder(path), false);\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\t\r", "+\t\t\tIJavaSearchScope scope = searchEngine.createJavaSearchScope(new IJavaElement[] {this.project});\r", "+\r"]}], "num": 189}