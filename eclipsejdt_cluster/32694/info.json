{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9de5a2f29fa69d71c0b521ffb0389875", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c59fc541defef5b00de9f0b059a2fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location, BlockScope locationScope)", "signatureAfterChange": " public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location, BlockScope locationScope)", "diff": ["-public void checkUnclosedCloseables(FlowInfo flowInfo, ASTNode location, BlockScope locationScope) {", "+public void checkUnclosedCloseables(FlowInfo flowInfo, FlowContext flowContext, ASTNode location, BlockScope locationScope) {", "-\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, location, locationScope);", "+\t\t\t((BlockScope) this.parent).checkUnclosedCloseables(flowInfo, flowContext, location, locationScope);", "-\t\tif (location != null && trackingVar.originalBinding != null && flowInfo.isDefinitelyNull(trackingVar.originalBinding))", "-\t\t\tcontinue; // reporting against a specific location, resource is null at this flow, don't complain", "-\t\t", "+\t\tif (location != null && trackingVar.hasDefinitelyNoResource(flowInfo)) {", "+\t\t\tcontinue; // reporting against a specific location, there is no resource at this flow, don't complain", "+\t\t}", "+", "+\t\tif (location != null && flowContext != null && flowContext.recordExitAgainstResource(this, flowInfo, trackingVar, location)) {", "+\t\t\tcontinue; // handled by the flow context", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e38612693f3a87d32c52dd0bc75d47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList prereqChain,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet traversed)", "signatureAfterChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList prereqChain,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet traversed, \t\t\tMap preferredClasspaths)", "diff": ["-\t\t\tHashSet traversed){", "+\t\t\tHashSet traversed,", "+\t\t\tMap preferredClasspaths){", "-\t\t\tIClasspathEntry[] classpath = preferredClasspath == null ? getResolvedClasspath(true) : preferredClasspath;", "+\t\t\tIClasspathEntry[] classpath = preferredClasspath;", "+\t\t\tif (classpath == null && preferredClasspaths != null) classpath = (IClasspathEntry[])preferredClasspaths.get(this);", "+\t\t\tif (classpath == null) classpath = getResolvedClasspath(true);", "-\t\t\t\t\t\t\t\tproject.updateCycleParticipants(null, prereqChain, cycleParticipants, workspaceRoot, traversed);", "+\t\t\t\t\t\t\t\tproject.updateCycleParticipants(null, prereqChain, cycleParticipants, workspaceRoot, traversed, preferredClasspaths);"]}], "num": 32694}