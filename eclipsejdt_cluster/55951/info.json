{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cae2f293d4eaa66c9ec148aa369da4a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c007a30e4c37ffaffee8e5f04d43d65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testResolveEmptySelectionOnMethod() throws JavaModelException", "signatureAfterChange": " public void testResolveEmptySelectionOnMethod() throws JavaModelException", "diff": ["- */", "-public void testResolveEmptySelectionOnMethod() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveEmptySelectionOnMethod.java\");", "-", "-\tString str = cu.getSource();", "-\tString selectAt = \"oo\";", "-\tString selection = \"\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod);\t", "-}", "+ */", "+public void testResolveEmptySelectionOnMethod() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveEmptySelectionOnMethod.java\");", "+", "+\tString str = cu.getSource();", "+\tString selectAt = \"oo\";", "+\tString selection = \"\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveEmptySelectionOnMethod [in ResolveEmptySelectionOnMethod.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6043bb008f80189bb4d6102d87ba0715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testResolveMethod() throws JavaModelException", "signatureAfterChange": " public void testResolveMethod() throws JavaModelException", "diff": ["- */", "-public void testResolveMethod() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethod.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"foo(\\\"\";", "-\tString selection = \"foo\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-", "-\tassertTrue(\"should have one method of 'foo'\",", "-\t\telements.length == 1 &&", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"QString;\"));\t\t", "-}", "+ */", "+public void testResolveMethod() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethod.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"foo(\\\"\";", "+\tString selection = \"foo\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveMethod [in ResolveMethod.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aacee6e085d3a52bb089a415033474f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testResolveExplicitSuperConstructorCall() throws JavaModelException", "signatureAfterChange": " public void testResolveExplicitSuperConstructorCall() throws JavaModelException", "diff": ["- */", "-public void testResolveExplicitSuperConstructorCall() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveExplicitSuperConstructorCall.java\");", "-", "-\tString str = cu.getSource();", "-\tString selectAt = \"super(\";", "-\tString selection = \"super\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-", "-\tassertTrue(\"should have one type\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"SuperClass\") &&", "-\t\telements[0] instanceof IMethod);\t", "-}", "+ */", "+public void testResolveExplicitSuperConstructorCall() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveExplicitSuperConstructorCall.java\");", "+", "+\tString str = cu.getSource();", "+\tString selectAt = \"super(\";", "+\tString selection = \"super\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"SuperClass [in SuperClass [in SuperClass.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93298b3e42adc74f37fa8d8dc5829d86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testResolveExplicitThisConstructorCall() throws JavaModelException", "signatureAfterChange": " public void testResolveExplicitThisConstructorCall() throws JavaModelException", "diff": ["- */", "-public void testResolveExplicitThisConstructorCall() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveExplicitThisConstructorCall.java\");", "-", "-\tString str = cu.getSource();", "-\tString selectAt = \"this(\";", "-\tString selection = \"this\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-", "-\tassertTrue(\"should have one type\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"ResolveExplicitThisConstructorCall\") &&", "-\t\telements[0] instanceof IMethod);\t", "-}", "+ */", "+public void testResolveExplicitThisConstructorCall() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveExplicitThisConstructorCall.java\");", "+", "+\tString str = cu.getSource();", "+\tString selectAt = \"this(\";", "+\tString selection = \"this\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"ResolveExplicitThisConstructorCall [in ResolveExplicitThisConstructorCall [in ResolveExplicitThisConstructorCall.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a292d6ca2cefbda259f033662b4ede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testResolveConstructorCallOfMemberType() throws JavaModelException", "signatureAfterChange": " public void testResolveConstructorCallOfMemberType() throws JavaModelException", "diff": ["- */", "-public void testResolveConstructorCallOfMemberType() throws JavaModelException {", "-\tIClassFile cf = getClassFile(\"Resolve\", \"class-folder\", \"\", \"ResolveConstructorCallOfMemberType.class\");", "-\t", "-\tString str = cf.getSource();", "-\tString selectAt = \"Inner\";", "-\tString selection = \"Inner\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cf.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"Inner\") &&", "-\t\telements[0] instanceof IMethod);\t", "-}", "+ */", "+public void testResolveConstructorCallOfMemberType() throws JavaModelException {", "+\tIClassFile cf = getClassFile(\"Resolve\", \"class-folder\", \"\", \"ResolveConstructorCallOfMemberType.class\");", "+\t", "+\tString str = cf.getSource();", "+\tString selectAt = \"Inner\";", "+\tString selection = \"Inner\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cf.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"Inner [in Inner [in ResolveConstructorCallOfMemberType$Inner.class [in <default> [in class-folder [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2812438d763c01942cfe9701c6b5f26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testResolveMethodDeclaration() throws JavaModelException", "signatureAfterChange": " public void testResolveMethodDeclaration() throws JavaModelException", "diff": ["- */", "-public void testResolveMethodDeclaration() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclaration.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"foo(i\";", "-\tString selection = \"foo\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"I\"));\t", "-}", "+ */", "+public void testResolveMethodDeclaration() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclaration.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"foo(i\";", "+\tString selection = \"foo\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveMethodDeclaration [in ResolveMethodDeclaration.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}], "num": 55951}