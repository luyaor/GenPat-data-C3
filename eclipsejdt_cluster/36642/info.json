{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f4de8dc9eb82c85c8e9bb7f4b36c54", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164ba52965455e188c303ca8f5858307", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "ecc7144cc9e86bed808e10ad4935bef0a2b31920", "commitAfterChange": "b92415dcd9dbdd80683f8bce8eb6ab82a2c55614", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchRule);", "+\t\t\t\treturn new QualifiedTypeDeclarationPattern(qualificationChars, typeChars, IIndexConstants.TYPE_SUFFIX, matchRule);", "-\t\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, TYPE_SUFFIX, matchRule),// cannot search for explicit member types", "+\t\t\t\t\tnew QualifiedTypeDeclarationPattern(qualificationChars, typeChars, IIndexConstants.TYPE_SUFFIX, matchRule),// cannot search for explicit member types"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb6ddb5b87c13999d2ab19e42a27fbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "ecc7144cc9e86bed808e10ad4935bef0a2b31920", "commitAfterChange": "b92415dcd9dbdd80683f8bce8eb6ab82a2c55614", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, int limitTo)", "signatureAfterChange": " \tprivate static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, int limitTo)", "diff": ["-\t\t\t\t\tTYPE_SUFFIX,", "+\t\t\t\t\tIIndexConstants.TYPE_SUFFIX,", "-\t\t\t\t\t\tTYPE_SUFFIX,", "+\t\t\t\t\t\tIIndexConstants.TYPE_SUFFIX,"]}], "num": 36642}