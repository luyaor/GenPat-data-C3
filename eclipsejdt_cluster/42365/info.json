{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a8e62f401020c48f18a02d1a0797c61", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ad9707aee28e030a1ee2621f10e79a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "88c7460e59173613af0d252f71b18fa99f4a3073", "commitAfterChange": "d09fa4802281032dbffe5d54191a48ffcdbfb895", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testModifiers2()", "signatureAfterChange": " \tpublic void testModifiers2()", "diff": ["-\t\t\t\"Illegal modifiers for the interface method foo3; strictfp is not permitted for abstract interface methods\\n\" +", "+\t\t\t\"strictfp is not permitted for abstract interface method foo3\\n\" +", "-\t\t\t\"Illegal modifiers for the interface method foo4; strictfp is not permitted for abstract interface methods\\n\" +", "+\t\t\t\"strictfp is not permitted for abstract interface method foo4\\n\" +", "-\t\t\t\"Illegal modifiers for the interface method foo5; strictfp is not permitted for abstract interface methods\\n\" +", "+\t\t\t\"strictfp is not permitted for abstract interface method foo5\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629beaba4fa8fbbaa6c60ac0e4dcb892", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SuperTypeTest.java", "commitBeforeChange": "727d8ca46d64642ad4f629f81ba37e76e7ae8c85", "commitAfterChange": "3bf739514a83473db763d6e900f7cc23c49722a4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test013()", "signatureAfterChange": " public void test013()", "diff": ["-\t\t\"Redundant superinterface Iterable<E> for the type X<E>, already defined by Collection<E>\\n\" + ", "+\t\t\"Redundant superinterface Iterable<E> for the type X<E>, already defined by List<E>\\n\" + ", "-\t\t\"\t                         ^^^^^^^^\\n\" + ", "-\t\t\"Redundant superinterface Iterable<E> for the type XXX<E>, already defined by Collection<E>\\n\" + ", "+\t\t\"\t                                               ^^^^^^^^^^\\n\" + ", "+\t\t\"Redundant superinterface Collection<E> for the type XXX<E>, already defined by List<E>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b4727507e6f304f486c65d43f69b17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "f7c2ed5ecce3841921f761b0b104d350042f786e", "commitAfterChange": "132971f23d5ad724e7abdb8444fe685456f8fc05", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test015()", "signatureAfterChange": " public void test015()", "diff": ["-\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method\\n\" + ", "+\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method run(int)\\n\" + ", "-\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method\\n\" + ", "+\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method run(int, String)\\n\" + ", "-\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method\\n\" + ", "+\t\t\t\t\"Lambda expression\\'s signature does not match the signature of the functional interface method run(int, String)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffed83b56129c8376ff1cea792277d4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "c5bc570b3367d0f94772d64cf154af589a536a09", "commitAfterChange": "c25147722035f2a05a7377305b87e55b9926d02e", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void testBug399780()", "signatureAfterChange": " public void testBug399780()", "diff": ["-\t\t\t\"Illegal modifier for the interface method foo1; only public & abstract are permitted\\n\" + ", "+\t\t\t\"Static methods are allowed in interfaces only at source level 1.8 or above\\n\" + ", "-\t\t\t\"\t                           ^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Static methods are allowed in interfaces only at source level 1.8 or above\\n\" + ", "+\t\t\t\"\t                   ^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the interface method foo1; only public & abstract are permitted\\n\" + ", "+\t\texpectedProblemLog,"]}], "num": 42365}