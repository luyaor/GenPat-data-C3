{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6abf171cae4986185dce4342c147c0ab", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5abd03dee2f8ffeae0ef6d7bfc1e27a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d33b892acebec2bc1c5d62c55db84a184bb6f3b3", "commitAfterChange": "86ecd2ba171e241fbd6f2290ee8ff607c4ff535a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\tcompilationUnitScope().recordReference(enclosingType, typeName);", "+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "+\t\tunitScope.recordReference(enclosingType, typeName);", "-\t\t\tcompilationUnitScope().recordTypeReference(memberType);", "+\t\t\tunitScope.recordTypeReference(memberType);", "-\t\t\tcompilationUnitScope().recordReference(currentType, typeName);", "+\t\t\tunitScope.recordReference(currentType, typeName);", "-\t\t\t\tcompilationUnitScope().recordTypeReference(memberType);", "+\t\t\t\tunitScope.recordTypeReference(memberType);", "-\t\t\t\t\t\tcompilationUnitScope().recordReference(anInterface, typeName);", "+\t\t\t\t\t\tunitScope.recordReference(anInterface, typeName);", "-\t\t\t\t\t\t\tcompilationUnitScope().recordTypeReference(memberType);", "+\t\t\t\t\t\t\tunitScope.recordTypeReference(memberType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee330e59110f1f09e8830abc1a158bdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d33b892acebec2bc1c5d62c55db84a184bb6f3b3", "commitAfterChange": "86ecd2ba171e241fbd6f2290ee8ff607c4ff535a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tcompilationUnitScope().recordTypeReferences(argumentTypes);", "+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "+\t\tunitScope.recordTypeReferences(argumentTypes);", "-\t\t\tcompilationUnitScope().recordTypeReference(currentType);", "+\t\t\tunitScope.recordTypeReference(currentType);", "-\t\tboolean isCompliant14 = compilationUnitScope().environment.options.complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\tboolean isCompliant14 = unitScope.environment.options.complianceLevel >= ClassFileConstants.JDK1_4;", "-\t\t\tcompilationUnitScope().recordTypeReference(currentType);", "+\t\t\tunitScope.recordTypeReference(currentType);", "-\t\t\t\t\tcompilationUnitScope().recordTypeReferences(matchingMethod.thrownExceptions);", "+\t\t\t\t\tunitScope.recordTypeReferences(matchingMethod.thrownExceptions);", "-\t\tif (compilationUnitScope().environment.options.sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\tif (unitScope.environment.options.sourceLevel >= ClassFileConstants.JDK1_5) {", "-\t\t\tcompilationUnitScope().recordTypeReferences(candidates[0].thrownExceptions);", "+\t\t\tunitScope.recordTypeReferences(candidates[0].thrownExceptions);"]}], "num": 20130}