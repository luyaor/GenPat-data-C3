{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc9119b95ac61667b66c2697ac6723b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb355b772ef6620bf0a060f64efe21c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test012()", "signatureAfterChange": " \tpublic void test012()", "diff": ["-\t\t\t\"    2  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "-\t\t\t\"    5  invokevirtual java/io/PrintStream.println()V [26]\\n\" + ", "+\t\t\t\"    2  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "+\t\t\t\"    5  invokevirtual java.io.PrintStream.println() : void  [26]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 9] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 9] local: b index: 1 type: Z\\n\";", "+\t\t\t\"        [pc: 0, pc: 9] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 9] local: b index: 1 type: boolean\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8efc87b7af5269d0eb929ecf354da94c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "commitAfterChange": "c3fe3a5d67fbf0c540d6fc63f233f6806516af9c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void test005()", "signatureAfterChange": "  \tpublic void test005()", "diff": ["-\t\t\t\t\"class Z<T> extends X<T> { public T foo() { return super.foo(); } }\\n\",", "+\t\t\t\t\"class Z<T> extends X<T> { @Override public T foo() { return super.foo(); } }\\n\",", "-\t\t\t\t\"class W<T> extends X { public T foo() { return super.foo(); } }\\n\",", "+\t\t\t\t\"class W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\",", "-\t\t\t\"\tclass W<T> extends X { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                               ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\tclass W<T> extends X { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                                                         ^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c93ce10ab77a54ca8fc27d8ed5273d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test021()", "signatureAfterChange": " \tpublic void test021()", "diff": ["-\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"Erasure of method make(Class<W>) is the same as another method in type Y<V>\\n\" +", "-\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"Erasure of method make(Class<U>) is the same as another method in type Y<V>\\n\" +", "-\t\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\t\"Erasure of method make(Class<W>) is the same as another method in type Y<V>\\n\" +", "-\t\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\t\"Erasure of method make(Class<U>) is the same as another method in type Y<V>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9be3f6fcbcc046b1010dbbadd575d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void testBug83127e()", "signatureAfterChange": " \tpublic void testBug83127e()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}], "num": 70864}