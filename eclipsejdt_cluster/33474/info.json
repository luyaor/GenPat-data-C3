{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a45acef18bd01696eeed3ca447e4c708", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39875eb79ba54575c09aacfcfb658eae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void _test0115_while()", "signatureAfterChange": " public void test0405_while()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0115_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean bar() {\\n\" + ", "-\t\t\t\t\"\t\t return true;\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t while (bar() && o == null) {\\n\" + ", "-\t\t\t\t\"\t\t   o.toString();\\n\" + // complain: NPE", "-\t\t\t\t\"\t\t   o = new Object();\\n\" +", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\to.toString();\\n\" + ", "-\t\t\t\"\t^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0405_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean bar() {\\n\" + ", "+\t\t\t\"    return true;\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    while (bar() && o == null) {\\n\" + ", "+\t\t\t\"      o.toString();\\n\" + // complain: NPE", "+\t\t\t\"      o = new Object();\\n\" +", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce37dc41403ff9628d9eee7e67d0068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 198, "signatureBeforeChange": " \tpublic void test0230_for()", "signatureAfterChange": " public void test0710_for()", "diff": ["-\t// null analysis -- for", "-\tpublic void test0230_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean bar() {\\n\" + ", "-\t\t\t\t\"\t\t return true;\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t   o = null;\\n\" + ", "-\t\t\t\t\"\t\t for (o.toString(); bar();) {\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tfor (o.toString(); bar();) {\\n\" + ", "-\t\t\t\"\t     ^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- for", "+public void test0710_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean bar() {\\n\" + ", "+\t\t\t\"    return true;\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    o = null;\\n\" + ", "+\t\t\t\"    for (o.toString(); bar();) {\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tfor (o.toString(); bar();) {\\n\" + ", "+\t\t\"\t     ^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3004952d8f2d0fc502e02e10a2595b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 194, "signatureBeforeChange": " \tpublic void _test0225_for()", "signatureAfterChange": " public void test0705_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0225_for() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean bar() {\\n\" + ", "-\t\t\t\t\"\t\t return true;\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t for (;bar() && o == null;) {\\n\" + ", "-\t\t\t\t\"\t\t   o.toString();\\n\" + // complain: NPE because of condition", "-\t\t\t\t\"\t\t   o = new Object();\\n\" +", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\to.toString();\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+// null analysis -- for", "+public void test0705_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean bar() {\\n\" + ", "+\t\t\t\"    return true;\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    for (;bar() && o == null;) {\\n\" + ", "+\t\t\t\"      o.toString();\\n\" + // complain: NPE because of condition", "+\t\t\t\"      o = new Object();\\n\" +", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}], "num": 33474}