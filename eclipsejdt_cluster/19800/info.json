{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03f2aae5173b857bcf8831ac936b0e66", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fa4db28e1a07ddd021d554ee113244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "d2eb21aa89935901dbdadab7e4f2ef196739750b", "commitAfterChange": "32876c0bd309ef116b634cd21181153eca601c1f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r protected void elementRemoved(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "diff": ["- */\r", "-protected void elementRemoved(Openable element, IResourceDelta delta) {\r", "-\tclose(element);\r", "-\tremoveFromParentInfo(element);\r", "-\tfCurrentDelta.removed(element);\r", "-\tswitch(element.getElementType()){\r", "-\t\tcase IJavaElement.JAVA_PROJECT :\r", "-\t\t\tJavaModelManager.getJavaModelManager().removePerProjectInfo((JavaProject) element);\r", "-\t\t\tbreak;\r", "-\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "-\t\t\t// when a root on the classpath is removed, the classpath must be updated\r", "-\t\t\tif (isOnClasspath(element)) {\r", "-\t\t\t\trootRemoved((IPackageFragmentRoot)element);\r", "-\t\t\t\tJavaElementDelta rootDelta = fCurrentDelta.find(element);\r", "-\t\t\t\trootDelta.setFlags(rootDelta.getFlags() | IJavaElementDelta.F_REMOVED_FROM_CLASSPATH);\r", "-\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "-\t\t\t\tJavaProject project = (JavaProject)element.getJavaProject();\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t} catch(JavaModelException e){\r", "-\t\t\t\t}\t\t\t\t\r", "-\t\t\t}\r", "-\t\t\tbreak;\r", "-\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "-\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info \r", "-\t\t\tif (isOnClasspath(element)) {\r", "-\t\t\t\tJavaProject project = (JavaProject)element.getJavaProject();\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "-\t\t\t\t} catch(JavaModelException e){\r", "-\t\t\tbreak;\r", "-\t\tcase IJavaElement.JAVA_MODEL:\r", "-\t\t\telement.getJavaModelManager().getIndexManager().reset();\r", "-\t\t\telement.getJavaModelManager().fModelInfo = null;\r", "-\t\t\tbreak;\r", "-\t}\r", "-}\r", "+\t */\r", "+\tprotected void elementRemoved(Openable element, IResourceDelta delta) {\r", "+\r", "+\t\tclose(element);\r", "+\t\tremoveFromParentInfo(element);\r", "+\t\tfCurrentDelta.removed(element);\r", "+\r", "+\t\tswitch (element.getElementType()) {\r", "+\t\t\tcase IJavaElement.JAVA_PROJECT :\r", "+\t\t\t\tJavaModelManager.getJavaModelManager().removePerProjectInfo(\r", "+\t\t\t\t\t(JavaProject) element);\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "+\t\t\t\t// get rid of namelookup since it holds onto obsolete cached info \r", "+\t\t\t\tif (isOnClasspath(element)) {\r", "+\t\t\t\t\tJavaProject project = (JavaProject) element.getJavaProject();\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tproject.getJavaProjectElementInfo().setNameLookup(null);\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase IJavaElement.JAVA_MODEL :\r", "+\t\t\t\telement.getJavaModelManager().getIndexManager().reset();\r", "+\t\t\t\telement.getJavaModelManager().fModelInfo = null;\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c242caa76bd18db788692e58d1a2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "signatureAfterChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "diff": ["-\t\t\t// find the outer most type", "-\t\t\tIType outerType = context;", "-\t\t\tIType parent = context.getDeclaringType();", "-\t\t\twhile (parent != null) {", "-\t\t\t\touterType = parent;", "-\t\t\t\tparent = parent.getDeclaringType();", "-\t\t\t}", "-", "-\t\t\t// compute parse tree for this most outer type", "-\t\t\t\tISourceType outerTypeInfo = (ISourceType) ((SourceType) outerType).getElementInfo();", "-\t\t\t\tCompilationResult result = new CompilationResult(outerTypeInfo.getFileName(), 1, 1, this.compilerOptions.maxProblemsPerUnit);", "+\t\t\t\tCompilationResult result = new CompilationResult((org.eclipse.jdt.internal.compiler.env.ICompilationUnit) cu, 1, 1, this.compilerOptions.maxProblemsPerUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef824c3ab95c9bbaece64a3175a262a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "24ecdaaa88a3d3df53c6657b56b1c35a02f254d7", "commitAfterChange": "b77d2ea3108de5650fdc8f1f0c9f51bf7203159f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic char[] findSource(IType type)", "signatureAfterChange": " \tpublic char[] findSource(IType type)", "diff": ["-\t\tBinaryType parent = (BinaryType) type.getDeclaringType();", "-\t\tBinaryType declType = (BinaryType) type;", "-\t\twhile (parent != null) {", "-\t\t\tdeclType = parent;", "-\t\t\tparent = (BinaryType) declType.getDeclaringType();", "-\t\t}", "-\t\tIBinaryType info = null;", "-\t\ttry {", "-\t\t\tinfo = (IBinaryType) declType.getElementInfo();", "-\t\t} catch (JavaModelException e) {", "-\t\t\treturn null;", "-\t\t}", "-\t\tString simpleSourceFileName = declType.sourceFileName(info);", "+\t\tString simpleSourceFileName = ((BinaryType) type).getSourceFileName();"]}], "num": 19800}