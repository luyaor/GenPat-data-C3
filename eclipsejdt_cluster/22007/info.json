{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d392553553e3fabc6b4abc2a4773a3a5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c3464fe47a586cbcfd7a377aaab5e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "55189ed648ac780e2783a409705c9c8b61eeced6", "commitAfterChange": "cd7ab76e97bbde2dfa388ac94141efed3a1c5385", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 105, "signatureBeforeChange": "  \tprivate void rewriteAnnotationsOnDimension(ArrayType replacingType, int index, int pos)", "signatureAfterChange": "  \tprivate void rewriteAnnotationsOnDimension(ArrayType oldArrayType, ArrayType replacingType, int index, int pos, boolean typeReplaced, TextEditGroup editGroup) throws CoreException", "diff": ["-\tprivate void rewriteAnnotationsOnDimension(ArrayType replacingType, int index, int pos) {", "-\t\tDimension dim = (Dimension) replacingType.dimensions().get(index);", "-\t\trewriteTypeAnnotations(dim, Dimension.ANNOTATIONS_PROPERTY, pos);", "+\tprivate void rewriteAnnotationsOnDimension(ArrayType oldArrayType, ArrayType replacingType, int index, int pos, boolean typeReplaced, TextEditGroup editGroup) throws CoreException {", "+\t\tif (typeReplaced) {", "+\t\t\tList dimensions = oldArrayType.dimensions();", "+\t\t\tDimension oldDim = index < dimensions.size() ? (Dimension) dimensions.get(index) : null;", "+\t\t\tif (oldDim != null) {", "+\t\t\t\tList oldAnnotations = oldDim.annotations();", "+\t\t\t\tint size = oldAnnotations.size();", "+\t\t\t\tif (size > 0) {", "+\t\t\t\t\tASTNode prev = getPreviousNode(oldDim);", "+\t\t\t\t\tAnnotation annotation = (Annotation) oldAnnotations.get(0);", "+\t\t\t\t\tint start = prev != null ? prev.getStartPosition() + prev.getLength() : annotation.getStartPosition();", "+\t\t\t\t\tannotation = (Annotation) oldAnnotations.get(size - 1);", "+\t\t\t\t\tint end = annotation.getStartPosition() + annotation.getLength();", "+\t\t\t\t\tend = getScanner().getTokenEndOffset(TerminalTokens.TokenNameLBRACKET, end) - 1;", "+\t\t\t\t\tdoTextRemove(start, end - start, editGroup);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tinsertAnnotationsOnDimension(replacingType, index, pos, editGroup, true);", "+\t\t} else {", "+\t\t\tDimension dim = (Dimension) replacingType.dimensions().get(index);", "+\t\t\trewriteNodeList(dim, Dimension.ANNOTATIONS_PROPERTY, pos, String.valueOf(' '), String.valueOf(' '), String.valueOf(' '));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9643972d7b987ddb99d356e7ca86c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "06b4da04864008da88066d5a5e945f628c432313", "commitAfterChange": "6cb1a46319677820636b0fbe76d096b92fe1835a", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["+\t\t\t\tTextEditGroup editGroup = getEditGroup(node, SingleVariableDeclaration.VARARGS_PROPERTY);", "-\t\t\t\t\tdoTextInsert(pos, \"...\", getEditGroup(node, SingleVariableDeclaration.VARARGS_PROPERTY)); //$NON-NLS-1$", "+\t\t\t\t\tif (apiLevel >= AST.JLS8) {", "+\t\t\t\t\t\tpos= rewriteVarargsAnnotations(node, SingleVariableDeclaration.VARARGS_ANNOTATIONS_PROPERTY, pos);", "+\t\t\t\t\t}", "+\t\t\t\t\tint indent= getIndent(node.getStartPosition());", "+\t\t\t\t\tString prefix= this.formatter.VARARGS.getPrefix(indent);", "+\t\t\t\t\tdoTextInsert(pos, prefix, editGroup);", "+\t\t\t\t\tdoTextInsert(pos, \"...\", editGroup); //$NON-NLS-1$", "-\t\t\t\t\t\tint ellipsisEnd= getScanner().getNextEndOffset(pos, true);", "-\t\t\t\t\t\tdoTextRemove(pos, ellipsisEnd - pos, getEditGroup(node, SingleVariableDeclaration.VARARGS_PROPERTY));", "+\t\t\t\t\t\tint ellipsisEnd;", "+\t\t\t\t\t\tint noOfAnnotations = apiLevel >= AST.JLS8 ? node.varargsAnnotations().size() : 0;", "+\t\t\t\t\t\tif (noOfAnnotations > 0) {", "+\t\t\t\t\t\t\tAnnotation annotation= (Annotation) node.varargsAnnotations().get(noOfAnnotations - 1);", "+\t\t\t\t\t\t\tint annotationEndPosition= annotation.getStartPosition() + annotation.getLength();", "+\t\t\t\t\t\t\tellipsisEnd= getScanner().getNextEndOffset(annotationEndPosition, true);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tellipsisEnd= getScanner().getNextEndOffset(pos, true);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdoTextRemove(pos, ellipsisEnd - pos, editGroup);", "+\t\t\t} else {", "+\t\t\t\tif (apiLevel >= AST.JLS8 && node.isVarargs()) {", "+\t\t\t\t\tpos = rewriteVarargsAnnotations(node, SingleVariableDeclaration.VARARGS_ANNOTATIONS_PROPERTY, pos);", "+\t\t\t\t}"]}], "num": 22007}