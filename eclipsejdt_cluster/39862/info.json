{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90fd7ff4fc73d7697aa82231d4b51d4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13741b74dd7637a1164e0cdb1c1d87d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "0d8b14fcdd186ef07894db465104582e473b32af", "commitAfterChange": "cb1176594034666f0f8d852dc8fc01987d54d11b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\t\tswitch (reader.getKind()) {", "-\t\t\t\tcase IGenericType.CLASS_DECL :", "+\t\t\tint modifiers = reader.getModifiers();", "+\t\t\tswitch (TypeDeclaration.kind(modifiers)) {", "+\t\t\t\tcase TypeDeclaration.CLASS_DECL :", "-\t\t\t\t\taddClassDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superclass, superinterfaces, typeParameterSignatures);", "+\t\t\t\t\taddClassDeclaration(modifiers, packageName, name, enclosingTypeNames, superclass, superinterfaces, typeParameterSignatures);", "-\t\t\t\tcase IGenericType.INTERFACE_DECL :", "-\t\t\t\t\taddInterfaceDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superinterfaces, typeParameterSignatures);", "+\t\t\t\tcase TypeDeclaration.INTERFACE_DECL :", "+\t\t\t\t\taddInterfaceDeclaration(modifiers, packageName, name, enclosingTypeNames, superinterfaces, typeParameterSignatures);", "-\t\t\t\tcase IGenericType.ENUM_DECL :", "-\t\t\t\t\taddEnumDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames, superinterfaces);", "+\t\t\t\tcase TypeDeclaration.ENUM_DECL :", "+\t\t\t\t\taddEnumDeclaration(modifiers, packageName, name, enclosingTypeNames, superinterfaces);", "-\t\t\t\tcase IGenericType.ANNOTATION_TYPE_DECL :", "-\t\t\t\t\taddAnnotationTypeDeclaration(reader.getModifiers(), packageName, name, enclosingTypeNames);", "+\t\t\t\tcase TypeDeclaration.ANNOTATION_TYPE_DECL :", "+\t\t\t\t\taddAnnotationTypeDeclaration(modifiers, packageName, name, enclosingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cfe4feff4d720e0a1bc769a11c7b92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/BatchImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r protected void addAllSourceFiles(final ArrayList locations, final ArrayList typeNames) throws CoreException", "signatureAfterChange": "\r \r protected void addAllSourceFiles(final ArrayList locations, final ArrayList typeNames) throws CoreException", "diff": ["-\t\tfinal int count = sourceFolders[i].getFullPath().segmentCount();\r", "+\t\tfinal int srcFolderLength = sourceFolders[i].getLocation().toString().length() + 1; // add the trailing /\r", "-\t\t\t\t\t\t\tlocations.add(resource.getLocation().toString());\r", "-\t\t\t\t\t\t\ttypeNames.add(\r", "-\t\t\t\t\t\t\t\tresource.getFullPath().removeFirstSegments(count).removeFileExtension().toString());\r", "+\t\t\t\t\t\t\tString sourceLocation = resource.getLocation().toString();\r", "+\t\t\t\t\t\t\tlocations.add(sourceLocation);\r", "+\t\t\t\t\t\t\ttypeNames.add(sourceLocation.substring(srcFolderLength, sourceLocation.length() - 5)); // length of .java\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301b5421be7dbcc615ad6a8f3a3407a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "82d0646a44ab4833416a6e881569e33cf73f823e", "commitAfterChange": "1e043a3eb5d2a46e21cb3b09355619f53e2b6f15", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IJavaElement getJavaElement()", "signatureAfterChange": " \tpublic IJavaElement getJavaElement()", "diff": ["-\t\tif (referenceBinding.isBinaryBinding()) {", "-\t\t\tClassFile classFile = (ClassFile) getClassFile(referenceBinding.getFileName());", "+\t\tchar[] fileName = referenceBinding.getFileName();", "+\t\tif (Util.isClassFileName(fileName)) {", "+\t\t\tClassFile classFile = (ClassFile) getClassFile(fileName);", "-\t\t\tICompilationUnit cu = getCompilationUnit(referenceBinding.getFileName());", "+\t\t\tICompilationUnit cu = getCompilationUnit(fileName);", "-\t\t\t\tICompilationUnit cu = getCompilationUnit(referenceBinding.getFileName());", "+\t\t\t\tICompilationUnit cu = getCompilationUnit(fileName);"]}], "num": 39862}