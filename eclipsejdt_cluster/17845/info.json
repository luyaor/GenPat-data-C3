{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f62e5945029ade9a5fd38f8ef1f275", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c860a0b63f20c319c8add34640abbc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "c0d8ddbb4b72e166c7dc81eb807bc47fd1beaa74", "commitAfterChange": "eba08540864c5a072bab6eda44e20e08ad2dd7a0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["+\t\t\tif (this.ast.apiLevel >= AST.JLS8) {", "+\t\t\t\tacceptChild(visitor, this.receiverType);", "+\t\t\t\tacceptChild(visitor, this.receiverQualifier);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303c6ebcd1904d6bcc7b06e78b55752e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t// handling innerclass constructor invocation", "+\t\t\t", "+\t\t\t// special name&ordinal argument generation for enum constructors", "+\t\t\tif (targetType.erasure().id == T_JavaLangEnum || targetType.isEnum()) {", "+\t\t\t\tcodeStream.aload_1(); // pass along name param as name arg", "+\t\t\t\tcodeStream.iload_2(); // pass along ordinal param as ordinal arg", "+\t\t\t}", "+\t\t\t// handling innerclass constructor invocation", "-\t\t\t// regular code gen", "-\t\t\tgenerateArguments(binding, arguments, currentScope, codeStream);", "+\t\t\t// generate arguments", "+\t\t\tgenerateArguments(binding, arguments, currentScope, codeStream);\t\t\t", "+\t\t\t"]}], "num": 17845}