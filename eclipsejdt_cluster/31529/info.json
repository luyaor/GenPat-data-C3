{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc902c4880dd338f80f51ba569febd2f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304d2a107f26f7a864c823dc2cd63110", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "4eb127945a2ceccf115682270cb891d015657dc6", "commitAfterChange": "2c3d71a674e588a8bcef926caa5965ce37ed2171", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testMethodWithError4() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError4() throws JavaModelException, CoreException", "diff": ["-\tfinal IProgressMonitor myMonitor = new IProgressMonitor() {", "-\t\tboolean isCanceled = false;", "-\t\tpublic void beginTask(String name, int totalWork) {}", "-\t\tpublic void done() {}", "-\t\tpublic void internalWorked(double work) {}", "-\t\tpublic boolean isCanceled() {", "-\t\t\treturn this.isCanceled;", "-\t\t}", "-\t\tpublic void setCanceled(boolean value) {", "-\t\t\tthis.isCanceled = value;", "-\t\t}", "-\t\tpublic void setTaskName(String name) {}", "-\t\tpublic void subTask(String name) {}", "-\t\tpublic void worked(int work) {}", "-\t};", "-", "-\tclass CancelingProblemRequestor extends ProblemRequestor {", "-\t\tboolean isCanceling = false;", "-\t\tpublic void acceptProblem(IProblem problem) {", "-\t\t\tif (isCanceling) myMonitor.setCanceled(true); // auto-cancel on first problem", "-\t\t\tsuper.acceptProblem(problem);", "-\t\t}\t\t", "-\t}", "-\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, true, null, myMonitor);", "+\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, true, null, myPbRequestor.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b75ebd780d205b3bd2f006229c4315e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "5fd533c8760a35e551d2642335bb8a6be55dd0a9", "commitAfterChange": "0e6753a185999404d06eadf4d1578289f19a00e3", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tpublic void test0521() throws JavaModelException", "signatureAfterChange": " \tpublic void test0521() throws JavaModelException", "diff": ["-\t\tclass Counter implements IProgressMonitor {", "-\t\t\tint count = 0;", "-\t\t\tpublic void beginTask(String name, int totalWork) {}", "-\t\t\tpublic void done() {}", "-\t\t\tpublic void internalWorked(double work) {}", "-\t\t\tpublic boolean isCanceled() {", "-\t\t\t\tcount++;", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t\tpublic void setCanceled(boolean value) {}", "-\t\t\tpublic void setTaskName(String name) {}", "-\t\t\tpublic void subTask(String name) {}", "-\t\t\tpublic void worked(int work) {}", "-\t\t}", "-\t\tCounter counter = new Counter();", "+\t\tCancelCounter counter = new CancelCounter();", "-\t\tclass Canceler implements IProgressMonitor {", "-\t\t\tint count;", "-\t\t\tCanceler(int count) {", "-\t\t\t\tthis.count = count;", "-\t\t\t}", "-\t\t\tpublic void beginTask(String name, int totalWork) {}", "-\t\t\tpublic void done() {}", "-\t\t\tpublic void internalWorked(double work) {}", "-\t\t\tpublic boolean isCanceled() {", "-\t\t\t\treturn --count < 0;", "-\t\t\t}", "-\t\t\tpublic void setCanceled(boolean value) {}", "-\t\t\tpublic void setTaskName(String name) {}", "-\t\t\tpublic void subTask(String name) {}", "-\t\t\tpublic void worked(int work) {}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9f4e98511a56c7d5bbe1709058acf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "5fd533c8760a35e551d2642335bb8a6be55dd0a9", "commitAfterChange": "0e6753a185999404d06eadf4d1578289f19a00e3", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tpublic void test0521() throws JavaModelException", "signatureAfterChange": " \tpublic void test0521() throws JavaModelException", "diff": ["-\t\tclass Counter implements IProgressMonitor {", "-\t\t\tint count = 0;", "-\t\t\tpublic void beginTask(String name, int totalWork) {}", "-\t\t\tpublic void done() {}", "-\t\t\tpublic void internalWorked(double work) {}", "-\t\t\tpublic boolean isCanceled() {", "-\t\t\t\tcount++;", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t\tpublic void setCanceled(boolean value) {}", "-\t\t\tpublic void setTaskName(String name) {}", "-\t\t\tpublic void subTask(String name) {}", "-\t\t\tpublic void worked(int work) {}", "-\t\t}", "-\t\tCounter counter = new Counter();", "+\t\tCancelCounter counter = new CancelCounter();", "-\t\tclass Canceler implements IProgressMonitor {", "-\t\t\tint count;", "-\t\t\tCanceler(int count) {", "-\t\t\t\tthis.count = count;", "-\t\t\t}", "-\t\t\tpublic void beginTask(String name, int totalWork) {}", "-\t\t\tpublic void done() {}", "-\t\t\tpublic void internalWorked(double work) {}", "-\t\t\tpublic boolean isCanceled() {", "-\t\t\t\treturn --count < 0;", "-\t\t\t}", "-\t\t\tpublic void setCanceled(boolean value) {}", "-\t\t\tpublic void setTaskName(String name) {}", "-\t\t\tpublic void subTask(String name) {}", "-\t\t\tpublic void worked(int work) {}", "-\t\t}"]}], "num": 31529}