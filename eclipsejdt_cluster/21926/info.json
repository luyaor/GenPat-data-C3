{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a93c9613f0d4c7270522dc81e375d0ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa5d52e87de19211e7bf29c26d8c0a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/CompilationUnitHelper.java", "commitBeforeChange": "c5aec3a765a7b3a6b1146e9e3a6a440f3522c2eb", "commitAfterChange": "868bb663e324da2f9402a117feeb046defe94741", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor) {", "-\t\ttry {", "-\t\t\tIBuffer b = wc.getBuffer();", "-\t\t\tb.setContents(contents);", "-\t\t\twc.commitWorkingCopy(true, monitor);", "-\t\t} catch (JavaModelException e) {", "-\t\t\tAptPlugin.log(e, \"Unable to commit new contents for working copy \" + wc.getElementName()); //$NON-NLS-1$", "-\t\t}", "+\tpublic void commitNewContents(ICompilationUnit wc, String contents, IProgressMonitor monitor) throws JavaModelException {", "+\t\tIBuffer b = wc.getBuffer();", "+\t\tb.setContents(contents);", "+\t\twc.commitWorkingCopy(true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24fdcfc9e6b9b54ab49745b1b0a2ddd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "fe7b697ca16cd240df01b1ad29e35b2693b4b160", "commitAfterChange": "68fbbc2b696126776a21b18e5e10fb30f89536f0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void commit(boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void commit(boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tCommitWorkingCopyOperation op= new CommitWorkingCopyOperation(this, force);", "-\trunOperation(op, monitor);", "+\tICompilationUnit original = (ICompilationUnit)this.getOriginalElement();", "+\tif (original.exists()) {", "+\t\tCommitWorkingCopyOperation op= new CommitWorkingCopyOperation(this, force);", "+\t\trunOperation(op, monitor);", "+\t} else {", "+\t\tIFile originalRes = (IFile)original.getResource();", "+\t\ttry {", "+\t\t\toriginalRes.create(", "+\t\t\t\tnew InputStream() {", "+\t\t\t\t\tpublic int read() throws IOException {", "+\t\t\t\t\t\treturn -1;", "+\t\t\t\t\t}", "+\t\t\t\t},", "+\t\t\t\tforce,", "+\t\t\t\tmonitor);", "+\t\t} catch (CoreException e) {", "+\t\t\tthrow new JavaModelException(e);", "+\t\t}", "+\t\toriginal.getBuffer().setContents(this.getContents());", "+\t\toriginal.save(monitor, force);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0935b652010a476ab1b5e457ff1ad84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "c0eface7c51e3af184baaa0d320e58e29799e4b8", "commitAfterChange": "ed97a9ed7d7ba3ec97e93e9090fed591e33f5e45", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException", "diff": ["+ */", "+public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException {", "+\tif (isWorkingCopy()) return this;", "+\t", "+\tCompilationUnit workingCopy = ", "+\t\tnew CompilationUnit(", "+\t\t\t(IPackageFragment)getParent(), ", "+\t\t\tgetElementName(), ", "+\t\t\tnew DefaultWorkingCopyOwner());", "+\tBecomeWorkingCopyOperation op = new BecomeWorkingCopyOperation(workingCopy, null, null);", "+\trunOperation(op, monitor);", "+\treturn workingCopy;", "+}", "- */", "-public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException {", "-\treturn getWorkingCopy(new DefaultWorkingCopyOwner(), null, monitor);", "-}"]}], "num": 21926}