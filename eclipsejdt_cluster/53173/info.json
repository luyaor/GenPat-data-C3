{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c34f40cfcdc8b2d14048599d02d7a717", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b685771260adf977b0ef7c289a55d90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void consumeMarkerAnnotation()", "signatureAfterChange": " protected void consumeMarkerAnnotation(boolean isTypeAnnotation)", "diff": ["-protected void consumeMarkerAnnotation() {", "-\tsuper.consumeMarkerAnnotation();", "-\tAnnotation annotation = (Annotation)this.expressionStack[this.expressionPtr];", "+protected void consumeMarkerAnnotation(boolean isTypeAnnotation) {", "+\tsuper.consumeMarkerAnnotation(isTypeAnnotation);", "+\tAnnotation annotation = (Annotation) (isTypeAnnotation ? this.typeAnnotationStack[this.typeAnnotationPtr] : this.expressionStack[this.expressionPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d92207ba94616f7c126ffe93574fa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected void consumeNormalAnnotation()", "signatureAfterChange": " protected void consumeNormalAnnotation(boolean isTypeAnnotation)", "diff": ["-protected void consumeNormalAnnotation() {", "-\tsuper.consumeNormalAnnotation();", "-\tAnnotation annotation = (Annotation)this.expressionStack[this.expressionPtr];", "+protected void consumeNormalAnnotation(boolean isTypeAnnotation) {", "+\tsuper.consumeNormalAnnotation(isTypeAnnotation);", "+\tAnnotation annotation = (Annotation) (isTypeAnnotation ? this.typeAnnotationStack[this.typeAnnotationPtr] : this.expressionStack[this.expressionPtr]);"]}], "num": 53173}