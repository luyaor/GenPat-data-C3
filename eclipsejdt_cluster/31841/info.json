{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e74950adb502a033bcb76ab0cd4cce9", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6897263c13fd37efabebdeb3d50f96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldDeclarationPattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof FieldBinding)) return false;\r", "-\r", "-\tFieldBinding field = (FieldBinding)binding;\r", "-\t\r", "-\t// field name\r", "-\tif (!this.matchesName(this.name, field.readableName()))\r", "-\t\treturn false;\r", "-\r", "-\t// declaring type\r", "-\tReferenceBinding declaringBinding = field.declaringClass;\r", "-\tif (declaringBinding != null \r", "-\t\t&& !this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringBinding)) {\r", "-\t\t\t\r", "-\t\treturn false;\r", "-\t}\r", "-\r", "-\t// field type\r", "-\tif(!this.matchesType(this.typeSimpleName, this.typeQualification, field.type)) {\r", "-\t\treturn false;\r", "-\t}\r", "-\t\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof FieldBinding)) return IMPOSSIBLE_MATCH;\r", "+\tint level;\r", "+\r", "+\tFieldBinding field = (FieldBinding)binding;\r", "+\t\r", "+\t// field name\r", "+\tif (!this.matchesName(this.name, field.readableName()))\r", "+\t\treturn IMPOSSIBLE_MATCH;\r", "+\r", "+\t// declaring type\r", "+\tReferenceBinding declaringBinding = field.declaringClass;\r", "+\tif (declaringBinding == null ) {\r", "+\t\treturn INACCURATE_MATCH;\r", "+\t} else {\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, declaringBinding);\r", "+\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "+\t}\r", "+\r", "+\t// field type\r", "+\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, field.type);\r", "+\tswitch (newLevel) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\tbreak;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tlevel = newLevel;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn level;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58f0423b27ef6bfd3f3a71ef78b1497d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldDeclarationPattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof FieldBinding)) return false;\r", "-\r", "-\tFieldBinding field = (FieldBinding)binding;\r", "-\t\r", "-\t// field name\r", "-\tif (!this.matchesName(this.name, field.readableName()))\r", "-\t\treturn false;\r", "-\r", "-\t// declaring type\r", "-\tReferenceBinding declaringBinding = field.declaringClass;\r", "-\tif (declaringBinding != null \r", "-\t\t&& !this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringBinding)) {\r", "-\t\t\t\r", "-\t\treturn false;\r", "-\t}\r", "-\r", "-\t// field type\r", "-\tif(!this.matchesType(this.typeSimpleName, this.typeQualification, field.type)) {\r", "-\t\treturn false;\r", "-\t}\r", "-\t\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof FieldBinding)) return IMPOSSIBLE_MATCH;\r", "+\tint level;\r", "+\r", "+\tFieldBinding field = (FieldBinding)binding;\r", "+\t\r", "+\t// field name\r", "+\tif (!this.matchesName(this.name, field.readableName()))\r", "+\t\treturn IMPOSSIBLE_MATCH;\r", "+\r", "+\t// declaring type\r", "+\tReferenceBinding declaringBinding = field.declaringClass;\r", "+\tif (declaringBinding == null ) {\r", "+\t\treturn INACCURATE_MATCH;\r", "+\t} else {\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, declaringBinding);\r", "+\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "+\t}\r", "+\r", "+\t// field type\r", "+\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, field.type);\r", "+\tswitch (newLevel) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\tbreak;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tlevel = newLevel;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn level;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afd101f5a06299c640a08f4d3fb3ea8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldDeclarationPattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof FieldBinding)) return false;\r", "-\r", "-\tFieldBinding field = (FieldBinding)binding;\r", "-\t\r", "-\t// field name\r", "-\tif (!this.matchesName(this.name, field.readableName()))\r", "-\t\treturn false;\r", "-\r", "-\t// declaring type\r", "-\tReferenceBinding declaringBinding = field.declaringClass;\r", "-\tif (declaringBinding != null \r", "-\t\t&& !this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringBinding)) {\r", "-\t\t\t\r", "-\t\treturn false;\r", "-\t}\r", "-\r", "-\t// field type\r", "-\tif(!this.matchesType(this.typeSimpleName, this.typeQualification, field.type)) {\r", "-\t\treturn false;\r", "-\t}\r", "-\t\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof FieldBinding)) return IMPOSSIBLE_MATCH;\r", "+\tint level;\r", "+\r", "+\tFieldBinding field = (FieldBinding)binding;\r", "+\t\r", "+\t// field name\r", "+\tif (!this.matchesName(this.name, field.readableName()))\r", "+\t\treturn IMPOSSIBLE_MATCH;\r", "+\r", "+\t// declaring type\r", "+\tReferenceBinding declaringBinding = field.declaringClass;\r", "+\tif (declaringBinding == null ) {\r", "+\t\treturn INACCURATE_MATCH;\r", "+\t} else {\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, declaringBinding);\r", "+\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "+\t}\r", "+\r", "+\t// field type\r", "+\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, field.type);\r", "+\tswitch (newLevel) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\tbreak;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tlevel = newLevel;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn level;\r", "+}\r"]}], "num": 31841}