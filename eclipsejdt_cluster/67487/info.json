{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eeaa539850181e493329d382e3847a5a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eccee9256a0864f5f67e0fe31cec266", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "b95e061ee40787fda0df77e85aee18cd53fbb401", "commitAfterChange": "b0470296808cbf41396e5dad6ff9310bac8441af", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tprivate int generateRuntimeAnnotationsForParameters(Argument[] arguments)", "signatureAfterChange": "  \tprivate int generateRuntimeAnnotationsForParameters(Argument[] arguments)", "diff": ["+\t\t\tint globalCounter = 0;", "-\t\t\tinvisibleLoop: for (int i = 0; i < argumentsLength; i++) {", "+\t\t\tfor (int i = 0; i < argumentsLength; i++) {", "-\t\t\t\t\tcontents[contentsOffset++] = (byte) (numberOfInvisibleAnnotations >> 8);", "-\t\t\t\t\tcontents[contentsOffset++] = (byte) numberOfInvisibleAnnotations;", "+\t\t\t\t\tint invisibleAnnotationsOffset = this.contentsOffset;", "+\t\t\t\t\t// leave space for number of annotations", "+\t\t\t\t\tthis.contentsOffset += 2;", "+\t\t\t\t\tint counter = 0;", "-\t\t\t\t\t\t\t\tgenerateAnnotation(annotation, annotationAttributeOffset);", "-\t\t\t\t\t\t\t\tif (contentsOffset == annotationAttributeOffset) {", "-\t\t\t\t\t\t\t\t\tbreak invisibleLoop;", "+\t\t\t\t\t\t\t\tint currentAnnotationOffset = this.contentsOffset;", "+\t\t\t\t\t\t\t\tgenerateAnnotation(annotation, currentAnnotationOffset);", "+\t\t\t\t\t\t\t\tif (contentsOffset != currentAnnotationOffset) {", "+\t\t\t\t\t\t\t\t\tcounter++;", "+\t\t\t\t\t\t\t\t\tglobalCounter++;", "+\t\t\t\t\tcontents[invisibleAnnotationsOffset++] = (byte) (counter >> 8);", "+\t\t\t\t\tcontents[invisibleAnnotationsOffset] = (byte) counter;", "-\t\t\tif (contentsOffset != annotationAttributeOffset) {", "+\t\t\tif (globalCounter != 0) {", "+\t\t\t\t// if globalCounter is 0, this means that the code generation for all visible annotations failed", "+\t\t\tint globalCounter = 0;", "-\t\t\tvisibleLoop: for (int i = 0; i < argumentsLength; i++) {", "+\t\t\tfor (int i = 0; i < argumentsLength; i++) {", "-\t\t\t\t\tcontents[contentsOffset++] = (byte) (numberOfVisibleAnnotations >> 8);", "-\t\t\t\t\tcontents[contentsOffset++] = (byte) numberOfVisibleAnnotations;", "+\t\t\t\t\tint visibleAnnotationsOffset = this.contentsOffset;", "+\t\t\t\t\t// leave space for number of annotations", "+\t\t\t\t\tthis.contentsOffset += 2;", "+\t\t\t\t\tint counter = 0;", "-\t\t\t\t\t\t\t\tgenerateAnnotation(annotation, annotationAttributeOffset);", "-\t\t\t\t\t\t\t\tif (contentsOffset == annotationAttributeOffset) {", "-\t\t\t\t\t\t\t\t\tbreak visibleLoop;", "+\t\t\t\t\t\t\t\tint currentAnnotationOffset = this.contentsOffset;", "+\t\t\t\t\t\t\t\tgenerateAnnotation(annotation, currentAnnotationOffset);", "+\t\t\t\t\t\t\t\tif (contentsOffset != currentAnnotationOffset) {", "+\t\t\t\t\t\t\t\t\tcounter++;", "+\t\t\t\t\t\t\t\t\tglobalCounter++;", "+\t\t\t\t\tcontents[visibleAnnotationsOffset++] = (byte) (counter >> 8);", "+\t\t\t\t\tcontents[visibleAnnotationsOffset] = (byte) counter;", "-\t\t\tif (contentsOffset != annotationAttributeOffset) {", "+\t\t\tif (globalCounter != 0) {", "+\t\t\t\t// if globalCounter is 0, this means that the code generation for all visible annotations failed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530bb5d01d533826da7584659cc13cf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "b95e061ee40787fda0df77e85aee18cd53fbb401", "commitAfterChange": "b0470296808cbf41396e5dad6ff9310bac8441af", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations)", "signatureAfterChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations)", "diff": ["+\t\tint annotationAttributeOffset = contentsOffset;", "-\t\t\tint annotationAttributeOffset = contentsOffset;", "-\t\t\tcontents[annotationsLengthOffset++] = (byte) (invisibleAnnotationsCounter >> 8);", "-\t\t\tcontents[annotationsLengthOffset++] = (byte) invisibleAnnotationsCounter;", "-", "+\t\t\tint counter = 0;", "-\t\t\t\t\tgenerateAnnotation(annotation, annotationAttributeOffset);", "+\t\t\t\t\tint currentAnnotationOffset = this.contentsOffset;", "+\t\t\t\t\tgenerateAnnotation(annotation, currentAnnotationOffset);", "-\t\t\t\t\tif (this.contentsOffset == annotationAttributeOffset) {", "-\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\tif (this.contentsOffset != currentAnnotationOffset) {", "+\t\t\t\t\t\tcounter++;", "-\t\t\tif (contentsOffset != annotationAttributeOffset) {", "+\t\t\tif (counter != 0) {", "+\t\t\t\tcontents[annotationsLengthOffset++] = (byte) (counter >> 8);", "+\t\t\t\tcontents[annotationsLengthOffset++] = (byte) counter;", "+", "+\t\tannotationAttributeOffset = contentsOffset;", "-\t\t\tint annotationAttributeOffset = contentsOffset;", "-\t\t\tcontents[annotationsLengthOffset++] = (byte) (visibleAnnotationsCounter >> 8);", "-\t\t\tcontents[annotationsLengthOffset++] = (byte) visibleAnnotationsCounter;", "-", "+\t\t\tint counter = 0;", "-\t\t\t\t\tgenerateAnnotation(annotation, annotationAttributeOffset);", "-\t\t\t\t\tif (this.contentsOffset == annotationAttributeOffset) {", "-\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\tint currentAnnotationOffset = this.contentsOffset;", "+\t\t\t\t\tgenerateAnnotation(annotation, currentAnnotationOffset);", "+\t\t\t\t\tif (this.contentsOffset != currentAnnotationOffset) {", "+\t\t\t\t\t\tcounter++;", "-\t\t\tif (contentsOffset != annotationAttributeOffset) {", "+\t\t\tif (counter != 0) {", "+\t\t\t\tcontents[annotationsLengthOffset++] = (byte) (counter >> 8);", "+\t\t\t\tcontents[annotationsLengthOffset++] = (byte) counter;", "+"]}], "num": 67487}