{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99d13486bcda435251baebcd263376ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088a00054019233633bbf95c59edc3a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "  \tprivate void printBlockComment(boolean isJavadoc)", "signatureAfterChange": "  \tprivate void printBlockComment(boolean isJavadoc)", "diff": ["-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\t\t\tboolean addSpace = false;", "-\t\t\t\t\t\t\t\t// simply insert indentation if necessary", "-\t\t\t\t\t\t\t\tbuffer.append(this.lineSeparator);", "-\t\t\t\t\t\t\t\tif (indentComment) {", "-\t\t\t\t\t\t\t\t\tprintIndentationIfNecessary(buffer);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\t\t\taddSpace = true;", "-\t\t\t\t\t\t\t\tbuffer.append(this.lineSeparator);", "-\t\t\t\t\t\t\t\tif (indentComment) {", "-\t\t\t\t\t\t\t\t\tprintIndentationIfNecessary(buffer);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\t\t\taddSpace = true;", "-\t\t\t\t\t\t\taddReplaceEdit(start, previousStart - 1, String.valueOf(buffer));", "+\t\t\t\t\t\t\tString replacement;", "+\t\t\t\t\t\t\tif (indentComment) {", "+\t\t\t\t\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\t\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\t\t\t\t\t\t\tif (this.indentationLevel > 0) {", "+\t\t\t\t\t\t\t\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (addSpace) {", "+\t\t\t\t\t\t\t\t\tthis.tempBuffer.append(' ');", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\treplacement = this.tempBuffer.toString();", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treplacement = addSpace ? this.lineSeparatorAndSpace : this.lineSeparator;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\taddReplaceEdit(start, previousStart - 1, replacement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b331d2696c3a8d51bcc0c4f7b18861e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "02923f16f1c823a00fbe6663157d3da79aaee5af", "commitAfterChange": "90d281c6abe2405cdd6eb338ead640e6b6f0225a", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["-\t\tif (hasTokens || multiLines) {", "-\t\t\tStringBuffer replacement = new StringBuffer();", "-\t\t\tif (hasTextOnFirstLine == 1) {", "-\t\t\t\tif ((hasMultiLines || multiLines)) {", "-\t\t\t\t\tint col = this.column;", "-\t\t\t\t\treplacement.append(this.lineSeparator);", "-\t\t\t\t\tthis.column = 1;", "-\t\t\t\t\tprintIndentationIfNecessary(replacement);", "-\t\t\t\t\treplacement.append(BLOCK_LINE_PREFIX);", "-\t\t\t    \tthis.column = col;", "-\t\t\t\t} else {", "-\t\t\t\t\treplacement.append(' ');", "+\t\tif (this.nlsTagCounter == 0 || !multiLines) {", "+\t\t\tif (hasTokens || multiLines) {", "+\t\t\t\tStringBuffer replacement = new StringBuffer();", "+\t\t\t\tif (hasTextOnFirstLine == 1) {", "+\t\t\t\t\tif ((hasMultiLines || multiLines)) {", "+\t\t\t\t\t\tint col = this.column;", "+\t\t\t\t\t\treplacement.append(this.lineSeparator);", "+\t\t\t\t\t\tthis.column = 1;", "+\t\t\t\t\t\tprintIndentationIfNecessary(replacement);", "+\t\t\t\t\t\treplacement.append(BLOCK_LINE_PREFIX);", "+\t\t\t\t    \tthis.column = col;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treplacement.append(' ');", "+\t\t\t\t\t}", "+\t\t\t\treplacement.append(buffer);", "+\t\t\t\taddReplaceEdit(editStart, editEnd, replacement.toString());", "-\t\t\treplacement.append(buffer);", "-\t\t\taddReplaceEdit(editStart, editEnd, replacement.toString());"]}], "num": 13920}