{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e9b682614e3ab5b0d4def2628eea480", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2612b1ac33760eccef382d6c9260c23c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test011a()", "signatureAfterChange": " \tpublic void test011a()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return;", "-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Combined.java (at line 2)\\n\" + ", "+\t\t\t\"\t<T extends Comparable<T>> void pickOne(T value) throws ExOne {}\\n\" + ", "+\t\t\t\"\t                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method pickOne(T) has the same erasure pickOne(Comparable<T>) as another method in type Combined<A,B>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Combined.java (at line 3)\\n\" + ", "+\t\t\t\"\t<T> T pickOne(Comparable<T> value) throws ExTwo { return null;}\\n\" + ", "+\t\t\t\"\t      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method pickOne(Comparable<T>) has the same erasure pickOne(Comparable<T>) as another method in type Combined<A,B>\\n\" + ", "+\t\t\t\"----------\\n\"", "+/* javac 7", "+X.java:3: name clash: <T#1>pickOne(Comparable<T#1>) and <T#2>pickOne(T#2) have the same erasure", "+        <T> T pickOne(Comparable<T> value) throws ExTwo { return null;}", "+              ^", "+  where T#1,T#2 are type-variables:", "+    T#1 extends Object declared in method <T#1>pickOne(Comparable<T#1>)", "+    T#2 extends Comparable<T#2> declared in method <T#2>pickOne(T#2)", "+1 error", "+ */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86980b123fe06f417fc60d09748e07cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void test050d()", "signatureAfterChange": " \tpublic void test050d()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\t\"class A<T> {}\" +", "-\t\t\t\t\"class Y {}\" +", "+\t\t\t\t\"class A<T> {}\\n\" +", "+\t\t\t\t\"class Y {}\\n\" +", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\t<T extends Y, U> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C7\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C7\\n\" + ", "+\t\t\t\"----------\\n\"", "+/* javac 7", "+X.java:4: name clash: <T#1>foo(Object) and <T#2,U>foo(Object) have the same erasure", "+                <T extends Z> T foo(Object o) {  return null; } // ok", "+                                ^", "+  where T#1,T#2,U are type-variables:", "+    T#1 extends Z declared in method <T#1>foo(Object)", "+    T#2 extends Y declared in method <T#2,U>foo(Object)", "+    U extends Object declared in method <T#2,U>foo(Object)", "+1 error", "+ */"]}], "num": 33667}