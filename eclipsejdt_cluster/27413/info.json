{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d92bb29348fb2904cf4a5941ad8e7fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e16a9a9a2bd46c6ede4a70bc938464b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic ConstructorDeclaration createDefaultConstructor( \t\tboolean needExplicitConstructorCall, \t\tboolean needToInsert)", "signatureAfterChange": " \t \tpublic ConstructorDeclaration createDefaultConstructor( \t\tboolean needExplicitConstructorCall, \t\tboolean needToInsert)", "diff": ["-\t\tif (modifiers != AccDefault) {", "+\t\tif (modifiers != ClassFileConstants.AccDefault) {", "-\t\t\t\t(((this.bits & ASTNode.IsMemberType) != 0) && (modifiers & AccPrivate) != 0)", "-\t\t\t\t\t? AccDefault", "-\t\t\t\t\t: modifiers & AccVisibilityMASK;", "+\t\t\t\t(((this.bits & ASTNode.IsMemberType) != 0) && (modifiers & ClassFileConstants.AccPrivate) != 0)", "+\t\t\t\t\t? ClassFileConstants.AccDefault", "+\t\t\t\t\t: modifiers & ExtraCompilerModifiers.AccVisibilityMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f05d914e970e115d2e8a2146e9fa31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tmodifiers |= AccAnnotationDefault;", "+\t\t\t\t\t\t\tmodifiers |= ClassFileConstants.AccAnnotationDefault;", "-\t\tboolean isVarargs = (modifiers & AccVarargs) != 0;", "-\t\tmethod.modifiers = modifiers & ~AccVarargs;", "+\t\tboolean isVarargs = (modifiers & ClassFileConstants.AccVarargs) != 0;", "+\t\tmethod.modifiers = modifiers & ~ClassFileConstants.AccVarargs;", "-\t\t\t\t\t\tAccDefault);", "+\t\t\t\t\t\tClassFileConstants.AccDefault);"]}], "num": 27413}