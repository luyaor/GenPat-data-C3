{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86475284109857e04ff02856a5be41b1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c087c4638cef21ca29ddd1b3d9d12d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ExecutionTests.java", "commitBeforeChange": "2e1e850482d90086f267196870c1a847d5fe0441", "commitAfterChange": "7cd8d4cd3f07fb844c8ea150f6fb9724f3e46dcf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void testFailure()", "signatureAfterChange": " \t \tpublic void testFailure()", "diff": ["-\t\t\t\"Unresolved compilation problem: \\n\" + ", "+\t\t\t\"java.lang.Error: Unresolved compilation problem: \\n\" + ", "-\t\t\t\"\\r\\n\"", "+\t\t\t\"\\r\\n\"+", "+\t\t\t\"\tat java.lang.reflect.Constructor.newInstance(Native Method)\\r\\n\" + ", "+\t\t\t\"\tat p1.Hello.main(Hello.java:5)\\r\\n\" + ", "+\t\t\t\"Exception in thread \\\"main\\\" \"\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e2c4eb88dda0c53eb9507a874445d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "e370ba439679a26bb04e9b77917c8e22a1b8aa06", "commitAfterChange": "90d481edc9060cc498a8f085b08186108312e37b", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments04() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments04() throws CoreException", "diff": ["+\t\t\t/* Results while resolving string pattern with no qualification (currently disabled as it is not comaptible with previous results):", "+\t\t\t*/", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [generic(new Object(), new Exception(), new RuntimeException())] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [generic(new Object(), new RuntimeException(), new RuntimeException())] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [generic(new Object(), new RuntimeException(), new IllegalMonitorStateException())] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c95c5179f856326b5c236428668b48dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "e370ba439679a26bb04e9b77917c8e22a1b8aa06", "commitAfterChange": "90d481edc9060cc498a8f085b08186108312e37b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments05() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments05() throws CoreException", "diff": ["+\t\t\t/* Results while resolving string pattern with no qualification (currently disabled as it is not comaptible with previous results):", "+\t\t\t*/", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [complete(new Object(), new Exception(), new RuntimeException(), gm)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [complete(new Object(), new RuntimeException(), new RuntimeException(), gm)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testSuper() [complete(new Object(), new RuntimeException(), new IllegalMonitorStateException(), gm)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [complete(new Object(), new Exception(), new RuntimeException(), gm)] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0ff91e62914b57322defae99831367", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments08() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments08() throws CoreException", "diff": ["-\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [<Exception>complete(new Exception(), gs)] EQUIVALENT_MATCH\"", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [<Exception>complete(new Exception(), gs)] EQUIVALENT_MATCH\\n\" +", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testUnbound() [complete(new String(), gs)] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testExtends() [complete(new Throwable(), gs)] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testSuper() [complete(new RuntimeException(), gs)] POTENTIAL_MATCH\""]}], "num": 40340}