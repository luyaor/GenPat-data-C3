{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a6662f4f6907cb1fdfb5e19dfacd646", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1508bb91ad6b5b1d57633e161b3d5fd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "commitAfterChange": "a53e05883d2e536e6d912a85c946fd372aae0f56", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public JavaSearchMatch newReferenceMatch( \t\tint referenceType, \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd)", "signatureAfterChange": "  public JavaSearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newReferenceMatch(", "-\t\tint referenceType,", "-\t\tint sourceEnd) {", "-\tswitch (referenceType) {", "-\t\tcase IJavaElement.PACKAGE_FRAGMENT:", "-\t\t\treturn new PackageReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\tcase IJavaElement.TYPE:", "-\t\t\treturn new TypeReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\t//case IJavaElement.FIELD:", "-\t\t\t// handled by newFieldReferenceMatch", "-\t\tcase IJavaElement.METHOD:", "-\t\t\treturn new MethodReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\tcase IJavaElement.LOCAL_VARIABLE:", "-\t\t\treturn new LocalVariableReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, participant, resource);", "-\t\tdefault:", "-\t\t\treturn null;", "-\t}", "+", "+public JavaSearchMatch newTypeReferenceMatch(", "+\t\tIJavaElement enclosingElement,", "+\t\tint accuracy,", "+\t\tint sourceStart,  ", "+\t\tint sourceEnd,", "+\t\tASTNode reference) {", "+\tSearchParticipant participant = getParticipant(); ", "+\tIResource resource = this.currentPossibleMatch.resource;", "+\tboolean insideDocComment = ", "+\t\treference instanceof JavadocArrayQualifiedTypeReference", "+\t\t|| reference instanceof JavadocArraySingleTypeReference", "+\t\t|| reference instanceof JavadocQualifiedTypeReference", "+\t\t|| reference instanceof JavadocSingleNameReference", "+\t\t|| reference instanceof JavadocSingleTypeReference;", "+\treturn new TypeReferenceMatch(enclosingElement, accuracy, sourceStart, sourceEnd, insideDocComment, participant, resource);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e26c71304a700a979ba8645512b16994", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tSearchParticipant participant,  \t\tIResource resource)", "signatureAfterChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tSearchParticipant participant,  \t\tIResource resource)", "diff": ["-\t\tint sourceStart,  ", "-\t\tint sourceEnd,", "+\t\tint offset,  ", "+\t\tint length,", "-\t\t\treturn new PackageDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new PackageDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new TypeDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new TypeDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new FieldDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new FieldDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new MethodDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new MethodDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new LocalVariableDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new LocalVariableDeclarationMatch(element, accuracy, offset, length, participant, resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef540c373db419a22e0eb72691fb99dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tSearchParticipant participant,  \t\tIResource resource)", "signatureAfterChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tBinding binding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tSearchParticipant participant,  \t\tIResource resource)", "diff": ["+\t\tBinding binding,", "-\t\t\treturn new TypeDeclarationMatch(element, accuracy, offset, length, participant, resource);", "+\t\t\treturn new TypeDeclarationMatch(binding == null ? element : ((JavaElement) element).resolved(binding), accuracy, offset, length, participant, resource);", "-\t\t\treturn new FieldDeclarationMatch(element, accuracy, offset, length, participant, resource);", "+\t\t\treturn new FieldDeclarationMatch(binding == null ? element : ((JavaElement) element).resolved(binding), accuracy, offset, length, participant, resource);", "-\t\t\treturn new MethodDeclarationMatch(element, accuracy, offset, length, participant, resource);", "+\t\t\treturn new MethodDeclarationMatch(binding == null ? element : ((JavaElement) element).resolved(binding), accuracy, offset, length, participant, resource);"]}], "num": 14957}