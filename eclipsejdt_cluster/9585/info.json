{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d36915202d4936a54228a7cf11f1e69d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325e89a5661b4c914ffca8e75b186ecc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "ac57d09afd251c5c3e8f5a329155e4ee05cc3840", "commitAfterChange": "87c50fb2021a87bd8a7e850d4f8d8664d740e464", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate IProject createExternalFoldersProject(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate IProject createExternalFoldersProject(IProgressMonitor monitor) throws CoreException", "diff": ["-\tprivate IProject createExternalFoldersProject(IProgressMonitor monitor) {", "+\tprivate IProject createExternalFoldersProject(IProgressMonitor monitor) throws CoreException {", "+\t\t\tif (!project.exists()) {", "+\t\t\t\tcreateExternalFoldersProject(project, monitor);", "+\t\t\t}", "-\t\t\t\tif (!project.exists()) {", "+\t\t\t\tproject.open(monitor);", "+\t\t\t} catch (CoreException e1) {", "+\t\t\t\tif (e1.getStatus().getCode() == IResourceStatus.FAILED_READ_METADATA) {", "+\t\t\t\t\t// workspace was moved (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=241400)", "+\t\t\t\t\tproject.delete(true, monitor);", "-\t\t\t\t}", "-\t\t\t\ttry {", "-\t\t\t\t\tproject.open(monitor);", "-\t\t\t\t} catch (CoreException e1) {", "-\t\t\t\t\tif (e1.getStatus().getCode() == IResourceStatus.FAILED_READ_METADATA) {", "-\t\t\t\t\t\t// workspace was moved (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=241400)", "-\t\t\t\t\t\tproject.delete(true, monitor);", "-\t\t\t\t\t\tcreateExternalFoldersProject(project, monitor);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// .project or folder on disk have been deleted, recreate them", "-\t\t\t\t\t\tIPath stateLocation = DEBUG ? ResourcesPlugin.getWorkspace().getRoot().getLocation() : JavaCore.getPlugin().getStateLocation();", "-\t\t\t\t\t\tIPath projectPath = stateLocation.append(EXTERNAL_PROJECT_NAME);", "-\t\t\t\t\t\tprojectPath.toFile().mkdirs();", "+\t\t\t\t} else {", "+\t\t\t\t\t// .project or folder on disk have been deleted, recreate them", "+\t\t\t\t\tIPath stateLocation = DEBUG ? ResourcesPlugin.getWorkspace().getRoot().getLocation() : JavaCore.getPlugin().getStateLocation();", "+\t\t\t\t\tIPath projectPath = stateLocation.append(EXTERNAL_PROJECT_NAME);", "+\t\t\t\t\tprojectPath.toFile().mkdirs();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\t// fallback to re-creating the project", "+\t\t\t\t\t\tproject.delete(true, monitor);", "+\t\t\t\t\t\tcreateExternalFoldersProject(project, monitor);", "-\t\t\t\t\tproject.open(monitor);", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tUtil.log(e, \"Problem creating hidden project for external folders\"); //$NON-NLS-1$", "-\t\t\t\treturn project;", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tUtil.log(e, \"Problem creating hidden project for external folders\"); //$NON-NLS-1$", "-\t\t\t\treturn project;", "+\t\t\t\tproject.open(monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b534474e43fd0b52a21e600a9e17f808", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/scripts/GenerateBuildScript.java", "commitBeforeChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "commitAfterChange": "8cff4fdeee4851126cd3daf356d388ac41128644", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate static void dumpAllClassFiles(Writer writer, File sourceDir, ArrayList collector) throws IOException", "signatureAfterChange": "  \tprivate static void dumpAllClassFiles(Writer writer, File sourceDir, ArrayList collector, String gcj_exe, String dest_dir) throws IOException", "diff": ["-\tprivate static void dumpAllClassFiles(Writer writer, File sourceDir, ArrayList collector) throws IOException {", "+\tprivate static void dumpAllClassFiles(Writer writer, File sourceDir, ArrayList collector, String gcj_exe, String dest_dir) throws IOException {", "-//\t\tfor (int i = 0, max = collector.size(); i < max; i++) {", "-//\t\t\tString absolutePath = (String) collector.get(i);", "-//\t\t\tString fileName = absolutePath.substring(sourceDir.getAbsolutePath().length() + 1);", "-//\t\t\twriter.write(\"  \t\t<exec dir=\\\"${bin}\\\" executable=\\\"${gcc-path}/bin/gcj.exe\\\">\" + LINE_SEPARATOR); //$NON-NLS-1$", "-//\t\t\twriter.write(\"  \t\t  <arg line=\\\"\"); //$NON-NLS-1$", "-//\t\t\twriter.write(fileName + \" -c -o \" + getObjectName(fileName) + \"\\\"/>\" + LINE_SEPARATOR); //$NON-NLS-1$ //$NON-NLS-2$", "-//\t\t\twriter.write(\"  \t\t</exec>\" + LINE_SEPARATOR); //$NON-NLS-1$", "-//\t\t}", "-\t\t\"        <apply failonerror=\\\"true\\\" executable=\\\"${gcc-path}/bin/gcj.exe\\\" dest=\\\"${bin}\\\" parallel=\\\"false\\\">\" + LINE_SEPARATOR + //$NON-NLS-1$", "+\t\t\t\tMessageFormat.format(", "+\t\t\"        <apply failonerror=\\\"true\\\" executable=\\\"$'{'gcc-path'}'/bin/{0}\\\" dest=\\\"{1}\\\" parallel=\\\"false\\\">\" + LINE_SEPARATOR + //$NON-NLS-1$", "-\t\t\"            <arg value=\\\"--classpath=${bin}\\\"/>\" + LINE_SEPARATOR + //$NON-NLS-1$", "+\t\t\"            <arg value=\\\"--classpath={1}\\\"/>\" + LINE_SEPARATOR + //$NON-NLS-1$", "-\t\t\"            <fileset dir=\\\"${bin}\\\" includes=\\\"**/*.class\\\"/>\" + LINE_SEPARATOR + //$NON-NLS-1$", "+\t\t\"            <fileset dir=\\\"{1}\\\" includes=\\\"**/*.class\\\"/>\" + LINE_SEPARATOR + //$NON-NLS-1$", "-\t\t\"        </apply>\" + LINE_SEPARATOR + LINE_SEPARATOR); //$NON-NLS-1$", "+\t\t\"        </apply>\" + LINE_SEPARATOR + LINE_SEPARATOR,//$NON-NLS-1$", "+\t\tnew Object[] {", "+\t\t\t\tgcj_exe,", "+\t\t\t\tdest_dir", "+\t\t}));"]}], "num": 9585}