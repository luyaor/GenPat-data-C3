{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c31265e9de5e0cfcbba8439f0b29adb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2942cfec9a7666d92c7f143f76112c9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tcompileTimeType = scope.computeBoxingType(compileTimeType);", "-\t\t\t\tthis.implicitConversion = BOXING | compileTimeType.id;", "+\t\t\t\tTypeBinding boxedType = scope.computeBoxingType(compileTimeType);", "+\t\t\t\tthis.implicitConversion = BOXING | (compileTimeType.id << 4) | compileTimeType.id; // use primitive type only in implicitConversion", "+\t\t\t\tcompileTimeType =boxedType;", "-\t\t\tcase T_String :", "+\t\t\tcase T_JavaLangString :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b845b1c030b883d114f522d5789800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tcompileTimeType = scope.computeBoxingType(compileTimeType);", "+\t\t\t\tcompileTimeType = scope.environment().computeBoxingType(compileTimeType);", "-\t\t\t\tTypeBinding boxedType = scope.computeBoxingType(compileTimeType);", "+\t\t\t\tTypeBinding boxedType = scope.environment().computeBoxingType(compileTimeType);", "-\t\t\t\tcompileTimeType =boxedType;", "+\t\t\t\tcompileTimeType = boxedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f99ed469d7274de766a3d6b47a30207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tcompileTimeType = scope.environment().computeBoxingType(compileTimeType);", "+\t\t\t\tTypeBinding unboxedType = scope.environment().computeBoxingType(compileTimeType);", "+\t\t\t\tscope.problemReporter().autoboxing(this, compileTimeType, runtimeTimeType);", "+\t\t\t\tcompileTimeType = unboxedType;", "+\t\t\t\tscope.problemReporter().autoboxing(this, compileTimeType, runtimeTimeType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4307d24d6f7015b989361c804ae789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "3664f2e5df4bff13b2fab22de56e1095b2708757", "commitAfterChange": "ed98b88c58c662fd70b64e54eaa4fe98936833aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\t\tcompileTimeTypeID = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tcompileTimeTypeID = scope.environment().computeBoxingType(collectionElementType).id;", "-\t\t\t\t\t\tint boxedID = scope.computeBoxingType(collectionElementType).id;", "+\t\t\t\t\t\tint boxedID = scope.environment().computeBoxingType(collectionElementType).id;"]}], "num": 60843}