{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b3c9609cff524765ec97ddc3d5be3a4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62301c4072b5c8e14f1c36574f151322", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaFactory.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static LambdaExpression createLambdaExpression(JavaElement parent, String name, String interphase, int sourceStart, int sourceEnd, int arrowPosition)", "signatureAfterChange": "  \tpublic static LambdaExpression createLambdaExpression(JavaElement parent, String interphase, int sourceStart, int sourceEnd, int arrowPosition)", "diff": ["-\tpublic static LambdaExpression createLambdaExpression(JavaElement parent, String name, String interphase, int sourceStart, int sourceEnd, int arrowPosition) {", "+\tpublic static LambdaExpression createLambdaExpression(JavaElement parent, String interphase, int sourceStart, int sourceEnd, int arrowPosition) {", "-\t\t\treturn new BinaryLambdaExpression(parent, name, interphase, sourceStart, sourceEnd, arrowPosition);", "+\t\t\treturn new BinaryLambdaExpression(parent, interphase, sourceStart, sourceEnd, arrowPosition);", "-\t\t\treturn new LambdaExpression(parent, name, interphase, sourceStart, sourceEnd, arrowPosition);", "+\t\t\treturn new LambdaExpression(parent, interphase, sourceStart, sourceEnd, arrowPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d68823e8e901aa00e79c44247d74686f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "commitAfterChange": "d3da1d109c57a90a2bd8342736abf401463d58e5", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  private void processPathEntries(final int defaultSize, final ArrayList paths, final String currentPath, String customEncoding, boolean isSource)", "signatureAfterChange": "  private void processPathEntries(final int defaultSize, final ArrayList paths, final String currentPath, String customEncoding, boolean isSourceOnly)", "diff": ["-private void processPathEntries(final int defaultSize, final ArrayList paths, final String currentPath, String customEncoding, boolean isSource) {", "+private void processPathEntries(final int defaultSize, final ArrayList paths, final String currentPath, String customEncoding, boolean isSourceOnly) {", "-\t\t\t\taddNewEntry(paths, currentClasspathName, currentRuleSpecs, customEncoding, isSource);", "+\t\t\t\taddNewEntry(paths, currentClasspathName, currentRuleSpecs, customEncoding, isSourceOnly);", "-\t\t\taddNewEntry(paths, currentClasspathName, currentRuleSpecs, customEncoding, isSource);", "+\t\t\taddNewEntry(paths, currentClasspathName, currentRuleSpecs, customEncoding, isSourceOnly);"]}], "num": 35540}