{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61cef22228d9332753fa43be2543709d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "163a73f0ddea1061faa3c3928fc9805f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tCollection<InferenceVariable> inputVariables(final InferenceContext18 context)", "signatureAfterChange": "  \tCollection<InferenceVariable> inputVariables(final InferenceContext18 context)", "diff": ["-\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<InferenceVariable>();", "+\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<>();", "-\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<InferenceVariable>();", "+\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<>();", "-\t\t\tSet<InferenceVariable> variables = new HashSet<InferenceVariable>();", "+\t\t\tSet<InferenceVariable> variables = new HashSet<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36730795e160b75fb44e5094c0b6c893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tpublic boolean addBound(TypeBound bound)", "signatureAfterChange": " \t\tpublic boolean addBound(TypeBound bound)", "diff": ["-\t\t\t\t\tif (this.superBounds == null) this.superBounds = new HashSet<TypeBound>();", "+\t\t\t\t\tif (this.superBounds == null) this.superBounds = new HashSet<>();", "-\t\t\t\t\tif (this.sameBounds == null) this.sameBounds = new HashSet<TypeBound>();", "+\t\t\t\t\tif (this.sameBounds == null) this.sameBounds = new HashSet<>();", "-\t\t\t\t\tif (this.subBounds == null) this.subBounds = new HashSet<TypeBound>();", "+\t\t\t\t\tif (this.subBounds == null) this.subBounds = new HashSet<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b8e49cbfd2bf99c3e95f518e1f379d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tstatic Collection<TypeParameterDeclaration> getFormalTypeParameters( \t\t\tEclipseDeclarationImpl executable, \t\t\tBaseProcessorEnv env)", "signatureAfterChange": " \tstatic Collection<TypeParameterDeclaration> getFormalTypeParameters( \t\t\tEclipseDeclarationImpl executable, \t\t\tBaseProcessorEnv env)", "diff": ["-\t    \tfinal List<TypeParameterDeclaration> result = new ArrayList<TypeParameterDeclaration>();", "+\t    \tfinal List<TypeParameterDeclaration> result = new ArrayList<>();", "-\t\t        final List<TypeParameterDeclaration> result = new ArrayList<TypeParameterDeclaration>();", "+\t\t        final List<TypeParameterDeclaration> result = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a0b2b4d5e3a0b274967355dc430520", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tstatic Collection<ParameterDeclaration> getParameters( \t\t\tfinal EclipseDeclarationImpl executable, \t\t\tfinal BaseProcessorEnv env)", "signatureAfterChange": " \tstatic Collection<ParameterDeclaration> getParameters( \t\t\tfinal EclipseDeclarationImpl executable, \t\t\tfinal BaseProcessorEnv env)", "diff": ["-\t    \tfinal List<ParameterDeclaration> result = new ArrayList<ParameterDeclaration>(params.size());", "+\t    \tfinal List<ParameterDeclaration> result = new ArrayList<>(params.size());", "-\t        final List<ParameterDeclaration> result = new ArrayList<ParameterDeclaration>(paramTypes.length);        ", "+\t        final List<ParameterDeclaration> result = new ArrayList<>(paramTypes.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779dc9fe0e8b5f877a7026473e04b732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/FieldAligner.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void prepareAlign(TypeDeclaration node)", "signatureAfterChange": "  \tpublic void prepareAlign(TypeDeclaration node)", "diff": ["-\t\tArrayList<FieldDeclaration> alignGroup = new ArrayList<FieldDeclaration>();", "+\t\tArrayList<FieldDeclaration> alignGroup = new ArrayList<>();", "-\t\t\t\t\talignGroup = new ArrayList<FieldDeclaration>();", "+\t\t\t\t\talignGroup = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793b588ef407aed4a63d423918699fae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExceptionFormula.java", "commitBeforeChange": "19f32631b872a84a41dc65721cfbc0bd2ac8a5b6", "commitAfterChange": "0a7e159e5583b9d90c024b9f588fa970acb3427f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tCollection<InferenceVariable> inputVariables(final InferenceContext18 context)", "signatureAfterChange": "  \tCollection<InferenceVariable> inputVariables(final InferenceContext18 context)", "diff": ["-\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<InferenceVariable>();", "+\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<>();", "-\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<InferenceVariable>();", "+\t\t\t\tfinal Set<InferenceVariable> variables = new HashSet<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb4876be10c6641529a83813f81b9a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/PackageElementImpl.java", "commitBeforeChange": "4e130c9d5bb20bb7b53d05cfcbc0214ae1f6f2b8", "commitAfterChange": "e18e2062279631b50cbdb527a42eeb74dde9b023", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic List<? extends Element> getEnclosedElements()", "signatureAfterChange": "  \t@Override \tpublic List<? extends Element> getEnclosedElements()", "diff": ["-\t\tHashSet<Element> set = new HashSet<Element>(); ", "+\t\tHashSet<Element> set = new HashSet<>(); ", "-\t\tArrayList<Element> list = new ArrayList<Element>(set.size());", "+\t\tArrayList<Element> list = new ArrayList<>(set.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bceff3e13ffeb6a2ffaf21d2b1498dae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ExecutableUtil.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tstatic Collection<ReferenceType> getThrownTypes( \t\t\tfinal EclipseDeclarationImpl executable, \t\t\tfinal BaseProcessorEnv env)", "signatureAfterChange": " \tstatic Collection<ReferenceType> getThrownTypes( \t\t\tfinal EclipseDeclarationImpl executable, \t\t\tfinal BaseProcessorEnv env)", "diff": ["-\t    \tfinal List<ReferenceType> results = new ArrayList<ReferenceType>(4);", "+\t    \tfinal List<ReferenceType> results = new ArrayList<>(4);", "-\t        final List<ReferenceType> results = new ArrayList<ReferenceType>(4);", "+\t        final List<ReferenceType> results = new ArrayList<>(4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd558d176320b2fe9d7e2fc807926559", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BuildEnv.java", "commitBeforeChange": "254df1aa95b16790be4f99cde7a9a4aae8f9ade1", "commitAfterChange": "8715eeccf865a33f86687c2ed1edfa7db42faeec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     BuildEnv( \t\t\tfinal BuildContext[] filesWithAnnotations, \t\t\tfinal BuildContext[] additionalFiles, \t\t\tfinal IJavaProject javaProj)", "signatureAfterChange": "     BuildEnv( \t\t\tfinal BuildContext[] filesWithAnnotations, \t\t\tfinal BuildContext[] additionalFiles, \t\t\tfinal IJavaProject javaProj)", "diff": ["-\t\t_problems = new ArrayList<APTProblem>();", "-\t\t_markerInfos = new ArrayList<MarkerInfo>();", "+\t\t_problems = new ArrayList<>();", "+\t\t_markerInfos = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffab54776cb09e820251091cb9f629a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "4e130c9d5bb20bb7b53d05cfcbc0214ae1f6f2b8", "commitAfterChange": "e18e2062279631b50cbdb527a42eeb74dde9b023", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic AnnotationValueImpl(BaseProcessingEnvImpl env, Object value, TypeBinding type)", "signatureAfterChange": " \tpublic AnnotationValueImpl(BaseProcessingEnvImpl env, Object value, TypeBinding type)", "diff": ["-\t\t\t\tconvertedValues = new ArrayList<AnnotationValue>(values.length);", "+\t\t\t\tconvertedValues = new ArrayList<>(values.length);", "-\t\t\t\tconvertedValues = new ArrayList<AnnotationValue>(1);", "+\t\t\t\tconvertedValues = new ArrayList<>(1);"]}], "num": 16396}