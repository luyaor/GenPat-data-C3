{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3aa9a132b1051651fcc1e022625b217b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb416c25f6732c80c91b5fba74fcb0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public ReferenceBinding[] superInterfaces()", "signatureAfterChange": "     public ReferenceBinding[] superInterfaces()", "diff": ["-\t\t\tTypeBinding superType = null;", "-\t\t\t\tsuperType = this.bound;", "+\t\t\t\tif (this.bound.isInterface()) {", "+\t\t\t\t\treturn new ReferenceBinding[]{ (ReferenceBinding)this.bound };", "+\t\t\t\t} else {", "+\t\t\t\t\treturn NoSuperInterfaces;", "+\t\t\t\t}", "-\t\t\t\tsuperType = this.typeVariable.firstBound; // TODO (philippe) shouldn't it retrieve variable superinterfaces ?", "+\t\t\t\treturn this.typeVariable.superInterfaces();", "-\t\t\tthis.superInterfaces = superType != null && superType.isInterface()", "-\t\t\t\t? new ReferenceBinding[] { (ReferenceBinding) superType }", "-\t\t\t\t: NoSuperInterfaces;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf70885f178bbeca56cd1b8944ecc6ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2b79174755a16aced5104d3df93df716516d670", "commitAfterChange": "f2fb5e44531d4df5da9264367df0b14b50434c61", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public ReferenceBinding[] superInterfaces()", "signatureAfterChange": "     public ReferenceBinding[] superInterfaces()", "diff": ["-\t\t\t\tif (this.bound.isInterface()) {", "-\t\t\t\t\treturn new ReferenceBinding[]{ (ReferenceBinding)this.bound };", "-\t\t\t\t} else {", "-\t\t\t\t\treturn NoSuperInterfaces;", "-\t\t\t\t}", "+\t\t\t\tif (this.bound.isInterface())", "+\t\t\t\t\treturn new ReferenceBinding[] {(ReferenceBinding) this.bound};", "+\t\t\t\treturn NoSuperInterfaces;", "+\t\t\t// TODO (philippe) if we fall thru, we'll answer null but no one will expect it", "+\t\t\t// return NoSuperInterfaces;"]}], "num": 22940}