{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b39a7a5c3c67e9919d495b98c1ed95a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69f9014184928f236fae58af14975bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "aefabc2c0393b4a4828896362e41d452de169159", "commitAfterChange": "86284f2db6c7ac41b63c1766c9b7b3a016d95a9a", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 222, "signatureBeforeChange": " \tpublic void testMethodDeclaration()", "signatureAfterChange": " \tpublic void testMethodDeclaration()", "diff": ["-\t\t\tassertTrue(result.equals(\"[(MD\"+this.JD1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"[(MD\"+this.JD1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\", result); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tassertTrue(result.equals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\", result); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tassertTrue(result.equals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.T3S+this.V1S+this.V2S+this.T4S+this.N3S+this.B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$\t\t\t", "+\t\t\tassertEquals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.N1S+this.V1S+this.V2S+this.T3S+this.T4S+this.B1S+\"MD)]\", result); //$NON-NLS-1$ //$NON-NLS-2$\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3538b3ed614800a71269c5c2b84758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "38835101c5cb5aa877400915ae93db40feae72e1", "commitAfterChange": "4007ad30c270c1323bfebe340590d44f8586e167", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void testValidCompilationUnitName()", "signatureAfterChange": " \tpublic void testValidCompilationUnitName()", "diff": ["-\t\t\tassertTrue(\"compilation unit name not recognized as invalid: \" + invalidNames[i], !JavaConventions.validateCompilationUnitName(invalidNames[i], sourceLevel, complianceLevel).isOK());", "+\t\t\tassertEquals(\"compilation unit name not recognized as invalid: \" + invalidNames[i], IStatus.ERROR, validate(invalidNames[i], COMPILATION_UNIT_NAME));", "-\t\t\tassertTrue(\"compilation unit name not recognized as valid: \" + validNames[i], JavaConventions.validateCompilationUnitName(validNames[i], sourceLevel, complianceLevel).isOK());", "+\t\t\tassertEquals(\"compilation unit name not recognized as valid: \" + validNames[i], IStatus.OK, validate(validNames[i], COMPILATION_UNIT_NAME));"]}], "num": 27148}