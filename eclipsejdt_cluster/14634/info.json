{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a5b3bea38e53be501da16bc69145792", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df9b58cea9f64ee033dc2915e4c60b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method)", "signatureAfterChange": " private ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method)", "diff": ["-ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method) {", "+private ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method) {", "-\tBinaryTypeBinding binaryType = (BinaryTypeBinding) method.declaringClass;", "-\t\tif (exceptions[i] instanceof UnresolvedReferenceBinding)", "-\t\t\texceptions[i] = (ReferenceBinding) binaryType.resolveType(exceptions[i]);", "+\t\texceptions[i] = BinaryTypeBinding.resolveType(exceptions[i], this.environment, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5122fa717a77f0150d8d92f98575f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "signatureAfterChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "diff": ["-\t\t\t\t\t\twhile (j<thrownExceptionLength && exceptionBinding != md.thrownExceptions[j].resolvedType) j++;", "+\t\t\t\t\t\twhile (j<thrownExceptionLength && TypeBinding.notEquals(exceptionBinding, md.thrownExceptions[j].resolvedType)) j++;", "-\t\t\t\t\t\tif (exceptionBinding == typeBinding) {", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(exceptionBinding, typeBinding)) {", "-\t\t\t\t\t\twhile (k<thrownExceptionLength && exceptionBinding != md.thrownExceptions[k].resolvedType) k++;", "+\t\t\t\t\t\twhile (k<thrownExceptionLength && TypeBinding.notEquals(exceptionBinding, md.thrownExceptions[k].resolvedType)) k++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e9efaf54b5725bafd71b36047265e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "862ae8342a82a200aa8036b2b41fe50ea56f4086", "commitAfterChange": "7fb2379213fcb2584759445f4027c5f2c4962a92", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "signatureAfterChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "diff": ["-\t\t\t\t\tReferenceBinding exceptionBinding = (ReferenceBinding) md.binding.thrownExceptions[i].erasure();", "+\t\t\t\t\tReferenceBinding exceptionBinding = md.binding.thrownExceptions[i];", "-\t\t\t\tReferenceBinding exceptionBinding = (ReferenceBinding) md.binding.thrownExceptions[i].erasure();", "+\t\t\t\tReferenceBinding exceptionBinding = md.binding.thrownExceptions[i];", "+\t\t\t\tif (exceptionBinding != null) exceptionBinding = (ReferenceBinding) exceptionBinding.erasure();"]}], "num": 14634}