{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "facfcde318490efbf6974e5cc9f10060", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2845bf8e9e93d721fbf794056d71fc21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 99, "signatureBeforeChange": "  \tprivate VariableDeclarationStatement convertToVariableDeclarationStatement(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "signatureAfterChange": "  \tprotected VariableDeclarationStatement convertToVariableDeclarationStatement(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "diff": ["+", "+\tprotected VariableDeclarationStatement convertToVariableDeclarationStatement(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration) {", "+\t\tVariableDeclarationFragment variableDeclarationFragment = convertToVariableDeclarationFragment(localDeclaration);", "+\t\tVariableDeclarationStatement variableDeclarationStatement = this.ast.newVariableDeclarationStatement(variableDeclarationFragment);", "+\t\tif (this.resolveBindings) {", "+\t\t\trecordNodes(variableDeclarationFragment, localDeclaration);", "+\t\t}", "+\t\tvariableDeclarationStatement.setSourceRange(localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd - localDeclaration.declarationSourceStart + 1);", "+\t\tType type = convertType(localDeclaration.type);", "+\t\tsetTypeForVariableDeclarationStatement(variableDeclarationStatement, type, variableDeclarationFragment.getExtraDimensions());", "+\t\tif ((localDeclaration.modifiers & ~CompilerModifiers.AccBlankFinal) != 0) {", "+\t\t\tsetModifiers(variableDeclarationStatement, localDeclaration);", "+\t\t}", "+\t\treturn variableDeclarationStatement;", "+\t}", "-", "-\tprivate VariableDeclarationStatement convertToVariableDeclarationStatement(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration) {", "-\t\tVariableDeclarationFragment variableDeclarationFragment = convertToVariableDeclarationFragment(localDeclaration);", "-\t\tVariableDeclarationStatement variableDeclarationStatement = this.ast.newVariableDeclarationStatement(variableDeclarationFragment);", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(variableDeclarationFragment, localDeclaration);", "-\t\t}", "-\t\tvariableDeclarationStatement.setSourceRange(localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd - localDeclaration.declarationSourceStart + 1);", "-\t\tType type = convertType(localDeclaration.type);", "-\t\tsetTypeForVariableDeclarationStatement(variableDeclarationStatement, type, variableDeclarationFragment.getExtraDimensions());", "-\t\tvariableDeclarationStatement.setModifiers(localDeclaration.modifiers & ~CompilerModifiers.AccBlankFinal);", "-\t\treturn variableDeclarationStatement;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63071a32ca8b4df3e6a56a7a78efeffa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 92, "signatureBeforeChange": "  \tprivate FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "signatureAfterChange": "  \tprotected FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "diff": ["+", "+\tprotected FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl) {", "+\t\tVariableDeclarationFragment variableDeclarationFragment = convertToVariableDeclarationFragment(fieldDecl);", "+\t\tFieldDeclaration fieldDeclaration = this.ast.newFieldDeclaration(variableDeclarationFragment);", "+\t\tif (this.resolveBindings) {", "+\t\t\trecordNodes(variableDeclarationFragment, fieldDecl);", "+\t\t\tvariableDeclarationFragment.resolveBinding();", "+\t\t}", "+\t\tfieldDeclaration.setSourceRange(fieldDecl.declarationSourceStart, fieldDecl.declarationEnd - fieldDecl.declarationSourceStart + 1);", "+\t\tType type = convertType(fieldDecl.type);", "+\t\tsetTypeForField(fieldDeclaration, type, variableDeclarationFragment.getExtraDimensions());", "+\t\tif ((fieldDecl.modifiers & org.eclipse.jdt.internal.compiler.lookup.CompilerModifiers.AccJustFlag) != 0) {", "+\t\t\tsetModifiers(fieldDeclaration, fieldDecl);", "+\t\t}", "+\t\tconvert(fieldDecl.javadoc, fieldDeclaration);", "+\t\treturn fieldDeclaration;", "+\t}", "-", "-\tprivate FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl) {", "-\t\tVariableDeclarationFragment variableDeclarationFragment = convertToVariableDeclarationFragment(fieldDecl);", "-\t\tFieldDeclaration fieldDeclaration = this.ast.newFieldDeclaration(variableDeclarationFragment);", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(variableDeclarationFragment, fieldDecl);", "-\t\t\tvariableDeclarationFragment.resolveBinding();", "-\t\t}", "-\t\tfieldDeclaration.setSourceRange(fieldDecl.declarationSourceStart, fieldDecl.declarationEnd - fieldDecl.declarationSourceStart + 1);", "-\t\tType type = convertType(fieldDecl.type);", "-\t\tsetTypeForField(fieldDeclaration, type, variableDeclarationFragment.getExtraDimensions());", "-\t\tfieldDeclaration.setModifiers(fieldDecl.modifiers & org.eclipse.jdt.internal.compiler.lookup.CompilerModifiers.AccJustFlag);", "-\t\tconvert(fieldDecl.javadoc, fieldDeclaration);", "-\t\treturn fieldDeclaration;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45e40bb8ed77a50c589d68b3ae98bbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 95, "signatureBeforeChange": " \t \tprivate VariableDeclarationExpression convertToVariableDeclarationExpression(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "signatureAfterChange": " \t \tprotected VariableDeclarationExpression convertToVariableDeclarationExpression(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "diff": ["+\t", "+\tprotected VariableDeclarationExpression convertToVariableDeclarationExpression(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration) {", "+\t\tVariableDeclarationFragment variableDeclarationFragment = convertToVariableDeclarationFragment(localDeclaration);", "+\t\tVariableDeclarationExpression variableDeclarationExpression = this.ast.newVariableDeclarationExpression(variableDeclarationFragment);", "+\t\tif (this.resolveBindings) {", "+\t\t\trecordNodes(variableDeclarationFragment, localDeclaration);", "+\t\t}", "+\t\tvariableDeclarationExpression.setSourceRange(localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd - localDeclaration.declarationSourceStart + 1);", "+\t\tType type = convertType(localDeclaration.type);", "+\t\tsetTypeForVariableDeclarationExpression(variableDeclarationExpression, type, variableDeclarationFragment.getExtraDimensions());", "+\t\tif ((localDeclaration.modifiers & ~CompilerModifiers.AccBlankFinal) != 0) {", "+\t\t\tsetModifiers(variableDeclarationExpression, localDeclaration);", "+\t\t}", "+\t\treturn variableDeclarationExpression;", "+\t}", "-\t", "-\tprivate VariableDeclarationExpression convertToVariableDeclarationExpression(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration) {", "-\t\tVariableDeclarationFragment variableDeclarationFragment = convertToVariableDeclarationFragment(localDeclaration);", "-\t\tVariableDeclarationExpression variableDeclarationExpression = this.ast.newVariableDeclarationExpression(variableDeclarationFragment);", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(variableDeclarationFragment, localDeclaration);", "-\t\t}", "-\t\tvariableDeclarationExpression.setSourceRange(localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd - localDeclaration.declarationSourceStart + 1);", "-\t\tType type = convertType(localDeclaration.type);", "-\t\tsetTypeForVariableDeclarationExpression(variableDeclarationExpression, type, variableDeclarationFragment.getExtraDimensions());", "-\t\tvariableDeclarationExpression.setModifiers(localDeclaration.modifiers & ~CompilerModifiers.AccBlankFinal);", "-\t\treturn variableDeclarationExpression;", "-\t}"]}], "num": 2613}