{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4b968fa3aca85531bb448791fd956ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77bdef4424097a31f62838ff924187f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tfinal public boolean isDefinitelyNull(LocalVariableBinding local)", "signatureAfterChange": "  final public boolean isDefinitelyNull(LocalVariableBinding local)", "diff": ["+", "+final public boolean isDefinitelyNull(LocalVariableBinding local) {", "+\t// do not want to complain in unreachable code", "+\tif ((this.tagBits & UNREACHABLE) != 0 || ", "+\t\t\t(this.tagBits & NULL_FLAG_MASK) == 0 || ", "+\t\t\t(local.type.tagBits & TagBits.IsBaseType) != 0) {", "+\t\treturn false;", "+\t}", "+\tint position = local.id + this.maxFieldCount;", "+\tlong mask;", "+\tif (position < BitCacheSize) { // use bits", "+\t\treturn ", "+\t\t\t(this.nullAssignmentStatusBit2 & (mask = 1L << position)) != 0 ?", "+\t\t\t(this.nullAssignmentStatusBit1 & mask) == 0 :", "+\t\t\t(this.nullAssignmentStatusBit1 & ", "+\t\t\t\tthis.nullAssignmentValueBit1 & mask) != 0 &&", "+\t\t\t(this.nullAssignmentValueBit2 & mask) == 0; ", "+\t}", "+\t// use extra vector", "+\tif (this.extra == null) {", "+\t\treturn false; // if vector not yet allocated, then not initialized", "+\t}", "+\tint vectorIndex;", "+\tif ((vectorIndex = (position / BitCacheSize) - 1) >= ", "+\t\t\tthis.extra[0].length) {", "+\t\treturn false; // if not enough room in vector, then not initialized", "+\t}", "+\treturn", "+\t\t(this.extra[3][vectorIndex] & ", "+\t\t\t(mask = 1L << (position % BitCacheSize))) != 0 ?", "+\t\t(this.extra[2][vectorIndex] & mask) == 0 :", "+\t\t(this.extra[2][vectorIndex] & ", "+\t\t\tthis.extra[4][vectorIndex] & mask) != 0 &&", "+\t\t(this.extra[5][vectorIndex] & mask) == 0;", "+}", "-\t */", "-\tfinal public boolean isDefinitelyNull(LocalVariableBinding local) {", "-\t\t", "-\t\t// Dependant of CodeStream.isDefinitelyAssigned(..)", "-\t\t// We do not want to complain in unreachable code", "-\t\tif ((this.reachMode & UNREACHABLE) != 0)", "-\t\t\treturn false;", "-\t\treturn isDefinitelyNull(local.id + maxFieldCount);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4df374fe0f7ec088bc386e06984157", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tfinal public boolean isDefinitelyNull(FieldBinding field)", "signatureAfterChange": "  final public boolean isDefinitelyUnknown(LocalVariableBinding local)", "diff": ["+", "+final public boolean isDefinitelyUnknown(LocalVariableBinding local) {", "+\t// do not want to complain in unreachable code", "+\tif ((this.tagBits & UNREACHABLE) != 0 || ", "+\t\t\t(this.tagBits & NULL_FLAG_MASK) == 0) {", "+\t\treturn false;", "+\t}", "+\tint position = local.id + this.maxFieldCount;", "+\tlong mask;", "+\tif (position < BitCacheSize) { // use bits", "+\t\treturn ", "+\t\t\t(this.nullAssignmentStatusBit2 & (mask = 1L << position)) != 0 ?", "+\t\t\tfalse :", "+\t\t\t(this.nullAssignmentStatusBit1 & ", "+\t\t\t\tthis.nullAssignmentValueBit1 & ", "+\t\t\t\tthis.nullAssignmentValueBit2 & mask) != 0; ", "+\t}", "+\t// use extra vector", "+\tif (this.extra == null) {", "+\t\treturn false; // if vector not yet allocated, then not initialized", "+\t}", "+\tint vectorIndex;", "+\tif ((vectorIndex = (position / BitCacheSize) - 1) >= ", "+\t\t\tthis.extra[0].length) {", "+\t\treturn false; // if not enough room in vector, then not initialized", "+\t}", "+\treturn", "+\t\t(this.extra[3][vectorIndex] & ", "+\t\t\t(mask = 1L << (position % BitCacheSize))) != 0 ?", "+\t\tfalse :", "+\t\t(this.extra[2][vectorIndex] & ", "+\t\t\tthis.extra[4][vectorIndex] &", "+\t\t\tthis.extra[5][vectorIndex] &", "+\t\t\tmask) != 0;", "+}", "-\t */", "-\tfinal public boolean isDefinitelyNull(FieldBinding field) {", "-\t\t", "-\t\t// Dependant of CodeStream.isDefinitelyAssigned(..)", "-\t\t// We do not want to complain in unreachable code", "-\t\tif ((this.reachMode & UNREACHABLE) != 0)  ", "-\t\t\treturn false;", "-\t\treturn isDefinitelyNull(field.id); ", "-\t}"]}], "num": 53470}