{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7fa595241f5e603c7c5eb2ecd4c6edd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a24bd411edab3543f8d0fe0fd12cd48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test050a()", "signatureAfterChange": " \tpublic void test050a()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "+\t\t\t\t\"\t                              ^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tX.foo();\\n\" + ", "+\t\t\t\t\"\t  ^^^\\n\" + ", "+\t\t\t\t\"The method foo() is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tfoo();\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method foo() is ambiguous for the type X\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "+\t\t\t\t\t\"\t                                 ^^^^^\\n\" + ", "+\t\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "+\t\t\t\t\t\"\t                              ^^^^^\\n\" + ", "+\t\t\t\t\t\"Duplicate method foo() in type X\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic static <S extends A> void foo() { System.out.print(\\\"A\\\"); }\\n\" + ", "-\t\t\t\"\t                                 ^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo() in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tpublic static <N extends B> N foo() { System.out.print(\\\"B\\\"); return null; }\\n\" + ", "-\t\t\t\"\t                              ^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo() in type X\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b55a6c9095ff9b5e2a66dff2b67c2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 726, "methodNumberAfterChange": 726, "signatureBeforeChange": " public void test0706a()", "signatureAfterChange": " public void test0706a()", "diff": ["+\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tAA<Object> res1 = bb.test();\\n\" + ", "+\t\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"AA is a raw type. References to generic type AA<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tAA<Object> res1 = bb.test();\\n\" + ", "+\t\t\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\t\"\t^^\\n\" + ", "+\t\t\t\t\"AA is a raw type. References to generic type AA<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\tAA<Object> res1 = bb.test();\\n\" + ", "-\t\t\"\t                     ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\"\tAA res3 = bb.test();\\n\" + ", "-\t\t\"\t^^\\n\" + ", "-\t\t\"AA is a raw type. References to generic type AA<T> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tAA res3 = bb.test();\\n\" + ", "-\t\t\"\t             ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "-\t\t\"\t                                 ^^^^^^\\n\" + ", "-\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "-\t\t\"----------\\n\"", "+\t\texpectedCompilerLog"]}], "num": 29509}