{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e4af5a5e10df2de5df5265ff40212e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a662ab0bf1c5f1dd1cffd2e78cdb64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e6099120ee9021152f84e60105066d4964c2db21", "commitAfterChange": "82631a98caad8b28e9cefb217339d51e64ef47f9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public CompilationUnitDeclaration buildBindings(org.eclipse.jdt.core.ICompilationUnit compilationUnit) throws JavaModelException", "signatureAfterChange": "\r public CompilationUnitDeclaration buildBindings(org.eclipse.jdt.core.ICompilationUnit compilationUnit) throws JavaModelException", "diff": ["-\tMatchSet originalMatchSet = this.parser.matchSet;\r", "-\ttry {\r", "-\t\tthis.parser.matchSet = new MatchSet(this);\r", "-\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0);\r", "-\t\tunit = this.parser.dietParse(sourceUnit, compilationResult);\r", "-\t} finally {\r", "-\t\tif (originalMatchSet == null) {\r", "-\t\t\tif (!this.parser.matchSet.isEmpty() \r", "-\t\t\t\t\t&& unit != null) {\r", "-\t\t\t\t// potential matches were found while initializing the search pattern\r", "-\t\t\t\t// from the lookup environment: add the corresponding openable in the list\r", "-\t\t\t\tMatchingOpenable matchingOpenable = \r", "-\t\t\t\t\tnew MatchingOpenable(\r", "-\t\t\t\t\t\tthis,\r", "-\t\t\t\t\t\tfile, \r", "-\t\t\t\t\t\t(CompilationUnit)compilationUnit, \r", "-\t\t\t\t\t\tunit,\r", "-\t\t\t\t\t\tthis.parser.matchSet);\r", "-\t\t\t\tthis.matchingOpenables.add(matchingOpenable);\r", "-\t\t\t}\r", "-\t\t\tthis.parser.matchSet = null;\r", "-\t\t} else {\r", "-\t\t\tthis.parser.matchSet = originalMatchSet;\r", "-\t\t}\r", "-\t}\r", "+\tunit = this.parser.dietParse(sourceUnit, this, file, (CompilationUnit)compilationUnit);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c3153d0a73c2e8344a21f4fe4ce6470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "350354f214ca227e1737fa04a92c132cd3211f35", "commitAfterChange": "e85ca2cada691cc814bdc6ae7f59c48ddbdb7a54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": "\r \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\tCompilationUnitDeclaration unit;\r", "+\t\tCompilationUnitDeclaration unit = null;\r", "+\t\t\t\tboolean initializingSearchPattern = this.parser.matchSet == null;\r", "+\t\t\t\tif (initializingSearchPattern) {\r", "+\t\t\t\t\tthis.parser.matchSet = new MatchSet(this);\r", "+\t\t\t\t}\r", "-\t\t\t\tunit = this.parser.dietParse(sourceUnit, compilationResult);\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tunit = this.parser.dietParse(sourceUnit, compilationResult);\r", "+\t\t\t\t} finally {\r", "+\t\t\t\t\tif (initializingSearchPattern) {\r", "+\t\t\t\t\t\tif (!this.parser.matchSet.isEmpty() \r", "+\t\t\t\t\t\t\t\t&& unit != null) {\r", "+\t\t\t\t\t\t\t// potential matches were found while initializing the search pattern\r", "+\t\t\t\t\t\t\t// from the lookup environment: add them in the list of potential matches\r", "+\t\t\t\t\t\t\tPotentialMatch potentialMatch = \r", "+\t\t\t\t\t\t\t\tnew PotentialMatch(\r", "+\t\t\t\t\t\t\t\t\tthis,\r", "+\t\t\t\t\t\t\t\t\tfile, \r", "+\t\t\t\t\t\t\t\t\t(CompilationUnit)type.getCompilationUnit(), \r", "+\t\t\t\t\t\t\t\t\tunit,\r", "+\t\t\t\t\t\t\t\t\tthis.parser.matchSet);\r", "+\t\t\t\t\t\t\tthis.addPotentialMatch(potentialMatch);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tthis.parser.matchSet = null;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}], "num": 46486}