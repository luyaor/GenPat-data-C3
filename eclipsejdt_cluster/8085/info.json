{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "783006135a18630e9c498259fdd28bfd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0bd3fb82a1f577e6c186bda37946c5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "aaa43eec904e27741de5c55121881f4c0383d53f", "commitAfterChange": "0ffd32ee08cd2dc832efa1134a050b16b350c66a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\tif (match != null && match.isProvablyDistinctFrom(isNarrowing ? expressionType : castType, 0)) {", "-\t\t\treturn false; ", "+\t\tif (match != null) {", "+\t\t\tif (isNarrowing", "+\t\t\t\t\t? checkProvablyDistinctTypes(scope, match, expressionType, 0)", "+\t\t\t\t\t: checkProvablyDistinctTypes(scope, castType, match, 0)) {", "+\t\t\t\treturn false;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdef2553b5a95c411330b35bc52f180", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "aaa43eec904e27741de5c55121881f4c0383d53f", "commitAfterChange": "0ffd32ee08cd2dc832efa1134a050b16b350c66a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["+", "-\t\t\tif (match.isProvablyDistinctFrom(isNarrowing ? expressionType : castType, 0)) {", "+\t\t\tif(isNarrowing", "+\t\t\t\t\t? checkProvablyDistinctTypes(scope, match, expressionType, 0)", "+\t\t\t\t\t: checkProvablyDistinctTypes(scope, castType, match, 0)) {"]}], "num": 8085}