{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3d3211504f89065c60b304029c523db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a584e58a3f2f6ce91c74574ad6a745f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "signatureAfterChange": "  public UnconditionalFlowInfo mergedWith(UnconditionalFlowInfo otherInits)", "diff": ["-\t\tif (coverageTestFlag && coverageTestId == 28) {", "-\t\t\tthrow new AssertionFailedException(\"COVERAGE 28\"); //$NON-NLS-1$", "+\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\tif(CoverageTestId == 28) {", "+\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 28\"); //$NON-NLS-1$", "+\t\t\t}", "-\t\tif (coverageTestFlag && coverageTestId == 29) {", "-\t\t\tthrow new AssertionFailedException(\"COVERAGE 29\"); //$NON-NLS-1$", "+\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\tif(CoverageTestId == 29) {", "+\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 29\"); //$NON-NLS-1$", "+\t\t\t}", "-    \t\tif (coverageTestFlag && coverageTestId == 30) {", "-    \t\t  \tthis.nullBit4 = ~0;", "+    \t\tif (COVERAGE_TEST_FLAG) {", "+    \t\t\tif(CoverageTestId == 30) {", "+\t    \t\t  \tthis.nullBit4 = ~0;", "+    \t\t\t}", "-    \t\tif (coverageTestFlag && coverageTestId == 31) {", "-    \t\t  \tthis.nullBit4 = ~0;", "+    \t\tif (COVERAGE_TEST_FLAG) {", "+    \t\t\tif(CoverageTestId == 31) {", "+\t    \t\t  \tthis.nullBit4 = ~0;", "+    \t\t\t}", "-  \t\tif (coverageTestFlag && coverageTestId == 32) {", "-  \t\t  \tthis.nullBit4 = ~0;", "+  \t\tif (COVERAGE_TEST_FLAG) {", "+  \t\t\tif(CoverageTestId == 32) {", "+\t  \t\t  \tthis.nullBit4 = ~0;", "+  \t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 33) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 33\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif(CoverageTestId == 33) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 33\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 34) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 34\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif(CoverageTestId == 34) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 34\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 35) {", "-\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 35\"); //$NON-NLS-1$", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif(CoverageTestId == 35) {", "+\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 35\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 36) {", "-\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 36\"); //$NON-NLS-1$", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif(CoverageTestId == 36) {", "+\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 36\"); //$NON-NLS-1$", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 37) {", "-\t\t\t\tthis.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif(CoverageTestId == 37) {", "+\t\t\t\t\tthis.extra[5][i] = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 38) {", "-\t\t\t\tthis.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif(CoverageTestId == 38) {", "+\t\t\t\t\tthis.extra[5][i] = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 39) {", "-\t\t\t\tthis.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif(CoverageTestId == 39) {", "+\t\t\t\t\tthis.extra[5][i] = ~0;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37157852f867213f22d42dd948e4c5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo addInitializationsFrom(FlowInfo inits)", "signatureAfterChange": "  public FlowInfo addInitializationsFrom(FlowInfo inits)", "diff": ["-\t\t\tif (coverageTestFlag && coverageTestId == 1) {", "-\t\t\t  this.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 1) {", "+\t\t\t\t  this.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 2) {", "-\t\t\t  this.nullBit4 = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 2) {", "+\t\t\t\t  this.nullBit4 = ~0;", "+\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 3) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 3\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif (CoverageTestId == 3) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 3\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\t\t\tif (coverageTestFlag && coverageTestId == 4) {", "-\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 4\"); //$NON-NLS-1$", "+\t\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\t\tif (CoverageTestId == 4) {", "+\t\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 4\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 5) {", "-\t\t\t\t\tthis.extra[5][otherLength - 1] = ~0;", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif (CoverageTestId == 5) {", "+\t\t\t\t\t\tthis.extra[5][otherLength - 1] = ~0;", "+\t\t\t\t\t}", "-\t\t\t\tif (coverageTestFlag && coverageTestId == 6) {", "-\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 6\"); //$NON-NLS-1$", "+\t\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\t\tif (CoverageTestId == 6) {", "+\t\t\t\t\t\tthrow new AssertionFailedException(\"COVERAGE 6\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 7) {", "-\t\t\t  this.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 7) {", "+\t\t\t\t  this.extra[5][i] = ~0;", "+\t\t\t\t}", "-\t\t\tif (coverageTestFlag && coverageTestId == 8) {", "-\t\t\t  this.extra[5][i] = ~0;", "+\t\t\tif (COVERAGE_TEST_FLAG) {", "+\t\t\t\tif (CoverageTestId == 8) {", "+\t\t\t\t  this.extra[5][i] = ~0;", "+\t\t\t\t}"]}], "num": 30614}