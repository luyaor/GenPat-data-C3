{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61f415dc1e76b677208d88140fa8e411", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f46da7b8419c060cd4d13484a89b57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "39787fb323b3f06bf37a085118b28347f6a17b39", "commitAfterChange": "0cc61e9905c3f603dab789f6a44abfa63094212c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "-\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "-\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\tif (this.naturalExitMergeInitStateIndex != -1) {", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "+\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "-\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "-\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "-\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\tif (this.naturalExitMergeInitStateIndex != -1) {", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "+\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "-\t\t\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "-\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "-\t\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\t\tif (this.naturalExitMergeInitStateIndex != -1) {", "+\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "+\t\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "+\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.preTryInitStateIndex);", "-\t\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "-\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "-\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\tboolean isStackMapFrameCodeStream = codeStream instanceof StackMapFrameCodeStream;", "+\t\t\t\t\t\tif (isStackMapFrameCodeStream) {", "+\t\t\t\t\t\t\t((StackMapFrameCodeStream) codeStream).pushStateIndex(this.naturalExitMergeInitStateIndex);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (this.naturalExitMergeInitStateIndex != -1) {", "+\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "+\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (isStackMapFrameCodeStream) {", "+\t\t\t\t\t\t\t((StackMapFrameCodeStream) codeStream).popStateIndex();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d08580c29cf8c9c0424a1a8877143f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\tboolean requiresCatchesExit = false;", "+\t\tBranchLabel catchesExitLabel = null;", "+\t\tBranchLabel postCatchesFinallyLabel = null;\t\t", "+\t\tfor (int i = 0; i < maxCatches; i++) {", "+\t\t\texceptionLabels[i].placeEnd();", "+\t\t}", "-\t\t\t\t\t// fall through", "+\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t}", "+\t\t\t\t\tcodeStream.goto_(naturalExitLabel);", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t}", "-\t\tfor (int i = 0; i < maxCatches; i++) {", "-\t\t\texceptionLabels[i].placeEnd();", "-\t\t}", "+\t\t\tcatchesExitLabel = new BranchLabel(codeStream);", "+\t\t\tpostCatchesFinallyLabel = new BranchLabel(codeStream);", "+\t\t\t", "+\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.preTryInitStateIndex);", "-\t\t\t\t\t\tcase FINALLY_SUBROUTINE :", "+\t\t\t\t\t\t\trequiresCatchesExit = true;", "+\t\t\t\t\t\t\tcodeStream.goto_(catchesExitLabel);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase FINALLY_SUBROUTINE :", "+\t\t\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "+\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\t\t}", "-//\t\t\t\tCaseLabel defaultReturnLocationLabel = null; // only used when emulating RET instruction", "-//\t\t\t\tCaseLabel naturalExitReturnLocationLabel = null; // only used when emulating RET instruction", "+\t\t\t\t\tif (this.preTryInitStateIndex != -1) {", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.preTryInitStateIndex);", "+\t\t\t\t\t}", "+\t\t\t", "-\t\t\tnaturalExitLabel.place();", "+\t\t\t\t\t\tnaturalExitLabel.place();", "-\t\t\t\t\t\t// May loose some local variable initializations : affecting the local variable attributes", "-\t\t\t\t\t\t// needed since any exception handler got inlined subroutine", "-\t\t\t\t\t\tif (this.preTryInitStateIndex != -1) {", "-\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.preTryInitStateIndex);", "+\t\t\t\t\t\t// inlined finally here can see all merged variables", "+\t\t\t\t\t\tif (this.postTryInitStateIndex != -1) {", "+\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.postTryInitStateIndex);", "+\t\t\t\t\t\tnaturalExitLabel.place();", "+\t\t\t\t\t\tif (postCatchesFinallyLabel != null && requiresCatchesExit) {", "+\t\t\t\t\t\t\tcodeStream.goto_(postCatchesFinallyLabel);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault :", "+\t\t\t\t\t\tnaturalExitLabel.place();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (requiresCatchesExit) {", "+\t\t\t\tswitch(finallyMode) {", "+\t\t\t\t\tcase FINALLY_INLINE :", "+\t\t\t\t\t\t// inlined finally here can see all merged variables", "+\t\t\t\t\t\tif (this.preTryInitStateIndex != -1) {", "+\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.preTryInitStateIndex);", "+\t\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.preTryInitStateIndex);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcatchesExitLabel.place();", "+\t\t\t\t\t\t// entire sequence for finally is associated to finally block", "+\t\t\t\t\t\tthis.finallyBlock.generateCode(this.scope, codeStream);", "+\t\t\t\t\t\tpostCatchesFinallyLabel.place();", "+\t\t\tif (catchesExitLabel != null) {", "+\t\t\t\tcatchesExitLabel.place();", "+\t\t\t}"]}], "num": 36736}