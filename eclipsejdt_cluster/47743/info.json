{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d202b6f4ccd0b131f9c616c30ab3558", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb33c2cb00adb29b58e73afeff9979c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SubTypeSearchJob.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, int detailLevel, IIndexSearchRequestor requestor, IndexManager indexManager)", "signatureAfterChange": " public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, IIndexSearchRequestor requestor, IndexManager indexManager)", "diff": ["-public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, int detailLevel, IIndexSearchRequestor requestor, IndexManager indexManager) {", "-\tsuper(pattern, scope, detailLevel, requestor, indexManager);", "-}", "+public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, IIndexSearchRequestor requestor, IndexManager indexManager) {", "+\tsuper(pattern, scope, requestor, indexManager);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ca628afd48bc4b79f924affe45622d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/AndPattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\tthis.feedIndexRequestor(requestor, detailLevel, refs, input, scope);", "+\t\tthis.feedIndexRequestor(requestor, refs, input, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98af34f79e97b403e2aac82fcfadc925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\tsuper.findIndexMatches(input, requestor, detailLevel, progressMonitor, scope);", "+\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0a8689ac1bc27905602f31bdcc21f97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\tsuper.findIndexMatches(input, requestor, detailLevel, progressMonitor, scope);", "+\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9633ce7d74e8bcada308c1baee2e815", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IIndex index, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\tfindIndexMatches(input, requestor, detailLevel, progressMonitor,scope);", "+\t\tfindIndexMatches(input, requestor, progressMonitor,scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4bb55e78ccb9836a286ac53e8102dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "b7d4c6b45f515a97440fc857e40a50db92fd574a", "commitAfterChange": "124643a9b7e02d95e1d58a7a8c2d6cfa0cf9fa28", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-\t\t\tfeedIndexRequestor(requestor, detailLevel, entry.getFileReferences(), input, scope);", "+\t\t\tfeedIndexRequestor(requestor, entry.getFileReferences(), input, scope);"]}], "num": 47743}