{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0eedd432e4ca58ec319641764485fdbc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "445902ffbb08804e8738a06bf70c9281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "29bba5ec8d05a9cd1832ad934d2530b41087b676", "commitAfterChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void rememberAllTypes(CompilationUnitDeclaration parsedUnit, org.eclipse.jdt.core.ICompilationUnit cu, boolean includeLocalTypes)", "signatureAfterChange": " private void rememberAllTypes(CompilationUnitDeclaration parsedUnit, org.eclipse.jdt.core.ICompilationUnit cu, boolean includeLocalTypes)", "diff": ["-\t\t\t\tIType typeHandle = (IType)factory.createLambdaTypeElement(expression, cu, existingElements, knownScopes);", "-\t\t\t\tremember(typeHandle, expression.getTypeBinding());", "+\t\t\t\tif (expression.binding != null && expression.binding.isValidBinding()) {", "+\t\t\t\t\tIType typeHandle = (IType)factory.createLambdaTypeElement(expression, cu, existingElements, knownScopes);", "+\t\t\t\t\tremember(typeHandle, expression.getTypeBinding());", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a85a0fc500f29006c931876d0e6154d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "957977037bae1c5fe509d6f5b83d064a1bf50d04", "commitAfterChange": "78430308e7d45c151f6732314055fefd33935867", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope unused)", "signatureAfterChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope unused)", "diff": ["-\t\t\t// check type declaration", "-\t\t\tif (level != null)", "-\t\t\t\treportTypeDeclaration(typeDeclaration, enclosingElement, level.intValue());", "-", "-\t\t\t// check inside type declaration", "-\t\t\treportMatching(typeDeclaration, enclosingElement, nodeSet);", "+\t\t\treportMatching(typeDeclaration, enclosingElement, level != null ? level.intValue() : -1, nodeSet);"]}], "num": 6488}