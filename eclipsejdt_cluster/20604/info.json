{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0c30af4bd5f08b2080f73970a3def08", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d23cc4bb945b3b11aa765114586ca78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["-\t\tJavaProjectElementInfo info= getJavaProjectElementInfo();\r", "-\t\tIClasspathEntry[] classpath= info.getRawClasspath();\r", "+\r", "+\t\tIClasspathEntry[] classpath = null;\r", "+\t\tif (this.isOpen()){\r", "+\t\t\tJavaProjectElementInfo info= getJavaProjectElementInfo();\r", "+\t\t\tclasspath= info.getRawClasspath();\r", "+\t\t\tif (classpath != null) {\r", "+\t\t\t\treturn classpath;\r", "+\t\t\t}\r", "+\t\t\treturn defaultClasspath();\r", "+\t\t}\r", "+\t\t// if not already opened, then read from file (avoid populating the model for CP question)\r", "+\t\tString sharedClasspath = loadClasspath();\r", "+\t\tif (sharedClasspath != null){\r", "+\t\t\ttry {\r", "+\t\t\t\tclasspath = readPaths(sharedClasspath);\r", "+\t\t\t} catch (IOException e){\r", "+\t\t\t} catch (RuntimeException e){\r", "+\t\t\t}\r", "+\t\t\t// extract out the output location\r", "+\t\t\tif (classpath != null && classpath.length > 0) {\r", "+\t\t\t\tIClasspathEntry entry= classpath[classpath.length - 1];\r", "+\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "+\t\t\t\t\tIClasspathEntry[] copy= new IClasspathEntry[classpath.length - 1];\r", "+\t\t\t\t\tSystem.arraycopy(classpath, 0, copy, 0, copy.length);\r", "+\t\t\t\t\tclasspath= copy;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2698172cbe8970f2102dabdb96d6630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2a762b85f858691a63d4547af177cc649d7b1329", "commitAfterChange": "7675c409a4b3b1e15b1cc476a0a66b988b5fb4a0", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["-\t\tIPath path = getJavaProjectElementInfo().getOutputLocation();\r", "-\t\tif (path == null) {\r", "-\t\t\treturn this.defaultOutputLocation();\r", "-\t\t} else {\r", "-\t\t\treturn path;\r", "+\t\tIPath outputLocation = null;\r", "+\t\tif (this.isOpen()) {\r", "+\t\t\tJavaProjectElementInfo info = getJavaProjectElementInfo();\r", "+\t\t\toutputLocation = info.getOutputLocation();\r", "+\t\t\tif (outputLocation != null) {\r", "+\t\t\t\treturn outputLocation;\r", "+\t\t\t}\r", "+\t\t\treturn defaultOutputLocation();\r", "+\t\t// if not already opened, then read from file (avoid populating the model for CP question)\r", "+\t\tString sharedClasspath = loadClasspath();\r", "+\t\tIClasspathEntry[] classpath = null;\r", "+\t\tif (sharedClasspath != null) {\r", "+\t\t\ttry {\r", "+\t\t\t\tclasspath = readPaths(sharedClasspath);\r", "+\t\t\t} catch (IOException e) {\r", "+\t\t\t} catch (RuntimeException e) {\r", "+\t\t\t}\r", "+\t\t\t// extract out the output location\r", "+\t\t\tif (classpath != null && classpath.length > 0) {\r", "+\t\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];\r", "+\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {\r", "+\t\t\t\t\toutputLocation = entry.getPath();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\tif (outputLocation != null) {\r", "+\t\t\treturn outputLocation;\r", "+\t\t}\r", "+\t\treturn defaultOutputLocation();\r"]}], "num": 20604}