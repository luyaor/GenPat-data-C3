{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b5865b20b4d7b31919d59dff70e0327", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1948de4e656cfc20ddf9ea5700bc4aae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "fced1a7a2b8f5ce77723d058091976d51b43704e", "commitAfterChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers)", "signatureAfterChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers)", "diff": ["-\t\tif (CharOperation.equals(className, selectedIdentifier)) {", "-\t\t\tif (qualifiedSelection != null", "+\t\tif (CharOperation.equals(className, this.selectedIdentifier)) {", "+\t\t\tif (this.qualifiedSelection != null", "-\t\t\t\t\tqualifiedSelection,", "+\t\t\t\t\tthis.qualifiedSelection,", "-\t\t\t\tif(acceptedClasses == null) {", "-\t\t\t\t\tacceptedClasses = new char[10][][];", "-\t\t\t\t\tacceptedClassesCount = 0;", "+\t\t\t\tif(this.acceptedClasses == null) {", "+\t\t\t\t\tthis.acceptedClasses = new char[10][][];", "+\t\t\t\t\tthis.acceptedClassesCount = 0;", "-\t\t\t\tint length = acceptedClasses.length;", "-\t\t\t\tif(length == acceptedClassesCount) {", "-\t\t\t\t\tSystem.arraycopy(acceptedClasses, 0, acceptedClasses = new char[(length + 1)* 2][][], 0, length);", "+\t\t\t\tint length = this.acceptedClasses.length;", "+\t\t\t\tif(length == this.acceptedClassesCount) {", "+\t\t\t\t\tSystem.arraycopy(this.acceptedClasses, 0, this.acceptedClasses = new char[(length + 1)* 2][][], 0, length);", "-\t\t\t\tacceptedClasses[acceptedClassesCount++] = acceptedClass;", "+\t\t\t\tthis.acceptedClasses[this.acceptedClassesCount++] = acceptedClass;", "-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptClass(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptClass("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9efa4ff79b93a28da404115de85bd620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "1b80cae94595518122618b458eed60915f76d171", "commitAfterChange": "92d6141bb346285ff13c588faa5a059cb9f83b3d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tBlockScope blockScope)", "signatureAfterChange": "  \tpublic void traverse( \t\tASTVisitor visitor, \t\tBlockScope blockScope)", "diff": ["-\t\t\ttryBlock.traverse(visitor, scope);", "-\t\t\tif (catchArguments != null) {", "-\t\t\t\tfor (int i = 0, max = catchBlocks.length; i < max; i++) {", "-\t\t\t\t\tcatchArguments[i].traverse(visitor, scope);", "-\t\t\t\t\tcatchBlocks[i].traverse(visitor, scope);", "+\t\t\tthis.tryBlock.traverse(visitor, this.scope);", "+\t\t\tif (this.catchArguments != null) {", "+\t\t\t\tfor (int i = 0, max = this.catchBlocks.length; i < max; i++) {", "+\t\t\t\t\tthis.catchArguments[i].traverse(visitor, this.scope);", "+\t\t\t\t\tthis.catchBlocks[i].traverse(visitor, this.scope);", "-\t\t\tif (finallyBlock != null)", "-\t\t\t\tfinallyBlock.traverse(visitor, scope);", "+\t\t\tif (this.finallyBlock != null)", "+\t\t\t\tthis.finallyBlock.traverse(visitor, this.scope);"]}], "num": 62930}