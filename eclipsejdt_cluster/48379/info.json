{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72ee1d159c83bc463fff35b8dff559b4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c46913a35ab57ff413887f088992737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "376d52c1cdc65e12a1dbf449737ba06d2101c4f4", "commitAfterChange": "7f3c64574901f5a013fb7527a4bb25411dd2afcf", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " public void test125()", "signatureAfterChange": " public void test125()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t\t\"    return one + X.<String>choose(one, two);\\n\" +", "+\t\t\t\"    return one;\\n\" +", "-\t\t\t\"    System.out.println(choose(\\\"a\\\", \\\"b\\\"));\\n\" +", "+\t\t\t\"    System.out.println(choose(\\\"a\\\", \\\"b\\\") + X.<String>choose(\\\"a\\\", \\\"b\\\"));\\n\" +", "-\t\t\t\"}\"},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\"\treturn one + X.<String>choose(one, two);\\n\" +", "-\t\t\"\t                       ^^^^^^\\n\" +", "-\t\t\"The method choose(String, String) is ambiguous for the type X\\n\" +", "-\t\t\"----------\\n\",", "-\t\tJavacTestOptions.EclipseHasABug.EclipseBug207935);", "+\t\t\t\"}\"", "+\t\t},", "+\t\t\"aa\"", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62304c18f86fda8f32dbeb22bae2097e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": "  public void test1014()", "signatureAfterChange": "  public void test1014()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tx.foo(null);\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Potential null pointer access: The variable x may be null at this location\\n\" +", "-\t\t\"----------\\n\",", "-\t    JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63bd529ace35e1eccbdc4a3e0cf4699f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": "  public void test1014()", "signatureAfterChange": "  public void test1014()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\tx.foo(null);\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Potential null pointer access: The variable x may be null at this location\\n\" +", "-\t\t\"----------\\n\",", "-\t    JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f52604f77efe55440fc247217af2ae88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "20a2fc3a8fdc6d3e237f88ae81c19fcd38d96cb4", "commitAfterChange": "70c0b54d06beb46973ea99f7de0a7be1f26639f6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test031()", "signatureAfterChange": " public void test031()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 13)\\n\" +", "-\t\t\"\tX() {\\n\" +", "-\t\t\"\t^^^\\n\" +", "-\t\t\"The blank final field blank may not have been initialized\\n\" +", "-\t\t\"----------\\n\",", "-\t\tJavacTestOptions.EclipseHasABug.EclipseBug235781);", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6485a1101b3e0b0bc9d5b0713a9829b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "aa46ed677ee85f03d71a5e403b6a2449b883ffe1", "commitAfterChange": "c0de86876da4886baced9b3782c3e678b86d856e", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 245, "signatureBeforeChange": " public void test0726_for()", "signatureAfterChange": " public void test0726_for()", "diff": ["-// contrast this with #311", "+// we are now able to see that x2 is reinitialized with x1, which is unknown", "-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\tx2.toString();\\n\" + ", "-\t\t\"\t^^\\n\" + ", "-\t\t\"The variable x2 may be null\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d79a07fff423044864147ea2a7b910", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test061()", "signatureAfterChange": " public void test061()", "diff": ["-\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\t\"1. WARNING in q\\\\Y.java (at line 3)\\n\" +", "-\t\t\"\tprivate static class X {}\t\\n\" +", "-\t\t\"\t                     ^\\n\" +", "-\t\t\"The type Y.X is never used locally\\n\" +", "-\t\t\"----------\\n\",", "+\t\t\"\",", "-\t\tJavacTestOptions.Excuse.EclipseHasSomeMoreWarnings /* javac test options */);", "+\t\tJavacTestOptions.DEFAULT /* javac test options */);"]}], "num": 48379}