{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b81a3c88ba2f0cb53d6c547255463a7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f938aa751e12589fe0cc806e065ec8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void createASTs(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor requestor, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void createASTs(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor requestor, IProgressMonitor monitor)", "diff": ["-     */", "+\t */", "-\t\t\tif (this.statementsRecovery) flags |= ICompilationUnit.ENABLE_STATEMENTS_RECOVERY;", "-\t\t\tif (this.ignoreMethodBodies) flags |= ICompilationUnit.IGNORE_METHOD_BODIES;", "-\t\t\tif (this.resolveBindings) {", "+\t\t\tif ((this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0) {", "+\t\t\t\tflags |= ICompilationUnit.ENABLE_STATEMENTS_RECOVERY;", "+\t\t\t}", "+\t\t\tif ((this.bits & CompilationUnitResolver.IGNORE_METHOD_BODIES) != 0) {", "+\t\t\t\tflags |= ICompilationUnit.IGNORE_METHOD_BODIES;", "+\t\t\t}", "+\t\t\tif ((this.bits & CompilationUnitResolver.RESOLVE_BINDING) != 0) {", "-\t\t\t\tif (this.bindingsRecovery) flags |= ICompilationUnit.ENABLE_BINDINGS_RECOVERY;", "+\t\t\t\tif ((this.bits & CompilationUnitResolver.BINDING_RECOVERY) != 0) {", "+\t\t\t\t\tflags |= ICompilationUnit.ENABLE_BINDINGS_RECOVERY;", "+\t\t\t\t}", "-\t\t\t// re-init defaults to allow reuse (and avoid leaking)", "+\t\t\t// reset to defaults to allow reuse (and avoid leaking)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31477505be9a39eb2103da3bf3df6b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate ASTNode internalCreateASTForKind()", "signatureAfterChange": " \tprivate ASTNode internalCreateASTForKind()", "diff": ["-\t\tif (this.statementsRecovery) {", "+\t\tif ((this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0) {", "-\t\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil(this.ignoreMethodBodies);", "+\t\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil((this.bits & CompilationUnitResolver.IGNORE_METHOD_BODIES) != 0);", "-\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(this.rawSource, this.sourceOffset, this.sourceLength, this.compilerOptions, true, this.statementsRecovery);", "+\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(", "+\t\t\t\t\t\tthis.rawSource,", "+\t\t\t\t\t\tthis.sourceOffset,", "+\t\t\t\t\t\tthis.sourceLength,", "+\t\t\t\t\t\tthis.compilerOptions,", "+\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t(this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0);", "-\t\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes = codeSnippetParsingUtil.parseClassBodyDeclarations(this.rawSource, this.sourceOffset, this.sourceLength, this.compilerOptions, true, this.statementsRecovery);", "+\t\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes =", "+\t\t\t\t\tcodeSnippetParsingUtil.parseClassBodyDeclarations(", "+\t\t\t\t\t\t\tthis.rawSource,", "+\t\t\t\t\t\t\tthis.sourceOffset,", "+\t\t\t\t\t\t\tthis.sourceLength,", "+\t\t\t\t\t\t\tthis.compilerOptions,", "+\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t(this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0);"]}], "num": 36232}