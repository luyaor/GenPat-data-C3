{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab90bf2044cc705e29db8ad47091aff5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef8d99637676f5d9f941fbaaddb921f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      Collection<AnnotationMirror> _getAnnotationMirrors(IAnnotationBinding[] annoInstances)", "signatureAfterChange": "      Collection<AnnotationMirror> _getAnnotationMirrors(IAnnotationBinding[] annoInstances)", "diff": ["-\t\tfinal int len = annoInstances == null ? 0 : annoInstances.length;", "-        if( len == 0 ) return Collections.emptyList();", "-        final List<AnnotationMirror> result = new ArrayList<AnnotationMirror>(len);", "+        if( annoInstances == null || annoInstances.length == 0 ) ", "+        \treturn Collections.emptyList();", "+        final List<AnnotationMirror> result = new ArrayList<AnnotationMirror>(annoInstances.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "600d2f68f479755cd756fb19c80273bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "d137239e9d64b43b4573cdfef965a2c47040a54e", "commitAfterChange": "448d62b2ff66cd7ed3c1bda65bd5259a6d0971b0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void resetNullInfoForFields()", "signatureAfterChange": "  public void resetNullInfoForFields()", "diff": ["-\t\t\tint len = Math.min(localsStartIndex+1, this.extra[2].length);", "-\t\t\t\tfor (int vectorIndex = 0; vectorIndex < len; vectorIndex++) {", "+\t\t\t\tfor (int vectorIndex = 0; vectorIndex < this.extra[2].length; vectorIndex++) {", "-\t\t\t\tfor (int vectorIndex = 0; vectorIndex < len; vectorIndex++) {", "+\t\t\t\tfor (int vectorIndex = 0; vectorIndex < this.extra[2].length; vectorIndex++) {"]}], "num": 24263}