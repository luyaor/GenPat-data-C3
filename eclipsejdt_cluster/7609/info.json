{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46a3c43a967a228ba896942fb141ad52", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb07cd12591d283ac8566e90beaba0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "diff": ["-\t\t\t\tif ((flags & IResourceDelta.CONTENT) != 0 || (flags & IResourceDelta.ENCODING) != 0) {", "+\t\t\t\tif (elementType == IJavaElement.PACKAGE_FRAGMENT_ROOT && (flags & IResourceDelta.LOCAL_CHANGED) != 0) {", "+\t\t\t\t\t// external folder added or removed", "+\t\t\t\t\tdeltaRes = delta.getResource();", "+\t\t\t\t\tObject target = JavaModel.getExternalTarget(deltaRes.getLocation(), true/*check resource existence*/);", "+\t\t\t\t\telement = createElement(deltaRes, elementType, rootInfo);", "+\t\t\t\t\tupdateIndex(element, delta);", "+\t\t\t\t\tif (target != null) {", "+\t\t\t\t\t\t// external folder added", "+\t\t\t\t\t\telementAdded(element, delta, rootInfo);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// external folder removed", "+\t\t\t\t\t\telementRemoved(element, delta, rootInfo);", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.state.addClasspathValidation(rootInfo.project);", "+\t\t\t\t} else if ((flags & IResourceDelta.CONTENT) != 0 || (flags & IResourceDelta.ENCODING) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c623351ddf313e7478d9776d6626f752", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c9501f1b311a37a6bc557906befa511b836ae3dc", "commitAfterChange": "a8799ff4d554e2f00a886a5ef075289e2b738d32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "signatureAfterChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "diff": ["-\t\t// keep only segments that were in original path and device if it was there\r", "-\t\tIPath result =\r", "-\t\t\tcanonicalPath.removeFirstSegments(\r", "-\t\t\t\tcanonicalPath.segmentCount() - externalPath.segmentCount());\r", "+\t\t\r", "+\t\tIPath result;\r", "+\t\tif (externalPath.isAbsolute()) {\r", "+\t\t\tresult = canonicalPath;\r", "+\t\t} else {\r", "+\t\t\t// if path is relative, remove the first segments that were added by the java.io.File canonicalization\r", "+\t\t\t// e.g. 'lib/classes.zip' was converted to 'd:/myfolder/lib/classes.zip'\r", "+\t\t\tint externalLength = externalPath.segmentCount();\r", "+\t\t\tint canonicalLength = canonicalPath.segmentCount();\r", "+\t\t\tif (canonicalLength > externalLength) {\r", "+\t\t\t\tresult = canonicalPath.removeFirstSegments(canonicalLength - externalLength);\r", "+\t\t\t} else {\r", "+\t\t\t\tresult = canonicalPath;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\r", "+\t\t// keep device only if it was specified (this is because File.getCanonicalPath() converts '/lib/classed.zip' to 'd:/lib/classes/zip')\r"]}], "num": 7609}