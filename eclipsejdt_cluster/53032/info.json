{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12636b39757dca2b88bd3494c8e9f750", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484df6e4df4c9a43831cef3cab81d918", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "83c47ad58d0e74e38827d2d1f073a35312f6f8d5", "commitAfterChange": "1d0bf2fd1ae02cf0a5ebd8dc2dd268afda57373a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void _test010() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test010() throws JavaModelException, CoreException", "diff": ["-\tpublic void _test010() throws JavaModelException, CoreException {", "+\t// TODO (frederic) put back assertions when failure on linux platform will be fixed", "+\tpublic void test010() throws JavaModelException, CoreException {", "-\t\tassertFalse(\"Workspace encoding: \"+getWorkspaceRoot().getDefaultCharset()+\" should be different than ASCII!\", \"ASCII\".equals(getWorkspaceRoot().getDefaultCharset()));", "-\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+//\t\tassertFalse(\"Workspace encoding: \"+getWorkspaceRoot().getDefaultCharset()+\" should be different than ASCII!\", \"ASCII\".equals(getWorkspaceRoot().getDefaultCharset()));", "+//\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+\t\tSystem.out.println(\"Encoding tests010:\");", "+\t\tSystem.out.println(\"  - file encoding: \"+this.utf8File.getCharset());", "+\t\tSystem.out.println(\"  - project encoding: \"+this.encodingProject.getDefaultCharset());", "+\t\tSystem.out.println(\"  - workspace encoding: \"+getWorkspaceRoot().getDefaultCharset());", "+\t\tif (encodedContents.equals(source)) {", "+\t\t\tSystem.out.println(\"  => FAIL: Sources should not be the same as they were decoded with different encoding!\");", "+\t\t} else {", "+\t\t\tSystem.out.println(\"  => SUCCESS: sources are different\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94094df5400d7237818dbd870dc0a852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "65a63579ebc9b37573db7995b64988407cf25ede", "commitAfterChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test010() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test010() throws JavaModelException, CoreException", "diff": ["-\t// TODO (frederic) put back assertions when failure on linux platform will be fixed", "+\t\t", "+\t\t// Set encoding (be sure to have a different than system one)", "+\t\tString encoding = \"ASCII\".equals(systemEncoding) ? \"Cp1252\" : \"ASCII\";", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, \"ASCII\"));", "-//\t\tassertFalse(\"Workspace encoding: \"+getWorkspaceRoot().getDefaultCharset()+\" should be different than ASCII!\", \"ASCII\".equals(getWorkspaceRoot().getDefaultCharset()));", "-//\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "-\t\tSystem.out.println(\"Encoding tests010:\");", "-\t\tSystem.out.println(\"  - file encoding: \"+this.utf8File.getCharset());", "-\t\tSystem.out.println(\"  - project encoding: \"+this.encodingProject.getDefaultCharset());", "-\t\tSystem.out.println(\"  - workspace encoding: \"+getWorkspaceRoot().getDefaultCharset());", "-\t\tif (encodedContents.equals(source)) {", "-//\t\t\tSystem.out.println(\"  => FAIL: Sources should not be the same as they were decoded with different encoding!\");", "-\t\t} else {", "-\t\t\tSystem.out.println(\"  => SUCCESS: sources are different\");", "-\t\t}", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "+\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));"]}], "num": 53032}