{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61f1f9e8204a83b1705ad8291a8f5acb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311ec2d5719a58da57ed60b211f486a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "cbbc77bad29ab0935f23d7976e8f3a83a2098569", "commitAfterChange": "218bf9e76765a0b6d9236837b12cba562b6c4513", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 255, "signatureBeforeChange": " public void test108()", "signatureAfterChange": " public void test108()", "diff": ["-\tif (this.complianceLevel.compareTo(COMPLIANCE_1_5) >= 0) {", "-\t\tMap options = this.getCompilerOptions();", "-\t\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\tprivate interface ReturnBase {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate interface ReturnDerived extends ReturnBase {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate interface ReturnLeaf extends ReturnDerived {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate interface Interface<E> {\\n\" + ", "-\t\t\t\t\"\t\tReturnBase bar();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static class Implementation<T> {\\n\" + ", "-\t\t\t\t\"\t\tpublic final ReturnDerived bar() {\\n\" + ", "-\t\t\t\t\"\t\t\treturn null;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static class Child<U> extends Implementation<U> implements Interface<U> {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static class Grandchild<V> extends Child<V> implements Interface<V> {\\n\" +", "-\t\t\t\t\"\t\t@Override\\n\" + ", "-\t\t\t\t\"\t\tpublic ReturnLeaf bar() {\\n\" + ", "-\t\t\t\t\"\t\t\treturn null;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"\t\tnew Grandchild<String>();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\t\"\tpublic ReturnLeaf bar() {\\n\" + ", "-\t\t\t\"\t                  ^^^^^\\n\" + ", "-\t\t\t\"Cannot override the final method from X.Implementation<V>\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\toptions", "-\t\t);", "-\t}", "+\tMap options = this.getCompilerOptions();", "+\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tprivate interface ReturnBase {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate interface ReturnDerived extends ReturnBase {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate interface ReturnLeaf extends ReturnDerived {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate interface Interface<E> {\\n\" + ", "+\t\t\t\"\t\tReturnBase bar();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate static class Implementation<T> {\\n\" + ", "+\t\t\t\"\t\tpublic final ReturnDerived bar() {\\n\" + ", "+\t\t\t\"\t\t\treturn null;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate static class Child<U> extends Implementation<U> implements Interface<U> {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate static class Grandchild<V> extends Child<V> implements Interface<V> {\\n\" +", "+\t\t\t\"\t\t@Override\\n\" + ", "+\t\t\t\"\t\tpublic ReturnLeaf bar() {\\n\" + ", "+\t\t\t\"\t\t\treturn null;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\"\t\tnew Grandchild<String>();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\"", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\"\tpublic ReturnLeaf bar() {\\n\" + ", "+\t\t\"\t                  ^^^^^\\n\" + ", "+\t\t\"Cannot override the final method from X.Implementation<V>\\n\" + ", "+\t\t\"----------\\n\",", "+\t\tnull,", "+\t\ttrue,", "+\t\toptions", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "866d68b6ff91426b74695e90a3755b02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "cbbc77bad29ab0935f23d7976e8f3a83a2098569", "commitAfterChange": "218bf9e76765a0b6d9236837b12cba562b6c4513", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 249, "signatureBeforeChange": " public void test102()", "signatureAfterChange": " public void test102()", "diff": ["-\tif (this.complianceLevel.compareTo(COMPLIANCE_1_5) >= 0) {", "-\t\tMap options = this.getCompilerOptions();", "-\t\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\tprivate interface ReturnBase {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate interface ReturnDerived extends ReturnBase {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate interface ReturnLeaf extends ReturnDerived {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate interface Interface {\\n\" + ", "-\t\t\t\t\"\t\tReturnBase bar();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static class Implementation {\\n\" + ", "-\t\t\t\t\"\t\tpublic final ReturnDerived bar() {\\n\" + ", "-\t\t\t\t\"\t\t\treturn null;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static class Child extends Implementation implements Interface {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tprivate static class Grandchild extends Child implements Interface {\\n\" +", "-\t\t\t\t\"\t\t@Override\\n\" + ", "-\t\t\t\t\"\t\tpublic ReturnLeaf bar() {\\n\" + ", "-\t\t\t\t\"\t\t\treturn null;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"\t\tnew Grandchild();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\t\"\tpublic ReturnLeaf bar() {\\n\" + ", "-\t\t\t\"\t                  ^^^^^\\n\" + ", "-\t\t\t\"Cannot override the final method from X.Implementation\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\toptions", "-\t\t);", "-\t}", "+\tMap options = this.getCompilerOptions();", "+\toptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tprivate interface ReturnBase {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate interface ReturnDerived extends ReturnBase {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate interface ReturnLeaf extends ReturnDerived {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate interface Interface {\\n\" + ", "+\t\t\t\"\t\tReturnBase bar();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate static class Implementation {\\n\" + ", "+\t\t\t\"\t\tpublic final ReturnDerived bar() {\\n\" + ", "+\t\t\t\"\t\t\treturn null;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate static class Child extends Implementation implements Interface {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate static class Grandchild extends Child implements Interface {\\n\" +", "+\t\t\t\"\t\t@Override\\n\" + ", "+\t\t\t\"\t\tpublic ReturnLeaf bar() {\\n\" + ", "+\t\t\t\"\t\t\treturn null;\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\"\t\tnew Grandchild();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\"", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\"\tpublic ReturnLeaf bar() {\\n\" + ", "+\t\t\"\t                  ^^^^^\\n\" + ", "+\t\t\"Cannot override the final method from X.Implementation\\n\" + ", "+\t\t\"----------\\n\",", "+\t\tnull,", "+\t\ttrue,", "+\t\toptions", "+\t);"]}], "num": 865}