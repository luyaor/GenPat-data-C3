{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30bdeb897d550d3fc5e3666b8b5d1c4d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f4031a81cae7d047ff9d89d41336f62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a337a67d07e229d2e8a590edfef8bdffb92e4516", "commitAfterChange": "f0baa4687c4b232261eab4264c1bc16ee1b49e9d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  \tprivate void acceptPendingPolyArguments(BoundSet acceptedResult, TypeBinding[] parameterTypes, boolean isVarArgs)", "signatureAfterChange": "  \tprivate void acceptPendingPolyArguments(BoundSet acceptedResult, TypeBinding[] parameterTypes, boolean isVarArgs)", "diff": ["-\t\t\t\texpression.checkAgainstFinalTargetType(targetType, this.scope);", "+\t\t\t\tif (this.innerPolies.contains(expression)) // may get here for ReferenceExpressions ...", "+\t\t\t\t\texpression.setExpectedType(targetType); // ... prepare for final inference via rebindInnerPolies", "+\t\t\t\telse", "+\t\t\t\t\texpression.checkAgainstFinalTargetType(targetType, this.scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de358c1ea5643ad105c20ebbd82eee67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ec455405a83bfb36b65a1594dcc37928d4b0bc3b", "commitAfterChange": "79b8d8f9507454c772f9092ea04ba032447d4b59", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static boolean hasJavaNature(IProject project)", "signatureAfterChange": " \tpublic static boolean hasJavaNature(IProject project)", "diff": ["+\t\t\tif (ExternalJavaProject.EXTERNAL_PROJECT_NAME.equals(project.getName()))", "+\t\t\t\treturn true;"]}], "num": 59941}