{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "070a0ac1b3fce50386bc185ef2bd1bb2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11db378aef5bfb35a5e5563991e529d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "c76ca0258749c2717f441fbd5cdd6335fcc29bd3", "commitAfterChange": "00fb29417bfb5734c6eca9ef041023eab85e6eb6", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void test021()", "signatureAfterChange": " \tpublic void test021()", "diff": ["-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"src1/X.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t\t\t\"src2/Y.java\",", "-\t\t\t\t\t\"/** */\\n\" +", "-\t\t\t\t\t\"public class Y extends X {\\n\" +", "-\t\t\t\t\t\"}\",", "-\t\t\t},", "-\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2/Y.java\\\"\"", "-\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "-\t\t\t  + File.pathSeparator + \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2\\\"\"", "-\t        + \" -1.5 -g -preserveAllLocals\"", "-\t        + \" -verbose -proceedOnError -referenceInfo -useSingleThread\"", "-\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\" \",", "-\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/1]\\n\" +", "-\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t\t\t\"[reading    java/lang/Object.class]\\n\" +", "-\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "-\t\t\t\"[writing    Y.class - #1]\\n\" +", "-\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "-\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t\t\t\"[writing    X.class - #2]\\n\" +", "-\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "-\t\t\t\"[2 units compiled]\\n\" +", "-\t\t\t\"[2 .class files generated]\\n\",", "-\t        \"\",", "-\t        true);", "+\t\tString setting= System.getProperty(\"jdt.compiler.useSingleThread\");", "+\t\ttry {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", \"true\");", "+\t\t\tthis.runConformTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\"src1/X.java\",", "+\t\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\t\"}\",", "+\t\t\t\t\t\t\"src2/Y.java\",", "+\t\t\t\t\t\t\"/** */\\n\" +", "+\t\t\t\t\t\t\"public class Y extends X {\\n\" +", "+\t\t\t\t\t\t\"}\",", "+\t\t\t\t},", "+\t\t        \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2/Y.java\\\"\"", "+\t\t\t\t+ \" -sourcepath \\\"\" + OUTPUT_DIR +  File.separator + \"src1\\\"\"", "+\t\t\t\t  + File.pathSeparator + \"\\\"\" + OUTPUT_DIR +  File.separator + \"src2\\\"\"", "+\t\t        + \" -1.5 -g -preserveAllLocals\"", "+\t\t        + \" -verbose -proceedOnError -referenceInfo\"", "+\t\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\" \",", "+\t\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/1]\\n\" +", "+\t\t\t\t\"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t\t\t\"[reading    java/lang/Object.class]\\n\" +", "+\t\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "+\t\t\t\t\"[writing    Y.class - #1]\\n\" +", "+\t\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/Y.java - #1/2]\\n\" +", "+\t\t\t\t\"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t\t\t\"[writing    X.class - #2]\\n\" +", "+\t\t\t\t\"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src1/X.java - #2/2]\\n\" +", "+\t\t\t\t\"[2 units compiled]\\n\" +", "+\t\t\t\t\"[2 .class files generated]\\n\",", "+\t\t        \"\",", "+\t\t        true);", "+\t\t} finally {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", setting == null ? \"false\" : setting);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7071618700d2d68ea33bf887fed2a1c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "c76ca0258749c2717f441fbd5cdd6335fcc29bd3", "commitAfterChange": "00fb29417bfb5734c6eca9ef041023eab85e6eb6", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t\tpublic void test026()", "signatureAfterChange": " \tpublic void test026()", "diff": ["-\t\tpublic void test026(){", "+\tpublic void test026(){", "+\t\tString setting= System.getProperty(\"jdt.compiler.useSingleThread\");", "+\t\ttry {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", \"true\");", "-\t\t        + \" -verbose -proceedOnError -referenceInfo -useSingleThread\"", "+\t\t        + \" -verbose -proceedOnError -referenceInfo\"", "+\t\t} finally {", "+\t\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", setting == null ? \"false\" : setting);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdfe5b3fcb4d45c932c9853833223d65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "c76ca0258749c2717f441fbd5cdd6335fcc29bd3", "commitAfterChange": "00fb29417bfb5734c6eca9ef041023eab85e6eb6", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void test016()", "signatureAfterChange": " public void test016()", "diff": ["+\tString setting = System.getProperty(\"jdt.compiler.useSingleThread\");", "+\ttry {", "+\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", \"true\");", "-\t        + \" -verbose -proceedOnError -referenceInfo -useSingleThread\"", "+\t        + \" -verbose -proceedOnError -referenceInfo\"", "+\t} finally {", "+\t\tSystem.setProperty(\"jdt.compiler.useSingleThread\", setting == null ? \"false\" : setting);", "+}"]}], "num": 57626}