{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43d9a61002f5f16fda8f709905066429", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de99cd98a4384f5a978445b14d9e8d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "0dafa4f2e2b928e46665a7d028b087f69145477e", "commitAfterChange": "e43c6ed09b10ae435241ad2d75fd39056b384df8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void createPendingFolders(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tpublic void createPendingFolders(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tif (this.pendingFolders == null || this.pendingFolders.isEmpty()) return;", "+\t\tsynchronized (this) {", "+\t\t\tif (this.pendingFolders == null || this.pendingFolders.isEmpty()) return;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b91d982c41987a6cc2acb9f23b06052", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "0dafa4f2e2b928e46665a7d028b087f69145477e", "commitAfterChange": "e43c6ed09b10ae435241ad2d75fd39056b384df8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate IFolder addFolder(IPath externalFolderPath, IProject externalFoldersProject, boolean scheduleForCreation)", "signatureAfterChange": "  \tprivate IFolder addFolder(IPath externalFolderPath, IProject externalFoldersProject, boolean scheduleForCreation)", "diff": ["-\t\t\tif (this.pendingFolders == null)", "-\t\t\t\tthis.pendingFolders = Collections.synchronizedSet(new HashSet());", "+\t\t\tsynchronized(this) {", "+\t\t\t\tif (this.pendingFolders == null)", "+\t\t\t\t\tthis.pendingFolders = Collections.synchronizedSet(new HashSet());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651b8fd4d3f4fe96f1edb53a34cf211a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryManager.java", "commitBeforeChange": "db9be76de74b56d6d850bf6fc58da2f76b6cafdd", "commitAfterChange": "08d03106dd01075a6d73c7857f8d76a79176b45d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void updateUserLibrary(String libName, String encodedUserLibrary)", "signatureAfterChange": "  \tpublic void updateUserLibrary(String libName, String encodedUserLibrary)", "diff": ["-\t\t\t// update user libraries map", "-\t\t\tif (userLibrary != null) {", "-\t\t\t\tthis.userLibraries.put(libName, userLibrary);", "-\t\t\t} else {", "-\t\t\t\tthis.userLibraries.remove(libName);", "+\t\t\tsynchronized (this) {", "+\t\t\t\t// update user libraries map", "+\t\t\t\tif (userLibrary != null) {", "+\t\t\t\t\tthis.userLibraries.put(libName, userLibrary);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.userLibraries.remove(libName);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5d1373daaf9223c453531fe95b2827", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "48f271f8e7253c61ab509c2c5bf9a6fc4c4c9724", "commitAfterChange": "c4658f40283d016cd7a9d8dfc798c9cee6116c7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void performClasspathResourceChange(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "signatureAfterChange": "  \tpublic void performClasspathResourceChange(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "diff": ["-            this.projectUpdates.remove(project); // remove possibly awaiting one", "+\t    \tsynchronized (this) {", "+\t            this.projectUpdates.remove(project); // remove possibly awaiting one", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4a8c5ee751c79a52b727b47a207355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t \tprivate void clearAllMaps()", "signatureAfterChange": " \t \tprivate void clearAllMaps()", "diff": ["-\t\t// now clear file maps", "-\t\t_parentFile2GeneratedFiles.clear();", "-\t\t_generatedFile2ParentFiles.clear();", "+\t\tsynchronized( this )", "+\t\t{", "+\t\t\t// now clear file maps", "+\t\t\t_parentFile2GeneratedFiles.clear();", "+\t\t\t_generatedFile2ParentFiles.clear();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f78044863f6ab133f963f260ad7513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic synchronized void generatedSourceFolderDeleted() \t\tthrows CoreException", "signatureAfterChange": " \tpublic void generatedSourceFolderDeleted() \t\tthrows CoreException", "diff": ["-\tpublic synchronized void generatedSourceFolderDeleted()", "+\tpublic void generatedSourceFolderDeleted()", "-\t\t_generatedSourceFolder = null;", "+\t\tsynchronized( this )", "+\t\t{", "+\t\t\t_generatedSourceFolder = null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f987aa909dfd514c7b579410f28170fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "cd57cebde0c84fb9ca1993563edcb7f3ef156470", "commitAfterChange": "0cfd5dd44067c96bb32ed7a6ca02e3b8d0595bc8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void close()", "signatureAfterChange": " public void close()", "diff": ["-\tthis.changeListeners = null;", "+\tsynchronized(this) { // ensure that no other thread is adding/removing a listener at the same time (https://bugs.eclipse.org/bugs/show_bug.cgi?id=126673)", "+\t\tthis.changeListeners = null;", "+\t}"]}], "num": 59215}