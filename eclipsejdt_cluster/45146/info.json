{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15f3d53da46b2b5c1f3316283a954996", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa80067cd3cb7dd890a2c443d32edc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "fa78e4ce6e57928678189feff94d4c736b9ff2c4", "commitAfterChange": "0f248db43070dcf1bc4390d09f1d6625c113fc80", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void enterField(FieldInfo fieldInfo)", "signatureAfterChange": " \tpublic void enterField(FieldInfo fieldInfo)", "diff": ["-\t\t\tthis.memberName[typeDepth] = new String(fieldInfo.name);", "+\t\t\tString fieldName = new String(fieldInfo.name);", "+\t\t\tthis.memberName[typeDepth] = fieldName;", "+\t\t\t", "+\t\t\t// categories", "+\t\t\tIType currentType = this.types[typeDepth];", "+\t\t\tIField field = currentType.getField(fieldName);", "+\t\t\taddCategories(field, fieldInfo.categories);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f345fa83925c90bb25f411bed52bd387", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "b1348e3d0230a581c7eb25acd6ec072853b12bb0", "commitAfterChange": "f3728b24e0fe129a3644e987b967023e3f656958", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tpublic void enterMethod(\r \t\tint declarationStart,\r \t\tint modifiers,\r \t\tchar[] returnType,\r \t\tchar[] name,\r \t\tint nameSourceStart,\r \t\tint nameSourceEnd,\r \t\tchar[][] parameterTypes,\r \t\tchar[][] parameterNames,\r \t\tchar[][] exceptionTypes)", "signatureAfterChange": "\r \tpublic void enterMethod(\r \t\tint declarationStart,\r \t\tint modifiers,\r \t\tchar[] returnType,\r \t\tchar[] name,\r \t\tint nameSourceStart,\r \t\tint nameSourceEnd,\r \t\tchar[][] parameterTypes,\r \t\tchar[][] parameterNames,\r \t\tchar[][] exceptionTypes)", "diff": ["-\t\tif (typeDepth >= 0\r", "-\t\t\t&& fMemberDeclarationStart == -1) {\r", "-\t\t\t// don't allow nested member (can only happen with anonymous inner classes)\r", "-\t\t\tfMemberName = new String(name);\r", "-\t\t\tfMemberNameRange =\r", "+\t\tif (typeDepth >= 0) {\r", "+\t\t\tfMemberName[typeDepth] = new String(name);\r", "+\t\t\tfMemberNameRange[typeDepth] =\r", "-\t\t\tfMemberDeclarationStart = declarationStart;\r", "-\t\t\tfMethodParameterTypes = parameterTypes;\r", "+\t\t\tfMemberDeclarationStart[typeDepth] = declarationStart;\r", "+\t\t\tfMethodParameterTypes[typeDepth] = parameterTypes;\r"]}], "num": 45146}