{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f30a5c8cb5c4d1d77c4635e00522a1a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d23db553b27cde75985682927b02e6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormattingPreferences.java", "commitBeforeChange": "0d14952109802f7fb16e5e68b5410c8ce4177233", "commitAfterChange": "10518f28338383dcf260412fe5f8c8c5e1a47294", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static FormattingPreferences getSunSetttings()", "signatureAfterChange": "  \tpublic static FormattingPreferences getSunSetttings()", "diff": ["-\t\tif (SunSettings == null) {", "-\t\t\tSunSettings = new FormattingPreferences();", "-\t\t\tSunSettings.use_tab = false;", "-\t\t\tSunSettings.tab_size = 4;", "-\t\t\tSunSettings.page_width = 80;", "-\t\t\tSunSettings.blank_lines_before_package = 0;", "-\t\t\tSunSettings.blank_lines_after_package = 1;", "-\t\t\tSunSettings.blank_lines_before_imports= 1;", "-\t\t\tSunSettings.blank_lines_after_imports = 1;", "-\t\t\tSunSettings.initial_indentation_level = 0;", "-\t\t\tSunSettings.line_delimiter = DEFAULT_LINE_SEPARATOR;", "-\t\t\tSunSettings.continuation_indentation = 2;", "-\t\t\tSunSettings.type_declaration_brace_position = END_OF_LINE;", "-\t\t\tSunSettings.method_declaration_brace_position = END_OF_LINE;", "-\t\t\tSunSettings.insert_space_before_method_declaration_open_paren = false;", "-\t\t\tSunSettings.insert_space_before_type_open_brace = true;", "-\t\t\tSunSettings.insert_space_before_method_open_brace = true;", "-\t\t\tSunSettings.insert_space_between_empty_arguments = false;", "-\t\t\tSunSettings.insert_space_before_first_argument = false;", "-\t\t\tSunSettings.insert_space_before_closing_paren = false;", "-\t\t\tSunSettings.insert_space_before_assignment_operators = true;", "-\t\t\tSunSettings.insert_space_after_assignment_operators = true;", "-\t\t\tSunSettings.put_empty_statement_on_new_line = true;", "-\t\t\tSunSettings.insert_space_before_semicolon = false;", "-\t\t\tSunSettings.insert_space_within_message_send = false;", "-\t\t\tSunSettings.insert_space_before_message_send = false;", "-\t\t\tSunSettings.insert_space_before_first_initializer = false;", "-\t\t\tSunSettings.insert_space_before_closing_brace_in_array_initializer = false;", "-\t\t\tSunSettings.block_brace_position = END_OF_LINE;", "-\t\t\tSunSettings.insert_space_before_block_open_brace = true;", "-\t\t\tSunSettings.insert_space_before_colon_in_case = false;", "-\t\t\tSunSettings.insert_space_after_opening_paren_in_cast = false;", "-\t\t\tSunSettings.insert_space_before_closing_paren_in_cast = false;", "-\t\t\tSunSettings.insert_space_before_colon_in_default = false;", "-\t\t\tSunSettings.insert_space_in_while_condition = false;", "-\t\t\tSunSettings.insert_space_in_if_condition = false;", "-\t\t\tSunSettings.compact_else_if = true;", "-\t\t\tSunSettings.insert_space_before_if_condition = true;", "-\t\t\tSunSettings.insert_space_before_for_paren = true;\t\t", "-\t\t\tSunSettings.insert_space_in_for_parens = false;", "-\t\t\tSunSettings.switch_brace_position = END_OF_LINE;", "-\t\t\tSunSettings.insert_space_before_switch_open_brace = true;", "-\t\t\tSunSettings.insert_space_in_switch_condition = false;", "-\t\t\tSunSettings.insert_space_before_switch_condition = true;", "-\t\t\tSunSettings.insert_space_in_synchronized_condition = false;", "-\t\t\tSunSettings.insert_space_before_synchronized_condition = true;", "-\t\t\tSunSettings.insert_space_in_catch_expression = false;", "-\t\t\tSunSettings.insert_space_before_catch_expression = true;", "-\t\t\tSunSettings.insert_space_before_while_condition = true;", "-\t\t\tSunSettings.insert_new_line_in_control_statements = true;", "-\t\t\tSunSettings.insert_space_before_binary_operator = true;", "-\t\t\tSunSettings.insert_space_after_binary_operator = true;", "-\t\t\tSunSettings.insert_space_before_unary_operator = false;", "-\t\t\tSunSettings.insert_space_after_unary_operator = false;", "-\t\t\tSunSettings.insert_space_before_comma_in_multiple_field_declarations = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_multiple_field_declarations = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_superinterfaces = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_superinterfaces = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_allocation_expression = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_allocation_expression = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_array_initializer = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_array_initializer = true;", "-\t\t\tSunSettings.insert_space_before_colon_in_assert = true;", "-\t\t\tSunSettings.insert_space_after_colon_in_assert = true;", "-\t\t\tSunSettings.insert_space_before_question_in_conditional = true;", "-\t\t\tSunSettings.insert_space_after_question_in_conditional = true;", "-\t\t\tSunSettings.insert_space_before_colon_in_conditional = true;", "-\t\t\tSunSettings.insert_space_after_colon_in_conditional = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_constructor_arguments = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_constructor_arguments = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_constructor_throws = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_constructor_throws = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_for_increments = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_for_increments = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_explicitconstructorcall_arguments = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_explicitconstructorcall_arguments = true;", "-\t\t\tSunSettings.insert_space_before_colon_in_labeled_statement = false;", "-\t\t\tSunSettings.insert_space_after_colon_in_labeled_statement = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_messagesend_arguments = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_messagesend_arguments = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_method_arguments = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_method_arguments = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_method_throws = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_method_throws = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_multiple_local_declarations = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_multiple_local_declarations = true;", "-\t\t\tSunSettings.insert_space_before_comma_in_for_inits = false;", "-\t\t\tSunSettings.insert_space_after_comma_in_for_inits = true;", "-\t\t\tSunSettings.insert_space_after_semicolon_in_for = true;", "-\t\t\tSunSettings.insert_space_before_postfix_operator = false;", "-\t\t\tSunSettings.insert_space_after_postfix_operator = false;", "-\t\t\tSunSettings.insert_space_before_prefix_operator = true;", "-\t\t\tSunSettings.insert_space_after_prefix_operator = false;", "-\t\t\tSunSettings.indent_switchstatements_compare_to_switch = false;", "-\t\t\tSunSettings.indent_switchstatements_compare_to_cases = true;", "-\t\t\tSunSettings.indent_breaks_compare_to_cases = true;", "-\t\t\tSunSettings.anonymous_type_declaration_brace_position = END_OF_LINE;", "-\t\t\tSunSettings.insert_space_before_anonymous_type_open_brace = true;", "-\t\t\tSunSettings.indent_body_declarations_compare_to_type_header = true;", "-\t\t\tSunSettings.filling_space = ' ';", "-\t\t\tSunSettings.insert_space_after_closing_paren_in_cast = true;", "-\t\t\tSunSettings.number_of_blank_lines_to_insert_at_beginning_of_method_body = 0;", "-\t\t\tSunSettings.keep_simple_if_on_one_line = true;", "-\t\t\tSunSettings.format_guardian_clause_on_one_line = true;", "-\t\t\tSunSettings.insert_space_before_open_paren_in_parenthesized_expression = false;", "-\t\t\tSunSettings.insert_space_after_open_paren_in_parenthesized_expression = false;", "-\t\t\tSunSettings.insert_space_before_closing_paren_in_parenthesized_expression = false;", "-\t\t\tSunSettings.keep_then_statement_on_same_line = true;", "-\t\t\tSunSettings.blank_lines_before_new_chunk = 1;", "-\t\t\tSunSettings.blank_lines_before_field = 1;", "-\t\t\tSunSettings.blank_lines_before_method = 1;", "-\t\t\tSunSettings.blank_lines_before_member_type = 1;", "-\t\t\tSunSettings.insert_space_after_block_close_brace = true;", "-\t\t\tSunSettings.keep_else_statement_on_same_line = false;", "-\t\t\tSunSettings.insert_space_before_bracket_in_array_type_reference = false;", "-\t\t\tSunSettings.insert_space_between_brackets_in_array_type_reference = false;", "-\t\t\tSunSettings.compact_if_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.type_declaration_superclass_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.type_declaration_superinterfaces_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.method_declaration_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.message_send_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.message_send_selector_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.method_throws_clause_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.type_member_alignment = Alignment.M_MULTICOLUMN;", "-\t\t\tSunSettings.allocation_expression_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.qualified_allocation_expression_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.array_initializer_expressions_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.explicit_constructor_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "-\t\t\tSunSettings.conditional_expression_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "-\t\t\tSunSettings.binary_expression_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "-\t\t\tSunSettings.insert_new_line_in_empty_method_body = true;", "-\t\t\tSunSettings.insert_new_line_in_empty_type_declaration = true;", "-\t\t\tSunSettings.insert_new_line_in_empty_anonymous_type_declaration = true;", "-\t\t\tSunSettings.number_of_empty_lines_to_preserve = 1;", "-\t\t}", "-\t\treturn SunSettings;", "+\t\tFormattingPreferences sunSettings = new FormattingPreferences();", "+\t\tsunSettings.use_tab = false;", "+\t\tsunSettings.tab_size = 4;", "+\t\tsunSettings.page_width = 80;", "+\t\tsunSettings.blank_lines_before_package = 0;", "+\t\tsunSettings.blank_lines_after_package = 1;", "+\t\tsunSettings.blank_lines_before_imports= 1;", "+\t\tsunSettings.blank_lines_after_imports = 1;", "+\t\tsunSettings.initial_indentation_level = 0;", "+\t\tsunSettings.line_delimiter = DEFAULT_LINE_SEPARATOR;", "+\t\tsunSettings.continuation_indentation = 2;", "+\t\tsunSettings.type_declaration_brace_position = END_OF_LINE;", "+\t\tsunSettings.method_declaration_brace_position = END_OF_LINE;", "+\t\tsunSettings.insert_space_before_method_declaration_open_paren = false;", "+\t\tsunSettings.insert_space_before_type_open_brace = true;", "+\t\tsunSettings.insert_space_before_method_open_brace = true;", "+\t\tsunSettings.insert_space_between_empty_arguments = false;", "+\t\tsunSettings.insert_space_before_first_argument = false;", "+\t\tsunSettings.insert_space_before_closing_paren = false;", "+\t\tsunSettings.insert_space_before_assignment_operators = true;", "+\t\tsunSettings.insert_space_after_assignment_operators = true;", "+\t\tsunSettings.put_empty_statement_on_new_line = true;", "+\t\tsunSettings.insert_space_before_semicolon = false;", "+\t\tsunSettings.insert_space_within_message_send = false;", "+\t\tsunSettings.insert_space_before_message_send = false;", "+\t\tsunSettings.insert_space_before_first_initializer = false;", "+\t\tsunSettings.insert_space_before_closing_brace_in_array_initializer = false;", "+\t\tsunSettings.block_brace_position = END_OF_LINE;", "+\t\tsunSettings.insert_space_before_block_open_brace = true;", "+\t\tsunSettings.insert_space_before_colon_in_case = false;", "+\t\tsunSettings.insert_space_after_opening_paren_in_cast = false;", "+\t\tsunSettings.insert_space_before_closing_paren_in_cast = false;", "+\t\tsunSettings.insert_space_before_colon_in_default = false;", "+\t\tsunSettings.insert_space_in_while_condition = false;", "+\t\tsunSettings.insert_space_in_if_condition = false;", "+\t\tsunSettings.compact_else_if = true;", "+\t\tsunSettings.insert_space_before_if_condition = true;", "+\t\tsunSettings.insert_space_before_for_paren = true;\t\t", "+\t\tsunSettings.insert_space_in_for_parens = false;", "+\t\tsunSettings.switch_brace_position = END_OF_LINE;", "+\t\tsunSettings.insert_space_before_switch_open_brace = true;", "+\t\tsunSettings.insert_space_in_switch_condition = false;", "+\t\tsunSettings.insert_space_before_switch_condition = true;", "+\t\tsunSettings.insert_space_in_synchronized_condition = false;", "+\t\tsunSettings.insert_space_before_synchronized_condition = true;", "+\t\tsunSettings.insert_space_in_catch_expression = false;", "+\t\tsunSettings.insert_space_before_catch_expression = true;", "+\t\tsunSettings.insert_space_before_while_condition = true;", "+\t\tsunSettings.insert_new_line_in_control_statements = true;", "+\t\tsunSettings.insert_space_before_binary_operator = true;", "+\t\tsunSettings.insert_space_after_binary_operator = true;", "+\t\tsunSettings.insert_space_before_unary_operator = false;", "+\t\tsunSettings.insert_space_after_unary_operator = false;", "+\t\tsunSettings.insert_space_before_comma_in_multiple_field_declarations = false;", "+\t\tsunSettings.insert_space_after_comma_in_multiple_field_declarations = true;", "+\t\tsunSettings.insert_space_before_comma_in_superinterfaces = false;", "+\t\tsunSettings.insert_space_after_comma_in_superinterfaces = true;", "+\t\tsunSettings.insert_space_before_comma_in_allocation_expression = false;", "+\t\tsunSettings.insert_space_after_comma_in_allocation_expression = true;", "+\t\tsunSettings.insert_space_before_comma_in_array_initializer = false;", "+\t\tsunSettings.insert_space_after_comma_in_array_initializer = true;", "+\t\tsunSettings.insert_space_before_colon_in_assert = true;", "+\t\tsunSettings.insert_space_after_colon_in_assert = true;", "+\t\tsunSettings.insert_space_before_question_in_conditional = true;", "+\t\tsunSettings.insert_space_after_question_in_conditional = true;", "+\t\tsunSettings.insert_space_before_colon_in_conditional = true;", "+\t\tsunSettings.insert_space_after_colon_in_conditional = true;", "+\t\tsunSettings.insert_space_before_comma_in_constructor_arguments = false;", "+\t\tsunSettings.insert_space_after_comma_in_constructor_arguments = true;", "+\t\tsunSettings.insert_space_before_comma_in_constructor_throws = false;", "+\t\tsunSettings.insert_space_after_comma_in_constructor_throws = true;", "+\t\tsunSettings.insert_space_before_comma_in_for_increments = false;", "+\t\tsunSettings.insert_space_after_comma_in_for_increments = true;", "+\t\tsunSettings.insert_space_before_comma_in_explicitconstructorcall_arguments = false;", "+\t\tsunSettings.insert_space_after_comma_in_explicitconstructorcall_arguments = true;", "+\t\tsunSettings.insert_space_before_colon_in_labeled_statement = false;", "+\t\tsunSettings.insert_space_after_colon_in_labeled_statement = true;", "+\t\tsunSettings.insert_space_before_comma_in_messagesend_arguments = false;", "+\t\tsunSettings.insert_space_after_comma_in_messagesend_arguments = true;", "+\t\tsunSettings.insert_space_before_comma_in_method_arguments = false;", "+\t\tsunSettings.insert_space_after_comma_in_method_arguments = true;", "+\t\tsunSettings.insert_space_before_comma_in_method_throws = false;", "+\t\tsunSettings.insert_space_after_comma_in_method_throws = true;", "+\t\tsunSettings.insert_space_before_comma_in_multiple_local_declarations = false;", "+\t\tsunSettings.insert_space_after_comma_in_multiple_local_declarations = true;", "+\t\tsunSettings.insert_space_before_comma_in_for_inits = false;", "+\t\tsunSettings.insert_space_after_comma_in_for_inits = true;", "+\t\tsunSettings.insert_space_after_semicolon_in_for = true;", "+\t\tsunSettings.insert_space_before_postfix_operator = false;", "+\t\tsunSettings.insert_space_after_postfix_operator = false;", "+\t\tsunSettings.insert_space_before_prefix_operator = true;", "+\t\tsunSettings.insert_space_after_prefix_operator = false;", "+\t\tsunSettings.indent_switchstatements_compare_to_switch = false;", "+\t\tsunSettings.indent_switchstatements_compare_to_cases = true;", "+\t\tsunSettings.indent_breaks_compare_to_cases = true;", "+\t\tsunSettings.anonymous_type_declaration_brace_position = END_OF_LINE;", "+\t\tsunSettings.insert_space_before_anonymous_type_open_brace = true;", "+\t\tsunSettings.indent_body_declarations_compare_to_type_header = true;", "+\t\tsunSettings.filling_space = ' ';", "+\t\tsunSettings.insert_space_after_closing_paren_in_cast = true;", "+\t\tsunSettings.number_of_blank_lines_to_insert_at_beginning_of_method_body = 0;", "+\t\tsunSettings.keep_simple_if_on_one_line = true;", "+\t\tsunSettings.format_guardian_clause_on_one_line = true;", "+\t\tsunSettings.insert_space_before_open_paren_in_parenthesized_expression = false;", "+\t\tsunSettings.insert_space_after_open_paren_in_parenthesized_expression = false;", "+\t\tsunSettings.insert_space_before_closing_paren_in_parenthesized_expression = false;", "+\t\tsunSettings.keep_then_statement_on_same_line = true;", "+\t\tsunSettings.blank_lines_before_new_chunk = 1;", "+\t\tsunSettings.blank_lines_before_field = 1;", "+\t\tsunSettings.blank_lines_before_method = 1;", "+\t\tsunSettings.blank_lines_before_member_type = 1;", "+\t\tsunSettings.insert_space_after_block_close_brace = true;", "+\t\tsunSettings.keep_else_statement_on_same_line = false;", "+\t\tsunSettings.insert_space_before_bracket_in_array_type_reference = false;", "+\t\tsunSettings.insert_space_between_brackets_in_array_type_reference = false;", "+\t\tsunSettings.compact_if_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.type_declaration_superclass_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.type_declaration_superinterfaces_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.method_declaration_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.message_send_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.message_send_selector_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.method_throws_clause_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.type_member_alignment = Alignment.M_MULTICOLUMN;", "+\t\tsunSettings.allocation_expression_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.qualified_allocation_expression_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.array_initializer_expressions_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.explicit_constructor_arguments_alignment = Alignment.M_COMPACT_SPLIT;", "+\t\tsunSettings.conditional_expression_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\tsunSettings.binary_expression_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\tsunSettings.insert_new_line_in_empty_method_body = true;", "+\t\tsunSettings.insert_new_line_in_empty_type_declaration = true;", "+\t\tsunSettings.insert_new_line_in_empty_anonymous_type_declaration = true;", "+\t\tsunSettings.number_of_empty_lines_to_preserve = 1;", "+\t\treturn sunSettings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9127ae059a53ff5fad78769bc48fd310", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/CharOperation.java", "commitBeforeChange": "e90133bc2bb6238e9bed10f9407b68636afe0cf9", "commitAfterChange": "aa3e581727ecbd82f62d5775da80f0c298f9ec87", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public static final boolean pathMatch(char[] pattern, char[] path, boolean isCaseSensitive, char pathSeparator)", "signatureAfterChange": " public static final boolean pathMatch(char[] pattern, char[] filepath, boolean isCaseSensitive, char pathSeparator)", "diff": ["-public static final boolean pathMatch(char[] pattern, char[] path, boolean isCaseSensitive, char pathSeparator) {", "+public static final boolean pathMatch(char[] pattern, char[] filepath, boolean isCaseSensitive, char pathSeparator) {", "-\tif (path == null) return false; // null name cannot match", "+\tif (filepath == null) return false; // null name cannot match", "-\tint iPattern = 0, patternLength = pattern.length;", "-\tint patternSegmentEnd = CharOperation.indexOf(pathSeparator, pattern);", "-\tif (patternSegmentEnd < 0) patternSegmentEnd = patternLength;", "+\t// offsets inside pattern", "+\tint pSegmentStart = 0, pLength = pattern.length;", "+\tint pSegmentEnd = CharOperation.indexOf(pathSeparator, pattern);", "+\tif (pSegmentEnd < 0) pSegmentEnd = pLength;", "-\tint iPath = 0, pathLength = path.length;", "-\tint pathSegmentEnd = CharOperation.indexOf(pathSeparator, path);", "-\tif (pathSegmentEnd < 0) pathSegmentEnd = pathLength;", "+\t// offsets inside filepath", "+\tint fSegmentStart = 0, fLength = filepath.length;", "+\tint fSegmentEnd = CharOperation.indexOf(pathSeparator, filepath);", "+\tif (fSegmentEnd < 0) fSegmentEnd = fLength;", "-\tboolean freeSuffixDoubleStar = pattern[patternLength-1] == pathSeparator;", "+\tboolean freeSuffixDoubleStar = pattern[pLength-1] == pathSeparator;", "-\twhile (iPattern < patternLength", "+\twhile (pSegmentStart < pLength", "-\t\t\t\t&& !(patternSegmentEnd == iPattern+2", "-\t\t\t\t\t&& pattern[iPattern] == '*' ", "-\t\t\t\t\t&& pattern[iPattern+1] == '*')) {", "+\t\t\t\t&& !(pSegmentEnd == pSegmentStart+2", "+\t\t\t\t\t&& pattern[pSegmentStart] == '*' ", "+\t\t\t\t\t&& pattern[pSegmentStart+1] == '*')) {", "-\t\tif (iPath >= pathLength) return false;", "-\t\tif (!CharOperation.match(pattern, iPattern, patternSegmentEnd, path, iPath, pathSegmentEnd, isCaseSensitive)) {", "+\t\tif (fSegmentStart >= fLength) return false;", "+\t\tif (!CharOperation.match(pattern, pSegmentStart, pSegmentEnd, filepath, fSegmentStart, fSegmentEnd, isCaseSensitive)) {", "-\t\tpatternSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, iPattern = patternSegmentEnd+1); // skip separator", "-\t\tif (patternSegmentEnd < 0) patternSegmentEnd = patternLength;", "+\t\tpSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, pSegmentStart = pSegmentEnd+1); // skip separator", "+\t\tif (pSegmentEnd < 0) pSegmentEnd = pLength;", "-\t\tpathSegmentEnd = CharOperation.indexOf(pathSeparator, path, iPath = pathSegmentEnd+1); // skip separator", "-\t\tif (pathSegmentEnd < 0) pathSegmentEnd = pathLength;", "+\t\tfSegmentEnd = CharOperation.indexOf(pathSeparator, filepath, fSegmentStart = fSegmentEnd+1); // skip separator", "+\t\tif (fSegmentEnd < 0) fSegmentEnd = fLength;", "-\tint segmentStart;", "-\tif (patternSegmentEnd == iPattern+2", "-\t\t\t\t&& pattern[iPattern] == '*' ", "-\t\t\t\t&& pattern[iPattern+1] == '*'){", "-\t\tpatternSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, iPattern = patternSegmentEnd+1); // skip separator", "-\t\tif (patternSegmentEnd < 0) patternSegmentEnd = patternLength;", "-\t\tsegmentStart = iPattern;", "+\tint pSegmentRestart;", "+\tif (pSegmentEnd == pSegmentStart+2", "+\t\t\t\t&& pattern[pSegmentStart] == '*' ", "+\t\t\t\t&& pattern[pSegmentStart+1] == '*'){", "+\t\tpSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, pSegmentStart = pSegmentEnd+1); // skip separator", "+\t\tif (pSegmentEnd < 0) pSegmentEnd = pLength;", "+\t\tpSegmentRestart = pSegmentStart;", "-\t\tsegmentStart = 0; // force iPath check", "+\t\tpSegmentRestart = 0; // force fSegmentStart check", "-\tint prefixStart = iPath;", "-\tcheckSegment: while (iPath < pathLength && iPattern < patternLength){", "+\tint fSegmentRestart = fSegmentStart;", "+\tcheckSegment: while (fSegmentStart < fLength && pSegmentStart < pLength){", "-\t\tif (patternSegmentEnd == iPattern+2", "-\t\t\t\t\t&& pattern[iPattern] == '*' ", "-\t\t\t\t\t&& pattern[iPattern+1] == '*') {", "-\t\t\tpatternSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, iPattern = patternSegmentEnd+1); // skip separator", "-\t\t\tif (patternSegmentEnd < 0) patternSegmentEnd = patternLength;", "-\t\t\tsegmentStart = iPattern;", "-\t\t\tprefixStart = iPath;", "+\t\tif (pSegmentEnd == pSegmentStart+2", "+\t\t\t\t\t&& pattern[pSegmentStart] == '*' ", "+\t\t\t\t\t&& pattern[pSegmentStart+1] == '*') {", "+\t\t\tpSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, pSegmentStart = pSegmentEnd+1); // skip separator", "+\t\t\tif (pSegmentEnd < 0) pSegmentEnd = pLength;", "+\t\t\tpSegmentRestart = pSegmentStart;", "+\t\t\tfSegmentRestart = fSegmentStart;", "-\t\tif (!CharOperation.match(pattern, iPattern, patternSegmentEnd, path, iPath, pathSegmentEnd, isCaseSensitive)) {", "+\t\tif (!CharOperation.match(pattern, pSegmentStart, pSegmentEnd, filepath, fSegmentStart, fSegmentEnd, isCaseSensitive)) {", "-\t\t\tpatternSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, iPattern = segmentStart);", "-\t\t\tif (patternSegmentEnd < 0) patternSegmentEnd = patternLength;", "+\t\t\tpSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, pSegmentStart = pSegmentRestart);", "+\t\t\tif (pSegmentEnd < 0) pSegmentEnd = pLength;", "-\t\t\tprefixStart = CharOperation.indexOf(pathSeparator, path, prefixStart+1); // skip separator", "-\t\t\tif (prefixStart < 0) {", "-\t\t\t\tprefixStart = pathLength;", "+\t\t\tfSegmentRestart = CharOperation.indexOf(pathSeparator, filepath, fSegmentRestart+1); // skip separator", "+\t\t\tif (fSegmentRestart < 0) {", "+\t\t\t\tfSegmentRestart = fLength;", "-\t\t\t\tprefixStart++;", "+\t\t\t\tfSegmentRestart++;", "-\t\t\tpathSegmentEnd = CharOperation.indexOf(pathSeparator, path, iPath = prefixStart);", "-\t\t\tif (pathSegmentEnd < 0) pathSegmentEnd = pathLength;", "+\t\t\tfSegmentEnd = CharOperation.indexOf(pathSeparator, filepath, fSegmentStart = fSegmentRestart);", "+\t\t\tif (fSegmentEnd < 0) fSegmentEnd = fLength;", "-\t\tpatternSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, iPattern = patternSegmentEnd+1); // skip separator", "-\t\tif (patternSegmentEnd < 0) patternSegmentEnd = patternLength;", "+\t\tpSegmentEnd = CharOperation.indexOf(pathSeparator, pattern, pSegmentStart = pSegmentEnd+1); // skip separator", "+\t\tif (pSegmentEnd < 0) pSegmentEnd = pLength;", "-\t\tpathSegmentEnd = CharOperation.indexOf(pathSeparator, path, iPath = pathSegmentEnd+1); // skip separator", "-\t\tif (pathSegmentEnd < 0) pathSegmentEnd = pathLength;", "+\t\tfSegmentEnd = CharOperation.indexOf(pathSeparator, filepath, fSegmentStart = fSegmentEnd+1); // skip separator", "+\t\tif (fSegmentEnd < 0) fSegmentEnd = fLength;", "-\treturn (segmentStart >= patternSegmentEnd)", "-\t\t\t\t|| (iPath >= pathLength && iPattern >= patternLength)\t", "-\t\t\t\t|| (iPattern == patternLength - 2 && pattern[iPattern] == '*' && pattern[iPattern+1] == '*')", "-\t\t\t\t|| (iPattern == patternLength &&  freeSuffixDoubleStar); ", "+\treturn (pSegmentRestart >= pSegmentEnd)", "+\t\t\t\t|| (fSegmentStart >= fLength && pSegmentStart >= pLength)\t", "+\t\t\t\t|| (pSegmentStart == pLength - 2 && pattern[pSegmentStart] == '*' && pattern[pSegmentStart+1] == '*')", "+\t\t\t\t|| (pSegmentStart == pLength &&  freeSuffixDoubleStar); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f9569ad776e331997913d38517d96d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormattingPreferences.java", "commitBeforeChange": "0d14952109802f7fb16e5e68b5410c8ce4177233", "commitAfterChange": "10518f28338383dcf260412fe5f8c8c5e1a47294", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t \tpublic static FormattingPreferences getDefault()", "signatureAfterChange": " \t\t \tpublic static FormattingPreferences getDefault()", "diff": ["-\t\tif (Defaults == null) {", "-\t\t\tDefaults = new FormattingPreferences();", "-\t\t\tDefaults.use_tab = DEFAULT_USE_TAB;", "-\t\t\tDefaults.tab_size = DEFAULT_TAB_SIZE;", "-\t\t\tDefaults.page_width = DEFAULT_PAGE_WIDTH;", "-\t\t\tDefaults.blank_lines_before_package = DEFAULT_BLANK_LINES_BEFORE_PACKAGE;", "-\t\t\tDefaults.blank_lines_after_package = DEFAULT_BLANK_LINES_AFTER_PACKAGE;", "-\t\t\tDefaults.blank_lines_before_imports= DEFAULT_BLANK_LINES_BEFORE_PACKAGE;", "-\t\t\tDefaults.blank_lines_after_imports = DEFAULT_BLANK_LINES_AFTER_IMPORTS;", "-\t\t\tDefaults.initial_indentation_level = DEFAULT_INITIAL_INDENTATION_LEVEL;", "-\t\t\tDefaults.line_delimiter = DEFAULT_LINE_SEPARATOR;", "-\t\t\tDefaults.continuation_indentation = DEFAULT_CONTINUATION_INDENTATION;", "-\t\t\tDefaults.type_declaration_brace_position = DEFAULT_TYPE_DECLARATION_BRACE_POSITION;", "-\t\t\tDefaults.method_declaration_brace_position = DEFAULT_METHOD_DECLARATION_BRACE_POSITION;", "-\t\t\tDefaults.insert_space_before_method_declaration_open_paren = DEFAULT_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN;", "-\t\t\tDefaults.insert_space_before_type_open_brace = DEFAULT_INSERT_SPACE_BEFORE_TYPE_OPEN_BRACE;", "-\t\t\tDefaults.insert_space_before_method_open_brace = DEFAULT_INSERT_SPACE_BEFORE_METHOD_OPEN_BRACE;", "-\t\t\tDefaults.insert_space_between_empty_arguments = DEFAULT_INSERT_SPACE_BETWEEN_EMPTY_ARGUMENTS;", "-\t\t\tDefaults.insert_space_before_first_argument = DEFAULT_INSERT_SPACE_BEFORE_FIRST_ARGUMENT;", "-\t\t\tDefaults.insert_space_before_closing_paren = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN;", "-\t\t\tDefaults.insert_space_before_assignment_operators = DEFAULT_INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATORS;", "-\t\t\tDefaults.insert_space_after_assignment_operators = DEFAULT_INSERT_SPACE_AFTER_ASSIGNMENT_OPERATORS;", "-\t\t\tDefaults.put_empty_statement_on_new_line = DEFAULT_PUT_EMPTY_STATEMENT_ON_NEW_LINE;", "-\t\t\tDefaults.insert_space_before_semicolon = DEFAULT_INSERT_SPACE_BEFORE_SEMICOLON;", "-\t\t\tDefaults.insert_space_within_message_send = DEFAULT_INSERT_SPACE_WITHIN_MESSAGE_SEND;", "-\t\t\tDefaults.insert_space_before_message_send = DEFAULT_INSERT_SPACE_BEFORE_MESSAGE_SEND;", "-\t\t\tDefaults.insert_space_before_first_initializer = DEFAULT_INSERT_SPACE_BEFORE_FIRST_INITIALIZER;", "-\t\t\tDefaults.insert_space_before_closing_brace_in_array_initializer = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER;", "-\t\t\tDefaults.block_brace_position = DEFAULT_BLOCK_BRACE_POSITION;", "-\t\t\tDefaults.insert_space_before_block_open_brace = DEFAULT_INSERT_SPACE_BEFORE_BLOCK_OPEN_BRACE;", "-\t\t\tDefaults.insert_space_before_colon_in_case = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_CASE;", "-\t\t\tDefaults.insert_space_after_opening_paren_in_cast = DEFAULT_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST;", "-\t\t\tDefaults.insert_space_before_closing_paren_in_cast = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST;", "-\t\t\tDefaults.insert_space_before_colon_in_default = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_DEFAULT;", "-\t\t\tDefaults.insert_space_in_while_condition = DEFAULT_INSERT_SPACE_IN_WHILE_CONDITION;", "-\t\t\tDefaults.insert_space_in_if_condition = DEFAULT_INSERT_SPACE_IN_IF_CONDITION;", "-\t\t\tDefaults.compact_else_if = DEFAULT_COMPACT_ELSE_IF;", "-\t\t\tDefaults.insert_space_before_if_condition = DEFAULT_INSERT_SPACE_BEFORE_IF_CONDITION;\t\t", "-\t\t\tDefaults.insert_space_before_for_paren = DEFAULT_INSERT_SPACE_BEFORE_FOR_PAREN;\t\t", "-\t\t\tDefaults.insert_space_in_for_parens = DEFAULT_INSERT_SPACE_IN_FOR_PARENS;", "-\t\t\tDefaults.switch_brace_position = DEFAULT_SWITCH_BRACE_POSITION;", "-\t\t\tDefaults.insert_space_before_switch_open_brace = DEFAULT_INSERT_SPACE_BEFORE_SWITCH_OPEN_BRACE;", "-\t\t\tDefaults.insert_space_in_switch_condition = DEFAULT_INSERT_SPACE_IN_SWITCH_CONDITION;", "-\t\t\tDefaults.insert_space_before_switch_condition = DEFAULT_INSERT_SPACE_BEFORE_SWITCH_CONDITION;", "-\t\t\tDefaults.insert_space_in_synchronized_condition = DEFAULT_INSERT_SPACE_IN_SYNCHRONIZED_CONDITION;", "-\t\t\tDefaults.insert_space_before_synchronized_condition = DEFAULT_INSERT_SPACE_BEFORE_SYNCHRONIZED_CONDITION;", "-\t\t\tDefaults.insert_space_in_catch_expression = DEFAULT_INSERT_SPACE_IN_CATCH_EXPRESSION;", "-\t\t\tDefaults.insert_space_before_catch_expression = DEFAULT_INSERT_SPACE_BEFORE_CATCH_EXPRESSION;", "-\t\t\tDefaults.insert_space_before_while_condition = DEFAULT_INSERT_SPACE_BEFORE_WHILE_CONDITION;", "-\t\t\tDefaults.insert_new_line_in_control_statements = DEFAULT_INSERT_NEW_LINE_IN_CONTROL_STATEMENTS;", "-\t\t\tDefaults.insert_space_before_binary_operator = DEFAULT_INSERT_SPACE_BEFORE_BINARY_OPERATOR;", "-\t\t\tDefaults.insert_space_after_binary_operator = DEFAULT_INSERT_SPACE_AFTER_BINARY_OPERATOR;", "-\t\t\tDefaults.insert_space_before_unary_operator = DEFAULT_INSERT_SPACE_BEFORE_UNARY_OPERATOR;", "-\t\t\tDefaults.insert_space_after_unary_operator = DEFAULT_INSERT_SPACE_AFTER_UNARY_OPERATOR;", "-\t\t\tDefaults.insert_space_before_comma_in_multiple_field_declarations = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS;", "-\t\t\tDefaults.insert_space_after_comma_in_multiple_field_declarations = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS;", "-\t\t\tDefaults.insert_space_before_comma_in_superinterfaces = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES;", "-\t\t\tDefaults.insert_space_after_comma_in_superinterfaces = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES;", "-\t\t\tDefaults.insert_space_before_comma_in_allocation_expression = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION;", "-\t\t\tDefaults.insert_space_after_comma_in_allocation_expression = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION;", "-\t\t\tDefaults.insert_space_before_comma_in_array_initializer = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER;", "-\t\t\tDefaults.insert_space_after_comma_in_array_initializer = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER;", "-\t\t\tDefaults.insert_space_before_colon_in_assert = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_ASSERT;", "-\t\t\tDefaults.insert_space_after_colon_in_assert = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_ASSERT;", "-\t\t\tDefaults.insert_space_before_question_in_conditional = DEFAULT_INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL;", "-\t\t\tDefaults.insert_space_after_question_in_conditional = DEFAULT_INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL;", "-\t\t\tDefaults.insert_space_before_colon_in_conditional = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL;", "-\t\t\tDefaults.insert_space_after_colon_in_conditional = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL;", "-\t\t\tDefaults.insert_space_before_comma_in_constructor_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS;", "-\t\t\tDefaults.insert_space_after_comma_in_constructor_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_ARGUMENTS;", "-\t\t\tDefaults.insert_space_before_comma_in_constructor_throws = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_THROWS;", "-\t\t\tDefaults.insert_space_after_comma_in_constructor_throws = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_THROWS;", "-\t\t\tDefaults.insert_space_before_comma_in_for_increments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS;", "-\t\t\tDefaults.insert_space_after_comma_in_for_increments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS;", "-\t\t\tDefaults.insert_space_before_comma_in_explicitconstructorcall_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS;", "-\t\t\tDefaults.insert_space_after_comma_in_explicitconstructorcall_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS;", "-\t\t\tDefaults.insert_space_before_colon_in_labeled_statement = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT;", "-\t\t\tDefaults.insert_space_after_colon_in_labeled_statement = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT;", "-\t\t\tDefaults.insert_space_before_comma_in_messagesend_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MESSAGESEND_ARGUMENTS;", "-\t\t\tDefaults.insert_space_after_comma_in_messagesend_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MESSAGESEND_ARGUMENTS;", "-\t\t\tDefaults.insert_space_before_comma_in_method_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS;", "-\t\t\tDefaults.insert_space_after_comma_in_method_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_METHOD_ARGUMENTS;", "-\t\t\tDefaults.insert_space_before_comma_in_method_throws = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_THROWS;", "-\t\t\tDefaults.insert_space_after_comma_in_method_throws = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_METHOD_THROWS;", "-\t\t\tDefaults.insert_space_before_comma_in_multiple_local_declarations = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS;", "-\t\t\tDefaults.insert_space_after_comma_in_multiple_local_declarations = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS;", "-\t\t\tDefaults.insert_space_before_comma_in_for_inits = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS;", "-\t\t\tDefaults.insert_space_after_comma_in_for_inits = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS;", "-\t\t\tDefaults.insert_space_after_semicolon_in_for = DEFAULT_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR;", "-\t\t\tDefaults.insert_space_before_postfix_operator = DEFAULT_INSERT_SPACE_BEFORE_POSTFIX_OPERATOR;", "-\t\t\tDefaults.insert_space_after_postfix_operator = DEFAULT_INSERT_SPACE_AFTER_POSTFIX_OPERATOR;", "-\t\t\tDefaults.insert_space_before_prefix_operator = DEFAULT_INSERT_SPACE_BEFORE_PREFIX_OPERATOR;", "-\t\t\tDefaults.insert_space_after_prefix_operator = DEFAULT_INSERT_SPACE_AFTER_PREFIX_OPERATOR;", "-\t\t\tDefaults.indent_switchstatements_compare_to_switch = DEFAULT_INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH;", "-\t\t\tDefaults.indent_switchstatements_compare_to_cases = DEFAULT_INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES;", "-\t\t\tDefaults.indent_breaks_compare_to_cases = DEFAULT_INDENT_BREAKS_COMPARE_TO_CASES;", "-\t\t\tDefaults.anonymous_type_declaration_brace_position = DEFAULT_ANONYMOUS_TYPE_DECLARATION_BRACE_POSITION;", "-\t\t\tDefaults.insert_space_before_anonymous_type_open_brace = DEFAULT_INSERT_SPACE_BEFORE_ANONYMOUS_TYPE_OPEN_BRACE;", "-\t\t\tDefaults.indent_body_declarations_compare_to_type_header = DEFAULT_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER;", "-\t\t\tDefaults.filling_space = DEFAULT_FILLING_SPACE;", "-\t\t\tDefaults.insert_space_after_closing_paren_in_cast = DEFAULT_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST;", "-\t\t\tDefaults.number_of_blank_lines_to_insert_at_beginning_of_method_body = DEFAULT_NUMBER_OF_BLANK_LINES_TO_INSERT_AT_BEGINNING_OF_METHOD_BODY;", "-\t\t\tDefaults.keep_simple_if_on_one_line = DEFAULT_KEEP_SIMPLE_IF_ON_ONE_LINE;", "-\t\t\tDefaults.format_guardian_clause_on_one_line = DEFAULT_FORMAT_GUARDIAN_CLAUSE_ON_ONE_LINE;", "-\t\t\tDefaults.insert_space_before_open_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_BEFORE_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION;", "-\t\t\tDefaults.insert_space_after_open_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_AFTER_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION;", "-\t\t\tDefaults.insert_space_before_closing_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHIZED_EXPRESSION;", "-\t\t\tDefaults.keep_then_statement_on_same_line = DEFAULT_KEEP_THEN_STATEMENT_ON_SAME_LINE;", "-\t\t\tDefaults.blank_lines_before_new_chunk = DEFAULT_BLANK_LINES_BEFORE_NEW_CHUNK;", "-\t\t\tDefaults.blank_lines_before_field = DEFAULT_BLANK_LINES_BEFORE_FIELD;", "-\t\t\tDefaults.blank_lines_before_method = DEFAULT_BLANK_LINES_BEFORE_METHOD;", "-\t\t\tDefaults.blank_lines_before_member_type = DEFAULT_BLANK_LINES_BEFORE_MEMBER_TYPE;", "-\t\t\tDefaults.insert_space_after_block_close_brace = DEFAULT_INSERT_SPACE_AFTER_BLOCK_CLOSE_BRACE;", "-\t\t\tDefaults.keep_else_statement_on_same_line = DEFAULT_KEEP_ELSE_STATEMENT_ON_SAME_LINE;", "-\t\t\tDefaults.insert_space_before_bracket_in_array_type_reference = DEFAULT_INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_TYPE_REFERENCE;", "-\t\t\tDefaults.insert_space_between_brackets_in_array_type_reference = DEFAULT_INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE;", "-\t\t\tDefaults.compact_if_alignment = DEFAULT_COMPACT_IF_ALIGNMENT;", "-\t\t\tDefaults.type_declaration_superclass_alignment = DEFAULT_TYPE_DECLARATION_SUPERCLASS_ALIGNMENT;", "-\t\t\tDefaults.type_declaration_superinterfaces_alignment = DEFAULT_TYPE_DECLARATION_SUPERINTERFACES_ALIGNMENT;", "-\t\t\tDefaults.method_declaration_arguments_alignment = DEFAULT_METHOD_DECLARATION_ARGUMENTS_ALIGNMENT;", "-\t\t\tDefaults.message_send_arguments_alignment = DEFAULT_MESSAGE_SEND_ARGUMENTS_ALIGNMENT;", "-\t\t\tDefaults.message_send_selector_alignment = DEFAULT_MESSAGE_SEND_SELECTOR_ALIGNMENT;", "-\t\t\tDefaults.method_throws_clause_alignment = DEFAULT_METHOD_THROWS_CLAUSE_ALIGNMENT;", "-\t\t\tDefaults.type_member_alignment = DEFAULT_TYPE_MEMBER_ALIGNMENT;", "-\t\t\tDefaults.allocation_expression_arguments_alignment = DEFAULT_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT;", "-\t\t\tDefaults.qualified_allocation_expression_arguments_alignment = DEFAULT_QUALIFIED_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT;", "-\t\t\tDefaults.array_initializer_expressions_alignment = DEFAULT_ARRAY_INITIALIZER_EXPRESSIONS_ALIGNMENT;", "-\t\t\tDefaults.explicit_constructor_arguments_alignment = DEFAULT_EXPLICIT_CONSTRUCTOR_ARGUMENTS_ALIGNMENT;", "-\t\t\tDefaults.conditional_expression_alignment = DEFAULT_CONDITIONAL_EXPRESSION_ALIGNMENT;", "-\t\t\tDefaults.binary_expression_alignment = DEFAULT_BINARY_EXPRESSION_ALIGNMENT;", "-\t\t\tDefaults.insert_new_line_in_empty_method_body = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY;", "-\t\t\tDefaults.insert_new_line_in_empty_type_declaration = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION;", "-\t\t\tDefaults.insert_new_line_in_empty_anonymous_type_declaration = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION;", "-\t\t\tDefaults.number_of_empty_lines_to_preserve = DEFAULT_NUMBER_OF_EMPTY_LINES_TO_PRESERVE;", "-\t\t}", "-\t\treturn Defaults;", "+\t\tFormattingPreferences defaults = new FormattingPreferences();", "+\t\tdefaults.use_tab = DEFAULT_USE_TAB;", "+\t\tdefaults.tab_size = DEFAULT_TAB_SIZE;", "+\t\tdefaults.page_width = DEFAULT_PAGE_WIDTH;", "+\t\tdefaults.blank_lines_before_package = DEFAULT_BLANK_LINES_BEFORE_PACKAGE;", "+\t\tdefaults.blank_lines_after_package = DEFAULT_BLANK_LINES_AFTER_PACKAGE;", "+\t\tdefaults.blank_lines_before_imports= DEFAULT_BLANK_LINES_BEFORE_PACKAGE;", "+\t\tdefaults.blank_lines_after_imports = DEFAULT_BLANK_LINES_AFTER_IMPORTS;", "+\t\tdefaults.initial_indentation_level = DEFAULT_INITIAL_INDENTATION_LEVEL;", "+\t\tdefaults.line_delimiter = DEFAULT_LINE_SEPARATOR;", "+\t\tdefaults.continuation_indentation = DEFAULT_CONTINUATION_INDENTATION;", "+\t\tdefaults.type_declaration_brace_position = DEFAULT_TYPE_DECLARATION_BRACE_POSITION;", "+\t\tdefaults.method_declaration_brace_position = DEFAULT_METHOD_DECLARATION_BRACE_POSITION;", "+\t\tdefaults.insert_space_before_method_declaration_open_paren = DEFAULT_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN;", "+\t\tdefaults.insert_space_before_type_open_brace = DEFAULT_INSERT_SPACE_BEFORE_TYPE_OPEN_BRACE;", "+\t\tdefaults.insert_space_before_method_open_brace = DEFAULT_INSERT_SPACE_BEFORE_METHOD_OPEN_BRACE;", "+\t\tdefaults.insert_space_between_empty_arguments = DEFAULT_INSERT_SPACE_BETWEEN_EMPTY_ARGUMENTS;", "+\t\tdefaults.insert_space_before_first_argument = DEFAULT_INSERT_SPACE_BEFORE_FIRST_ARGUMENT;", "+\t\tdefaults.insert_space_before_closing_paren = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN;", "+\t\tdefaults.insert_space_before_assignment_operators = DEFAULT_INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATORS;", "+\t\tdefaults.insert_space_after_assignment_operators = DEFAULT_INSERT_SPACE_AFTER_ASSIGNMENT_OPERATORS;", "+\t\tdefaults.put_empty_statement_on_new_line = DEFAULT_PUT_EMPTY_STATEMENT_ON_NEW_LINE;", "+\t\tdefaults.insert_space_before_semicolon = DEFAULT_INSERT_SPACE_BEFORE_SEMICOLON;", "+\t\tdefaults.insert_space_within_message_send = DEFAULT_INSERT_SPACE_WITHIN_MESSAGE_SEND;", "+\t\tdefaults.insert_space_before_message_send = DEFAULT_INSERT_SPACE_BEFORE_MESSAGE_SEND;", "+\t\tdefaults.insert_space_before_first_initializer = DEFAULT_INSERT_SPACE_BEFORE_FIRST_INITIALIZER;", "+\t\tdefaults.insert_space_before_closing_brace_in_array_initializer = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER;", "+\t\tdefaults.block_brace_position = DEFAULT_BLOCK_BRACE_POSITION;", "+\t\tdefaults.insert_space_before_block_open_brace = DEFAULT_INSERT_SPACE_BEFORE_BLOCK_OPEN_BRACE;", "+\t\tdefaults.insert_space_before_colon_in_case = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_CASE;", "+\t\tdefaults.insert_space_after_opening_paren_in_cast = DEFAULT_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST;", "+\t\tdefaults.insert_space_before_closing_paren_in_cast = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST;", "+\t\tdefaults.insert_space_before_colon_in_default = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_DEFAULT;", "+\t\tdefaults.insert_space_in_while_condition = DEFAULT_INSERT_SPACE_IN_WHILE_CONDITION;", "+\t\tdefaults.insert_space_in_if_condition = DEFAULT_INSERT_SPACE_IN_IF_CONDITION;", "+\t\tdefaults.compact_else_if = DEFAULT_COMPACT_ELSE_IF;", "+\t\tdefaults.insert_space_before_if_condition = DEFAULT_INSERT_SPACE_BEFORE_IF_CONDITION;\t\t", "+\t\tdefaults.insert_space_before_for_paren = DEFAULT_INSERT_SPACE_BEFORE_FOR_PAREN;\t\t", "+\t\tdefaults.insert_space_in_for_parens = DEFAULT_INSERT_SPACE_IN_FOR_PARENS;", "+\t\tdefaults.switch_brace_position = DEFAULT_SWITCH_BRACE_POSITION;", "+\t\tdefaults.insert_space_before_switch_open_brace = DEFAULT_INSERT_SPACE_BEFORE_SWITCH_OPEN_BRACE;", "+\t\tdefaults.insert_space_in_switch_condition = DEFAULT_INSERT_SPACE_IN_SWITCH_CONDITION;", "+\t\tdefaults.insert_space_before_switch_condition = DEFAULT_INSERT_SPACE_BEFORE_SWITCH_CONDITION;", "+\t\tdefaults.insert_space_in_synchronized_condition = DEFAULT_INSERT_SPACE_IN_SYNCHRONIZED_CONDITION;", "+\t\tdefaults.insert_space_before_synchronized_condition = DEFAULT_INSERT_SPACE_BEFORE_SYNCHRONIZED_CONDITION;", "+\t\tdefaults.insert_space_in_catch_expression = DEFAULT_INSERT_SPACE_IN_CATCH_EXPRESSION;", "+\t\tdefaults.insert_space_before_catch_expression = DEFAULT_INSERT_SPACE_BEFORE_CATCH_EXPRESSION;", "+\t\tdefaults.insert_space_before_while_condition = DEFAULT_INSERT_SPACE_BEFORE_WHILE_CONDITION;", "+\t\tdefaults.insert_new_line_in_control_statements = DEFAULT_INSERT_NEW_LINE_IN_CONTROL_STATEMENTS;", "+\t\tdefaults.insert_space_before_binary_operator = DEFAULT_INSERT_SPACE_BEFORE_BINARY_OPERATOR;", "+\t\tdefaults.insert_space_after_binary_operator = DEFAULT_INSERT_SPACE_AFTER_BINARY_OPERATOR;", "+\t\tdefaults.insert_space_before_unary_operator = DEFAULT_INSERT_SPACE_BEFORE_UNARY_OPERATOR;", "+\t\tdefaults.insert_space_after_unary_operator = DEFAULT_INSERT_SPACE_AFTER_UNARY_OPERATOR;", "+\t\tdefaults.insert_space_before_comma_in_multiple_field_declarations = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS;", "+\t\tdefaults.insert_space_after_comma_in_multiple_field_declarations = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS;", "+\t\tdefaults.insert_space_before_comma_in_superinterfaces = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES;", "+\t\tdefaults.insert_space_after_comma_in_superinterfaces = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES;", "+\t\tdefaults.insert_space_before_comma_in_allocation_expression = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION;", "+\t\tdefaults.insert_space_after_comma_in_allocation_expression = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION;", "+\t\tdefaults.insert_space_before_comma_in_array_initializer = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER;", "+\t\tdefaults.insert_space_after_comma_in_array_initializer = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER;", "+\t\tdefaults.insert_space_before_colon_in_assert = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_ASSERT;", "+\t\tdefaults.insert_space_after_colon_in_assert = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_ASSERT;", "+\t\tdefaults.insert_space_before_question_in_conditional = DEFAULT_INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL;", "+\t\tdefaults.insert_space_after_question_in_conditional = DEFAULT_INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL;", "+\t\tdefaults.insert_space_before_colon_in_conditional = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL;", "+\t\tdefaults.insert_space_after_colon_in_conditional = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL;", "+\t\tdefaults.insert_space_before_comma_in_constructor_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS;", "+\t\tdefaults.insert_space_after_comma_in_constructor_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_ARGUMENTS;", "+\t\tdefaults.insert_space_before_comma_in_constructor_throws = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_THROWS;", "+\t\tdefaults.insert_space_after_comma_in_constructor_throws = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_THROWS;", "+\t\tdefaults.insert_space_before_comma_in_for_increments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS;", "+\t\tdefaults.insert_space_after_comma_in_for_increments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS;", "+\t\tdefaults.insert_space_before_comma_in_explicitconstructorcall_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS;", "+\t\tdefaults.insert_space_after_comma_in_explicitconstructorcall_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS;", "+\t\tdefaults.insert_space_before_colon_in_labeled_statement = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT;", "+\t\tdefaults.insert_space_after_colon_in_labeled_statement = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT;", "+\t\tdefaults.insert_space_before_comma_in_messagesend_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MESSAGESEND_ARGUMENTS;", "+\t\tdefaults.insert_space_after_comma_in_messagesend_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MESSAGESEND_ARGUMENTS;", "+\t\tdefaults.insert_space_before_comma_in_method_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS;", "+\t\tdefaults.insert_space_after_comma_in_method_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_METHOD_ARGUMENTS;", "+\t\tdefaults.insert_space_before_comma_in_method_throws = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_THROWS;", "+\t\tdefaults.insert_space_after_comma_in_method_throws = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_METHOD_THROWS;", "+\t\tdefaults.insert_space_before_comma_in_multiple_local_declarations = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS;", "+\t\tdefaults.insert_space_after_comma_in_multiple_local_declarations = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS;", "+\t\tdefaults.insert_space_before_comma_in_for_inits = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS;", "+\t\tdefaults.insert_space_after_comma_in_for_inits = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS;", "+\t\tdefaults.insert_space_after_semicolon_in_for = DEFAULT_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR;", "+\t\tdefaults.insert_space_before_postfix_operator = DEFAULT_INSERT_SPACE_BEFORE_POSTFIX_OPERATOR;", "+\t\tdefaults.insert_space_after_postfix_operator = DEFAULT_INSERT_SPACE_AFTER_POSTFIX_OPERATOR;", "+\t\tdefaults.insert_space_before_prefix_operator = DEFAULT_INSERT_SPACE_BEFORE_PREFIX_OPERATOR;", "+\t\tdefaults.insert_space_after_prefix_operator = DEFAULT_INSERT_SPACE_AFTER_PREFIX_OPERATOR;", "+\t\tdefaults.indent_switchstatements_compare_to_switch = DEFAULT_INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH;", "+\t\tdefaults.indent_switchstatements_compare_to_cases = DEFAULT_INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES;", "+\t\tdefaults.indent_breaks_compare_to_cases = DEFAULT_INDENT_BREAKS_COMPARE_TO_CASES;", "+\t\tdefaults.anonymous_type_declaration_brace_position = DEFAULT_ANONYMOUS_TYPE_DECLARATION_BRACE_POSITION;", "+\t\tdefaults.insert_space_before_anonymous_type_open_brace = DEFAULT_INSERT_SPACE_BEFORE_ANONYMOUS_TYPE_OPEN_BRACE;", "+\t\tdefaults.indent_body_declarations_compare_to_type_header = DEFAULT_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER;", "+\t\tdefaults.filling_space = DEFAULT_FILLING_SPACE;", "+\t\tdefaults.insert_space_after_closing_paren_in_cast = DEFAULT_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST;", "+\t\tdefaults.number_of_blank_lines_to_insert_at_beginning_of_method_body = DEFAULT_NUMBER_OF_BLANK_LINES_TO_INSERT_AT_BEGINNING_OF_METHOD_BODY;", "+\t\tdefaults.keep_simple_if_on_one_line = DEFAULT_KEEP_SIMPLE_IF_ON_ONE_LINE;", "+\t\tdefaults.format_guardian_clause_on_one_line = DEFAULT_FORMAT_GUARDIAN_CLAUSE_ON_ONE_LINE;", "+\t\tdefaults.insert_space_before_open_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_BEFORE_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION;", "+\t\tdefaults.insert_space_after_open_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_AFTER_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION;", "+\t\tdefaults.insert_space_before_closing_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHIZED_EXPRESSION;", "+\t\tdefaults.keep_then_statement_on_same_line = DEFAULT_KEEP_THEN_STATEMENT_ON_SAME_LINE;", "+\t\tdefaults.blank_lines_before_new_chunk = DEFAULT_BLANK_LINES_BEFORE_NEW_CHUNK;", "+\t\tdefaults.blank_lines_before_field = DEFAULT_BLANK_LINES_BEFORE_FIELD;", "+\t\tdefaults.blank_lines_before_method = DEFAULT_BLANK_LINES_BEFORE_METHOD;", "+\t\tdefaults.blank_lines_before_member_type = DEFAULT_BLANK_LINES_BEFORE_MEMBER_TYPE;", "+\t\tdefaults.insert_space_after_block_close_brace = DEFAULT_INSERT_SPACE_AFTER_BLOCK_CLOSE_BRACE;", "+\t\tdefaults.keep_else_statement_on_same_line = DEFAULT_KEEP_ELSE_STATEMENT_ON_SAME_LINE;", "+\t\tdefaults.insert_space_before_bracket_in_array_type_reference = DEFAULT_INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_TYPE_REFERENCE;", "+\t\tdefaults.insert_space_between_brackets_in_array_type_reference = DEFAULT_INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE;", "+\t\tdefaults.compact_if_alignment = DEFAULT_COMPACT_IF_ALIGNMENT;", "+\t\tdefaults.type_declaration_superclass_alignment = DEFAULT_TYPE_DECLARATION_SUPERCLASS_ALIGNMENT;", "+\t\tdefaults.type_declaration_superinterfaces_alignment = DEFAULT_TYPE_DECLARATION_SUPERINTERFACES_ALIGNMENT;", "+\t\tdefaults.method_declaration_arguments_alignment = DEFAULT_METHOD_DECLARATION_ARGUMENTS_ALIGNMENT;", "+\t\tdefaults.message_send_arguments_alignment = DEFAULT_MESSAGE_SEND_ARGUMENTS_ALIGNMENT;", "+\t\tdefaults.message_send_selector_alignment = DEFAULT_MESSAGE_SEND_SELECTOR_ALIGNMENT;", "+\t\tdefaults.method_throws_clause_alignment = DEFAULT_METHOD_THROWS_CLAUSE_ALIGNMENT;", "+\t\tdefaults.type_member_alignment = DEFAULT_TYPE_MEMBER_ALIGNMENT;", "+\t\tdefaults.allocation_expression_arguments_alignment = DEFAULT_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT;", "+\t\tdefaults.qualified_allocation_expression_arguments_alignment = DEFAULT_QUALIFIED_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT;", "+\t\tdefaults.array_initializer_expressions_alignment = DEFAULT_ARRAY_INITIALIZER_EXPRESSIONS_ALIGNMENT;", "+\t\tdefaults.explicit_constructor_arguments_alignment = DEFAULT_EXPLICIT_CONSTRUCTOR_ARGUMENTS_ALIGNMENT;", "+\t\tdefaults.conditional_expression_alignment = DEFAULT_CONDITIONAL_EXPRESSION_ALIGNMENT;", "+\t\tdefaults.binary_expression_alignment = DEFAULT_BINARY_EXPRESSION_ALIGNMENT;", "+\t\tdefaults.insert_new_line_in_empty_method_body = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY;", "+\t\tdefaults.insert_new_line_in_empty_type_declaration = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION;", "+\t\tdefaults.insert_new_line_in_empty_anonymous_type_declaration = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION;", "+\t\tdefaults.number_of_empty_lines_to_preserve = DEFAULT_NUMBER_OF_EMPTY_LINES_TO_PRESERVE;", "+\t\treturn defaults;"]}], "num": 65006}