{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d65c7913ed27ac87e9a1b8a1ebda58d3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5183d137eacc60bf5ac8c6fa3b2bd453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas()", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas()", "diff": ["-\t\t\t\t\t\tnewSourcePath,", "-\t\t\t\t\t\tnull/*not a source root path*/);", "-\t\t\t\tint sourceAttachmentRootFlags = ", "-\t\t\t\t\tthis.getSourceAttachmentDeltaFlag(", "-\t\t\t\t\t\toldResolvedPath[i].getSourceAttachmentRootPath(),", "-\t\t\t\t\t\tnewResolvedPath[index].getSourceAttachmentRootPath(),", "-\t\t\t\t\t\tnewSourcePath/*in case both root paths are null*/);", "+\t\t\t\t\t\tnewSourcePath);", "+\t\t\t\tIPath oldRootPath = oldResolvedPath[i].getSourceAttachmentRootPath();", "+\t\t\t\tIPath newRootPath = newResolvedPath[index].getSourceAttachmentRootPath();", "+\t\t\t\tint sourceAttachmentRootFlags = getSourceAttachmentDeltaFlag(oldRootPath, newRootPath);", "-\t\t\t\t\taddClasspathDeltas(", "-\t\t\t\t\t\tproject.computePackageFragmentRoots(oldResolvedPath[i]),", "-\t\t\t\t\t\tflags,", "-\t\t\t\t\t\tdelta);", "+\t\t\t\t\taddClasspathDeltas(project.computePackageFragmentRoots(oldResolvedPath[i]), flags, delta);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (oldRootPath == null && newRootPath == null) {", "+\t\t\t\t\t\t// if source path is specified and no root path, it needs to be recomputed dynamically", "+\t\t\t\t\t\t// force detach source on jar package fragment roots (source will be lazily computed when needed)", "+\t\t\t\t\t\tIPackageFragmentRoot[] computedRoots = project.computePackageFragmentRoots(oldResolvedPath[i]);", "+\t\t\t\t\t\tfor (int j = 0; j < computedRoots.length; j++) {", "+\t\t\t\t\t\t\tIPackageFragmentRoot root = computedRoots[j];", "+\t\t\t\t\t\t\t// force detach source on jar package fragment roots (source will be lazily computed when needed)", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\troot.close();", "+\t\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t((PackageFragmentRoot) root).setSourceAttachmentProperty(null);// loose info - will be recomputed", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t} else {", "+\t\t\tthis.identicalRoots = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f5a34912f2a5bd769bcdaf06b4acae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "8cdf54f95656ee372ecbeae181ede3d9dd6c34a8", "commitAfterChange": "ef10fc23511bb08998ebf4a7dfdc62536faa0a9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["+\t\tMap allRemovedRoots = manager.deltaProcessor.removedRoots;", "+\t\tMap removedRoots = null;", "+\t\tif (allRemovedRoots != null) {", "+\t\t\tremovedRoots = new HashMap();", "+\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) allRemovedRoots.get(project);", "+\t\t\tfor (int i = 0; i < roots.length; i++) {", "+\t\t\t\tIPackageFragmentRoot root = roots[i];", "+\t\t\t\tremovedRoots.put(root.getPath(), root);", "+\t\t\t}", "+\t\t}", "-\t\t\t\tIPackageFragmentRoot[] pkgFragmentRoots =", "-\t\t\t\t\tproject.getPackageFragmentRoots(oldResolvedPath[i]);", "+\t\t\t\tIPackageFragmentRoot[] pkgFragmentRoots = null;", "+\t\t\t\tif (removedRoots != null) {", "+\t\t\t\t\tpkgFragmentRoots = new IPackageFragmentRoot[] {(IPackageFragmentRoot) removedRoots.get(oldResolvedPath[i].getPath())};", "+\t\t\t\t}", "+\t\t\t\tif (pkgFragmentRoots == null) {", "+\t\t\t\t\tpkgFragmentRoots = project.getPackageFragmentRoots(oldResolvedPath[i]);", "+\t\t\t\t}"]}], "num": 35155}