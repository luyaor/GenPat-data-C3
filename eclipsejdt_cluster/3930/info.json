{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49be802219bce466d1e18e7f855ee92c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022c6ae120eaffaf2cb8fd91fc5a50b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "commitAfterChange": "b9f6281b56af6781d8bb8cc727077eb3dccaebba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testCycle4() throws JavaModelException", "signatureAfterChange": " \tpublic void testCycle4() throws JavaModelException", "diff": ["-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2, 19, 21, CategorizedProblem.CAT_IMPORT),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2, 73, 74, CategorizedProblem.CAT_TYPE),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2, 87, 88, CategorizedProblem.CAT_TYPE),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2, 93, 96, CategorizedProblem.CAT_MEMBER),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"X cannot be resolved to a type\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"X cannot be resolved to a type\", c3, 51, 52, CategorizedProblem.CAT_TYPE),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3, 19, 21, CategorizedProblem.CAT_IMPORT),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37c3300b9911696fc3ea0377a16297d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "bcf05e1a23e85c2be26c967fe98fcd6135357ea5", "commitAfterChange": "bd19f394e99e7308ae085922e4bf1b95d3c9ebb7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testCycle4() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle4() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});", "+\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\texpectingCompilingOrder(new String[]{\"p2.Y\", \"p3.Z\", \"p2.Y\"});", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));", "+\t\texpectingCompilingOrder(new String[]{\"p2.Y\", \"p3.Z\", \"p2.Y\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$", "+\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),", "-\t\t\tnew Problem(\"p2\", \"X cannot be resolved (or is not a valid return type) for the method zork\", c2),", "-\t\t\tnew Problem(\"p2\", \"X cannot be resolved or is not a type\", c2),", "-\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),", "-\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)", "+\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"X cannot be resolved (or is not a valid return type) for the method zork\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"X cannot be resolved or is not a type\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p3\", \"X cannot be resolved (or is not a valid return type) for the method foo\", c3),", "-\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),", "-\t\t\tnew Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3)", "+\t\t\tnew Problem(\"p3\", \"X cannot be resolved (or is not a valid return type) for the method foo\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\"});;", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));", "-\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));", "+\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ ", "+\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0246a59fb1e6959603ac47e8ce28e6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "928d90c3d930147ffd37781c56673795a6f31eb3", "commitAfterChange": "c7679cd484cc416e79c8e4fd2e1a89f930508174", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testCycle4() throws JavaModelException", "signatureAfterChange": " \tpublic void testCycle4() throws JavaModelException", "diff": ["-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_WARNING));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2, 19, 21, CategorizedProblem.CAT_IMPORT),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2, 73, 74, CategorizedProblem.CAT_TYPE),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2, 87, 88, CategorizedProblem.CAT_TYPE),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2, 93, 96, CategorizedProblem.CAT_MEMBER),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2, 19, 21, CategorizedProblem.CAT_IMPORT, IMarker.SEVERITY_ERROR),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2, 73, 74, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"X cannot be resolved to a type\", c2, 87, 88, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2, 93, 96, CategorizedProblem.CAT_MEMBER, IMarker.SEVERITY_ERROR),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_WARNING)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"X cannot be resolved to a type\", c3, 51, 52, CategorizedProblem.CAT_TYPE),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3, 19, 21, CategorizedProblem.CAT_IMPORT),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"X cannot be resolved to a type\", c3, 51, 52, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3, 19, 21, CategorizedProblem.CAT_IMPORT, IMarker.SEVERITY_ERROR),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_WARNING)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_WARNING));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_WARNING));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_WARNING));//$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 3930}