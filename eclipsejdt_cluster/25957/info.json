{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebc91660e3342ec4b958804fa2da1a0c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a5c6a133b1545827d404732c1b7d3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "678bd63c535ed58308236db21b34dad57015766d", "commitAfterChange": "aea2687c86127b817448747104c627048ecdcecb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \tpublic void testBinaryAnnotationType() throws CoreException, IOException", "signatureAfterChange": "\r \tpublic void testBinaryAnnotationType() throws CoreException, IOException", "diff": ["+\t\t\t\t\"@Deprecated\\n\" +\t\t\r", "-\t\t\tASTNode node = buildAST(contents, this.workingCopy);\r", "+\t\t\tASTNode node = buildAST(contents, this.workingCopy, false);\r", "-\t\t\tassertProblemsSize(compilationUnit, 0);\r", "+\t\t\tassertProblemsSize(compilationUnit, 1, \"The type T is deprecated\");\r", "-\t\t\tassertTrue(\"Should be 1\", annotations.length == 1);\r", "+\t\t\tassertTrue(\"Should be 2\", annotations.length == 2);\r", "+\t\t\tassertEquals(\"Annotation mismatch\", \"@Deprecated()\", annotations[1].toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47484e2289291b8d08ca3e0e2f113bf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "aadb2a658581a97e9459691d70634be53e0b7594", "commitAfterChange": "80724a8df94e8e8610a4d46586b0b0c806074736", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \tpublic void testBinaryWithoutGenericSignature() throws CoreException, IOException", "signatureAfterChange": "\r \tpublic void testBinaryWithoutGenericSignature() throws CoreException, IOException", "diff": ["-\t\t\tassertTrue(\"Should be 1\", annotations.length == 1);\r", "-\t\t\tassertEquals(\"Annotation mismatch\", \"@T(value = 29)\", annotations[0].toString());\r", "+\t\t\tassertTrue(\"Should be 0\", annotations.length == 0);\r", "-\t\t\tassertTrue(\"Should be 1\", annotations.length == 1);\r", "-\t\t\tassertEquals(\"Annotation mismatch\", \"@T(value = 9)\", annotations[0].toString());\r", "+\t\t\tassertTrue(\"Should be 0\", annotations.length == 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487c0259efc746372b94f040f20ab4b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " \tpublic void test0223() throws JavaModelException", "signatureAfterChange": " \tpublic void test0223() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, annotations.length);", "+\t\tassertEquals(\"Wrong size\", 1, annotations.length);", "+\t\tassertNotNull(\"No binding\", annotations[0]);", "+\t\tassertEquals(\"LX;.foo()V@LZork;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef15b729b9223a7a4f2654fddbd4b81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void test0281() throws JavaModelException", "signatureAfterChange": " \tpublic void test0281() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong size\", 1, annotations.length);", "+\t\tassertEquals(\"wrong size\", 2, annotations.length);", "+\t\tassertEquals(\"LX;@LInvalid;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());\t\t", "+\t\tassertEquals(\"LX;@Ljava/lang/Deprecated;\", annotations[1].getKey());"]}], "num": 25957}