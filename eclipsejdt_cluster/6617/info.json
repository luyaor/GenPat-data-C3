{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "179cd0ffe245d0eeddc728e2e1bfc8ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510cbe39b07c5e486eda13f99347dc63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t} \telse if (this.actualReceiverType.isArrayType()", "-\t\t\t\t\t\t&& runtimeTimeType.id != TypeIds.T_JavaLangObject", "-\t\t\t\t\t\t&& this.binding.parameters == Binding.NO_PARAMETERS", "-\t\t\t\t\t\t&& scope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_5", "-\t\t\t\t\t\t&& CharOperation.equals(this.binding.selector, TypeConstants.CLONE)) {", "-\t\t\t\t\t// from 1.5 compliant mode on, array#clone() resolves to array type, but codegen to #clone()Object - thus require extra inserted cast", "+\t\t} \telse if (this.binding == scope.environment().arrayClone", "+\t\t\t\t&& runtimeTimeType.id != TypeIds.T_JavaLangObject", "+\t\t\t\t&& scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\t\t// from 1.5 source level on, array#clone() resolves to array type, but codegen to #clone()Object - thus require extra inserted cast"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de9f304d07d9a19a20c8c9bc61f028f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "cc1b983a8e90a6eb8909a42b004cd126e56bf76f", "commitAfterChange": "400176b3d00d9671a0c4aab9bab4779b3ff7bf8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t        this.genericCast = originalBinding.returnType.genericCast(runtimeTimeType);", "+\t\t        this.valueCast = originalBinding.returnType.genericCast(runtimeTimeType);", "-\t\t} \t", "+\t\t} \telse if (this.actualReceiverType.isArrayType() ", "+\t\t\t\t\t\t&& this.binding.parameters == NoParameters ", "+\t\t\t\t\t\t&& scope.environment().options.complianceLevel >= JDK1_5 ", "+\t\t\t\t\t\t&& CharOperation.equals(this.binding.selector, CLONE)) {", "+\t\t\t\t\t// from 1.5 compliant mode on, array#clone() resolves to array type, but codegen to #clone()Object - thus require extra inserted cast", "+\t\t\tthis.valueCast = runtimeTimeType;\t\t\t", "+\t\t}"]}], "num": 6617}