{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bddb54f5b33a3e41fe5d5b0d633ea0b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "286bb2dd4ac48d984261e14a2533455f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "27cb685729108897cfc0c97dcf65ad20a5140572", "commitAfterChange": "65936b8e636fbd883761d22121fcd803835f1ea5", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic final TypeBinding getType(char[][] compoundName, int typeNameLength)", "signatureAfterChange": " \tpublic final TypeBinding getType(char[][] compoundName, int typeNameLength)", "diff": ["+\t\t\tif (binding instanceof PackageBinding) {", "+\t\t\t\tchar[][] qName = new char[][] { compoundName[0] };", "+\t\t\t\treturn new ProblemReferenceBinding(", "+\t\t\t\t\t\tqName,", "+\t\t\t\t\t\tenvironment().createMissingType(null, qName),", "+\t\t\t\t\t\tProblemReasons.NotFound);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e13d6fbca91e39150c875de73c0e513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic final Binding getPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getPackage(char[][] compoundName)", "diff": ["-\t\tcompilationUnitScope().recordQualifiedReference(compoundName);", "-\t\tBinding binding = getTypeOrPackage(compoundName[0], Binding.TYPE | Binding.PACKAGE);", "-\t\tif (binding == null)", "-\t\t\treturn new ProblemReferenceBinding(compoundName[0], null, ProblemReasons.NotFound);", "-\t\tif (!binding.isValidBinding())", "+ \t\tcompilationUnitScope().recordQualifiedReference(compoundName);", "+\t\tBinding binding = getTypeOrPackage(compoundName[0], Binding.TYPE | Binding.PACKAGE, true);", "+\t\tif (binding == null) {", "+\t\t\tchar[][] qName = new char[][] { compoundName[0] };", "+\t\t\treturn new ProblemReferenceBinding(qName, environment().createMissingType(null, compoundName), ProblemReasons.NotFound);", "+\t\t}", "+\t\tif (!binding.isValidBinding()) {", "+\t\t\tif (binding instanceof PackageBinding) { /* missing package */", "+\t\t\t\tchar[][] qName = new char[][] { compoundName[0] };", "+\t\t\t\treturn new ProblemReferenceBinding(qName, null /* no closest match since search for pkg*/, ProblemReasons.NotFound);", "+\t\t\t}", "-", "+\t\t}", "-\t\tint currentIndex = 1;", "+\t\tint currentIndex = 1, length = compoundName.length;", "-\t\twhile (currentIndex < compoundName.length) {", "+\t\twhile (currentIndex < length) {", "-\t\t\tif (binding == null)", "-\t\t\t\treturn new ProblemReferenceBinding(", "-\t\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex),", "-\t\t\t\t\tnull, ", "-\t\t\t\t\tProblemReasons.NotFound);", "+\t\t\tif (binding == null) {", "+\t\t\t\treturn new ProblemReferenceBinding(CharOperation.subarray(compoundName, 0, currentIndex), null /* no closest match since search for pkg*/, ProblemReasons.NotFound);", "+\t\t\t}", "-\t\t\t\t\tbinding instanceof ReferenceBinding ? ((ReferenceBinding)binding).closestMatch() : null,", "+\t\t\t\t\tbinding instanceof ReferenceBinding ? (ReferenceBinding)((ReferenceBinding)binding).closestMatch() : null,", "-\t\treturn new ProblemReferenceBinding(compoundName, null, ProblemReasons.NotFound);", "+\t\treturn new ProblemReferenceBinding(compoundName, null /* no closest match since search for pkg*/, ProblemReasons.NotFound);"]}], "num": 50947}