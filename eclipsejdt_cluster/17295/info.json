{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65ff39e4fd3df14ac6413136ff78a568", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08fa2a01c25b08b54425b1adb9567657", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "e56e767173dc5b5ba970e3e7ca9256e9541ebffc", "commitAfterChange": "071c3a7154f042f1dac67e366b91c1f1b510f2e9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Object createArgumentReference(char[] name, int dim, boolean isVarargs, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createArgumentReference(char[] name, int dim, boolean isVarargs, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "diff": ["-//\t\t\t\tif (dim > 0) {", "-//\t\t\t\t\targType = this.ast.newArrayType(argType, dim);", "-//\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPositions[dim-1])-argStart+1);", "-//\t\t\t\t}", "-\t\t\t\tfor (int i=0; i<dim; i++) {", "-\t\t\t\t\targType = this.ast.newArrayType(argType);", "-\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPositions[i])-argStart+1);", "+\t\t\t\tif (this.ast.apiLevel <= AST.JLS4_INTERNAL) {", "+\t\t\t\t\tfor (int i=0; i<dim; i++) {", "+\t\t\t\t\t\targType = this.ast.newArrayType(argType);", "+\t\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPositions[i])-argStart+1);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tArrayType argArrayType = this.ast.newArrayType(argType, 0);", "+\t\t\t\t\targType = argArrayType;", "+\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPositions[dim-1])-argStart+1);", "+\t\t\t\t\tfor (int i=0; i<dim; i++) {", "+\t\t\t\t\t\tDimension dimension = this.ast.newDimension();", "+\t\t\t\t\t\tint dimStart = (int) (dimPositions[i] >>> 32);", "+\t\t\t\t\t\tint dimEnd = (int) dimPositions[i];", "+\t\t\t\t\t\tdimension.setSourceRange(dimStart, dimEnd-dimStart+1);", "+\t\t\t\t\t\targArrayType.dimensions().add(dimension);", "+\t\t\t\t\t}", "+\t\t\targument.setVarargs(isVarargs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8debf3a810e41636b2a3fae278bf754d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "7b4fdf4780132144ccc7c2e7370ef3841befc3d9", "commitAfterChange": "6a5ede81dc60cc482d4fde0564e95e20c9055fee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long dimPos, long argNamePos) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "diff": ["-\tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long dimPos, long argNamePos) throws InvalidInputException {", "+\tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException {", "-\t\t\tif (dimPos >= 0) argEnd = (int) dimPos;", "+\t\t\tif (dim > 0) argEnd = (int) dimPositions[dim-1];", "-\t\t\t\tif (dim > 0) {", "-\t\t\t\t\targType = this.ast.newArrayType(argType, dim);", "-\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPos)-argStart+1);", "-\t\t\t\t}", "+//\t\t\t\tif (dim > 0) {", "+//\t\t\t\t\targType = this.ast.newArrayType(argType, dim);", "+//\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPositions[dim-1])-argStart+1);", "+//\t\t\t\t}", "-\t\t\t\tif (dim > 0) {", "-\t\t\t\t\targType = this.ast.newArrayType(argType, dim);", "-\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPos)-argStart+1);", "-\t\t\t\t} else {", "-\t\t\t\t\targType.setSourceRange(argStart, node.getLength());", "+\t\t\t\targType.setSourceRange(argStart, node.getLength());", "+\t\t\t}", "+\t\t\tif (dim > 0) {", "+\t\t\t\tfor (int i=0; i<dim; i++) {", "+\t\t\t\t\targType = this.ast.newArrayType(argType);", "+\t\t\t\t\targType.setSourceRange(argStart, ((int) dimPositions[i])-argStart+1);"]}], "num": 17295}