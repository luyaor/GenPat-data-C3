{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1dd74af7772a2933bec449a78405f383", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "364f3d87b738df34b6f432da6aefaaae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, IFile file,  \t\t\tICompilationUnit compilationUnit )", "signatureAfterChange": " \t\t \tprivate static APTResult runAPT(final List<AnnotationProcessorFactory> factories, \t\t\tIJavaProject javaProj, \t\t\tIFile[] files, \t\t\tICompilationUnit compilationUnit, \t\t\tboolean isFullBuild)", "diff": ["-\t\t\tIJavaProject javaProj, IFile file, ", "-\t\t\tICompilationUnit compilationUnit )", "-\t{", "-\t\t", "+\t\t\tIJavaProject javaProj,", "+\t\t\tIFile[] files,", "+\t\t\tICompilationUnit compilationUnit,", "+\t\t\tboolean isFullBuild)", "+\t{\t", "+", "+\t\tassert ( files != null && compilationUnit == null ) ||", "+\t\t       ( files == null && compilationUnit != null ) :", "+\t    \t\"either compilation unit is null or set of files is, but not both\"; //$NON-NLS-1$", "+\t    ", "-\t\tif ( file != null )", "+\t\tif ( files != null )", "-\t\t\t runnable = new APTDispatchRunnable( file, javaProj, factories );", "+\t\t\t runnable = new APTDispatchRunnable( files, javaProj, factories, isFullBuild );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77ff51e216c80662d0c3b19c5c749ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          private ProcessorEnvImpl(     \t\tfinal CompilationUnit astCompilationUnit,     \t\tfinal ICompilationUnit compilationUnit,     \t\tfinal IFile file,     \t\tfinal IJavaProject javaProj,     \t\tfinal Phase phase)", "signatureAfterChange": "     private ProcessorEnvImpl(     \t\tfinal CompilationUnit astCompilationUnit,     \t\tfinal ICompilationUnit compilationUnit,     \t\tfinal IJavaProject javaProj )", "diff": ["+     */", "-    \t\tfinal IFile file,", "-    \t\tfinal IJavaProject javaProj,", "-    \t\tfinal Phase phase)", "+    \t\tfinal IJavaProject javaProj )", "-    \tsuper(  astCompilationUnit, file, javaProj, phase );", "-    \t", "-    \t// if we are in reconcile, compilationUnit will be valid", "-\t\t// if we are in build, file will not be null & compilationUnit will be", "-\t\t// null", "-    \tassert( (phase == Phase.RECONCILE && compilationUnit != null) || ", "-    \t\t\t(phase == Phase.BUILD && compilationUnit == null && file != null ) ) :", "-    \t\t\t\"Unexpected phase value \" + phase ; //$NON-NLS-1$", "-\t\t\t   ", "+    \tsuper(  astCompilationUnit, (IFile)compilationUnit.getResource(), javaProj, Phase.RECONCILE );", "+   "]}], "num": 64345}