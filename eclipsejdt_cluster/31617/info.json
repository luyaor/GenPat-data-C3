{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ab941729b1c7830c3c8609f9f560891", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3385c768e0de7e4bb2cb2852b6e3fc82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "344f41e4f3a0936f3d1a8dc22956abcf4bca93c4", "commitAfterChange": "2749db90d9b59a49ba8d955d8eddabda9be1d8ee", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tstatic boolean typeParametersMentioned(TypeBinding upperBound)", "signatureAfterChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope, boolean replaceWildcards)", "diff": ["+\t\treturn getSingleAbstractMethod(scope, replaceWildcards, -1 /* do not capture */);", "+\t}\t", "-\t}", "-\tstatic boolean typeParametersMentioned(TypeBinding upperBound) {", "-\t\tclass MentionListener extends TypeBindingVisitor {", "-\t\t\tprivate boolean typeParametersMentioned = false;", "-\t\t\tpublic boolean visit(TypeVariableBinding typeVariable) {", "-\t\t\t\tthis.typeParametersMentioned = true;", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t\tpublic boolean typeParametersMentioned() {", "-\t\t\t\treturn this.typeParametersMentioned;", "-\t\t\t}", "-\t\t}", "-\t\tMentionListener mentionListener = new MentionListener();", "-\t\tTypeBindingVisitor.visit(mentionListener, upperBound);", "-\t\treturn mentionListener.typeParametersMentioned();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fde9fa9be6a056925ea9ff566173a78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "146009e38675deb85b2aa23f66e92f2f13172cf7", "commitAfterChange": "08b9d40dde0b005b87b207f8d02b5899cde7b397", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tprivate boolean typeParametersMentioned(TypeBinding upperBound)", "signatureAfterChange": "  \tprivate boolean typeParametersMentioned(TypeBinding upperBound)", "diff": ["-\t\tclass MentionListener implements Substitution {", "+\t\tclass MentionListener extends TypeBindingVisitor {", "-\t\t\tpublic TypeBinding substitute(TypeVariableBinding typeVariable) {", "+\t\t\tpublic boolean visit(TypeVariableBinding typeVariable) {", "-\t\t\t\treturn typeVariable;", "-\t\t\t}", "-\t\t\tpublic boolean isRawSubstitution() {", "-\t\t\t}", "-\t\t\tpublic LookupEnvironment environment() {", "-\t\t\t\treturn null;", "-\t\tScope.substitute(mentionListener, upperBound);", "+\t\tTypeBindingVisitor.visit(mentionListener, upperBound);"]}], "num": 31617}