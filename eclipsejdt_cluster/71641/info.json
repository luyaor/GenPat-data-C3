{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e27d9229dfb3c17e899929d7c76e8640", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02765ff613b86ac38d31c0ecd420db05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "b02ef903578f41e659cbb04f9863bd51747ead57", "commitAfterChange": "8705ef991c725584b4e12ac387833b82c80cbc08", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "signatureAfterChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "diff": ["-\t\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "-\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "-\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t\ttry {", "+\t\t\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "+\t\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "+\t\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t\t} catch(JavaModelException e) {", "+\t\t\t\t// simple project may not find its namelookup, simply ignore working copies (41583)", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2885eb9779307bf8d79e21ec07fafcd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "da0b64a41a819b0bc05baa0b849f027f121c825e", "commitAfterChange": "2b7552f783a2d4bb0c0a1609551da2b723f5860d", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "signatureAfterChange": " public void reconcile( \tboolean forceProblemDetection, \tWorkingCopyOwner workingCopyOwner, \tIProgressMonitor monitor) \tthrows JavaModelException", "diff": ["-\t\t// set the units to look inside", "-\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "-\t\tlookup.setUnitsToLookInside(workingCopies);", "-\t\t\t", "+\t\t// set the units to look inside only for problem detection purpose", "+\t\tif (forceProblemDetection) {", "+\t\t\tlookup = ((JavaProject)getJavaProject()).getNameLookup();", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(workingCopyOwner, true/*add primary WCs*/);", "+\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t}\t\t\t"]}], "num": 71641}