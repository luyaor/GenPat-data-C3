{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73d5e64335637e9a2abb520b9bb6c9c8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "498ed481c2e88387fe400e32d77ed237", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void generateCode( \tBlockScope currentScope, \tCodeStream codeStream, \tboolean valueRequired)", "signatureAfterChange": " public void generateCode( \tBlockScope currentScope, \tCodeStream codeStream, \tboolean valueRequired)", "diff": ["-\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForMethod(currentScope, this.codegenBinding);", "+\t\tcodeStream.generateEmulationForMethod(currentScope, this.codegenBinding);", "-\t\t\t\t\t((CodeSnippetCodeStream)codeStream).generateObjectWrapperForType(this.codegenBinding.parameters[i]);", "+\t\t\t\t\tcodeStream.generateBoxingConversion(this.codegenBinding.parameters[i].id);", "-\t\t((CodeSnippetCodeStream) codeStream).invokeJavaLangReflectMethodInvoke();", "+\t\tcodeStream.invokeJavaLangReflectMethodInvoke();", "-\t\t\t((CodeSnippetCodeStream) codeStream).checkcast(typeID);", "-\t\t\t((CodeSnippetCodeStream) codeStream).getBaseTypeValue(typeID);", "+\t\t\tcodeStream.checkcast(typeID);", "+\t\t\tcodeStream.getBaseTypeValue(typeID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d62524a11e287a9d3189061b9ae264c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateFieldOperation.java", "commitBeforeChange": "154403d9b42c72ef31e9dc43545fd6b8f16a058f", "commitAfterChange": "456c7f1af21c7eba23e1f560631579124d9a2526", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " private String getASTNodeName()", "signatureAfterChange": " private String getASTNodeName()", "diff": ["-\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) ((FieldDeclaration) this.createdNode).fragments().iterator().next();", "-\treturn fragment.getName().getIdentifier();", "+\tif (this.alteredName != null) return this.alteredName;", "+\treturn getFragment(this.createdNode).getName().getIdentifier();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf5038f2aa7706488293651f59ba8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "a988dc73f53d4add2180387d81f149877a8b4c63", "commitAfterChange": "6fb420f4d7a216f10014ac4101f8e86fb679967f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testExternalJarChanged6() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged6() throws CoreException, IOException", "diff": ["-\t\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"\"}, \"\");", "-\t\t", "-\t\tsetClasspath(project, new IClasspathEntry[]{JavaCore.newLibraryEntry(new Path(pPath), null, null)});", "-\t\t", "+\t\tcreateJavaProject(\"P\", new String[] {\"\"}, new String[] {\"JCL_LIB\", pPath}, \"\");", "+\t\tcreateFile(\"/P/X.java\", \"public class X{}\");", "+\t\tgetWorkspace().build(IncrementalProjectBuilder.FULL_BUILD, null);"]}], "num": 13044}