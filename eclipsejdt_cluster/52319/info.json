{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d45e8ce2e6cdcd746993b8246d96afd1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c384b3cfd05e5c0153da458e1799dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "              private ProcessorEnvImpl( IFile file, IJavaProject javaProj, Phase phase )", "signatureAfterChange": "              private ProcessorEnvImpl( IFile file, IJavaProject javaProj, Phase phase )", "diff": ["-\t\tASTParser p = ASTParser.newParser( AST.JLS3 );", "-\t\tp.setSource( _source );", "-\t\tp.setResolveBindings( true );", "-\t\tp.setProject( javaProj );", "-\t\tp.setUnitName( file.getProjectRelativePath().toString() );", "-\t\tp.setFocalPosition( 0 );", "-\t\tp.setKind( ASTParser.K_COMPILATION_UNIT );", "-\t\tASTNode node = p.createAST( null );", "+\t\tString unitName = file.getProjectRelativePath().toString();", "+\t\tASTNode node = createDietAST( unitName, javaProj, null, _source );", "+\t\tinitPrimitives(_javaProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f83a0568cdec877643e7066a98aacca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic CompilationUnit getAST()", "signatureAfterChange": " \tpublic CompilationUnit getAST()", "diff": ["-\t\tif( _compilationUnit != null )", "-\t\t{", "-\t\t\tfinal ASTParser parser =  ASTParser.newParser(AST.JLS3);", "-            parser.setResolveBindings(false);", "-            parser.setSource(_compilationUnit);", "-            CompilationUnit resultUnit = (CompilationUnit)parser.createAST(null);", "-            return resultUnit;", "-\t\t}", "-\t\telse{", "-\t\t\t// this is a fully-flushed out DOM/AST unlike the one that's current in the environment.", "-\t\t\t// also this copy will not contain any binding information nor pointers to java element.", "-\t\t\tASTParser p = ASTParser.newParser( AST.JLS3 );", "-\t\t\tp.setSource( _curSource );", "-\t\t\tp.setResolveBindings( false );", "-\t\t\tp.setProject( _javaProject );", "-\t\t\tp.setUnitName( _files[0].getProjectRelativePath().toString() );", "-\t\t\tp.setKind( ASTParser.K_COMPILATION_UNIT );", "-\t\t\tASTNode node = p.createAST( null );", "-\t\t\treturn (CompilationUnit)node;", "-\t\t}", "+\t\tfinal ASTParser parser =  ASTParser.newParser(AST.JLS3);", "+        parser.setResolveBindings(false);", "+        parser.setSource(_unit);", "+        CompilationUnit resultUnit = (CompilationUnit)parser.createAST(null);", "+        return resultUnit;"]}], "num": 52319}