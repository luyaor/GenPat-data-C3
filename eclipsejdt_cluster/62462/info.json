{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ff678e2a24f674e077bf27614927e87", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13363be274ec1f69f0b69add0e1569ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c8a2939446a95f9a322e1a05c00fbcc6a0bbf68a", "commitAfterChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "signatureAfterChange": "  \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "diff": ["-\t\t\tresolveType(this.enclosingScope);", "+\t\t\tthis.binding = this.declarationPerTargetType != null ? this.declarationPerTargetType.get(left) : null;", "+\t\t\tif (this.binding == null) {", "+\t\t\t\tresolveType(this.enclosingScope);", "+\t\t\t\tregisterResult(left, this.binding);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538b090054fcf80d9383be003aeafb73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c8a2939446a95f9a322e1a05c00fbcc6a0bbf68a", "commitAfterChange": "83b433cefe204b4efddb34a5fec23235369a79e2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic MethodBinding findCompileTimeMethodTargeting(TypeBinding targetType, Scope scope)", "signatureAfterChange": " \tpublic MethodBinding findCompileTimeMethodTargeting(TypeBinding targetType, Scope scope)", "diff": ["-\t\tMethodBinding targetMethod = internalResolveTentatively(targetType, scope);", "+\t\tMethodBinding targetMethod = this.declarationPerTargetType != null ? this.declarationPerTargetType.get(targetType) : null;", "+\t\tif (targetMethod == null) {", "+\t\t\ttargetMethod = internalResolveTentatively(targetType, scope);", "+\t\t\tregisterResult(targetType, targetMethod);", "+\t\t}", "+\t}"]}], "num": 62462}