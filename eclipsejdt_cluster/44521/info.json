{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "edc41ed82be6fdd66fc9caa30bd62afc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7546e65b760ce7fa37efcc035430768", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "af5208ad650bb16626635d58b15cab85ed3b6304", "commitAfterChange": "45055dc97c3da6c433b9c6b3534e9f01054887be", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "diff": ["+\t\t} else if (focus.isBinary()) {", "+\t\t\t// may have been resolved indirectly, should then be in type cache", "+\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "+\t\t\tthis.focusType = this.lookupEnvironment.getCachedType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\tif (this.focusType == null) return;", "-\tfor (int current = typeIndex; current >= 0; current--) {", "-\t\tReferenceBinding typeBinding = typeBindings[current];", "+\tfor (int current = this.typeIndex; current >= 0; current--) {", "+\t\tReferenceBinding typeBinding = this.typeBindings[current];", "-\t\tIGenericType suppliedType = typeModels[current];", "+\t\tIGenericType suppliedType = this.typeModels[current];", "-\t\trequestor.connect(suppliedType, superclass, superinterfaces);", "+\t\tthis.requestor.connect(suppliedType, superclass, superinterfaces);", "-\t\trequestor.connect(typeModels[objectIndex], null, null);", "+\t\tthis.requestor.connect(this.typeModels[objectIndex], null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e601ab7ac29609ea5b411bc6d138d576", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "ee6e442281c6adfce6f28a674af1fb9f7f9d707f", "commitAfterChange": "9d88e07972fdc72c8f68cd0cc8f036c691b75fb7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 11, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, ReferenceBinding binaryTypeBinding)", "diff": ["-\t\tIGenericType superclass;", "+\t\tIType superclass;", "-\t\tIGenericType[] superinterfaces = findSuperInterfaces(suppliedType, typeBinding);", "+\t\tIType[] superinterfaces = findSuperInterfaces(suppliedType, typeBinding);", "-\t\tthis.requestor.connect(suppliedType, superclass, superinterfaces);", "+\t\tthis.builder.connect(suppliedType, this.builder.getHandle(suppliedType, typeBinding), superclass, superinterfaces);", "-\t\tthis.requestor.connect(this.typeModels[objectIndex], null, null);", "+\t\tIGenericType objectType = this.typeModels[objectIndex];", "+\t\tthis.builder.connect(objectType, this.builder.getHandle(objectType, this.typeBindings[objectIndex]), null, null);"]}], "num": 44521}