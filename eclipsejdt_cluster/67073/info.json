{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87ba8e62001173aedefe2d3b825d1c32", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5455020c8857f5606e088275db2d7de6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "8165ce534efddbff7578af3af8689c03385c50b5", "commitAfterChange": "ae455b16806075978c0403a2b0c1c423d59619c5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " @Override protected boolean invokeCompiler( \t\tPrintWriter out,  \t\tPrintWriter err, \t\tObject extraArguments, \t\tTestCompilationProgress compilationProgress)", "signatureAfterChange": " @Override protected boolean invokeCompiler( \t\tPrintWriter out,  \t\tPrintWriter err, \t\tObject extraArguments, \t\tTestCompilationProgress compilationProgress)", "diff": ["-\tCompilationTask task = COMPILER.getTask(out, manager, null, arguments.options, null, manager.getJavaFileObjectsFromFiles(files));", "-//\tassertTrue(\"Has no location CLASS_OUPUT\", manager.hasLocation(StandardLocation.CLASS_OUTPUT));", "+\tCompilationTask task = COMPILER.getTask(out, arguments.standardJavaFileManager /* carry the null over */, null, arguments.options, null, manager.getJavaFileObjectsFromFiles(files));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0ef7a34542e265b6736242f911182b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " public void generateSyntheticBodyForSwitchTable(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " public void generateSyntheticBodyForSwitchTable(SyntheticMethodBinding methodBinding)", "diff": ["-\tthis.newarray(INT_ARRAY);", "+\tthis.newarray(ClassFileConstants.INT_ARRAY);", "-\t\t\tif ((fieldBinding.getAccessFlags() & IConstants.AccEnum) != 0) {", "+\t\t\tif ((fieldBinding.getAccessFlags() & ClassFileConstants.AccEnum) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c3b1a1ad1b3e0b1b59e75525756cdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "31e3c66a70e3c9b69b47c38f0b44d65cff7cbfa3", "commitAfterChange": "09d36d761ce96d68639981e72856240cb8764441", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator)", "diff": ["-\t\tPublicScanner scanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, assertMode /*assert*/, null/*taskTags*/, null/*taskPriorities*/);", "+\t\tPublicScanner scanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, CompilerOptions.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/);"]}], "num": 67073}