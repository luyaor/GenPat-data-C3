{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8c5b30c9538dc85db032a0471efcf29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "084458570fc4b7516bfd8c4a369a33c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " public void test401610b()", "signatureAfterChange": " public void test401610b()", "diff": ["+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((<no type> s) -> {\\n\" + ", "+\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\t\t\"\tnew X().foo((s)->{});\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7f92c2f7cd1441827e9bafdbed36e0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "e1b169e81e77457e606284ca99eb647f32044188", "commitAfterChange": "3aabc067e22084d59ef0ea59b0d58e1085dede4c", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void test401610e()", "signatureAfterChange": " public void test401610e()", "diff": ["+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method foo(I<T>) in the type X is not applicable for the arguments (() -> {\\n\" + ", "+\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tnew X().foo(()->{});\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d903c6e98935f34e0dbe67521c00ead2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " public void test401610j()", "signatureAfterChange": " public void test401610j()", "diff": ["+\t\t\t\t\"\tnew X().foo((Object o)->{});\\n\" + ", "+\t\t\t\t\"\t        ^^^\\n\" + ", "+\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments ((Object o) -> {\\n\" + ", "+\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + "]}], "num": 14094}