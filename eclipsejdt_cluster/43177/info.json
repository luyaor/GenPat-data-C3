{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00670e0b778856cd18aa4273df920eae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091ebf7ad6074abd85bbedf3c75025a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "48e449a88ed4eefd5f8296dac2a0baf220bc173a", "commitAfterChange": "0d4007eb15023a950a5e732906ce998c79797847", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords);", "+\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false);", "-\t\t\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.THIS});", "+\t\t\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.THIS}, false);", "-\t\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW});", "+\t\t\t\t\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), keyword.canCompleteEmptyToken());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92883f12e062917523bb7e9bdd02f54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b862c893c26e8ad45efc26cefb89d9ed8b8bc795", "commitAfterChange": "a41dabb1394f93c450316730395779f5d0c3b158", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false);", "+\t\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false);", "+\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.THIS}, false);", "+\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.THIS}, false, true);", "+\t\t\t\t\t\trelevance += R_NON_INHERITED;", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tfalse,", "-\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false);", "+\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false, false);", "-\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), keyword.canCompleteEmptyToken());", "+\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), keyword.canCompleteEmptyToken(), false);", "+\t\t\t\t\tfalse,", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\tfalse,"]}], "num": 43177}