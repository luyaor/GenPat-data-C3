{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01515aa651c0c6ecc905fe6b86a1847a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf1fe4b19a7ccd0821de580be1c73e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "251fbf709efe427d144bcd0a0cbb3291090fe980", "commitAfterChange": "66e2d532a5e86774022953474413e0340a221860", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["-\t\tthis.elementVariable.print(0, output); ", "+\t\tprintModifiers(this.elementVariable.modifiers, output);", "+\t\tfinal Annotation[] annotations = this.elementVariable.annotations;", "+\t\tif (annotations != null) printAnnotations(annotations, output);", "+\t\t", "+\t\tfinal TypeReference type = this.elementVariable.type;", "+\t\tif (type != null) {", "+\t\t\ttype.print(0, output).append(' ');", "+\t\t}", "+\t\toutput.append(this.elementVariable.name); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e6eaa30dfbe2332e13aaf41bfcd8b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "356c348244bc653a73440d2fbd338cee3e8ce27c", "commitAfterChange": "da7c8d032f061e94c1c38b80f6bb7e201d162f51", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["-\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "-\t\tprintIndent(tab, output).append(\"for (\"); //$NON-NLS-1$", "-\t\tprintModifiers(this.elementVariable.modifiers, output);", "-\t\tfinal Annotation[] annotations = this.elementVariable.annotations;", "-\t\tif (annotations != null) printAnnotations(annotations, output);", "-\t\t", "-\t\tfinal TypeReference type = this.elementVariable.type;", "-\t\tif (type != null) {", "-\t\t\ttype.print(0, output).append(' ');", "-\t\t}", "-\t\toutput.append(this.elementVariable.name); ", "+\t\tprintIndent(indent, output).append(\"for (\"); //$NON-NLS-1$", "+\t\tthis.elementVariable.printAsExpression(0, output); ", "-\t\t\tthis.action.printStatement(tab + 1, output);", "+\t\t\tthis.action.printStatement(indent + 1, output);"]}], "num": 24051}