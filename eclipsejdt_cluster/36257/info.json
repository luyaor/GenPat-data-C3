{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0be7bec3b771a10d64c7c988644942a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426fd9429883cde985d30aff402984e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "28a0f94188bd26e1014d346f5919c1c6d87c7904", "commitAfterChange": "8a2a28b44267beff0fdfbe7d6582425d224ea02d", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(LambdaExpression node)", "diff": ["+\t */", "+\tpublic boolean visit(LambdaExpression node) {", "+\t\tboolean hasParentheses = getBooleanAttribute(node, LambdaExpression.PARENTHESES_PROPERTY);", "+\t\tif (!hasParentheses) {", "+\t\t\tList parameters = getChildList(node, LambdaExpression.PARAMETERS_PROPERTY);", "+\t\t\thasParentheses = !(parameters.size() == 1 && parameters.get(0) instanceof VariableDeclarationFragment);", "+\t\t}", "+", "+\t\tif (hasParentheses)", "+\t\t\tthis.result.append('(');", "+\t\tvisitList(node, LambdaExpression.PARAMETERS_PROPERTY, String.valueOf(','));", "+\t\tif (hasParentheses)", "+\t\t\tthis.result.append(')');", "+\t\tthis.result.append(\"->\"); //$NON-NLS-1$", "+\t\tgetChildNode(node, LambdaExpression.BODY_PROPERTY).accept(this);", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40c185269544ca58818726fd59e4240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic void printStats()", "signatureAfterChange": "  \t\tpublic void printStats(Main main)", "diff": ["+", "+\t\tpublic void printStats(Main main) {", "+\t\t\tfinal boolean isTimed = main.timing;", "+\t\t\tif (isXml) {", "+\t\t\t\tthis.printTag(STATS, null, true, false);", "+\t\t\t}", "+\t\t\tif (isTimed) {", "+\t\t\t\tlong time = System.currentTimeMillis() - main.startTime;", "+\t\t\t\tthis.logTiming(time, main.lineCount);", "+\t\t\t}", "+\t\t\tif (main.globalProblemsCount > 0) {", "+\t\t\t\tthis.logProblemsSummary(main.globalProblemsCount, main.globalErrorsCount, main.globalWarningsCount);", "+\t\t\t}", "+\t\t\tif (main.exportedClassFilesCounter != 0", "+\t\t\t\t\t&& (main.showProgress || isTimed || main.verbose)) {", "+\t\t\t\tthis.logNumberOfClassFilesGenerated(main.exportedClassFilesCounter);", "+\t\t\t}", "+\t\t\tif (isXml) {", "+\t\t\t\tthis.endTag(STATS);", "+\t\t\t}", "+\t\t}", "-\tpublic void printStats() {", "-\t\tif (this.timing) {", "-", "-\t\t\tlong time = System.currentTimeMillis() - this.startTime;", "-\t\t\tif (this.lineCount != 0) {", "-\t\t\t\tthis.logger.printlnOut(", "-\t\t\t\t\tMain.bind(", "-\t\t\t\t\t\t\"compile.instantTime\", \t//$NON-NLS-1$", "-\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\tString.valueOf(this.lineCount),", "-\t\t\t\t\t\t\tString.valueOf(time),", "-\t\t\t\t\t\t\tString.valueOf(((int)(this.lineCount * 10000.0 / time)) / 10.0)}));", "-\t\t\t} else {", "-\t\t\t\tthis.logger.printlnOut(Main.bind(\"compile.totalTime\", String.valueOf(time))); //$NON-NLS-1$", "-\t\t\t}", "-\t\t}", "-\t\tif (this.globalProblemsCount > 0) {", "-\t\t\tif (this.globalProblemsCount == 1) {", "-\t\t\t\tthis.logger.printErr(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tthis.logger.printErr(", "-\t\t\t\t\tMain.bind(\"compile.severalProblems\", String.valueOf(this.globalProblemsCount))); \t//$NON-NLS-1$", "-\t\t\t}", "-\t\t\tthis.logger.printErr(\" (\"); //$NON-NLS-1$", "-\t\t\tif (this.globalErrorsCount > 0) {", "-\t\t\t\tif (this.globalErrorsCount == 1) {", "-\t\t\t\t\tthis.logger.printErr(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.logger.printErr(", "-\t\t\t\t\t\tMain.bind(\"compile.severalErrors\", String.valueOf(this.globalErrorsCount))); \t//$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (this.globalWarningsCount > 0) {", "-\t\t\t\tif (this.globalErrorsCount > 0) {", "-\t\t\t\t\tthis.logger.printErr(\", \"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tif (this.globalWarningsCount == 1) {", "-\t\t\t\t\tthis.logger.printErr(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.logger.printErr(", "-\t\t\t\t\t\tMain.bind(\"compile.severalWarnings\", String.valueOf(this.globalWarningsCount))); \t//$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tthis.logger.printlnErr(\")\"); //$NON-NLS-1$", "-\t\t}", "-\t\tif (this.exportedClassFilesCounter != 0", "-\t\t\t&& (this.showProgress || this.timing || this.verbose)) {", "-\t\t\tif (this.exportedClassFilesCounter == 1) {", "-\t\t\t\tthis.logger.printlnOut(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tthis.logger.printlnOut(", "-\t\t\t\t\tMain.bind(", "-\t\t\t\t\t\t\"compile.severalClassFilesGenerated\", //$NON-NLS-1$", "-\t\t\t\t\t\tString.valueOf(this.exportedClassFilesCounter)));", "-\t\t\t}", "-\t\t}", "-\t}"]}], "num": 36257}