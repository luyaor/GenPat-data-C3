{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1018fb69e536e3a03c48968ec7361a9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d8be1cba4241bcbc9f2fc6a7a7fcea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "commitAfterChange": "6ac711ffe783cf5d3cc0858a241df9f5f87b2270", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public char[] getCurrentIdentifierSource()", "signatureAfterChange": " public char[] getCurrentIdentifierSource()", "diff": ["-\t\t\t\tSystem.arraycopy(this.withoutUnicodeBuffer, 1, this.completionIdentifier = new char[this.withoutUnicodePtr], 0, this.withoutUnicodePtr);", "+\t\t\t\tint length = this.cursorLocation + 1 - this.startPosition - this.unicodeCharSize;", "+\t\t\t\tSystem.arraycopy(this.withoutUnicodeBuffer, 1, this.completionIdentifier = new char[length], 0, length);", "-\t\t\t\tint length = this.cursorLocation + 1 - this.startPosition;", "+\t\t\t\tint length = this.cursorLocation + 1 - this.startPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2c220d20f74833bf3be9c33b51b197", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "commitAfterChange": "92aee8d421610703027ca2a5b652beed8fbe4ac3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " private int indexOf(String path, String containerPath)", "signatureAfterChange": " private int indexOf(String relativePath, String containerPath)", "diff": ["-private int indexOf(String path, String containerPath) {", "+private int indexOf(String relativePath, String containerPath) {", "-\t\t\t\tif (encloses(scopePath, path, index))", "+\t\t\t\tif (encloses(scopePath, relativePath, index))", "-\t// fallback to sequentially look at all known paths", "+\t// fallback to sequentially looking at all known paths", "-\t\tif (encloses(scopePath, path, i))", "+\t\tif (encloses(this.containerPaths[i] + '/' + scopePath, relativePath, i))"]}], "num": 17035}