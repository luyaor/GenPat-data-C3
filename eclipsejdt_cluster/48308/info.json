{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f1f76e9b466500d3b9f6cf9557a2f74", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0f62df113056728070648e272919c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "2f5fd18c93661c661012397a8eb704f52a56558d", "commitAfterChange": "fd531574b2a6f97d82d8f471b03b71c3b724b614", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testLocalMethodDeclaration2() throws JavaModelException", "signatureAfterChange": " public void testMethodDeclarationInAnonymous3() throws JavaModelException", "diff": ["- */", "-public void testLocalMethodDeclaration2() throws JavaModelException {", "-\tif (!CompilationUnit.USE_LOCAL_ELEMENTS) return;", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveLocalMethodDeclaration2.java\");", "-\tIJavaElement[] elements = codeSelect(cu, \"selectMe(\", \"selectMe\");", "-\tassertElementsEqual(", "-\t\t\"Unexpected elements\",", "-\t\t\"selectMe() [in <anonymous #1> [in bar() [in <anonymous #1> [in foo() [in ResolveLocalMethodDeclaration2 [in ResolveLocalMethodDeclaration2.java [in <default> [in src [in Resolve]]]]]]]]]\",", "-\t\telements", "-\t);", "-}", "+ */", "+public void testMethodDeclarationInAnonymous3() throws JavaModelException {", "+\tif (!CompilationUnit.USE_LOCAL_ELEMENTS) return;", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclarationInAnonymous3.java\");", "+\tIJavaElement[] elements = codeSelect(cu, \"selectMe(\", \"selectMe\");", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"selectMe() [in <anonymous #1> [in bar() [in <anonymous #1> [in foo() [in ResolveMethodDeclarationInAnonymous3 [in ResolveMethodDeclarationInAnonymous3.java [in <default> [in src [in Resolve]]]]]]]]]\",", "+\t\telements", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2812438d763c01942cfe9701c6b5f26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testResolveMethodDeclaration() throws JavaModelException", "signatureAfterChange": " public void testResolveMethodDeclaration() throws JavaModelException", "diff": ["- */", "-public void testResolveMethodDeclaration() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclaration.java\");", "-\t", "-\tString str = cu.getSource();", "-\tString selectAt = \"foo(i\";", "-\tString selection = \"foo\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"foo\") &&", "-\t\telements[0] instanceof IMethod &&", "-\t\t((IMethod)elements[0]).getParameterTypes()[0].equals(\"I\"));\t", "-}", "+ */", "+public void testResolveMethodDeclaration() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveMethodDeclaration.java\");", "+\t", "+\tString str = cu.getSource();", "+\tString selectAt = \"foo(i\";", "+\tString selection = \"foo\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"foo [in ResolveMethodDeclaration [in ResolveMethodDeclaration.java [in <default> [in src [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+}"]}], "num": 48308}