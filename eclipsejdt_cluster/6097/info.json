{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7545fd4c85ebf65c73677a2ad85a3d9b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ac8a652402cea5bba0c96bee31e3f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tprivate void discardGeneratedWorkingCopy( String typeName, IFile parentFile, boolean deleteFromParent2TypeNames ) \t\tthrows JavaModelException", "signatureAfterChange": "  \tprivate void removeFromWorkingCopyMaps( IFile derivedFile, IFile parentFile ) \t\tthrows JavaModelException", "diff": ["-\t", "-\tprivate void discardGeneratedWorkingCopy( String typeName, IFile parentFile, boolean deleteFromParent2TypeNames )", "-\t\tthrows JavaModelException", "-\t{", "-\t\tif ( deleteFromParent2TypeNames )", "-\t\t{", "-\t\t\tSet<String> typeNames = _parent2TypeNames.get( parentFile );", "-\t\t\t", "-\t\t\tif ( typeNames == null ) throw new RuntimeException( \"Unexpected null entry in _parent2TypeNames map.\");", "-\t\t\tif ( ! typeNames.contains( typeName )) throw new RuntimeException (\"type names set didn't contain expected value\");", "-\t\t\t", "-\t\t\ttypeNames.remove( typeName );", "-\t\t}", "-\t", "-\t\tSet<IFile> parents = _typeName2Parents.get( typeName );", "-\t\t// TODO:  change these to assertions", "-\t\tif ( parents == null ) throw new RuntimeException( \"parents == null and it shouldnt\");", "-\t\tif ( ! parents.contains( parentFile )) throw new RuntimeException(\"parents set should contain parentCompilationUnit\");", "-\t\tparents.remove( parentFile );", "-\t\t", "-\t\tif ( parents.size() == 0 )", "-\t\t{", "-\t\t\tICompilationUnit cu = _typeName2WorkingCopy.get( typeName );", "-", "-\t\t\tif ( cu == null ) throw new RuntimeException( \"compilation unit is null and it shouldn't be\");", "-\t\t\t", "-\t\t\t_typeName2WorkingCopy.remove( typeName );", "-\t\t\tcu.discardWorkingCopy();", "-\t\t}", "-\t}", "+", "+\tprivate void removeFromWorkingCopyMaps( IFile derivedFile, IFile parentFile )", "+\t\tthrows JavaModelException", "+\t{", "+\t\tICompilationUnit workingCopy = _generatedFile2WorkingCopy.get( derivedFile );", "+\t\tif ( workingCopy == null )", "+\t\t\treturn;", "+\t", "+\t\tSet<IFile> parents = _generatedWorkingCopy2OpenParentFiles.get( workingCopy );", "+", "+\t\t// TODO:  change these to assertions", "+\t\tif ( parents == null ) throw new RuntimeException( \"parents == null and it shouldnt\");", "+\t\tif ( ! parents.contains( parentFile )) throw new RuntimeException(\"parents set should contain parentCompilationUnit\");", "+\t\t", "+\t\t// remove entry from parents _derivedWorkingCopy2OpenParentFiles", "+\t\tparents.remove( parentFile );", "+\t", "+\t\t// and remove entry from _derivedFile2WorkingCopy", "+\t\tif ( parents.size() == 0 )", "+\t\t{", "+\t\t\t_generatedFile2WorkingCopy.remove( derivedFile );", "+\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dee203109010505ca28238ba519aacf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate void removeFromWorkingCopyMaps( IFile derivedFile, IFile parentFile ) \t\tthrows JavaModelException", "signatureAfterChange": "  \tprivate void removeFromWorkingCopyMaps( IFile derivedFile, IFile parentFile ) \t\tthrows JavaModelException", "diff": ["-\t\tICompilationUnit workingCopy = _generatedFile2WorkingCopy.get( derivedFile );", "-\t\tif ( workingCopy == null )", "-\t\t\treturn;", "-\t", "-\t\tSet<IFile> parents = _generatedWorkingCopy2OpenParentFiles.get( workingCopy );", "-", "-\t\t// TODO:  change these to assertions", "-\t\tif ( parents == null ) throw new RuntimeException( \"parents == null and it shouldnt\");", "-\t\tif ( ! parents.contains( parentFile )) throw new RuntimeException(\"parents set should contain parentCompilationUnit\");", "+\t\tICompilationUnit workingCopy = null;", "+\t\tboolean discard = false;", "-\t\t// remove entry from parents _derivedWorkingCopy2OpenParentFiles", "-\t\tparents.remove( parentFile );", "-\t", "-\t\t// and remove entry from _derivedFile2WorkingCopy", "-\t\tif ( parents.size() == 0 )", "+\t\tsynchronized( this )", "-\t\t\t_generatedFile2WorkingCopy.remove( derivedFile );", "-\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t\tworkingCopy = _generatedFile2WorkingCopy.get( derivedFile );", "+\t\t\tif ( workingCopy == null )", "+\t\t\t\treturn;", "+\t", "+\t\t\tSet<IFile> parents = _generatedWorkingCopy2OpenParentFiles.get( workingCopy );", "+", "+\t\t\t// TODO:  change these to assertions", "+\t\t\tif ( parents == null ) throw new RuntimeException( \"parents == null and it shouldnt\");", "+\t\t\tif ( ! parents.contains( parentFile )) throw new RuntimeException(\"parents set should contain parentCompilationUnit\");", "+\t\t", "+\t\t\t// remove entry from parents _derivedWorkingCopy2OpenParentFiles", "+\t\t\tparents.remove( parentFile );", "+\t", "+\t\t\t// and remove entry from _derivedFile2WorkingCopy", "+\t\t\tif ( parents.size() == 0 )", "+\t\t\t{", "+\t\t\t\t_generatedFile2WorkingCopy.remove( derivedFile );", "+\t\t\t\tdiscard = true;", "+\t\t\t}", "+\t", "+\t\tif ( discard )", "+\t\t\tworkingCopy.discardWorkingCopy();"]}], "num": 6097}