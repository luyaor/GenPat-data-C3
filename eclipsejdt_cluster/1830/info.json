{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a7edc99340c2657a38061b64434a925", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c9066520d45d2aeb22caa1d3e03cca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "b0c126113d3919e827d562fe7ceede775b6f96a6", "commitAfterChange": "1636f4f6a9a908a8764c3fcbad745e3e39a0b116", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public int addLambdaMethod(LambdaExpression lambda)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(LambdaExpression lambda)", "diff": ["-public int addLambdaMethod(LambdaExpression lambda) {", "-\tint index;", "-\tif (this.lambdas == null) {", "-\t\tthis.lambdas = new LambdaExpression[1];", "-\t\tindex = 0;", "-\t} else {", "-\t\tindex = this.lambdas.length;", "-\t\tSystem.arraycopy(this.lambdas, 0, this.lambdas = new LambdaExpression[index + 1], 0, index);", "-\t}", "-\tthis.lambdas[index] = lambda;", "-\treturn index;", "+public SyntheticMethodBinding addSyntheticMethod(LambdaExpression lambda) {", "+\tif (this.synthetics == null)", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];", "+\tif (this.synthetics[SourceTypeBinding.METHOD_EMUL] == null)", "+\t\tthis.synthetics[SourceTypeBinding.METHOD_EMUL] = new HashMap(5);", "+\tSyntheticMethodBinding lambdaMethod = new SyntheticMethodBinding(lambda, CharOperation.concat(TypeConstants.ANONYMOUS_METHOD, Integer.toString(this.lambdaOrdinal++).toCharArray()), this);", "+\tSyntheticMethodBinding[] accessors = new SyntheticMethodBinding[2]; ", "+\tthis.synthetics[SourceTypeBinding.METHOD_EMUL].put(lambda, accessors);", "+\taccessors[0] = lambdaMethod;", "+\treturn lambdaMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dfcb4d42d28d5cd60ff0d6f47e32461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "44beb229da7acf29f8209404ea1120f9422c2f4a", "commitAfterChange": "c539ab4170e4fe0d8578cc8fb0121c9a797f5894", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethod(LambdaExpression lambda)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(LambdaExpression lambda)", "diff": ["-\tSyntheticMethodBinding lambdaMethod = new SyntheticMethodBinding(lambda, CharOperation.concat(TypeConstants.ANONYMOUS_METHOD, Integer.toString(this.lambdaOrdinal++).toCharArray()), this);", "-\tSyntheticMethodBinding[] accessors = new SyntheticMethodBinding[2]; ", "-\tthis.synthetics[SourceTypeBinding.METHOD_EMUL].put(lambda, accessors);", "-\taccessors[0] = lambdaMethod;", "+\t", "+\tSyntheticMethodBinding lambdaMethod = null;", "+\tSyntheticMethodBinding[] lambdaMethods = (SyntheticMethodBinding[]) this.synthetics[SourceTypeBinding.METHOD_EMUL].get(lambda);", "+\tif (lambdaMethods == null) {", "+\t\tlambdaMethod = new SyntheticMethodBinding(lambda, CharOperation.concat(TypeConstants.ANONYMOUS_METHOD, Integer.toString(this.lambdaOrdinal++).toCharArray()), this);", "+\t\tthis.synthetics[SourceTypeBinding.METHOD_EMUL].put(lambda, lambdaMethods = new SyntheticMethodBinding[1]);", "+\t\tlambdaMethods[0] = lambdaMethod;", "+\t} else {", "+\t\tlambdaMethod = lambdaMethods[0];", "+\t}"]}], "num": 1830}