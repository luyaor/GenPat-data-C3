{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1177fcd07cc22d52e58cad41fc6da3cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37728814d7599267454ce11b28b0fd62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5570f0e247bd18a17332042e143b22a635cf26df", "commitAfterChange": "3bdad1c2bee46cfc01e1c4253b1e77d41c06aec6", "methodNumberBeforeChange": 949, "methodNumberAfterChange": 949, "signatureBeforeChange": " public void test0926()", "signatureAfterChange": " public void test0926()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\",", "-\t\t\"public class X {\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic void foo() {\\n\" + ", "-\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<Boolean, Term>> RESULT = null;\\n\" + ", "-\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<? extends Term, ? extends Formula>> t = null;\\n\" + ", "-\t\t\"\t\tRESULT = NonTerminalSourcePart.create(Tuple.create(true, t.value().fst()));\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"class Term {\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"class Formula {\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"final class NonTerminalSourcePart<V> {\\n\" + ", "-\t\t\"\tstatic <V> NonTerminalSourcePart<V> create(final V _value) {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tfinal V value() {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"class Tuple<A, B> {\\n\" + ", "-\t\t\"\tpublic static <A, B> Tuple<A, B> create(final A a, final B b) {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tpublic A fst() {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\"", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic void foo() {\\n\" + ", "+\t\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<Boolean, Term>> RESULT = null;\\n\" + ", "+\t\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<? extends Term, ? extends Formula>> t = null;\\n\" + ", "+\t\t\t\"\t\tRESULT = NonTerminalSourcePart.create(Tuple.create(true, t.value().fst()));\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Term {\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Formula {\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"final class NonTerminalSourcePart<V> {\\n\" + ", "+\t\t\t\"\tstatic <V> NonTerminalSourcePart<V> create(final V _value) {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tfinal V value() {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Tuple<A, B> {\\n\" + ", "+\t\t\t\"\tpublic static <A, B> Tuple<A, B> create(final A a, final B b) {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tpublic A fst() {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "-\t\t\"----------\\n\" + ", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */ ", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6557661 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd3b6f0617507fc3665c160b0718f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "commitAfterChange": "ef6edb688893cd6d22d31cfac59fd0a029f9056b", "methodNumberBeforeChange": 949, "methodNumberAfterChange": 949, "signatureBeforeChange": " public void test0926()", "signatureAfterChange": " public void test0926()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\",", "-\t\t\"public class X {\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic void foo() {\\n\" + ", "-\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<Boolean, Term>> RESULT = null;\\n\" + ", "-\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<? extends Term, ? extends Formula>> t = null;\\n\" + ", "-\t\t\"\t\tRESULT = NonTerminalSourcePart.create(Tuple.create(true, t.value().fst()));\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"class Term {\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"class Formula {\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"final class NonTerminalSourcePart<V> {\\n\" + ", "-\t\t\"\tstatic <V> NonTerminalSourcePart<V> create(final V _value) {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tfinal V value() {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"class Tuple<A, B> {\\n\" + ", "-\t\t\"\tpublic static <A, B> Tuple<A, B> create(final A a, final B b) {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tpublic A fst() {\\n\" + ", "-\t\t\"\t\treturn null;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\"", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic void foo() {\\n\" + ", "+\t\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<Boolean, Term>> RESULT = null;\\n\" + ", "+\t\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<? extends Term, ? extends Formula>> t = null;\\n\" + ", "+\t\t\t\"\t\tRESULT = NonTerminalSourcePart.create(Tuple.create(true, t.value().fst()));\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Term {\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Formula {\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"final class NonTerminalSourcePart<V> {\\n\" + ", "+\t\t\t\"\tstatic <V> NonTerminalSourcePart<V> create(final V _value) {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tfinal V value() {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Tuple<A, B> {\\n\" + ", "+\t\t\t\"\tpublic static <A, B> Tuple<A, B> create(final A a, final B b) {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tpublic A fst() {\\n\" + ", "+\t\t\t\"\t\treturn null;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "-\t\t\"----------\\n\" + ", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */ ", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6557661 /* javac test options */);"]}], "num": 1438}