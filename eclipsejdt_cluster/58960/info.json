{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac253141be9814725da124c3c316a13a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15514dd27e694ba44fc3750defa28c21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.baseType = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.baseType, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.baseType == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.baseType = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.baseType, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c570c3c3f07b383550b52dc1f72608c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MemberValuePair.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.name = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.name, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.name == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.name = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.name, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f317e2b840609765e3e1c667425260b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedType.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.name = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.name, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.name == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.name = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.name, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78a19488ff9c0705d94041a6ef0e64b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleType.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.typeName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.typeName, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.typeName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.typeName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.typeName, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ed0e7baa70721b5b223605894d4efd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Annotation.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Name getTypeName()", "signatureAfterChange": "  \tpublic Name getTypeName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.typeName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.typeName, internalTypeNameProperty());", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.typeName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.typeName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.typeName, internalTypeNameProperty());", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b883d4511d0a446f4e26ba03dab004f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.baseType = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.baseType, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.baseType == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.baseType = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.baseType, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85e9b0de2915a72c9f1a5d56a09dee7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic Type getType()", "signatureAfterChange": "  \tpublic Type getType()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.baseType = this.ast.newPrimitiveType(PrimitiveType.INT);", "-\t\t\tpostLazyInit(this.baseType, TYPE_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.baseType == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.baseType = this.ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\t\t\tpostLazyInit(this.baseType, TYPE_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0cd2733f0c1e2758da5732b4df3a3e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.name = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.name, NAME_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.name == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.name = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.name, NAME_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6cfecf89fba4ddb921223fc1d48cf40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AbstractTypeDeclaration.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.typeName = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.typeName, internalNameProperty());", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.typeName == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.typeName = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.typeName, internalNameProperty());", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 58960}