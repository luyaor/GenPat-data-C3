{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14c8f608e30656cfa9626490f90cd7b5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "744ab14a6577a377bbf1b9070b0fa882", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "signatureAfterChange": " \t \tprivate void dispatchToFileBasedProcessor( \t\t\tfinal CompilationProcessorEnv processorEnv)", "diff": ["-\tprivate void runAPTInFileBasedMode(", "-\t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,", "-\t\t\tfinal ProcessorEnvImpl processorEnv,", "-\t\t\tfinal List<IFile> filesWithMissingType,", "-\t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "-\t\tfinal IFile[] files = processorEnv.getFiles();", "-\t\tfor (IFile curFile : files ) {", "-\t\t\tprocessorEnv.setFileProcessing(curFile);", "-\t\t\tMap<String, AnnotationTypeDeclaration> annotationDecls = processorEnv.getAnnotationTypesInFile();", "-\t\t\tfor( Map.Entry<AnnotationProcessorFactory, FactoryPath.Attributes> entry : factories.entrySet() ){", "-\t\t\t\tif( entry.getValue().runInBatchMode() ) continue;", "-\t\t\t\tAnnotationProcessorFactory factory = entry.getKey();", "-\t\t\t\tSet<AnnotationTypeDeclaration> factoryDecls = getFactorySupportedAnnotations(factory, annotationDecls);", "-\t\t\t\tif( factoryDecls != null ){", "-\t\t\t\t\tif(factoryDecls.size() == 0 ){", "-\t\t\t\t\t\tfactoryDecls = new HashSet(annotationDecls.values());", "-\t\t\t\t\t\tannotationDecls.clear();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (factoryDecls != null && factoryDecls.size() > 0) {", "-\t\t\t\t\tfinal AnnotationProcessor processor = factory", "-\t\t\t\t\t\t\t.getProcessorFor(factoryDecls, processorEnv);", "-\t\t\t\t\tif (processor != null)", "-\t\t\t\t\t{", "-\t\t\t\t\t\tif ( AptPlugin.DEBUG ) {", "-\t\t\t\t\t\t\ttrace( \"runAPT: invoking file-based processor \" + processor.getClass().getName() + \" on \" + curFile, //$NON-NLS-1$ //$NON-NLS-2$ ", "-\t\t\t\t\t\t\t\t\tprocessorEnv); ", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tprocessor.process();\t\t\t\t\t\t", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t", "-\t\t\t\tif (annotationDecls.isEmpty())", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, unitsForFilesWithMissingType, processorEnv);", "-\t\t\t", "-\t\t\tif( ! annotationDecls.isEmpty() )", "-\t\t\t\t; // TODO: (theodora) log unclaimed annotations.", "-\t\t}\t", "+\tprivate void dispatchToFileBasedProcessor(", "+\t\t\tfinal CompilationProcessorEnv processorEnv){", "+\t\t", "+\t\tMap<String, AnnotationTypeDeclaration> annotationDecls = processorEnv.getAnnotationTypes();", "+\t\tfor( Map.Entry<AnnotationProcessorFactory, FactoryPath.Attributes> entry : _factories.entrySet() ){", "+\t\t\tif( entry.getValue().runInBatchMode() ) continue;", "+\t\t\tAnnotationProcessorFactory factory = entry.getKey();", "+\t\t\tSet<AnnotationTypeDeclaration> factoryDecls = getFactorySupportedAnnotations(factory, annotationDecls);", "+\t\t\tif( factoryDecls != null ){", "+\t\t\t\tif(factoryDecls.size() == 0 ){", "+\t\t\t\t\tfactoryDecls = new HashSet(annotationDecls.values());", "+\t\t\t\t\tannotationDecls.clear();", "+\t\t\tif (factoryDecls != null && factoryDecls.size() > 0) {", "+\t\t\t\tfinal AnnotationProcessor processor = factory", "+\t\t\t\t\t\t.getProcessorFor(factoryDecls, processorEnv);", "+\t\t\t\tif (processor != null)", "+\t\t\t\t{", "+\t\t\t\t\tif ( AptPlugin.DEBUG ) {", "+\t\t\t\t\t\ttrace( \"runAPT: invoking file-based processor \" + processor.getClass().getName() + \" on \" + processorEnv.getFile(), //$NON-NLS-1$ //$NON-NLS-2$ ", "+\t\t\t\t\t\t\t\tprocessorEnv); ", "+\t\t\t\t\t}", "+\t\t\t\t\tprocessor.process();\t\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t}", "+", "+\t\t\tif (annotationDecls.isEmpty())", "+\t\t\t\tbreak;", "+\t\tif( ! annotationDecls.isEmpty() )", "+\t\t\t; // TODO: (theodora) log unclaimed annotations.", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbab33ea9983252b5105a8b85aa0dc19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\t\t", "+\t\t\t// TODO: put the short circuit back in!!! (theodora)", "+\t\t\t/*\t\t\t", "-\t\t", "-\t\t\tfinal Map<String, AnnotationTypeDeclaration> annotationDecls = getAnnotationTypeDeclarations(", "-\t\t\t\t\tprocessorEnv.getAstCompilationUnit(), processorEnv);", "-\t\t\t", "-\t\t\tif (annotationDecls.isEmpty())", "-\t\t\t{", "-\t\t\t\tif ( AptPlugin.DEBUG ) trace( \"runAPT:  leaving early because annotationDecls is empty\" ); //$NON-NLS-1$", "-\t\t\t\treturn EMPTY_APT_RESULT;", "-\t\t\t}", "-", "+\t\t*/", "-\t\t\tSet<IFile> lastGeneratedFiles = gfm.getGeneratedFilesForParent( processorEnv.getFile() );", "-\t\t\t", "-\t\t\tfor (int i = 0, size = factories.size(); i < size; i++) {", "-\t\t\t\tfinal AnnotationProcessorFactory factory = factories.get(i);", "-\t\t\t\tSet<AnnotationTypeDeclaration> factoryDecls = getAnnotations(factory, annotationDecls);", "-\t\t\t\tboolean done = false;", "-\t\t\t\tif( factoryDecls != null ){", "-\t\t\t\t\tif(factoryDecls.size() == 0 ){", "-\t\t\t\t\t\tdone = true;", "-\t\t\t\t\t\tfactoryDecls = new HashSet(annotationDecls.values());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (factoryDecls != null && factoryDecls.size() > 0) {", "-\t\t\t\t\tfinal AnnotationProcessor processor = factory", "-\t\t\t\t\t\t\t.getProcessorFor(factoryDecls, processorEnv);", "-\t\t\t\t\tif (processor != null)", "-\t\t\t\t\t{", "-\t\t\t\t\t\tif ( AptPlugin.DEBUG ) trace( \"runAPT: invoking processor \" + processor.getClass().getName() ); //$NON-NLS-1$", "-                        processorEnv.setLatestProcessor(processor);", "-\t\t\t\t\t\tprocessor.process();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-", "-\t\t\t\tif (annotationDecls.isEmpty() || done)", "-\t\t\t\t\tbreak;", "+\t\t\tfinal Set<IFile> lastGeneratedFiles = new HashSet<IFile>();", "+\t\t\tfor( int i=0, len=_filesToProcess.length; i<len; i++ ){", "+\t\t\t\tfinal Set<IFile> genFiles = gfm.getGeneratedFilesForParent( _filesToProcess[i] );", "+\t\t\t\tif( genFiles != null )", "+\t\t\t\t\tlastGeneratedFiles.addAll(genFiles);", "-\t\t\t// TODO: (theodora) log unclaimed annotations.", "+\t\t\t", "+\t\t\tif( shouldDispatchToBatchProcessor(factories, processorEnv) )", "+\t\t\t\trunAPTInMixedMode(factories, processorEnv);", "+\t\t\telse", "+\t\t\t\trunAPTInFileBasedMode(factories, processorEnv);", "+\t\t\t", "-\t\t\tSet<IFile> deletedFiles = cleanupNoLongerGeneratedFiles( processorEnv.getFile(), processorEnv.getCompilationUnit(), lastGeneratedFiles, allGeneratedFiles, gfm );", "+\t\t\tSet<IFile> allDeletedFiles = new HashSet<IFile>();", "+\t\t\tfor( int i=0, len=_filesToProcess.length; i<len; i++ ){", "+\t\t\t\tfinal Set<IFile> deletedFiles = ", "+\t\t\t\t\tcleanupNoLongerGeneratedFiles( _filesToProcess[i], processorEnv.getCompilationUnit(), lastGeneratedFiles, allGeneratedFiles, gfm );", "+\t\t\t\tif(deletedFiles != null )", "+\t\t\t\t\tallDeletedFiles.addAll(deletedFiles);\t\t", "+\t\t\t}", "+\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\t  deletedFiles, ", "+\t\t\t\t\t\t\t\t\t\t\t  allDeletedFiles, ", "-\t\t\tAptPlugin.log(t, \"Unexpected failure running APT \" + _file); //$NON-NLS-1$", "+\t\t\tAptPlugin.log(t, \"Unexpected failure running APT \" + getFileNameForPrint()); //$NON-NLS-1$", "+\t}"]}], "num": 47934}