{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b49e77a90392b62b423b8bdc4119bf6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0614a597ef9126c151dc1399b1b029f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "763e42ee77f843bf78751f85365c5a74eb47696c", "commitAfterChange": "525a282931680472e1c4e0ea3a9d163e6052ec36", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tbreak;\r", "-\t\tcase IJavaElement.COMPILATION_UNIT :\r", "-\t\t\tString extension;\r", "+\t\t\tIFolder binaryFolder;\r", "+\t\t\ttry {\r", "+\t\t\t\tbinaryFolder = (IFolder)element.getPackageFragmentRoot().getUnderlyingResource();\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "-\t\t\t\t\tif (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file);\r", "+\t\t\t\t\tif (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file, binaryFolder);\r", "-\t\t\t\t\textension = file.getFileExtension();\r", "+\t\t\t\t\tindexManager.remove(file.getFullPath().toString(), binaryFolder);\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t\tcase IJavaElement.COMPILATION_UNIT :\r", "+\t\t\tfile = (IFile)delta.getResource();\r", "+\t\t\tswitch (delta.getKind()) {\r", "+\t\t\t\tcase IResourceDelta.CHANGED:\r", "+\t\t\t\t\t// no need to index if the content has not changed\r", "+\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break;\r", "+\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\tif (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file, file.getProject());\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IResourceDelta.REMOVED:\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294d843a15cec56133a1a417b831ee85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic ClassInstanceCreation convert(org.eclipse.jdt.internal.compiler.ast.AllocationExpression expression)", "signatureAfterChange": "\t \t \tpublic ClassInstanceCreation convert(org.eclipse.jdt.internal.compiler.ast.AllocationExpression expression)", "diff": ["-\t\tclassInstanceCreation.setName(convert(expression.type));", "+\t\tif (expression.typeArguments != null) {", "+\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\tclassInstanceCreation.setFlags(classInstanceCreation.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\tfor (int i = 0, max = expression.typeArguments.length; i < max; i++) {", "+\t\t\t\t\t\tclassInstanceCreation.typeArguments().add(convertType(expression.typeArguments[i]));", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tswitch(this.ast.apiLevel) {", "+\t\t\tcase AST.JLS2 :", "+\t\t\t\tclassInstanceCreation.setName(convert(expression.type));", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS3 :", "+\t\t\t\tclassInstanceCreation.setType(convertType(expression.type));", "+\t\t}"]}], "num": 64240}