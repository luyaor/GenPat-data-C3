{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d114b8d8d802d7288cb9926c165bb43", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132349058faaa28b293f34c00f717864", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t\tpublic void logProblemsSummary(int globalProblemsCount, \t\t\tint globalErrorsCount, int globalWarningsCount, int globalTasksCount)", "signatureAfterChange": " \t\tpublic void logProblemsSummary(int globalProblemsCount, \t\t\tint globalErrorsCount, int globalWarningsCount, int globalTasksCount)", "diff": ["-\t\t\tif ((this.tagBits & XML) != 0) {", "+\t\t\tif ((this.tagBits & Logger.XML) != 0) {", "-\t\t\t\tthis.parameters.put(NUMBER_OF_PROBLEMS, new Integer(globalProblemsCount));", "-\t\t\t\tthis.parameters.put(NUMBER_OF_ERRORS, new Integer(globalErrorsCount));", "-\t\t\t\tthis.parameters.put(NUMBER_OF_WARNINGS, new Integer(globalWarningsCount));", "-\t\t\t\tthis.parameters.put(NUMBER_OF_TASKS, new Integer(globalTasksCount));", "-\t\t\t\tthis.printTag(PROBLEM_SUMMARY, this.parameters, true, true);", "+\t\t\t\tthis.parameters.put(Logger.NUMBER_OF_PROBLEMS, new Integer(globalProblemsCount));", "+\t\t\t\tthis.parameters.put(Logger.NUMBER_OF_ERRORS, new Integer(globalErrorsCount));", "+\t\t\t\tthis.parameters.put(Logger.NUMBER_OF_WARNINGS, new Integer(globalWarningsCount));", "+\t\t\t\tthis.parameters.put(Logger.NUMBER_OF_TASKS, new Integer(globalTasksCount));", "+\t\t\t\tthis.printTag(Logger.PROBLEM_SUMMARY, this.parameters, true, true);", "-\t\t\tif ((this.tagBits & EMACS) != 0) {", "+\t\t\tif ((this.tagBits & Logger.EMACS) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b16a4f252c96735559a4168c98a7c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tprivate void extractContext(CategorizedProblem problem, char[] unitSource)", "signatureAfterChange": " \t\tprivate void extractContext(CategorizedProblem problem, char[] unitSource)", "diff": ["-\t\t\t\tthis.parameters.put(VALUE, Messages.problem_noSourceInformation); ", "-\t\t\t\tthis.parameters.put(SOURCE_START, \"-1\"); //$NON-NLS-1$", "-\t\t\t\tthis.parameters.put(SOURCE_END, \"-1\"); //$NON-NLS-1$", "+\t\t\t\tthis.parameters.put(Logger.VALUE, Messages.problem_noSourceInformation); ", "+\t\t\t\tthis.parameters.put(Logger.SOURCE_START, \"-1\"); //$NON-NLS-1$", "+\t\t\t\tthis.parameters.put(Logger.SOURCE_END, \"-1\"); //$NON-NLS-1$", "-\t\t\tthis.parameters.put(VALUE, String.valueOf(buffer));", "-\t\t\tthis.parameters.put(SOURCE_START, Integer.toString(startPosition - begin));", "-\t\t\tthis.parameters.put(SOURCE_END, Integer.toString(endPosition - begin));", "+\t\t\tthis.parameters.put(Logger.VALUE, String.valueOf(buffer));", "+\t\t\tthis.parameters.put(Logger.SOURCE_START, Integer.toString(startPosition - begin));", "+\t\t\tthis.parameters.put(Logger.SOURCE_END, Integer.toString(endPosition - begin));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b15e52f38591d3ec1da6eaf22572378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "signatureAfterChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tthis.tagBits |= XML;", "-\t\t\t\t\t\tthis.log.println(XML_HEADER);", "+\t\t\t\t\t\tthis.tagBits |= Logger.XML;", "+\t\t\t\t\t\tthis.log.println(Logger.XML_HEADER);", "-\t\t\t\t\t\tthis.log.println(XML_DTD_DECLARATION);", "+\t\t\t\t\t\tthis.log.println(Logger.XML_DTD_DECLARATION);", "-\t\t\t\t\t\tthis.parameters.put(COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$", "-\t\t\t\t\t\tthis.parameters.put(COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$", "-\t\t\t\t\t\tthis.parameters.put(COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$", "-\t\t\t\t\t\tthis.printTag(COMPILER, this.parameters, true, false);", "+\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.printTag(Logger.COMPILER, this.parameters, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9139d8e1354ea58555137effc919375", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t\tpublic void logOptions(Map options)", "signatureAfterChange": " \t\tpublic void logOptions(Map options)", "diff": ["-\t\t\tif ((this.tagBits & XML) != 0) {", "-\t\t\t\tthis.printTag(OPTIONS, null, true, false);", "+\t\t\tif ((this.tagBits & Logger.XML) != 0) {", "+\t\t\t\tthis.printTag(Logger.OPTIONS, null, true, false);", "-\t\t\t\t\tthis.parameters.put(KEY, key);", "-\t\t\t\t\tthis.parameters.put(VALUE, options.get(key));", "-\t\t\t\t\tthis.printTag(OPTION, this.parameters, true, true);", "+\t\t\t\t\tthis.parameters.put(Logger.KEY, key);", "+\t\t\t\t\tthis.parameters.put(Logger.VALUE, options.get(key));", "+\t\t\t\t\tthis.printTag(Logger.OPTION, this.parameters, true, true);", "-\t\t\t\tthis.endTag(OPTIONS);", "+\t\t\t\tthis.endTag(Logger.OPTIONS);"]}], "num": 37913}