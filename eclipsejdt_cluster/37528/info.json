{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "534376614121728131789e6e66793a4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9e0d17a135132d4183c6afa9f4c58d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic String toStringExpression()", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+", "+\t\toutput.append('(');", "+\t\ttype.print(0, output).append(\") \"); //$NON-NLS-1$", "+\t\treturn expression.printExpression(0, output);", "+\t}", "-", "-\tpublic String toStringExpression() {", "-", "-\t\treturn \"(\" + type.toString(0) + \") \" + //$NON-NLS-2$ //$NON-NLS-1$", "-\t\texpression.toStringExpression();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab69d3bbb3931f5e01e82b777b34005f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "commitAfterChange": "92aee8d421610703027ca2a5b652beed8fbe4ac3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " private String fullPath(IJavaElement element)", "signatureAfterChange": " private IPath getPath(IJavaElement element, boolean relativeToRoot)", "diff": ["-private String fullPath(IJavaElement element) {", "+private IPath getPath(IJavaElement element, boolean relativeToRoot) {", "-\t\treturn ((IPackageFragmentRoot)element).getPath().toString();", "+\t\tif (relativeToRoot)", "+\t\t\treturn Path.EMPTY;", "+\t\treturn ((IPackageFragmentRoot)element).getPath();", "-\tString parentPath = parent == null ? null : fullPath(parent);", "-\tString childPath;", "+\tIPath parentPath = parent == null ? null : getPath(parent, relativeToRoot);", "+\tIPath childPath;", "-\t\tchildPath = relativePath;", "+\t\tchildPath = new Path(relativePath);", "-\t\tchildPath = element.getElementName();", "+\t\tchildPath = new Path(element.getElementName());", "-\treturn parentPath == null ? childPath : parentPath + '/' + childPath;", "+\treturn parentPath == null ? childPath : parentPath.append(childPath);"]}], "num": 37528}