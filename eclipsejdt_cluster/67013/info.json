{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87c284c2cda94490c11f5cbf0ab7984c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce380e4a5c357976f6b7accb2b50138b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t \tprivate void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \t \tprivate void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tif (VERBOSE) {", "-\t\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\ttry {", "+\t\t\t\t\trequestor.beginReporting();", "+\t\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t}", "+\t\t\t\t\tSearchParticipant participant = getDefaultSearchParticipant();", "+\t\t\t\t\tSearchDocument[] documents = MatchLocator.addWorkingCopies(", "+\t\t\t\t\t\tpattern,", "+\t\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)},", "+\t\t\t\t\t\tgetWorkingCopies(enclosingElement),", "+\t\t\t\t\t\tparticipant);", "+\t\t\t\t\tparticipant.locateMatches(", "+\t\t\t\t\t\tdocuments, ", "+\t\t\t\t\t\tpattern, ", "+\t\t\t\t\t\tscope, ", "+\t\t\t\t\t\trequestor, ", "+\t\t\t\t\t\tmonitor);", "+\t\t\t\t} finally {", "+\t\t\t\t\trequestor.endReporting();", "-\t\t\t\tSearchParticipant participant = getDefaultSearchParticipant();", "-\t\t\t\tSearchDocument[] documents = MatchLocator.addWorkingCopies(", "-\t\t\t\t\tpattern,", "-\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)},", "-\t\t\t\t\tgetWorkingCopies(enclosingElement),", "-\t\t\t\t\tparticipant);", "-\t\t\t\tparticipant.locateMatches(", "-\t\t\t\t\tdocuments, ", "-\t\t\t\t\tpattern, ", "-\t\t\t\t\tscope, ", "-\t\t\t\t\trequestor, ", "-\t\t\t\t\tmonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5dbadf357d40913c5ac27a8e23d25b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 40, "signatureBeforeChange": "\t \t \tprivate void searchDeclarations(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector, SearchPattern pattern) throws JavaModelException", "signatureAfterChange": "\t \t \tprivate void searchDeclarations(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector, SearchPattern pattern) throws JavaModelException", "diff": ["-\t\tif (resource instanceof IFile) {", "-\t\t\tif (VERBOSE) {", "-\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\tSearchParticipant participant = new JavaSearchParticipant(getWorkingCopies(enclosingElement));", "+\t\ttry {", "+\t\t\tif (resource instanceof IFile) {", "+\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t}", "+\t\t\t\tSearchParticipant participant = getDefaultSearchParticipant();", "+\t\t\t\tSearchDocument[] documents = pattern.addWorkingCopies(", "+\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)},", "+\t\t\t\t\tgetWorkingCopies(enclosingElement),", "+\t\t\t\t\tparticipant);", "-\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)}, ", "+\t\t\t\t\tdocuments, ", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tif (e instanceof JavaModelException) {", "-\t\t\t\t\tthrow (JavaModelException) e;", "-\t\t\t\t} else {", "-\t\t\t\t\tthrow new JavaModelException(e);", "-\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tsearch(", "+\t\t\t\t\tpattern, ", "+\t\t\t\t\tnew SearchParticipant[] {getDefaultSearchParticipant()}, ", "+\t\t\t\t\tscope, ", "+\t\t\t\t\tnew ResultCollectorAdapter(resultCollector), ", "+\t\t\t\t\tresultCollector.getProgressMonitor());", "-\t\t} else {", "-\t\t\tsearch(workspace, pattern, scope, resultCollector);", "+\t\t} catch (CoreException e) {", "+\t\t\tif (e instanceof JavaModelException) {", "+\t\t\t\tthrow (JavaModelException) e;", "+\t\t\t} else {", "+\t\t\t\tthrow new JavaModelException(e);", "+\t\t\t}"]}], "num": 67013}