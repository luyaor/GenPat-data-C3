{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03f2ad1c837008c929ef5b1d16dae17a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a7119d838eb5b081f7fd6676aa29bdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f40614490d4262be4e6b1da2d796674adcae4653", "commitAfterChange": "2c45e11a23da631b4ad990ef31056ea845ca3f46", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsScope, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsScope, IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t\tboolean hasExternalWorkingCopyProject = false;", "+\t\t\t\tIJavaElement element = elementsScope[i];", "+\t\t\t\tif (element.getElementType() == IJavaElement.JAVA_MODEL) {", "+\t\t\t\t\t// ensure external working copies' projects' caches are reset", "+\t\t\t\t\tHashSet projects = JavaModelManager.getJavaModelManager().getExternalWorkingCopyProjects();", "+\t\t\t\t\tif (projects != null) {", "+\t\t\t\t\t\thasExternalWorkingCopyProject = true;", "+\t\t\t\t\t\tIterator iterator = projects.iterator();", "+\t\t\t\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\t\t\t\tJavaProject project = (JavaProject) iterator.next();", "+\t\t\t\t\t\t\tproject.resetCaches();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else if (hasExternalWorkingCopyProject) {", "+\t\t\t\t// flush jar type cache", "+\t\t\t\tJavaModelManager.getJavaModelManager().resetJarTypeCache();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9be09308c037154c6ea231f6e80be376", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "commitAfterChange": "4aad3541005b227c1c4489d6142b68e14885b9dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor)", "diff": ["-\tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor) {", "+\t */", "+\tprivate boolean createExternalArchiveDelta(HashSet refreshedElements, IProgressMonitor monitor) {", "-\t\tif (this.refreshedElements == null) return false;", "-\t\t\t", "-\t\tIterator iterator = this.refreshedElements.iterator();", "-\t\tthis.refreshedElements = null; // null out early to avoid concurrent modification exception (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=63534)", "+\t\tIterator iterator = refreshedElements.iterator();", "+\t\t}", "+\t\tif (hasDelta){", "+\t\t\t// force classpath marker refresh of affected projects", "+\t\t\tJavaModel.flushExternalFileCache();", "+\t\t\t", "+\t\t\t// flush jar type cache", "+\t\t\tJavaModelManager.getJavaModelManager().resetJarTypeCache();"]}], "num": 62197}