{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "946112b870d3ef36a9f84756b6b866b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8333ba0dc3f546760aec8ca007c88c43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "commitAfterChange": "5f9b5f6bde6ddbfdbfa46be3b81806de99313773", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["-\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "-\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NON_NULL, flowInfo);", "-\t\t\t\t} else if (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NULL, flowInfo);", "-\t\t\t\t}", "+\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NULL, flowInfo);", "-\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NULL, flowInfo);", "-\t\t\t\t}", "+\t\t\t\tflowContext.recordUsingNullReference(scope, local, reference, FlowInfo.NON_NULL, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "851243066688dc94644102aa45a19da9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "commitAfterChange": "5f9b5f6bde6ddbfdbfa46be3b81806de99313773", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\t \t \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": "\t \t \tpublic FlowInfo checkNullStatus(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, int nullStatus)", "diff": ["-\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "-\t\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NON_NULL, flowInfo);", "-\t\t\t\t\t}", "+\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NULL, flowInfo);", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NULL, flowInfo);", "-\t\t\t\t\t}", "+\t\t\t\t\tflowContext.recordUsingNullReference(scope, local, this, FlowInfo.NON_NULL, flowInfo);"]}], "num": 19755}