{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf34c2a93115f1cc4d51f6038d53b073", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9efae910969a2e9acceb31dd48a97b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "222910d9cc8aaa81e38faa1ade8cb0b81147d102", "commitAfterChange": "bdc003280094677782597954dd2d58945742ba73", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public final boolean getNextChar(char testedChar)", "signatureAfterChange": " public final int getNextChar()", "diff": ["+public final int getNextChar() {", "+\ttry {", "+\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "+\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t//-------------unicode traitement ------------", "+\t\t\tint c1, c2, c3, c4;", "+\t\t\tint unicodeSize = 6;", "+\t\t\tcurrentPosition++;", "+\t\t\twhile (source[currentPosition] == 'u') {", "+\t\t\t\tcurrentPosition++;", "+\t\t\t\tunicodeSize++;", "+\t\t\t}", "+", "+\t\t\tif (((c1 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t|| c1 < 0)", "+\t\t\t\t|| ((c2 = Character.getNumericValue(source[currentPosition++])) > 15 || c2 < 0)", "+\t\t\t\t|| ((c3 = Character.getNumericValue(source[currentPosition++])) > 15 || c3 < 0)", "+\t\t\t\t|| ((c4 = Character.getNumericValue(source[currentPosition++])) > 15 || c4 < 0)) {", "+\t\t\t\treturn -1;", "+\t\t\t}", "+", "+\t\t\tcurrentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+", "+\t\t\tunicodeAsBackSlash = currentCharacter == '\\\\';", "+", "+\t\t\t//need the unicode buffer", "+\t\t\tif (withoutUnicodePtr == 0) {", "+\t\t\t\t//buffer all the entries that have been left aside....", "+\t\t\t\twithoutUnicodePtr = currentPosition - unicodeSize - startPosition;", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tsource, ", "+\t\t\t\t\tstartPosition, ", "+\t\t\t\t\twithoutUnicodeBuffer, ", "+\t\t\t\t\t1, ", "+\t\t\t\t\twithoutUnicodePtr); ", "+\t\t\t}", "+\t\t\t//fill the buffer with the char", "+\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\treturn currentCharacter;", "+", "+\t\t} //-------------end unicode traitement--------------", "+\t\telse {", "+\t\t\tunicodeAsBackSlash = false;", "+\t\t\tif (withoutUnicodePtr != 0) {", "+\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t}", "+\t\t\treturn currentCharacter;", "+\t\t}", "+\t} catch (IndexOutOfBoundsException e) {", "+\t\treturn -1;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3b846ed4a93efa8fb4a631b793552c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public final boolean getNextChar(char testedChar)", "signatureAfterChange": " public final int getNextChar()", "diff": ["+public final int getNextChar() {", "+\ttry {", "+\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "+\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t//-------------unicode traitement ------------", "+\t\t\tint c1, c2, c3, c4;", "+\t\t\tint unicodeSize = 6;", "+\t\t\tcurrentPosition++;", "+\t\t\twhile (source[currentPosition] == 'u') {", "+\t\t\t\tcurrentPosition++;", "+\t\t\t\tunicodeSize++;", "+\t\t\t}", "+", "+\t\t\tif (((c1 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t|| c1 < 0)", "+\t\t\t\t|| ((c2 = Character.getNumericValue(source[currentPosition++])) > 15 || c2 < 0)", "+\t\t\t\t|| ((c3 = Character.getNumericValue(source[currentPosition++])) > 15 || c3 < 0)", "+\t\t\t\t|| ((c4 = Character.getNumericValue(source[currentPosition++])) > 15 || c4 < 0)) {", "+\t\t\t\treturn -1;", "+\t\t\t}", "+", "+\t\t\tcurrentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+", "+\t\t\tunicodeAsBackSlash = currentCharacter == '\\\\';", "+", "+\t\t\t//need the unicode buffer", "+\t\t\tif (withoutUnicodePtr == 0) {", "+\t\t\t\t//buffer all the entries that have been left aside....", "+\t\t\t\twithoutUnicodePtr = currentPosition - unicodeSize - startPosition;", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tsource, ", "+\t\t\t\t\tstartPosition, ", "+\t\t\t\t\twithoutUnicodeBuffer, ", "+\t\t\t\t\t1, ", "+\t\t\t\t\twithoutUnicodePtr); ", "+\t\t\t}", "+\t\t\t//fill the buffer with the char", "+\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\treturn currentCharacter;", "+", "+\t\t} //-------------end unicode traitement--------------", "+\t\telse {", "+\t\t\tunicodeAsBackSlash = false;", "+\t\t\tif (withoutUnicodePtr != 0) {", "+\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t}", "+\t\t\treturn currentCharacter;", "+\t\t}", "+\t} catch (IndexOutOfBoundsException e) {", "+\t\treturn -1;", "+\t}", "+}"]}], "num": 14549}