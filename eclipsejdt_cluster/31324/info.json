{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2e434ed6291f9c2d2640bbf4a6f1329", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d338f41be8711e97c5053783bebdff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "3ed504d6c06a625889aa0edc452a9c28987bfba5", "commitAfterChange": "832a3611a78cac4a94a3a05c5dd601ccfc7de769", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r private boolean isOnClasspath() throws JavaModelException", "signatureAfterChange": "\r protected boolean isOnClasspath()", "diff": ["- */\r", "-private boolean isOnClasspath() throws JavaModelException {\r", "-\tIPath path = this.getPath();\r", "-\tIJavaProject project = this.getJavaProject();\r", "-\r", "-\t// special permission granted to project binary output (when using old builder)\r", "-\tif (!JavaModelManager.USING_NEW_BUILDER && project.getOutputLocation().equals(path)) { \r", "-\t\treturn true;\r", "-\t}\r", "-\t\r", "-\t// check package fragment root on classpath of its project\r", "-\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\t\r", "-\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "-\t\tIClasspathEntry entry = classpath[i];\r", "-\t\tif (entry.getPath().equals(path)) {\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t}\r", "-\treturn false;\r", "-\r", "-}\r", "+ */\r", "+protected boolean isOnClasspath() {\r", "+\r", "+\tIJavaProject project = this.getJavaProject();\r", "+\r", "+\tif (this.getElementType() == IJavaElement.JAVA_PROJECT){\r", "+\t\treturn true;\r", "+\t}\r", "+\t\r", "+\tIPath path = this.getPath();\r", "+\r", "+\ttry {\r", "+\t\t// special permission granted to project binary output (when using old builder)\r", "+\t\tif (!JavaModelManager.USING_NEW_BUILDER && project.getOutputLocation().isPrefixOf(path)) { \r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t\r", "+\t\t// check package fragment root on classpath of its project\r", "+\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\t\r", "+\t\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "+\t\t\tIClasspathEntry entry = classpath[i];\r", "+\t\t\tif (entry.getPath().isPrefixOf(path)) {\r", "+\t\t\t\treturn true;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} catch(JavaModelException e){\r", "+\t\t// could not read classpath, then assume it is outside\r", "+\t}\r", "+\treturn false;\r", "+\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8a73cc6c7e1d3b1c446ba2ad852577", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "87058c7b8de4589df280101b3da29cf4946e087b", "commitAfterChange": "54978bea547a77e401fedd9bbb6f5ac5bee26141", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public boolean exists()", "signatureAfterChange": "\r private boolean isOnClasspath() throws JavaModelException", "diff": ["- */\r", "-public boolean exists() {\r", "-\tif (!this.exists0()) return false;\r", "-\t// Make the root path a workspace relative path (case of a jar external to its project but internal to the workspace)\r", "-\tIPath path = this.getPath();\r", "-\tIJavaProject project = this.getJavaProject();\r", "-\t\r", "-\t// Check that the package fragment root is in its parent's classpath\r", "-\ttry {\r", "-\t\tIPackageFragmentRoot[] roots = project.getPackageFragmentRoots();\r", "-\t\tfor (int i = 0, length = roots.length; i < length; i++) {\r", "-\t\t\tif (this.equals(roots[i])) return true;\r", "-\t\t}\r", "-\t\tif (project.getOutputLocation().equals(path)){ // special permission granted to project binary output (when building)\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t\treturn false;\r", "-\t} catch (JavaModelException e) {\r", "+ */\r", "+private boolean isOnClasspath() throws JavaModelException {\r", "+\tIPath path = this.getPath();\r", "+\tIJavaProject project = this.getJavaProject();\r", "+\r", "+\t// special permission granted to project binary output (when using old builder)\r", "+\tif (!JavaModelManager.USING_NEW_BUILDER && project.getOutputLocation().equals(path)) { \r", "+\t\treturn true;\r", "+\t}\r", "+\t// check package fragment root on classpath of its project\r", "+\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\tboolean onClasspath = false;\r", "+\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "+\t\tIClasspathEntry entry = classpath[i];\r", "+\t\tif (entry.getPath().equals(path)) {\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+\r", "+}\r"]}], "num": 31324}