{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c4dd494a3850ff2f3d7660be49b844d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874bf57f05c8ea16171f210ae2b3c3d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "commitAfterChange": "18c98a5a751096350077436fcf968eb63364ccb9", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "               public void test113()", "signatureAfterChange": "               public void test113()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = new String(){} )\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The value for annotation attribute Annot.foo must be a constant expression\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = new String(){} )\\n\" + ", "-\t\t\t\"\t                  ^^^^^^\\n\" + ", "-\t\t\t\"An anonymous class cannot subclass the final class String\\n\" + ", "-\t\t\t\"----------\\n\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+    \t\t\"\t@Annot( foo = new String(){} )\\n\" + ", "+    \t\t\"\t                  ^^^^^^\\n\" + ", "+    \t\t\"An anonymous class cannot subclass the final class String\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23f55d017c64c2bbaa840ba991d57c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "     public void test114()", "signatureAfterChange": "     public void test114()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = M.class )\\n\" + ", "-\t\t\t\"\t              ^\\n\" + ", "-\t\t\t\"M cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+    \t\t\"\tClass foo();\\n\" + ", "+    \t\t\"\t^^^^^\\n\" + ", "+    \t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+    \t\t\"\t@Annot( foo = M.class )\\n\" + ", "+    \t\t\"\t              ^\\n\" + ", "+    \t\t\"M cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9acdf4af686121924bb6c4ab38989d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 592, "signatureBeforeChange": " \tpublic void test588()", "signatureAfterChange": " \tpublic void test588()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "-\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Incompatible operand types Class<X> and Class<Long>\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+    \t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "+    \t\t\"\t            ^\\n\" + ", "+    \t\t\"Type safety: X is a raw type. References to generic type X<S> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+    \t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "+    \t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Incompatible operand types Class<X> and Class<Long>\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 33969}