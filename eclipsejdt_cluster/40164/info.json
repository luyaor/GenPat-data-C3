{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b53fb2e361ca9b18dbe0a2930019a683", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2d706c8567842f2bb079d1b4aa0da7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrame.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public int numberOfDifferentLocals()", "signatureAfterChange": " public int numberOfDifferentLocals(StackMapFrame prevFrame)", "diff": ["-public int numberOfDifferentLocals() {", "+public int numberOfDifferentLocals(StackMapFrame prevFrame) {", "-\tif (this.prevFrame == null) {", "+\tif (prevFrame == null) {", "-\tVerificationTypeInfo[] prevLocals = this.prevFrame.locals;", "+\tVerificationTypeInfo[] prevLocals = prevFrame.locals;", "-\tint prevNumberOfLocals = this.prevFrame.getNumberOfLocals();", "+\tint prevNumberOfLocals = prevFrame.getNumberOfLocals();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5923ea23e648b14c08bf62cd38e42e25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrame.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int getOffsetDelta()", "signatureAfterChange": " public int getOffsetDelta(StackMapFrame prevFrame)", "diff": ["-public int getOffsetDelta() {", "-\tif (this.prevFrame == null) return this.pc;", "-\treturn this.prevFrame.pc == -1 ? this.pc : this.pc - this.prevFrame.pc - 1;", "+public int getOffsetDelta(StackMapFrame prevFrame) {", "+\tif (prevFrame == null) return this.pc;", "+\treturn prevFrame.pc == -1 ? this.pc : this.pc - prevFrame.pc - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b637a3646ad4e920875184a229635403", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/PrimitiveTypeImpl.java", "commitBeforeChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "commitAfterChange": "90329a8061aecf116ef817e3a00ea13f48a88e85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic TypeKind getKind()", "signatureAfterChange": "  \tpublic static TypeKind getKind(BaseTypeBinding binding)", "diff": ["-\t\tswitch (((BaseTypeBinding)_binding).id) {", "+", "+\tpublic static TypeKind getKind(BaseTypeBinding binding) {", "+\t\tswitch (binding.id) {", "-\t\t\tthrow new IllegalArgumentException(\"BaseTypeBinding of unexpected id \" + ((BaseTypeBinding)_binding).id); //$NON-NLS-1$", "+\t\t\tthrow new IllegalArgumentException(\"BaseTypeBinding of unexpected id \" + binding.id); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3fe650de33c4773534aea56d0d82048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding localTargetMethod)", "signatureAfterChange": " \tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding targetMethod, SourceTypeBinding declaringClass)", "diff": ["-\tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding localTargetMethod) {", "+\tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding targetMethod, SourceTypeBinding declaringClass) {", "-\t    this.declaringClass = localTargetMethod.declaringClass;", "+\t    this.declaringClass = declaringClass;", "-\t    this.targetMethod = localTargetMethod;", "+\t    this.targetMethod = targetMethod;", "-\t\tSyntheticMethodBinding[] knownAccessMethods = ((SourceTypeBinding)this.declaringClass).syntheticMethods();", "+\t\tSyntheticMethodBinding[] knownAccessMethods = declaringClass.syntheticMethods();"]}], "num": 40164}