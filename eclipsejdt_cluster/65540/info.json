{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b359264cc87e7d4d488acb0defa47483", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672fe783e4f503e8efdaccd38998a15b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "6b83d22a910c2e140d2fd3f8ea7f6dbc1b911422", "commitAfterChange": "8d0d90902203ccd1f00600a41aa29bdae4aef363", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-\t\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "-\t\t\tElement element = ElementFactory.newElement(currentBinding);", "-\t\t\t_annoToElement.put(anno, element);", "+\t\t\tif (binding != null) { // binding should be resolved, but in case it's not, ignore it", "+\t\t\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "+\t\t\t\tElement element = ElementFactory.newElement(currentBinding);", "+\t\t\t\t_annoToElement.put(anno, element);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd6d939f444b10d22c246a77551e55ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "21b06b1f77b7fda7b2358e6e2d335e77a6ac8125", "commitAfterChange": "b397fbf1ef2684ee73e7617091ec4c7be38fc011", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tprivate void resetGeneratedSrcFolder(final IFolder srcFolder, final boolean recreate)", "signatureAfterChange": " \tprivate void resetGeneratedSrcFolder(final IFolder srcFolder, boolean recreate)", "diff": ["-\tprivate void resetGeneratedSrcFolder(final IFolder srcFolder, final boolean recreate){", "-\t\t", "-\t\t// clean up the classpath so that when we actually delete the ", "+\tprivate void resetGeneratedSrcFolder(final IFolder srcFolder, boolean recreate){", "+\t\t// clean up the classpath first so that when we actually delete the ", "-\t\t// (which will cause us to re-add the folder to correct ", "-\t\t// the classpath problem)", "-\t\t  \ttry{\t", "+\t\t\ttry{\t", "+\t\t", "-\t\t ", "-\t\t// schedule the deletion job.", "-\t\tfinal IWorkspaceRunnable runnable = new IWorkspaceRunnable(){", "-            public void run(IProgressMonitor monitor)", "-            {\t\t", "-            \tif( srcFolder != null ){", "-\t            \ttry{", "-\t            \t\tsrcFolder.delete(true, false, null);", "-\t            \t}catch(CoreException e){", "-\t            \t\tAptPlugin.log(e, \"failed to delete old generated source folder \" + srcFolder.getName() ); //$NON-NLS-1$", "-\t            \t}catch(OperationCanceledException cancel){", "-\t            \t\tAptPlugin.log(cancel, \"deletion of generated source folder got cancelled\"); //$NON-NLS-1$", "+\t\t", "+\t\tif( srcFolder != null ){", "+\t\t\t// schedule the deletion job.", "+\t\t\tfinal IWorkspaceRunnable runnable = new IWorkspaceRunnable(){", "+\t            public void run(IProgressMonitor monitor)", "+\t            {\t\t", "+\t            \tif( srcFolder != null ){", "+\t\t            \ttry{", "+\t\t            \t\tsrcFolder.delete(true, false, null);", "+\t\t            \t}catch(CoreException e){", "+\t\t            \t\tAptPlugin.log(e, \"failed to delete old generated source folder \" + srcFolder.getName() ); //$NON-NLS-1$", "+\t\t            \t}catch(OperationCanceledException cancel){", "+\t\t            \t\tAptPlugin.log(cancel, \"deletion of generated source folder got cancelled\"); //$NON-NLS-1$", "+\t\t            \t}", "-            \t}", "-            };", "-        };", "-        IWorkspace ws = _aptProject.getJavaProject().getProject().getWorkspace();", "-        try{", "-        \tws.run(runnable, ws.getRoot(), IWorkspace.AVOID_UPDATE, null);", "-        }catch(CoreException e){", "-    \t\tAptPlugin.log(e, \"Runnable for deleting old generated source folder \" + srcFolder.getName() + \" failed.\"); //$NON-NLS-1$ //$NON-NLS-2$", "-    \t}", "+\t            };", "+\t        };", "+\t        IWorkspace ws = _aptProject.getJavaProject().getProject().getWorkspace();", "+\t        try{", "+\t        \tws.run(runnable, ws.getRoot(), IWorkspace.AVOID_UPDATE, null);", "+\t        }catch(CoreException e){", "+\t    \t\tAptPlugin.log(e, \"Runnable for deleting old generated source folder \" + srcFolder.getName() + \" failed.\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t    \t}", "+\t\t}"]}], "num": 65540}