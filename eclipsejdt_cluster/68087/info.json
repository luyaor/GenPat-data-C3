{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "170816f7b71303e790c40d291c2aebf6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27bdec103d894281fdff704a92c20c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void testExampleSnippets()", "signatureAfterChange": " \tpublic void testExampleSnippets()", "diff": ["-\t\t\t// public class MyClass {}", "+\t\t\t// /** Spec. \\n @deprecated Use {@link #foo() bar} instead. */public class MyClass {}", "+\t\t\t{ ", "+\t\t\t\tJavadoc jd = localAst.newJavadoc();", "+\t\t\t\tTextElement tx1 = localAst.newTextElement();", "+\t\t\t\ttx1.setText(\"Spec.\"); //$NON-NLS-1$", "+\t\t\t\tjd.fragments().add(tx1);", "+\t\t\t\tTagElement tg1 = localAst.newTagElement();", "+\t\t\t\ttg1.setTagName(\"@deprecated\");", "+\t\t\t\tjd.fragments().add(tg1);", "+\t\t\t\tTextElement tx2 = localAst.newTextElement();", "+\t\t\t\ttx2.setText(\"Use \"); //$NON-NLS-1$", "+\t\t\t\ttg1.fragments().add(tx2);", "+\t\t\t\tTagElement tg2 = localAst.newTagElement();", "+\t\t\t\ttg2.setTagName(\"@link\");", "+\t\t\t\ttg1.fragments().add(tg2);", "+\t\t\t\tMethodRef mr1 = localAst.newMethodRef();", "+\t\t\t\tmr1.setName(localAst.newSimpleName(\"foo\"));", "+\t\t\t\ttg2.fragments().add(mr1);", "+\t\t\t\tTextElement tx3 = localAst.newTextElement();", "+\t\t\t\ttx3.setText(\"bar\"); //$NON-NLS-1$", "+\t\t\t\ttg2.fragments().add(tx3);", "+\t\t\t\tTextElement tx4 = localAst.newTextElement();", "+\t\t\t\ttx2.setText(\" instead.\"); //$NON-NLS-1$", "+\t\t\t\ttg1.fragments().add(tx4);", "+\t\t\t}", "+\t\t\t", "-\t\t\t// new String[len]", "+\t\t\t// new String[len];", "-\t\t\t// new double[7][24][]", "+\t\t\t// new double[7][24][];", "-\t\t\t// new int[] {1, 2}", "+\t\t\t// new int[] {1, 2};", "-\t\t\t// new String(10)", "+\t\t\t// new String(10);", "-\t\t\t// new Listener() {public void handleEvent() {} }", "+\t\t\t// new Listener() {public void handleEvent() {} };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c602ea2885e6cf54f7f2f226b38514fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprotected String getClasspathAsXML( \t\tIClasspathEntry[] classpath, \t\tIPath outputLocation) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected String getClasspathAsXML( \t\tIClasspathEntry[] classpath, \t\tIPath outputLocation, \t\tboolean isCleaning) \t\tthrows JavaModelException", "diff": ["-\t\tIPath outputLocation)", "+\t\tIPath outputLocation,", "+\t\tboolean isCleaning)", "-\t\tDocument doc = new DocumentImpl();", "-\t\tElement cpElement = doc.createElement(\"classpath\"); //$NON-NLS-1$", "-\t\tdoc.appendChild(cpElement);", "+\t\tDocument document = new DocumentImpl();", "+\t\tElement cpElement = document.createElement(\"classpath\"); //$NON-NLS-1$", "+\t\tdocument.appendChild(cpElement);", "-\t\t\tElement cpeElement =", "-\t\t\t\tgetEntryAsXMLElement(doc, classpath[i], getProject().getFullPath());", "-\t\t\tcpElement.appendChild(cpeElement);", "+\t\t\tcpElement.appendChild(((ClasspathEntry)classpath[i]).elementEncode(document, getProject().getFullPath()));", "-\t\t\tElement oElement = doc.createElement(\"classpathentry\"); //$NON-NLS-1$", "-\t\t\toElement.setAttribute(\"kind\", kindToString(ClasspathEntry.K_OUTPUT));\t//$NON-NLS-1$", "-\t\t\toElement.setAttribute(\"path\", outputLocation.toOSString()); //$NON-NLS-1$", "+\t\t\tElement oElement = document.createElement(\"classpathentry\"); //$NON-NLS-1$", "+\t\t\toElement.setAttribute(\"kind\", ClasspathEntry.kindToString(ClasspathEntry.K_OUTPUT));\t//$NON-NLS-1$", "+\t\t\toElement.setAttribute(\"path\", outputLocation.toString()); //$NON-NLS-1$", "+\t\t\tif (!isCleaning) oElement.setAttribute(\"cleaning\", \"false\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tserializer.asDOMSerializer().serialize(doc);", "+\t\t\tserializer.asDOMSerializer().serialize(document);"]}], "num": 68087}