{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9757b6042db5635958c9fa0a2da7148b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24927cc9746b4e556934adf35f61f7d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 526, "methodNumberAfterChange": 526, "signatureBeforeChange": " \tpublic void test522()", "signatureAfterChange": " \tpublic void test522()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tstatic public <T extends Collection> void addAll(T a, T b) {\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 18)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c72d08a1bf860f5396cd7f5fe84be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "c4baf766be166b04f595eec5cebbd2a64f399daa", "commitAfterChange": "6574ecf5c4b5647220e5c6028073411e3f107ad7", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " public void test097()", "signatureAfterChange": " public void test097()", "diff": ["-\t\t\t\"    I functional = Action::<?>fooMethod;\\r\\n\" + ", "+\t\t\t\"    I functional = Action::<?>fooMethod;\\r\\n\" + // no raw type warning here, Action:: is really Action<>::", "-\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tI functional = Action::<?>fooMethod;\\n\" + ", "-\t\t\t\"\t               ^^^^^^\\n\" + ", "-\t\t\t\"Action is a raw type. References to generic type Action<K> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442f77cb71473f48a298b738192cea28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0660a80b4f83507ec084149491c197acba246b67", "commitAfterChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "methodNumberBeforeChange": 919, "methodNumberAfterChange": 919, "signatureBeforeChange": " public void test0912()", "signatureAfterChange": " public void test0912()", "diff": ["-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tvoid foo(List<? extends Collection<String>[]> l1, List<Collection[]> l2) {\\n\" + ", "+\t\t\"\t                                                       ^^^^^^^^^^\\n\" + ", "+\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fccb0c2bb34373375c88e537cb0b9f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "     public void test132()", "signatureAfterChange": "     public void test132()", "diff": ["-    \t\t\"----------\\n\" + ", "+            \"----------\\n\" + ", "-    \t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "+    \t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+    \t\t\"\tList<X> l = new Vector();\\n\" + ", "+    \t\t\"\t                ^^^^^^\\n\" + ", "+    \t\t\"Type safety: Vector is a raw type. References to generic type Vector<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "-    \t\t\"4. WARNING in X.java (at line 18)\\n\" + ", "+    \t\t\"5. WARNING in X.java (at line 18)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbc9ad466bd1bdf3246d1c30b79bfc06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "1f936417a416d90917cba09bee390af7aeeb85e8", "commitAfterChange": "cf0fc1d100d6a0dfa353e3125744fa10a50c8d3b", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void testNullTypeInference2f()", "signatureAfterChange": " \tpublic void testNullTypeInference2f()", "diff": ["-\t\t\t\"1. WARNING in PolyNull.java (at line 9)\\n\" + ", "+\t\t\t\"1. ERROR in PolyNull.java (at line 7)\\n\" + ", "+\t\t\t\"\t<X> X extract(Func<@Nullable X> f, @Nullable X s) { return f.a(s); }\\n\" + ", "+\t\t\t\"\t                                                           ^^^^^^\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): required \\'X\\' but this expression has type \\'@Nullable X\\', where 'X' is a free type variable\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in PolyNull.java (at line 9)\\n\" + ", "-\t\t\t\"2. ERROR in PolyNull.java (at line 9)\\n\" + ", "+\t\t\t\"3. ERROR in PolyNull.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae1b148ea82c390115f0c21379f27b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 657, "methodNumberAfterChange": 657, "signatureBeforeChange": "\t \tpublic void test653()", "signatureAfterChange": "\t \tpublic void test653()", "diff": ["+\t        \"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tstatic public <T extends Collection> void workaround(T a, T b) {\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + "]}], "num": 35543}