{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3fe651e2ec9afe7948e34bd52ff6439", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4520885eed92f86182b5f75fb5b80f8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.typeID() == T_boolean)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.typeID() == T_boolean)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.typeID() == T_boolean)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.typeID() == T_boolean)) {", "-\t\t\tif ((left.constant != NotAConstant) && (left.constant.typeID() == T_boolean)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.typeID() == T_boolean)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.typeID() == T_boolean)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.typeID() == T_boolean)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8938b3d998a0afc88814d34a388f290", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "b4b0b4bd0bb28b394799916fd599fbccaa40274d", "commitAfterChange": "b85788ed00669d561d218c53dfc5e78654d9a449", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\tConstant condConstant = this.condition.constant;", "+\t\t", "-\t\t\tcondition.analyseCode(", "+\t\t\tthis.condition.analyseCode(", "-\t\t\tif ((condition.constant != NotAConstant)", "-\t\t\t\t&& (condition.constant.booleanValue() == true)) {", "+\t\t\tif ((condConstant != NotAConstant) && (condConstant.booleanValue() == true)) {", "-\t\t\t\t((condition.constant != Constant.NotAConstant)", "-\t\t\t\t\t&& (condition.constant.booleanValue() == false))", "+\t\t\t\t((condConstant != Constant.NotAConstant) && (condConstant.booleanValue() == false))", "-\t\tif ((condition.constant != Constant.NotAConstant)", "-\t\t\t&& (condition.constant.booleanValue() == true)) {", "+\t\tif ((condConstant != Constant.NotAConstant) && (condConstant.booleanValue() == true)) {"]}], "num": 32393}