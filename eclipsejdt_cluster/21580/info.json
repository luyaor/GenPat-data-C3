{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01356cc6b640ae571ddebeec6028dc37", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f97a22baeb185e732d8a7bd31801df7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "4371b6d8f370e30de814aa3f488aa7fff3acceb1", "commitAfterChange": "653406a482474edc2d8737f13239902108d47273", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkAnnotation()", "diff": ["-\t\tthis.annotation.matchPatternLocator(this.patternLocator, this.nodeSet);", "+\t\t// Search for pattern locator matches in annotation @throws/@exception tags", "+\t\tTypeReference[] thrownExceptions = this.annotation.thrownExceptions;", "+\t\tint throwsTagsNbre = thrownExceptions == null ? 0 : thrownExceptions.length;", "+\t\tfor (int i = 0; i < throwsTagsNbre; i++) {", "+\t\t\tTypeReference typeRef = thrownExceptions[i];", "+\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t}", "+", "+\t\t// Search for pattern locator matches in annotation @see tags", "+\t\tExpression[] references = this.annotation.references;", "+\t\tint seeTagsNbre = references == null ? 0 : references.length;", "+\t\tfor (int i = 0; i < seeTagsNbre; i++) {", "+\t\t\tExpression reference = references[i];", "+\t\t\tif (reference instanceof TypeReference) {", "+\t\t\t\tTypeReference typeRef = (TypeReference) reference;", "+\t\t\t\tpatternLocator.match(typeRef, nodeSet);", "+\t\t\t} else if (reference instanceof AnnotationFieldReference) {", "+\t\t\t\tAnnotationFieldReference fieldRef = (AnnotationFieldReference) reference;", "+\t\t\t\tpatternLocator.match(fieldRef, nodeSet);", "+\t\t\t} else if (reference instanceof AnnotationMessageSend) {", "+\t\t\t\tAnnotationMessageSend messageSend = (AnnotationMessageSend) reference;", "+\t\t\t\tpatternLocator.match(messageSend, nodeSet);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8710d7b330f8e58f397dc4be6af220c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "c065b0d569ec3f9c64ce0f4814c700b82af5514f", "commitAfterChange": "150ea6aad0e3f07df1c56f34e2968d5c4e914a0c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void matchAnnotations(TypeReferencePattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException", "signatureAfterChange": " void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException", "diff": ["-void matchAnnotations(TypeReferencePattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException {", "+void matchAnnotations(SearchPattern pattern, MatchLocator locator, ClassFile classFile, IBinaryType binaryType) throws CoreException {", "+\t// Only process TypeReference patterns", "+\tswitch (((InternalSearchPattern)pattern).kind) {", "+\t\tcase TYPE_REF_PATTERN:", "+\t\t\tbreak;", "+\t\tcase OR_PATTERN:", "+\t\t\tSearchPattern[] patterns = ((OrPattern) pattern).patterns;", "+\t\t\tfor (int i = 0, length = patterns.length; i < length; i++) {", "+\t\t\t\tmatchAnnotations(patterns[i], locator, classFile, binaryType);", "+\t\t\t}", "+\t\t\t// fall through default to return", "+\t\tdefault:", "+\t\t\treturn;", "+\t}", "+\tTypeReferencePattern typeReferencePattern  = (TypeReferencePattern) pattern;", "-\tif (checkAnnotations(pattern, annotations, binaryType.getTagBits())) {", "+\tif (checkAnnotations(typeReferencePattern, annotations, binaryType.getTagBits())) {", "-\t\t\tif (checkAnnotations(pattern, method.getAnnotations(), method.getTagBits())) {", "+\t\t\tif (checkAnnotations(typeReferencePattern, method.getAnnotations(), method.getTagBits())) {", "-\t\t\tif (checkAnnotations(pattern, field.getAnnotations(), field.getTagBits())) {", "+\t\t\tif (checkAnnotations(typeReferencePattern, field.getAnnotations(), field.getTagBits())) {"]}], "num": 21580}