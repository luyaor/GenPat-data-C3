{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a3bdffcfbdf8798cea41c77a5f1db9e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62ae4acdd2b68e2aee5995b880b6bacb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope)", "signatureAfterChange": " public MethodBinding binding(TypeBinding targetType, Scope scope)", "diff": ["-public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope) {", "-\tif (reportErrors) {", "-\t\tif (this.binding == null)", "-\t\t\tscope.problemReporter().genericInferenceError(\"method is unexpectedly unresolved\", this); //$NON-NLS-1$", "-\t\telse if (!this.binding.isValidBinding())", "-\t\t\tscope.problemReporter().invalidMethod(this, this.binding);", "-\t}", "+public MethodBinding binding(TypeBinding targetType, Scope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8b168e6fa4d894f3d533d5384bee00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "25be1dbaf8fb1fd662379be5af2493a9cf321ce6", "commitAfterChange": "e044b611f0f1c6c6d210b119e4ddf6a868a2b664", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t// check for deprecated receiver type", "-\t\t\t\t\t\t// deprecation check for receiver type if not first token", "-\t\t\t\t\t\tif (indexOfFirstFieldBinding > 1) {", "-\t\t\t\t\t\t\tif (isTypeUseDeprecated(this.actualReceiverType, scope))", "-\t\t\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.actualReceiverType, this);", "-\t\t\t\t\t\t}", "+//\t\t\t\t\t\t// check for deprecated receiver type", "+//\t\t\t\t\t\t// deprecation check for receiver type if not first token", "+//\t\t\t\t\t\tif (indexOfFirstFieldBinding > 1) {", "+//\t\t\t\t\t\t\tif (isTypeUseDeprecated(this.actualReceiverType, scope))", "+//\t\t\t\t\t\t\t\tscope.problemReporter().deprecatedType(this.actualReceiverType, this);", "+//\t\t\t\t\t\t}", "-\t\t\t\t\tif (isTypeUseDeprecated(type, scope))", "-\t\t\t\t\t\tscope.problemReporter().deprecatedType(type, this);", "+//\t\t\t\t\tif (isTypeUseDeprecated(type, scope))", "+//\t\t\t\t\t\tscope.problemReporter().deprecatedType(type, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eceae72daf4b26b83c3f481c6cdc973c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope)", "signatureAfterChange": " \tpublic MethodBinding binding(TypeBinding targetType, Scope scope)", "diff": ["-\t// -- interface Invocation: --", "-\tpublic MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope) {", "-\t\tif (reportErrors) {", "-\t\t\tif (this.binding == null)", "-\t\t\t\tscope.problemReporter().genericInferenceError(\"constructor is unexpectedly unresolved\", this); //$NON-NLS-1$", "-\t\t\telse if (!this.binding.isValidBinding())", "-\t\t\t\tscope.problemReporter().invalidConstructor(this, this.binding);", "-\t\t}", "+\t// -- interface Invocation", "+\tpublic MethodBinding binding(TypeBinding targetType, Scope scope) {"]}], "num": 4816}