{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8003a231659b2c52ad44f43d0fad64ba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00fa6fc091cba7ca7f86e1bdbba06e5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate void updateWorkingCopy(  \t\t\tString contents, ICompilationUnit workingCopy,  \t\t\tWorkingCopyOwner workingCopyOwner, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tprivate static boolean updateWorkingCopy(  \t\t\tString contents, ICompilationUnit workingCopy,  \t\t\tWorkingCopyOwner workingCopyOwner, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "diff": ["-\tprivate void updateWorkingCopy( ", "+\t */", "+\tprivate static boolean updateWorkingCopy( ", "-\t\t//", "-\t\t// TODO - reuse existing char[] if there is one?", "-\t\t//", "-\t\tchar[] buf = new char[contents.length()];", "-\t\tcontents.getChars(0, contents.length(), buf, 0);", "-\t\tb.setContents(buf);", "+\t\tchar[] oldBuf = b.getCharacters();", "+\t\t// Diff the contents, and only set if they differ", "+\t\tif (oldBuf.length == contents.length()) {", "+\t\t\tboolean contentsMatch = true;", "+\t\t\tfor (int i=0; i<oldBuf.length; i++) {", "+\t\t\t\tif (oldBuf[i] != contents.charAt(i)) {", "+\t\t\t\t\tcontentsMatch = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (contentsMatch) {", "+\t\t\t\t// No change, no need to update buffer", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tb.setContents(contents);", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0beebe0b561a463905c6e7ba35ab9fa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate static boolean updateWorkingCopy(  \t\t\tString contents, ICompilationUnit workingCopy,  \t\t\tWorkingCopyOwner workingCopyOwner, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tprivate synchronized Set<ICompilationUnit> discardWorkingCopy(ICompilationUnit wc)", "diff": ["+\t */", "+\tprivate synchronized Set<ICompilationUnit> discardWorkingCopy(ICompilationUnit wc) {", "+\t\tSet<ICompilationUnit> toDiscard;", "+\t\tICompilationUnit hidingWc = _hiddenBuiltTypes.remove(wc);", "+\t\tif (null != hidingWc) {", "+\t\t\ttoDiscard = Collections.singleton(hidingWc);", "+\t\t}", "+\t\telse {", "+\t\t\ttoDiscard = removeWcChildrenFromMaps(wc);", "+\t\t\tIFile file = (IFile) wc.getResource();", "+\t\t\t_parentToGenWorkingCopies.removeKey(file);", "+\t\t\t_workingCopies.remove(wc);", "+\t\t\ttoDiscard.add(wc);", "+\t\t}", "+\t\tassert checkIntegrity();", "+\t\treturn toDiscard;", "+\t}", "-\t */", "-\tprivate static boolean updateWorkingCopy( ", "-\t\t\tString contents, ICompilationUnit workingCopy, ", "-\t\t\tWorkingCopyOwner workingCopyOwner, IProgressMonitor progressMonitor )", "-\t\tthrows JavaModelException", "-\t{", "-\t\tIBuffer b = workingCopy.getBuffer();", "-\t\tchar[] oldBuf = b.getCharacters();", "-\t\t// Diff the contents, and only set if they differ", "-\t\tif (oldBuf.length == contents.length()) {", "-\t\t\tboolean contentsMatch = true;", "-\t\t\tfor (int i=0; i<oldBuf.length; i++) {", "-\t\t\t\tif (oldBuf[i] != contents.charAt(i)) {", "-\t\t\t\t\tcontentsMatch = false;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (contentsMatch) {", "-\t\t\t\t// No change, no need to update buffer", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\tb.setContents(contents);", "-\t\tworkingCopy.reconcile(AST.JLS3, true, workingCopyOwner,", "-\t\t\t\tprogressMonitor);", "-\t\treturn true;", "-\t}"]}], "num": 31437}