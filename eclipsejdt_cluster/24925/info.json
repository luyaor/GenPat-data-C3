{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a36250192254bd16f736f3614e0bb902", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e023db0e3dfad05f48f22050f66cd4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment.java", "commitBeforeChange": "61bb7cec9d84760aee596143730a3411f8956386", "commitAfterChange": "3ff8bc4f6d4262fd58c9aba3cd836581456da007", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "signatureAfterChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "diff": ["-\t\t\t\tif (root.getKind() == IPackageFragmentRoot.K_SOURCE) {", "+\t\t\t\tif (target == null) {", "+\t\t\t\t\t// target doesn't exist any longer", "+\t\t\t\t\t// just resize cpLocations", "+\t\t\t\t\tSystem.arraycopy(cpLocations, 0, cpLocations = new ClasspathLocation[cpLocations.length-1], 0, index);", "+\t\t\t\t} else if (root.getKind() == IPackageFragmentRoot.K_SOURCE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6343f2b177f9374710e96177f13311ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "diff": ["-\t\t\t\t\t\t// add the project and its jar pkg fragment roots", "+\t\t\t\t\t\t// add the project and its binary pkg fragment roots", "-\t\t\t\t\t\t\tif (pkgFragmentRoot.isArchive()) {", "+\t\t\t\t\t\t\tif (pkgFragmentRoot.getKind() == IPackageFragmentRoot.K_BINARY) {", "-\t\t\t\tif (pkgFragmentRoot.isArchive()) {", "+\t\t\t\tif (pkgFragmentRoot.getKind() == IPackageFragmentRoot.K_BINARY) {"]}], "num": 24925}