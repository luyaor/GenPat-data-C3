{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5304015e5a69e5964528289fc89eae2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b4ab0d2c1ef510574fcad6194e58ab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "commitAfterChange": "f6ec98c28a6dab858ad73a502050b5fb2a693eb4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tboolean polyExpressionSeen = false;", "+\t\tTypeBinding argumentType;", "-\t\t\tif ((argumentTypes[i] = this.arguments[i].resolveType(scope)) == null)", "+\t\t\tif ((argumentType = argumentTypes[i] = this.arguments[i].resolveType(scope)) == null)", "+\t\t\tif (argumentType != null && argumentType.kind() == Binding.POLY_TYPE)", "+\t\t\t\tpolyExpressionSeen = true;", "-\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "-\t\tExpression argument = this.arguments[i];", "-\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "-\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "-\t\t\targument.setExpectedType(this.binding.parameters[i]);", "-\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\tif (polyExpressionSeen) {", "+\t\tboolean variableArity = this.binding.isVarargs();", "+\t\tfinal TypeBinding[] parameters = this.binding.parameters;", "+\t\tfinal int parametersLength = parameters.length;", "+\t\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\t\tExpression argument = this.arguments[i];", "+\t\t\tTypeBinding parameterType = i < parametersLength ? parameters[i] : parameters[parametersLength - 1];", "+\t\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\t\tif (variableArity && i >= parametersLength - 1)", "+\t\t\t\t\targument.tagAsEllipsisArgument();", "+\t\t\t\targument.setExpectedType(parameterType);", "+\t\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93fe0c19f005f1c2277d6107b7447caa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "fbf658958d1eb066a4b5c16fdea253c3d8d5019c", "commitAfterChange": "f6ec98c28a6dab858ad73a502050b5fb2a693eb4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tboolean polyExpressionSeen = false;", "+\t\tTypeBinding argumentType;", "-\t\t\tif ((argumentTypes[i] = argument.resolveType(scope)) == null){", "+\t\t\tif ((argumentType = argumentTypes[i] = argument.resolveType(scope)) == null){", "+\t\t\tif (argumentType != null && argumentType.kind() == Binding.POLY_TYPE)", "+\t\t\t\tpolyExpressionSeen = true;", "-\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "-\t\tExpression argument = this.arguments[i];", "-\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "-\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "-\t\t\targument.setExpectedType(this.binding.parameters[i]);", "-\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\tif (polyExpressionSeen) {", "+\t\tboolean variableArity = this.binding.isVarargs();", "+\t\tfinal TypeBinding[] parameters = this.binding.parameters;", "+\t\tfinal int parametersLength = parameters.length;", "+\t\tfor (int i = 0, length = this.arguments == null ? 0 : this.arguments.length; i < length; i++) {", "+\t\t\tExpression argument = this.arguments[i];", "+\t\t\tTypeBinding parameterType = i < parametersLength ? parameters[i] : parameters[parametersLength - 1];", "+\t\t\tif (argumentTypes[i] instanceof PolyTypeBinding) {", "+\t\t\t\targument.setExpressionContext(INVOCATION_CONTEXT);", "+\t\t\t\tif (variableArity && i >= parametersLength - 1)", "+\t\t\t\t\targument.tagAsEllipsisArgument();", "+\t\t\t\targument.setExpectedType(parameterType);", "+\t\t\t\targumentTypes[i] = argument.resolveType(scope);", "+\t\t\t}"]}], "num": 57883}