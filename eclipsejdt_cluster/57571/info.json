{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ef29ae8158e4fd358881d7256e2c86b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba1c7c6c1498c2b417eedd5f4943097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "785b5a5212732878b11204756fc2e20339845fb0", "commitAfterChange": "3d7bc61655a92c7c01b569228f267b1a98e25ce8", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "signatureAfterChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "diff": ["-\t\t\t\treturn; // do not report unused serialVersionUID field", "+\t\tReferenceBinding referenceBinding = field.declaringClass;", "+\t\tif (referenceBinding != null) {", "+\t\t\tif (referenceBinding.findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {", "+\t\t\t\treturn; // do not report unused serialVersionUID field for class that implements Serializable", "+\t\t\t}", "+\t\t}", "-\t\t\t\treturn; // do not report unused serialPersistentFields field", "+\t\tReferenceBinding referenceBinding = field.declaringClass;", "+\t\tif (referenceBinding != null) {", "+\t\t\tif (referenceBinding.findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {", "+\t\t\t\treturn; // do not report unused serialVersionUID field for class that implements Serializable", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9ab22000b0d63ac7a2cf2516f5d8e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "1b4ae3c306349bc12b5bd14c0b0208197346f4fe", "commitAfterChange": "e411de6de610f4a41b2ca5b35274818572448e41", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " public static TypeBinding getConstantPoolDeclaringClass(Scope currentScope, MethodBinding codegenBinding, TypeBinding actualReceiverType, boolean isImplicitThisReceiver)", "signatureAfterChange": " public static TypeBinding getConstantPoolDeclaringClass(Scope currentScope, MethodBinding codegenBinding, TypeBinding actualReceiverType, boolean isImplicitThisReceiver)", "diff": ["-\t\t\t\tif (!actualReceiverType.isIntersectionType18()) // no constant pool representation. FIXME, visibility issue not handled.", "+\t\t\t\tif (actualReceiverType.isIntersectionType18()) {", "+\t\t\t\t\tTypeBinding[] intersectingTypes = ((IntersectionTypeBinding18)actualReceiverType).getIntersectingTypes();", "+\t\t\t\t\tfor(int i = 0; i < intersectingTypes.length; i++) {", "+\t\t\t\t\t\tif (intersectingTypes[i].findSuperTypeOriginatingFrom(constantPoolDeclaringClass) != null) {", "+\t\t\t\t\t\t\tconstantPoolDeclaringClass = intersectingTypes[i];", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a5dc901c82ed9eb911a40f4a4ca823", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "2c7a59198ef0accc78a3ea8fb276fbfe877a83c2", "commitAfterChange": "a55be3089b1474701c6009071b6792ce21fce5bc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\t}", "+\t\tif (this.expectedType instanceof IntersectionCastTypeBinding) {", "+\t\t\tReferenceBinding[] intersectingTypes =  ((IntersectionCastTypeBinding)this.expectedType).intersectingTypes;", "+\t\t\tfor (int t = 0, max = intersectingTypes.length; t < max; t++) {", "+\t\t\t\tif (intersectingTypes[t].findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {", "+\t\t\t\t\tthis.isSerializable = true;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else if (this.expectedType != null && ", "+\t\t\t\t   this.expectedType.findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {", "+\t\t\tthis.isSerializable = true;"]}], "num": 57571}