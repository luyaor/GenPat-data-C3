{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c992b4b9ebe671c46fed92706d3c2d12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4feb634fb245d549bb48c94e5d279022", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/OverloadResolutionTest8.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\"The method goo(J) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\"  boolean y = true;\\n\" + ", "-\t\t\t\"  while (y)    ;\\n\" + ", "-\t\t\t\"})\\n\" +  ", "+\t\t\t\"\t    ^^^^\\n\" + ", "+\t\t\t\"This method must return a result of type int\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tgoo(()-> { \\n\" + ", "+\t\t\t\"\t    ^^^^\\n\" + ", "+\t\t\t\"This method must return a result of type int\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tgoo(()-> { \\n\" + ", "+\t\t\t\"\t    ^^^^\\n\" + ", "+\t\t\t\"This method must return a result of type int\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e42be62b8628fa86e3fdae178a1a181a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 176, "signatureBeforeChange": " public void test401939a()", "signatureAfterChange": " public void test401939a()", "diff": ["-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (() -> {\\n\" + ", "-\t\t\t\t\"  if ((1 == 2))\\n\" + ", "-\t\t\t\t\"      throw new RuntimeException();\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t    ^^^^\\n\" + ", "+\t\t\t\t\"This method must return a result of type int\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"\tfoo(()->{ if (1 == 2) throw new RuntimeException(); });\\n\" + ", "+\t\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + "]}], "num": 54795}