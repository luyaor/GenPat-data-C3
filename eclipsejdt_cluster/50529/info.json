{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04ad4b5b9fdcf72da0b217e3126e1e29", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045e2be2c9849942d04e8b5399539237", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "ebdcb2c23696bc9acece10df9008b71d6833f5aa", "commitAfterChange": "e64df949bc4538f0adcb983afebdd9d170ae0bd1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected void pushText(int start, int end)", "signatureAfterChange": " \tprotected void pushText(int start, int end)", "diff": ["-\t\t\t\tnextToken : while (!this.scanner.atEnd() && this.completionNode == null && !this.abort) {", "+\t\t\t\twhile (!this.scanner.atEnd() && this.completionNode == null && !this.abort) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b79fbaa0556d266bc8607b4138089c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "852007504aa320674f74f0c594f5665e89f3d3e7", "commitAfterChange": "e81d6189682d067fcbfe542097b61f61885a288c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected boolean commentParse()", "signatureAfterChange": " \tprotected boolean commentParse()", "diff": ["-\t\t\tcharacterLoop: while (!abort && this.index < this.javadocEnd) {", "+\t\t\twhile (!abort && this.index < this.javadocEnd) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e27227020b256aaf0e8c3699537b661", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Util.java", "commitBeforeChange": "d6b4673c8981b96659c9dcea892ebe1f0abbb00b", "commitAfterChange": "035b068bdf6fb282eada8eb5cb52008d779d4e08", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic final static boolean isExcluded(char[] path, char[][] inclusionPatterns, char[][] exclusionPatterns, boolean isFolderPath)", "signatureAfterChange": " \tpublic final static boolean isExcluded(char[] path, char[][] inclusionPatterns, char[][] exclusionPatterns, boolean isFolderPath)", "diff": ["-\t\texclusionCheck: if (exclusionPatterns != null) {", "+\t\tif (exclusionPatterns != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ecae701327770bc9f5ac9042beac41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "c1ed57c65f800091b6298f2d9d0ae2cf5ce4a4d3", "commitAfterChange": "facb8d37023d2f5a3fd950860f1f4056ac4b75fc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate int parseCheck(int stck[], int stack_top, int first_token, int buffer_position)", "signatureAfterChange": " \tprivate int parseCheck(int stck[], int stack_top, int first_token, int buffer_position)", "diff": ["-\t\t\tprocess_non_terminal:", "+\t\t\t// process_non_terminal:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb61ef831935a64b88e0e8f4d6e6c3d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "d6b4673c8981b96659c9dcea892ebe1f0abbb00b", "commitAfterChange": "035b068bdf6fb282eada8eb5cb52008d779d4e08", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public static char[][] getTypeParameters(char[] methodOrTypeSignature) throws IllegalArgumentException", "signatureAfterChange": " public static char[][] getTypeParameters(char[] methodOrTypeSignature) throws IllegalArgumentException", "diff": ["-\t\t\tnextBound: while (methodOrTypeSignature[i] == ':') {", "+\t\t\twhile (methodOrTypeSignature[i] == ':') {"]}], "num": 50529}