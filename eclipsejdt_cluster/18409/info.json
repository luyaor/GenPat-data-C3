{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33df869f9c7897a31bf5128ffbafaa49", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "145efc3df477703b565200654553de68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "39787fb323b3f06bf37a085118b28347f6a17b39", "commitAfterChange": "0cc61e9905c3f603dab789f6a44abfa63094212c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tthis.postTryInitStateIndex = currentScope.methodScope().recordInitializationStates(tryInfo);", "-\t\t\tthis.postTryInitStateIndex = currentScope.methodScope().recordInitializationStates(tryInfo);", "-\t\t\tthis.postTryInitStateIndex = currentScope.methodScope().recordInitializationStates(tryInfo);", "-\t\t\tthis.postTryInitStateIndex = currentScope.methodScope().recordInitializationStates(tryInfo);", "+\t\tthis.naturalExitMergeInitStateIndex =", "+\t\t\tcurrentScope.methodScope().recordInitializationStates(tryInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a6665ae9c34a3ccb400d88708ce8c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "de0226254a405a86138be24d23fd7ea72c01b855", "commitAfterChange": "2d0b70991183be97a67695fa28c23b0cb3fbbdbf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tMethodScope methodScope = currentScope.methodScope();", "+\tAbstractMethodDeclaration referenceMethod = methodScope.referenceMethod();", "-\t\t\tif (currentScope.methodScope() != trackingVariable.methodScope)", "+\t\t\tif (methodScope != trackingVariable.methodScope)", "-\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+\t\tmethodScope.recordInitializationStates(flowInfo);", "-\t\t\t\t\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+\t\t\t\t\t\tmethodScope.recordInitializationStates(flowInfo);", "+\t\tif (traversedContext.associatedNode == referenceMethod)", "+\t\t\tbreak; // don't traverse beyond the enclosing method (see https://bugs.eclipse.org/360328)."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7496a06d4664d3108a9b27ca31befaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "c36a6a2b662267e56067d121b7f34ae48cbcb692", "commitAfterChange": "93c94a7685512a759bb72181caf791ff94ebd920", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tthis.preConditionInitStateIndex = currentScope.methodScope().recordInitializationStates(actionInfo);", "+\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=367023, we reach the condition at the bottom via two arcs, ", "+\t   one by free fall and another by continuing... Merge initializations propagated through the two pathways,", "+\t   cf, while and for loops.", "+\t*/", "+\tthis.preConditionInitStateIndex = currentScope.methodScope().recordInitializationStates(actionInfo.mergedWith(loopingContext.initsOnContinue));"]}], "num": 18409}