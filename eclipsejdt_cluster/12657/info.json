{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eb57cd5e06e9001510d856a499f31b6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e01c921d42ac008c77f91cbfac907c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b3c49effd6a37f25d3bc9f0a1e991b665346dde6", "commitAfterChange": "350354f214ca227e1737fa04a92c132cd3211f35", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \tpublic void reportReference(\r \t\tAstNode reference,\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tIJavaElement parent,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportReference(\r \t\tAstNode reference,\r \t\tAbstractMethodDeclaration methodDeclaration,\r \t\tIJavaElement parent,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["-\t\tif (reference instanceof QualifiedNameReference\r", "-\t\t\t|| reference instanceof QualifiedTypeReference\r", "-\t\t\t|| reference instanceof ArrayTypeReference) {\r", "-\t\t\tthis.pattern.matchReportReference(reference, enclosingElement, accuracy, this);\r", "-\t\t} else\r", "-\t\t\tif (reference instanceof MessageSend) {\r", "-\t\t\t\t// message ref are starting at the selector start\r", "-\t\t\t\tthis.report(\r", "-\t\t\t\t\t(int) (((MessageSend) reference).nameSourcePosition >> 32),\r", "-\t\t\t\t\treference.sourceEnd,\r", "-\t\t\t\t\tenclosingElement,\r", "-\t\t\t\t\taccuracy);\r", "-\t\t\t} else {\r", "-\t\t\t\tthis.report(reference.sourceStart, reference.sourceEnd, enclosingElement, accuracy);\r", "-\t\t\t}\r", "+\t\tthis.pattern.matchReportReference(reference, enclosingElement, accuracy, this);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73bfa8b2de404c0abf15c031cf5af9ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "948661c4cb198af70b598b9954e5159cb73d7234", "commitAfterChange": "b1348e3d0230a581c7eb25acd6ec072853b12bb0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportAccurateReference(\r \t\tint sourceStart,\r \t\tint sourceEnd,\r \t\tchar[][] qualifiedName,\r \t\tIJavaElement element,\r \t\tint accuracy)\r \t\tthrows CoreException", "diff": ["+\t\tthrows CoreException {\r", "+\t\t\t\r", "+\t\tthis.reportAccurateReference(\r", "+\t\t\tsourceStart,\r", "+\t\t\tsourceEnd,\r", "+\t\t\tqualifiedName,\r", "+\t\t\telement,\r", "+\t\t\tnew int[] {accuracy},\r", "+\t\t\tfalse);\r", "+\t}\r", "-\t\t\t\t\t&& !CharOperation.equals(currentTokenSource, qualifiedName[i++])) {\r", "-\t\t\t\tif (CharOperation.equals(currentTokenSource, qualifiedName[i - 1])\r", "-\t\t\t\t\t&& (previousValid == -1 || previousValid == i - 2)) {\r", "-\t\t}\r", "-\t\twhile (token != TerminalSymbols.TokenNameEOF && i < tokenNumber);\r", "-\t\t// accept reference\r", "-\t\tif (refSourceStart != -1) {\r", "-\t\t\tthis.report(refSourceStart, refSourceEnd, element, accuracy);\r", "-\t\t} else {\r", "-\t\t\tthis.report(sourceStart, sourceEnd, element, accuracy);\r", "-\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caccf643b3ffd09566e3484c3251ccb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "e657b912c1ef94d48e9749f2cbf91c83fff8728f", "commitAfterChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t} else if (this.pattern.findReferences && reference instanceof QualifiedNameReference) {", "+\t} else if (reference instanceof FieldReference) {", "+\t\tlong position = ((FieldReference) reference).nameSourcePosition;", "+\t\tlocator.report(position, position, element, accuracy);", "+\t} else if (reference instanceof SingleNameReference) {", "+\t\tlocator.report(reference.sourceStart, reference.sourceEnd, element, accuracy);", "+\t} else if (reference instanceof QualifiedNameReference) {", "-\t\tlocator.reportAccurateReference(", "-\t\t\treference.sourceStart, ", "-\t\t\treference.sourceEnd, ", "-\t\t\tqNameRef.tokens, ", "-\t\t\telement, ", "-\t\t\taccuracies);", "-\t} else {", "-\t\tlocator.reportAccurateReference(", "-\t\t\treference.sourceStart, ", "-\t\t\treference.sourceEnd, ", "-\t\t\tnew char[][] {this.pattern.name}, ", "-\t\t\telement, ", "-\t\t\taccuracy);", "+\t\tlocator.reportAccurateReference(reference.sourceStart, reference.sourceEnd, qNameRef.tokens, element, accuracies);"]}], "num": 12657}