{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1b128f922939ac86e0b0cbc7f22047e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a078518ef65e88c6de61bc1166d4a22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8820da5e9429a9756678a42be4e6b838f21ed681", "commitAfterChange": "641f34b4272f0b7ac3d1c9555948214a8d1bc770", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["+\t\t\t\tboolean skipOnDemand = false; // set to true when matched static import of method name so stop looking for on demand methods", "-\t\t\t\t\t\t\tif (resolvedImport instanceof ReferenceBinding)", "+\t\t\t\t\t\t\tif (!skipOnDemand && resolvedImport instanceof ReferenceBinding)", "+\t\t\t\t\t\t\t\t\t\t\t\tif (!importBinding.onDemand && foundMethod.isValidBinding())", "+\t\t\t\t\t\t\t\t\t\t\t\t\tskipOnDemand = true;", "-\t\t\t\t\t\t\t\t\t\t\t\tif (visible == null) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif (!skipOnDemand && !importBinding.onDemand) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tvisible = null; // forget previous matches from on demand imports", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfoundMethod = compatibleMethod;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tskipOnDemand = true;", "+\t\t\t\t\t\t\t\t\t\t\t\t} else if (visible == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d48b098d88ebf9c30948883c70da30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a7c3cda7c961d5a5839fc88cdcdca05f749f0591", "commitAfterChange": "45f26d79341dbd73cc50656614a5963b62874264", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "-\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\t\t\t\treturn importBinding.resolvedImport; // already know its visible", "+\t\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = ((FieldBinding) importBinding.resolvedImport).declaringClass;", "+\t\t\t\t\t\t\t\t\t\tif (declaringClass.canBeSeenBy(this)) {", "+\t\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "+\t\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\t\t\treturn importBinding.resolvedImport;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ReceiverTypeNotVisible);"]}], "num": 14002}