{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e52fb6aac57ba5caaf4c7352bf32c39e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3609dbfe3450f185f96bf3af22d9535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test019()", "signatureAfterChange": " \tpublic void test019()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tClass value() default X.clazz();\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tstatic Class clazz() { return X.class; }\\n\" + ", "+\t\t\t\"\t       ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5a239f472f0feeb7969221ba3ce40a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test118()", "signatureAfterChange": " \tpublic void test118()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tstatic ArrayList someList;\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tsomeList = new ArrayList();\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + "]}], "num": 50414}