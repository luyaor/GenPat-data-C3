{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9057a26339c9a1a63c044634d590b6a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97842d6d3109f1f43f47098dfbbf65b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "4a6a7781755a7a1cf7e30b7e629a87eea802f054", "commitAfterChange": "79d84450fa0277faedd98590a756a4b3c3037926", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IfStatement( \t\tExpression condition, \t\tStatement thenStatement, \t\tStatement elseStatement, \t\tint s, \t\tint e)", "signatureAfterChange": "  \tpublic IfStatement(Expression condition, Statement thenStatement, Statement elseStatement, int sourceStart, int sourceEnd)", "diff": ["-\tpublic IfStatement(", "-\t\tExpression condition,", "-\t\tStatement thenStatement,", "-\t\tStatement elseStatement,", "-\t\tint s,", "-\t\tint e) {", "+\tpublic IfStatement(Expression condition, Statement thenStatement, Statement elseStatement, int sourceStart, int sourceEnd) {", "-\t\tsourceEnd = e;", "-\t\tsourceStart = s;", "+\t\tif (elseStatement instanceof IfStatement) elseStatement.bits |= IsElseIfStatement;", "+\t\tthis.sourceStart = sourceStart;", "+\t\tthis.sourceEnd = sourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6a7ac25b79d71cb9e530b23e3fcb9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "babe82af3726a6979eb5da4c747f51906154b2bc", "commitAfterChange": "fab4ac0c2a45db58d02407ad5972d843c8dba1e6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic DoStatement(Expression condition, Statement action, int s, int e)", "signatureAfterChange": "  public DoStatement(Expression condition, Statement action, int s, int e)", "diff": ["-\tpublic DoStatement(Expression condition, Statement action, int s, int e) {", "+public DoStatement(Expression condition, Statement action, int s, int e) {", "-\t\tthis.sourceStart = s;", "-\t\tthis.sourceEnd = e;", "-\t\tthis.condition = condition;", "-\t\tthis.action = action;", "-\t\t// remember useful empty statement", "-\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatement;", "-\t}", "+\tthis.sourceStart = s;", "+\tthis.sourceEnd = e;", "+\tthis.condition = condition;", "+\tthis.action = action;", "+\t// remember useful empty statement", "+\tif (action instanceof EmptyStatement) action.bits |= ASTNode.IsUsefulEmptyStatement;", "+}"]}], "num": 39418}