{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e979ac0c34376fd994df2626fd00241", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e86c6ed9ca60ecf1a7054cafc20dfe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SwitchTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test010()", "signatureAfterChange": " public void test010()", "diff": ["+\tString newMessage =", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\"\tswitch(this){\\n\" +", "+\t\t\t\"\t       ^^^^\\n\" +", "+\t\t\t\"Cannot switch on a value of type X. Only convertible int values, strings or enum constants are permitted\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" +", "+\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\"\t^^^^\\n\" +", "+\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 11)\\n\" +", "+\t\t\t\"\tswitch(x){\\n\" +", "+\t\t\t\"\t       ^\\n\" +", "+\t\t\t\"x cannot be resolved to a variable\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in X.java (at line 13)\\n\" +", "+\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\"\t^^^^\\n\" +", "+\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\";", "+\tString oldMessage =", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\"\tswitch(this){\\n\" +", "+\t\t\t\"\t       ^^^^\\n\" +", "+\t\t\t\"Cannot switch on a value of type X. Only convertible int values or enum constants are permitted\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" +", "+\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\"\t^^^^\\n\" +", "+\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 11)\\n\" +", "+\t\t\t\"\tswitch(x){\\n\" +", "+\t\t\t\"\t       ^\\n\" +", "+\t\t\t\"x cannot be resolved to a variable\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in X.java (at line 13)\\n\" +", "+\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\"\t^^^^\\n\" +", "+\t\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\";", "-\t\"----------\\n\" +", "-\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\"\tswitch(this){\\n\" +", "-\t\"\t       ^^^^\\n\" +", "-\t\"Cannot switch on a value of type X. Only convertible int values or enum constants are permitted\\n\" +", "-\t\"----------\\n\" +", "-\t\"2. ERROR in X.java (at line 6)\\n\" +", "-\t\"\tZork z;\\n\" +", "-\t\"\t^^^^\\n\" +", "-\t\"Zork cannot be resolved to a type\\n\" +", "-\t\"----------\\n\" +", "-\t\"3. ERROR in X.java (at line 11)\\n\" +", "-\t\"\tswitch(x){\\n\" +", "-\t\"\t       ^\\n\" +", "-\t\"x cannot be resolved to a variable\\n\" +", "-\t\"----------\\n\" +", "-\t\"4. ERROR in X.java (at line 13)\\n\" +", "-\t\"\tZork z;\\n\" +", "-\t\"\t^^^^\\n\" +", "-\t\"Zork cannot be resolved to a type\\n\" +", "-\t\"----------\\n\");", "+\tthis.complianceLevel >= JDKLevelSupportingStringSwitch ? newMessage : oldMessage);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9d6f5c41e832d6fb20d00a161463d2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptBuilderTests.java", "commitBeforeChange": "27aef0560bb19b81e8fa90224ee21a025635acc0", "commitAfterChange": "f34d0660fc08a428cce0fefe472952c23bd16c8b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \t@SuppressWarnings(\"nls\" \tpublic void testGeneratingIllegalTypeName()", "signatureAfterChange": " \t \t@SuppressWarnings(\"nls\" \tpublic void testGeneratingIllegalTypeName()", "diff": ["+", "+\t\t// Type \"lowercase\" would cause a warning in the new type wizard, because it doesn't start with caps.", "+\t\t// Test that we do not issue a warning or error in this case.", "+\t\tString code2 = \"package p1;\\n\"", "+\t\t\t+ \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\"", "+\t\t\t+ \"import generatedfilepackage.lowercase;\"", "+\t\t\t+ \"\\n\" + \"public class A \" + \"\\n\" + \"{\"", "+\t\t\t+ \"    @HelloWorldAnnotation(\\\"lowercase\\\")\" + \"\\n\"", "+\t\t\t+ \"    public static void main( String[] argv )\" + \"\\n\" + \"    {\"", "+\t\t\t+ \"\\n\"", "+\t\t\t+ \"        lowercase.helloWorld();\"", "+\t\t\t+ \"\\n\" + \"    }\" + \"\\n\" + \"}\" + \"\\n\";", "+", "+\t\tenv.addClass( srcRoot, \"p1\", \"A\", code2 );", "+\t\tfullBuild( project.getFullPath() );", "+\t\texpectingNoProblems();"]}], "num": 63349}