{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5d958c1455b734af5636613fa8594e4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e07018ef97c07b68c8048141bc2316", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int literalIndexForJavaLangSystem()", "signatureAfterChange": " public int literalIndexForType(final char[] constantPoolName)", "diff": ["+public int literalIndexForType(final char[] constantPoolName) {", "+\tif ((index = classCache.get(constantPoolName)) < 0) {", "+\t\t// The entry doesn't exit yet", "+\t\tint nameIndex = literalIndex(constantPoolName);", "+\t\tindex = classCache.put(constantPoolName, currentIndex++);", "+\t\tif (index > 0xFFFF){", "+\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "+\t\t}", "+\t\twriteU1(ClassTag);", "+\t\t// Then add the 8 bytes representing the long", "+\t\twriteU2(nameIndex);", "+\t}", "+\treturn index;", "+}", "- */", "-public int literalIndexForJavaLangSystem() {", "-\tint index;", "-\tif ((index = wellKnownTypes[JAVA_LANG_SYSTEM_TYPE]) == 0) {", "-\t\tint nameIndex;", "-\t\t// The entry doesn't exit yet", "-\t\tnameIndex = literalIndex(QualifiedNamesConstants.JavaLangSystemConstantPoolName);", "-\t\tindex = wellKnownTypes[JAVA_LANG_SYSTEM_TYPE] = currentIndex++;", "-\t\tif (index > 0xFFFF){", "-\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "-\t\t}", "-\t\twriteU1(ClassTag);", "-\t\t// Then add the 8 bytes representing the long", "-\t\twriteU2(nameIndex);", "-\t}", "-\treturn index;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64f593aa939773a64034678aaa60c53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int literalIndexForJavaLangStringBuilder()", "signatureAfterChange": " private int putInNameAndTypeCache(final char[] key1, final char[] key2, int index)", "diff": ["- */", "-public int literalIndexForJavaLangStringBuilder() {", "-\tint index;", "-\tif ((index = wellKnownTypes[JAVA_LANG_STRINGBUILDER_TYPE]) == 0) {", "-\t\tint nameIndex;", "-\t\t// The entry doesn't exit yet", "-\t\tnameIndex = literalIndex(QualifiedNamesConstants.JavaLangStringBuilderConstantPoolName);", "-\t\tindex = wellKnownTypes[JAVA_LANG_STRINGBUILDER_TYPE] = currentIndex++;", "-\t\tif (index > 0xFFFF){", "-\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "-\t\t}", "-\t\twriteU1(ClassTag);", "-\t\t// Then add the 8 bytes representing the long", "-\t\twriteU2(nameIndex);", "-\t}", "-\treturn index;", "-}", "+}", "+private int putInNameAndTypeCache(final char[] key1, final char[] key2, int index) {", "+\tCharArrayCache value = (CharArrayCache) this.nameAndTypeCacheForFieldsAndMethods.get(key1);", "+\tif (value == null) {", "+\t\tCharArrayCache charArrayCache = new CharArrayCache();", "+\t\tcharArrayCache.put(key2, index);", "+\t\tthis.nameAndTypeCacheForFieldsAndMethods.put(key1, charArrayCache);", "+\t\tvalue.put(key2, index);"]}], "num": 37773}