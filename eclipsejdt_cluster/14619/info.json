{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "271cdf605d379a8dab6f586754fb220a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334e4903dd74ac8fd38318aa95fe8779", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "2c9facefb897e48eaff09e455771cc984ed9f6da", "commitAfterChange": "5560d8f0ae0785fb2b5baeb853846f71919562ba", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r protected void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": "\r \r protected void outputClassFiles(CompilationResult unitResult)", "diff": ["-\t\tif (destinationPath != null) {\r", "+\t\tif (!this.generatePackagesStructure) {\r", "+\t\t\twhile (classFiles.hasMoreElements()) {\r", "+\t\t\t\tthis.destinationPath = extractDestinationPathFromSourceFile(unitResult);\r", "+\t\t\t\t// retrieve the key and the corresponding classfile\r", "+\t\t\t\tClassFile classFile = (ClassFile) classFiles.nextElement();\r", "+\t\t\t\tchar[] filename = classFile.fileName();\r", "+\t\t\t\tint length = filename.length;\r", "+\t\t\t\tchar[] relativeName = new char[length + 6];\r", "+\t\t\t\tSystem.arraycopy(filename, 0, relativeName, 0, length);\r", "+\t\t\t\tSystem.arraycopy(CLASS_FILE_EXTENSION, 0, relativeName, length, 6);\r", "+\t\t\t\tCharOperation.replace(relativeName, '/', File.separatorChar);\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tClassFile.writeToDisk(\r", "+\t\t\t\t\t\tgeneratePackagesStructure,\r", "+\t\t\t\t\t\tdestinationPath,\r", "+\t\t\t\t\t\tnew String(relativeName),\r", "+\t\t\t\t\t\tclassFile.getBytes());\r", "+\t\t\t\t} catch (IOException e) {\r", "+\t\t\t\t\tString fileName = destinationPath + new String(relativeName);\r", "+\t\t\t\t\te.printStackTrace();\r", "+\t\t\t\t\tSystem.out.println(Main.bind(\"output.noClassFileCreated\",fileName)); //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\texportedClassFilesCounter++;\r", "+\t\t\t}\r", "+\t\t} else if (destinationPath != null) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accf099643812c65b6222bc26a072878", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tpublic void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": "  \tpublic void outputClassFiles(CompilationResult unitResult)", "diff": ["-", "-\t\t\t\twhile (classFiles.hasMoreElements()) {", "-\t\t\t\t\tthis.destinationPath = extractDestinationPathFromSourceFile(unitResult);", "-\t\t\t\t\t// retrieve the key and the corresponding classfile", "-\t\t\t\t\tClassFile classFile = (ClassFile) classFiles.nextElement();", "-\t\t\t\t\tchar[] filename = classFile.fileName();", "-\t\t\t\t\tint length = filename.length;", "-\t\t\t\t\tchar[] relativeName = new char[length + 6];", "-\t\t\t\t\tSystem.arraycopy(filename, 0, relativeName, 0, length);", "-\t\t\t\t\tSystem.arraycopy(SUFFIX_class, 0, relativeName, length, 6);", "-\t\t\t\t\tCharOperation.replace(relativeName, '/', File.separatorChar);", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tif (this.compilerOptions.verbose)", "-\t\t\t\t\t\t\tSystem.out.println(Util.bind(\"compilation.write\", //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\t\tString.valueOf(this.exportedClassFilesCounter+1),", "-\t\t\t\t\t\t\t\t\tnew String(relativeName) }));\t\t\t\t\t    ", "-\t\t\t\t\t\tClassFile.writeToDisk(", "-\t\t\t\t\t\t\tthis.generatePackagesStructure,", "-\t\t\t\t\t\t\tthis.destinationPath,", "-\t\t\t\t\t\t\tnew String(relativeName),", "-\t\t\t\t\t\t\tclassFile.getBytes());", "-\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\tString fileName = this.destinationPath + new String(relativeName);", "-\t\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\t\tthis.logger.printlnErr(Main.bind(\"output.noClassFileCreated\", fileName));  //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.exportedClassFilesCounter++;", "-\t\t\t\t}", "-\t\t\t} else if (this.destinationPath != null) {", "+\t\t\t\tthis.destinationPath = extractDestinationPathFromSourceFile(unitResult);", "+\t\t\t}", "+\t\t\tif (this.destinationPath != null) {", "-\t\t\t\t\t\t\t\t\tnew String(relativeName) }));\t\t\t\t\t    ", "+\t\t\t\t\t\t\t\t\tnew String(relativeName)", "+\t\t\t\t\t\t\t\t}));", "+\t\t\t\t\t\tthis.logger.logClassFile(", "+\t\t\t\t\t\t\tthis.generatePackagesStructure,", "+\t\t\t\t\t\t\tthis.destinationPath,", "+\t\t\t\t\t\t\tnew String(relativeName));", "-\t\t\t\t\t\tthis.logger.printlnErr(Main.bind(\"output.noClassFileCreated\", fileName)); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.logger.logNoClassFileCreated(fileName); //$NON-NLS-1$"]}], "num": 14619}