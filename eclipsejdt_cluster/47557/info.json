{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2aaea5847946c81a65e7e76e4c33815", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8bc29feafce94e0d13d83499803b74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer original)", "signatureAfterChange": " \tprivate FactoryPathEntry[] openVariableSelectionDialog(FactoryPathEntry original)", "diff": ["-\tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer original) {", "-\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.VARJAR, original);", "+\t */", "+\tprivate FactoryPathEntry[] openVariableSelectionDialog(FactoryPathEntry original) {", "+\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.VARJAR, original._fc);", "-\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tArrayList<FactoryPathEntry> res= new ArrayList<FactoryPathEntry>();", "-\t\t\t\tres.add(FactoryPath.newVarJarFactoryContainer(selected[i]));", "+\t\t\t\tFactoryContainer fc= FactoryPathUtil.newVarJarFactoryContainer(selected[i]);", "+\t\t\t\t// assume defaults of enabled=true, runInAptMode=false", "+\t\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(true, false);", "+\t\t\t\tFactoryPathEntry fpe = new FactoryPathEntry(fc, attr);", "+\t\t\t\tres.add(fpe);", "-\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t\treturn res.toArray(new FactoryPathEntry[res.size()]);", "-\t\t\tIPath result= BuildPathDialogAccess.configureVariableEntry(getShell(), new Path(original.getId()), existingPaths);", "+\t\t\tIPath result= BuildPathDialogAccess.configureVariableEntry(getShell(), new Path(original._fc.getId()), existingPaths);", "-\t\t\tFactoryContainer[] edited= new FactoryContainer[1];", "-\t\t\tedited[0]= FactoryPath.newVarJarFactoryContainer(result);", "+\t\t\tFactoryPathEntry[] edited= new FactoryPathEntry[1];", "+\t\t\tFactoryContainer fc= FactoryPathUtil.newVarJarFactoryContainer(result);", "+\t\t\t// Use prior value for isEnabled.  Assume default of runInAptMode=false", "+\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(original._attr.isEnabled(), false);", "+\t\t\tedited[0]= new FactoryPathEntry(fc, attr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50b203615d2cee7ae357a5e3e9df910f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate FactoryContainer[] openJarFileDialog(FactoryContainer original)", "signatureAfterChange": " \tprivate FactoryPathEntry[] openJarFileDialog(FactoryPathEntry original)", "diff": ["-\tprivate FactoryContainer[] openJarFileDialog(FactoryContainer original) {", "+\tprivate FactoryPathEntry[] openJarFileDialog(FactoryPathEntry original) {", "-\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.WKSPJAR, original);", "+\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.WKSPJAR, original._fc);", "-\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tArrayList<FactoryPathEntry> res= new ArrayList<FactoryPathEntry>();", "-\t\t\t\t\tres.add(FactoryPath.newWkspJarFactoryContainer(results[i]));", "+\t\t\t\t\tFactoryContainer fc = FactoryPathUtil.newWkspJarFactoryContainer(results[i]);", "+\t\t\t\t\t// assume defaults of enabled=true, runInAptMode=false", "+\t\t\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(true, false);", "+\t\t\t\t\tFactoryPathEntry fpe = new FactoryPathEntry(fc, attr);", "+\t\t\t\t\tres.add(fpe);", "-\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t\treturn res.toArray(new FactoryPathEntry[res.size()]);", "-\t\t\tIPath result= BuildPathDialogAccess.configureJAREntry(getShell(), new Path(original.getId()), existingPaths);", "+\t\t\tIPath result= BuildPathDialogAccess.configureJAREntry(getShell(), new Path(original._fc.getId()), existingPaths);", "-\t\t\t\tFactoryContainer[] edited = new FactoryContainer[1];", "-\t\t\t\tedited[0]= FactoryPath.newWkspJarFactoryContainer(result);", "+\t\t\t\tFactoryPathEntry[] edited = new FactoryPathEntry[1];", "+\t\t\t\tFactoryContainer fc= FactoryPathUtil.newWkspJarFactoryContainer(result);", "+\t\t\t\t// Use prior value for isEnabled.  Assume default of runInAptMode=false", "+\t\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(original._attr.isEnabled(), false);", "+\t\t\t\tedited[0]= new FactoryPathEntry(fc, attr);"]}], "num": 47557}