{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c32550c9f4008eada66acdadb4e3a81e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f21b4450f3d149fd8795181d95a651f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 971, "methodNumberAfterChange": 972, "signatureBeforeChange": " public void test0947()", "signatureAfterChange": " public void test0947()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\", //================================", "-\t\t\"import java.util.*;\\n\" +", "+\tString xSource =", "-\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tBox<Runnable> bx = box(b.element);\\n\" +", "-\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Box<capture#1-of ?> to Box<Runnable>\\n\" +", "-\t\t\"----------\\n\",", "-\t\tJavacTestOptions.EclipseHasABug.EclipseBug236236);", "+\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"\tBox<Runnable> bx = box(b.element);\\n\" +", "+\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Box<capture#1-of ?> to Box<Runnable>\\n\" +", "+\t\t\t\"----------\\n\",", "+\t\t\tJavacTestOptions.EclipseHasABug.EclipseBug236236);", "+\t} else {", "+\t\trunConformTest(new String[]{ \"X.java\", xSource });", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deed94814d1efa558600a95226ec9159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 912, "methodNumberAfterChange": 912, "signatureBeforeChange": " public void test0891()", "signatureAfterChange": " public void test0891()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"Test.java\", // =================", "+\tString xSource =", "-\t\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in Test.java (at line 18)\\n\" +", "-\t\t\"\tString s = applyToString(identity());\\n\" +", "-\t\t\"\t           ^^^^^^^^^^^^^\\n\" +", "-\t\t\"The method applyToString(Function<String,B>) in the type Test is not applicable for the arguments (Id<Object>)\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"Test.java\",", "+\t\t\t\txSource", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in Test.java (at line 18)\\n\" +", "+\t\t\t\"\tString s = applyToString(identity());\\n\" +", "+\t\t\t\"\t           ^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"The method applyToString(Function<String,B>) in the type Test is not applicable for the arguments (Id<Object>)\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"Test.java\",", "+\t\t\t\txSource", "+\t\t\t});", "+\t}"]}], "num": 16693}