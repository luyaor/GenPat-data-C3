{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80ae022eb6f5b2037cc76ee296473154", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45cd46b2a9a87147938c86c1c194cc57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "679aa0fd26f479e5f5eacae8934cf6323becfdda", "commitAfterChange": "f4c6f76ca25c7f1cc15835d3fa1f5998a02ab891", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "diff": ["+\t */", "+\tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule) {", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule);", "-\t\t\t\treturn createMethodPattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createMethodPattern(stringPattern, limitTo, matchRule);", "-\t\t\t\treturn createConstructorPattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createConstructorPattern(stringPattern, limitTo, matchRule);", "-\t\t\t\treturn createFieldPattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createFieldPattern(stringPattern, limitTo, matchRule);", "-\t\t\t\treturn createPackagePattern(stringPattern, limitTo, matchMode, isCaseSensitive);", "+\t\t\t\treturn createPackagePattern(stringPattern, limitTo, matchRule);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2910d7dfbb7bba70c0db1921fae76df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "5c25bc24b238851bade1684c837193693f04d597", "commitAfterChange": "4af63c78a97854459ffdb3bdd8ea245bbfdb48a7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tIWorkspace workspace, \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchMode,  \t\tfinal boolean isCaseSensitive, \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tIWorkspace workspace,", "-\t\tfinal int matchMode, ", "-\t\tfinal boolean isCaseSensitive,", "+\t\tfinal int matchRule, ", "-\t\t\tisCaseSensitive ? matchMode | SearchPattern.R_CASE_SENSITIVE : matchMode);", "+\t\t\tmatchRule);", "-\t\t\t\t\t\t\tif (match(classOrInterface, packageName, typeName, matchMode, isCaseSensitive, type.isClass(), packageDeclaration, simpleName)) {", "+\t\t\t\t\t\t\tif (match(classOrInterface, packageName, typeName, matchRule, type.isClass(), packageDeclaration, simpleName)) {", "-\t\t\t\t\t\t\t\t\tif (match(classOrInterface, packageName, typeName, matchMode, isCaseSensitive, !typeDeclaration.isInterface(), packageDeclaration, typeDeclaration.name)) {", "+\t\t\t\t\t\t\t\t\tif (match(classOrInterface, packageName, typeName, matchRule, !typeDeclaration.isInterface(), packageDeclaration, typeDeclaration.name)) {", "-\t\t\t\t\t\t\t\t\tif (match(classOrInterface, packageName, typeName, matchMode, isCaseSensitive, !memberTypeDeclaration.isInterface(), packageDeclaration, memberTypeDeclaration.name)) {", "+\t\t\t\t\t\t\t\t\tif (match(classOrInterface, packageName, typeName, matchRule, !memberTypeDeclaration.isInterface(), packageDeclaration, memberTypeDeclaration.name)) {", "+\t}"]}], "num": 40631}