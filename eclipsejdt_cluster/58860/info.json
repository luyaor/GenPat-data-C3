{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa56af0ddff65dcbcd85c20f2b19f24e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7addacdc1641c44f8f9a41407a563f4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "e70a97840585a3ede400b971666912929897851b", "commitAfterChange": "f5104ea8b01f4418b9868445123db4c689077583", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate ArrayList determineTypesInRegion()", "signatureAfterChange": " \tprivate ArrayList determineTypesInRegion(IProgressMonitor monitor)", "diff": ["-\tprivate ArrayList determineTypesInRegion() {", "+\tprivate ArrayList determineTypesInRegion(IProgressMonitor monitor) {", "-\t\tArrayList types = new ArrayList();", "-\t\tIJavaElement[] roots =", "-\t\t\t((RegionBasedTypeHierarchy) this.hierarchy).fRegion.getElements();", "-\t\tfor (int i = 0; i < roots.length; i++) {", "-\t\t\ttry {", "-\t\t\t\tIJavaElement root = roots[i];", "-\t\t\t\tswitch (root.getElementType()) {", "-\t\t\t\t\tcase IJavaElement.JAVA_PROJECT :", "-\t\t\t\t\t\tinjectAllTypesForJavaProject((IJavaProject) root, types);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :", "-\t\t\t\t\t\tinjectAllTypesForPackageFragmentRoot((IPackageFragmentRoot) root, types);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :", "-\t\t\t\t\t\tinjectAllTypesForPackageFragment((IPackageFragment) root, types);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase IJavaElement.CLASS_FILE :", "-\t\t\t\t\t\ttypes.add(((IClassFile) root).getType());", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT :", "-\t\t\t\t\t\tIType[] cuTypes = ((ICompilationUnit) root).getAllTypes();", "-\t\t\t\t\t\tfor (int j = 0; j < cuTypes.length; j++) {", "-\t\t\t\t\t\t\ttypes.add(cuTypes[j]);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase IJavaElement.TYPE :", "-\t\t\t\t\t\ttypes.add(root);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\tbreak;", "+\t\ttry {", "+\t\t\tArrayList types = new ArrayList();", "+\t\t\tIJavaElement[] roots =", "+\t\t\t\t((RegionBasedTypeHierarchy) this.hierarchy).fRegion.getElements();", "+\t\t\tint length = roots.length;", "+\t\t\tif (monitor != null) monitor.beginTask(\"\", length); //$NON-NLS-1$", "+\t\t\tfor (int i = 0; i <length; i++) {", "+\t\t\t\ttry {", "+\t\t\t\t\tIJavaElement root = roots[i];", "+\t\t\t\t\tswitch (root.getElementType()) {", "+\t\t\t\t\t\tcase IJavaElement.JAVA_PROJECT :", "+\t\t\t\t\t\t\tinjectAllTypesForJavaProject((IJavaProject) root, types);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :", "+\t\t\t\t\t\t\tinjectAllTypesForPackageFragmentRoot((IPackageFragmentRoot) root, types);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :", "+\t\t\t\t\t\t\tinjectAllTypesForPackageFragment((IPackageFragment) root, types);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase IJavaElement.CLASS_FILE :", "+\t\t\t\t\t\t\ttypes.add(((IClassFile) root).getType());", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT :", "+\t\t\t\t\t\t\tIType[] cuTypes = ((ICompilationUnit) root).getAllTypes();", "+\t\t\t\t\t\t\tfor (int j = 0; j < cuTypes.length; j++) {", "+\t\t\t\t\t\t\t\ttypes.add(cuTypes[j]);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase IJavaElement.TYPE :", "+\t\t\t\t\t\t\ttypes.add(root);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t// just continue", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// just continue", "+\t\t\t\tworked(monitor, 1);", "+\t\t\treturn types;", "+\t\t} finally {", "+\t\t\tif (monitor != null) monitor.done();", "-\t\treturn types;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "add24f39b11472941dc703ede8350a43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private Vector determineTypesInRegion()", "signatureAfterChange": "\r \tprivate ArrayList determineTypesInRegion()", "diff": ["- */\r", "-private Vector determineTypesInRegion() {\r", "-\tVector types = new Vector();\r", "-\tIJavaElement[] roots = ((RegionBasedTypeHierarchy)this.hierarchy).fRegion.getElements();\r", "-\tfor (int i = 0; i < roots.length; i++) {\r", "-\t\ttry {\r", "-\t\t\tIJavaElement root = roots[i];\r", "-\t\t\tswitch (root.getElementType()) {\r", "-\t\t\t\tcase IJavaElement.JAVA_PROJECT :\r", "-\t\t\t\t\tinjectAllTypesForJavaProject((IJavaProject) root, types);\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "-\t\t\t\t\tinjectAllTypesForPackageFragmentRoot((IPackageFragmentRoot) root, types);\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "-\t\t\t\t\tinjectAllTypesForPackageFragment((IPackageFragment) root, types);\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.CLASS_FILE :\r", "-\t\t\t\t\ttypes.addElement(((IClassFile) root).getType());\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.COMPILATION_UNIT :\r", "-\t\t\t\t\tIType[] cuTypes = ((ICompilationUnit) root).getAllTypes();\r", "-\t\t\t\t\tfor (int j = 0; j < cuTypes.length; j++) {\r", "-\t\t\t\t\t\ttypes.addElement(cuTypes[j]);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IJavaElement.TYPE :\r", "-\t\t\t\t\ttypes.addElement(root);\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tdefault :\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t}\r", "-\t\t} catch (JavaModelException npe) {\r", "-\t\t\t// just continue\r", "-\treturn types;\r", "-}\r", "+\t */\r", "+\tprivate ArrayList determineTypesInRegion() {\r", "+\r", "+\t\tArrayList types = new ArrayList();\r", "+\t\tIJavaElement[] roots =\r", "+\t\t\t((RegionBasedTypeHierarchy) this.hierarchy).fRegion.getElements();\r", "+\t\tfor (int i = 0; i < roots.length; i++) {\r", "+\t\t\ttry {\r", "+\t\t\t\tIJavaElement root = roots[i];\r", "+\t\t\t\tswitch (root.getElementType()) {\r", "+\t\t\t\t\tcase IJavaElement.JAVA_PROJECT :\r", "+\t\t\t\t\t\tinjectAllTypesForJavaProject((IJavaProject) root, types);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\t\t\t\tinjectAllTypesForPackageFragmentRoot((IPackageFragmentRoot) root, types);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :\r", "+\t\t\t\t\t\tinjectAllTypesForPackageFragment((IPackageFragment) root, types);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.CLASS_FILE :\r", "+\t\t\t\t\t\ttypes.add(((IClassFile) root).getType());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT :\r", "+\t\t\t\t\t\tIType[] cuTypes = ((ICompilationUnit) root).getAllTypes();\r", "+\t\t\t\t\t\tfor (int j = 0; j < cuTypes.length; j++) {\r", "+\t\t\t\t\t\t\ttypes.add(cuTypes[j]);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.TYPE :\r", "+\t\t\t\t\t\ttypes.add(root);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tdefault :\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t// just continue\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn types;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feee203fd787f2097a915e3b8980b1c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "8f40b18693d984d1b3346925dd24dfb773855585", "commitAfterChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate ArrayList determineTypesInRegion(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate ArrayList determineOpenablesInRegion(IProgressMonitor monitor)", "diff": ["-\tprivate ArrayList determineTypesInRegion(IProgressMonitor monitor) {", "+\tprivate ArrayList determineOpenablesInRegion(IProgressMonitor monitor) {", "-\t\t\tArrayList types = new ArrayList();", "+\t\t\tArrayList openables = new ArrayList();", "-\t\t\t\ttry {", "-\t\t\t\t\tIJavaElement root = roots[i];", "-\t\t\t\t\tswitch (root.getElementType()) {", "-\t\t\t\t\t\tcase IJavaElement.JAVA_PROJECT :", "-\t\t\t\t\t\t\tinjectAllTypesForJavaProject((IJavaProject) root, types);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :", "-\t\t\t\t\t\t\tinjectAllTypesForPackageFragmentRoot((IPackageFragmentRoot) root, types);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :", "-\t\t\t\t\t\t\tinjectAllTypesForPackageFragment((IPackageFragment) root, types);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase IJavaElement.CLASS_FILE :", "-\t\t\t\t\t\t\ttypes.add(((IClassFile) root).getType());", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT :", "-\t\t\t\t\t\t\tIType[] cuTypes = ((ICompilationUnit) root).getAllTypes();", "-\t\t\t\t\t\t\tfor (int j = 0; j < cuTypes.length; j++) {", "-\t\t\t\t\t\t\t\ttypes.add(cuTypes[j]);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase IJavaElement.TYPE :", "-\t\t\t\t\t\t\ttypes.add(root);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t// just continue", "+\t\t\t\tIJavaElement root = roots[i];", "+\t\t\t\tswitch (root.getElementType()) {", "+\t\t\t\t\tcase IJavaElement.JAVA_PROJECT :", "+\t\t\t\t\t\tinjectAllOpenablesForJavaProject((IJavaProject) root, openables);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :", "+\t\t\t\t\t\tinjectAllOpenablesForPackageFragmentRoot((IPackageFragmentRoot) root, openables);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT :", "+\t\t\t\t\t\tinjectAllOpenablesForPackageFragment((IPackageFragment) root, openables);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaElement.CLASS_FILE :", "+\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT :", "+\t\t\t\t\t\topenables.add(root);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaElement.TYPE :", "+\t\t\t\t\t\tIType type = (IType)root;", "+\t\t\t\t\t\tif (type.isBinary()) {", "+\t\t\t\t\t\t\topenables.add(type.getClassFile());", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\topenables.add(type.getCompilationUnit());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault :", "+\t\t\t\t\t\tbreak;", "-\t\t\treturn types;", "+\t\t\treturn openables;"]}], "num": 58860}