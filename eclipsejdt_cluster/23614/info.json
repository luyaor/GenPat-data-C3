{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7504697cdb32cc3b287d10ff38098a61", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84b9e425f1a7e0af48f51bea95009eb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test102()", "signatureAfterChange": " \tpublic void test102()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tx.t.bar(\\\"ESS\\\");\\n\" + ", "-\t\t\"\t    ^^^\\n\" + ", "-\t\t\"The method bar(String) is undefined for the type ?\\n\" + ", "-\t\t\"----------\\n\");\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tx.t.foo(\\\"SUCC\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tx.t.bar(\\\"ESS\\\");\\n\" + ", "+\t\t\t\"\t    ^^^\\n\" + ", "+\t\t\t\"The method bar(String) is undefined for the type capture-of ?\\n\" + ", "+\t\t\t\"----------\\n\");\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23f55d017c64c2bbaa840ba991d57c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "     public void test114()", "signatureAfterChange": "     public void test114()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = M.class )\\n\" + ", "-\t\t\t\"\t              ^\\n\" + ", "-\t\t\t\"M cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+    \t\t\"\tClass foo();\\n\" + ", "+    \t\t\"\t^^^^^\\n\" + ", "+    \t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+    \t\t\"\t@Annot( foo = M.class )\\n\" + ", "+    \t\t\"\t              ^\\n\" + ", "+    \t\t\"M cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9acdf4af686121924bb6c4ab38989d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 592, "signatureBeforeChange": " \tpublic void test588()", "signatureAfterChange": " \tpublic void test588()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "-\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Incompatible operand types Class<X> and Class<Long>\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+    \t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "+    \t\t\"\t            ^\\n\" + ", "+    \t\t\"Type safety: X is a raw type. References to generic type X<S> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+    \t\t\"\tboolean c = X.class == Long.class;\\n\" + ", "+    \t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Incompatible operand types Class<X> and Class<Long>\\n\" + ", "+    \t\t\"----------\\n\");"]}], "num": 23614}