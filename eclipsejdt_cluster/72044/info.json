{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdb4a81724d6f64fef029d26390bb6f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98df5068a63680107bd386b3f25ac3ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object tabSizeOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_TAB_LENGTH);", "+\t\tfinal Object tabSizeOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE);", "-\t\t\t\tthis.tab_length = Integer.parseInt((String) tabSizeOption);", "+\t\t\t\tthis.tab_size = Integer.parseInt((String) tabSizeOption);", "-\t\t\t\tthis.tab_length = this.indentation_size;", "+\t\t\t\tthis.tab_size = 4;", "-\t\t\t\tthis.tab_length = this.indentation_size;", "-\t\t\t}", "-\t\t} else {", "-\t\t\t// compatibility code", "-\t\t\tthis.tab_length = this.indentation_size;", "-\t\t}", "-\t\tfinal Object indentationSizeOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE);", "-\t\tif (indentationSizeOption != null) {", "-\t\t\ttry {", "-\t\t\t\tthis.indentation_size = Integer.parseInt((String) indentationSizeOption);", "-\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\tthis.indentation_size = this.tab_length;", "-\t\t\t} catch(ClassCastException e) {", "-\t\t\t\tthis.indentation_size = this.tab_length;", "+\t\t\t\tthis.tab_size = 4;", "-\t\t}", "-\t\tfinal Object snapToTabsOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_SNAP_TO_TABS);", "-\t\tif (snapToTabsOption != null) {", "-\t\t\tthis.snapToTabs = DefaultCodeFormatterConstants.TRUE.equals(snapToTabsOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3669bc73391ab40f2a6c237849f0a9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient)", "signatureAfterChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "diff": ["-\tpublic static void resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient) {", "+\tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType) {", "-\t\t\t\t\tif ((packageBinding.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tif ((packageBinding.tagBits & TagBits.AnnotationResolved) != 0) return annotations;", "-\t\t\t\t\tif ((type.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tif ((type.tagBits & TagBits.AnnotationResolved) != 0) return annotations;", "-\t\t\t\t\tif ((method.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tif ((method.tagBits & TagBits.AnnotationResolved) != 0) return annotations;", "-\t\t\t\t\tif ((field.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tif ((field.tagBits & TagBits.AnnotationResolved) != 0) return annotations;", "-\t\t\t\t\tif ((local.tagBits & TagBits.AnnotationResolved) != 0) return;", "+\t\t\t\t\tif ((local.tagBits & TagBits.AnnotationResolved) != 0) return annotations;", "-\t\t\t\t\t// jsr308", "-\t\t\t\t\tReferenceBinding typeVariableBinding = (ReferenceBinding) recipient;", "-\t\t\t\t\tif ((typeVariableBinding.tagBits & TagBits.AnnotationResolved) != 0) return;", "-\t\t\t\t\ttypeVariableBinding.tagBits |= (TagBits.AnnotationResolved | TagBits.DeprecatedAnnotationResolved);", "-\t\t\t\t\tif (length > 0) {", "-\t\t\t\t\t\tannotations = new AnnotationBinding[length];", "-\t\t\t\t\t\ttypeVariableBinding.setAnnotations(annotations);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\t\tReferenceBinding typeUseBinding = (ReferenceBinding) recipient;", "-\t\t\t\t\tif ((typeUseBinding.tagBits & TagBits.AnnotationResolved) != 0) return;", "-\t\t\t\t\ttypeUseBinding.tagBits |= (TagBits.AnnotationResolved | TagBits.DeprecatedAnnotationResolved);", "-\t\t\t\t\tif (length > 0) {", "-\t\t\t\t\t\tannotations = new AnnotationBinding[length];", "-\t\t\t\t\t\ttypeUseBinding.setAnnotations(annotations);", "-\t\t\t\t\t}", "+\t\t\t\t\t// deliberately don't set the annotation resolved tagbits, it is not material and also we are working with a dummy static object.", "+\t\t\t\t\tannotations = new AnnotationBinding[length];", "-\t\t\t\t\treturn;", "+\t\t\t\t\treturn annotations;", "-\t\t\treturn;", "+\t\t\treturn annotations;", "-\t\t\t\treturn;", "+\t\t\t\treturn annotations;", "+", "+\t\tif (copySE8AnnotationsToType)", "+\t\t\tcopySE8AnnotationsToType(scope, recipient, annotations);", "+\t\t", "-\t\tif (annotations != null) {", "+\t\tif (annotations != null && length > 1) {", "+\t\treturn annotations;", "+\t}"]}], "num": 72044}