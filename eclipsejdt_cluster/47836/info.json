{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "049d0ecbf20e09144648c95f3598e454", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e94b3568ee5e51ca4bad576993a2b61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKeyScanner.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tint nextToken()", "signatureAfterChange": " \t \tint nextToken()", "diff": ["-\tint nextToken() {", "-\t\tthis.start = ++this.index;", "-\t\tint length = this.source.length;", "-\t\twhile (this.index <= length) {", "-\t\t\tchar currentChar = this.index == length ? Character.MIN_VALUE : this.source[this.index];", "-\t\t\tswitch (currentChar) {", "-\t\t\t\tcase '/':", "-\t\t\t\tcase ',':", "-\t\t\t\tcase Character.MIN_VALUE:", "-\t\t\t\t\tswitch (this.token) {", "-\t\t\t\t\t\tcase START:", "-\t\t\t\t\t\tcase METHOD: // parameter", "-\t\t\t\t\t\tcase ARRAY:", "-\t\t\t\t\t\t\tthis.token = PACKAGE;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase PACKAGE:", "-\t\t\t\t\t\t\tif (this.source[this.start-1] == ',')", "-\t\t\t\t\t\t\t\tthis.token = PACKAGE;", "-\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\tthis.token = TYPE;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TYPE:", "-\t\t\t\t\t\t\tswitch (this.source[this.start-1]) {", "-\t\t\t\t\t\t\t\tcase '$':", "-\t\t\t\t\t\t\t\t\tthis.token = TYPE;", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase ',':", "-\t\t\t\t\t\t\t\tcase '<':", "-\t\t\t\t\t\t\t\tcase '&':", "-\t\t\t\t\t\t\t\t\tthis.token = PACKAGE;", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\tthis.token = FIELD;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TYPE_PARAMETER:", "-\t\t\t\t\t\t\tthis.token = PACKAGE;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\treturn this.token;", "-\t\t\t\tcase '$':", "-\t\t\t\tcase '[':", "-\t\t\t\tcase '<':", "-\t\t\t\tcase '&':", "-\t\t\t\t\tswitch (this.token) {", "-\t\t\t\t\t\tcase START: // case of base type with array dimension", "-\t\t\t\t\t\t\tthis.token = PACKAGE;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase PACKAGE:", "-\t\t\t\t\t\t\tthis.token = TYPE;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase TYPE:", "-\t\t\t\t\t\t\tthis.token = TYPE;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\treturn this.token;", "-\t\t\t\tcase '(':", "-\t\t\t\t\tthis.token = METHOD;", "-\t\t\t\t\treturn this.token;", "-\t\t\t\tcase ')':", "-\t\t\t\tcase '>':", "-\t\t\t\t\tthis.start = ++this.index;", "-\t\t\t\t\tif (this.index == length || this.source[this.index] != '$') {", "-\t\t\t\t\t\tthis.token = END;", "-\t\t\t\t\t\treturn this.token;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.start = ++this.index;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase ']':", "-\t\t\t\t\tthis.start--;", "-\t\t\t\t\tthis.index++;", "-\t\t\t\t\twhile (this.index < length && this.source[this.index] == '[') {", "-\t\t\t\t\t\tthis.index +=2;", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.token = ARRAY;", "-\t\t\t\t\treturn this.token;", "-\t\t\t\tcase ':':", "-\t\t\t\t\tthis.token = TYPE_PARAMETER;", "-\t\t\t\t\treturn this.token;", "-\t\t\t}", "-\t\t\tthis.index++;", "-\t\t}", "-\t\tthis.token = END;", "-\t\treturn this.token;", "-\t}", "+\t", "+\tint nextToken() {", "+\t\tthis.start = this.token == ARRAY ? this.index : ++this.index;", "+\t\tint previousTokenEnd = this.index-1;", "+\t\tint length = this.source.length;", "+\t\twhile (this.index <= length) {", "+\t\t\tchar currentChar = this.index == length ? Character.MIN_VALUE : this.source[this.index];", "+\t\t\tswitch (currentChar) {", "+\t\t\t\tcase 'B':", "+\t\t\t\tcase 'C':", "+\t\t\t\tcase 'D':", "+\t\t\t\tcase 'F':", "+\t\t\t\tcase 'I':", "+\t\t\t\tcase 'J':", "+\t\t\t\tcase 'S':", "+\t\t\t\tcase 'V':", "+\t\t\t\tcase 'Z':", "+\t\t\t\t\t// base type", "+\t\t\t\t\tif (this.start == previousTokenEnd+1) {", "+\t\t\t\t\t\tthis.index++;", "+\t\t\t\t\t\tthis.token = TYPE;", "+\t\t\t\t\t\treturn this.token;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 'L':", "+\t\t\t\tcase 'T':", "+\t\t\t\t\tif (this.start == previousTokenEnd+1) {", "+\t\t\t\t\t\tthis.start = ++this.index;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ';':", "+\t\t\t\tcase '$':", "+\t\t\t\t\tthis.token = TYPE;", "+\t\t\t\t\treturn this.token;", "+\t\t\t\tcase '.':", "+\t\t\t\t\tthis.start = this.index+1;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '[':", "+\t\t\t\t\twhile (this.index < length && this.source[this.index] == '[')", "+\t\t\t\t\t\tthis.index++;", "+\t\t\t\t\tthis.token = ARRAY;", "+\t\t\t\t\treturn this.token;", "+\t\t\t\tcase '<':", "+\t\t\t\t\tthis.token = TYPE;", "+\t\t\t\t\treturn this.token;", "+\t\t\t\tcase '(':", "+\t\t\t\t\tthis.token = METHOD;", "+\t\t\t\t\treturn this.token;", "+\t\t\t\tcase ')':", "+\t\t\t\t\tthis.start = ++this.index;", "+\t\t\t\t\tthis.token = END;", "+\t\t\t\t\treturn this.token;", "+\t\t\t\tcase ':':", "+\t\t\t\t\tthis.token = TYPE_PARAMETER;", "+\t\t\t\t\treturn this.token;", "+\t\t\t\tcase Character.MIN_VALUE:", "+\t\t\t\t\tswitch (this.token) {", "+\t\t\t\t\t\tcase START:", "+\t\t\t\t\t\t\tthis.token = PACKAGE;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase TYPE:", "+\t\t\t\t\t\t\tif (this.index > this.start && this.source[this.start-1] == '.')", "+\t\t\t\t\t\t\t\tthis.token = FIELD;", "+\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\tthis.token = END;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tthis.token = END;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn this.token;", "+\t\t\t}", "+\t\t\tthis.index++;", "+\t\t}", "+\t\tthis.token = END;", "+\t\treturn this.token;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740805f568f84cb0742c0d034b3b5e36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "105a4ca655d44213ffe23400e85e9364ac7516e4", "commitAfterChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["+\t", "-\t\t\t\t\tchar[] source = null;", "-\t\t\t\t\tchar[][] packageName = null;", "-\t\t\t\t\tString fileName = null;", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit = null;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tsource = this.compilationUnitSource.getSource().toCharArray();", "-\t\t\t\t\t\t} catch(JavaModelException e) {", "-\t\t\t\t\t\t\t// no source, then we cannot build anything", "-\t\t\t\t\t\t\tthrow new IllegalStateException();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment)this.compilationUnitSource.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "-\t\t\t\t\t\tif (packageFragment != null){", "-\t\t\t\t\t\t\tpackageName = Util.toCharArrays(packageFragment.names);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tfileName = this.compilationUnitSource.getElementName();", "+\t\t\t\t\t\tsourceUnit = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) this.compilationUnitSource;", "-\t\t\t\t\t\tString sourceString = null;", "-\t\t\t\t\t\t\tsourceString = this.classFileSource.getSource();", "-\t\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t\t// nothing to do", "-\t\t\t\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\t\tif (sourceString == null) {", "-\t\t\t\t\t\t\tthrow new IllegalStateException();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tsource = sourceString.toCharArray();", "-\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tString sourceString = this.classFileSource.getSource();", "+\t\t\t\t\t\t\tif (sourceString == null) {", "+\t\t\t\t\t\t\t\tthrow new IllegalStateException();", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpackageName = Util.toCharArrays(packageFragment.names);", "-\t\t\t\t\t\t\tfileName = type.sourceFileName(binaryType);", "+\t\t\t\t\t\t\tString fileName = type.sourceFileName(binaryType);", "+\t\t\t\t\t\t\tsourceUnit = new BasicCompilationUnit(sourceString.toCharArray(), Util.toCharArrays(packageFragment.names), fileName, this.project);", "+\t\t\t\t\t\t\t// class file doesn't exist", "-\t\t\t\t\t\tsource = this.rawSource;", "-\t\t\t\t\t\tif (this.unitName == null || this.project == null || this.compilerOptions == null) {", "-\t\t\t\t\t\t\tneedToResolveBindings = false;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tfileName = this.unitName;", "-\t\t\t\t\t\t\tneedToResolveBindings = true;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (source == null) {", "+\t\t\t\t\t\tneedToResolveBindings = this.unitName != null && this.project != null && this.compilerOptions != null;", "+\t\t\t\t\t\tsourceUnit = new BasicCompilationUnit(this.rawSource, null, this.unitName == null ? \"\" : this.unitName, this.project); //$NON-NLS-1$", "+\t\t\t\t\t} else {", "-\t\t\t\t\t}", "-\t\t\t\t\tif (this.sourceLength == -1) {", "-\t\t\t\t\t\tthis.sourceLength = source.length;", "-\t\t\t\t\t\t\t\t\tsource,", "-\t\t\t\t\t\t\t\t\tpackageName,", "-\t\t\t\t\t\t\t\t\tfileName,", "+\t\t\t\t\t\t\t\t\tsourceUnit,", "-\t\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\t\tsource,", "+\t\t\t\t\t\t\t\t\tsourceUnit,", "-\t\t\t\t\t\t\t\tsource,", "+\t\t\t\t\t\t\t\tsourceUnit,", "-\t\t\t\t\treturn convert(monitor, compilationUnitDeclaration, source, needToResolveBindings);", "+\t\t\t\t\treturn CompilationUnitResolver.convert(", "+\t\t\t\t\t\tcompilationUnitDeclaration, ", "+\t\t\t\t\t\tsourceUnit.getContents(), ", "+\t\t\t\t\t\tthis.apiLevel, ", "+\t\t\t\t\t\tthis.compilerOptions,", "+\t\t\t\t\t\tneedToResolveBindings,", "+\t\t\t\t\t\tthis.compilationUnitSource == null ? this.workingCopyOwner : this.compilationUnitSource.getOwner(),", "+\t\t\t\t\t\tneedToResolveBindings ? new DefaultBindingResolver.BindingTables() : null, ", "+\t\t\t\t\t\tmonitor);"]}], "num": 47836}