{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81a2aa1737accedd835c52bb2ca3b0aa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b7b17ce1229511436fc1c65270faf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "0cdfa4a20d7efcfc7530ed5117682b5beffbec92", "commitAfterChange": "bb52fb238d7a2ec2262456ebe1c6375c54c6da32", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t@Override \tpublic String getConstantExpression(Object value)", "signatureAfterChange": " \t@Override \tpublic String getConstantExpression(Object value)", "diff": ["+\t\tif (!(value instanceof Integer)", "+\t\t\t\t|| !(value instanceof Byte)", "+\t\t\t\t|| !(value instanceof Float)", "+\t\t\t\t|| !(value instanceof Double)", "+\t\t\t\t|| !(value instanceof Long)", "+\t\t\t\t|| !(value instanceof Short)", "+\t\t\t\t|| !(value instanceof Character)", "+\t\t\t\t|| !(value instanceof String)) {", "+\t\t\tthrow new IllegalArgumentException(\"Not a valid wrapper type : \" + value.getClass()); //$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83667ce2c315def463bb105ef83e4a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "f3706d181091fb702dc2ff1828cc8f66c10eda7e", "commitAfterChange": "1b59cc9477a9dd113e2d0516bb9a97b92018149f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration)", "signatureAfterChange": " public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration)", "diff": ["-\t\t\t\tfieldDeclaration.initialization == null ? -1 :  fieldDeclaration.initialization.sourceStart, ", "+\t\t\t\t// filter out initializations that are not a constant (simple check)", "+\t\t\t\t(fieldDeclaration.initialization == null ", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ArrayInitializer", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof AllocationExpression", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ArrayAllocationExpression", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof Assignment", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ClassLiteralAccess", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof MessageSend", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ArrayReference", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ThisReference) ? ", "+\t\t\t\t\t-1 :  ", "+\t\t\t\t\tfieldDeclaration.initialization.sourceStart, "]}], "num": 24620}