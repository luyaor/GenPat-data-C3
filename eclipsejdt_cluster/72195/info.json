{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f22ebf141749f16e7f47126e19060f0f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc7829d5e397819239a8240dba89ea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "c221b518b7348e54695e056da6261b43107500f5", "commitAfterChange": "c7e96d986053614747f035da8c0e25c52c212a4c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private void locateMatchesInCompilationUnit(char[] source) throws CoreException", "signatureAfterChange": "\r private void locateMatchesInCompilationUnit(char[] source) throws CoreException", "diff": ["-\t\tthis.matchSet.accuracy = IJavaSearchResultCollector.EXACT_MATCH;\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tif (this.parsedUnit.scope != null) {\r", "-\t\t\t\t\t\tthis.parsedUnit.scope.faultInTypes();\r", "-\t\t\t\t\t\tthis.parsedUnit.resolve();\r", "+\t\t\t\tif (this.shouldResolve) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tif (this.parsedUnit.scope != null) {\r", "+\t\t\t\t\t\t\tthis.parsedUnit.scope.faultInTypes();\r", "+\t\t\t\t\t\t\tthis.parsedUnit.resolve();\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t// report matches that needed resolve\r", "+\t\t\t\t\t\tthis.matchSet.cuHasBeenResolved = true;\r", "+\t\t\t\t\t\tthis.matchSet.reportMatching(this.parsedUnit);\r", "+\t\t\t\t\t} catch (AbortCompilation e) {\r", "+\t\t\t\t\t\t// could not resolve (reasons include \"could not find library class\") \r", "+\t\t\t\t\t\t// -> ignore and report innacurate matches\r", "+\t\t\t\t\t\tthis.matchSet.cuHasBeenResolved = true;\r", "+\t\t\t\t\t\tthis.matchSet.reportMatching(this.parsedUnit);\r", "-\t\t\t\t\t// report matches that needed resolve\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\t// problem ocured while completing the bindings for the base classes\r", "+\t\t\t\t\t// -> report innacurate matches\r", "-\t\t\t\t\tthis.matchSet.accuracy = IJavaSearchResultCollector.EXACT_MATCH;\r", "-\t\t\t\t\tthis.matchSet.reportMatching(this.parsedUnit);\r", "-\t\t\t\t} catch (AbortCompilation e) {\r", "-\t\t\t\t\t// could not resolve (reasons include \"could not find library class\") -> ignore and report the unresolved nodes\r", "-\t\t\t\t\tthis.matchSet.cuHasBeenResolved = false;\r", "-\t\t\t\t\tthis.matchSet.accuracy = IJavaSearchResultCollector.POTENTIAL_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ffebdcbf1169848c7861370a3f80d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic boolean isSubsignature(IMethodBinding otherMethod)", "signatureAfterChange": "  \tpublic boolean isSubsignature(IMethodBinding otherMethod)", "diff": ["-\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding other = ((MethodBinding) otherMethod).binding;", "-\t\t\tif (!CharOperation.equals(this.binding.selector, other.selector))", "-\t\t\t\treturn false;", "-\t\t\treturn this.binding.areParameterErasuresEqual(other) && this.binding.areTypeVariableErasuresEqual(other);", "+\t\t\tLookupEnvironment lookupEnvironment = this.resolver.lookupEnvironment();", "+\t\t\treturn lookupEnvironment != null", "+\t\t\t\t&& lookupEnvironment.methodVerifier().isMethodSubsignature(this.binding, ((MethodBinding) otherMethod).binding);"]}], "num": 72195}