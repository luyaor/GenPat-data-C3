{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eff0c8f54c308900f25f7ce1aa5f365f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23825d88b575d07d777cefb8e1018859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "0be54bcd07d7e9a734200ac55807f54a7fc49b71", "commitAfterChange": "d1b26e65b6c143c400fb90a9f9fead6e4ed62e62", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\tthis.err.println(Main.bind(\"configure.noClasspath\")); //$NON-NLS-1$", "+\t\t\t\tthis.logger.printlnErr(Main.bind(\"configure.noClasspath\")); //$NON-NLS-1$", "-\t\t\t\tthis.err.println(Main.bind(\"configure.requiresJDK1.2orAbove\")); //$NON-NLS-1$", "+\t\t\t\tthis.logger.printlnErr(Main.bind(\"configure.requiresJDK1.2orAbove\")); //$NON-NLS-1$", "-\t\t\t\tthis.err = new PrintWriter(new FileOutputStream(this.log, false));", "+\t\t\t\tthis.logger.setLog(new PrintWriter(new FileOutputStream(this.log, false)));", "-\t\t\t\tthis.err.println(Main.bind(\"configure.incorrectClasspath\", this.classpaths[i])); //$NON-NLS-1$", "+\t\t\t\tthis.logger.printlnErr(Main.bind(\"configure.incorrectClasspath\", this.classpaths[i])); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df736c6c92935aef68d9dd9058008be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static boolean hasBatchFactory(List<AnnotationProcessorFactory> factories)", "signatureAfterChange": " \tpublic static boolean hasBatchFactory(final Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories)", "diff": ["-\tpublic static boolean hasBatchFactory(List<AnnotationProcessorFactory> factories)", "+\tpublic static boolean hasBatchFactory(final Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories)", "-\t\tfor( AnnotationProcessorFactory factory : factories ){", "-\t\t\tif( isBatchFactory(factory) )", "+\t\tfor( FactoryPath.Attributes attr : factories.values() ){", "+\t\t\tif( attr.runInBatchMode() )", "-\t}"]}], "num": 35799}