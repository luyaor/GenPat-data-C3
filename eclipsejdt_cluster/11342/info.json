{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f94925593facf9fe5a9307a69006ca3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5626a3ac625112f3e4c8d103a3d80dad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "dbfe97bed3f7feb8408fadbcb58741aa04540553", "commitAfterChange": "3d86d8fdd283e92da8b2fd4ec59e7d2f2b4add9f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void test042()", "signatureAfterChange": " public void test042()", "diff": ["-\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from X. Either make the type abstract or make the inherited method visible.\\n\" + ", "+\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from X. Either make the type abstract or make the inherited method visible\\n\" + ", "-\t\t\"The method X.foo() does not override the inherited method from Y.Member since it is private to a different package.\\n\" + ", "+\t\t\"The method X.foo() does not override the inherited method from Y.Member since it is private to a different package\\n\" + ", "-\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from M. Either make the type abstract or make the inherited method visible.\\n\" + ", "+\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from M. Either make the type abstract or make the inherited method visible\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8cdc168315e9f00cf0e0084a9642ab1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "dbfe97bed3f7feb8408fadbcb58741aa04540553", "commitAfterChange": "3d86d8fdd283e92da8b2fd4ec59e7d2f2b4add9f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void test041()", "signatureAfterChange": " public void test041()", "diff": ["-\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from X. Either make the type abstract or make the inherited method visible.\\n\" + ", "+\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from X. Either make the type abstract or make the inherited method visible\\n\" + ", "-\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from M. Either make the type abstract or make the inherited method visible.\\n\" + ", "+\t\t\"This class must implement the inherited abstract method Y.bar(), but cannot override it since it is not visible from M. Either make the type abstract or make the inherited method visible\\n\" + "]}], "num": 11342}