{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b2620170ce4de3b9741b8d21e6983fd", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b71eae43ca56a15090cbf8fa024810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tprotected IProject createLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String compliance) throws IOException, CoreException", "signatureAfterChange": "  \tprotected IProject createLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String compliance) throws IOException, CoreException", "diff": ["-\t\torg.eclipse.jdt.core.tests.util.Util.createJar(pathAndContents, nonJavaResources, jarPath, compliance);", "+\t\tString[] claspath = get15LibraryIfNeeded(compliance);", "+\t\torg.eclipse.jdt.core.tests.util.Util.createJar(pathAndContents, nonJavaResources, jarPath, claspath, compliance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "580b6fd5e9c7dfbb9aad52f25d07a31e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprotected void addExternalLibrary(IJavaProject javaProject, String jarPath, String[] pathAndContents, String[] nonJavaResources, String compliance) throws Exception", "signatureAfterChange": " \tprotected void addExternalLibrary(IJavaProject javaProject, String jarPath, String[] pathAndContents, String[] nonJavaResources, String compliance) throws Exception", "diff": ["-\t\torg.eclipse.jdt.core.tests.util.Util.createJar(pathAndContents, nonJavaResources, jarPath, compliance);", "+\t\tString[] claspath = get15LibraryIfNeeded(compliance);", "+\t\torg.eclipse.jdt.core.tests.util.Util.createJar(pathAndContents, nonJavaResources, jarPath, claspath, compliance);"]}], "num": 44500}