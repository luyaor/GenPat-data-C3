{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b51a084c4ae0d751a016fb7aa7ebb66", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7394a199ee4b5bd86ba762a4b7521e40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "91305054d24049d6f3c60e6470ac6824b85237d2", "commitAfterChange": "613f49564d3b10ed5b9a9173cbde62537beda2ab", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic static void setOptions(Hashtable newOptions)", "signatureAfterChange": " \tpublic static void setOptions(Hashtable newOptions)", "diff": ["-\t\t\t// TODO (frederic) remove when jdt-ui will change to new values", "-\t\t\tString newKey = key;", "-\t\t\tif (key.equals(OLD_COMPILER_PB_INVALID_ANNOTATION)) {", "-\t\t\t\tnewKey = COMPILER_PB_INVALID_JAVADOC;", "-\t\t\t}", "-\t\t\tif (key.equals(OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "-\t\t\t\tnewKey = COMPILER_PB_MISSING_JAVADOC;", "-\t\t\t}", "-\t\t\t// end to do", "-\t\t\tif (!JavaModelManager.OptionNames.contains(newKey)) continue; // unrecognized option", "-\t\t\tif (newKey.equals(CORE_ENCODING)) continue; // skipped, contributed by resource prefs", "-\t\t\tpreferences.setValue(newKey, (String)newOptions.get(key));", "+\t\t\tif (!JavaModelManager.OptionNames.contains(key)) continue; // unrecognized option", "+\t\t\tif (key.equals(CORE_ENCODING)) continue; // skipped, contributed by resource prefs", "+\t\t\tString value = (String)newOptions.get(key);", "+\t\t\tpreferences.setValue(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd5cec0b74e2a357a7dc84f5c627d23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java", "commitBeforeChange": "4565c4d11214ff6c3b1816642f5ab9e9c25eeecc", "commitAfterChange": "750bdd7b4af2056bfa5a30d4d6b65bbb0afdb706", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void set(Map optionsMap)", "signatureAfterChange": " \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_PerformForbiddenReferenceCheck)) != null) {", "-\t\t\tif (ENABLED.equals(optionValue)) {", "-\t\t\t\tthis.checkForbiddenReference = true;", "-\t\t\t} else if (DISABLED.equals(optionValue)) {", "-\t\t\t\tthis.checkForbiddenReference = false;", "-\t\t\t}", "-\t\t}", "-\t\tif ((optionValue = optionsMap.get(OPTION_PerformDiscouragedReferenceCheck)) != null) {", "-\t\t\tif (ENABLED.equals(optionValue)) {", "-\t\t\t\tthis.checkDiscouragedReference = true;", "-\t\t\t} else if (DISABLED.equals(optionValue)) {", "-\t\t\t\tthis.checkDiscouragedReference = false;", "+\t\tif ((optionValue = optionsMap.get(OPTION_HideRestrictedReferences)) != null) {", "+\t\t\tif (NEVER.equals(optionValue)) {", "+\t\t\t\tthis.restrictedReferenceFilter = FILTER_NEVER;", "+\t\t\t} else if (ERROR.equals(optionValue)) {", "+\t\t\t\tthis.restrictedReferenceFilter = FILTER_ERROR;", "+\t\t\t} else if (WARNING.equals(optionValue)) {", "+\t\t\t\tthis.restrictedReferenceFilter = FILTER_WARNING;"]}], "num": 64988}