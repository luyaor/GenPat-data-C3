{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3319caa7b7830a182bfcca12f4f12523", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b09d221cfef9dc47289148d5f06574c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "f38b96656aef85b5b86d64697671deefe0bca269", "commitAfterChange": "c52df8b6239c52991a6ade22b591b2cd9d4e9815", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 376, "signatureBeforeChange": " public void test1054_options_mix()", "signatureAfterChange": " public void test1054_options_mix()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\t  \"public class X {\\n\" + ", "-\t\t\t  \"  void foo(Object p) {\\n\" + ", "-\t\t\t  \"    Object o = null;\\n\" +", "-\t\t\t  \"    if (o != null) {\\n\" +", "-\t\t\t  \"       o = null;\\n\" +", "-\t\t\t  \"    }\\n\" +", "-\t\t\t  \"    if (p == null) {}\\n\" + // taint p ", "-\t\t\t  \"    o.toString();\\n\" +", "-\t\t\t  \"    p.toString();\\n\" + ", "-\t\t\t  \"  }\\n\" + ", "-\t\t\t  \"}\\n\"},", "-\t\t\"----------\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object p) {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" +", "+\t\t\t\"    if (o != null) {\\n\" +", "+\t\t\t\"       o = null;\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"    if (p == null) {}\\n\" + // taint p ", "+\t\t\t\"    o.toString();\\n\" +", "+\t\t\t\"    p.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull /* no extra class libraries */, ", "-\t\ttrue /* flush output directory */, ", "-\t\tcustomOptions,", "-\t\tfalse /* do not generate output */,", "-\t\tfalse /* do not show category */, ", "-\t\tfalse /* do not show warning token */, ", "-\t\tfalse  /* do not skip javac for this peculiar test */,", "-\t\tfalse  /* do not perform statements recovery */);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df09a331171d35da75e8e0ce3c1a3361", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "f38b96656aef85b5b86d64697671deefe0bca269", "commitAfterChange": "c52df8b6239c52991a6ade22b591b2cd9d4e9815", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 377, "signatureBeforeChange": " public void test1055_options_mix()", "signatureAfterChange": " public void test1055_options_mix()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\t  \"public class X {\\n\" + ", "-\t\t\t  \"  void foo(Object p) {\\n\" + ", "-\t\t\t  \"    Object o = null;\\n\" +", "-\t\t\t  \"    if (o != null) {\\n\" +", "-\t\t\t  \"       o = null;\\n\" +", "-\t\t\t  \"    }\\n\" +", "-\t\t\t  \"    if (p == null) {}\\n\" + // taint p ", "-\t\t\t  \"    o.toString();\\n\" +", "-\t\t\t  \"    p.toString();\\n\" + ", "-\t\t\t  \"  }\\n\" + ", "-\t\t\t  \"}\\n\"},", "-\t\t\"----------\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object p) {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" +", "+\t\t\t\"    if (o != null) {\\n\" +", "+\t\t\t\"       o = null;\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"    if (p == null) {}\\n\" + // taint p ", "+\t\t\t\"    o.toString();\\n\" +", "+\t\t\t\"    p.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull /* no extra class libraries */, ", "-\t\ttrue /* flush output directory */, ", "-\t\tcustomOptions,", "-\t\tfalse /* do not generate output */,", "-\t\tfalse /* do not show category */, ", "-\t\tfalse /* do not show warning token */, ", "-\t\tfalse  /* do not skip javac for this peculiar test */,", "-\t\tfalse  /* do not perform statements recovery */);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t\t"]}], "num": 37965}