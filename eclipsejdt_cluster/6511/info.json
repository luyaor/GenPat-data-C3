{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac2376ceb80195339e1fe81452489bb0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ae5540632120af8e9db1c464906647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f03a3c2060092275ebe3df7a9969a3494a584807", "commitAfterChange": "10d218e167bd75add0dd3c7079813702993dcf64", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\t \tpublic IEclipsePreferences getEclipsePreferences()", "signatureAfterChange": " \tpublic IEclipsePreferences getEclipsePreferences()", "diff": ["-\t */\t", "+\t */", "+", "-\t\tIEclipsePreferences.INodeChangeListener listener = new IEclipsePreferences.INodeChangeListener() {", "+\t\tIEclipsePreferences.INodeChangeListener nodeListener = new IEclipsePreferences.INodeChangeListener() {", "-\t\t((IEclipsePreferences) eclipsePreferences.parent()).addNodeChangeListener(listener);", "+\t\t((IEclipsePreferences) eclipsePreferences.parent()).addNodeChangeListener(nodeListener);", "+", "+\t\t// Listen to preference changes", "+\t\tIEclipsePreferences.IPreferenceChangeListener preferenceListener = new IEclipsePreferences.IPreferenceChangeListener() {", "+\t\t\tpublic void preferenceChange(IEclipsePreferences.PreferenceChangeEvent event) {", "+\t\t\t\tJavaModelManager.getJavaModelManager().resetProjectOptions(JavaProject.this);", "+\t\t\t}", "+\t\t};", "+\t\teclipsePreferences.addPreferenceChangeListener(preferenceListener);", "+\t\tPreferences.IPropertyChangeListener propertyListener = new Preferences.IPropertyChangeListener() {", "+\t\t\tpublic void propertyChange(Preferences.PropertyChangeEvent event) {", "+\t\t\t\tJavaModelManager.getJavaModelManager().resetProjectOptions(JavaProject.this);", "+\t\t\t}", "+\t\t};", "+\t\tJavaCore.getPlugin().getPluginPreferences().addPropertyChangeListener(propertyListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50379e790914350c42cda6d7a846bc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "bd0911e6aac015b3cc8f2d57e87a39187549c9cb", "commitAfterChange": "4d7b680fd8b5408a11917a8e632dfb0e8de63449", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "\t \tpublic IEclipsePreferences getEclipsePreferences()", "signatureAfterChange": "\t \tpublic IEclipsePreferences getEclipsePreferences()", "diff": ["+\t\t// Get cached preferences if exist", "-\t\tIEclipsePreferences eclipsePreferences =  perProjectInfo.preferences;", "-\t\tif (eclipsePreferences != null) return eclipsePreferences;", "+\t\tif (perProjectInfo.preferences != null) return perProjectInfo.preferences;", "+\t\t// Init project preferences", "-\t\teclipsePreferences = context.getNode(JavaCore.PLUGIN_ID);", "+\t\tfinal IEclipsePreferences eclipsePreferences = context.getNode(JavaCore.PLUGIN_ID);", "+\t\t// Listen to node removal from parent in order to reset cache (see bug 68993)", "+\t\tIEclipsePreferences.INodeChangeListener listener = new IEclipsePreferences.INodeChangeListener() {", "+\t\t\tpublic void added(IEclipsePreferences.NodeChangeEvent event) {", "+\t\t\t\t// do nothing", "+\t\t\t}", "+\t\t\tpublic void removed(IEclipsePreferences.NodeChangeEvent event) {", "+\t\t\t\tif (event.getChild() == eclipsePreferences) {", "+\t\t\t\t\tJavaModelManager.getJavaModelManager().resetProjectPreferences(JavaProject.this);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\t((IEclipsePreferences) eclipsePreferences.parent()).addNodeChangeListener(listener);"]}], "num": 6511}