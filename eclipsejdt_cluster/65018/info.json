{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05185354647879de22a7f0f2aa3cd921", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cf6edc69908b2d24980e7ce2004e403", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "c99d716fa975f313809c9a758c093b0027fd52fe", "commitAfterChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName)", "signatureAfterChange": "   public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName)", "diff": ["-\tsuper(FIELD_PATTERN, matchMode, isCaseSensitive);", "+\tsuper(FIELD_PATTERN, findDeclarations, readAccess, writeAccess, name, matchMode, isCaseSensitive);", "-\tthis.findDeclarations = findDeclarations; // set to find declarations & all occurences", "-\tthis.readAccess = readAccess; // set to find any reference, read only references & all occurences", "-\tthis.writeAccess = writeAccess; // set to find any reference, write only references & all occurences", "-\tthis.findReferences = readAccess || writeAccess;", "-", "-\tthis.name = isCaseSensitive ? name : CharOperation.toLowerCase(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec27b16cb3d9067bc1cb2571bb400765", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/VariablePattern.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public VariablePattern(int patternKind, boolean findDeclarations, boolean readAccess, boolean writeAccess, char[] name, int matchRule)", "signatureAfterChange": "  public VariablePattern(int patternKind, boolean findDeclarations, boolean readAccess, boolean writeAccess, char[] name, int matchRule)", "diff": ["-\tthis.findDeclarations = findDeclarations; // set to find declarations & all occurences", "-\tthis.readAccess = readAccess; // set to find any reference, read only references & all occurences", "-\tthis.writeAccess = writeAccess; // set to find any reference, write only references & all occurences", "+\tthis.findDeclarations = findDeclarations; // set to find declarations & all occurrences", "+\tthis.readAccess = readAccess; // set to find any reference, read only references & all occurrences", "+\tthis.writeAccess = writeAccess; // set to find any reference, write only references & all occurrences", "-\tthis.name = (isCaseSensitive() || isCamelCase())  ? name : CharOperation.toLowerCase(name);", "+\tthis.name = (this.isCaseSensitive || this.isCamelCase) ? name : CharOperation.toLowerCase(name);"]}], "num": 65018}