{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "461649aa452c1c45778faf01bb4e7bd5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48a05fd5cee4189cfed69cc1bba58f99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 771, "methodNumberAfterChange": 771, "signatureBeforeChange": " public void test738()", "signatureAfterChange": " public void test738()", "diff": ["-// https://bugs.eclipse.org/bugs/show_bug.cgi?id=332843", "+// binary literals / underscores in literals / multi catch", "+\tthis.formatterPrefs = null;", "+\tthis.formatterOptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_7);", "+\tthis.formatterOptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_7);", "+\tthis.formatterOptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_7);", "+\tString source =", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tint i = 0b0001;\\n\" +", "+\t\t\"\tint j = 0b0_0_0_1;\\n\" +", "+\t\t\"\tvoid foo(String s) {\\n\" +", "+\t\t\"\t\ttry {\\n\" +", "+\t\t\"\t\t\tFileReader reader = new FileReader(s);\\n\" +", "+\t\t\"\t\t} catch(FileNotFoundException | IOException | Exception e) {\\n\" +", "+\t\t\"\t\t\te.printStackTrace();\\n\" +", "+\t\t\"\t\t}\\n\" +", "+\t\t\"\t}\\n\" +", "+\t\t\"}\\n\";", "+\tformatSource(source,", "+\t\t\"public class Test {\\n\" + ", "+\t\t\"\tint i = 0b0001;\\n\" + ", "+\t\t\"\tint j = 0b0_0_0_1;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\tvoid foo(String s) {\\n\" + ", "+\t\t\"\t\ttry {\\n\" + ", "+\t\t\"\t\t\tFileReader reader = new FileReader(s);\\n\" + ", "+\t\t\"\t\t} catch (FileNotFoundException | IOException | Exception e) {\\n\" + ", "+\t\t\"\t\t\te.printStackTrace();\\n\" + ", "+\t\t\"\t\t}\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\"", "+\t);", "+}", "-\trunTest(codeFormatter, \"test738\", \"RecipeDocumentProvider.java\", CodeFormatter.K_COMPILATION_UNIT, 0, true, regions, \"\\n\");//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9c88f2d6e0dc338218a8bb276da071d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest18.java", "commitBeforeChange": "841af85ab99e4b15e2a10d11233f480a3f381ff0", "commitAfterChange": "01bd53f266d07ca177ff8e7fb927b7206b4c562d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void test0001()", "signatureAfterChange": "  public void test0001()", "diff": ["-\treturn;", "+\tString string =", "+\t\t\t\"interface I { \\n\" +", "+\t\t\t\"\tJ foo(String x, String y);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"interface J {\\n\" +", "+\t\t\t\"\tK foo(String x, String y);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"interface K {\\n\" +", "+\t\t\t\"\tint foo(String x, int y);\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tstatic void goo(J i) {}\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tgoo ((first, second) -> {\\n\" +", "+\t\t\t\"\t\t\treturn (xyz, pqr) -> first.\\n\" +", "+\t\t\t\"\t\t});\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\";", "+", "+\tString completeBehind = \"first.\";", "+\tint cursorLocation = string.lastIndexOf(completeBehind) + completeBehind.length() - 1;", "+", "+\tString expectedCompletionNodeToString = \"<CompleteOnName:first.>\";", "+\tString expectedParentNodeToString = \"<NONE>\";", "+\tString completionIdentifier = \"\";", "+\tString expectedReplacedSource = \"first.\";", "+\tString expectedUnitDisplayString =", "+\t\t\t\"interface I {\\n\" + ", "+\t\t\t\"  J foo(String x, String y);\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface J {\\n\" + ", "+\t\t\t\"  K foo(String x, String y);\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface K {\\n\" + ", "+\t\t\t\"  int foo(String x, int y);\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public X() {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  static void goo(J i) {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\"    (<no type> first, <no type> second) ->     {\\n\" + ", "+\t\t\t\"      (<no type> xyz, <no type> pqr) -> <CompleteOnName:first.>;\\n\" + ", "+\t\t\t\"    };\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\";", "+", "+\tcheckMethodParse(", "+\t\tstring.toCharArray(),", "+\t\tcursorLocation,", "+\t\texpectedCompletionNodeToString,", "+\t\texpectedParentNodeToString,", "+\t\texpectedUnitDisplayString,", "+\t\tcompletionIdentifier,", "+\t\texpectedReplacedSource,", "+\t\t\"diet ast\");", "+}"]}], "num": 26431}