{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24d6e3d898c522d5917ce9807c523c85", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90adeae07a4054ae1c42b3423f176813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "commitAfterChange": "3f516418addd04dde93962cf74310655f6482a4d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic boolean visit(InfixExpression node)", "signatureAfterChange": " \tpublic boolean visit(InfixExpression node)", "diff": ["-\t\tfor (Iterator it = node.extendedOperands().iterator(); it.hasNext(); ) {", "-\t\t\tthis.buffer.append(node.getOperator().toString());", "-\t\t\tExpression e = (Expression) it.next();", "-\t\t\te.accept(this);", "+\t\tfinal List extendedOperands = node.extendedOperands();", "+\t\tif (extendedOperands.size() != 0) {", "+\t\t\tthis.buffer.append(' ');", "+\t\t\tfor (Iterator it = extendedOperands.iterator(); it.hasNext(); ) {", "+\t\t\t\tthis.buffer.append(node.getOperator().toString()).append(' ');", "+\t\t\t\tExpression e = (Expression) it.next();", "+\t\t\t\te.accept(this);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67b0c16514c030c19a4fb0cf73ab0a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "e88d2968b2af5bd5b054afbfa887ee31519acc4d", "commitAfterChange": "23d1bc466b4877bf5eceb83f88acf63af19c0d70", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void visitAnnotationsList(List annotations)", "signatureAfterChange": "  \tprivate void visitAnnotationsList(List annotations)", "diff": ["+", "+\tprivate void visitAnnotationsList(List annotations) {", "+\t\tfor (Iterator it = annotations.iterator(); it.hasNext(); ) {", "+\t\t\tAnnotation annotation = (Annotation) it.next();", "+\t\t\tannotation.accept(this);", "+\t\t\tthis.buffer.append(' ');", "+\t\t}", "+\t}", "-\tprivate void visitAnnotationsList(List annotations) {", "-\t\tif (annotations != null) {", "-\t\t\tfor (Iterator it = annotations.iterator(); it.hasNext(); ) {", "-\t\t\t\tAnnotation annotation = (Annotation) it.next();", "-\t\t\t\tannotation.accept(this);", "-\t\t\t\tthis.buffer.append(' ');", "-\t\t\t}", "-\t\t}", "-\t}"]}], "num": 68517}