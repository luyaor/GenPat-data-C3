{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2918aa2c4f6fbd4b31f4c7870871183f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810b26eb95de56945b4e1a0686703dff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate boolean dumpBinaryExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "signatureAfterChange": "  \tprivate boolean dumpBinaryExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(binaryExpression, numberOfParens);", "-\t\t\t", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(binaryExpression, numberOfParens);", "+\t\t}\t", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(binaryExpression, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(binaryExpression, numberOfParens);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d916ac3164e4b251d6976dad61e4d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic boolean visit( \t\tConditionalExpression conditionalExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConditionalExpression conditionalExpression, \t\tBlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(conditionalExpression, numberOfParens);", "-\t", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(conditionalExpression, numberOfParens);", "+\t\t}", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(conditionalExpression, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(conditionalExpression, numberOfParens);", "+\t\t}"]}], "num": 45590}