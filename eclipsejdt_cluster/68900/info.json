{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "838062d7cc0f1c1fda00d33ad5fe58f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9090234543375024b9c37b1a002bc489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 763, "methodNumberAfterChange": 763, "signatureBeforeChange": " public void test0742()", "signatureAfterChange": " public void test0742()", "diff": ["+// FAIL ERRMSG", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t\t: // ----- JDK1_8 + -----: #4 & #5 infer as argument type: SuperType.", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in X.java (at line 24)\\n\" +", "+\t\t\"\tList<SubType> lsub = makeSingletonList(new SubType()); // #3 - ERROR\\n\" +", "+\t\t\"\t                     ^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method makeSingletonList(T) of type X is not applicable for the arguments (X.SubType). The inferred type X.SubType is not a valid substitute for the bounded parameter <T extends X.SelfType<T>>\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 28)\\n\" +", "+\t\t\"\tlsub = makeSingletonList2(new SubType()); // #7 - ERROR\\n\" +", "+\t\t\"\t       ^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Bound mismatch: The generic method makeSingletonList2(S) of type X is not applicable for the arguments (X.SubType). The inferred type X.SubType is not a valid substitute for the bounded parameter <T extends X.SelfType<T>>\\n\" +", "+\t\t\"----------\\n\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8d83593fa2d9db2b30d0c6dc6acb15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 427, "methodNumberAfterChange": 427, "signatureBeforeChange": " \t \tpublic void test423()", "signatureAfterChange": " \t \tpublic void test423()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\"\tfoo();\\n\" + ", "-\t\t\"\t^^^\\n\" + ", "-\t\t\"Bound mismatch: The generic method foo() of type X is not applicable for the arguments () since the type X is not a valid substitute for the bounded parameter <U extends X & Runnable>\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tfoo();\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The generic method foo() of type X is not applicable for the arguments (). The inferred type X is not a valid substitute for the bounded parameter <U extends X & Runnable>\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 68900}