{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7eee34815673e25b0b96c13a2a35671", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a6f6809f903883a37c1ac021ed5fda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "442e537ccb6b39c7edc9c47a4881c13fd272b778", "commitAfterChange": "4c189e9ace1b80058cb5ffdc73af183713ebd908", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["-\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "-\t\t\t\t\ttempName[length] = 'e';", "-\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\tif(tempName.length > 1 && tempName[length-2] == 's') {", "+\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\t\ttempName[length] = 'e';", "+\t\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d986c04285d7cd9861f911d33c54d277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "8ef2e19ed4ad065a565f0c2b4b16065aa807e82f", "commitAfterChange": "dcb480eb89f55d2bede123ef7bb95483fcdff321", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "signatureAfterChange": " \tprivate void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "diff": ["-\t\t\t\t\t// add a type reference ", "-\t\t\t\t\tname = replace('/', '.', extractClassReference(constantPoolOffsets, reader, i)); // so that it looks like java.lang.String", "+\t\t\t\t\t// add a type reference", "+\t\t\t\t\tname = extractClassReference(constantPoolOffsets, reader, i);", "+\t\t\t\t\tif (name.length > 0 && name[0] == '[')", "+\t\t\t\t\t\tbreak; // skip over array references", "+\t\t\t\t\tname = replace('/', '.', name); // so that it looks like java.lang.String"]}], "num": 1109}