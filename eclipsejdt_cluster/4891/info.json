{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e73042bd10bcb552b2554a108a8628f2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a97f281276a45566a2f24dbbdcea1747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "c322aa193cdc63aab75b6cea80e9d3a5e37a3680", "commitAfterChange": "fec49b42156597d6fafa014c8ec392453275baa9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\t\t\t\tif (indexFile.exists()) { // check before creating index so as to avoid creating a new empty index if file is missing", "+\t\t\t\tif (indexFile.exists() && isIndexSignatureValid(indexFile)) { // check before creating index so as to avoid creating a new empty index if file is missing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdad2282dca63c58fceb0e64ac96fcf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "e2b82109649a9a909e8c958b4e10c6fc85813cdf", "commitAfterChange": "315491850d65d1bf16ef4a05c3ec36b43915dc0e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \t\tpublic boolean writeAndCacheClasspath(final JavaProject javaProject, final IClasspathEntry[] newRawClasspath, final IPath newOutputLocation) throws JavaModelException", "signatureAfterChange": "  \t\tpublic boolean writeAndCacheClasspath(final JavaProject javaProject, final IClasspathEntry[] newRawClasspath, final IPath newOutputLocation) throws JavaModelException", "diff": ["-\t\t\t\tthis.project, // use project scheduling rule as this is needed to create the .classpath file if it doesn't exist yet", "+\t\t\t\tworkspace.getRuleFactory().modifyRule(this.project), // use project modification rule as this is needed to create the .classpath file if it doesn't exist yet"]}], "num": 4891}