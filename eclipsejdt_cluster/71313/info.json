{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "595e92e8590e1b91144d28a2d1a6b4dd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14339e9e5123b42f5b937ac82a7e9597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "commitAfterChange": "a53e05883d2e536e6d912a85c946fd372aae0f56", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tSearchMatch match = locator.newReferenceMatch(referenceType(), element, accuracy, reference.sourceStart, reference.sourceEnd+1);", "-\tlocator.report(match);", "+\tSearchMatch match = null;", "+\tint referenceType = referenceType();", "+\tswitch (referenceType) {", "+\t\tcase IJavaElement.PACKAGE_FRAGMENT:", "+\t\t\tmatch = locator.newPackageReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.TYPE:", "+\t\t\tmatch = locator.newTypeReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.FIELD:", "+\t\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.METHOD:", "+\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t\tcase IJavaElement.LOCAL_VARIABLE:", "+\t\t\tmatch = locator.newLocalVariableReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tbreak;", "+\t}", "+\tif (match != null) {", "+\t\tlocator.report(match);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f382fa9a8b741868c7dec0196e9287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\tmatchReportReference(reference, element, null, null, elementBinding, accuracy, locator);", "+}", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, importRef);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, fieldReference);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "-\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "760217f94e4e2fa78920aafd15db6d64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\tint offset = reference.sourceStart;", "-\t\t\tmatch = locator.newPackageReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tmatch = locator.newPackageReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\tmatch = locator.newTypeReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tmatch = locator.newTypeReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tmatch = locator.newFieldReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\tmatch = locator.newLocalVariableReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\t\tmatch = locator.newLocalVariableReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e26c71304a700a979ba8645512b16994", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tSearchParticipant participant,  \t\tIResource resource)", "signatureAfterChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tSearchParticipant participant,  \t\tIResource resource)", "diff": ["-\t\tint sourceStart,  ", "-\t\tint sourceEnd,", "+\t\tint offset,  ", "+\t\tint length,", "-\t\t\treturn new PackageDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new PackageDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new TypeDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new TypeDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new FieldDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new FieldDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new MethodDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new MethodDeclarationMatch(element, accuracy, offset, length, participant, resource);", "-\t\t\treturn new LocalVariableDeclarationMatch(element, accuracy, sourceStart, sourceEnd, participant, resource);", "+\t\t\treturn new LocalVariableDeclarationMatch(element, accuracy, offset, length, participant, resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef540c373db419a22e0eb72691fb99dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tSearchParticipant participant,  \t\tIResource resource)", "signatureAfterChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tBinding binding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tSearchParticipant participant,  \t\tIResource resource)", "diff": ["+\t\tBinding binding,", "-\t\t\treturn new TypeDeclarationMatch(element, accuracy, offset, length, participant, resource);", "+\t\t\treturn new TypeDeclarationMatch(binding == null ? element : ((JavaElement) element).resolved(binding), accuracy, offset, length, participant, resource);", "-\t\t\treturn new FieldDeclarationMatch(element, accuracy, offset, length, participant, resource);", "+\t\t\treturn new FieldDeclarationMatch(binding == null ? element : ((JavaElement) element).resolved(binding), accuracy, offset, length, participant, resource);", "-\t\t\treturn new MethodDeclarationMatch(element, accuracy, offset, length, participant, resource);", "+\t\t\treturn new MethodDeclarationMatch(binding == null ? element : ((JavaElement) element).resolved(binding), accuracy, offset, length, participant, resource);"]}], "num": 71313}