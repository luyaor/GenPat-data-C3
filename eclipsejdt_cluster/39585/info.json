{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c77a11ecba64a79df09c9764f8e3c36e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d68e32fe4e8d604a2c5165f41da5ad5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference.java", "commitBeforeChange": "a0a4fc04d251f660d926a9aa75cac417e8668b19", "commitAfterChange": "6c179d1611035fa643a61ef0b82b25ce29580a3a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tif (this.resolvedType != null) { // is a shared type reference which was already resolved", "-\t\t\tif (!this.resolvedType.isValidBinding())", "-\t\t\t\treturn null; // already reported error", "-\t\t} else {", "-\t\t\tthis.resolvedType = getTypeBinding(scope);", "-\t\t\tif (!this.resolvedType.isValidBinding()) {", "-\t\t\t\tchar[][] tokens = { this.token };", "-\t\t\t\tBinding binding = scope.getTypeOrPackage(tokens);", "-\t\t\t\tif (binding instanceof PackageBinding) {", "-\t\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "-\t\t\t\t} else {", "-\t\t\t\t\treportInvalidType(scope);", "-\t\t\t\t}", "-\t\t\t\treturn null;", "+\t\tif (this.resolvedType != null)// is a shared type reference which was already resolved", "+\t\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "+", "+\t\tthis.resolvedType = getTypeBinding(scope);", "+\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\t\tchar[][] tokens = { this.token };", "+\t\t\tBinding binding = scope.getTypeOrPackage(tokens);", "+\t\t\tif (binding instanceof PackageBinding) {", "+\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "+\t\t\t} else {", "+\t\t\t\treportInvalidType(scope);", "-\t\t\tif (isTypeUseDeprecated(this.resolvedType, scope)) {", "-\t\t\t\treportDeprecatedType(scope);", "-\t\t\t}", "-\t\t\t// check raw type", "-\t\t\tif (this.resolvedType.isArrayType()) {", "-\t\t\t    TypeBinding leafComponentType = this.resolvedType.leafComponentType();", "-\t\t\t    if (leafComponentType.isGenericType()) { // raw type", "-\t\t\t        return this.resolvedType = scope.createArrayType(scope.environment().createRawType((ReferenceBinding)leafComponentType, null), this.resolvedType.dimensions());", "-\t\t\t    }", "-\t\t\t} else if (this.resolvedType.isGenericType()) {", "-\t\t        return this.resolvedType = scope.environment().createRawType((ReferenceBinding)this.resolvedType, null); // raw type", "-\t\t\t}\t\t", "+\t\t\treturn null;", "-\t\treturn this.resolvedType;", "+\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\t\treportDeprecatedType(scope);", "+\t\treturn this.resolvedType = scope.convertToRawType(this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f1d6e8c52ad169304921853745a28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "a0a4fc04d251f660d926a9aa75cac417e8668b19", "commitAfterChange": "6c179d1611035fa643a61ef0b82b25ce29580a3a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tif (this.resolvedType != null) { // is a shared type reference which was already resolved", "-\t\t\tif (!this.resolvedType.isValidBinding())", "-\t\t\t\treturn null; // already reported error", "-\t\t} else {", "-\t\t\tthis.resolvedType = getTypeBinding(scope);", "-\t\t\tif (!this.resolvedType.isValidBinding()) {", "-\t\t\t\tBinding binding = scope.getTypeOrPackage(this.tokens);", "-\t\t\t\tif (binding instanceof PackageBinding) {", "-\t\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "-\t\t\t\t} else {", "-\t\t\t\t\treportInvalidType(scope);", "-\t\t\t\t}", "-\t\t\t\treturn null;", "+\t\tif (this.resolvedType != null) // is a shared type reference which was already resolved", "+\t\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "+", "+\t\tthis.resolvedType = getTypeBinding(scope);", "+\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\t\tBinding binding = scope.getTypeOrPackage(this.tokens);", "+\t\t\tif (binding instanceof PackageBinding) {", "+\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "+\t\t\t} else {", "+\t\t\t\treportInvalidType(scope);", "-\t\t\tif (isTypeUseDeprecated(this.resolvedType, scope)) {", "-\t\t\t\treportDeprecatedType(scope);", "-\t\t\t}", "-\t\t\t// check raw type", "-\t\t\tif (this.resolvedType.isArrayType()) {", "-\t\t\t    TypeBinding leafComponentType = this.resolvedType.leafComponentType();", "-\t\t\t    if (leafComponentType.isGenericType()) { // raw type", "-\t\t\t        return this.resolvedType = scope.createArrayType(scope.environment().createRawType((ReferenceBinding)leafComponentType, null), this.resolvedType.dimensions());", "-\t\t\t    }", "-\t\t\t} else if (this.resolvedType.isGenericType()) {", "-\t\t        return this.resolvedType = scope.environment().createRawType((ReferenceBinding)this.resolvedType, null); // raw type", "-\t\t\t}\t\t", "+\t\t\treturn null;", "-\t\treturn this.resolvedType;", "+\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\t\treportDeprecatedType(scope);", "+\t\treturn this.resolvedType = scope.convertToRawType(this.resolvedType);"]}], "num": 39585}