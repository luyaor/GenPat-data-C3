{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28aa6768d5570c9914c7e676107ffc42", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "415b3c93fd442c60ac18bcd332850894", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "381b0c5e3a54bec6f421d38d7ee5fd38c998afc2", "commitAfterChange": "140563af50526c3e1d6be899503d29113c538e25", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope blockScope, boolean checkBounds)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "diff": ["-public TypeBinding resolveType(BlockScope blockScope, boolean checkBounds) {", "+public TypeBinding resolveType(BlockScope scope, boolean checkBounds) {", "-\tthis.resolvedType = getTypeBinding(blockScope);", "+\tTypeBinding type = this.resolvedType = getTypeBinding(scope);", "-\t\treportInvalidType(blockScope);", "+\t\treportInvalidType(scope);", "-\tif (isTypeUseDeprecated(this.resolvedType, blockScope))", "-\t\treportDeprecatedType(blockScope);", "-\treturn this.resolvedType = blockScope.environment().convertToRawType(this.resolvedType);", "+\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\treportDeprecatedType(scope);", "+\ttype = scope.environment().convertToRawType(type);", "+\tif (type.isRawType() && scope.compilerOptions().reportRawTypeReference) {", "+\t\tscope.problemReporter().rawTypeReference(this, type);", "+\t}\t\t\t", "+\treturn this.resolvedType = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8d0ecfbd257451202e8406bba87f15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "381b0c5e3a54bec6f421d38d7ee5fd38c998afc2", "commitAfterChange": "140563af50526c3e1d6be899503d29113c538e25", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope classScope)", "signatureAfterChange": " public TypeBinding resolveType(ClassScope scope)", "diff": ["-public TypeBinding resolveType(ClassScope classScope) {", "+public TypeBinding resolveType(ClassScope scope) {", "-\tthis.resolvedType = getTypeBinding(classScope);", "+\tTypeBinding type = this.resolvedType = getTypeBinding(scope);", "-\t\treportInvalidType(classScope);", "+\t\treportInvalidType(scope);", "-\tif (isTypeUseDeprecated(this.resolvedType, classScope))", "-\t\treportDeprecatedType(classScope);", "-\treturn this.resolvedType = classScope.environment().convertToRawType(this.resolvedType);", "+\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\treportDeprecatedType(scope);", "+\ttype = scope.environment().convertToRawType(type);", "+\tif (type.isRawType() && scope.compilerOptions().reportRawTypeReference) {", "+\t\tscope.problemReporter().rawTypeReference(this, type);", "+\t}\t\t\t", "+\treturn this.resolvedType = type;\t"]}], "num": 48683}