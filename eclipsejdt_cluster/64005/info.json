{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ba761e76fa71fc2841fd0c273327e9b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5191b546f70390f4a0dbad0cdd3e405e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprivate void verifyNameBindings(Name name)", "signatureAfterChange": " \tprivate void verifyNameBindings(Name name)", "diff": ["-\t\t\t\tassumeNull(this.prefix+name+\" binding should be null!\", binding);", "+\t\t\t\tassumeNull(prefix+name+\" binding should be null!\", binding);", "-\t\t\t\tassumeNotNull(this.prefix+name+\" binding was not found!\", binding);", "+\t\t\t\tassumeNotNull(prefix+name+\" binding was not found!\", binding);", "-\t\t\t\t\tassumeNull(this.prefix+simpleName+\" binding should be null!\", binding);", "+\t\t\t\t\tassumeNull(prefix+simpleName+\" binding should be null!\", binding);", "-\t\t\t\t\tassumeNotNull(this.prefix+simpleName+\" binding was not found!\", binding);", "+\t\t\t\t\tassumeNotNull(prefix+simpleName+\" binding was not found!\", binding);", "-\t\t\t\tif (index > 0 && this.packageBinding) {", "-\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type!\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\tif (index > 0 && packageBinding) {", "+\t\t\t\t\tassumeEquals(prefix+\"Wrong binding type!\", IBinding.PACKAGE, binding.getKind());", "-\t\t\t\t\tassumeNull(this.prefix+name+\" binding should be null!\", binding);", "+\t\t\t\t\tassumeNull(prefix+name+\" binding should be null!\", binding);", "-\t\t\t\t\tassumeNotNull(this.prefix+name+\" binding was not found!\", binding);", "+\t\t\t\t\tassumeNotNull(prefix+name+\" binding was not found!\", binding);", "-\t\t\t\tif (this.packageBinding) {", "-\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type!\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\tif (packageBinding) {", "+\t\t\t\t\tassumeEquals(prefix+\"Wrong binding type!\", IBinding.PACKAGE, binding.getKind());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afce124b34d7baa9273ca21f9ae284d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void verifyPositions(Javadoc docComment, char[] source)", "signatureAfterChange": " \tprivate void verifyPositions(Javadoc docComment, char[] source)", "diff": ["-\t\tboolean stop = this.stopOnFailure;", "-//\t\tthis.stopOnFailure = false;", "+\t\tboolean stop = stopOnFailure;", "+//\t\tstopOnFailure = false;", "-\t\tassumeTrue(this.prefix+\"Misplaced javadoc start at <\"+start+\">: \"+docComment, source[start++] == '/' && source[start++] == '*' && source[start++] == '*');", "+\t\tassumeTrue(prefix+\"Misplaced javadoc start at <\"+start+\">: \"+docComment, source[start++] == '/' && source[start++] == '*' && source[start++] == '*');", "-\t\t\tassumeEquals(this.prefix+\"Wrong start position <\"+teStart+\"> for tag element: \"+tagElement, tagStart, teStart);", "+\t\t\tassumeEquals(prefix+\"Wrong start position <\"+teStart+\"> for tag element: \"+tagElement, tagStart, teStart);", "-\t\tassumeTrue(this.prefix+\"Misplaced javadoc end at <\"+tagStart+'>', source[tagStart-1] == '*' && source[tagStart] == '/');", "-\t\tassumeEquals(this.prefix+\"Wrong javadoc length at <\"+end+\">: \", tagStart, end);", "-\t\tthis.stopOnFailure = stop;", "-\t\tassertTrue(!stop || this.failures.size()==0);", "+\t\tassumeTrue(prefix+\"Misplaced javadoc end at <\"+tagStart+'>', source[tagStart-1] == '*' && source[tagStart] == '/');", "+\t\tassumeEquals(prefix+\"Wrong javadoc length at <\"+end+\">: \", tagStart, end);", "+\t\tstopOnFailure = stop;", "+\t\tassertTrue(!stop || failures.size()==0);"]}], "num": 64005}