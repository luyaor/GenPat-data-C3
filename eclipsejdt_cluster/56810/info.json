{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8f94a994c7b7c4c891444c44912dde8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187ebe8840560a556adc38d851581c0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testContainerInitializer6() throws CoreException", "signatureAfterChange": " public void testContainerInitializer6() throws CoreException", "diff": ["-\t\tJavaModelManager.PreviousSessionContainers = JavaModelManager.Containers;", "-\t\tJavaModelManager.Containers = new HashMap(5);", "-\t\tJavaModelManager.getJavaModelManager().removePerProjectInfo((JavaProject)p2);", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tmanager.previousSessionContainers = manager.containers;", "+\t\tmanager.containers = new HashMap(5);", "+\t\tmanager.removePerProjectInfo((JavaProject)p2);", "-\t\tResourcesPlugin.getWorkspace().removeResourceChangeListener(JavaModelManager.getJavaModelManager().deltaState);", "-\t\tJavaModelManager.getJavaModelManager().deltaState = new DeltaProcessingState();", "+\t\tResourcesPlugin.getWorkspace().removeResourceChangeListener(manager.deltaState);", "+\t\tmanager.deltaState = new DeltaProcessingState();", "-\t\t\tJavaModelManager.getJavaModelManager().deltaState,", "+\t\t\tmanager.deltaState,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c151fd73655c1a511ce924bca0075cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "64daeb17943302da145ef115d15261de8d97b017", "commitAfterChange": "8c36621cf84c38f056b439d0f0ca65c3c7b433c1", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tif (manager.containerPutIfInitializingWithSameEntries(containerPath, affectedProjects, respectiveContainers))", "+\t\t\treturn;", "-\t\tfinal int projectLength = affectedProjects.length;", "+\t\tfinal int projectLength = affectedProjects.length;\t", "-\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(affectedProject, containerPath, newContainer);", "+\t\t\t\tmanager.containerPut(affectedProject, containerPath, newContainer);", "-\t\t\tIClasspathContainer oldContainer = JavaModelManager.getJavaModelManager().containerGet(affectedProject, containerPath);", "+\t\t\tIClasspathContainer oldContainer = manager.containerGet(affectedProject, containerPath);", "-\t\t\tJavaModelManager.getJavaModelManager().containerPut(affectedProject, containerPath, newContainer);", "+\t\t\tmanager.containerPut(affectedProject, containerPath, newContainer);", "-\t\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(affectedProjects[i], containerPath, null); // reset init in progress marker", "+\t\t\t\t\tmanager.containerPut(affectedProjects[i], containerPath, null); // reset init in progress marker"]}], "num": 56810}