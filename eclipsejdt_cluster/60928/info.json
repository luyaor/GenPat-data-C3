{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0580dac585a1168c92a199f1bbf9c43", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c70a137ac1205184cbd75d6167ac0cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "7daed772befc71241cd5718015cdd1d8faa642ca", "commitAfterChange": "bf0f3c0ee6c28cc3716705a3315c5622fc576ce2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " private char[] getQualifiedName()", "signatureAfterChange": " private char[] getQualifiedName()", "diff": ["-\t\t\treturn classFile.getType().getFullyQualifiedName().toCharArray();", "+\t\t\t// find the outer most declaring type", "+\t\t\tIType type = classFile.getType();", "+\t\t\tIType declaringType = type.getDeclaringType();", "+\t\t\twhile (declaringType != null) {", "+\t\t\t\ttype = declaringType;", "+\t\t\t\tdeclaringType = type.getDeclaringType();", "+\t\t\t}", "+\t\t\t", "+\t\t\t// return qualified name of outer most declaring type", "+\t\t\treturn type.getFullyQualifiedName().toCharArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f66c22557b36575aeede00f61988680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "7af18694cb84cbe29d3fce9081ee13e2b35d1924", "commitAfterChange": "8062780b8432b1d43d5212d514fdd79cb7aae097", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private char[] getQualifiedName()", "signatureAfterChange": " private char[] getQualifiedName()", "diff": ["-\t\t\t// find the outer most declaring type", "-\t\t\tIType type = classFile.getType();", "-\t\t\tIType declaringType = type.getDeclaringType();", "-\t\t\twhile (declaringType != null) {", "-\t\t\t\ttype = declaringType;", "-\t\t\t\tdeclaringType = type.getDeclaringType();", "-\t\t\t}", "-\t\t\t", "-\t\t\t// return qualified name of outer most declaring type", "+\t\t\tIType type = getTopLevelType(classFile.getType());"]}], "num": 60928}