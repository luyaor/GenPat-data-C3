{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46c57c95c443ba80369d37913dd926ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d804da7ce0766689634c05354133767", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InterfaceMethodsTest.java", "commitBeforeChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "commitAfterChange": "0b88f9a0bb1950edae0865a8658608a49edfc445", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testModifiers1()", "signatureAfterChange": " \tpublic void testModifiers1()", "diff": ["-// Inject an unrelated compile error to prevent class file verification. TODO revert", "-// (even lambda-enabled JRE doesn't accept now-legal modifier combinations)", "-//\t\trunConformTest(", "+\t\trunConformTest(", "+\t\tnew String[] {", "+\t\t\t\"I.java\",", "+\t\t\t\"import java.lang.annotation.*;\\n\" +", "+\t\t\t\"@Target(ElementType.METHOD) @interface Annot{}\\n\" +", "+\t\t\t\"public interface I {\\n\" +", "+\t\t\t\"    default void foo1()  {}\\n\" +", "+\t\t\t\"    public default void foo2() { System.exit(0); }\\n\" +", "+\t\t\t\"    strictfp default void foo3() {}\\n\" +", "+\t\t\t\"    public default strictfp void foo4() {}\\n\" +", "+\t\t\t\"    public default strictfp @Annot void foo5() {}\\n\" +", "+\t\t\t\"}\\n\",", "+\t\t}, ", "+\t\t\"\");", "+\t}", "-\t\t\t\"}\\n\" +", "-\t\t\t\"public class Wrong{}\\n\"}, // TODO remove me", "-\t\t// TODO remove me:", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in I.java (at line 10)\\n\" +", "-\t\t\"\tpublic class Wrong{}\\n\" +", "-\t\t\"\t             ^^^^^\\n\" +", "-\t\t\"The public type Wrong must be defined in its own file\\n\" +", "-\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e516a41fe8fa68a607ee24a43fea85a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "201ba59ace2baee85bcbe7b4acc1d8d62fbfbdee", "commitAfterChange": "2d16b0184def54fb667b6ba564589e7d65ee4ba3", "methodNumberBeforeChange": 1062, "methodNumberAfterChange": 1062, "signatureBeforeChange": " public void test1050()", "signatureAfterChange": " public void test1050()", "diff": ["-    \t\"Exception: java.lang.ClassCastException: [Ljava.lang.Object;\\n\" + ", "-    \t\"Exception: java.lang.ClassCastException: [Ljava.lang.Object;\";", "-\t", "-\tif (isJRELevel(AbstractCompilerTest.F_1_6)) {", "-\t\texpectedOutput =", "-\t\t\t\"xxx\\n\" + ", "-\t\t\t\"true\\n\" + ", "-\t\t\t\"Exception: java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.String;\\n\" + ", "-\t\t\t\"Exception: java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.String;\";", "-\t}", "+    \t\"ClassCastException: Object[] cannot be cast to String[]\\n\" + ", "+    \t\"ClassCastException: Object[] cannot be cast to String[]\";", "+", "-\t\t\t\"      System.out.println(\\\"Exception: \\\" + e);\\n\" + ", "+\t\t\t\"      System.out.println(\\\"ClassCastException: Object[] cannot be cast to String[]\\\");\\n\" + ", "-\t\t\t\"      System.out.println(\\\"Exception: \\\" + e);\\n\" + ", "+\t\t\t\"      System.out.println(\\\"ClassCastException: Object[] cannot be cast to String[]\\\");\\n\" + "]}], "num": 16974}