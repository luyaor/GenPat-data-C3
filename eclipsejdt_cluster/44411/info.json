{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd0fab5a9515cbc43bd2d2e0e76f0a55", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "290ae79fead6b5ae2df4cc5db4ece79d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "062668d56ec736d8048bddfbb9f460f0f1d04b11", "commitAfterChange": "3716c54055d7a4beea6cb3963f6df24a75c62bb6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": "\r \tprivate void locateMatches(JavaProject javaProject, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\tprivate void locateMatches(JavaProject javaProject) throws JavaModelException {\r", "+\tprivate void locateMatches(JavaProject javaProject, IProgressMonitor progressMonitor) throws JavaModelException {\r", "+\t\t\tif (progressMonitor != null) {\r", "+\t\t\t\tprogressMonitor.worked(1);\r", "+\t\t\t}\r", "-\t\t\tIProgressMonitor monitor = this.collector.getProgressMonitor();\r", "-\t\t\tif (monitor != null && monitor.isCanceled()) {\r", "+\t\t\tif (progressMonitor != null && progressMonitor.isCanceled()) {\r", "+\t\t\tif (progressMonitor != null) {\r", "+\t\t\t\tprogressMonitor.worked(1);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31b3c1aea50a4758246ab5c02b525755", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "e70a97840585a3ede400b971666912929897851b", "commitAfterChange": "f5104ea8b01f4418b9868445123db4c689077583", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private String[] determinePossibleSubTypes() throws JavaModelException, CoreException", "signatureAfterChange": " private String[] determinePossibleSubTypes(IProgressMonitor monitor) throws JavaModelException, CoreException", "diff": ["-private String[] determinePossibleSubTypes() throws JavaModelException, CoreException {", "+private String[] determinePossibleSubTypes(IProgressMonitor monitor) throws JavaModelException, CoreException {", "-\tsearchAllPossibleSubTypes(", "-\t\tproject.getWorkspace(),", "-\t\tthis.getType(),", "-\t\tthis.scope,", "-\t\tthis.binariesFromIndexMatches,", "-\t\tcollector,", "-\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,", "-\t\tthis.hierarchy.progressMonitor);", "+\ttry {", "+\t\tif (monitor != null) monitor.beginTask(\"\", 500/*500 layers max*/); //$NON-NLS-1$", "+\t\tsearchAllPossibleSubTypes(", "+\t\t\tproject.getWorkspace(),", "+\t\t\tthis.getType(),", "+\t\t\tthis.scope,", "+\t\t\tthis.binariesFromIndexMatches,", "+\t\t\tcollector,", "+\t\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,", "+\t\t\tmonitor);", "+\t} finally {", "+\t\tif (monitor != null) monitor.done();", "+\t}"]}], "num": 44411}