{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b2517e5028cd538adf2f5b6ef907bfc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bca0d04fbc2e15f1ef45e96b1a8a09c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "d17c1c02eb2b20688a76f6015ff09d7949422e6d", "commitAfterChange": "f64c1adf20a48e17e3db3128f467767b18371f7e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "signatureAfterChange": " void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "diff": ["-\t\t\t\tkeys[i] = resolvedType.isGenericType() ? createRawType(resolvedType, resolvedType.enclosingType()) : resolvedType; // hashCode is based on compoundName so this works", "+\t\t\t\tkeys[i] = resolvedType; // hashCode is based on compoundName so this works"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0efb610260836c466fe611b97352133", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "0eef8a719c726a9948e73db62c7f81adbce0f319", "commitAfterChange": "b54c3afd14262a683a389ccef497f8aa51da674c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding unannotatedType, LookupEnvironment environment)", "signatureAfterChange": "  public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding unannotatedType, LookupEnvironment environment)", "diff": ["-\tReferenceBinding annotatedType = (ReferenceBinding) unannotatedType.clone(this.enclosingType != null ? this.enclosingType : unannotatedType.enclosingType());", "-\t", "+\tReferenceBinding annotatedType = (ReferenceBinding) unannotatedType.clone(null);"]}], "num": 61667}