{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1c1576af9bafa3009176c8a140e11f5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2b2ea296f4411a55f8455726c001cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\tif (!method.isConstructor())", "-\t\tmethod.returnType = resolveType(method.returnType, this.environment, null, 0);", "-\tfor (int i = method.parameters.length; --i >= 0;)", "-\t\tmethod.parameters[i] = resolveType(method.parameters[i], this.environment, null, 0);", "-\tfor (int i = method.thrownExceptions.length; --i >= 0;)", "-\t\tmethod.thrownExceptions[i] = resolveType(method.thrownExceptions[i], this.environment, true);", "-\tfor (int i = method.typeVariables.length; --i >= 0;)", "+\tif (!method.isConstructor()) {", "+\t\tTypeBinding resolvedType = resolveType(method.returnType, this.environment, null, 0);", "+\t\tmethod.returnType = resolvedType;", "+\t\tif ((resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t}\t\t", "+\t}", "+\tfor (int i = method.parameters.length; --i >= 0;) {", "+\t\tTypeBinding resolvedType = resolveType(method.parameters[i], this.environment, null, 0);", "+\t\tmethod.parameters[i] = resolvedType;", "+\t\tif ((resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t}\t\t", "+\t}", "+\tfor (int i = method.thrownExceptions.length; --i >= 0;) {", "+\t\tReferenceBinding resolvedType = resolveType(method.thrownExceptions[i], this.environment, true);", "+\t\tmethod.thrownExceptions[i] = resolvedType;", "+\t\tif ((resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\tmethod.tagBits |= TagBits.HasMissingType;", "+\t\t}", "+\t}", "+\tfor (int i = method.typeVariables.length; --i >= 0;) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0e0cd1024c39571fa9b291ffe38d4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "956a341abd84ce28164a89cf8bdcf3dbf5c1de1d", "commitAfterChange": "1b5183f43287bbae2a451263467db64937621362", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void cannotDeclareLocalAnnotation(char[] typeName, int sourceStart, int sourceEnd)", "signatureAfterChange": " public void illegalLocalTypeDeclaration(TypeDeclaration typeDeclaration)", "diff": ["-public void cannotDeclareLocalAnnotation(char[] typeName, int sourceStart, int sourceEnd) {", "-\tString[] arguments = new String[] {new String(typeName)};", "-\tthis.handle(", "-\t\tIProblem.CannotDefineAnnotationInLocalType,", "-\t\targuments,", "-\t\targuments,", "-\t\tsourceStart,", "-\t\tsourceEnd);", "-}", "+public void illegalLocalTypeDeclaration(TypeDeclaration typeDeclaration) {", "+\tint problemID = 0;", "+\tif ((typeDeclaration.modifiers & IConstants.AccEnum) != 0) {", "+\t\tproblemID = IProblem.CannotDefineEnumInLocalType;", "+\t} else if ((typeDeclaration.modifiers & IConstants.AccAnnotation) != 0) {", "+\t\tproblemID = IProblem.CannotDefineAnnotationInLocalType;\t\t", "+\t} else if ((typeDeclaration.modifiers & IConstants.AccInterface) != 0) {", "+\t\tproblemID = IProblem.CannotDefineInterfaceInLocalType;\t\t", "+\t}", "+\tif (problemID != 0) {", "+\t\tString[] arguments = new String[] {new String(typeDeclaration.name)};", "+\t\tthis.handle(", "+\t\t\tproblemID,", "+\t\t\targuments,", "+\t\t\targuments,", "+\t\t\ttypeDeclaration.sourceStart,", "+\t\t\ttypeDeclaration.sourceEnd);", "+\t}", "+}"]}], "num": 64644}