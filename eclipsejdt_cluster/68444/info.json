{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1fb8bf10122b82054f6b17dad2f533f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d0f78fd46c88009da1337bbbde9ac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "89d67345e9cc0e1f7b41a5c3ebe790ece5a2e718", "commitAfterChange": "4188bcd12cf75d1e13b09a6ac22e1c9dad829ea6", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic static String[] getProblemArgumentsFromMarker(String argumentsString)", "signatureAfterChange": " \tpublic static String[] getProblemArgumentsFromMarker(String argumentsString)", "diff": ["-\t\tif (argumentsString == null) return null;", "+\t\tif (argumentsString == null) {", "+\t\t\treturn null;", "+\t\t}", "-\t\tint numberOfArg;", "+\t\tint numberOfArg = 0;", "-\t\tString[] args = new String[length];", "-\t\tint count = 0;", "+\t\treturn decodeArgumentString(numberOfArg, argumentsString);", "+\t}", "-\t\tStringTokenizer tokenizer = new StringTokenizer(argumentsString, ARGUMENTS_DELIMITER);", "-\t\twhile(tokenizer.hasMoreTokens()) {", "-\t\t\tString argument = tokenizer.nextToken();", "-\t\t\tif(argument.equals(EMPTY_ARGUMENT))", "-\t\t\t\targument = \"\";  //$NON-NLS-1$", "-\t\t\targs[count++] = argument;", "-", "-\t\tif(count != numberOfArg)", "-", "-\t\tSystem.arraycopy(args, 0, args = new String[count], 0, count);", "-\t\treturn args;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa7c717038cbbf6a9c4e1559f9356d0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexedFile.java", "commitBeforeChange": "741bf55b52d5676bf4be39f83254215d83172c64", "commitAfterChange": "4829608740e6817504fd33b0b1b3896be537e268", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic IndexedFile(String pathOrInfo, int fileNum)", "signatureAfterChange": "  \tpublic IndexedFile(String path, int fileNum)", "diff": ["-\tpublic IndexedFile(String pathOrInfo, int fileNum) {", "+\tpublic IndexedFile(String path, int fileNum) {", "-\t\tthis.properties= null; // initialized when needed", "-\t\tint dp= pathOrInfo.indexOf(INFO_BEGIN);", "-\t\tif (dp == -1)", "-\t\t\tpath= pathOrInfo;", "-\t\telse {", "-\t\t\tString fileInfo= pathOrInfo;", "-\t\t\tpath= fileInfo.substring(0, dp);", "-\t\t\tString props= fileInfo.substring(dp, fileInfo.length());", "-\t\t\tStringTokenizer t= new StringTokenizer(props.substring(1, props.length() - 1), INFO_SEPARATOR);", "-\t\t\twhile (t.hasMoreTokens()) {", "-\t\t\t\tString g= t.nextToken();", "-\t\t\t\ttry {", "-\t\t\t\t\tint dpt= g.indexOf(INFO_VALUE_SEPARATOR);", "-\t\t\t\t\tsetProperty(g.substring(0, dpt), g.substring(dpt + 1, g.length()));", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tthis.path= path;"]}], "num": 68444}