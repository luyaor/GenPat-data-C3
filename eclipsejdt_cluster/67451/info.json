{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5da988a78fefa0a4179a43ec3893149f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b55c1e3b79ae96d6930bc9fabf3fa89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "01c11d7498557f537e73365a011b0f36c3c6575b", "commitAfterChange": "2666eee956980f2655424a1604d51eef18f1e8ca", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["+\t\t\t", "+", "+\t\t\ttraversedContext.recordReturnFrom(flowInfo.unconditionalInits());", "+\t\t\tif (traversedContext.associatedNode instanceof TryStatement){", "+\t\t\t\tflowInfo = flowInfo.copy().addInitializationsFrom(((TryStatement) traversedContext.associatedNode).subRoutineInits);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78aab0a7772dd8e5a8a9be10e7a8cd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "01c11d7498557f537e73365a011b0f36c3c6575b", "commitAfterChange": "2666eee956980f2655424a1604d51eef18f1e8ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["+\t\t\t\t", "+\t\t\ttraversedContext.recordReturnFrom(flowInfo.unconditionalInits());", "+\t\t\tif (traversedContext.associatedNode instanceof TryStatement){", "+\t\t\t\tflowInfo = flowInfo.copy().addInitializationsFrom(((TryStatement) traversedContext.associatedNode).subRoutineInits);", "+\t\t\t}"]}], "num": 67451}