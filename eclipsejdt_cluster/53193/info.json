{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab814b31d0b0c57ec306438da6febf27", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e924da90d9a650daa21c80bc08712df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "175caf4c91bc68c67c64b6e69e5b88fec75be023", "commitAfterChange": "2a90eeb9372f2a1a1f5e7c24d7c19363b361caf2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public MethodBinding inferConstructorOfElidedParameterizedType(ParameterizedTypeBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTyps, final Scope scope)", "signatureAfterChange": "  public MethodBinding inferConstructorOfElidedParameterizedType(final Scope scope)", "diff": ["-public MethodBinding inferConstructorOfElidedParameterizedType(ParameterizedTypeBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTyps, final Scope scope) {", "+public MethodBinding inferConstructorOfElidedParameterizedType(final Scope scope) {", "+\t", "+\tReferenceBinding genericType = ((ParameterizedTypeBinding) this.resolvedType).genericType();", "+\tReferenceBinding enclosingType = this.resolvedType.enclosingType();", "+\tParameterizedTypeBinding allocationType = scope.environment().createParameterizedType(genericType, genericType.typeVariables(), enclosingType);", "+\t", "-\tMethodBinding factory = scope.getStaticFactory(allocationType, enclosingType, argumentTyps, this);", "+\tMethodBinding factory = scope.getStaticFactory(allocationType, enclosingType, this.argumentTypes, this);", "+\t\tParameterizedGenericMethodBinding genericFactory = (ParameterizedGenericMethodBinding) factory;", "+\t\tthis.inferredReturnType = genericFactory.inferredReturnType;", "-\t\t\treturn ParameterizedGenericMethodBinding.computeCompatibleMethod18(constructor.shallowOriginal(), argumentTyps, scope, this);", "+\t\t\treturn ParameterizedGenericMethodBinding.computeCompatibleMethod18(constructor.shallowOriginal(), this.argumentTypes, scope, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d387b833aceda826a7775e112c517b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "175caf4c91bc68c67c64b6e69e5b88fec75be023", "commitAfterChange": "2a90eeb9372f2a1a1f5e7c24d7c19363b361caf2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding[] inferElidedTypes(ParameterizedTypeBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTyps, final Scope scope)", "signatureAfterChange": "  public TypeBinding[] inferElidedTypes(final Scope scope)", "diff": ["-public TypeBinding[] inferElidedTypes(ParameterizedTypeBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTyps, final Scope scope) {", "+public TypeBinding[] inferElidedTypes(final Scope scope) {", "+\t", "+\tReferenceBinding genericType = ((ParameterizedTypeBinding) this.resolvedType).genericType();", "+\tReferenceBinding enclosingType = this.resolvedType.enclosingType();", "+\tParameterizedTypeBinding allocationType = scope.environment().createParameterizedType(genericType, genericType.typeVariables(), enclosingType);", "+\t", "-\t */   ", "-\tMethodBinding factory = scope.getStaticFactory(allocationType, enclosingType, argumentTyps, this);", "+\t*/", "+\tMethodBinding factory = scope.getStaticFactory(allocationType, enclosingType, this.argumentTypes, this);"]}], "num": 53193}