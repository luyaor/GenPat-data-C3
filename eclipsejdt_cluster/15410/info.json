{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6f155164938be86d220ade414094044", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70281a0b36657fd2e1cbca2d78175b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "9c0097e084b2c48ccca0e818ba9c1c1a50818167", "commitAfterChange": "ed04e9efb45ff73e01fac12a6ae0aba550054536", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " protected StringBuffer print(StringBuffer output)", "diff": ["-public String toString(){", "-\tStringBuffer buffer = new StringBuffer(20);", "-\tbuffer.append(", "+protected StringBuffer print(StringBuffer output) {", "+\toutput.append(", "-\t\tbuffer.append(superSimpleName);", "+\t\toutput.append(superSimpleName);", "-\t\tbuffer.append(\"*\"); //$NON-NLS-1$", "-\tbuffer.append(\">, \"); //$NON-NLS-1$", "-\tswitch(getMatchMode()) {", "-\t\tcase R_EXACT_MATCH : ", "-\t\t\tbuffer.append(\"exact match, \"); //$NON-NLS-1$", "-\t\t\tbreak;", "-\t\tcase R_PREFIX_MATCH :", "-\t\t\tbuffer.append(\"prefix match, \"); //$NON-NLS-1$", "-\t\t\tbreak;", "-\t\tcase R_PATTERN_MATCH :", "-\t\t\tbuffer.append(\"pattern match, \"); //$NON-NLS-1$", "-\t\t\tbreak;", "-\t}", "-\tif (isCaseSensitive())", "-\t\tbuffer.append(\"case sensitive\"); //$NON-NLS-1$", "-\telse", "-\t\tbuffer.append(\"case insensitive\"); //$NON-NLS-1$", "-\treturn buffer.toString();", "+\t\toutput.append(\"*\"); //$NON-NLS-1$", "+\toutput.append(\">\"); //$NON-NLS-1$", "+\treturn super.print(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ebdb3cb9a8735e4a5b895332f64df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "4070a80ec708f74aed77de9c7062557e3db209e8", "commitAfterChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tStringBuffer buffer = new StringBuffer();", "-\tbuffer.append(outermostEnclosingType().computeUniqueKey(isLeaf));", "-\t", "-\t// innsert $sourceStart", "-\tint semicolon = buffer.lastIndexOf(\";\"); //$NON-NLS-1$", "-\tbuffer.insert(semicolon, '$');", "-\tsemicolon = buffer.lastIndexOf(\";\"); //$NON-NLS-1$", "-\tbuffer.insert(semicolon, this.sourceStart);", "-\tint length = buffer.length();", "-\tchar[] uniqueKey = new char[length];", "-\tbuffer.getChars(0, length, uniqueKey, 0);", "-\treturn uniqueKey;", "+\tchar[] outerKey = outermostEnclosingType().computeUniqueKey(isLeaf);", "+\tint semicolon = CharOperation.lastIndexOf(';', outerKey);", "+", "+\t// insert $sourceStart", "+\treturn CharOperation.concat(", "+\t\tCharOperation.concat(", "+\t\t\tCharOperation.subarray(outerKey, 0, semicolon),", "+\t\t\tString.valueOf(", "+\t\t\tthis.sourceStart).toCharArray(),", "+\t\t\t'$'),", "+\t\tCharOperation.subarray(outerKey, semicolon, outerKey.length));"]}], "num": 15410}