{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1164f540bce6fb9a5fb128fef96bfec5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6231a394fbe13d5707e52399e6fc3bb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tExpression expression = parseExpression(source.toCharArray(), this.options);", "+\t\tExpression expression = CodeSnippetParsingUtil.parseExpression(source.toCharArray(), this.options);", "-\t\tConstructorDeclaration constructorDeclaration = parseStatements(source.toCharArray(), this.options);", "+\t\tConstructorDeclaration constructorDeclaration = CodeSnippetParsingUtil.parseStatements(source.toCharArray(), this.options);", "-\t\tASTNode[] bodyDeclarations = parseClassBodyDeclarations(source.toCharArray(), this.options);", "+\t\tASTNode[] bodyDeclarations = CodeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), this.options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa276a58a4004055db72d57928e7972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/MethodInfo.java", "commitBeforeChange": "983dc1544046316781836eb9dd37d3b1722ca24c", "commitAfterChange": "24ddb13fa55439ee887ccd883eea3b4cf5fd42fb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private void readModifierRelatedAttributes()", "signatureAfterChange": " private void readModifierRelatedAttributes()", "diff": ["-\t\t\t\t\tif (CharOperation.equals(attributeName, DeprecatedName))", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.DeprecatedName))", "-\t\t\t\t\tif (CharOperation.equals(attributeName, SyntheticName))", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.SyntheticName))", "-\t\t\t\t\tif (CharOperation.equals(attributeName, AnnotationDefaultName))", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AttributeNamesConstants.AnnotationDefaultName))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1daa23c0962c47281ff14123a2b1d29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "ecc7144cc9e86bed808e10ad4935bef0a2b31920", "commitAfterChange": "b92415dcd9dbdd80683f8bce8eb6ab82a2c55614", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["-\t\t\t\t\t\t\t: CharOperation.concat(ONE_STAR, typeSignature.substring(0, lastDot).toCharArray());", "+\t\t\t\t\t\t\t: CharOperation.concat(IIndexConstants.ONE_STAR, typeSignature.substring(0, lastDot).toCharArray());", "-\t\t\t\t\t\t\t: CharOperation.concat(ONE_STAR, returnType.substring(0, lastDot).toCharArray());", "+\t\t\t\t\t\t\t: CharOperation.concat(IIndexConstants.ONE_STAR, returnType.substring(0, lastDot).toCharArray());", "-\t\t\t\t\t\t\t: CharOperation.concat(ONE_STAR, signature.substring(0, lastDot).toCharArray());", "+\t\t\t\t\t\t\t: CharOperation.concat(IIndexConstants.ONE_STAR, signature.substring(0, lastDot).toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0abb23d5226b89372eb2c77f5d76e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "signatureAfterChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "diff": ["-\t\t\treturn NotAConstant;", "+\t\t\treturn Constant.NotAConstant;", "-\t\tif (caseType == null || switchExpressionType == null) return NotAConstant;", "+\t\tif (caseType == null || switchExpressionType == null) return Constant.NotAConstant;", "-\t\treturn NotAConstant;", "+\t\treturn Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4eb0b48dc71ee2489d260b2cb9556a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tthis.returnAddressVariable.setConstant(NotAConstant); // not inlinable", "+\t\t\t\t\tthis.returnAddressVariable.setConstant(Constant.NotAConstant); // not inlinable", "-\t\t\t\tthis.anyExceptionVariable.setConstant(NotAConstant); // not inlinable", "+\t\t\t\tthis.anyExceptionVariable.setConstant(Constant.NotAConstant); // not inlinable", "-\t\t\t\t\t\t\tthis.secretReturnValue.setConstant(NotAConstant); // not inlinable", "+\t\t\t\t\t\t\tthis.secretReturnValue.setConstant(Constant.NotAConstant); // not inlinable"]}], "num": 67011}