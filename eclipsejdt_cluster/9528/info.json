{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ec73fc2a629bddeb165eac3a519317b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d68263341e2b3ac6ecbabdb508edc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "ae43a440915bd6d7962491f9c0ab4d02295e6d83", "commitAfterChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateReturnBytecode(CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateReturnBytecode(CodeStream codeStream)", "diff": ["-\t\tif (expression == null) {", "-\t\t\tcodeStream.return_();", "-\t\t} else {", "-\t\t\tfinal int implicitConversion = expression.implicitConversion;", "-\t\t\tif ((implicitConversion & BOXING) != 0) {", "-\t\t\t\tcodeStream.areturn();", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tint runtimeType = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4;", "-\t\t\tswitch (runtimeType) {", "-\t\t\t\tcase T_boolean :", "-\t\t\t\tcase T_int :", "-\t\t\t\t\tcodeStream.ireturn();", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase T_float :", "-\t\t\t\t\tcodeStream.freturn();", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase T_long :", "-\t\t\t\t\tcodeStream.lreturn();", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase T_double :", "-\t\t\t\t\tcodeStream.dreturn();", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault :", "-\t\t\t\t\tcodeStream.areturn();", "-\t\t\t}", "-\t\t}", "+\t\tcodeStream.generateReturnBytecode(this.expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece2cd4ac74678087893e73467260819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "6e6f51aebf98352a0ce0c363fefcb4659f1b5e8a", "commitAfterChange": "2a6dae5f036d3d2969c0b8ba36abf75c33e3e841", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding accessBinding)", "diff": ["-\tif ((type = fieldBinding.type).isBaseType()) {", "-\t\tif (type == IntBinding)", "+\tswitch (fieldBinding.type.id) {", "+//\t\tcase T_void :", "+//\t\t\tthis.return_();", "+//\t\t\tbreak;", "+\t\tcase T_boolean :", "+\t\tcase T_byte :", "+\t\tcase T_char :", "+\t\tcase T_short :", "+\t\tcase T_int :", "-\t\telse", "-\t\t\tif (type == FloatBinding)", "-\t\t\t\tthis.freturn();", "-\t\t\telse", "-\t\t\t\tif (type == LongBinding)", "-\t\t\t\t\tthis.lreturn();", "-\t\t\t\telse", "-\t\t\t\t\tif (type == DoubleBinding)", "-\t\t\t\t\t\tthis.dreturn();", "-\t\t\t\t\telse", "-\t\t\t\t\t\tthis.ireturn();", "-\t} else", "-\t\tthis.areturn();", "+\t\t\tbreak;", "+\t\tcase T_long :", "+\t\t\tthis.lreturn();", "+\t\t\tbreak;", "+\t\tcase T_float :", "+\t\t\tthis.freturn();", "+\t\t\tbreak;", "+\t\tcase T_double :", "+\t\t\tthis.dreturn();", "+\t\t\tbreak;", "+\t\tdefault :", "+\t\t\tthis.areturn();", "+\t}\t"]}], "num": 9528}