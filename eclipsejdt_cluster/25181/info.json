{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71605165067a00293be1fce984984fa1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6a0e54b4566e7fd16388e18f66b6ff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/CompilationUnit.java", "commitBeforeChange": "49709bf8c2e28ee09c1495f3c38bd0f03955bc27", "commitAfterChange": "a1768f443093f3441269907bc7cfbf61433d342b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public CompilationUnit(char[] contents, String fileName, String encoding)", "signatureAfterChange": " \t public CompilationUnit(char[] contents, String fileName, String encoding)", "diff": ["-\tif (File.separator.equals(\"/\")) { //$NON-NLS-1$", "-\t\tif (fileName.indexOf(\"\\\\\") != -1) { //$NON-NLS-1$", "-\t\t\tfileName = fileName.replace('\\\\', File.separatorChar);", "-\t\t}", "-\t} else {", "-\t\t// the file separator is \\", "-\t\tif (fileName.indexOf('/') != -1) {", "-\t\t\tfileName = fileName.replace('/', File.separatorChar);", "-\t\t}", "+\tchar[] fileNameCharArray = fileName.toCharArray();", "+\tswitch(File.separatorChar) {", "+\t\tcase '/' :", "+\t\t\tif (CharOperation.indexOf('\\\\', fileNameCharArray) != -1) {", "+\t\t\t\tCharOperation.replace(fileNameCharArray, '\\\\', '/');", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase '\\\\' :", "+\t\t\tif (CharOperation.indexOf('/', fileNameCharArray) != -1) {", "+\t\t\t\tCharOperation.replace(fileNameCharArray, '/', '\\\\');", "+\t\t\t}", "-\tthis.fileName = fileName.toCharArray();", "+\tthis.fileName = fileNameCharArray;", "+\tint start = CharOperation.lastIndexOf(File.separatorChar, fileNameCharArray) + 1; ", "-\tint start = fileName.lastIndexOf(\"/\") + 1; //$NON-NLS-1$", "-\tif (start == 0 || start < fileName.lastIndexOf(\"\\\\\")) //$NON-NLS-1$", "-\t\tstart = fileName.lastIndexOf(\"\\\\\") + 1; //$NON-NLS-1$", "+\tint end = CharOperation.lastIndexOf('.', fileNameCharArray);", "+\tif (end == -1) {", "+\t\tend = fileNameCharArray.length;", "+\t}", "-\tint end = fileName.lastIndexOf(\".\"); //$NON-NLS-1$", "-\tif (end == -1)", "-\t\tend = fileName.length();", "-", "-\tthis.mainTypeName = fileName.substring(start, end).toCharArray();", "+\tthis.mainTypeName = CharOperation.subarray(fileNameCharArray, start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b70b61d7fd791f567efc77d89c358887", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "49709bf8c2e28ee09c1495f3c38bd0f03955bc27", "commitAfterChange": "a1768f443093f3441269907bc7cfbf61433d342b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void initializeKnownFileNames(String[] initialFileNames)", "signatureAfterChange": " private void initializeKnownFileNames(String[] initialFileNames)", "diff": ["-\tthis.knownFileNames = new String[initialFileNames.length];", "+\tthis.knownFileNames = new HashSet(initialFileNames.length * 2);", "-\t\tString fileName = initialFileNames[i];", "-\t\tString matchingPathName = null;", "-\t\tif (fileName.lastIndexOf(\".\") != -1) //$NON-NLS-1$", "-\t\t\tfileName = fileName.substring(0, fileName.lastIndexOf('.')); // remove trailing \".java\"", "-", "-\t\tfileName = convertPathSeparators(fileName);", "+\t\tchar[] fileName = initialFileNames[i].toCharArray();", "+\t\tchar[] matchingPathName = null;", "+\t\tfinal int lastIndexOf = CharOperation.lastIndexOf('.', fileName);", "+\t\tif (lastIndexOf != -1) {", "+\t\t\tfileName = CharOperation.subarray(fileName, 0, lastIndexOf);", "+\t\t}", "+\t\tCharOperation.replace(fileName, '\\\\', '/');", "-\t\t\tString matchCandidate = this.classpaths[j].normalizedPath();", "+\t\t\tchar[] matchCandidate = this.classpaths[j].normalizedPath();", "-\t\t\t\t\tfileName.startsWith(matchCandidate) && ", "-\t\t\t\t\t(matchingPathName == null || ", "-\t\t\t\t\t\t\tmatchCandidate.length() < matchingPathName.length()))", "+\t\t\t\t\tCharOperation.prefixEquals(matchCandidate, fileName) && ", "+\t\t\t\t\t(matchingPathName == null ||", "+\t\t\t\t\t\t\tmatchCandidate.length < matchingPathName.length))", "-\t\tif (matchingPathName == null)", "-\t\t\tthis.knownFileNames[i] = fileName; // leave as is...", "-\t\telse", "-\t\t\tthis.knownFileNames[i] = fileName.substring(matchingPathName.length());", "+\t\tif (matchingPathName == null) {", "+\t\t\tthis.knownFileNames.add(new String(fileName)); // leave as is...", "+\t\t} else {", "+\t\t\tthis.knownFileNames.add(new String(CharOperation.subarray(fileName, matchingPathName.length, fileName.length)));", "+\t\t}"]}], "num": 25181}