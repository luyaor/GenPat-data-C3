{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83a8756d2499f1ad56504c8560b69e58", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f473181ea2bd8e38eff404db57090be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "581702d71a138ac97fe73cfd2b06cc855f39a496", "commitAfterChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement[] getChildren() throws JavaModelException", "signatureAfterChange": " public IJavaElement[] getChildren() throws JavaModelException", "diff": ["-\treturn cfi.getBinaryChildren();", "+\tif (cfi.binaryChildren == null) {", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tboolean hadTemporaryCache = manager.hasTemporaryCache();", "+\t\ttry {", "+\t\t\tObject info = manager.getInfo(this);", "+\t\t\tHashMap newElements = manager.getTemporaryCache();", "+\t\t\tcfi.readBinaryChildren(newElements, (IBinaryType)info);", "+\t\t\tif (!hadTemporaryCache) {", "+\t\t\t\tmanager.putInfos(this, newElements);", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tif (!hadTemporaryCache) {", "+\t\t\t\tmanager.resetTemporaryCache();", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn cfi.binaryChildren;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa36b52cf66d01e7efa784c70722d44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/ResourceChangedListener.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \t \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t", "-\t\tif ( event.getType() == IResourceChangeEvent.POST_CHANGE )", "+\t\tif ( event.getType() == IResourceChangeEvent.PRE_BUILD )", "-\t\t\t{", "-\t\t\t\tevent.getDelta().accept( new Visitor() );", "+\t\t\t{ ", "+\t\t\t\tevent.getDelta().accept( new PreBuildVisitor() );", "+\t\telse if ( event.getType() == IResourceChangeEvent.PRE_CLOSE )", "+\t\t{", "+\t\t\tIProject p = (IProject)event.getResource();", "+\t\t\tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( p );", "+\t\t\tgfm.projectClosed();", "+\t\t}", "+\t\telse if ( event.getType() == IResourceChangeEvent.PRE_DELETE )", "+\t\t{", "+\t\t\t// TODO:  need to update projectDeleted() to delete the generated_src folder", "+\t\t\t// in an async thread.  The resource tree is locked here.", "+\t\t\tIProject p = (IProject)event.getResource();", "+\t\t\tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( p );", "+\t\t\tgfm.projectDeleted();", "+\t\t}"]}], "num": 19691}