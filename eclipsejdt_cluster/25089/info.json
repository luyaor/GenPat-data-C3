{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fc56a2964ce534d2833c12b625aa35b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059ebb403fa623bcc311a794b65b8325", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "3b13a694f0c24345235e66b7f3469dc6379ac475", "commitAfterChange": "4c1b22412761c802ce5c0da8c2ddd0883711c6e0", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void parseTags(boolean hasLineComment)", "signatureAfterChange": "  protected void parseTags(boolean hasLineComment)", "diff": ["-\t\t\tif (this.unnecessaryNONNLSTags == null) this.unnecessaryNONNLSTags = new HashSet();", "+\t\t\tif (this.unnecessaryNLSTags == null) this.unnecessaryNLSTags = new HashSet();", "-\t\t\t\t\t\tif (!this.unnecessaryNONNLSTags.add(tag)) {", "-\t\t\t\t\t\t\tthis.unnecessaryNONNLSTags.remove(tag);", "-\t\t\t\t\t\t\tthis.unnecessaryNONNLSTags.add(tag);", "+\t\t\t\t\t\tif (!this.unnecessaryNLSTags.add(tag)) {", "+\t\t\t\t\t\t\tthis.unnecessaryNLSTags.remove(tag);", "+\t\t\t\t\t\t\tthis.unnecessaryNLSTags.add(tag);", "-\t\t\t\t\t\tthis.unnecessaryNONNLSTags.add(new NLSTag(pos + this.getCurrentTokenStartPosition(), this.getCurrentTokenStartPosition() + end));", "+\t\t\t\t\t\tthis.unnecessaryNLSTags.add(new NLSTag(pos + this.getCurrentTokenStartPosition(), this.getCurrentTokenStartPosition() + end));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8516dbf45848f2b31aac3a128095ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "133cc95d2c9a207d26745353de164861603fb753", "commitAfterChange": "7a78fb676bbe308e1a83016a002ccaabe9c6d716", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void parseTags(boolean hasLineComment)", "signatureAfterChange": "  protected void parseTags(boolean hasLineComment)", "diff": ["-\t\t\t\t\t\tline.set(i, null);", "-\t\t\t\t\t\tfinal NLSTag tag = new NLSTag(pos + this.getCurrentTokenStartPosition(), this.getCurrentTokenStartPosition() + end, NLSTag.USED);", "-\t\t\t\t\t\tif (!this.unnecessaryNLSTags.add(tag)) {", "-\t\t\t\t\t\t\tthis.unnecessaryNLSTags.remove(tag);", "-\t\t\t\t\t\t\tthis.unnecessaryNLSTags.add(tag);", "+\t\t\t\t\t\tif (line.get(i) == null) {", "+\t\t\t\t\t\t\tthis.unnecessaryNLSTags.add(new NLSTag(pos + this.getCurrentTokenStartPosition(), this.getCurrentTokenStartPosition() + end));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline.set(i, null);", "+\t\t\t\t\t\t\tfinal NLSTag tag = new NLSTag(pos + this.getCurrentTokenStartPosition(), this.getCurrentTokenStartPosition() + end, NLSTag.USED);", "+\t\t\t\t\t\t\tif (!this.unnecessaryNLSTags.add(tag)) {", "+\t\t\t\t\t\t\t\tthis.unnecessaryNLSTags.remove(tag);", "+\t\t\t\t\t\t\t\tthis.unnecessaryNLSTags.add(tag);", "+\t\t\t\t\t\t\t}"]}], "num": 25089}