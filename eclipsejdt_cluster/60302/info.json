{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c49ba0fe921747890b4b0ba6ef8e4e8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1584a29e890c2b18b8b0a50bd4329950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "9ae1051ee3a5e378bfb16bbfa50647f96766ccd2", "commitAfterChange": "c1ee0177e02cf7e5cb743e1bcf1bb35eda7a3582", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void markAsDefinitelyNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNull(LocalVariableBinding local)", "diff": ["-    \t\tint vectorIndex ;", "-    \t\tthis.extra[2][vectorIndex = (position / BitCacheSize) - 1]", "+    \t\tint vectorIndex = (position / BitCacheSize) - 1;", "+    \t\tif (this.extra == null) {", "+    \t\t\tint length = vectorIndex + 1;", "+    \t\t\tthis.extra = new long[extraLength][];", "+    \t\t\tfor (int j = 0; j < extraLength; j++) {", "+    \t\t\t\tthis.extra[j] = new long[length];", "+    \t\t\t}", "+    \t\t}", "+    \t\telse {", "+    \t\t\tint oldLength; // might need to grow the arrays", "+    \t\t\tif (vectorIndex >= (oldLength = this.extra[0].length)) {", "+    \t\t\t\tfor (int j = 0; j < extraLength; j++) {", "+    \t\t\t\t\tSystem.arraycopy(this.extra[j], 0,", "+    \t\t\t\t\t\t(this.extra[j] = new long[vectorIndex + 1]), 0,", "+    \t\t\t\t\t\toldLength);", "+    \t\t\t\t}", "+    \t\t\t}", "+    \t\t}", "+    \t\tthis.extra[2][vectorIndex]"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71fa591995e67325ec45d40b359e3fed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "9ae1051ee3a5e378bfb16bbfa50647f96766ccd2", "commitAfterChange": "c1ee0177e02cf7e5cb743e1bcf1bb35eda7a3582", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void markAsDefinitelyUnknown(LocalVariableBinding local)", "signatureAfterChange": " public void markAsDefinitelyUnknown(LocalVariableBinding local)", "diff": ["-\t\t\tint vectorIndex ;", "-\t\t\tthis.extra[2][vectorIndex = (position / BitCacheSize) - 1]", "+\t\t\tint vectorIndex = (position / BitCacheSize) - 1;", "+\t\t\tif (this.extra == null) {", "+\t\t\t\tint length = vectorIndex + 1;", "+\t\t\t\tthis.extra = new long[extraLength][];", "+\t\t\t\tfor (int j = 0; j < extraLength; j++) {", "+\t\t\t\t\tthis.extra[j] = new long[length];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tint oldLength; // might need to grow the arrays", "+\t\t\t\tif (vectorIndex >= (oldLength = this.extra[0].length)) {", "+\t\t\t\t\tfor (int j = 0; j < extraLength; j++) {", "+\t\t\t\t\t\tSystem.arraycopy(this.extra[j], 0,", "+\t\t\t\t\t\t\t(this.extra[j] = new long[vectorIndex + 1]), 0,", "+\t\t\t\t\t\t\toldLength);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.extra[2][vectorIndex]"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cddc6b8259d8375dce7e02f194a45216", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "9ae1051ee3a5e378bfb16bbfa50647f96766ccd2", "commitAfterChange": "c1ee0177e02cf7e5cb743e1bcf1bb35eda7a3582", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "diff": ["-    \t\tint vectorIndex ;", "-    \t\tthis.extra[2][vectorIndex = (position / BitCacheSize) - 1]", "+    \t\tint vectorIndex = (position / BitCacheSize) - 1;", "+    \t\tif (this.extra == null) {", "+    \t\t\tint length = vectorIndex + 1;", "+    \t\t\tthis.extra = new long[extraLength][];", "+    \t\t\tfor (int j = 0; j < extraLength; j++) {", "+    \t\t\t\tthis.extra[j] = new long[length];", "+    \t\t\t}", "+    \t\t}", "+    \t\telse {", "+    \t\t\tint oldLength; // might need to grow the arrays", "+    \t\t\tif (vectorIndex >= (oldLength = this.extra[0].length)) {", "+    \t\t\t\tfor (int j = 0; j < extraLength; j++) {", "+    \t\t\t\t\tSystem.arraycopy(this.extra[j], 0,", "+    \t\t\t\t\t\t(this.extra[j] = new long[vectorIndex + 1]), 0,", "+    \t\t\t\t\t\toldLength);", "+    \t\t\t\t}", "+    \t\t\t}", "+    \t\t}", "+    \t\tthis.extra[2][vectorIndex]"]}], "num": 60302}