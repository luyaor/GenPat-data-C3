{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b307985a93889fff2a089fbb3e6db5a7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e6b194bec1930d0087086e32e6b676", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "8542678e2ceb736a9d19d031551da2cab5ea4a72", "commitAfterChange": "4ac6f89083748b9c4fc37b738ed82ea1a7c9c63b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": " private int findNonNullDefault(Scope currentScope, LookupEnvironment environment)", "signatureAfterChange": "  boolean hasNonNullDefault()", "diff": ["- */", "-private int findNonNullDefault(Scope currentScope, LookupEnvironment environment) {", "+boolean hasNonNullDefault() {", "+\tScope currentScope = this.scope;", "-\t\t\t\t\t\treturn NONNULL_BY_DEFAULT;", "+\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\treturn NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\treturn foundDefaultNullness;", "+\t\t\t\t\t\treturn foundDefaultNullness == NONNULL_BY_DEFAULT;", "-\t\tint foundDefaultNullness = currentType.getPackage().defaultNullness;", "-\t\tif (foundDefaultNullness != NO_NULL_DEFAULT) {", "-\t\t\treturn foundDefaultNullness;", "-\t\t}", "+\t\treturn currentType.getPackage().defaultNullness == NONNULL_BY_DEFAULT;", "-\treturn NO_NULL_DEFAULT;", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d04f32106235968e15055337401fb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a8ed5c9ce2b125913ea11ffa5f66b79c1153133a", "commitAfterChange": "aff037e4075d974a1198e8a25c9e7f07acc35fc1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": " private int findNonNullDefault(Scope currentScope, LookupEnvironment environment)", "signatureAfterChange": "  boolean hasNonNullDefault()", "diff": ["- */", "-private int findNonNullDefault(Scope currentScope, LookupEnvironment environment) {", "+boolean hasNonNullDefault() {", "+\tScope currentScope = this.scope;", "-\t\t\t\t\t\treturn NONNULL_BY_DEFAULT;", "+\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\treturn NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\treturn foundDefaultNullness;", "+\t\t\t\t\t\treturn foundDefaultNullness == NONNULL_BY_DEFAULT;", "-\t\tint foundDefaultNullness = currentType.getPackage().defaultNullness;", "-\t\tif (foundDefaultNullness != NO_NULL_DEFAULT) {", "-\t\t\treturn foundDefaultNullness;", "-\t\t}", "+\t\treturn currentType.getPackage().defaultNullness == NONNULL_BY_DEFAULT;", "-\treturn NO_NULL_DEFAULT;", "+\treturn false;"]}], "num": 54576}