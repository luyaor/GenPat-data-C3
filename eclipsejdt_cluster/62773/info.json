{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4afc3d9862bf5bbde374983e94d6197e", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "827338a2342323adf50a1ccaf26cd3ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "084468bbb4b6b4ced2d619a494bb2b10d317ac14", "commitAfterChange": "4f4c37f43e175a5ea8c8aa35d79cc22779b21e81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// infinite loop", "-\t\tFlowInfo mergedInfo;", "-\t\tif (isConditionOptimizedTrue) {", "-\t\t\tmergedInitStateIndex =", "-\t\t\t\tcurrentScope.methodScope().recordInitializationStates(", "-\t\t\t\t\tmergedInfo = loopingContext.initsOnBreak);", "-\t\t\treturn mergedInfo;", "-\t\t}", "-", "-\t\t// end of loop: either condition false or break", "-\t\tmergedInfo =", "-\t\t\tpostCondInfo.initsWhenFalse().unconditionalInits().mergedWith(", "-\t\t\t\tloopingContext.initsOnBreak);", "-\t\tif (isConditionOptimizedTrue && continueLabel == null){", "-\t\t\tmergedInfo.setReachMode(FlowInfo.UNREACHABLE);", "-\t\t}", "-\t\tmergedInitStateIndex =", "-\t\t\tcurrentScope.methodScope().recordInitializationStates(mergedInfo);", "+\t\t// end of loop", "+\t\tFlowInfo mergedInfo = FlowInfo.mergedOptimizedBranches(", "+\t\t\t\tloopingContext.initsOnBreak, ", "+\t\t\t\tisConditionOptimizedTrue, ", "+\t\t\t\tpostCondInfo.initsWhenFalse(), ", "+\t\t\t\tisConditionOptimizedFalse,", "+\t\t\t\t!isConditionTrue /*while(true); unreachable(); */);", "+\t\tmergedInitStateIndex = currentScope.methodScope().recordInitializationStates(mergedInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce0900daa519fcab96bf0b716956b5a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "084468bbb4b6b4ced2d619a494bb2b10d317ac14", "commitAfterChange": "4f4c37f43e175a5ea8c8aa35d79cc22779b21e81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// infinite loop", "-\t\tFlowInfo mergedInfo;", "-\t\tif (isConditionOptimizedTrue) {", "-\t\t\tmergedInitStateIndex =", "-\t\t\t\tcurrentScope.methodScope().recordInitializationStates(", "-\t\t\t\t\tmergedInfo = loopingContext.initsOnBreak);", "-\t\t\treturn mergedInfo;", "-\t\t}", "-", "-\t\t//end of loop: either condition false or break", "-\t\tmergedInfo =", "-\t\t\tflowInfo.initsWhenFalse().unconditionalInits().mergedWith(", "-\t\t\t\tloopingContext.initsOnBreak.unconditionalInits());", "-\t\tif (isConditionOptimizedTrue && continueLabel == null){", "-\t\t\tmergedInfo.setReachMode(FlowInfo.UNREACHABLE);", "-\t\t}", "-\t\tmergedInitStateIndex =", "-\t\t\tcurrentScope.methodScope().recordInitializationStates(mergedInfo);", "+\t\t//end of loop", "+\t\tFlowInfo mergedInfo = FlowInfo.mergedOptimizedBranches(", "+\t\t\t\tloopingContext.initsOnBreak, ", "+\t\t\t\tisConditionOptimizedTrue, ", "+\t\t\t\tflowInfo.initsWhenFalse(), ", "+\t\t\t\tisConditionOptimizedFalse, ", "+\t\t\t\t!isConditionTrue /*for(;;){}while(true); unreachable(); */);", "+\t\tmergedInitStateIndex = currentScope.methodScope().recordInitializationStates(mergedInfo);"]}], "num": 62773}