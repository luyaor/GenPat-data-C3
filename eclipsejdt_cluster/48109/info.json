{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea597fea1edb0c4ab6dd4df9954ab051", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f1a1561a7defbd140c558d6034be2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DoStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45431151559c4f57fba055e8ceb2255e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "508f0258ea14ff06072297f180ae3b63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CastExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b0a3a7d2c8ba012aefe7d629e1827c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a28bc34c6352fc09dce17988c262ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ThrowStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93cd9056d08f31393a0bec906414954c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SynchronizedStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a98e9034d90e3093a870b28fa950c8a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0da43e6fd15044a75849e220e440d4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParenthesizedExpression.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daea33d78d180d592bbc8e26aa6688c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WhileStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd08d1cbaba813263bf42df0a5c6077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SwitchStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new SimpleName(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new SimpleName(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e491cdaee38ee8ddbe8ce3880a244321", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ExpressionStatement.java", "commitBeforeChange": "b035b1323921b903fa7e63039a8059077cbebf20", "commitAfterChange": "f4baff4257d9b6f1bb97486c41210e6bbf680256", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getExpression()", "signatureAfterChange": "  \tpublic Expression getExpression()", "diff": ["-\t\t\tpreLazyInit();", "-\t\t\tthis.expression = new MethodInvocation(this.ast);", "-\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t// lazy init must be thread-safe for readers", "+\t\t\tsynchronized (this.ast) {", "+\t\t\t\tif (this.expression == null) {", "+\t\t\t\t\tpreLazyInit();", "+\t\t\t\t\tthis.expression = new MethodInvocation(this.ast);", "+\t\t\t\t\tpostLazyInit(this.expression, EXPRESSION_PROPERTY);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 48109}