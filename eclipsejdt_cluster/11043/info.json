{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0bb017f1361968c68c1232b8408f4f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7acbc3b77d34f4ff5b98e86140397038", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c85c2e18cb6aecbd610ab81ae49fd86c03219a94", "commitAfterChange": "fb1cdfed170508154ac69c6283fb498228204f0f", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": "\r protected boolean resumeAfterRecovery()", "signatureAfterChange": "\r protected boolean resumeAfterRecovery()", "diff": ["-\t\tnestedMethod[nestedType = 0] = 0;\r", "-\t\tvariablesCounter[nestedType] = 0;\r", "-\t\trealBlockStack[realBlockPtr = 0] = 0;\r", "-\t\tgoForHeaders();\r", "-\t\tdiet = true; // passed this point, will not consider method bodies\r", "+\t\t\r", "+\t\tif(inMethodStack[inMethodPtr] &&\r", "+\t\t\tinsideFieldInitializer() &&\r", "+\t\t\tthis.assistNode == null\r", "+\t\t\t){ \r", "+\t\t\tthis.prepareForBlockStatements();\r", "+\t\t\tgoForBlockStatementsOrMethodHeaders();\r", "+\t\t} else {\r", "+\t\t\tnestedMethod[nestedType = 0] = 0;\r", "+\t\t\tvariablesCounter[nestedType] = 0;\r", "+\t\t\trealBlockStack[realBlockPtr = 0] = 0;\r", "+\t\t\tgoForHeaders();\r", "+\t\t\tdiet = true; // passed this point, will not consider method bodies\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac275b44efcf414bc5a4e58a6a402d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected boolean resumeAfterRecovery()", "signatureAfterChange": " protected boolean resumeAfterRecovery()", "diff": ["-", "-\tinitInMethodAndInFieldInitializationStack(currentElement);", "+\t", "+//\tif(currentElement instanceof RecoveredMethod", "+//\t\t&& !isInsideMethod()) {", "+//\t\tpushOnElementStack(K_METHOD_DELIMITER);", "+//\t} else if(currentElement instanceof RecoveredField", "+//\t\t&& !isInsideFieldInitialization()) {", "+//\t\tpushOnElementStack(K_FIELD_INITIALIZER_DELIMITER);", "+//\t} if(currentElement instanceof RecoveredType", "+//\t\t&& !isInsideType()) {", "+//\t\tpushOnElementStack(K_TYPE_DELIMITER);", "+//\t}", "-\t\t", "-\t\tif(inMethodStack[inMethodPtr] &&", "-\t\t\tinsideFieldInitialization() &&", "+\t\tif(isInsideMethod() &&", "+\t\t\tisIndirectlyInsideFieldInitialization() &&\t\t", "-\t\t\tnestedMethod[nestedType = 0] = 0;", "-\t\t\tvariablesCounter[nestedType] = 0;", "-\t\t\trealBlockStack[realBlockPtr = 0] = 0;", "+\t\t\tthis.prepareForHeaders();", "-\t\t\tnestedMethod[nestedType = 0] = 0;", "-\t\t\tvariablesCounter[nestedType] = 0;", "-\t\t\trealBlockStack[realBlockPtr = 0] = 0;", "+\t\t\tthis.prepareForHeaders();"]}], "num": 11043}