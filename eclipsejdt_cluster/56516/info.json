{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "badebf1c526cda452bf2fe2db56057b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1154b36a010d7fee343648df7d2353", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "7186c730d487753734b0547672e890b50fededb4", "commitAfterChange": "7ceb7b86e5d2c6d0639c543a0b8998dc4ed1502e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tvoid addTypeBoundsFromWildcardBound(InferenceContext18 context, int boundKind, TypeBinding t, \t\t\tTypeBinding r, TypeBinding bi) throws InferenceFailureException", "signatureAfterChange": "  \tvoid addTypeBoundsFromWildcardBound(InferenceContext18 context, int boundKind, TypeBinding t, \t\t\tTypeBinding r, TypeBinding bi) throws InferenceFailureException", "diff": ["+\t\t\tif (t.id == TypeIds.T_JavaLangObject)", "+\t\t\t\tformula = new ConstraintTypeFormula(context.substitute(bi), r, ReductionResult.SUBTYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c520c8bebb4ef5f0c0b253649193aa5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "37e23395eca94b357556528d7f43f8ac9e56d6d6", "commitAfterChange": "c1fac297e2cd6cb2079814368c47a44a64ff5978", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public TypeBinding convertToRawType(TypeBinding type)", "signatureAfterChange": "  public TypeBinding convertToRawType(TypeBinding type)", "diff": ["+\t\t\tif (type.id == TypeIds.T_JavaLangObject) ", "+\t\t\t\treturn type; // Object is not generic", "-\t\tReferenceBinding originalGeneric = (ReferenceBinding) originalType.erasure();", "-\t\t\tconvertedType = createRawType(originalGeneric, convertedEnclosing);", "+\t\t\tconvertedType = createRawType((ReferenceBinding) originalType.erasure(), convertedEnclosing);", "-\t\t\tconvertedType = createParameterizedType(originalGeneric, null, convertedEnclosing);", "+\t\t\tconvertedType = createParameterizedType((ReferenceBinding) originalType.erasure(), null, convertedEnclosing);"]}], "num": 56516}