{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9e96c5d6a7d63fb3243518043b23d24", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fe161712e917d0fd91e87e20a4ba2ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 369, "methodNumberAfterChange": 416, "signatureBeforeChange": " public void testBug137087() throws CoreException", "signatureAfterChange": " public void testBug137087() throws CoreException", "diff": ["-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.RuntimeException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.RuntimeException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43743911afb9a8618d7af9bd16e82234", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 420, "signatureBeforeChange": " public void testBug137087e() throws CoreException", "signatureAfterChange": " public void testBug137087e() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.IllegalMonitorStateException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.IllegalMonitorStateException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710653b548d3e7db8a7554a9fd5b36f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 423, "signatureBeforeChange": " public void testBug137087h() throws CoreException", "signatureAfterChange": " public void testBug137087h() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79bb04c8a42183f1c345d1b45078882a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 426, "signatureBeforeChange": " public void testBug137087k() throws CoreException", "signatureAfterChange": " public void testBug137087k() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d1ba8da42c88a76da41726f11dace52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 427, "signatureBeforeChange": " public void testBug137087l() throws CoreException", "signatureAfterChange": " public void testBug137087l() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab846f447068b0a8ea5e0c866e7eeefd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 417, "signatureBeforeChange": " public void testBug137087b() throws CoreException", "signatureAfterChange": " public void testBug137087b() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.RuntimeException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.RuntimeException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2543cd060269b018cda6353a609d8af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 424, "signatureBeforeChange": " public void testBug137087i() throws CoreException", "signatureAfterChange": " public void testBug137087i() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1afd69bbd0b5a953a9a9e669200e015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 378, "methodNumberAfterChange": 425, "signatureBeforeChange": " public void testBug137087j() throws CoreException", "signatureAfterChange": " public void testBug137087j() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a6392ee1317f7f27ee86957f9a8f00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 381, "methodNumberAfterChange": 428, "signatureBeforeChange": " public void testBug137087m() throws CoreException", "signatureAfterChange": " public void testBug137087m() throws CoreException", "diff": ["+/** @deprecated As using a depreciated constant */", "-\t// Search CamelCase", "-\t// Search like UI does (ie. replace it with prefix if it's not a valid CamelCase)", "-\tint validatedRule = SearchPattern.validateMatchRule(pattern, matchRule);", "-\tif (validatedRule != matchRule) {", "-\t\tmatchRule = SearchPattern.R_PREFIX_MATCH;", "-\t}", "-\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "-\tassertSearchResults(", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\\n\" +", "-\t\t\"\"+ getExternalJCLPathString(\"1.5\") + \" java.lang.CloneNotSupportedException EXACT_MATCH\"", "-\t);"]}], "num": 8997}