{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36a81185f56b21fd8c1f2d72d4a8fb8c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41630ffd27626a8e0c73be8032b6751a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "02b069812d9eccf18b607ccee2550a6bb0833132", "commitAfterChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void printBlockComment(char[] s, int commentStart)", "signatureAfterChange": " \tpublic void printBlockComment(char[] s, int commentStart, boolean isJavadoc)", "diff": ["-\tpublic void printBlockComment(char[] s, int commentStart) {", "+\tpublic void printBlockComment(char[] s, int commentStart, boolean isJavadoc) {", "+\t\tif (isJavadoc) {", "+\t\t\tprintNewLine();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76209f6e764f6fec5ecb744330b3116", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0edd2a8da94febc0bef7418a02cfac9f1a30d36a", "commitAfterChange": "85f48e0f08275e1f81e9995073d5c4f69bfd0707", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 96, "signatureBeforeChange": "  \tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env)", "signatureAfterChange": "  \tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env, boolean tieBreakingVarargsMethods)", "diff": ["-\tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env) {", "+\tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env, boolean tieBreakingVarargsMethods) {", "+\t\tif (tieBreakingVarargsMethods) {", "+\t\t\t/* 15.12.2.5 Choosing the Most Specific Method, ... One variable arity member method named m is more specific than", "+\t\t\t   another variable arity member method of the same name if either ... Only subtypes relationship should be used.", "+\t\t\t   Actually this is true even for fixed arity methods, but in practice is not an issue since we run the algorithm", "+\t\t\t   multiple times for each compatibility level.", "+\t\t\t   https://bugs.eclipse.org/bugs/show_bug.cgi?id=346038, https://bugs.eclipse.org/bugs/show_bug.cgi?id=346039.", "+\t\t\t*/", "+\t\t\treturn NOT_COMPATIBLE;", "+\t\t}"]}], "num": 41719}