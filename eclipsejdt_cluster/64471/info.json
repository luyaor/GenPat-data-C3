{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec99d93be68b97ef9ffbedc1d85b4ea1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "111ca5725f9ed117759b96f6be128980", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "5c7f45483ff98aea12080f74206c0fab992839fd", "commitAfterChange": "02ef51d23875b3324a5f0bd2ebcca5e0abc33d8e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tAssert.isTrue(false, \"completion requestor cannot be null\"); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(\"Completion requestor cannot be null\"); //$NON-NLS-1$", "-\t\tAssert.isTrue(false, \"completion position \"+position+\" is not located in supplied source range (0, \"+buffer.getLength()+\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tthrow new IllegalArgumentException(\"Completion position \"+position+\" is not located in supplied source range (0, \"+buffer.getLength()+\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0225e76bd351aa131cc182de0b765b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "7a78fb676bbe308e1a83016a002ccaabe9c6d716", "commitAfterChange": "ec85ff03c5c75e463df0a3475c7aacc7f94ca4a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "signatureAfterChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "diff": ["-\t\t\tif( numTypeParams != numArgs )", "-\t\t\t\tthrow new IllegalArgumentException(\"type, \" + memberBinding + \", require \" + numTypeParams + \" type arguments \" + //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t// if no argument then a raw type will be created, otherwise it's an error when the ", "+\t\t\t// number of type parameter and arguments don't agree.", "+\t\t\tif( numTypeParams != numArgs && numArgs != 0 )", "+\t\t\t\tthrow new IllegalArgumentException(\"type, \" + memberBinding.getQualifiedName() + \", require \" + numTypeParams + \" type arguments \" + //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6cf836a955f7f1c4c9c321e30c099d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "c5d1291515e72a1b02e2dba658336524eb7964dc", "commitAfterChange": "5c7f45483ff98aea12080f74206c0fab992839fd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tAssert.isTrue(false, \"Completion requestor cannot be null\"); //$NON-NLS-1$", "+\t\tAssert.isTrue(false, \"completion requestor cannot be null\"); //$NON-NLS-1$", "-\t\tAssert.isTrue(false, \"Completion position \"+position+\" is not located in supplied source range (0 - \"+buffer.getLength()+\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tAssert.isTrue(false, \"completion position \"+position+\" is not located in supplied source range (0, \"+buffer.getLength()+\")\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}], "num": 64471}