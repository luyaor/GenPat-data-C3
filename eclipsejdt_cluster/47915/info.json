{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bae0e5afe586155fa5da9d13138c290f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1052f977c7162fa962f4fc9138a75c86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InternalASTRewrite.java", "commitBeforeChange": "030294305389e5486e7f63658830617d44acd9c2", "commitAfterChange": "3f4495ecc3a42cb049fa3e01aeaf49a7722af380", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options)", "signatureAfterChange": " \tpublic TextEdit rewriteAST(IDocument document, Map options)", "diff": ["-\t\t\tASTRewriteAnalyzer visitor = new ASTRewriteAnalyzer(document, result, this.eventStore, this.nodeStore, options, xsrComputer);", "+\t\t\tchar[] content= document.get().toCharArray();", "+\t\t\tLineInformation lineInfo= LineInformation.create(document);", "+\t\t\tString lineDelim= TextUtilities.getDefaultLineDelimiter(document);", "+\t\t\t", "+\t\t\tASTRewriteAnalyzer visitor = new ASTRewriteAnalyzer(content, lineInfo, lineDelim, result, this.eventStore, this.nodeStore, options, xsrComputer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf72630eeeefab8aa7feb0c366d5b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static ISearchPattern createOrSearchPattern(ISearchPattern leftPattern, ISearchPattern rightPattern)", "signatureAfterChange": " \tpublic static ISearchPattern createOrSearchPattern(ISearchPattern leftPattern, ISearchPattern rightPattern)", "diff": ["-\t\treturn new OrPattern((SearchPattern)leftPattern, (SearchPattern)rightPattern);", "+\t\tSearchPattern left = ((SearchPatternAdapter) leftPattern).pattern;", "+\t\tSearchPattern right = ((SearchPatternAdapter) rightPattern).pattern;", "+\t\tSearchPattern pattern = SearchPattern.createOrPattern(left, right);", "+\t\treturn new SearchPatternAdapter(pattern);"]}], "num": 47915}