{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05246b7f007ec9864bcd1d2237b17968", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "073b279e0a29cedaf8f396c950955f52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5b7577970cc1147a47fff02a981297149bac38c1", "commitAfterChange": "747a63a0a2a9b4e7029fd103555c522985364757", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 72, "signatureBeforeChange": " public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\tObject info = manager.getInfo(workingCopy);", "-\t\tif (info instanceof WorkingCopyElementInfo) {", "-\t\t\t((WorkingCopyElementInfo)info).incrementUseCount();", "+\t\tJavaModelManager.PerWorkingCopyInfo perWorkingCopyInfo = JavaModelManager.getJavaModelManager().getPerWorkingCopyInfo(workingCopy, false/*don't create*/, true /*record usage*/, null/*not used since don't create*/);", "+\t\tif (perWorkingCopyInfo != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b44d51352ed7654adf36e01c01e35c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "c0eface7c51e3af184baaa0d320e58e29799e4b8", "commitAfterChange": "ed97a9ed7d7ba3ec97e93e9090fed591e33f5e45", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\tif (isWorkingCopy()) return this;", "-\t", "-", "+\t", "+\treturn getWorkingCopy(new BufferFactoryWrapper(factory), problemRequestor, pm);", "+}", "-\t// AND use the same buffer factory.", "-\tWorkingCopyOwner workingCopyOwner = new BufferFactoryWrapper(factory);", "-\t\tJavaModelManager.PerWorkingCopyInfo perWorkingCopyInfo = JavaModelManager.getJavaModelManager().getPerWorkingCopyInfo(workingCopy, false/*don't create*/, true /*record usage*/, null/*not used since don't create*/);", "-\trunOperation(op, pm);", "-\treturn workingCopy;", "-}"]}], "num": 58415}