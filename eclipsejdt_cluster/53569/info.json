{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10a86f2cb0b59326a1266f7a2bd831cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e557c6c7fb9f8260ea523276d45a106", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/type/ArrayTypeImpl.java", "commitBeforeChange": "01d995488d5e309c6b243da146c63894a6df881d", "commitAfterChange": "13bbdd97c6c86aba0f70693f850c3de86bece79b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public EclipseMirrorType getComponentType()", "signatureAfterChange": "      public EclipseMirrorType getComponentType()", "diff": ["-        final ITypeBinding componentType;", "+        final ITypeBinding result;", "-            componentType = elementType;", "+            result = elementType;", "-            final ITypeBinding leaf = elementType.getElementType();", "-\t\t\tfinal String componentKey = BindingKey.createArrayTypeBindingKey(leaf.getKey(), dimension - 1);", "-\t\t\tcomponentType = _env.getTypeBindingFromKey(componentKey);", "-            if( componentType == null )", "+\t\t\tfinal String componentKey = BindingKey.createArrayTypeBindingKey(elementType.getKey(), dimension - 1);", "+\t\t\tresult = _env.getTypeBindingFromKey(componentKey);", "+            if( result == null )", "-        final EclipseMirrorType mirror = Factory.createTypeMirror(componentType, _env);", "+        final EclipseMirrorType mirror = Factory.createTypeMirror(result, _env);", "-            return (EclipseMirrorType)Factory.createErrorClassType(componentType);", "+            return (EclipseMirrorType)Factory.createErrorClassType(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f91725c7fad3b6e5d8bbb35d2c7735f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r     public IMethodBinding getMethodBinding(final String memberName)", "signatureAfterChange": "     public IMethodBinding getMethodBinding(final String memberName)", "diff": ["-     */\r", "-    public IMethodBinding getMethodBinding(final String memberName)\r", "-    {\r", "-        if( memberName == null ) return null;\r", "-        final ITypeBinding typeBinding = _annoAstNode.resolveTypeBinding();\r", "-        final IMethodBinding[] methods  = typeBinding.getDeclaredMethods();\r", "-        for( IMethodBinding method : methods ){\r", "-            if( memberName.equals(method.getName()) )\r", "-                return method;\r", "-        }\r", "-        return null;\r", "-    }\r", "+     */", "+    public IMethodBinding getMethodBinding(final String memberName)", "+    {", "+        if( memberName == null ) return null;", "+        final ITypeBinding typeBinding = _domAnnotation.getAnnotationType();", "+\t\tif( typeBinding == null ) return null;", "+        final IMethodBinding[] methods  = typeBinding.getDeclaredMethods();", "+        for( IMethodBinding method : methods ){", "+            if( memberName.equals(method.getName()) )", "+                return method;", "+        }", "+        return null;", "+    }"]}], "num": 53569}