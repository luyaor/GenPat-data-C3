{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "944fa2dadf8366b0261006b68350fb2d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3718e2442616466801b9c42dfa2616ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "57b3e1abeb63c771e6bdc37b05f8550c215d97c4", "commitAfterChange": "8263b1bf4e0979f16664b3ec7a3f63f9c444d8c1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate boolean examineGetDeclaredTypeNested()", "signatureAfterChange": " \tprivate boolean examineGetDeclaredTypeNested()", "diff": ["-\t\tTypeElement mapDecl = _elementUtils.getTypeElement(\"java.util.HashMap\");", "-\t\tTypeElement iterDecl = _elementUtils.getTypeElement(\"java.util.HashMap.HashIterator\");", "+\t\tTypeElement elementOuter = _elementUtils.getTypeElement(\"targets.model.pd.Outer\");", "+\t\tTypeElement elementInner = _elementUtils.getTypeElement(\"targets.model.pd.Outer.Inner\");", "-\t\t// HashMap<String, Number[]>", "-\t\tDeclaredType outerType = _typeUtils.getDeclaredType(mapDecl, stringType, numberArrayType);", "-\t\t", "-\t\t// HashMap<String, Number[]>.HashIterator<Number[]>", "-\t\tDeclaredType decl = _typeUtils.getDeclaredType(outerType, iterDecl, new TypeMirror[] { numberArrayType });", "-\t\t", "+\t\t// Outer<T1, T2> ---> Outer<String, Number[]>", "+\t\tDeclaredType outerType = _typeUtils.getDeclaredType(elementOuter, stringType, numberArrayType);", "+", "+\t\t// Outer<T1, T2>.Inner<T2> ---> Outer<String, Number[]>.Inner<Number[]>", "+\t\tDeclaredType decl = _typeUtils.getDeclaredType(outerType, elementInner, new TypeMirror[] { numberArrayType });", "+", "-\t\t\treportError(\"Map<String, Number[]>.EntryIterator<Number[]> should have one argument but decl.getTypeArguments() returned \" + args.size());", "+\t\t\treportError(\"Outer<String, Number[]>.Inner<Number[]> should have one argument but decl.getTypeArguments() returned \" + args.size());", "-\t\t\treportError(\"First arg of Map<String, Number[]>.EntryIterator<Number[]> was expected to be Number[], but was: \" + args.get(0));", "+\t\t\treportError(\"First arg of Outer<String, Number[]>.Inner<Number[]> was expected to be Number[], but was: \" + args.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0080e5944f5abc967ab3594e9d16ce9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "ea7357803f7625c89fd0063c616a1f7a28c12a8c", "commitAfterChange": "2b786bffa4dd1bffe658313335c4deb92d85d228", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate boolean examineGetDeclaredTypeNested()", "signatureAfterChange": " \tprivate boolean examineGetDeclaredTypeNested()", "diff": ["+\t\tArrayType numberArrayType = _typeUtils.getArrayType(numberType);", "-\t\t// HashMap<String, Number>", "-\t\tDeclaredType outerType = _typeUtils.getDeclaredType(mapDecl, stringType, numberType);", "+\t\t// HashMap<String, Number[]>", "+\t\tDeclaredType outerType = _typeUtils.getDeclaredType(mapDecl, stringType, numberArrayType);", "-\t\t// HashMap<String, Number>.HashIterator<Number>", "-\t\tDeclaredType decl = _typeUtils.getDeclaredType(outerType, iterDecl, new DeclaredType[] { numberType });", "+\t\t// HashMap<String, Number[]>.HashIterator<Number[]>", "+\t\tDeclaredType decl = _typeUtils.getDeclaredType(outerType, iterDecl, new TypeMirror[] { numberArrayType });", "-\t\t\treportError(\"Map<String, Number>.EntryIterator<Number> should have one argument but decl.getTypeArguments() returned \" + args.size());", "+\t\t\treportError(\"Map<String, Number[]>.EntryIterator<Number[]> should have one argument but decl.getTypeArguments() returned \" + args.size());", "-\t\tif (!_typeUtils.isSameType(numberType, args.get(0))) {", "-\t\t\treportError(\"First arg of Map<String, Number>.EntryIterator<Number> was expected to be Number, but was: \" + args.get(0));", "+\t\tif (!_typeUtils.isSameType(numberArrayType, args.get(0))) {", "+\t\t\treportError(\"First arg of Map<String, Number[]>.EntryIterator<Number[]> was expected to be Number[], but was: \" + args.get(0));"]}], "num": 32360}