{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a3263965295778aaad1941219da19fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e407accce5abca35a36a8f578825a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 232, "signatureBeforeChange": " protected void consumeOneMoreTypeAnnotation()", "signatureAfterChange": " protected void consumeOneMoreTypeAnnotation()", "diff": ["-protected void consumeOneMoreTypeAnnotation() {", "-\t// OneOrMoreAnnotations ::= OneOrMoreAnnotations Annotation", "-\tthis.expressionLengthPtr --;", "-\tAnnotation annotation = (Annotation) this.expressionStack[this.expressionPtr--];", "-\tpushOnTypeAnnotationStack(annotation);", "-\tthis.typeAnnotationLengthStack[--this.typeAnnotationLengthPtr]++;", "-\tif(!this.statementRecoveryActivated &&", "-\t\t\tthis.options.sourceLevel <= ClassFileConstants.JDK1_7 &&", "+protected void consumeOneMoreTypeAnnotation() {", "+\t// OneOrMoreAnnotations ::= OneOrMoreAnnotations Annotation", "+\tthis.typeAnnotationLengthStack[--this.typeAnnotationLengthPtr]++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89c07733986ec7fdd60c96f78512809", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "058521030c68f15c9e89da9672ee6010c8a54c82", "commitAfterChange": "ad3ff878b34a7bd9fdf182c96c6fcce95bcbf6a2", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " protected void consumeNormalAnnotation(boolean isTypeAnnotation)", "signatureAfterChange": " protected void consumeNormalAnnotation(boolean isTypeAnnotation)", "diff": ["+\t\tif (this.expressionPtr >= 0 && this.expressionStack[this.expressionPtr] instanceof CompletionOnMarkerAnnotationName) {", "+\t\t\tAnnotation annotation = (Annotation)this.expressionStack[this.expressionPtr];", "+\t\t\tif(this.currentElement != null) {", "+\t\t\t\tannotationRecoveryCheckPoint(annotation.sourceStart, annotation.declarationSourceEnd);", "+\t\t\t\tif (this.currentElement instanceof RecoveredAnnotation) {", "+\t\t\t\t\tthis.currentElement = ((RecoveredAnnotation)this.currentElement).addAnnotation(annotation, this.identifierPtr);", "+\t\t\t\t}", "+\t\t\t}", "+", "+\t\t\tif(!this.statementRecoveryActivated &&", "+\t\t\t\t\tthis.options.sourceLevel < ClassFileConstants.JDK1_5 &&", "+\t\t\t\t\tthis.lastErrorEndPositionBeforeRecovery < this.scanner.currentPosition) {", "+\t\t\t\tproblemReporter().invalidUsageOfAnnotation(annotation);", "+\t\t\t}", "+\t\t\tthis.recordStringLiterals = true;", "+\t\t\treturn;", "+\t\t}"]}], "num": 20169}