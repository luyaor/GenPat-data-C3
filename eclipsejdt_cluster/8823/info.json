{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d785e5762cd7b110a49e77687f53bac7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "110e4a1d0164a605f5e041f893d450c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "commitAfterChange": "54adf8874a2139df84e504710c736c699ecdc8bd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations)", "signatureAfterChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean isLegalLocation)", "diff": ["-\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations) {", "+\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean isLegalLocation) {", "+\t\tint firstSE8 = -1, lastSE8 = 0;", "+\t\t\t\tif (firstSE8 == -1) firstSE8 = i;", "+\t\t\t\tlastSE8 = i;", "+\t\t\tif (!isLegalLocation) {", "+\t\t\t\tscope.problemReporter().misplacedTypeAnnotations(annotations[firstSE8], annotations[lastSE8]);", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68b58de16b95315c19249d05139051d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "eb98db8467dab9b499bde6848602a31af6a605b6", "commitAfterChange": "62542d77179e2d9d9eae2d205be3f0fefe8aabb4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean isLegalLocation)", "signatureAfterChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean annotatingEnumerator)", "diff": ["-\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean isLegalLocation) {", "+\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean annotatingEnumerator) {", "-\t\tint firstSE8 = -1, lastSE8 = 0;", "+\t\tint firstSE8 = -1;", "+\t\t\t\tif (annotatingEnumerator) {", "+\t\t\t\t\tif ((metaTagBits & recipientTargetMask) == 0) {", "+\t\t\t\t\t\tscope.problemReporter().misplacedTypeAnnotations(annotations[i], annotations[i]);", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "-\t\t\t\tlastSE8 = i;", "-\t\t\tif (!isLegalLocation) {", "-\t\t\t\tscope.problemReporter().misplacedTypeAnnotations(annotations[firstSE8], annotations[lastSE8]);", "-\t\t\t\treturn;", "-\t\t\t}"]}], "num": 8823}