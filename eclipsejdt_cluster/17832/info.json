{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95888711c6f4bccb8eed5cbe50d4d8a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924692bd1c2f2407fae7d8f9de283dc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingCopyTest.java", "commitBeforeChange": "e7c5395b4e9c05ba913bf25933d883fecf8ded62", "commitAfterChange": "af7ff2df96d5070816282ef48d7972e5ac07e756", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test0002() throws Exception", "signatureAfterChange": " \tpublic void test0002() throws Exception", "diff": ["+\t\tbuf.append(\"    //pre\\n\");", "+\t\tbuf.append(\"    int i; //post\\n\");", "+\t\tbuf.append(\"    //pre\\n\");", "+\t\tbuf.append(\"    int i; //post\\n\");", "-\t\tbuf.append(\"class Y /**/ {\\n\");", "-\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"class A {\\n\");", "+//\t\tbuf.append(\"    //pre\\n\"); // we can't preserve everything, but we do our best...", "+//\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"    int i; //post\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d7dc2418bc3eb0c3672d66980c06e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingCopyTest.java", "commitBeforeChange": "9d818d966f2a85328fdb72d739392b1760183111", "commitAfterChange": "9115bb8a229c7ea0533ba010d4fd36e981257274", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test0002() throws Exception", "signatureAfterChange": " \tpublic void test0002() throws Exception", "diff": ["+\t\tbuf.append(\"    //pre\\n\");", "+\t\tbuf.append(\"    int i; //post\\n\");", "+\t\tbuf.append(\"    //pre\\n\");", "+\t\tbuf.append(\"    int i; //post\\n\");", "-\t\tbuf.append(\"class Y /**/ {\\n\");", "-\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"class A {\\n\");", "+//\t\tbuf.append(\"    //pre\\n\"); // we can't preserve everything, but we do our best...", "+//\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"    int i; //post\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ed301d079b78eda89b6b4db3aeb223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tpublic void testAddImports_bug24804_2() throws Exception", "signatureAfterChange": "  \tpublic void testAddImports_bug23078_usingContext() throws Exception", "diff": ["+", "+\tpublic void testAddImports_bug23078_usingContext() throws Exception {", "+\t\tIPackageFragment pack1= this.sourceFolder.createPackageFragment(\"pack1\", false, null);", "+\t\tStringBuffer buf= new StringBuffer();", "+\t\tbuf.append(\"package pack1;\\n\");", "+\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"import p.A.*;\\n\");", "+\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"public class C {\\n\");", "+\t\tbuf.append(\"}\\n\");", "+\t\tICompilationUnit cu= pack1.createCompilationUnit(\"C.java\", buf.toString(), false, null);", "+", "+\t\tString[] order= new String[] { };", "+", "+\t\tImportRewrite imports= newImportsRewrite(cu, order, 3, 3, true);", "+\t\timports.setUseContextToFilterImplicitImports(true);", "+\t\timports.addImport(\"p.A\");", "+\t\timports.addImport(\"p.Inner\");", "+\t\timports.addImport(\"p.Inner.*\");", "+", "+\t\tapply(imports);", "+", "+\t\t// Having set useContextToFilterImplicitImports to true, we get 3.6-and-later behavior,", "+\t\t// which sorts imports by containing package and then by qualified name.", "+\t\tbuf= new StringBuffer();", "+\t\tbuf.append(\"package pack1;\\n\");", "+\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"import p.A;\\n\");", "+\t\tbuf.append(\"import p.A.*;\\n\");", "+\t\tbuf.append(\"import p.Inner;\\n\");", "+\t\tbuf.append(\"import p.Inner.*;\\n\");", "-\tpublic void testAddImports_bug24804_2() throws Exception {", "-", "-\t\tIPackageFragment pack1= this.sourceFolder.createPackageFragment(\"pack1\", false, null);", "-\t\tStringBuffer buf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.lang.AssertionError;//test\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"import java.lang.System;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tICompilationUnit cu= pack1.createCompilationUnit(\"C.java\", buf.toString(), false, null);", "-", "-\t\tString[] order= new String[] { \"java\" };", "-", "-\t\tImportRewrite imports= newImportsRewrite(cu, order, 99, 99, true);", "-\t\timports.addImport(\"java.io.Exception\");", "-", "-\t\tapply(imports);", "-", "-\t\tbuf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.io.Exception;\\n\");", "-\t\tbuf.append(\"import java.lang.AssertionError;//test\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"import java.lang.System;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tassertEqualString(cu.getSource(), buf.toString());", "-\t}"]}], "num": 17832}