{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d91914fce25fa82fb865193f2fcc27d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10988b531e7aaa30e62cfe0dd1b3d733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "commitAfterChange": "8ed896e298fa9789ff51d3aeca45b60a4a3c5b99", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\t// TODO; wait for resolve of bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=76190", "-\t\trewriteNodeList(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tpos= rewriteNodeList(node, EnumDeclaration.ENUM_CONSTANTS_PROPERTY, pos, \"\", \", \"); //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\t\tRewriteEvent bodyEvent= getEvent(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY);", "+\t\tint indent= 0;", "+\t\tif (bodyEvent != null && bodyEvent.getChangeKind() != RewriteEvent.UNCHANGED) {", "+\t\t\tRewriteEvent[] children= bodyEvent.getChildren();", "+\t\t\ttry {", "+\t\t\t\tint token= getScanner().readNext(pos, true);", "+\t\t\t\tboolean hasSemicolon= token == ITerminalSymbols.TokenNameSEMICOLON;", "+\t\t\t\tif (!hasSemicolon && isAllOfKind(children, RewriteEvent.INSERTED)) {", "+\t\t\t\t\tdoTextInsert(pos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t} else if (hasSemicolon) {", "+\t\t\t\t\tint endPos= getScanner().getCurrentEndOffset();", "+\t\t\t\t\tif (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\t\t\t\t\tdoTextRemove(pos, endPos - pos, getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpos= endPos;", "+\t\t\t\t}", "+\t\t\t\tindent= getIndent(pos);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\thandleException(e);", "+\t\t\t}", "+\t\t}", "+\t\trewriteParagraphList(node, EnumDeclaration.BODY_DECLARATIONS_PROPERTY, pos, indent, -1, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "885d1a69f681861f0c5e4e5adc7acfda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "167c362a4ac2baf619eec088a660153ec713b502", "commitAfterChange": "203954a19427f44b197aa09593f6f49177e09606", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic boolean visit(WildcardType node)", "signatureAfterChange": " \tpublic boolean visit(WildcardType node)", "diff": ["-\t\tAssert.isTrue(false, \"Modifications in nodes of type \" + node.getClass().getName() + \" not supported yet\");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\ttry {", "+\t\t\tint pos= getScanner().getNextEndOffset(node.getStartPosition(), true); // pos after question mark", "+\t\t\t", "+\t\t\tPrefix prefix;", "+\t\t\tif (Boolean.TRUE.equals(getNewValue(node, WildcardType.UPPER_BOUND_PROPERTY))) {", "+\t\t\t\tprefix= this.formatter.WILDCARD_EXTENDS;", "+\t\t\t} else {", "+\t\t\t\tprefix= this.formatter.WILDCARD_SUPER;", "+\t\t\t}", "+\t\t\t", "+\t\t\tint boundKindChange= getChangeKind(node, WildcardType.UPPER_BOUND_PROPERTY);", "+\t\t\tif (boundKindChange != RewriteEvent.UNCHANGED) {", "+\t\t\t\tint boundTypeChange= getChangeKind(node, WildcardType.BOUND_PROPERTY);", "+\t\t\t\tif (boundTypeChange != RewriteEvent.INSERTED && boundTypeChange != RewriteEvent.REMOVED) {", "+\t\t\t\t\tASTNode type= (ASTNode) getOriginalValue(node, WildcardType.BOUND_PROPERTY);", "+\t\t\t\t\tString str= prefix.getPrefix(0, getLineDelimiter());", "+\t\t\t\t\tdoTextReplace(pos, type.getStartPosition() - pos, str, getEditGroup(node, WildcardType.BOUND_PROPERTY));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\trewriteNode(node, WildcardType.BOUND_PROPERTY, pos, prefix);", "+\t\t} catch (CoreException e) {", "+\t\t\thandleException(e);", "+\t\t}"]}], "num": 29020}