{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3f4b91764af65a44df1f7b275af1d66", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0790767fc377ba5f1beacf40ca644ba8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "2ce6255dd4ec5ed8642a03ac881dd120c66b8a90", "commitAfterChange": "44812880b1f64f568edbe98bb8d70e4f3eb124f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\t\tMethodBinding[] methodBindings = refBinding.getMethods(this.token);", "-\t\t\t\tif (methodBindings == null) {", "-\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, fieldBinding, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\tMethodBinding possibleMethod = this.receiver.isThis()", "+\t\t\t\t\t? scope.getImplicitMethod(this.token, Binding.NO_TYPES, this)", "+\t\t\t\t\t: scope.getMethod(refBinding, this.token, Binding.NO_TYPES, this);", "+\t\t\t\tif (possibleMethod.isValidBinding()) {", "+\t\t\t\t\tthis.methodBinding = possibleMethod;", "-\t\t\t\t\tswitch (methodBindings.length) {", "-\t\t\t\t\t\tcase 0:", "-\t\t\t\t\t\t\t// no method was found: report problem", "-\t\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, fieldBinding, this.receiverType, scope.getDeclarationModifiers());", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase 1:", "-\t\t\t\t\t\t\t// one method binding was found: store binding in specific field", "-\t\t\t\t\t\t\tthis.methodBinding = methodBindings[0];", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t// several method binding were found: store first binding in specific field and report ambiguous error", "-\t\t\t\t\t\t\tthis.methodBinding = methodBindings[0];", "-\t\t\t\t\t\t\tscope.problemReporter().javadocAmbiguousMethodReference(this.sourceStart, this.sourceEnd, fieldBinding, scope.getDeclarationModifiers());", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\tProblemMethodBinding problemMethodBinding = (ProblemMethodBinding) possibleMethod;", "+\t\t\t\t\tif (problemMethodBinding.closestMatch == null) {", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, fieldBinding, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.methodBinding = problemMethodBinding.closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b7f903cc170cbfebcee70108589b02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "82208f61237e714f45fa0ec35023823563f997ac", "commitAfterChange": "c36806bf795aa69e23f027117b2ebc1cb99bee93", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tthis.binding = scope.getField(this.receiverType, this.token, this);", "-\t\tif (!this.binding.isValidBinding()) {", "+\t\tBinding fieldBinding = (this.receiver != null && this.receiver.isThis())", "+\t\t\t? scope.getBinding(this.token, this.bits & RestrictiveFlagMASK, this, true /*resolve*/)", "+\t\t\t: scope.getField(this.receiverType, this.token, this);", "+\t\tif (!fieldBinding.isValidBinding() || !(fieldBinding instanceof FieldBinding)) {", "-\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "-\t\t\t\t\treturn null;", "-\t\t\t\t} ", "-\t\t\t\tswitch (bindings.length) {", "-\t\t\t\t\tcase 0:", "-\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\tcase 1:", "-\t\t\t\t\t\tthis.binding = null;", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\tscope.problemReporter().javadocAmbiguousMethodReference(this, scope.getDeclarationModifiers());", "-\t\t\t\t\t\treturn null;", "+\t\t\t\t\tscope.problemReporter().javadocInvalidField(this.sourceStart, this.sourceEnd, fieldBinding, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\t} else {", "+\t\t\t\t\tswitch (bindings.length) {", "+\t\t\t\t\t\tcase 0:", "+\t\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this.sourceStart, this.sourceEnd, fieldBinding, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase 1:", "+\t\t\t\t\t\t\tthis.binding = null;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tscope.problemReporter().javadocAmbiguousMethodReference(this.sourceStart, this.sourceEnd, fieldBinding, scope.getDeclarationModifiers());", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\treturn null;", "+\t\tthis.binding = (FieldBinding) fieldBinding;"]}], "num": 8003}