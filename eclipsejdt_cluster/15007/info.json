{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc5a20b073396054c48252d45f05104c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc24ad9131086b775f22c63fae41bf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public FieldBinding[] fields()", "signatureAfterChange": " public FieldBinding[] fields()", "diff": ["+// NOTE: the type of each field of a source type is resolved when needed", "-\t", "+\tint failed = 0;", "-\t\tint failed = 0;", "-\t\tfor (int f = 0, max = fields.length; f < max; f++) {", "-\t\t\tif (resolveTypeFor(fields[f]) == null) {", "-\t\t\t\tfields[f] = null;", "+\t\tfor (int i = 0, length = fields.length; i < length; i++) {", "+\t\t\tif (resolveTypeFor(fields[i]) == null) {", "+\t\t\t\tfields[i] = null;", "+\t} finally {", "+\t\t\t// ensure fields are consistent reqardless of the error", "-\t\t\tfor (int i = 0, n = 0, max = fields.length; i < max; i++)", "+\t\t\tfor (int i = 0, j = 0, length = fields.length; i < length; i++)", "-\t\t\t\t\tnewFields[n++] = fields[i];", "+\t\t\t\t\tnewFields[j++] = fields[i];", "-\t} catch(AbortCompilation e){", "-\t\t// ensure null fields are removed", "-\t\tFieldBinding[] newFields = null;", "-\t\tint count = 0;", "-\t\tfor (int i = 0, max = fields.length; i < max; i++){", "-\t\t\tFieldBinding field = fields[i];", "-\t\t\tif (field == null && newFields == null){", "-\t\t\t\tSystem.arraycopy(fields, 0, newFields = new FieldBinding[max], 0, i);", "-\t\t\t} else if (newFields != null && field != null) {", "-\t\t\t\tnewFields[count++] = field;", "-\t\t\t}", "-\t\t}", "-\t\tif (newFields != null){", "-\t\t\tSystem.arraycopy(newFields, 0, fields = new FieldBinding[count], 0, count);", "-\t\t}\t\t\t", "-\t\tthrow e;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ca85eabdcc5d6f5e98168348c5b5a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": " public FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["+// NOTE: the type of a field of a source type is resolved when needed", "-\tfor (int f = fields.length; --f >= 0;) {", "-\t\tFieldBinding field = fields[f];", "+\tfor (int i = 0, length = fields.length; i < length; i++) {", "+\t\tFieldBinding field = fields[i];", "-\t\t\tif (resolveTypeFor(field) != null)", "-\t\t\t\treturn field;", "-", "-\t\t\tint newSize = fields.length - 1;", "-\t\t\tif (newSize == 0) {", "-\t\t\t\tfields = NoFields;", "-\t\t\t} else {", "-\t\t\t\tFieldBinding[] newFields = new FieldBinding[newSize];", "-\t\t\t\tSystem.arraycopy(fields, 0, newFields, 0, f);", "-\t\t\t\tSystem.arraycopy(fields, f + 1, newFields, f, newSize - f);", "-\t\t\t\tfields = newFields;", "+\t\t\tFieldBinding result = null;", "+\t\t\ttry {", "+\t\t\t\tresult = resolveTypeFor(field);", "+\t\t\t\treturn result;", "+\t\t\t} finally {", "+\t\t\t\tif (result == null) {", "+\t\t\t\t\t// ensure fields are consistent reqardless of the error", "+\t\t\t\t\tint newSize = fields.length - 1;", "+\t\t\t\t\tif (newSize == 0) {", "+\t\t\t\t\t\tfields = NoFields;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tFieldBinding[] newFields = new FieldBinding[newSize];", "+\t\t\t\t\t\tSystem.arraycopy(fields, 0, newFields, 0, i);", "+\t\t\t\t\t\tSystem.arraycopy(fields, i + 1, newFields, i, newSize - i);", "+\t\t\t\t\t\tfields = newFields;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\treturn null;"]}], "num": 15007}