{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d123e4e2c6b24960b27fb299799a29d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfb1eccaab1b07a4ce61249a6e72d076", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "626e0f4ca560af90af18cf20db784d6a66b5bffe", "commitAfterChange": "5408bb27f7cd14ca3e3ebf3cc6138ab9dd2e486c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void computeAllRootPaths(IType type)", "signatureAfterChange": " \t \tprivate void computeAllRootPaths(IPackageFragmentRoot root)", "diff": ["-\tprivate void computeAllRootPaths(IType type) {", "-\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) type.getPackageFragment().getParent();", "+\tprivate void computeAllRootPaths(IPackageFragmentRoot root) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca78b142ff2e94195259711a73ea91a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "7c40765982baa5c3ff8f0873ac85435c3d742d58", "commitAfterChange": "be1ab5866130739e4d5dea6be597450bab4d9fe1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic char[] findSource(IType type, String simpleSourceFileName)", "signatureAfterChange": " \tpublic char[] findSource(IType type, String simpleSourceFileName)", "diff": ["-\t\t\tif (!areRootPathsComputed) {", "-\t\t\t\tcomputeAllRootPaths((IPackageFragmentRoot) type.getPackageFragment().getParent());", "-\t\t\t}", "-\t\t\t/*", "-\t\t\t * We should try all existing root paths. If none works, try to recompute it.", "-\t\t\t * If it still doesn't work, then return null", "-\t\t\t */", "+\t\t\tcomputeAllRootPaths(type);"]}], "num": 37918}