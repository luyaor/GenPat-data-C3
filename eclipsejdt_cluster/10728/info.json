{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec55460ff1229bddc21000e4a7802a5f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc4ca217c6563b01766396205476156", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "5292c15945b50fef548808f853ce39423b5670f2", "commitAfterChange": "e32dbbc9904e1f7eb4c6e79a7595e742217638b3", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["+\t\tboolean hasMultiLines = false;", "-\t\tboolean hastTextOnFirstLine = false;", "+\t\tboolean bufferHasTokens = false;", "+\t\tint hasTextOnFirstLine = 0;", "+\t\tboolean textOnFirstLine = false;", "-\t\t\t\t\tbuffer.append(tokensBuffer);", "-\t\t\t\t\tthis.column += tokensBuffer.length();", "-\t\t\t\t\ttokensBuffer.setLength(0);", "+\t\t\t\t\tif (tokensBuffer.length() > 0) {", "+\t\t\t\t\t\tbuffer.append(tokensBuffer);", "+\t\t\t\t\t\tthis.column += tokensBuffer.length();", "+\t\t\t\t\t\ttokensBuffer.setLength(0);", "+\t\t\t\t\t\tbufferHasTokens = true;", "+\t\t\t\t\t\tif (!textOnFirstLine && multiLines) {", "+\t\t\t\t\t\t\ttextOnFirstLine = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\t\tmultiLines = true;", "+\t\t\t\t\t\thasMultiLines = true;", "-\t\t\t\t\t\tif (multiLines) {", "+\t\t\t\t\t\tif (multiLines || hasMultiLines) {", "+\t\t\t\t\t\tbufferHasTokens = true;", "-    \t\tif (!hastTextOnFirstLine && scannerLine == firstLine) {", "-    \t\t\thastTextOnFirstLine = true;", "+    \t\tif (hasTextOnFirstLine == 0 && scannerLine == firstLine) {", "+    \t\t\thasTextOnFirstLine = 1;", "+    \t\t\ttextOnFirstLine = true;", "-    \t\t", "+", "+\t\t\t\tboolean alreadyHasNewLine = !bufferHasTokens && tokensBuffer.length() > 0 && multiLines;", "+\t\t\t\t\talreadyHasNewLine = false;", "-\t\t    \tbuffer.append(this.lineSeparator);", "-\t\t    \tthis.column = 1;", "-\t\t    \tprintIndentationIfNecessary(buffer);", "-\t    \t\tbuffer.append(BLOCK_LINE_PREFIX);", "-\t\t    \tthis.column += BLOCK_LINE_PREFIX_LENGTH;", "+\t\t\t\tif (!alreadyHasNewLine) {", "+\t\t\t    \tbuffer.append(this.lineSeparator);", "+\t\t\t    \tthis.column = 1;", "+\t\t\t    \tprintIndentationIfNecessary(buffer);", "+\t\t    \t\tbuffer.append(BLOCK_LINE_PREFIX);", "+\t\t\t    \tthis.column += BLOCK_LINE_PREFIX_LENGTH;", "+\t\t\t\t\tif (!bufferHasTokens) {", "+\t\t\t\t\t\ttextOnFirstLine = false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbufferHasTokens = true;", "-\t\t\tif (multiLines) {", "-\t\t\t\tif (/*clearBlankLines || */(hasTokens && hastTextOnFirstLine)) {", "-\t\t\t\t\tint col = this.column;", "-\t\t\t\t\treplacement.append(this.lineSeparator);", "-\t\t\t\t\tthis.column = 1;", "-\t\t\t\t\tprintIndentationIfNecessary(replacement);", "-\t\t\t\t\tif (buffer.charAt(0) == ' ') {", "-\t\t\t\t\t\treplacement.append(' ');", "-\t\t\t\t\t\treplacement.append('*');", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treplacement.append(BLOCK_LINE_PREFIX);", "-\t\t\t\t\t\tthis.column++;", "-\t\t\t\t\t}", "-\t\t\t    \tthis.column = col;", "+\t\t\tif ((hasMultiLines || multiLines) && hasTextOnFirstLine == 1 && textOnFirstLine) {", "+\t\t\t\tint col = this.column;", "+\t\t\t\treplacement.append(this.lineSeparator);", "+\t\t\t\tthis.column = 1;", "+\t\t\t\tprintIndentationIfNecessary(replacement);", "+\t\t\t\tif (buffer.charAt(0) == ' ') {", "+\t\t\t\t\treplacement.append(' ');", "+\t\t\t\t\treplacement.append('*');", "+\t\t\t\t} else {", "+\t\t\t\t\treplacement.append(BLOCK_LINE_PREFIX);", "+\t\t\t\t\tthis.column++;", "+\t\t    \tthis.column = col;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb48adaa564e4c50c116bd257161f6ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": "  \t\tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t */", "-\tprotected boolean parseParam() throws InvalidInputException {", "-\t\tint startPosition = this.index;", "-\t\tint endPosition = this.index;", "-\t\tlong namePosition = (((long)startPosition)<<32) + endPosition;", "-\t\tthis.identifierPtr = -1;", "-\t\tboolean valid = super.parseParam();", "-\t\t// See if expression is concerned by completion", "-\t\tif (this.identifierPtr >= 0) {", "-\t\t\tif (this.identifierPtr >= 1) { // type param, identifier is second one: <ID>", "-\t\t\t\tname = this.identifierStack[1];", "-\t\t\t\tnamePosition = this.identifierPositionStack[1];", "-\t\t\tstartPosition = (int)(this.identifierPositionStack[0]>>32);", "-\t\t\tendPosition = (int)this.identifierPositionStack[this.identifierPtr];", "-\t\t} else {", "-\t\t\tCompletionScanner completionScanner = (CompletionScanner) this.scanner;", "-\t\t\tif (completionScanner.getCurrentIdentifierSource() == CompletionScanner.EmptyCompletionIdentifier) {", "-\t\t\t\tnamePosition = completionScanner.completedIdentifierStart;", "-\t\t\t\tstartPosition = completionScanner.completedIdentifierStart;", "-\t\t\t\tendPosition = completionScanner.completedIdentifierEnd;", "-\t\tboolean inCompletion = (startPosition <= (this.cursorLocation+1) && this.cursorLocation <= endPosition) // completion cursor is between first and last stacked identifiers", "-\t\t\t|| ((startPosition == (endPosition+1) && endPosition == this.cursorLocation)); // or it's a completion on empty token", "-\t\tif (inCompletion) {", "-\t\t\tif (this.completionNode == null) {", "-\t\t\t\tif (this.identifierPtr < 0) {", "-\t\t\t\t\tthis.completionNode = new CompletionOnJavadocParamNameReference(namePosition, startPosition, endPosition);", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.completionNode = new CompletionOnJavadocTypeParamReference(name, namePosition, startPosition, endPosition);", "-\t\t\t\t}", "-\t\t\t\tif (CompletionEngine.DEBUG) {", "-\t\t\t\t\tSystem.out.println(\"\tcompletion param=\"+completionNode); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t} else if (this.completionNode instanceof CompletionOnJavadocParamNameReference) {", "-\t\t\t\tCompletionOnJavadocParamNameReference paramNameRef = (CompletionOnJavadocParamNameReference)this.completionNode;", "-\t\t\t\tint nameStart = (int) (namePosition>>32);", "-\t\t\t\tparamNameRef.sourceStart = nameStart;", "-\t\t\t\tint nameEnd = (int) namePosition;", "-\t\t\t\tif (nameStart<this.cursorLocation && this.cursorLocation<nameEnd) {", "-\t\t\t\t\tparamNameRef.sourceEnd = this.cursorLocation + 1;", "-\t\t\t\t} else {", "-\t\t\t\t\tparamNameRef.sourceEnd = nameEnd;", "-\t\t\t\t}", "-\t\t\t\tparamNameRef.tagSourceStart = startPosition;", "-\t\t\t\tparamNameRef.tagSourceEnd = endPosition;", "-\t\t\t} else if (this.completionNode instanceof CompletionOnJavadocTypeParamReference) {", "-\t\t\t\tCompletionOnJavadocTypeParamReference typeParamRef = (CompletionOnJavadocTypeParamReference)this.completionNode;", "-\t\t\t\tint nameStart = (int) (namePosition>>32);", "-\t\t\t\ttypeParamRef.sourceStart = nameStart;", "-\t\t\t\tint nameEnd = (int) namePosition;", "-\t\t\t\tif (nameStart<this.cursorLocation && this.cursorLocation<nameEnd) {", "-\t\t\t\t\ttypeParamRef.sourceEnd = this.cursorLocation + 1;", "-\t\t\t\t} else {", "-\t\t\t\t\ttypeParamRef.sourceEnd = nameEnd;", "-\t\t\t\t}", "-\t\t\t\ttypeParamRef.tagSourceStart = startPosition;", "-\t\t\t\ttypeParamRef.tagSourceEnd = endPosition;", "-\t\t\t}", "-\t\t}", "-\t\treturn valid;", "+", "+\t\tprotected boolean parseParam() throws InvalidInputException {", "+\t\t\tint startPosition = this.index;", "+\t\t\tint endPosition = this.index;", "+\t\t\tlong namePosition = (((long)startPosition)<<32) + endPosition;", "+\t\t\tthis.identifierPtr = -1;", "+\t\t\tboolean valid = super.parseParam();", "+\t\t\tif (this.identifierPtr > 2) return valid;", "+\t\t\t// See if expression is concerned by completion", "+\t\t\tchar[] name = null;", "+\t\t\tCompletionScanner completionScanner = (CompletionScanner) this.scanner;", "+\t\t\tboolean isTypeParam = false;", "+\t\t\tif (this.identifierPtr < 0) {", "+\t\t\t\t// workaround, empty token should set an empty identifier by scanner and so identifierPtr should be == 0", "+\t\t\t\tif (completionScanner.getCurrentIdentifierSource() == CompletionScanner.EmptyCompletionIdentifier) {", "+\t\t\t\t\tnamePosition = completionScanner.completedIdentifierStart;", "+\t\t\t\t\tstartPosition = completionScanner.completedIdentifierStart;", "+\t\t\t\t\tendPosition = completionScanner.completedIdentifierEnd;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tchar[] identifier = null;", "+\t\t\t\tswitch (this.identifierPtr) {", "+\t\t\t\t\tcase 2:", "+\t\t\t\t\t\tif (!valid && completionScanner.getCurrentIdentifierSource() == CompletionScanner.EmptyCompletionIdentifier) {", "+\t\t\t\t\t\t\tvalid = pushParamName(true);", "+\t\t\t\t\t\t}", "+\t\t\t\t\tcase 1:", "+\t\t\t\t\t\tisTypeParam = true;", "+\t\t\t\t\t\tidentifier = this.identifierStack[1];", "+\t\t\t\t\t\tnamePosition = this.identifierPositionStack[1];", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase 0:", "+\t\t\t\t\t\tidentifier = this.identifierStack[0];", "+\t\t\t\t\t\tnamePosition = this.identifierPositionStack[0];", "+\t\t\t\t\t\tisTypeParam = identifier.length > 0 && identifier[0] == '<';", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tif (identifier.length > 0 && Character.isJavaIdentifierPart(identifier[0])) {", "+\t\t\t\t\tname = identifier;", "+\t\t\t\t}", "+\t\t\t\tstartPosition = (int)(this.identifierPositionStack[0]>>32);", "+\t\t\t\tendPosition = (int)this.identifierPositionStack[this.identifierPtr];", "+\t\t\t}", "+\t\t\tboolean inCompletion = (startPosition <= (this.cursorLocation+1) && this.cursorLocation <= endPosition) // completion cursor is between first and last stacked identifiers", "+\t\t\t\t|| ((startPosition == (endPosition+1) && endPosition == this.cursorLocation)); // or it's a completion on empty token", "+\t\t\tif (inCompletion) {", "+\t\t\t\tif (this.completionNode == null) {", "+\t\t\t\t\tif (isTypeParam) {", "+\t\t\t\t\t\tthis.completionNode = new CompletionOnJavadocTypeParamReference(name, namePosition, startPosition, endPosition);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.completionNode = new CompletionOnJavadocParamNameReference(name, namePosition, startPosition, endPosition);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (CompletionEngine.DEBUG) {", "+\t\t\t\t\t\tSystem.out.println(\"\tcompletion param=\"+completionNode); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t} else if (this.completionNode instanceof CompletionOnJavadocParamNameReference) {", "+\t\t\t\t\tCompletionOnJavadocParamNameReference paramNameRef = (CompletionOnJavadocParamNameReference)this.completionNode;", "+\t\t\t\t\tint nameStart = (int) (namePosition>>32);", "+\t\t\t\t\tparamNameRef.sourceStart = nameStart;", "+\t\t\t\t\tint nameEnd = (int) namePosition;", "+\t\t\t\t\tif (nameStart<this.cursorLocation && this.cursorLocation<nameEnd) {", "+\t\t\t\t\t\tparamNameRef.sourceEnd = this.cursorLocation + 1;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparamNameRef.sourceEnd = nameEnd;", "+\t\t\t\t\t}", "+\t\t\t\t\tparamNameRef.tagSourceStart = startPosition;", "+\t\t\t\t\tparamNameRef.tagSourceEnd = endPosition;", "+\t\t\t\t} else if (this.completionNode instanceof CompletionOnJavadocTypeParamReference) {", "+\t\t\t\t\tCompletionOnJavadocTypeParamReference typeParamRef = (CompletionOnJavadocTypeParamReference)this.completionNode;", "+\t\t\t\t\tint nameStart = (int) (namePosition>>32);", "+\t\t\t\t\ttypeParamRef.sourceStart = nameStart;", "+\t\t\t\t\tint nameEnd = (int) namePosition;", "+\t\t\t\t\tif (nameStart<this.cursorLocation && this.cursorLocation<nameEnd) {", "+\t\t\t\t\t\ttypeParamRef.sourceEnd = this.cursorLocation + 1;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttypeParamRef.sourceEnd = nameEnd;", "+\t\t\t\t\t}", "+\t\t\t\t\ttypeParamRef.tagSourceStart = startPosition;", "+\t\t\t\t\ttypeParamRef.tagSourceEnd = endPosition;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn valid;", "+\t\t}"]}], "num": 10728}