{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d612de04401986b1745c143c7973f64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071c8010bf828c476619b127080e7473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 80, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedVariable, boolean generateMarkerOnError) throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedVariable, boolean generateMarkerOnError) throws JavaModelException", "diff": ["+\t\t\t/* validation if needed */\r", "+\t\t\tif (generateMarkerOnError){\r", "+\t\t\t\tIJavaModelStatus status = JavaConventions.validateClasspathEntry(this, entry, false);\r", "+\t\t\t\tif (!status.isOK()) createClasspathProblemMarker(entry, status.getMessage());\r", "+\t\t\t}\r", "+\r", "-\t\t\t\t\tif (generateMarkerOnError) createClasspathProblemMarker(classpath[i], Util.bind(\"classpath.unboundVariablePath\"/*nonNLS*/, variablePath.toString()));\r", "-\t\t\t\tString msg;\r", "-\t\t\t\tif (generateMarkerOnError && (msg = getClasspathEntryErrorMessage(entry, false)) != null) createClasspathProblemMarker(classpath[i], msg);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77220805f20cc7e765c0b31b513001bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 80, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedVariable, boolean generateMarkerOnError) throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedVariable, boolean generateMarkerOnError) throws JavaModelException", "diff": ["+\t\t\t/* validation if needed */\r", "+\t\t\tif (generateMarkerOnError){\r", "+\t\t\t\tIJavaModelStatus status = JavaConventions.validateClasspathEntry(this, entry, false);\r", "+\t\t\t\tif (!status.isOK()) createClasspathProblemMarker(entry, status.getMessage());\r", "+\t\t\t}\r", "+\r", "-\t\t\t\t\tif (generateMarkerOnError) createClasspathProblemMarker(classpath[i], Util.bind(\"classpath.unboundVariablePath\"/*nonNLS*/, variablePath.toString()));\r", "-\t\t\t\tString msg;\r", "-\t\t\t\tif (generateMarkerOnError && (msg = getClasspathEntryErrorMessage(entry, false)) != null) createClasspathProblemMarker(classpath[i], msg);\r"]}], "num": 37572}