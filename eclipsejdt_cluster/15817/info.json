{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bc8b2346846f9a5aa1aecb669dec143", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26792b6d852fae2729d77de475d4c844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "fbe3f3aabed3fd943703368b065a95bc68cf5a8d", "commitAfterChange": "3b51e6fd25bf226c9bb29d6317b71df712cf5255", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t// This method binding is (java.lang.String)V\r", "-\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "-\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t}\r", "+\t\t\t\tswitch(methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_String :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_Object :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\tcase T_byte :\r", "+\t\t\t\t\t\t\tcase T_short :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)\r", "+\t\t\t\t\t\t\t\t\t|| CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.ShortConstrSignature)\r", "+\t\t\t\t\t\t\t\t\t|| CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.ByteConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "+\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310c0129b27a0ff4a596ff4699354db2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t// This method binding is (java.lang.String)V\r", "-\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "-\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t}\r", "+\t\t\t\tswitch(methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_String :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_Object :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "+\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e785ae5ba673b0f1b4f130d8695ec6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t// This method binding is (java.lang.String)V\r", "-\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "-\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t}\r", "+\t\t\t\tswitch(methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_String :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_Object :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "+\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871937cc4afe8938fbe946488933037a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t// This method binding is (java.lang.String)V\r", "-\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "-\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t}\r", "+\t\t\t\tswitch(methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_String :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_Object :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "+\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5945df5e152b5733bce6af59e22698e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t// This method binding is (java.lang.String)V\r", "-\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t} else\r", "-\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "-\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t}\r", "+\t\t\t\tswitch(methodBinding.parameters.length) {\r", "+\t\t\t\t\tcase 1:\r", "+\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "+\t\t\t\t\t\t\tcase T_String :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_Object :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_int :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_char :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_boolean :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_float :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_double :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcase T_long :\r", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "+\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\treturn -1;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\tcase 0:\r", "+\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "+\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}], "num": 15817}