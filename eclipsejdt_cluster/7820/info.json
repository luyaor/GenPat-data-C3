{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b2149015a67cc9989de51192b5494d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf64589a6c4d4369aa221d8581c7961b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void test0027() throws JavaModelException", "signatureAfterChange": " public void test0027() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0027\", \"Test.java\");", "-\t", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0026/Test.java\",", "+\t\t\"package test0027;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tZ0027<St, String>.Z0027Z.Z0027ZZ<String, String> var;\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0027 <T1, T2 extends String>{\\n\" +", "+\t\t\"\tpublic class Z0027Z {\\n\" +", "+\t\t\"\t\tpublic class Z0027ZZ <T3 extends String, T4 extends String>{\\n\" +", "+\t\t\"\t\t\t\\n\" +", "+\t\t\"\t\t}\\n\" +", "+\t\t\"\t} \\n\" +", "+\t\t\"}\");", "+", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:String    completion:String    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());", "+\t", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5111b7ec3c6928c1813225dbbadd1fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void test0026() throws JavaModelException", "signatureAfterChange": " public void test0026() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu = getCompilationUnit(\"Completion\", \"src3\", \"test0026\", \"Test.java\");", "-\t", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src3/test0026/Test.java\",", "+\t\t\"package test0026;\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"public class Test {\\n\" +", "+\t\t\"\tZ0026<String, String>.Z0026Z.Z0026ZZ<St, String> var;\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"class Z0026 <T1 extends String, T2 extends String>{\\n\" +", "+\t\t\"\tpublic class Z0026Z {\\n\" +", "+\t\t\"\t\tpublic class Z0026ZZ <T3, T4 extends String>{\\n\" +", "+\t\t\"\t\t\t\\n\" +", "+\t\t\"\t\t}\\n\" +", "+\t\t\"\t} \\n\" +", "+\t\t\"}\");", "+", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(\"should have one class\",", "-\t\t\"element:String    completion:String    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\trequestor.getResults());"]}], "num": 7820}