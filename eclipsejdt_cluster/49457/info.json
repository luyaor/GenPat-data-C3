{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62ad2bea39976ec0cc5aab7da1e09941", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09095c4b61b907ca5e5e6ffa95eed0b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "6ec24b06cd0bcb5a744d15b20332350fd24ef6a3", "commitAfterChange": "02dcf6f68bd209d5530306427455d30bd6fad0d9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static int getPossibleComplianceLevels()", "signatureAfterChange": " \tpublic static int getPossibleComplianceLevels()", "diff": ["-\t\tif (possibleComplianceLevels == -1) {", "+\t\tif (possibleComplianceLevels == UNINITIALIZED) {", "-\t\t\t\t\tpossibleComplianceLevels = F_1_3;", "+\t\t\t\t\tpossibleComplianceLevels = RUN_JAVAC ? NONE : F_1_3;", "-\t\t\t\t\tpossibleComplianceLevels = F_1_4;", "+\t\t\t\t\tpossibleComplianceLevels = RUN_JAVAC ? NONE : F_1_4;", "-\t\t\tif (possibleComplianceLevels == -1) {", "-\t\t\t\tpossibleComplianceLevels = F_1_3;", "+\t\t\tif (possibleComplianceLevels == UNINITIALIZED) {", "-\t\t\t\tboolean canRun1_4 = !\"1.0\".equals(specVersion)", "-\t\t\t\t\t&& !CompilerOptions.VERSION_1_1.equals(specVersion)", "-\t\t\t\t\t&& !CompilerOptions.VERSION_1_2.equals(specVersion)", "-\t\t\t\t\t&& !CompilerOptions.VERSION_1_3.equals(specVersion);", "-\t\t\t\tif (canRun1_4) {", "-\t\t\t\t\tpossibleComplianceLevels |= F_1_4;", "-\t\t\t\t}", "-\t\t\t\tboolean canRun1_5 = canRun1_4 && !CompilerOptions.VERSION_1_4.equals(specVersion);", "-\t\t\t\tif (canRun1_5) {", "-\t\t\t\t\tpossibleComplianceLevels |= F_1_5;", "-\t\t\t\t}", "-\t\t\t\tboolean canRun1_6 = canRun1_5 && !CompilerOptions.VERSION_1_5.equals(specVersion);", "-\t\t\t\tif (canRun1_6) {", "-\t\t\t\t\tpossibleComplianceLevels |= F_1_6;", "-\t\t\t\t}", "-\t\t\t\tboolean canRun1_7 = canRun1_6 && !CompilerOptions.VERSION_1_6.equals(specVersion);", "-\t\t\t\tif (canRun1_7) {", "-\t\t\t\t\tpossibleComplianceLevels |= F_1_7;", "+\t\t\t\tif (!RUN_JAVAC) {", "+\t\t\t\t\tpossibleComplianceLevels = F_1_3;", "+\t\t\t\t\tboolean canRun1_4 = !\"1.0\".equals(specVersion)", "+\t\t\t\t\t\t&& !CompilerOptions.VERSION_1_1.equals(specVersion)", "+\t\t\t\t\t\t&& !CompilerOptions.VERSION_1_2.equals(specVersion)", "+\t\t\t\t\t\t&& !CompilerOptions.VERSION_1_3.equals(specVersion);", "+\t\t\t\t\tif (canRun1_4) {", "+\t\t\t\t\t\tpossibleComplianceLevels |= F_1_4;", "+\t\t\t\t\t}", "+\t\t\t\t\tboolean canRun1_5 = canRun1_4 && !CompilerOptions.VERSION_1_4.equals(specVersion);", "+\t\t\t\t\tif (canRun1_5) {", "+\t\t\t\t\t\tpossibleComplianceLevels |= F_1_5;", "+\t\t\t\t\t}", "+\t\t\t\t\tboolean canRun1_6 = canRun1_5 && !CompilerOptions.VERSION_1_5.equals(specVersion);", "+\t\t\t\t\tif (canRun1_6) {", "+\t\t\t\t\t\tpossibleComplianceLevels |= F_1_6;", "+\t\t\t\t\t}", "+\t\t\t\t\tboolean canRun1_7 = canRun1_6 && !CompilerOptions.VERSION_1_6.equals(specVersion);", "+\t\t\t\t\tif (canRun1_7) {", "+\t\t\t\t\t\tpossibleComplianceLevels |= F_1_7;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (\"1.0\".equals(specVersion)", "+\t\t\t\t\t\t\t|| CompilerOptions.VERSION_1_1.equals(specVersion)", "+\t\t\t\t\t\t\t|| CompilerOptions.VERSION_1_2.equals(specVersion)", "+\t\t\t\t\t\t\t|| CompilerOptions.VERSION_1_3.equals(specVersion)", "+\t\t\t\t\t\t\t|| CompilerOptions.VERSION_1_4.equals(specVersion)) {", "+\t\t\t\t\tpossibleComplianceLevels = NONE;", "+\t\t\t\t} else {", "+\t\t\t\t\tpossibleComplianceLevels = F_1_5;", "+\t\t\t\t\tif (!CompilerOptions.VERSION_1_5.equals(specVersion)) {", "+\t\t\t\t\t\tpossibleComplianceLevels |= F_1_6;", "+\t\t\t\t\t\tif (!CompilerOptions.VERSION_1_6.equals(specVersion)) {", "+\t\t\t\t\t\t\tpossibleComplianceLevels |= F_1_7;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\tif (possibleComplianceLevels == NONE) {", "+\t\t\tSystem.out.println(\"Skipping all compliances (found none compatible with run.javac=enabled).\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d33e3a36bafabcb0ab76cb50024bf0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "717a44c6b6c761be0c48243cde9dff6857a6db32", "commitAfterChange": "df9941361641a347d1ba4ee80fe7f9c7468ba17a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\tboolean didSpecifyTarget = false;\r", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg));\r", "-\t\t\t\t\t//$NON-NLS-1$\r", "+\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg));//$NON-NLS-1$\r", "-\t\t\t\tif (!didSpecifySourceLevel) {\r", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);\r", "-\t\t\t\t}\r", "-\t\t\t\tif (!didSpecifySourceLevel) {\r", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);\r", "-\t\t\t\t}\r", "+\t\t\t\tdidSpecifyTarget = true;\r", "+\t\t\t\t} else if (currentArg.equals(\"1.3\")) { //$NON-NLS-1$\r", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_3);\r", "+\t\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$\r", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);\r", "+\t\t// check and set compliance/source/target compatibilities\r", "+\t\tif (!didSpecifyCompliance){\r", "+\t\t\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)){\r", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\t\t}\r", "+\t\t}\r", "+\t\tString compliance = (String)options.get(CompilerOptions.OPTION_Compliance);\r", "+\t\tif (CompilerOptions.VERSION_1_4.equals(compliance)){\r", "+\t\t\t\r", "+\t\t\t// default 1.4 settings\r", "+\t\t\tif (!didSpecifySourceLevel){\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);\r", "+\t\t\t}\r", "+\t\t\tif (!didSpecifyTarget){\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);\r", "+\t\t\t}\r", "+\t\t} else if (CompilerOptions.VERSION_1_3.equals(compliance)){\r", "+\r", "+\t\t\t// default 1.4 settings\r", "+\t\t\tif (!didSpecifySourceLevel){\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);\r", "+\t\t\t}\r", "+\t\t\tif (!didSpecifyTarget){\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t// compliance must be 1.4 if source is 1.4\r", "+\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)\r", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)){ \r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource14\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\t\r", "+\t\t// target must be 1.4 if source is 1.4\r", "+\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)\r", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)){ \r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleTargetForSource14\", (String)options.get(CompilerOptions.OPTION_TargetPlatform))); //$NON-NLS-1$\r", "+\t\t}\r", "+\r"]}], "num": 49457}