{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "227a08d5d3798cb849a487d35bd053f1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f1c66c74f0851890b9757792017fff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "48a5342062421f8e25483359cb79a1a2051d4bb8", "commitAfterChange": "44bb613cc5c3c46c068bd744b8bd3672d2dacb7a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r public void compile(ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \r public void compile(ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tif (options.verbose) System.out.println(\t\"process \" + (i + 1) + \"/\" + totalUnits + \" : \" + new String(unitsToProcess[i].getFileName())); \r", "+\t\t\t\tif (options.verbose) System.out.println(Util.bind(\"compilation.process\"/*nonNLS*/,new String[]{String.valueOf(i + 1),String.valueOf(totalUnits),new String(unitsToProcess[i].getFileName())})); \r", "-\t\t\t\t\tSystem.out.println(\"done    \" + (i + 1) + \"/\" + totalUnits + \" : \" + new String(unitsToProcess[i].getFileName())); \r", "+\t\t\t\t\tSystem.out.println(Util.bind(\"compilation.done\"/*nonNLS*/,new String[]{String.valueOf(i + 1),String.valueOf(totalUnits),new String(unitsToProcess[i].getFileName())}));  \r", "-\t\t\tSystem.out.println(totalUnits + \" units compiled\");\r", "+\t\t\tSystem.out.println(Util.bind(\"compilation.units\"/*nonNLS*/,String.valueOf(totalUnits)));\r", "-\t\t\tSystem.out.println(totalUnits + \" unit compiled\");\r", "+\t\t\tSystem.out.println(Util.bind(\"compilation.unit\"/*nonNLS*/,String.valueOf(totalUnits)));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5935352944110cdd67c59eb628c66f55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f74715a51fe7f041c72bc80d27202c276ba5b2e3", "commitAfterChange": "f253b0c587ecac9d5c91cf7491378fa42651550b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public static String buildAllDirectoriesInto(String outputPath, String relativeFileName) throws IOException", "signatureAfterChange": "\r public static String buildAllDirectoriesInto(String outputPath, String relativeFileName) throws IOException", "diff": ["-\t\t\tSystem.out.println(\" The outDir is a file = \" + f.getAbsolutePath());\r", "-\t\t\tthrow new IOException(\"The outDir is a file not a directory.\");\r", "+\t\t\tSystem.out.println(Util.bind(\"output.isFile\"/*nonNLS*/,f.getAbsolutePath()));\r", "+\t\t\tthrow new IOException(Util.bind(\"output.isFileNotDirectory\"/*nonNLS*/));\r", "-\t\t\tSystem.out.println(\" The output dir name is = \" + f.getAbsolutePath());\r", "-\t\t\tthrow new IOException(\"The outDir is not a valid directory name. All the directories cannot be created.\");\r", "+\t\t\tSystem.out.println(Util.bind(\"output.dirName\"/*nonNLS*/,f.getAbsolutePath()));\r", "+\t\t\tthrow new IOException(Util.bind(\"output.notValidAll\"/*nonNLS*/));\r", "-\t\t\t\tSystem.out.println(\" file name = \" + f.getName());\r", "-\t\t\t\tthrow new IOException(\"The outDir is not a valid directory name. The directory cannot be created.\");\r", "+\t\t\t\tSystem.out.println(Util.bind(\"output.fileName\"/*nonNLS*/,f.getName()));\r", "+\t\t\t\tthrow new IOException(Util.bind(\"output.notValid\"/*nonNLS*/));\r"]}], "num": 21631}