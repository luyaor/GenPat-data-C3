{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d882c0a35390fca24c9234ef3f0a21c8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50b2aac62605deaba05736c9601370f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "c74124c71dc16aadffc9c127481cf29440dd03c8", "commitAfterChange": "2d053de9651cebac3cf0a82f4012b7196ccb5c83", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t\tBoundSet solution = inferenceContext.solve(); // TODO: minimal resolving for only \u03b1", "+\t\t\t\t\tBoundSet solution = inferenceContext.solve(new InferenceVariable[]{alpha});", "+\t\t\t\t\tif (solution == null)", "+\t\t\t\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0767415320b4c168986cac7dcd305a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\t\tif (ext != null && (ext.equalsIgnoreCase(\"zip\") || ext.equalsIgnoreCase(\"jar\"))) {\r", "+\t\t\tif (ext != null && (ext.equalsIgnoreCase(\"zip\"/*nonNLS*/) || ext.equalsIgnoreCase(\"jar\"/*nonNLS*/))) {\r", "+\t\t\tif (resource == null) return new IPackageFragmentRoot[]{};\r", "-\t\t\t\treturn new IPackageFragmentRoot[] {};\r", "+\t\t\t\treturn new IPackageFragmentRoot[]{};\r"]}], "num": 26295}