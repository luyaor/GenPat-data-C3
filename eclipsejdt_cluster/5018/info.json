{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa68830199f4f13e2063170c2137ed77", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f84d3f2cdefb6bbc420753456afdbe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchParticipant.java", "commitBeforeChange": "70b780777178f4dd831373dfdb6a82dc7d72da2c", "commitAfterChange": "52fd80fda11aa80700968fe6bc7615e538e4f584", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "signatureAfterChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "diff": ["-\t\tJavaModelManager.getJavaModelManager().getIndexManager().scheduleDocumentIndexing(document, containerPath, indexLocation.toOSString(), this);", "+\t\tIndexManager manager = JavaModelManager.getJavaModelManager().getIndexManager();", "+\t\tString osIndexLocation = indexLocation.toOSString();", "+\t\t// TODO (jerome) should not have to create index manually, should expose API that recreates index instead", "+\t\tmanager.ensureIndexExists(osIndexLocation, containerPath);", "+\t\tmanager.scheduleDocumentIndexing(document, containerPath, osIndexLocation, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f971a0eb25196eb28e2452cdc17805", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "b7d52b84069d6da4bfc60ab9e8dfc6949a853984", "commitAfterChange": "ea6ea4eaa672c0b74ebc21be43c88215ca068756", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void elementRemoved(Openable element)", "signatureAfterChange": " \tprotected void elementRemoved(Openable element)", "diff": ["-\t\t\t\tJavaModelManager.getJavaModelManager().removePerProjectInfo(", "-\t\t\t\t\t(JavaProject) element);", "+\t\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\t\tJavaProject javaProject = (JavaProject) element;", "+\t\t\t\tmanager.removePerProjectInfo(javaProject);", "+\t\t\t\tmanager.containerRemove(javaProject);"]}], "num": 5018}