{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71a8bad21ca836799cd6c96dca44d822", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f96a8d607225a63cb7f6f8c02bd287f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "259752fd2611ae86a8e7deb13311cd77026ab6f4", "commitAfterChange": "4725cc4b92cda70d0724324edfd82ed8a46041bc", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tITypeBinding resolveType(AnonymousClassDeclaration type)", "signatureAfterChange": " \tITypeBinding resolveType(AnonymousClassDeclaration type)", "diff": ["-\t\tif (this.checkModificationCount && this.modificationCount != type.getAST().modificationCount()) {", "-\t\t\treturn null;", "-\t\t}", "-\t\torg.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration anonymousLocalTypeDeclaration = (org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration) this.newAstToOldAst.get(type);", "-\t\tif (anonymousLocalTypeDeclaration != null) {", "-\t\t\tITypeBinding typeBinding = this.getTypeBinding(anonymousLocalTypeDeclaration.binding);", "-\t\t\tif (typeBinding == null) {", "-\t\t\t\treturn null;", "+\t\tfinal Object node = this.newAstToOldAst.get(type);", "+\t\tif (node instanceof org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration anonymousLocalTypeDeclaration = (org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration) node;", "+\t\t\tif (anonymousLocalTypeDeclaration != null) {", "+\t\t\t\tITypeBinding typeBinding = this.getTypeBinding(anonymousLocalTypeDeclaration.binding);", "+\t\t\t\tif (typeBinding == null) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\tthis.bindingsToAstNodes.put(typeBinding, type);", "+\t\t\t\treturn typeBinding;", "-\t\t\tthis.bindingsToAstNodes.put(typeBinding, type);", "-\t\t\treturn typeBinding;", "-\t\treturn super.resolveType(type);", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ccf8333c3920dc685a941e3906dd08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "259752fd2611ae86a8e7deb13311cd77026ab6f4", "commitAfterChange": "4725cc4b92cda70d0724324edfd82ed8a46041bc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tIMethodBinding resolveMethod(MethodDeclaration method)", "signatureAfterChange": " \tIMethodBinding resolveMethod(MethodDeclaration method)", "diff": ["-\t\tif (this.checkModificationCount && this.modificationCount != method.getAST().modificationCount()) {", "-\t\t\treturn null;", "-\t\t}", "-\t\tAbstractMethodDeclaration methodDeclaration = (AbstractMethodDeclaration) this.newAstToOldAst.get(method);", "-\t\tif (methodDeclaration != null) {", "-\t\t\tIMethodBinding methodBinding = this.getMethodBinding(methodDeclaration.binding);", "-\t\t\tif (methodBinding == null) {", "-\t\t\t\treturn null;", "+\t\tObject oldNode = this.newAstToOldAst.get(method);", "+\t\tif (oldNode instanceof AbstractMethodDeclaration) {", "+\t\t\tAbstractMethodDeclaration methodDeclaration = (AbstractMethodDeclaration) this.newAstToOldAst.get(method);", "+\t\t\tif (methodDeclaration != null) {", "+\t\t\t\tIMethodBinding methodBinding = this.getMethodBinding(methodDeclaration.binding);", "+\t\t\t\tif (methodBinding == null) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\tthis.bindingsToAstNodes.put(methodBinding, method);", "+\t\t\t\treturn methodBinding;", "-\t\t\tthis.bindingsToAstNodes.put(methodBinding, method);", "-\t\t\treturn methodBinding;", "-\t\treturn super.resolveMethod(method);", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a66840da2139ff0bd4ed77a99b13aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "259752fd2611ae86a8e7deb13311cd77026ab6f4", "commitAfterChange": "4725cc4b92cda70d0724324edfd82ed8a46041bc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tITypeBinding resolveType(TypeDeclaration type)", "signatureAfterChange": " \tITypeBinding resolveType(TypeDeclaration type)", "diff": ["-\t\tif (this.checkModificationCount && this.modificationCount != type.getAST().modificationCount()) {", "-\t\t\treturn null;", "-\t\t}", "-\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.newAstToOldAst.get(type);", "-\t\tif (typeDeclaration != null) {", "-\t\t\tITypeBinding typeBinding = this.getTypeBinding(typeDeclaration.binding);", "-\t\t\tif (typeBinding == null) {", "-\t\t\t\treturn null;", "+\t\tfinal Object node = this.newAstToOldAst.get(type);", "+\t\tif (node instanceof org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) node;", "+\t\t\tif (typeDeclaration != null) {", "+\t\t\t\tITypeBinding typeBinding = this.getTypeBinding(typeDeclaration.binding);", "+\t\t\t\tif (typeBinding == null) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\tthis.bindingsToAstNodes.put(typeBinding, type);", "+\t\t\t\treturn typeBinding;", "-\t\t\tthis.bindingsToAstNodes.put(typeBinding, type);", "-\t\t\treturn typeBinding;", "-\t\treturn super.resolveType(type);", "+\t\treturn null;"]}], "num": 59360}