{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4da5968b1f5d13f0832b3a237dd9a6de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f076036b032a51882c7d184905a3983", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["-\tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration) {", "+\tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration) {", "+\t\t\tif (isInterface) {", "+\t\t\t\t// interface cannot have a constructor", "+\t\t\t\tmethodDecl.setFlags(methodDecl.getFlags() | ASTNode.MALFORMED);", "+\t\t\t}", "+\t\t\t\t// no return type for a method that is not a constructor", "+\t\t\t\tmethodDecl.setFlags(methodDecl.getFlags() | ASTNode.MALFORMED);", "-\t\t\t\t\tcase AST.JLS2_INTERNAL :", "-\t\t\t\t\t\tmethodDecl.setFlags(methodDecl.getFlags() | ASTNode.MALFORMED);", "-\t\t\t\t\t\tbreak;", "-\t\tint declarationSourceEnd = methodDeclaration.bodyEnd;", "-\t\tmethodDecl.setSourceRange(declarationSourceStart, declarationSourceEnd - declarationSourceStart + 1);", "-\t\tint closingPosition = retrieveRightBraceOrSemiColonPosition(methodDeclaration.bodyEnd + 1, methodDeclaration.declarationSourceEnd);", "+\t\tint bodyEnd = methodDeclaration.bodyEnd;", "+\t\tmethodDecl.setSourceRange(declarationSourceStart, bodyEnd - declarationSourceStart + 1);", "+\t\tint declarationSourceEnd = methodDeclaration.declarationSourceEnd;", "+\t\tint rightBraceOrSemiColonPositionStart = bodyEnd == declarationSourceEnd ? bodyEnd : bodyEnd + 1;", "+\t\tint closingPosition = retrieveRightBraceOrSemiColonPosition(rightBraceOrSemiColonPositionStart, declarationSourceEnd);", "-\t\t\tend = retrieveRightBrace(methodDeclaration.bodyEnd, methodDeclaration.declarationSourceEnd);", "+\t\t\tend = retrieveRightBrace(methodDeclaration.bodyEnd, declarationSourceEnd);", "-\t\t\tif (block != null && (Modifier.isAbstract(methodDecl.getModifiers()) || Modifier.isNative(methodDecl.getModifiers()))) {", "+\t\t\tif (block != null", "+\t\t\t\t\t&& (Modifier.isAbstract(methodDecl.getModifiers())", "+\t\t\t\t\t\t\t|| Modifier.isNative(methodDecl.getModifiers())", "+\t\t\t\t\t\t\t|| isInterface)) {", "-\t\t\t\tstart = retrieveStartBlockPosition(methodHeaderEnd, declarationSourceEnd);", "+\t\t\t\tstart = retrieveStartBlockPosition(methodHeaderEnd, bodyEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e293a948a9e3ee92a4020e8af94a3227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "commitAfterChange": "974c16da6f3c62d8f216865177d38ac0f89806ec", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " final char[] optimizedCurrentTokenSource4()", "signatureAfterChange": " final char[] optimizedCurrentTokenSource4()", "diff": ["-\tchar c0, c1, c2, c3;", "-\tlong hash = ", "-\t\t((((long) (c0 = this.source[this.startPosition])) << 18)", "-\t\t\t+ ((c1 = this.source[this.startPosition + 1]) << 12)", "-\t\t\t+ ((c2 = this.source[this.startPosition + 2]) << 6)", "-\t\t\t+ (c3 = this.source[this.startPosition + 3]))", "-\t\t\t% TableSize; ", "+\tchar[] src = this.source;", "+\tint start = this.startPosition;", "+\tchar c0 = src[start];", "+\tchar c1 = src[start+1];", "+\tchar c2 = src[start+2];", "+\tchar c3 = src[start+3];", "+\tlong hash = ((((long) c0) << 18) + (c1 << 12) + (c2 << 6) + c3) % TableSize; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77d7506b6d470607d0937b358d4fd2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "13b501923d975b39fcf9769686302cfbbf5a49d6", "commitAfterChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " final char[] optimizedCurrentTokenSource4()", "signatureAfterChange": " final char[] optimizedCurrentTokenSource4()", "diff": ["-\tchar c0, c1, c2, c3;", "-\tlong hash = ", "-\t\t((((long) (c0 = this.source[this.startPosition])) << 18)", "-\t\t\t+ ((c1 = this.source[this.startPosition + 1]) << 12)", "-\t\t\t+ ((c2 = this.source[this.startPosition + 2]) << 6)", "-\t\t\t+ (c3 = this.source[this.startPosition + 3]))", "-\t\t\t% TableSize; ", "+\tchar[] src = this.source;", "+\tint start = this.startPosition;", "+\tchar c0 = src[start];", "+\tchar c1 = src[start+1];", "+\tchar c2 = src[start+2];", "+\tchar c3 = src[start+3];", "+\tlong hash = ((((long) c0) << 18) + (c1 << 12) + (c2 << 6) + c3) % TableSize; "]}], "num": 60377}