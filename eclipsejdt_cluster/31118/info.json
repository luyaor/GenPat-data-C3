{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31372d11ce6db86b2b0cb4cb78177404", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e2ea4368064e7aa43456861b2daa62c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 270, "signatureBeforeChange": " public void test120a()", "signatureAfterChange": " public void test120a()", "diff": ["-\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in Bar.java (at line 2)\\n\" + ", "+\t\t\"\tint getThing(V v) { return 1; }\\n\" + ", "+\t\t\"\t    ^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method getThing(V) has the same erasure getThing(Object) as another method in type Foo<V,E>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in Bar.java (at line 3)\\n\" + ", "+\t\t\"\tboolean getThing(E e) { return true; }\\n\" + ", "+\t\t\"\t        ^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Method getThing(E) has the same erasure getThing(Object) as another method in type Foo<V,E>\\n\" + ", "+\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a66646e17e86c0a8fd80e81367c73fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " \tpublic void test051b()", "signatureAfterChange": " \tpublic void test051b()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid foo(A<String> a) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(A<String>) has the same erasure foo(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject foo(A<Integer> a) { return null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(A<Integer>) has the same erasure foo(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\"", "+/* javac 7", "+X.java:3: name clash: foo(A<Integer>) and foo(A<String>) have the same erasure", "+        Object foo(A<Integer> a) { return null; }", "+               ^", "+1 error", "+ */"]}], "num": 31118}