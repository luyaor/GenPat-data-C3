{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "672ba15ccbacfccb9e97ad8cdc463cb7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f022f21a8cbfa1bdd153fa30fc1ff8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "6f6b135c3443a1f802996624e28e3fccc1ffade1", "commitAfterChange": "179d5d1c5c2a0bb83cd907094171a8fb72cf869e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "signatureAfterChange": "\r \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "diff": ["-\t\tif (type == null) {\r", "-\t\t\t// look inside the compilation unit that is being searched currently\r", "-\t\t\t//for a non-public or inner type.\r", "-\t\t\tif (this.unitToLookInside != null) {\r", "-\t\t\t\tif (this.unitToLookInside.getParent().getElementName().equals(packageName)) {\r", "-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tIType[] allTypes = this.unitToLookInside.getTypes();\r", "-\t\t\t\t\t\tfor (int i = 0; i < allTypes.length; i++) {\r", "-\t\t\t\t\t\t\tif (allTypes[i].getElementName().equals(typeName)) {\r", "-\t\t\t\t\t\t\t\ttype = allTypes[i];\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79331ebfc87177a56893efb312178021", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t\t\tidenticalVariables: { // if substituted with original variables, then answer the generic type itself", "-\t\t\t\t\t\tif (substitutedEnclosing != null) {", "-\t\t\t\t\t\t\t//if (!(substitutedEnclosing instanceof SourceTypeBinding)) break identicalVariables;", "-\t\t\t\t\t\t\tif (substitutedEnclosing != originalEnclosing) break identicalVariables;\t\t\t\t\t\t", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (originalParameterizedType.type.isBinaryBinding()) break identicalVariables; // generic binary is never used as is, see 85262", "-\t\t\t\t\t\tTypeVariableBinding[] originalVariables = originalParameterizedType.type.typeVariables();", "-\t\t\t\t\t\tfor (int i = 0, length = originalVariables.length; i < length; i++) {", "-\t\t\t\t\t\t\tif (substitutedArguments[i] != originalVariables[i]) break identicalVariables;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn originalParameterizedType.type;", "-\t\t\t\t\t}", "+//\t\t\t\t\tidenticalVariables: { // if substituted with original variables, then answer the generic type itself", "+//\t\t\t\t\t\tif (substitutedEnclosing != null) {", "+//\t\t\t\t\t\t\t//if (!(substitutedEnclosing instanceof SourceTypeBinding)) break identicalVariables;", "+//\t\t\t\t\t\t\tif (substitutedEnclosing != originalEnclosing) break identicalVariables;\t\t\t\t\t\t", "+//\t\t\t\t\t\t}", "+//\t\t\t\t\t\tif (originalParameterizedType.type.isBinaryBinding()) break identicalVariables; // generic binary is never used as is, see 85262", "+//\t\t\t\t\t\tTypeVariableBinding[] originalVariables = originalParameterizedType.type.typeVariables();", "+//\t\t\t\t\t\tfor (int i = 0, length = originalVariables.length; i < length; i++) {", "+//\t\t\t\t\t\t\tif (substitutedArguments[i] != originalVariables[i]) break identicalVariables;", "+//\t\t\t\t\t\t}", "+//\t\t\t\t\t\treturn originalParameterizedType.type;", "+//\t\t\t\t\t}", "-\t\t\t\tif (substitutedArguments != originalArguments || substitutedEnclosing != originalEnclosing) {", "-\t\t\t\t\treturn substitution.environment().createParameterizedType(originalReferenceType, substitutedArguments, substitutedEnclosing);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+//\t\t\t\tif (substitutedArguments != originalArguments || substitutedEnclosing != originalEnclosing) {", "+\t\t\t\treturn substitution.environment().createParameterizedType(originalReferenceType, substitutedArguments, substitutedEnclosing);", "+//\t\t\t\t}", "+//\t\t\t\tbreak;"]}], "num": 11270}