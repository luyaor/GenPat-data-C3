{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c0d7a28accad86dd068cab1c34b3fe7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "152d01fdcf271de4a0732ddbaf56a26c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "6781b5445d9813f939573ded9d37ee82c9dbbd15", "commitAfterChange": "6989e5bb4ed8f3be37ea69298930332629e9b475", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tTypeBinding receiverErasure = this.receiverType.erasure();", "+\t\tif (receiverErasure instanceof ReferenceBinding) {", "+\t\t\tReferenceBinding match = ((ReferenceBinding)receiverErasure).findSuperTypeErasingTo((ReferenceBinding)this.binding.declaringClass.erasure());", "+\t\t\tif (match == null) {", "+\t\t\t\tthis.receiverType = this.binding.declaringClass; // handle indirect inheritance thru variable secondary bound", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae870656116fd6c7aee9fc9d4575126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "520c83ffe744bff7033f38d9dae19a34f622d060", "commitAfterChange": "dd7653848d6e210b553f9a046fbf18fb94d2a610", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public boolean detectAnnotationCycle()", "signatureAfterChange": " public boolean detectAnnotationCycle()", "diff": ["+\tboolean inCycle = false; // check each method before failing", "-\t\tif (returnType.isAnnotationType() && ((ReferenceBinding) returnType).detectAnnotationCycle()) {", "+\t\tif (this == returnType) {", "+\t\t\tif (this instanceof SourceTypeBinding) {", "+\t\t\t\tMethodDeclaration decl = (MethodDeclaration) currentMethods[i].sourceMethod();", "+\t\t\t\t((SourceTypeBinding) this).scope.problemReporter().annotationCircularity(this, this, decl != null ? decl.returnType : null);", "+\t\t\t}", "+\t\t} else if (returnType.isAnnotationType() && ((ReferenceBinding) returnType).detectAnnotationCycle()) {", "-\t\t\treturn true;", "+\t\t\tinCycle = true;", "+\tif (inCycle)", "+\t\treturn true;"]}], "num": 17064}