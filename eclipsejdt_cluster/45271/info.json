{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73c0c170c34fdf650cb71fb08cb3dfc2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88222149d4990bc98d5d385662ee19d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "fb6bfab81c6e6aeb7fa0724cc6e6c643983f63cf", "commitAfterChange": "fb2eb7acd5b5f912d44476dd03c9e941ddf18d2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "diff": ["+\tboolean containsEmptyTask = false;", "-\t\tif (msgStart == end)", "-\t\t\tcontinue; // empty", "+\t\tif (msgStart == end) {", "+\t\t\t// if the description is empty, we might want to see if two tags are not sharing the same message", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=110797", "+\t\t\tcontainsEmptyTask = true;", "+\t\t\tcontinue;", "+\t\t}", "+\tif (containsEmptyTask) {", "+\t\tfor (int i = foundTaskIndex, max = this.foundTaskCount; i < max; i++) {", "+\t\t\tif (this.foundTaskMessages[i].length == 0) {", "+\t\t\t\tloop: for (int j = i + 1; j < max; j++) {", "+\t\t\t\t\tif (this.foundTaskMessages[j].length != 0) {", "+\t\t\t\t\t\tthis.foundTaskMessages[i] = this.foundTaskMessages[j];", "+\t\t\t\t\t\tthis.foundTaskPositions[i][1] = this.foundTaskPositions[j][1];", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2f7a72f8bd71db56f5893eb7b73e1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "fb6bfab81c6e6aeb7fa0724cc6e6c643983f63cf", "commitAfterChange": "fb2eb7acd5b5f912d44476dd03c9e941ddf18d2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd) throws InvalidInputException", "diff": ["+\tboolean containsEmptyTask = false;", "-\t\tif (msgStart == end)", "-\t\t\tcontinue; // empty", "+\t\tif (msgStart == end) {", "+\t\t\t// if the description is empty, we might want to see if two tags are not sharing the same message", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=110797", "+\t\t\tcontainsEmptyTask = true;", "+\t\t\tcontinue;", "+\t\t}", "+\t}", "+\tif (containsEmptyTask) {", "+\t\tfor (int i = foundTaskIndex, max = this.foundTaskCount; i < max; i++) {", "+\t\t\tif (this.foundTaskMessages[i].length == 0) {", "+\t\t\t\tloop: for (int j = i + 1; j < max; j++) {", "+\t\t\t\t\tif (this.foundTaskMessages[j].length != 0) {", "+\t\t\t\t\t\tthis.foundTaskMessages[i] = this.foundTaskMessages[j];", "+\t\t\t\t\t\tthis.foundTaskPositions[i][1] = this.foundTaskPositions[j][1];", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 45271}