{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7b2bd729c92c8e7e75a6c5e846b9baa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71451b5cf3bcb61714f1a2007e96798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows IOException", "signatureAfterChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows CoreException", "diff": ["-\t\tthrows IOException", "+\t\tthrows CoreException", "+\t\tcatch (IOException e) {", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_ioException, e));", "+\t\t}", "-\t\t\tthrow new IOException(\"Unable to parse: \" + e); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_couldNotParse, e));", "-\t\t\tthrow new IOException(\"Unable to get parser: \" + e); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_parserConfigError, e));", "-\t\t\tthrow new IOException(\"Incorrect file format. File must begin with \" + FACTORYPATH_TAG); //$NON-NLS-1$", "+\t\t\tIOException e = new IOException(\"Incorrect file format. File must begin with \" + FACTORYPATH_TAG); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_ioException, e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b76217cd3af6e24965a29a3ea85bfe95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.pluggable.core/src/org/eclipse/jdt/internal/apt/pluggable/core/dispatch/IdeMessagerImpl.java", "commitBeforeChange": "ba69d22a0556f7a9cfe93e083652f61a196c0285", "commitAfterChange": "27aef0560bb19b81e8fa90224ee21a025635acc0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void printMessage(Kind kind, CharSequence msg, Element e, AnnotationMirror a, \t\t\tAnnotationValue v)", "signatureAfterChange": " \tpublic void printMessage(Kind kind, CharSequence msg, Element e, AnnotationMirror a, \t\t\tAnnotationValue v)", "diff": ["-\t\tCategorizedProblem problem = BatchMessagerImpl.createProblem(kind, msg, e);", "-\t\tApt6Plugin.log(new Status(IStatus.INFO, Apt6Plugin.PLUGIN_ID, Apt6Plugin.STATUS_EXCEPTION, problem.toString(), null));", "+\t\tAptProblem problem = BatchMessagerImpl.createProblem(kind, msg, e);", "+\t\tif (kind == Kind.NOTE) {", "+\t\t\tApt6Plugin.log(new Status(IStatus.INFO, Apt6Plugin.PLUGIN_ID, Apt6Plugin.STATUS_EXCEPTION, problem.getMessage(), null));", "+\t\t}", "+\t\telse if (null != problem._referenceContext) {", "+\t\t\tCompilationResult result = problem._referenceContext.compilationResult();", "+\t\t\tresult.record(problem, problem._referenceContext);", "+\t\t}", "+\t\telse {", "+\t\t\t// Unknown reference context; e.g., reported against an element not being compiled.", "+\t\t\t// TODO: report against project??  log??", "+\t\t\tApt6Plugin.log(new Status(IStatus.INFO, Apt6Plugin.PLUGIN_ID, Apt6Plugin.STATUS_EXCEPTION, problem.getMessage(), null));", "+\t\t}"]}], "num": 3667}