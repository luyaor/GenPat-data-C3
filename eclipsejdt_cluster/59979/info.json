{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58e312e691242b228b525c2e27b5aad8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a01907a017a4727e72a678a61d7bfc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic synchronized void parentFileDeleted( IFile parent, IProgressMonitor monitor )  \t\tthrows CoreException", "signatureAfterChange": " \tpublic void parentFileDeleted( IFile parent, IProgressMonitor monitor )  \t\tthrows CoreException", "diff": ["-\tpublic synchronized void parentFileDeleted( IFile parent, IProgressMonitor monitor ) ", "+\tpublic void parentFileDeleted( IFile parent, IProgressMonitor monitor ) ", "-\t\tSet<IFile> derivedFiles = _parentFile2GeneratedFiles.get( parent );", "+\t\tSet<IFile> generatedFiles;", "-\t\tIterator<IFile> it = derivedFiles.iterator(); ", "-\t\twhile ( it.hasNext() )", "+\t\tsynchronized( this )", "-\t\t\tIFile generatedFile = it.next();", "-\t\t\tdeleteGeneratedFile( generatedFile, parent, monitor );", "+\t\t\tgeneratedFiles = _parentFile2GeneratedFiles.get( parent );", "+\t\t\t// make a copy to avoid race conditions", "+\t\t\tgeneratedFiles = new HashSet<IFile>( generatedFiles );", "+\t\t\t", "+\t\tfor ( IFile generatedFile : generatedFiles )", "+\t\t\tdeleteGeneratedFile( generatedFile, parent, monitor );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bf2169e22021063a78d655e279a1d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic synchronized void parentWorkingCopyDiscarded( IFile parentFile ) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void parentWorkingCopyDiscarded( IFile parentFile ) \t\tthrows JavaModelException", "diff": ["-\tpublic synchronized void parentWorkingCopyDiscarded( IFile parentFile )", "+\tpublic void parentWorkingCopyDiscarded( IFile parentFile )", "-\t\tSet<IFile> derivedFiles = _parentFile2GeneratedFiles.get( parentFile );", "-\t\tif ( derivedFiles == null || derivedFiles.size() == 0 )", "-\t\t\treturn;", "-\t\t", "-\t\tIterator<IFile> it = derivedFiles.iterator();", "-\t\twhile ( it.hasNext() )", "+\t\tSet<IFile> generatedFiles;", "+\t\tsynchronized( this )", "-\t\t\tIFile f = it.next();", "-\t\t\tdiscardGeneratedWorkingCopy( f, parentFile );", "+\t\t\tgeneratedFiles = _parentFile2GeneratedFiles.get( parentFile );", "+\t\t\tif ( generatedFiles == null || generatedFiles.size() == 0 )", "+\t\t\t\treturn;", "+\t\t", "+\t\t\t// make a copy to prevent race conditions", "+\t\t\tgeneratedFiles = new HashSet<IFile>( generatedFiles );", "+\t\t", "+\t\tfor ( IFile generatedFile : generatedFiles )", "+\t\t\tdiscardGeneratedWorkingCopy( generatedFile, parentFile );"]}], "num": 59979}