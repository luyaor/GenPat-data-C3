{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95db96c433e34add26de22ef251eab0c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5130424c9b4e378b18722071b8fac4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodDeclarationPattern.java", "commitBeforeChange": "8032392aee6168afb7d9361a5e7c32ded0b6567a", "commitAfterChange": "af7c555b94268663ad75bc44adea174c67a820bf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "signatureAfterChange": " public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "diff": ["-\t", "-\t// selector", "-\tif (!this.matchesName(this.selector, method.getSelector()))", "-\t\treturn false;", "+\tif (!this.matchesName(this.selector, method.getSelector())) return false;", "-\tIBinaryType declaringType = (IBinaryType)enclosingBinaryInfo;", "-\tif (declaringType != null) {", "+\tif (enclosingBinaryInfo != null && (this.declaringSimpleName != null || this.declaringQualification != null)) {", "+\t\tIBinaryType declaringType = (IBinaryType)enclosingBinaryInfo;", "-\t\tif (!this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringTypeName)) {", "+\t\tif (!this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringTypeName))", "-\t\t}", "-\tString methodDescriptor = new String(method.getMethodDescriptor()).replace('/', '.');", "-", "-\t// look at return type only if declaring type is not specified", "-\tif (this.declaringSimpleName == null) {", "-\t\tString returnTypeSignature = Signature.toString(Signature.getReturnType(methodDescriptor));", "-\t\tif (!this.matchesType(this.returnSimpleName, this.returnQualification, returnTypeSignature.toCharArray())) {", "-\t\t\treturn false;", "-\t\t}", "-\t}", "-\t\t", "-\tif (parameterCount > -1) {", "-\t\tString[] arguments = Signature.getParameterTypes(methodDescriptor);", "-\t\tint argumentCount = arguments.length;", "-\t\tif (parameterCount != argumentCount)", "-\t\t\treturn false;", "-\t\tfor (int i = 0; i < parameterCount; i++) {", "-\t\t\tchar[] qualification = this.parameterQualifications[i];", "-\t\t\tchar[] type = this.parameterSimpleNames[i];", "-\t\t\tif (!this.matchesType(type, qualification, Signature.toString(arguments[i]).toCharArray()))", "+\tif (parameterCount > -1 || this.declaringSimpleName == null) {", "+\t\tString methodDescriptor = new String(method.getMethodDescriptor()).replace('/', '.');", "+", "+\t\tif (parameterCount > -1) {", "+\t\t\tString[] arguments = Signature.getParameterTypes(methodDescriptor);", "+\t\t\tint argumentCount = arguments.length;", "+\t\t\tif (parameterCount != argumentCount) return false;", "+\t\t\tfor (int i = 0; i < parameterCount; i++) {", "+\t\t\t\tchar[] qualification = this.parameterQualifications[i];", "+\t\t\t\tchar[] type = this.parameterSimpleNames[i];", "+\t\t\t\tif (!this.matchesType(type, qualification, Signature.toString(arguments[i]).toCharArray()))", "+\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+", "+\t\t// look at return type only if declaring type is not specified", "+\t\tif (this.declaringSimpleName == null) {", "+\t\t\tString returnTypeSignature = Signature.toString(Signature.getReturnType(methodDescriptor));", "+\t\t\tif (!this.matchesType(this.returnSimpleName, this.returnQualification, returnTypeSignature.toCharArray())) {", "+\t\t\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1b339b27fb92868faff0502c721d9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private boolean checkKeyword()", "signatureAfterChange": " private boolean checkKeyword()", "diff": ["+\t\t\t\t&& (!this.compilationUnit.isPackageInfo() || this.compilationUnit.currentPackage != null)", "-\t\t\tif((this.lastModifiers & ClassFileConstants.AccPublic) == 0) {", "-\t\t\t\tboolean hasNoPublicType = true;", "-\t\t\t\tfor (int i = 0; i < unit.typeCount; i++) {", "-\t\t\t\t\tif((unit.types[i].typeDeclaration.modifiers & ClassFileConstants.AccPublic) != 0) {", "-\t\t\t\t\t\thasNoPublicType = false;", "+\t\t\tif (!this.compilationUnit.isPackageInfo()) {", "+\t\t\t\tif((this.lastModifiers & ClassFileConstants.AccPublic) == 0) {", "+\t\t\t\t\tboolean hasNoPublicType = true;", "+\t\t\t\t\tfor (int i = 0; i < unit.typeCount; i++) {", "+\t\t\t\t\t\tif((unit.types[i].typeDeclaration.modifiers & ClassFileConstants.AccPublic) != 0) {", "+\t\t\t\t\t\t\thasNoPublicType = false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif(hasNoPublicType) {", "+\t\t\t\t\t\tkeywords[count++] = Keywords.PUBLIC;", "-\t\t\t\tif(hasNoPublicType) {", "-\t\t\t\t\tkeywords[count++] = Keywords.PUBLIC;", "+\t\t\t\tif((this.lastModifiers & ClassFileConstants.AccAbstract) == 0", "+\t\t\t\t\t&& (this.lastModifiers & ClassFileConstants.AccFinal) == 0) {", "+\t\t\t\t\tkeywords[count++] = Keywords.ABSTRACT;", "-\t\t\t}", "-\t\t\tif((this.lastModifiers & ClassFileConstants.AccAbstract) == 0", "-\t\t\t\t&& (this.lastModifiers & ClassFileConstants.AccFinal) == 0) {", "-\t\t\t\tkeywords[count++] = Keywords.ABSTRACT;", "-\t\t\t}", "-\t\t\tif((this.lastModifiers & ClassFileConstants.AccAbstract) == 0", "-\t\t\t\t&& (this.lastModifiers & ClassFileConstants.AccFinal) == 0) {", "-\t\t\t\tkeywords[count++] = Keywords.FINAL;", "-\t\t\t}", "-", "-\t\t\tkeywords[count++] = Keywords.CLASS;", "-\t\t\tif (this.options.complianceLevel >= ClassFileConstants.JDK1_5) {", "-\t\t\t\tkeywords[count++] = Keywords.ENUM;", "-\t\t\t}", "-", "-\t\t\tif((this.lastModifiers & ClassFileConstants.AccFinal) == 0) {", "-\t\t\t\tkeywords[count++] = Keywords.INTERFACE;", "+\t\t\t\tif((this.lastModifiers & ClassFileConstants.AccAbstract) == 0", "+\t\t\t\t\t&& (this.lastModifiers & ClassFileConstants.AccFinal) == 0) {", "+\t\t\t\t\tkeywords[count++] = Keywords.FINAL;", "+\t\t\t\t}", "+\t", "+\t\t\t\tkeywords[count++] = Keywords.CLASS;", "+\t\t\t\tif (this.options.complianceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\t\tkeywords[count++] = Keywords.ENUM;", "+\t\t\t\t}", "+\t", "+\t\t\t\tif((this.lastModifiers & ClassFileConstants.AccFinal) == 0) {", "+\t\t\t\t\tkeywords[count++] = Keywords.INTERFACE;", "+\t\t\t\t}"]}], "num": 39990}