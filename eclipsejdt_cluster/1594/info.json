{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5d7ce572d3325bcead784c373fd4da5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857b942a6f8d7f7a272fe0cad1b3dca0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testBug86112() throws JavaModelException", "signatureAfterChange": " public void testBug86112() throws JavaModelException", "diff": ["-\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DICNRNS+\"}\\n\" + ", "-\t\t\"Terminator[METHOD_REF<CONSTRUCTOR>]{Terminator(), Ljavadoc.bugs.Terminator;, ()V, Terminator, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"clone[METHOD_REF]{clone(), Ljava.lang.Object;, ()Ljava.lang.Object;, clone, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"equals[METHOD_REF]{equals(Object), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class;, getClass, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long, int), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(long), Ljava.lang.Object;, (J)V, wait, (millis), \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, \"+this.positions+R_DRICNRNS+\"}\\n\" + ", "+\t\t\"Terminator[METHOD_REF<CONSTRUCTOR>]{Terminator(), Ljavadoc.bugs.Terminator;, ()V, Terminator, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb795704597ae1e3bac654dddb6e159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test003() throws JavaModelException", "signatureAfterChange": " public void test003() throws JavaModelException", "diff": ["-\t\t\t\"\t\t\treturn (xyz, pqr) -> first.\\n\" +", "+\t\t\t\"\t\t\treturn (xyz, pqr) -> first.c\\n\" +", "-\tString completeBehind = \"first.\";", "+\tString completeBehind = \"first.c\";", "+\t\t\t\"CASE_INSENSITIVE_ORDER[FIELD_REF]{CASE_INSENSITIVE_ORDER, Ljava.lang.String;, Ljava.util.Comparator<Ljava.lang.String;>;, CASE_INSENSITIVE_ORDER, null, 14}\\n\" +", "+\t\t\t\"copyValueOf[METHOD_REF]{copyValueOf(), Ljava.lang.String;, ([C)Ljava.lang.String;, copyValueOf, (arg0), 24}\\n\" +", "+\t\t\t\"copyValueOf[METHOD_REF]{copyValueOf(), Ljava.lang.String;, ([CII)Ljava.lang.String;, copyValueOf, (arg0, arg1, arg2), 24}\\n\" +", "+\t\t\t\"charAt[METHOD_REF]{charAt(), Ljava.lang.String;, (I)C, charAt, (arg0), 35}\\n\" +", "+\t\t\t\"chars[METHOD_REF]{chars(), Ljava.lang.CharSequence;, ()Ljava.util.stream.IntStream;, chars, null, 35}\\n\" +", "-\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), 35}\\n\" +", "-\t\t\t\"finalize[METHOD_REF]{finalize(), Ljava.lang.Object;, ()V, finalize, null, 35}\\n\" +", "-\t\t\t\"getClass[METHOD_REF]{getClass(), Ljava.lang.Object;, ()Ljava.lang.Class<+Ljava.lang.Object;>;, getClass, null, 35}\\n\" +", "-\t\t\t\"hashCode[METHOD_REF]{hashCode(), Ljava.lang.Object;, ()I, hashCode, null, 35}\\n\" +", "-\t\t\t\"length[METHOD_REF]{length(), Ljava.lang.String;, ()I, length, null, 35}\\n\" +", "-\t\t\t\"notify[METHOD_REF]{notify(), Ljava.lang.Object;, ()V, notify, null, 35}\\n\" +", "-\t\t\t\"notifyAll[METHOD_REF]{notifyAll(), Ljava.lang.Object;, ()V, notifyAll, null, 35}\\n\" +", "-\t\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, 35}\\n\" +", "-\t\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, ()V, wait, null, 35}\\n\" +", "-\t\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, (J)V, wait, (millis), 35}\\n\" +", "-\t\t\t\"wait[METHOD_REF]{wait(), Ljava.lang.Object;, (JI)V, wait, (millis, nanos), 35}\",", "+\t\t\t\"codePointAt[METHOD_REF]{codePointAt(), Ljava.lang.String;, (I)I, codePointAt, (arg0), 35}\\n\" +", "+\t\t\t\"codePointBefore[METHOD_REF]{codePointBefore(), Ljava.lang.String;, (I)I, codePointBefore, (arg0), 35}\\n\" +", "+\t\t\t\"codePointCount[METHOD_REF]{codePointCount(), Ljava.lang.String;, (II)I, codePointCount, (arg0, arg1), 35}\\n\" +", "+\t\t\t\"codePoints[METHOD_REF]{codePoints(), Ljava.lang.CharSequence;, ()Ljava.util.stream.IntStream;, codePoints, null, 35}\\n\" +", "+\t\t\t\"compareTo[METHOD_REF]{compareTo(), Ljava.lang.String;, (Ljava.lang.String;)I, compareTo, (arg0), 35}\\n\" +", "+\t\t\t\"compareToIgnoreCase[METHOD_REF]{compareToIgnoreCase(), Ljava.lang.String;, (Ljava.lang.String;)I, compareToIgnoreCase, (arg0), 35}\\n\" +", "+\t\t\t\"concat[METHOD_REF]{concat(), Ljava.lang.String;, (Ljava.lang.String;)Ljava.lang.String;, concat, (arg0), 35}\\n\" +", "+\t\t\t\"contains[METHOD_REF]{contains(), Ljava.lang.String;, (Ljava.lang.CharSequence;)Z, contains, (arg0), 35}\\n\" +", "+\t\t\t\"contentEquals[METHOD_REF]{contentEquals(), Ljava.lang.String;, (Ljava.lang.CharSequence;)Z, contentEquals, (arg0), 35}\\n\" +", "+\t\t\t\"contentEquals[METHOD_REF]{contentEquals(), Ljava.lang.String;, (Ljava.lang.StringBuffer;)Z, contentEquals, (arg0), 35}\","]}], "num": 1594}