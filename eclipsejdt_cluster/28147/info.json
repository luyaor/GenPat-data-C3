{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e13f411a23437719ab2eb1727508572e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d28165d7032d95ac693f80bd20ca16d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": " \tITypeBinding resolveExpressionType(Expression expression)", "diff": ["-\t\t\treturn this.getTypeBinding(arrayAllocationExpression.arrayTb);", "+\t\t\treturn this.getTypeBinding(arrayAllocationExpression.resolvedType);", "-\t\t\treturn this.getTypeBinding(castExpression.castTb);", "+\t\t\treturn this.getTypeBinding(castExpression.resolvedType);", "-\t\t\treturn this.getTypeBinding(operatorExpression.expressionType);", "+\t\t\treturn this.getTypeBinding(operatorExpression.resolvedType);", "-\t\t\treturn this.getTypeBinding(instanceOfExpression.expressionType);", "+\t\t\treturn this.getTypeBinding(instanceOfExpression.resolvedType);", "-\t\t\treturn this.getTypeBinding(arrayReference.arrayElementBinding);", "+\t\t\treturn this.getTypeBinding(arrayReference.resolvedType);", "-\t\t\treturn this.getTypeBinding(conditionalExpression.expressionType);", "+\t\t\treturn this.getTypeBinding(conditionalExpression.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39436cba773b0f8803dcbca6376c06f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "2f81606b204235a7fea213d9e3c8df9d3bed65b9", "commitAfterChange": "af85a4064bb6dcfadda2603d722c6067b5a89418", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": "\r \tITypeBinding resolveExpressionType(Expression expression)", "diff": ["-\t\t\treturn this.getTypeBinding(stringLiteral.literalType(this.retrieveEnclosingScope(expression)));\r", "+\t\t\tBlockScope blockScope = this.retrieveEnclosingScope(expression);\r", "+\t\t\tif (blockScope == null) {\r", "+\t\t\t\treturn this.getTypeBinding(this.scope.getJavaLangString());\r", "+\t\t\t} else {\r", "+\t\t\t\treturn this.getTypeBinding(stringLiteral.literalType(blockScope));\r", "+\t\t\t}\r", "-\t\t\treturn this.getTypeBinding(thisReference.resolveType(this.retrieveEnclosingScope(expression)));\r", "+\t\t\tBlockScope blockScope = this.retrieveEnclosingScope(expression);\r", "+\t\t\tif (blockScope == null) {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r", "+\t\t\treturn this.getTypeBinding(thisReference.resolveType(blockScope));\r"]}], "num": 28147}