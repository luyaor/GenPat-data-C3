{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4882e6063ffd42f9917ba8a8a416ab96", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5637e54527afdf232178fb58291e3261", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "7935d7046a5948ba0caaa49b731ab944081ed079", "commitAfterChange": "867dd152ebfa0e20933236e2a9ac1203eb8cefb2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t// this currently produces an unavoidable warning against all @NonNull element vars:", "+\t\t\tint elementNullStatus = FlowInfo.tagBitsToNullStatus(this.collectionElementType.tagBits);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telementVarBinding, FlowInfo.UNKNOWN, this.collection, this.collectionElementType);", "-\t\t\t// TODO (stephan): \tonce we have JSR 308 fetch nullStatus from the collection element type", "-\t\t\t//              \tand feed the result into the above check (instead of FlowInfo.UNKNOWN)", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telementVarBinding, elementNullStatus, this.collection, this.collectionElementType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a953e927a9a7443c7c7262c1e347d87e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected Object createFieldReference(Object receiver) throws InvalidInputException", "signatureAfterChange": " protected Object createFieldReference(Object receiver) throws InvalidInputException", "diff": ["-\treturn new FormatJavadocReference(start, (int) this.identifierPositionStack[0]);", "+\tint lineStart = this.scanner.getLineNumber(start);", "+\treturn new FormatJavadocReference(start, (int) this.identifierPositionStack[0], lineStart);"]}], "num": 50770}