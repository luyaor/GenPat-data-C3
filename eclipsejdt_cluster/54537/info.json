{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f20044cf393e66e3819571e6c2ed6f6c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e086503cca035c594cbc83a7062b35a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "diff": ["-\t\t\tif (!CharOperation.prefixEquals(fieldName, field.name, false", "-\t\t\t\t/* ignore case */", "-\t\t\t\t))", "+\t\t\tif (!CharOperation.prefixEquals(fieldName, field.name, false/* ignore case */)", "+\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(fieldName, field.name)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0d02a577399def2bdced08f32a7c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["-\t\t\t\t\t\t\tif (!CharOperation.prefixEquals(token, local.name, false /* ignore case */", "-\t\t\t\t\t\t\t\t))", "+\t\t\t\t\t\t\tif (!CharOperation.prefixEquals(token, local.name, false /* ignore case */)", "+\t\t\t\t\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(token, local.name)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e68eaeba4d87af99f1c7f62e5a7c33e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "signatureAfterChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "diff": ["-\t\t\t\tif (!CharOperation.prefixEquals(enumConstantName, field.name, false /* ignore case */))\tcontinue next;", "+\t\t\t\tif (!CharOperation.prefixEquals(enumConstantName, field.name, false /* ignore case */)", "+\t\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(enumConstantName, field.name)))\tcontinue next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0bd8e8a17d0a9485b2407d6fee72c48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed)", "diff": ["-\t\t\tif (!CharOperation.prefixEquals(fieldName, field.name, false /* ignore case */))\tcontinue next;", "+\t\t\tif (!CharOperation.prefixEquals(fieldName, field.name, false /* ignore case */)", "+\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(fieldName, field.name)))\tcontinue next;"]}], "num": 54537}