{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5af0c23f66aa529b36b2257276438f66", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "723b15bd94ad9e084385ef1c1154e90e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e931aecd3dd39697fd0a057bffda11890337b018", "commitAfterChange": "305acfe01a2cb51532a94f25f8a4ff106e9d160c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected BinaryTypeBinding cacheBinaryType(IType type) throws JavaModelException", "signatureAfterChange": " protected BinaryTypeBinding cacheBinaryType(IType type, IBinaryType binaryType) throws JavaModelException", "diff": ["-protected BinaryTypeBinding cacheBinaryType(IType type) throws JavaModelException {", "+protected BinaryTypeBinding cacheBinaryType(IType type, IBinaryType binaryType) throws JavaModelException {", "-\t\tcacheBinaryType(enclosingType); // cache enclosing types first, so that binary type can be found in lookup enviroment", "-\tIBinaryType binaryType = (IBinaryType) ((BinaryType) type).getElementInfo();", "+\t\tcacheBinaryType(enclosingType, null); // cache enclosing types first, so that binary type can be found in lookup enviroment", "+\tif (binaryType == null) {", "+\t\tClassFile classFile = (ClassFile) type.getClassFile();", "+\t\ttry {", "+\t\t\tbinaryType = getBinaryInfo(classFile, classFile.getResource());", "+\t\t} catch (CoreException e) {", "+\t\t\tif (e instanceof JavaModelException) {", "+\t\t\t\tthrow (JavaModelException) e;", "+\t\t\t} else {", "+\t\t\t\tthrow new JavaModelException(e);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce713bfb2497b426c5ffceeafd2b9aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "8931b8138aaf30e21e870fd9c7802dc882a81262", "commitAfterChange": "6ad7042e2304c571130ec476c25101dbadd62013", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tpublic static char[] getResourceContentsAsCharArray(IFile file, String encoding, URI location) throws JavaModelException", "signatureAfterChange": " \t\t \tpublic static char[] getResourceContentsAsCharArray(IFile file, String encoding) throws JavaModelException", "diff": ["-", "-\tpublic static char[] getResourceContentsAsCharArray(IFile file, String encoding, URI location) throws JavaModelException {", "+\t\t", "+\tpublic static char[] getResourceContentsAsCharArray(IFile file, String encoding) throws JavaModelException {\t\t", "+\t\t// Get file length", "+\t\t// workaround https://bugs.eclipse.org/bugs/show_bug.cgi?id=130736 by using java.io.File if possible", "+\t\tIPath location = file.getLocation();", "+\t\tlong length;", "+\t\tif (location == null) {", "+\t\t\t// non local file", "+\t\t\ttry {", "+\t\t\t\tlength = EFS.getStore(file.getLocationURI()).fetchInfo().getLength();", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\tthrow new JavaModelException(e);", "+\t\t\t}", "+\t\t} else {", "+\t\t\t// local file", "+\t\t\tlength = location.toFile().length();", "+\t\t}", "+\t\t", "-\t\t\tlong length = EFS.getStore(location).fetchInfo().getLength();", "-\t\t} catch (CoreException e) {", "-\t\t\tthrow new JavaModelException(e);"]}], "num": 19319}