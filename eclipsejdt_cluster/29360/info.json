{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "563789503ce362fcd4c9c978aa9e5775", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3b8c2ac436d88b79ed98383cca9871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "d827489386a0080be2baf2be380c0f3630a2f239", "commitAfterChange": "b0e22c1c1f34d79e167c112a42cdff6b01498911", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deadCodeInTrivialIfStatement\\\" value=\\\"disabled\\\"/>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208e01794fbda45ccef658be36ff573d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic void test084()", "signatureAfterChange": " \tpublic void test084()", "diff": ["-\t\t\t\"\t             ^^\\n\" + ", "-\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tX x = new X((AX)null, (AX)null);\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tX x = new X((AX)null, (AX)null);\\n\" + ", "-\t\t\t\"\t                       ^^\\n\" + ", "-\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"\tAX a = new AX((AX)null);\\n\" + ", "-\t\t\t\"\t               ^^\\n\" + ", "-\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"10. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"11. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"12. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"13. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"14. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"11. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\t\"15. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"12. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"16. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\t\"17. WARNING in X.java (at line 22)\\n\" + ", "+\t\t\t\"14. WARNING in X.java (at line 22)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250a425f7171b66d9b60bb02ede4711c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "2208491f1e360e4237b8017b36c8fa0890474137", "commitAfterChange": "e5298d1520850b03997a0c0198af445e99f4d78c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \"    -source <version>  set source level: 1.3 to 1.7 (or 5, 5.0, etc)\\n\" +", "-        \"    -target <version>  set classfile target: 1.1 to 1.7 (or 5, 5.0, etc)\\n\" +", "+        \"    -1.8 -8 -8.0       use 1.8 compliance (-source 1.8 -target 1.8)\\n\" +", "+        \"    -source <version>  set source level: 1.3 to 1.8 (or 5, 5.0, etc)\\n\" +", "+        \"    -target <version>  set classfile target: 1.1 to 1.8 (or 5, 5.0, etc)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360a3c53231a0fc5f3eabf16db4f899e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a7da40a1a62439fc4b1ece4f5221022e1778c205", "commitAfterChange": "0ad2415ee4f1a2517a3e261113b08f2dfc4514f8", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-\t\t\"                       directory\\n\" +", "-\t\t\"    -d none            generate no .class files\\n\" +", "-        \"    -encoding <enc>    specify custom encoding for all sources. Each\\n\" +", "-        \"                       file/directory can override it when suffixed with\\n\" +", "-        \"                       ''[''<enc>'']'' (e.g. X.java[utf8])\\n\" +", "+        \"                       directory\\n\" +", "+        \"    -d none            generate no .class files\\n\" +", "+        \"    -encoding <enc>    specify custom encoding for all sources. If multiple \\n\" + ", "+        \"                       encodings are specified, the last one will be used. Each\\n\" + ", "+        \"                       file/directory can override it when suffixed with\\n\" + ", "+        \"                       ''[''<enc>'']'' (e.g. X.java[utf8]).\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5715429b924f5b49dbbccc76b0f23c1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "e8c9a8ad63c042540bdf2089eae8eda8857cd19d", "commitAfterChange": "44ff943ce2a18d1de59c739946fda0722d1ad727", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingDefaultCase\\\" value=\\\"ignore\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation\\\" value=\\\"ignore\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault\\\" value=\\\"disabled\\\"/>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5db19e2d497cf9f4d54a775a834ffdb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "bb7b9521196186c5be108c1f350a453c12233137", "commitAfterChange": "871cac4ba4cecfc6322ce0af5777177652a514a9", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": "\r public void testBug330313_wksp1_52_njl()", "signatureAfterChange": "\r public void testBug330313_wksp1_52_njl()", "diff": ["-\t\t\"\t\t\t\t\t\t} }),\\n\" + \r", "+\t\t\"\t\t\t\t\t\t}\\n\" + \r", "+\t\t\"\t\t\t\t}),\\n\" + \r", "-\t\t\"\t\t\t\t\t\t} }),\\n\" + \r", "+\t\t\"\t\t\t\t\t\t}\\n\" + \r", "+\t\t\"\t\t\t\t}),\\n\" + \r", "-\t\t\"\t\t\t\t\t\t} }),\\n\" + \r", "+\t\t\"\t\t\t\t\t\t}\\n\" + \r", "+\t\t\"\t\t\t\t}),\\n\" + \r", "-\t\t\"\t\t\t\t\t\t} }),\\n\" + \r", "+\t\t\"\t\t\t\t\t\t}\\n\" + \r", "+\t\t\"\t\t\t\t}),\\n\" + \r", "-\t\t\"\t\t\t\tnew SyncInfoDirectionFilter(SyncInfo.OUTGOING) });\\n\" + \r", "+\t\t\"\t\t\t\tnew SyncInfoDirectionFilter(SyncInfo.OUTGOING)\\n\" + \r", "+\t\t\"\t\t});\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c7d9dd6e4ba29c6877a5e78c2d296d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.includeFieldsInNullAnalysis\\\" value=\\\"disabled\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676ede8ff84726b8cde7e66b5bb610a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["+        \"    -nowarn:[<directories separated by \" + File.pathSeparator+ \">]\\n\" +", "+        \"                       specify directories from which optional problems should\\n\" +", "+        \"                       be ignored\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fa8e7c6c3d7e0dc3a1910b987e6e66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a81ccfc0bc8694879e3dd29554f4e34087f49572", "commitAfterChange": "090ebdc0744610fb4e5ac8b5b4731d3eafdb24fe", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["+        \"    -sourcepath <directories and zip/jar files separated by ;>\\n\" + ", "+        \"                       specify location for application sources. Each directory or file can\\n\" + ", "+        \"                       specify access rules for types between \\'[\\' and \\']\\' (e.g. [-X.java]\\n\" + ", "+        \"                       to deny access to type X)\\n\" + ", "+        \"    -extdirs <directories separated by ;>\\n\" + ", "+        \"                       specify location for extension zip/jar files\\n\" + ", "+        \" \\n\" + ", "+        \" Ignored options:\\n\" + ", "+        \"    -J<option>         pass option to virtual machine (ignored)\\n\" + ", "+        \"    -X<option>         specify non-standard option (ignored)\\n\" + ", "+        \"    -X                 print non-standard options and exit (ignored)\\n\" + ", "+        \"    -O                 optimize for execution time (ignored)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79982a5b7899a6c8f35878645812d8e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "5f4d09d81cc02220ed58c513d25ed70f79b83bf4", "commitAfterChange": "072ed84b1d5aa2452474d0d47d66f9e4152c2f56", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private String getVerifyTestsCode()", "signatureAfterChange": " private String getVerifyTestsCode()", "diff": ["+\t\t\"/*******************************************************************************\\n\" + ", "+\t\t\" * Copyright (c) 2000, 2004 IBM Corporation and others.\\n\" + ", "+\t\t\" * All rights reserved. This program and the accompanying materials \\n\" + ", "+\t\t\" * are made available under the terms of the Common Public License v1.0\\n\" + ", "+\t\t\" * which accompanies this distribution, and is available at\\n\" + ", "+\t\t\" * http://www.eclipse.org/legal/cpl-v10.html\\n\" + ", "+\t\t\" * \\n\" + ", "+\t\t\" * Contributors:\\n\" + ", "+\t\t\" *     IBM Corporation - initial API and implementation\\n\" + ", "+\t\t\" *******************************************************************************/\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"/******************************************************\\n\" + ", "+\t\t\" * \\n\" + ", "+\t\t\" * IMPORTANT NOTE: If modifying this class, copy the source to TestVerifier#getVerifyTestsCode()\\n\" + ", "+\t\t\" * (see this method for details)\\n\" + ", "+\t\t\" * \\n\" + ", "+\t\t\" ******************************************************/\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\\n\" + ", "-\t\t\"\t\tif (c == null) {\\n\" + ", "-\t\t\"\t\t\tFile file= locate(name);\\n\" + ", "-\t\t\"\t\t\tif (file == null)\\n\" + ", "-\t\t\"\t\t\t\tthrow new ClassNotFoundException();\\n\" + ", "-\t\t\"\t\t\tbyte data[]= loadClassData(file);\\n\" + ", "-\t\t\"\t\t\tc= defineClass(name, data, 0, data.length);\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "+\t\t\"\t\tFile file= locate(name);\\n\" + ", "+\t\t\"\t\tif (file == null)\\n\" + ", "+\t\t\"\t\t\tthrow new ClassNotFoundException();\\n\" + ", "+\t\t\"\t\tbyte data[]= loadClassData(file);\\n\" + ", "+\t\t\"\t\tc= defineClass(name, data, 0, data.length);\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\t\t\t\t\t\t// ignore\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cfeac19cd29a1d430f983a20aa4a59f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "acf58dbcfbfa39ff3904f43d31343218ded91a71", "commitAfterChange": "27d95cfb6022c24feca5946c5f35f2eff59fa35f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecationInNonDeprecatedCode\\\" value=\\\"enabled\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90cb696fff7594738a1dee5057c57dbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["+        \"    -nowarn:[<directories separated by \" + File.pathSeparator+ \">]\\n\" +", "+        \"                       specify directories from which optional problems should\\n\" +", "+        \"                       be ignored\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941792f506d2d91c691cbed24e6a86d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test048()", "signatureAfterChange": " public void test048()", "diff": ["-\t\t\t\"        [pc: 7, pc: 17] -> 17 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 7, pc: 14] -> 17 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "+\t\t\t\"        [pc: 3, same]\\n\" + ", "-\t\t\t\"        [pc: 7, pc: 17] -> 17 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 7, pc: 14] -> 17 when : java.lang.Exception\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0212274e34f1ca4c194822480e9a81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "3f131825dfbebcd2d9846517fd8419ae56311784", "commitAfterChange": "ede87229fe271e061ecd80820c468f7956351f61", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable\\\" value=\\\"ignore\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable\\\" value=\\\"ignore\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unclosedCloseable\\\" value=\\\"warning\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e514a1db7f9cbb28ec505bb61644a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deadCode\\\" value=\\\"ignore\\\"/>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9c09d433bc7ca39faeee064db679102", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnull\\\" value=\\\"org.eclipse.jdt.annotation.NonNull\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnullbydefault\\\" value=\\\"org.eclipse.jdt.annotation.NonNullByDefault\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnullisdefault\\\" value=\\\"disabled\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nullable\\\" value=\\\"org.eclipse.jdt.annotation.Nullable\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nullanalysis\\\" value=\\\"disabled\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnull\\\" value=\\\"org.eclipse.jdt.annotation.NonNull\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnullbydefault\\\" value=\\\"org.eclipse.jdt.annotation.NonNullByDefault\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nonnullisdefault\\\" value=\\\"disabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nullable\\\" value=\\\"org.eclipse.jdt.annotation.Nullable\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.annotation.nullanalysis\\\" value=\\\"disabled\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.maxProblemPerUnit\\\" value=\\\"100\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.maxProblemPerUnit\\\" value=\\\"100\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.includeFieldsInNullAnalysis\\\" value=\\\"disabled\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullReference\\\" value=\\\"warning\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullSpecInsufficientInfo\\\" value=\\\"warning\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullSpecViolation\\\" value=\\\"error\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullReference\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullSpecInsufficientInfo\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.nullSpecViolation\\\" value=\\\"error\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.potentialNullSpecViolation\\\" value=\\\"error\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable\\\" value=\\\"ignore\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.rawTypeReference\\\" value=\\\"warning\\\"/>\\n\" +", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation\\\" value=\\\"warning\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.potentialNullSpecViolation\\\" value=\\\"error\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable\\\" value=\\\"ignore\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.rawTypeReference\\\" value=\\\"warning\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation\\\" value=\\\"warning\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems\\\" value=\\\"enabled\\\"/>\\n\" +", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems\\\" value=\\\"enabled\\\"/>\\n\" + ", "-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskTags\\\" value=\\\"\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.taskTags\\\" value=\\\"\\\"/>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2e8e6c4de8e1b41b467c0f3d294106", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "4760c6b6352277699f006864e0bae84af5f84817", "commitAfterChange": "7c8286e32ed1c984440c429d1b469ce918e31ba0", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.comparingIdentical\\\" value=\\\"warning\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5c07c0d3280a97d5ee418e30250103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "d6e67d4c8518637d8a6205904d99263fcf72b512", "commitAfterChange": "25c3603d7bf5d103d47b791d11767b16968f4a1d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.generateClassFiles\\\" value=\\\"enabled\\\"/>\\n\" + ", "+\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.processAnnotations\\\" value=\\\"enabled\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eec1afce02219adf0f2a5fd5abb759fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void test049()", "signatureAfterChange": " public void test049()", "diff": ["-\t\t\t\"        [pc: 0, pc: 23] -> 23 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 20] -> 23 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "+\t\t\t\"        [pc: 9, same]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 23] -> 23 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 20] -> 23 when : java.lang.Exception\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41dda0796a358f988f5d9e0bdb85578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "2a3cfde3c43eda7373112848bd26e889dafe74d6", "commitAfterChange": "c775c1d0f23881553fb0e260a70314c10cea2026", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"\t\t<option key=\\\"org.eclipse.jdt.core.compiler.problem.deprecationInNonDeprecatedCode\\\" value=\\\"enabled\\\"/>\\n\" + "]}], "num": 29360}