{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b266613af5aa60b0e6cef8ab3503201", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096b65794363e16fe39bba7273051f59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "7cfd16cce02bf6c15cc69b5ed56b855234dd7ed5", "commitAfterChange": "95a3577e20e21c393d791bf9201b4e713942cf20", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public RecoveredElement updateOnOpeningBrace(int braceStart, int braceEnd)", "signatureAfterChange": " public RecoveredElement updateOnOpeningBrace(int braceStart, int braceEnd)", "diff": ["-\tif (this.fieldDeclaration.declarationSourceEnd == 0", "-\t\t&& (this.fieldDeclaration.type instanceof ArrayTypeReference || this.fieldDeclaration.type instanceof ArrayQualifiedTypeReference)", "-\t\t&& !this.alreadyCompletedFieldInitialization){", "-\t\tthis.bracketBalance++;", "-\t\treturn null; // no update is necessary\t(array initializer)", "+\tif (this.fieldDeclaration.declarationSourceEnd == 0) {", "+\t\tif (this.fieldDeclaration.type instanceof ArrayTypeReference || this.fieldDeclaration.type instanceof ArrayQualifiedTypeReference) {", "+\t\t\tif (!this.alreadyCompletedFieldInitialization) {", "+\t\t\t\tthis.bracketBalance++;", "+\t\t\t\treturn null; // no update is necessary\t(array initializer)", "+\t\t\t}", "+\t\t} else {  // https://bugs.eclipse.org/bugs/show_bug.cgi?id=308980", "+\t\t\t// in case an initializer bracket is opened in a non-array field", "+\t\t\t// eg. int field = {..", "+\t\t\tthis.bracketBalance++;", "+\t\t\treturn null; // no update is necessary\t(array initializer)", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83667ce2c315def463bb105ef83e4a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "f3706d181091fb702dc2ff1828cc8f66c10eda7e", "commitAfterChange": "1b59cc9477a9dd113e2d0516bb9a97b92018149f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration)", "signatureAfterChange": " public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration)", "diff": ["-\t\t\t\tfieldDeclaration.initialization == null ? -1 :  fieldDeclaration.initialization.sourceStart, ", "+\t\t\t\t// filter out initializations that are not a constant (simple check)", "+\t\t\t\t(fieldDeclaration.initialization == null ", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ArrayInitializer", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof AllocationExpression", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ArrayAllocationExpression", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof Assignment", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ClassLiteralAccess", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof MessageSend", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ArrayReference", "+\t\t\t\t\t\t|| fieldDeclaration.initialization instanceof ThisReference) ? ", "+\t\t\t\t\t-1 :  ", "+\t\t\t\t\tfieldDeclaration.initialization.sourceStart, "]}], "num": 54028}