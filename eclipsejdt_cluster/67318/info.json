{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c91209385d1180d1d49cfc42f63756bc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a8aeff9ec5fc3330f73c9ebcb6115a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeSystem.java", "commitBeforeChange": "8622e99cc18e0c0ae6c600de97be8d909f3d7ad6", "commitAfterChange": "97ffd5d9f10b645b867987b89ee09e9ee483a6d1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tpublic void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "signatureAfterChange": " \t \tpublic void updateCaches(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType)", "diff": ["-\t\t\tif (this.types[unresolvedTypeId] != null && this.types[unresolvedTypeId][0] == unresolvedType) { //$IDENTITY-COMPARISON$", "-\t\t\t\tresolvedType.id = unresolvedTypeId;", "-\t\t\t\tthis.types[unresolvedTypeId][0] = resolvedType;", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=432977", "+\t\t\tTypeBinding[] derivedTypes = this.types[unresolvedTypeId];", "+\t\t\tfor (int i = 0, length = derivedTypes == null ? 0 : derivedTypes.length; i < length; i++) {", "+\t\t\t\tif (derivedTypes[i] == null)", "+\t\t\t\t\tbreak;", "+\t\t\t\tif (derivedTypes[i] == unresolvedType) { //$IDENTITY-COMPARISON$", "+\t\t\t\t\tresolvedType.id = unresolvedTypeId;", "+\t\t\t\t\tderivedTypes[i] = resolvedType;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62312bc511f7ada6b52cec66b2e8f0ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "579829d4867b5583bfe72f32f009d0dbea13c114", "commitAfterChange": "330aeaad59d1633d10c0cd3a9ee9ac57073b385f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\t\tif (cachedTable != null)", "+\t\tif (cachedTable != null) {", "+\t\t\tif (readDocNumbers) { // must cache remaining document number arrays", "+\t\t\t\tObject[] arrayOffsets = cachedTable.valueTable;", "+\t\t\t\tfor (int i = 0, l = arrayOffsets.length; i < l; i++)", "+\t\t\t\t\tif (arrayOffsets[i] instanceof Integer)", "+\t\t\t\t\t\tarrayOffsets[i] = readDocumentNumbers(arrayOffsets[i]);", "+\t\t\t}", "+\t\t}", "-\t\tif (readDocNumbers)", "-\t\t\tmatchingWords = new char[size][];", "-\t\t\t\tif (matchingWords != null) {", "+\t\t\t\tif (readDocNumbers) {", "+\t\t\t\t\tif (matchingWords == null)", "+\t\t\t\t\t\tmatchingWords = new char[size][];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6542133070cda02e2111c4bd3f792aa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "10a59ab8fb6256e59e155c071a356402964eb736", "commitAfterChange": "bacbe6f6e994ffc49a94960691c76bff97cb04d5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate boolean squarePegInRoundHole(final MethodBinding sam)", "signatureAfterChange": "  \tprivate boolean squarePegInRoundHole(final MethodBinding sam)", "diff": ["+\t\tif (!argumentsTypeElided()) {", "+\t\t\tTypeBinding [] samPararameterTypes = sam.parameters;", "+\t\t\tfor (int i = 0, length = samPararameterTypes.length; i < length; i++) { // lengths known to be equal.", "+\t\t\t\tif (TypeBinding.notEquals(samPararameterTypes[i], this.argumentTypes[i]))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a53968a485668add7c82886da1eb12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void compile(SourceFile[] units, String[] initialTypeNames, String[] additionalFilenames)", "signatureAfterChange": "  void compile(SourceFile[] units, SourceFile[] additionalUnits)", "diff": ["-void compile(SourceFile[] units, String[] initialTypeNames, String[] additionalFilenames) {", "+void compile(SourceFile[] units, SourceFile[] additionalUnits) {", "-\tif (!problemTypeLocations.isEmpty()) {", "-\t\tint toAdd = problemTypeLocations.size();", "-\t\tint length = additionalFilenames == null ? 0 : additionalFilenames.length;", "+\tif (!problemSourceFiles.isEmpty()) {", "+\t\tint toAdd = problemSourceFiles.size();", "+\t\tint length = additionalUnits == null ? 0 : additionalUnits.length;", "-\t\t\tadditionalFilenames = new String[toAdd];", "+\t\t\tadditionalUnits = new SourceFile[toAdd];", "-\t\t\tSystem.arraycopy(additionalFilenames, 0, additionalFilenames = new String[length + toAdd], 0, length);", "+\t\t\tSystem.arraycopy(additionalUnits, 0, additionalUnits = new SourceFile[length + toAdd], 0, length);", "-\t\t\tadditionalFilenames[length + i] = (String) problemTypeLocations.get(i);", "+\t\t\tadditionalUnits[length + i] = (SourceFile) problemSourceFiles.get(i);", "-\tnameEnvironment.setNames(initialTypeNames, additionalFilenames);", "+\tString[] initialTypeNames = new String[units.length];", "+\tfor (int i = 0, l = units.length; i < l; i++)", "+\t\tinitialTypeNames[i] = units[i].initialTypeName;", "+\tnameEnvironment.setNames(initialTypeNames, additionalUnits);"]}], "num": 67318}