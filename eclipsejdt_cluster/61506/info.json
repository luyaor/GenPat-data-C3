{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "944865465ade9d034cb9921be3dcaddf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cbec6185d4af124a7569e7775c28cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": " public void test402609()", "signatureAfterChange": " public void test402609()", "diff": ["-\t\t\t\"\t^\\n\" + ", "-\t\t\t\"The method f(I) in the type X is not applicable for the arguments (super::foo)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\"\tf(super::foo);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5f5204d4ca97107ae607975111f669", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 303, "methodNumberAfterChange": 303, "signatureBeforeChange": " public void testGroundTargetTypeWithWithWildcards()", "signatureAfterChange": " public void testGroundTargetTypeWithWithWildcards()", "diff": ["-\t\t\"\treturn m((X x1, X x2) -> { return new Y(); });\\n\" + ", "-\t\t\"\t       ^\\n\" + ", "-\t\t\"The method m(I<? extends A,? extends B,? extends C>) in the type X is not applicable for the arguments ((X x1, X x2) -> {})\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 10)\\n\" + "]}], "num": 61506}