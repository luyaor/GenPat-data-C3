{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4ade639e15d42f2429e057a78b09422", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3515e37805a3824b4222393a012b6c87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\tif (binding instanceof ReferenceBinding) {", "+\t\tif(binding instanceof TypeVariableBinding) {", "+\t\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) binding;", "+\t\t\tBinding enclosingElement = typeVariableBinding.declaringElement;", "+\t\t\tthis.noProposal = false;", "+\t\t\t", "+\t\t\tif(enclosingElement instanceof SourceTypeBinding) {", "+\t\t\t\tSourceTypeBinding enclosingType = (SourceTypeBinding) enclosingElement;", "+\t\t\t\tthis.requestor.acceptTypeParameter(", "+\t\t\t\t\tenclosingType.qualifiedPackageName(),", "+\t\t\t\t\tenclosingType.qualifiedSourceName(),", "+\t\t\t\t\ttypeVariableBinding.sourceName(),", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tthis.actualSelectionStart,", "+\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t} else if(enclosingElement instanceof MethodBinding) {", "+\t\t\t\tMethodBinding enclosingMethod = (MethodBinding) enclosingElement;", "+\t\t\t\t", "+\t\t\t\tTypeBinding[] parameterTypes = enclosingMethod.parameters;", "+\t\t\t\tint length = parameterTypes.length;", "+\t\t\t\tchar[][] parameterPackageNames = new char[length][];", "+\t\t\t\tchar[][] parameterTypeNames = new char[length][];", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tparameterPackageNames[i] = parameterTypes[i].qualifiedPackageName();", "+\t\t\t\t\tparameterTypeNames[i] = parameterTypes[i].qualifiedSourceName();", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tthis.requestor.acceptMethodTypeParameter(", "+\t\t\t\t\tenclosingMethod.declaringClass.qualifiedPackageName(),", "+\t\t\t\t\tenclosingMethod.declaringClass.qualifiedSourceName(),", "+\t\t\t\t\tenclosingMethod.selector,", "+\t\t\t\t\tparameterPackageNames,", "+\t\t\t\t\tparameterTypeNames,", "+\t\t\t\t\tenclosingMethod.isConstructor(),", "+\t\t\t\t\ttypeVariableBinding.sourceName(),", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tthis.actualSelectionStart,", "+\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t}", "+\t\t\tthis.acceptedAnswer = true;", "+\t\t} else if (binding instanceof ReferenceBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854dc81c39145fb73dd4139341b98c8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit)", "diff": ["-\t\t\t\trequestor.acceptMethod(", "-\t\t\t\t\tmethodBinding.declaringClass.qualifiedPackageName(),", "-\t\t\t\t\tmethodBinding.declaringClass.qualifiedSourceName(),", "-\t\t\t\t\tmethodBinding.isConstructor()", "-\t\t\t\t\t\t? methodBinding.declaringClass.sourceName()", "-\t\t\t\t\t\t: methodBinding.selector,", "-\t\t\t\t\tparameterPackageNames,", "-\t\t\t\t\tparameterTypeNames,", "-\t\t\t\t\tmethodBinding.isConstructor());", "+\t\t\t\tReferenceBinding declaringClass = methodBinding.declaringClass;", "+\t\t\t\tif (isLocal(declaringClass) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalMethod(", "+\t\t\t\t\t\t(SourceTypeBinding)declaringClass,", "+\t\t\t\t\t\tmethodBinding.isConstructor()", "+\t\t\t\t\t\t\t? declaringClass.sourceName()", "+\t\t\t\t\t\t\t: methodBinding.selector,", "+\t\t\t\t\t\tparameterPackageNames,", "+\t\t\t\t\t\tparameterTypeNames,", "+\t\t\t\t\t\tmethodBinding.isConstructor(),", "+\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t} else {", "+\t\t\t\t\trequestor.acceptMethod(", "+\t\t\t\t\t\tdeclaringClass.qualifiedPackageName(),", "+\t\t\t\t\t\tdeclaringClass.qualifiedSourceName(),", "+\t\t\t\t\t\tmethodBinding.isConstructor()", "+\t\t\t\t\t\t\t? declaringClass.sourceName()", "+\t\t\t\t\t\t\t: methodBinding.selector,", "+\t\t\t\t\t\tparameterPackageNames,", "+\t\t\t\t\t\tparameterTypeNames,", "+\t\t\t\t\t\tmethodBinding.isConstructor());", "+\t\t\t\t}", "-\t\t\t\t\tif (fieldBinding.declaringClass != null) { // arraylength", "+\t\t\t\t\tReferenceBinding declaringClass = fieldBinding.declaringClass;", "+\t\t\t\t\tif (declaringClass != null) { // arraylength", "-\t\t\t\t\t\trequestor.acceptField(", "-\t\t\t\t\t\t\tfieldBinding.declaringClass.qualifiedPackageName(),", "-\t\t\t\t\t\t\tfieldBinding.declaringClass.qualifiedSourceName(),", "-\t\t\t\t\t\t\tfieldBinding.name);", "+\t\t\t\t\t\tif (isLocal(declaringClass) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalField(", "+\t\t\t\t\t\t\t\t(SourceTypeBinding)declaringClass,", "+\t\t\t\t\t\t\t\tfieldBinding.name,", "+\t\t\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trequestor.acceptField(", "+\t\t\t\t\t\t\t\tdeclaringClass.qualifiedPackageName(),", "+\t\t\t\t\t\t\t\tdeclaringClass.qualifiedSourceName(),", "+\t\t\t\t\t\t\t\tfieldBinding.name);", "+\t\t\t\t\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c88bb9e3735a98ba8cd4e82e2890e3a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "59f134d776625487d5c6b62a9862cfb00a070d3e", "commitAfterChange": "96b4864be18ed8951f75fa1c52f7e975191f2b07", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\tif (typeBinding.isInterface()) {", "+\t\t\t", "+\t\t\tif(typeBinding instanceof ProblemReferenceBinding) {", "+\t\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "-\t\t\t\t} else {", "-\t\t\t\t\tchar[] genericTypeSignature = null;", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "-\t\t\t\t\t}", "+\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "+\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t}", "+\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "+\t\t\t} else {", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\t", "+\t\t\t\tchar[] genericTypeSignature = null;", "+\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "+\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "+\t\t\t\t}", "+\t\t\t\tif (typeBinding.isAnnotationType()) {", "+\t\t\t\t\tthis.requestor.acceptAnnotation(", "+\t\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "+\t\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tgenericTypeSignature,", "+\t\t\t\t\t\tthis.actualSelectionStart,", "+\t\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\t} else if (typeBinding.isInterface()) {", "-\t\t\t\t}", "-\t\t\t} else if(typeBinding instanceof ProblemReferenceBinding){", "-\t\t\t\tReferenceBinding original = ((ProblemReferenceBinding) typeBinding).original;", "-\t\t\t\tif(original == null) return;", "-\t\t\t\tthis.noProposal = false;", "-\t\t\t\tif (isLocal(original) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\t\tif(original.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(original);", "-\t\t\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(original);", "-\t\t\t\t} else {", "-\t\t\t\t\tchar[] genericTypeSignature = null;", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\toriginal.qualifiedPackageName(),", "-\t\t\t\t\t\toriginal.qualifiedSourceName(),", "+\t\t\t\t} else if (typeBinding.isEnum()) {", "+\t\t\t\t\tthis.requestor.acceptEnum(", "+\t\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "+\t\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tthis.noProposal = false;", "-\t\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "-\t\t\t\t\tchar[] genericTypeSignature = null;", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "-\t\t\t\t\t}", "+\t\t\t\t\tthis.noProposal = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbf47540c48540a69d24576a4f453101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "15b0c36cf52521c62289eac551e0070a05f02d1e", "commitAfterChange": "0dc40a2b7305dcb95f5eb7b6afe75532653bb19e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\t\tthis.requestor.acceptTypeParameter(", "-\t\t\t\t\tenclosingType.qualifiedPackageName(),", "-\t\t\t\t\tenclosingType.qualifiedSourceName(),", "-\t\t\t\t\ttypeVariableBinding.sourceName(),", "-\t\t\t\t\tfalse,", "-\t\t\t\t\tthis.actualSelectionStart,", "-\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\tif (isLocal(enclosingType) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalTypeParameter(typeVariableBinding);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.requestor.acceptTypeParameter(", "+\t\t\t\t\t\tenclosingType.qualifiedPackageName(),", "+\t\t\t\t\t\tenclosingType.qualifiedSourceName(),", "+\t\t\t\t\t\ttypeVariableBinding.sourceName(),", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tthis.actualSelectionStart,", "+\t\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\t}", "-\t\t\t\t", "-\t\t\t\tthis.requestor.acceptMethodTypeParameter(", "-\t\t\t\t\tenclosingMethod.declaringClass.qualifiedPackageName(),", "-\t\t\t\t\tenclosingMethod.declaringClass.qualifiedSourceName(),", "-\t\t\t\t\tenclosingMethod.isConstructor()", "-\t\t\t\t\t\t\t? enclosingMethod.declaringClass.sourceName()", "-\t\t\t\t\t\t\t: enclosingMethod.selector,", "-\t\t\t\t\tenclosingMethod.sourceStart(),", "-\t\t\t\t\tenclosingMethod.sourceEnd(),", "-\t\t\t\t\ttypeVariableBinding.sourceName(),", "-\t\t\t\t\tfalse,", "-\t\t\t\t\tthis.actualSelectionStart,", "-\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\tif (isLocal(enclosingMethod.declaringClass) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalMethodTypeParameter(typeVariableBinding);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.requestor.acceptMethodTypeParameter(", "+\t\t\t\t\t\tenclosingMethod.declaringClass.qualifiedPackageName(),", "+\t\t\t\t\t\tenclosingMethod.declaringClass.qualifiedSourceName(),", "+\t\t\t\t\t\tenclosingMethod.isConstructor()", "+\t\t\t\t\t\t\t\t? enclosingMethod.declaringClass.sourceName()", "+\t\t\t\t\t\t\t\t: enclosingMethod.selector,", "+\t\t\t\t\t\tenclosingMethod.sourceStart(),", "+\t\t\t\t\t\tenclosingMethod.sourceEnd(),", "+\t\t\t\t\t\ttypeVariableBinding.sourceName(),", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tthis.actualSelectionStart,", "+\t\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebd46d46df441c2e7c637d325b2e184f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "14f89ca9b18a3480429e3f25bc68dd79b7e9f0db", "commitAfterChange": "eb21ce31e87e64ed6c3b487b0fe31d2556ab8015", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit)", "diff": ["-\tprivate void selectFrom(Binding binding) {", "+\tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit) {", "-\t\t\t\trequestor.acceptInterface(", "-\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "-\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "-\t\t\t\t\tfalse);", "+\t\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(", "+\t\t\t\t\t\t(SourceTypeBinding)typeBinding,", "+\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.requestor.acceptInterface(", "+\t\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "+\t\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "+\t\t\t\t\t\tfalse);", "+\t\t\t\t}", "-\t\t\t\trequestor.acceptClass(", "-\t\t\t\t\toriginal.qualifiedPackageName(),", "-\t\t\t\t\toriginal.qualifiedSourceName(),", "-\t\t\t\t\tfalse);", "+\t\t\t\tif (isLocal(original) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(", "+\t\t\t\t\t\t(SourceTypeBinding)original,", "+\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.requestor.acceptClass(", "+\t\t\t\t\t\toriginal.qualifiedPackageName(),", "+\t\t\t\t\t\toriginal.qualifiedSourceName(),", "+\t\t\t\t\t\tfalse);", "+\t\t\t\t}", "-\t\t\t\trequestor.acceptClass(", "-\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "-\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "-\t\t\t\t\tfalse);", "+\t\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(", "+\t\t\t\t\t\t(SourceTypeBinding)typeBinding,", "+\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.requestor.acceptClass(", "+\t\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "+\t\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "+\t\t\t\t\t\tfalse);", "+\t\t\t\t}", "-\t\t\t\t\t\tselectFrom(((LocalVariableBinding) binding).type);", "+\t\t\t\t\t\tselectFrom(((LocalVariableBinding) binding).type, parsedUnit);", "-\t\t\t\t\t\t\tselectFrom(((ArrayBinding) binding).leafComponentType);", "+\t\t\t\t\t\t\tselectFrom(((ArrayBinding) binding).leafComponentType, parsedUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f21cc518e7ef20a14bbe643a3f78a8ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "287a8246425dec3b8e6cdd428f661326776e45cd", "commitAfterChange": "058b7e49b52c7b18f15a01083d7620b3d5aa8490", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(", "-\t\t\t\t\t\t(SourceTypeBinding)typeBinding,", "-\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType((SourceTypeBinding)typeBinding);", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(", "-\t\t\t\t\t\t(SourceTypeBinding)original,", "-\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType((SourceTypeBinding)original);", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(", "-\t\t\t\t\t\t(SourceTypeBinding)typeBinding,", "-\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType((SourceTypeBinding)typeBinding);", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalMethod(", "-\t\t\t\t\t\t(SourceTypeBinding)declaringClass,", "-\t\t\t\t\t\tmethodBinding.isConstructor()", "-\t\t\t\t\t\t\t? declaringClass.sourceName()", "-\t\t\t\t\t\t\t: methodBinding.selector,", "-\t\t\t\t\t\tparameterPackageNames,", "-\t\t\t\t\t\tparameterTypeNames,", "-\t\t\t\t\t\tparameterSignatures,", "-\t\t\t\t\t\tmethodBinding.isConstructor(),", "-\t\t\t\t\t\tparsedUnit,", "-\t\t\t\t\t\tisDeclaration,", "-\t\t\t\t\t\tthis.actualSelectionStart,", "-\t\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalMethod(methodBinding);", "-\t\t\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalField(", "-\t\t\t\t\t\t\t\t(SourceTypeBinding)declaringClass,", "-\t\t\t\t\t\t\t\tfieldBinding.name,", "-\t\t\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalField(fieldBinding);", "-\t\t\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalVariable(", "-\t\t\t\t\t\t\t\t(LocalVariableBinding)binding,", "-\t\t\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalVariable((LocalVariableBinding)binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa57cf3fdc9b27ae4a1abf7639aef6a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void selectFrom(ASTNode node, Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\tprivate void selectFrom(ASTNode node, Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration) {", "+\tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration) {", "-\t\t\tif(!checkQualification(", "-\t\t\t\t\tnode,", "-\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "-\t\t\t\t\ttypeBinding.qualifiedSourceName())) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType((SourceTypeBinding)typeBinding);", "+\t\t\t\t\tif(typeBinding.isParameterizedType()) {", "+\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\t}", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "+\t\t\t\t\tchar[] genericTypeSignature = null;", "+\t\t\t\t\tif(typeBinding.isParameterizedType()) {", "+\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "+\t\t\t\t\t}", "-\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tgenericTypeSignature,", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType((SourceTypeBinding)original);", "+\t\t\t\t\tif(original.isParameterizedType()) {", "+\t\t\t\t\t\tcompleteLocalTypes(original);", "+\t\t\t\t\t}", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(original);", "+\t\t\t\t\tchar[] genericTypeSignature = null;", "+\t\t\t\t\tif(typeBinding.isParameterizedType()) {", "+\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "+\t\t\t\t\t}", "-\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tgenericTypeSignature,", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType((SourceTypeBinding)typeBinding);", "+\t\t\t\t\tif(typeBinding.isParameterizedType()) {", "+\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\t}", "+\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "+\t\t\t\t\tchar[] genericTypeSignature = null;", "+\t\t\t\t\tif(typeBinding.isParameterizedType()) {", "+\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "+\t\t\t\t\t}", "-\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tgenericTypeSignature,", "-\t\t\t\t\t\t\tselectFrom(null, ((LocalVariableBinding) binding).type, parsedUnit, false);", "+\t\t\t\t\t\t\tselectFrom(((LocalVariableBinding) binding).type, parsedUnit, false);", "-\t\t\t\t\t\t\tselectFrom(node, ((ArrayBinding) binding).leafComponentType, parsedUnit, false);", "+\t\t\t\t\t\t\tselectFrom(((ArrayBinding) binding).leafComponentType, parsedUnit, false);"]}], "num": 62067}