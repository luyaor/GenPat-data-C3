{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91380fbe1948d22c082114ee3df79b5e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c0f7ac6f1eb5f5fc3f5ca7e377305d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "7ff2c64bcedb0278ce3a0fd328057a1eb9f06dc8", "commitAfterChange": "4308596b1c1f07fe83eab35ed5a705ab67283da2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (this.affectedChildren.length == 0) {", "+\tif (this.affectedChildren == null || this.affectedChildren.length == 0) {", "-\tif (this.affectedChildren != null) {", "-\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\t\t\texistingChildIndex = i;", "-\t\t\t\tbreak;", "-\t\t\t}", "+\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "+\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "+\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "+\t\t\texistingChildIndex = i;", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eefead395da27a408b19c3c7802025e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "cb1229e517a2018e5263ed249b199ae2a321da49", "commitAfterChange": "4732df192beaa38106d940c4bfeefb54a9e4a1cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (this.affectedChildren == null || this.affectedChildren.length == 0) {", "+\tif (this.affectedChildren.length == 0) {", "-\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\t\texistingChildIndex = i;", "-\t\t\tbreak;", "+\tif (this.affectedChildren != null) {", "+\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "+\t\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "+\t\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "+\t\t\t\texistingChildIndex = i;", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc1f3e65c6416acde624e920885e08c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "515443afa63476354c141cf9420c616c6ee448d0", "commitAfterChange": "be3dcae21029dbb3f453eca15686a37b37ddca01", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tif (this.affectedChildren.length == 0) {", "+\tif (this.affectedChildren == null || this.affectedChildren.length == 0) {", "-\tif (this.affectedChildren != null) {", "-\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "-\t\t\t\texistingChildIndex = i;", "-\t\t\t\tbreak;", "-\t\t\t}", "+\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "+\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "+\t\t\texistingChild = (JavaElementDelta)this.affectedChildren[i];", "+\t\t\texistingChildIndex = i;", "+\t\t\tbreak;"]}], "num": 11669}