{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10ae36b8833dbadf9dc7a3902bf41171", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e90c29abf7442d67aea581a84d39d29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "64616a6f18519098ffdabd24c6b6c1160055f504", "commitAfterChange": "f48daaa14cf07a3667867a949eef9fc4b96daafa", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static final boolean equals( \t\tchar[] first, \t\tchar[] second, \t\tboolean isCaseSensitive)", "signatureAfterChange": " \tpublic static final boolean equals(char[] first, char[] second, int secondStart, int secondEnd)", "diff": ["+\t */", "+\tpublic static final boolean equals(char[] first, char[] second, int secondStart, int secondEnd) {", "+\t\tif (first == second)", "+\t\t\treturn true;", "+\t\tif (first == null || second == null)", "+\t\t\treturn false;", "+\t\tif (first.length != secondEnd - secondStart)", "+\t\t\treturn false;", "+", "+\t\tfor (int i = first.length; --i >= 0;)", "+\t\t\tif (first[i] != second[i+secondStart])", "+\t\t\t\treturn false;", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c05c4d6de58f6d1194ea1870dbde14bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "93ae272625cf7aea539e03a762b5190105386996", "commitAfterChange": "c6f78f890c1ca00b0157b632da091fae2c781833", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic int getNextIndentationLevel(int someColumn)", "signatureAfterChange": " \tpublic int getNextIndentationLevel(int someColumn)", "diff": ["-\t\tif (someColumn == 1) return this.indentationLevel;", "-\t\tif (this.useTab) {", "-\t\t\tint rem = (someColumn - 1)% this.tabSize; // round to superior", "-\t\t\treturn rem == 0 ? (someColumn - 1)/ this.tabSize : ((someColumn - 1)/ this.tabSize)+1;", "+\t\tint indent = someColumn - 1;", "+\t\tif (indent == 0)", "+\t\t\treturn this.indentationLevel;", "+\t\tif (this.tabChar == DefaultCodeFormatterOptions.TAB) {", "+\t\t\tint rem = indent % this.indentationSize;", "+\t\t\tint addition = rem == 0 ? 0 : this.indentationSize - rem; // round to superior", "+\t\t\treturn indent + addition;", "-\t\t\treturn someColumn - 1;", "+\t\t\treturn indent;", "-\t}\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69c38d2ca21de10436b9e172da40f10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic int getNextIndentationLevel(int someColumn)", "signatureAfterChange": " \tpublic int getNextIndentationLevel(int someColumn)", "diff": ["-\t\tif (someColumn == 1) return this.indentationLevel;", "-\t\tif (this.useTab) {", "-\t\t\tint rem = (someColumn - 1)% this.tabSize; // round to superior", "-\t\t\treturn rem == 0 ? (someColumn - 1)/ this.tabSize : ((someColumn - 1)/ this.tabSize)+1;", "+\t\tint indent = someColumn - 1;", "+\t\tif (indent == 0)", "+\t\t\treturn this.indentationLevel;", "+\t\tif (this.snapToTabs) {", "+\t\t\tint rem = indent % this.indentationSize;", "+\t\t\tint addition = rem == 0 ? 0 : this.indentationSize - rem; // round to superior", "+\t\t\treturn indent + addition;", "-\t\t\treturn someColumn - 1;", "+\t\t\treturn indent;", "-\t}\t", "+\t}"]}], "num": 8412}