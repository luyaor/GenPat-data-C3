{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "885810af640c2670e54f343a83c83f84", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e8d8be11e1ce31ac76b5eb2fb10c32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "589f6f354433243a559cfee0f9641e3e2af4d62f", "commitAfterChange": "078478e8a765943e089111dd6dddc420a7546230", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void indexLibrary(IPath path, IProject referingProject)", "signatureAfterChange": " public void indexLibrary(IPath path, IProject referingProject)", "diff": ["+\t\t//TODO: (jerome) why this side-effect likely breaking external JAR update support", "-\tfor (int i = this.jobEnd; i >= this.jobStart; i--) {", "-\t\tIJob job = this.awaitingJobs[i];", "-\t\tif (job != null && request.equals(job)) return;", "-\t}", "+\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\t\tif (request.equals(this.awaitingJobs[i])) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c06b2b9107d4af7bdc66e0da0c4c4b8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "a80783c7a8d5186513edcff918a39b51bd15faed", "commitAfterChange": "c55cddff12b32377afae40bbcf9627a7ca7ad410", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void indexSourceFolder(JavaProject javaProject, IPath sourceFolder, final char[][] exclusionPattern)", "signatureAfterChange": " public void indexSourceFolder(JavaProject javaProject, IPath sourceFolder, final char[][] exclusionPattern)", "diff": ["+\tif (this.jobEnd >= this.jobStart) {", "+\t\t// check if a job to index the project is not already in the queue", "+\t\tIndexRequest request = new IndexAllProject(project, this);", "+\t\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\t\t\tif (request.equals(this.awaitingJobs[i])) return;", "+\t}", "+"]}], "num": 38284}