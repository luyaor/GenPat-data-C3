{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9bbe99023fd5ba4d932cf9c7723efc3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "228b63ee866ed12cfa1e397b52ee9e6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "commitAfterChange": "3043b7643a0760e0bf0e70d9da05eb1fd7cbd79c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\t\r public void searchDeclarationsOfSentMessages(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t\r public void searchDeclarationsOfSentMessages(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\tMatchLocator locator = new MatchLocator(\r", "-\t\t(SearchPattern)createSearchPattern(\"*\", IJavaSearchConstants.METHOD, IJavaSearchConstants.REFERENCES, true), //$NON-NLS-1$\r", "-\t\tIInfoConstants.DeclarationInfo,\r", "-\t\tresultCollector,\r", "-\t\tnew JavaWorkspaceScope());\r", "-\t// TBD: limit search to type or method by passing start and end of enclosing element\r", "-\tlocator.locateMatches(\r", "-\t\tnew String[] {enclosingElement.getUnderlyingResource().getFullPath().toString()}, \r", "-\t\tworkspace);\r", "+\tSearchPattern pattern = \r", "+\t\tnew DeclarationOfReferencedMethodsPattern(\r", "+\t\t\tnull, \r", "+\t\t\tIJavaSearchConstants.PATTERN_MATCH, \r", "+\t\t\tfalse, \r", "+\t\t\tnull, \r", "+\t\t\tnull, \r", "+\t\t\tnull, \r", "+\t\t\tnull,\r", "+\t\t\tnull,  \r", "+\t\t\tnull);\r", "+\tIJavaSearchScope scope = createJavaSearchScope(new IJavaElement[] {enclosingElement});\r", "+\tIResource resource = enclosingElement.getUnderlyingResource();\r", "+\tif (resource instanceof IFile) {\r", "+\t\tMatchLocator locator = new MatchLocator(\r", "+\t\t\tpattern,\r", "+\t\t\tIInfoConstants.DeclarationInfo,\r", "+\t\t\tresultCollector,\r", "+\t\t\tscope);\r", "+\t\tlocator.locateMatches(\r", "+\t\t\tnew String[] {resource.getFullPath().toString()}, \r", "+\t\t\tworkspace);\r", "+\t} else {\r", "+\t\tsearch(workspace, pattern, scope, resultCollector);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f1cf4f37455448c0ccad02f5328752", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "commitAfterChange": "3043b7643a0760e0bf0e70d9da05eb1fd7cbd79c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\t\r public void searchDeclarationsOfAccessedFields(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t\r public void searchDeclarationsOfAccessedFields(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\tMatchLocator locator = new MatchLocator(\r", "-\t\t(SearchPattern)createSearchPattern(\"*\", IJavaSearchConstants.FIELD, IJavaSearchConstants.REFERENCES, true), //$NON-NLS-1$\r", "-\t\tIInfoConstants.DeclarationInfo,\r", "-\t\tresultCollector,\r", "-\t\tnew JavaWorkspaceScope());\r", "-\t// TBD: limit search to type or method by passing start and end of enclosing element\r", "-\tlocator.locateMatches(\r", "-\t\tnew String[] {enclosingElement.getUnderlyingResource().getFullPath().toString()}, \r", "-\t\tworkspace);\r", "+\tSearchPattern pattern = \r", "+\t\tnew DeclarationOfAccessedFieldsPattern(\r", "+\t\t\tnull, \r", "+\t\t\tIJavaSearchConstants.PATTERN_MATCH, \r", "+\t\t\tfalse, \r", "+\t\t\tnull, \r", "+\t\t\tnull, \r", "+\t\t\tnull, \r", "+\t\t\tnull,\r", "+\t\t\ttrue,  // read access\r", "+\t\t\ttrue); // write access\r", "+\tIJavaSearchScope scope = createJavaSearchScope(new IJavaElement[] {enclosingElement});\r", "+\tIResource resource = enclosingElement.getUnderlyingResource();\r", "+\tif (resource instanceof IFile) {\r", "+\t\tMatchLocator locator = new MatchLocator(\r", "+\t\t\tpattern,\r", "+\t\t\tIInfoConstants.DeclarationInfo,\r", "+\t\t\tresultCollector,\r", "+\t\t\tscope);\r", "+\t\tlocator.locateMatches(\r", "+\t\t\tnew String[] {resource.getFullPath().toString()}, \r", "+\t\t\tworkspace);\r", "+\t} else {\r", "+\t\tsearch(workspace, pattern, scope, resultCollector);\r", "+\t}\r"]}], "num": 57118}