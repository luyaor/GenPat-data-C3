{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6504f12d736f787b0b7bbbc2c366391a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c91985fc8acaa484d2f64d7a3ac852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ed25425f5de4194a0f32ce4c1315af886ca42c42", "commitAfterChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "signatureAfterChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "diff": ["-\t\t// remove children", "+\t\t// remove existing children as the are replaced with the new children contained in newElements", "-\t\tif (openedElement instanceof IParent && existingInfo instanceof JavaElementInfo) {", "-\t\t\tIJavaElement[] children = ((JavaElementInfo)existingInfo).getChildren();", "-\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "-\t\t\t\tJavaElement child = (JavaElement) children[i];", "-\t\t\t\ttry {", "-\t\t\t\t\tchild.close();", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t// ignore", "-\t\t\t\t}", "-\t\t\t}", "+\t\tif (openedElement instanceof IParent) {", "+\t\t\tcloseChildren(existingInfo);", "-\t\t// When a JarPackageFragment is flused from the LRU cache, the entire", "+\t\t// When a JarPackageFragment is flushed from the LRU cache, the entire", "-\t\t// added (during the 'while' loop), we will end up in an inconsist state. ", "+\t\t// added (during the 'while' loop), we will end up in an inconsistent state. ", "-\t\t\tif( element instanceof JarPackageFragmentRoot ){", "+\t\t\tif (element instanceof JarPackageFragmentRoot) {", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38b5563683487055420e0b877e6cf84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2c3d71a674e588a8bcef926caa5965ce37ed2171", "commitAfterChange": "eafece2aa49c3bb94a91a1f3570bd054adea7b65", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "signatureAfterChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "diff": ["-\t\twhile (openedElement != null) {", "-\t\t\tif (!newElements.containsKey(openedElement)) {", "-\t\t\t\tbreak;", "+\t\t// remove children", "+\t\tObject existingInfo = this.cache.peekAtInfo(openedElement);", "+\t\tif (openedElement instanceof IParent && existingInfo instanceof JavaElementInfo) {", "+\t\t\tIJavaElement[] children = ((JavaElementInfo)existingInfo).getChildren();", "+\t\t\tfor (int i = 0, size = children.length; i < size; ++i) {", "+\t\t\t\tJavaElement child = (JavaElement) children[i];", "+\t\t\t\ttry {", "+\t\t\t\t\tchild.close();", "+\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "-\t\t\tif (this.cache.peekAtInfo(openedElement) != null) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\topenedElement = openedElement.getParent();", "-\t\t", "+\t"]}], "num": 30860}