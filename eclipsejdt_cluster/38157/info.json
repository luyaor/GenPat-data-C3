{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fdf177d585f0c9d6cf9ee8b83626817", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e8672bc4e0c971ee50b76c876de41a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public IResource getResource()", "signatureAfterChange": " public IResource resource(PackageFragmentRoot root)", "diff": ["-public IResource getResource() {", "-\tPackageFragmentRoot root = getPackageFragmentRoot();", "+public IResource resource(PackageFragmentRoot root) {", "-\tif (root.isArchive()) {", "-\t\treturn root.getResource();", "-\t} else {", "-\t\treturn ((IContainer) getParent().getResource()).getFile(new Path(getElementName()));", "-\t}", "+\treturn ((IContainer) ((Openable) this.parent).resource(root)).getFile(new Path(getElementName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a2e4cf27fae7f7aa301013998c5606a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "commitAfterChange": "e43c8c0f67a0087e9b964d25afd6c8f6f400f425", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " protected void consumeEnumConstantHeaderName()", "signatureAfterChange": " protected void consumeEnumConstantHeaderName()", "diff": ["-\t\tif (!(this.currentElement instanceof RecoveredType)", "+\t\tif (!(this.currentElement instanceof RecoveredType", "+\t\t\t\t\t|| (this.currentElement instanceof RecoveredField && ((RecoveredField)currentElement).fieldDeclaration.type == null))", "-\t\tif (!(this.currentElement instanceof RecoveredType)", "-\t\t\t&& (this.currentToken == TokenNameDOT)){", "-\t\t\tthis.lastCheckPoint = (int) (namePosition >>> 32);", "-\t\t\tthis.restartRecovery = true;", "-\t\t\treturn;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ec9bd9181d425cb654ea57331907d8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public IResource getResource()", "signatureAfterChange": " public IResource resource(PackageFragmentRoot root)", "diff": ["-public IResource getResource() {", "-\tPackageFragmentRoot root = this.getPackageFragmentRoot();", "-\tif (root.isArchive()) {", "-\t\treturn root.getResource();", "-\t} else {", "-\t\treturn ((IContainer)this.getParent().getResource()).getFile(new Path(this.getElementName()));", "-\t}", "+public IResource resource(PackageFragmentRoot root) {", "+\treturn ((IContainer) ((Openable) this.parent).resource(root)).getFile(new Path(this.getElementName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bae0cd4151189de56666b127f591249", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public IResource getResource()", "signatureAfterChange": " public IResource resource(PackageFragmentRoot root)", "diff": ["-public IResource getResource() {", "-\tPackageFragmentRoot root = this.getPackageFragmentRoot();", "-\tif (root.isArchive()) {", "-\t\treturn root.getResource();", "+public IResource resource(PackageFragmentRoot root) {", "+\tint length = this.names.length;", "+\tif (length == 0) {", "+\t\treturn root.resource(root);", "-\t\tint length = this.names.length;", "-\t\tif (length == 0) {", "-\t\t\treturn root.getResource();", "-\t\t} else {", "-\t\t\tIPath path = new Path(this.names[0]);", "-\t\t\tfor (int i = 1; i < length; i++)", "-\t\t\t\tpath = path.append(this.names[i]);", "-\t\t\treturn ((IContainer)root.getResource()).getFolder(path);", "-\t\t}", "+\t\tIPath path = new Path(this.names[0]);", "+\t\tfor (int i = 1; i < length; i++)", "+\t\t\tpath = path.append(this.names[i]);", "+\t\treturn ((IContainer)root.resource(root)).getFolder(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae65ddf9fc40a6e5a4ea67b2d1cc37e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "04658573020cdb441dcc7aa7e11d3fda9684c7f0", "commitAfterChange": "cd7bfc5cf79664bf3947908eaba3dbd14a446007", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tprotected Openable createElement(IResource resource, int elementType, IJavaProject project)", "signatureAfterChange": "\r \tprotected Openable createElement(IResource resource, int elementType, IJavaProject project)", "diff": ["+\t\t\t\tif  (project != null){\r", "+\t\t\t\t\telement = (Openable)project;\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t\t\r", "-\t\t\t\t\telement = project == null ? JavaCore.create(proj) : project;\r", "-\t\t\t\t} else if (!isOpened) {\r", "-\t\t\t\t\tif (project == null) {\r", "-\t\t\t\t\t\tproject = JavaCore.create(proj);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (project.isOpen()) {\r", "-\t\t\t\t\t\telement = project; // java project is being closed or removed\r", "-\t\t\t\t\t} \r", "-\t\t\t\t} // else not a java-project\r", "+\t\t\t\t\telement = JavaCore.create(proj);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\t// java project may have been been closed or removed (look for\r", "+\t\t\t\t\t// element amongst old java project s list).\r", "+\t\t\t\t\telement =  (Openable) manager.getJavaModel().findJavaProject(proj);\r", "+\t\t\t\t}\r"]}], "num": 38157}