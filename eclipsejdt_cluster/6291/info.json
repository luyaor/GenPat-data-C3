{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "887bf92916b8820ec7f4eb9562300e50", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ac92593e8be42be8c33f10df3add01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "diff": ["-\tprivate String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "+\tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "-\t\tfinal int len = _filesToProcess.length;", "+\t\tfinal IFile[] files = processorEnv.getFiles();", "+\t\tfinal int len = files.length;", "-\t\t\treturn _filesToProcess[0].getName();", "+\t\t\treturn files[0].getName();", "-\t\t\tfor (IFile file : _filesToProcess) {", "+\t\t\tfor (IFile file : files) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87cb8b4293adf6b6ab2d7319f0060087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tprivate static String getFileNamesForPrinting(final CompilationProcessorEnv env)", "signatureAfterChange": " \t \tprivate static String getFileNamesForPrinting(final AbstractCompilationEnv env)", "diff": ["-\tprivate static String getFileNamesForPrinting(final CompilationProcessorEnv env){", "-\t\tif( env instanceof ReconcileProcessorEnv ){", "+\tprivate static String getFileNamesForPrinting(final AbstractCompilationEnv env){", "+\t\tif( env instanceof ReconcileEnv ){", "-\t\t\treturn getFileNamesForPrinting((ProcessorEnvImpl)env);", "+\t\t\treturn getFileNamesForPrinting((BuildEnv)env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3d4e3d280a53949a65ce120073d70b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/scripts/GenerateBuildScript.java", "commitBeforeChange": "a9669ba54738c50871a6fabb5798db0e4e95ee47", "commitAfterChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprivate static void collectAllPropertiesFiles(File root, ArrayList collector)", "signatureAfterChange": "  \tprivate static void collectAllFiles(File root, ArrayList collector, FileFilter fileFilter)", "diff": ["-\tprivate static void collectAllPropertiesFiles(File root, ArrayList collector) {", "-\t\tFile[] files = root.listFiles();", "+\tprivate static void collectAllFiles(File root, ArrayList collector, FileFilter fileFilter) {", "+\t\tFile[] files = root.listFiles(fileFilter);", "-\t\t\t\tcollectAllPropertiesFiles(files[i], collector);", "-\t\t\t} else if (files[i].getName().endsWith(\".rsc\") || files[i].getName().endsWith(\".properties\")) { //$NON-NLS-1$", "+\t\t\t\tcollectAllFiles(files[i], collector, fileFilter);", "+\t\t\t} else {"]}], "num": 6291}