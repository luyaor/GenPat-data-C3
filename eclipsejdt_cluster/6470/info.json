{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efb43ca974f3c2d16551c89335ec16dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f36d49580a667faaaef69cb5a7b1e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " private void writeStreamInt(FileOutputStream stream, int val) throws IOException", "signatureAfterChange": " private void writeStreamInt(FileOutputStream stream, int val) throws IOException", "diff": ["-\tif ((this.bufferIndex+4) < BUFFER_WRITE_SIZE)  {", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) val;", "-\t} else {", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "-\t\tthis.streamBuffer[this.bufferIndex++] = (byte) val;", "-\t\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tthis.bufferIndex = 0;", "-\t\t}", "+\tif ((this.bufferIndex + 4) >= BUFFER_WRITE_SIZE)  {", "+\t\tstream.write(this.streamBuffer, 0, this.bufferIndex);", "+\t\tthis.bufferIndex = 0;", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 24);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 16);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) (val >> 8);", "+\tthis.streamBuffer[this.bufferIndex++] = (byte) val;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c339236149b168f30a7930e7ae327a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " private void writeStreamChars(FileOutputStream stream, char[] array) throws IOException", "signatureAfterChange": " private void writeStreamChars(FileOutputStream stream, char[] array, int start, int end) throws IOException", "diff": ["-\tint length= array.length;", "-\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\tthis.bufferIndex = 0;", "-\t}", "-\tif (this.bufferIndex == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\tthis.bufferIndex = 0;", "-\t}", "-\tint idx = this.bufferIndex;", "-\tfor (int i=0; i<length; i++) {", "-\t\tint ch = array[i];", "-\t\tif ((ch & 0x007F) == ch) {", "-\t\t\tthis.streamBuffer[idx++] = (byte) ch;", "-\t\telse if ((ch & 0x07FF) == ch) {", "+}", "+private void writeStreamChars(FileOutputStream stream, char[] array, int start, int end) throws IOException {", "+\t// start can NOT be == end", "+\t// must have checked that there is enough room for end - start * 3 bytes in the buffer", "+", "+\tint oldIndex = this.bufferIndex;", "+\twhile (start < end) {", "+\t\tint ch = array[start++];", "+\t\tif ((ch & 0x007F) == ch) {", "+\t\t\tthis.streamBuffer[this.bufferIndex++] = (byte) ch;", "+\t\t} else if ((ch & 0x07FF) == ch) {", "-\t\t\tthis.streamBuffer[idx++] = b;", "-\t\t\tif (idx == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\t\tidx = 0;", "-\t\t\t\tthis.bufferIndex -= BUFFER_WRITE_SIZE;", "-\t\t\t}", "+\t\t\tthis.streamBuffer[this.bufferIndex++] = b;", "-\t\t\tthis.streamBuffer[idx++] = b;", "+\t\t\tthis.streamBuffer[this.bufferIndex++] = b;", "-\t\t\tthis.streamBuffer[idx++] = b;", "-\t\t\tif (idx == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\t\tidx = 0;", "-\t\t\t\tthis.bufferIndex -= BUFFER_WRITE_SIZE;", "-\t\t\t}", "+\t\t\tthis.streamBuffer[this.bufferIndex++] = b;", "-\t\t\tthis.streamBuffer[idx++] = b;", "-\t\t\tif (idx == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\t\tidx = 0;", "-\t\t\t\tthis.bufferIndex -= BUFFER_WRITE_SIZE;", "-\t\t\t}", "+\t\t\tthis.streamBuffer[this.bufferIndex++] = b;", "-\t\t\tthis.streamBuffer[idx++] = b;", "-\t\t}", "-\t\tif (idx == BUFFER_WRITE_SIZE) { // write bytes array on stream if buffer is full", "-\t\t\tstream.write(this.streamBuffer, 0, BUFFER_WRITE_SIZE);", "-\t\t\tidx = 0;", "-\t\t\tthis.bufferIndex -= BUFFER_WRITE_SIZE;", "+\t\t\tthis.streamBuffer[this.bufferIndex++] = b;", "-\tthis.streamEnd += idx - this.bufferIndex + 2;", "-\tthis.bufferIndex = idx;", "+\tthis.streamEnd += this.bufferIndex - oldIndex;"]}], "num": 6470}