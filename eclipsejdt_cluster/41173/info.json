{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b99ee74b9133f1698d1679530839d084", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1ce66e668a5aced96fec75b3e60c32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "6ca2c17de7d2cf75286045cf5fe4db47b5ffe702", "commitAfterChange": "ec09b25a18c19092cc9fe16e9fc3af2be1689d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["-\t\t\t\tif (!prereqProject.isAccessible()) continue nextEntry;", "+\t\t\t\tif (!JavaProject.hasJavaNature(prereqProject)) continue nextEntry; // if project doesn't have java nature or is not accessible"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17e61138398c102a42d35a8c777837c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6ca2c17de7d2cf75286045cf5fe4db47b5ffe702", "commitAfterChange": "ec09b25a18c19092cc9fe16e9fc3af2be1689d02", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "diff": ["-\t\t\t\t\tif (requiredProjectRsc.exists() && requiredProjectRsc.isOpen()){ // special builder binary output", "+\t\t\t\t\tif (JavaProject.hasJavaNature(requiredProjectRsc)){ // special builder binary output"]}], "num": 41173}