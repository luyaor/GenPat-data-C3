{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29104557bd993ac80726e3a6e1b119d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b19d5fa6c94c4e3c0f9ee74f3cae2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "203e1e91ea665aa43439865980ef5bea63c7364f", "commitAfterChange": "6c37da54981cadce77fd6387ee838eeedda5a8b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public JavaModelCache()", "signatureAfterChange": "  public JavaModelCache()", "diff": ["+\t// adjust the size of the openable cache in function of the RATIO_PROPERTY property", "+\tdouble openableRatio = getOpenableRatio();", "-\t\tthis.openableCache = new VerboseElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio), \"Openable cache\"); //$NON-NLS-1$", "+\t\tthis.openableCache = new VerboseElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio * openableRatio), \"Openable cache\"); //$NON-NLS-1$", "-\t\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio));", "+\t\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio * openableRatio));", "-\tthis.childrenCache = new HashMap((int) (DEFAULT_CHILDREN_SIZE * ratio));", "+\tthis.childrenCache = new HashMap((int) (DEFAULT_CHILDREN_SIZE * ratio * openableRatio));", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2117b64b073669e368328129de5f9e8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "e2994fdb966db860a3ca2c7d3ca25f9fbb24e091", "commitAfterChange": "92d54f937c29485abb68beb6335433002715b054", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public JavaModelCache()", "signatureAfterChange": " \t public JavaModelCache()", "diff": ["+\t// set the size of the caches in function of the maximum amount of memory available", "+\tdouble ratio =  Runtime.getRuntime().maxMemory() / 64000000; // 64000000 is the base memory for most JVM", "-\tthis.rootCache = new ElementCache(DEFAULT_ROOT_SIZE);", "-\tthis.pkgCache = new ElementCache(DEFAULT_PKG_SIZE);", "-\tthis.openableCache = new ElementCache(DEFAULT_OPENABLE_SIZE);", "-\tthis.childrenCache = new HashMap(DEFAULT_CHILDREN_SIZE);", "+\tthis.rootCache = new ElementCache((int) (DEFAULT_ROOT_SIZE * ratio));", "+\tthis.pkgCache = new ElementCache((int) (DEFAULT_PKG_SIZE * ratio));", "+\tthis.openableCache = new ElementCache((int) (DEFAULT_OPENABLE_SIZE * ratio));", "+\tthis.childrenCache = new HashMap((int) (DEFAULT_CHILDREN_SIZE * ratio));"]}], "num": 1277}