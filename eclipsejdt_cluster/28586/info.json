{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ed831d5d325de44d5e1c2502b960d29", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1afdc53238b1607c9c92b703d3b2bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "06fd76b8332a7a5790831ad62dc1626276814e9a", "commitAfterChange": "7871b4f5d21fa78f50488c18f83f07a1233f696f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  static State read(IProject project, DataInputStream in) throws IOException", "signatureAfterChange": "  static State read(IProject project, DataInputStream in) throws IOException", "diff": ["+\tIWorkspaceRoot root = project.getWorkspace().getRoot();", "-\t\t\tcase 1 :", "+\t\t\tcase SOURCE_FOLDER :", "-\t\t\tcase 2 :", "+\t\t\tcase BINARY_FOLDER :", "-\t\t\t\tif (folderName.length() > 0) outputFolder = project.getFolder(folderName);", "+\t\t\t\tif (folderName.length() > 1) outputFolder = root.getFolder(new Path(folderName));", "-\t\t\tcase 3 : // external jar", "+\t\t\tcase EXTERNAL_JAR :", "-\t\t\tcase 4 : // workspace relative jar", "-\t\t\t\tWorkspaceRoot root = (WorkspaceRoot) project.getWorkspace().getRoot();", "-\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forLibrary(root.getFile(in.readUTF()));", "+\t\t\tcase INTERNAL_JAR :", "+\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forLibrary(root.getFile(new Path(in.readUTF())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39252ffd3eee773a1b888d3b21946f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "e50fa330bbb302e8ef44446c0c3afc64880dfa01", "commitAfterChange": "3a514d6cf7a163df7c9aa1b24e69e8f3a5b39e3c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  static State read(IProject project, DataInputStream in) throws IOException", "signatureAfterChange": "  static State read(IProject project, DataInputStream in) throws IOException", "diff": ["-\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forBinaryFolder(outputFolder, in.readBoolean(), null /* TODO store restriction in build state */);", "+\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forBinaryFolder(outputFolder, in.readBoolean(), readRestriction(in));", "-\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forLibrary(in.readUTF(), null /* TODO store restriction in build state */);", "+\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forLibrary(in.readUTF(), readRestriction(in));", "-\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forLibrary(root.getFile(new Path(in.readUTF())), null /* TODO store restriction in build state */);", "+\t\t\t\tnewState.binaryLocations[i] = ClasspathLocation.forLibrary(root.getFile(new Path(in.readUTF())), readRestriction(in));"]}], "num": 28586}