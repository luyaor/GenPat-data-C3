{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f165a6fb39a02625423be54908829ccb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd5be69f24836b69909c2729c325eb36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "+public FlowInfo analyseCode(", "-", "-\t\treturn right", "-\t\t\t.analyseCode(", "-\t\t\t\tcurrentScope,", "-\t\t\t\tflowContext,", "-\t\t\t\tleft.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits())", "-\t\t\t.unconditionalInits();", "-\t}", "+\tleft.checkNPE(currentScope, flowContext, flowInfo, false /* skip String */);", "+\tflowInfo = left.analyseCode(currentScope, flowContext, flowInfo).", "+\t\tunconditionalInits();", "+\tright.checkNPE(currentScope, flowContext, flowInfo, false /* skip String */);", "+\treturn right.analyseCode(currentScope, flowContext, flowInfo).", "+\t\tunconditionalInits();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fa8349e70a6f294f8a22711c823b5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetReturnStatement.java", "commitBeforeChange": "fbe3f3aabed3fd943703368b065a95bc68cf5a8d", "commitAfterChange": "3b51e6fd25bf226c9bb29d6317b71df712cf5255", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r \r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tflowInfo = super.analyseCode(currentScope, flowContext, flowInfo);\r", "-\t// clear the optimization bit which could have been positionned in super call\r", "-\texpression.bits &= ~ValueForReturnMASK;\r", "-\treturn flowInfo;\r", "+\tFlowInfo info = super.analyseCode(currentScope, flowContext, flowInfo);\r", "+\t// we need to remove this optimization in order to prevent the inlining of the return bytecode\r", "+\t// 1GH0AU7: ITPJCORE:ALL - Eval - VerifyError in scrapbook page\r", "+\tthis.expression.bits &= ~ValueForReturnMASK;\r", "+\treturn info;\r"]}], "num": 48946}