{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d5dddf7984cdb9244df4f8e9c15b31a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3558da990b5134d752d42891c91b5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8aaf5c369166203de49007a43e00fba427622d08", "commitAfterChange": "287376f0e3221ecbf877415fefd7d987e0a53878", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \t\tprivate void logProblem(CategorizedProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "signatureAfterChange": "  \t\tprivate void logProblem(CategorizedProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "diff": ["-\t\t\t\tfinal String errorReportSource = ((DefaultProblem) problem).errorReportSource(unitSource, this.tagBits);", "+\t\t\t\tfinal String errorReportSource = errorReportSource(problem, unitSource, this.tagBits);", "-\t\t\t\t\tfinal String errorReportSource = ((DefaultProblem) problem).errorReportSource(unitSource);", "+\t\t\t\t\tfinal String errorReportSource = errorReportSource(problem, unitSource, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44dd968d3a5a21c46a495c61eff78fb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/IntersectingPattern.java", "commitBeforeChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "commitAfterChange": "c9e042ca313baf5eded9aef49e3870dc5764fbfc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["-\t\t\tSearchPattern pattern = ((InternalSearchPattern) this).currentPattern();", "-\t\t\tEntryResult[] entries = ((InternalSearchPattern)pattern).queryIn(index);", "+\t\t\tSearchPattern pattern = currentPattern();", "+\t\t\tEntryResult[] entries = pattern.queryIn(index);", "-\t\t\t((InternalSearchPattern) this).acceptMatch((String) names[i], containerPath, separator, null/*no pattern*/, requestor, participant, scope); // AndPatterns cannot provide the decoded result", "+\t\t\tacceptMatch((String) names[i], containerPath, separator, null/*no pattern*/, requestor, participant, scope); // AndPatterns cannot provide the decoded result"]}], "num": 5542}