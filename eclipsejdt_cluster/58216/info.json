{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5828546e1f9b51fb3f7c48c6631b6e7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b9f25b2cce344b144b9e56fdda040d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "cbbe8b69b29b99c8c679b98644156abe11f1564d", "commitAfterChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal ITypeNameRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tthis.basicEngine.searchAllTypeNames(packageName, typeName, matchRule, searchFor, scope, new TypeNameRequestorAdapter(nameRequestor), waitingPolicy, progressMonitor);", "+\t\tTypeNameRequestorAdapter requestorAdapter = new TypeNameRequestorAdapter(nameRequestor);", "+\t\tthis.basicEngine.searchAllTypeNames(packageName, SearchPattern.R_EXACT_MATCH, typeName, matchRule, searchFor, scope, requestorAdapter, waitingPolicy, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7685d9517c32370967870b678ae81ba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "84e7ccc666453bf6300ee2ec41ee2751e7c7737b", "commitAfterChange": "5d09030a4eea6e88d96c48a37fd08714b86feb1d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "signatureAfterChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tsubProgress.subTask(", "-\t\t\t\t\t\t\t\t\t\t\t\tMessages.bind(Messages.jobmanager_filesToIndex, Integer.toString(awaitingJobsCount)));", "+\t\t\t\t\t\t\t\t\t\t\tString indexing = Messages.bind(Messages.jobmanager_filesToIndex, currentJob.getJobFamily(), Integer.toString(awaitingJobsCount));", "+\t\t\t\t\t\t\t\t\t\t\tsubProgress.subTask(indexing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b837e0dd31c3a1a679608d62ba3ed2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "350da3a6da35578cb4088fcd48530f3ade881af3", "commitAfterChange": "8b5193228bb71f374ca42b722cd59dc5947baffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static IMethod[] findMethods(IMethod method, IMethod[] methods)", "signatureAfterChange": " public static IMethod[] findMethods(IMethod method, IMethod[] methods)", "diff": ["-\t\tsimpleNames[i] = Signature.getSimpleName(Signature.toString(parameters[i]));", "+\t\tString erasure = Signature.getTypeErasure(parameters[i]);", "+\t\tsimpleNames[i] = Signature.getSimpleName(Signature.toString(erasure));"]}], "num": 58216}