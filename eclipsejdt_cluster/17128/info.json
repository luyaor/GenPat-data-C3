{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6bc76353f1b722726d2f6f182139acb7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4bfbcc78cab56913a447ef13f4c11a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 560, "methodNumberAfterChange": 560, "signatureBeforeChange": "\t\t\t\t\t \tpublic void test0555()", "signatureAfterChange": "\t\t\t\t\t \tpublic void test0555()", "diff": ["-\t\t\t\"Type mismatch: cannot convert from X<capture-of ? extends Number> to X<? extends U>\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<capture#4-of ? extends Number> to X<? extends U>\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from capture-of ? extends Number to capture-of ? extends U\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from capture#6-of ? extends Number to capture#5-of ? extends U\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from capture-of ? extends U to capture-of ? extends Number\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from capture#8-of ? extends U to capture#7-of ? extends Number\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c747b4035a071716e09708bb5fce00a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 939, "methodNumberAfterChange": 939, "signatureBeforeChange": " public void test0929()", "signatureAfterChange": " public void test0929()", "diff": ["-\t\t\"Type safety: Unchecked invocation allOf(Class<capture-of ? extends Enum>) of the generic method allOf(Class<E>) of type X\\n\" + ", "+\t\t\"Type safety: Unchecked invocation allOf(Class<capture#1-of ? extends Enum>) of the generic method allOf(Class<E>) of type X\\n\" + ", "-\t\t\"Type mismatch: cannot convert from Collection<capture-of ? extends Enum> to Collection<E>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Collection<capture#1-of ? extends Enum> to Collection<E>\\n\" + ", "-\t\t\"Type mismatch: cannot convert from Collection<capture-of ? extends Enum> to Collection<E>\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Collection<capture#2-of ? extends Enum> to Collection<E>\\n\" + "]}], "num": 17128}