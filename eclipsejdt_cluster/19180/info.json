{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0eb4c74f93aa526fcc8389c5546625a3", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b007d4ae75ca9e3616b92563dab015c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\treturn this.matches(importRef.tokens);\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\treturn this.matches(tokens);\r", "-\t}\r", "-}\r", "+ */\r", "+private int matchLevel(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\tif (this.matches(importRef.tokens)) {\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\tif (this.matches(tokens)) {\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e211a6877f301f8baa77b06a3186153", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\treturn this.matches(importRef.tokens);\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\treturn this.matches(tokens);\r", "-\t}\r", "-}\r", "+ */\r", "+private int matchLevel(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\tif (this.matches(importRef.tokens)) {\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\tif (this.matches(tokens)) {\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f34651202b365eca4fff6f7c97e5aecf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r private boolean matches(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(ImportReference importRef, boolean resolve) {\r", "-\tif (importRef.onDemand) {\r", "-\t\treturn this.matches(importRef.tokens);\r", "-\t} else {\r", "-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\treturn this.matches(tokens);\r", "-\t}\r", "-}\r", "+ */\r", "+private int matchLevel(ImportReference importRef, boolean resolve) {\r", "+\tif (importRef.onDemand) {\r", "+\t\tif (this.matches(importRef.tokens)) {\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tint length = importRef.tokens.length - 1;\r", "+\t\tchar[][] tokens = new char[length][];\r", "+\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "+\t\tif (this.matches(tokens)) {\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}], "num": 19180}