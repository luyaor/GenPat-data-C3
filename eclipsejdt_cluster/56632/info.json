{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c57ec31902d3182c6be7ab9d12b5a9e7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0806e62885be2bebeeb868bd33032143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/JavaDocRegion.java", "commitBeforeChange": "68525b84595448677be090c87606421a9f80c7ac", "commitAfterChange": "7af5dc6adcf6a26075d080ec37c4dad42d3059c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected final void markJavadocTag(final CommentRange range, final String token)", "signatureAfterChange": " \tprotected final void markJavadocTag(final CommentRange range, final char[] token)", "diff": ["-\tprotected final void markJavadocTag(final CommentRange range, final String token) {", "+\tprotected final void markJavadocTag(final CommentRange range, final char[] token) {", "-\t\tif (token.charAt(0) == JAVADOC_TAG_PREFIX && !range.hasAttribute(COMMENT_PARAMETER))", "+\t\tif (token[0] == JAVADOC_TAG_PREFIX && !range.hasAttribute(COMMENT_PARAMETER))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36920ee30dc68eb9ebeca26a466edbe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "69cf42e8bc4eba88935c2a54eaa23de2e6259a9b", "commitAfterChange": "46618cf13188500eaee539b8e46fcf26be42ca02", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate static Test buildComplianceTestSuite(List testClasses, Class setupClass, String complianceLevel)", "signatureAfterChange": " \tprivate static Test buildComplianceTestSuite(List testClasses, Class setupClass, long complianceLevel)", "diff": ["-\tprivate static Test buildComplianceTestSuite(List testClasses, Class setupClass, String complianceLevel) {", "-\t\tTestSuite complianceSuite = new TestSuite(complianceLevel);", "+\tprivate static Test buildComplianceTestSuite(List testClasses, Class setupClass, long complianceLevel) {", "+\t\tTestSuite complianceSuite = new TestSuite();", "-\t\t\tConstructor constructor = setupClass.getConstructor(new Class[]{Test.class, String.class});", "-\t\t\tTest setUp = (Test)constructor.newInstance(new Object[]{complianceSuite, complianceLevel});", "+\t\t\tConstructor constructor = setupClass.getConstructor(new Class[]{Test.class, long.class});", "+\t\t\tTest setUp = (Test)constructor.newInstance(new Object[]{complianceSuite, new Long(complianceLevel)});"]}], "num": 56632}