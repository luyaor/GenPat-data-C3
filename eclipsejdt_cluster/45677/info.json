{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c049577b2f20f3d15fa0cf7812bbcfb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0dbe8d602fcde6cc55d188283af2d76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "96a3c39fce5721600f8af3fa5110163336b3ab64", "commitAfterChange": "ea176c4b30f0ccecbe1ef65d5acaa7a437fc7839", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t} else {", "-\t\t\tString javaVMVersion = System.getProperty(\"java.vm.version\"); //$NON-NLS-1$", "-\t\t\tif (javaVMVersion != null && javaVMVersion.startsWith(\"1.4\")) { //$NON-NLS-1$", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t}", "+\t\t} else if (options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)) {", "+\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38f08992e13fa08a52016987d528f9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b4ed0b65fa7e4dab7f64c48a1e0994235fd71c07", "commitAfterChange": "704815efdb421b1509fbc4df9cf53393bfae994b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tpublic void locateMatches(\r \t\tString[] filePaths, \r \t\tIWorkspace workspace,\r \t\tIWorkingCopy[] workingCopies, \r \t\tIProgressMonitor progressMonitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void locateMatches(\r \t\tString[] filePaths, \r \t\tIWorkspace workspace,\r \t\tIWorkingCopy[] workingCopies, \r \t\tIProgressMonitor progressMonitor)\r \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\ttry {\r", "-\t\t\t\t\t\tIResource res = workingCopy.getOriginalElement().getUnderlyingResource();\r", "-\t\t\t\t\t\tString path = res.getFullPath().toString();\r", "-\t\t\t\t\t\twcPaths.put(path, workingCopy);\r", "-\t\t\t\t\t\tnewPaths[i] = path;\r", "-\t\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t\t// continue with next working copy\r", "-\t\t\t\t\t}\r", "+\t\t\t\t\tString path = workingCopy.getOriginalElement().getPath().toString();\r", "+\t\t\t\t\twcPaths.put(path, workingCopy);\r", "+\t\t\t\t\tnewPaths[i] = path;\r"]}], "num": 45677}