{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3232d1a5315957ea1a1af420832ff55b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "988ef778cb9526d500c78faad31c67f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void invalidSuperclass(SourceTypeBinding type, TypeReference superclassRef, ReferenceBinding expectedType)", "signatureAfterChange": " public void forwardTypeVariableReference(ASTNode location, TypeVariableBinding type)", "diff": ["+}", "+public void forwardTypeVariableReference(ASTNode location, TypeVariableBinding type) {", "+\tthis.handle(", "+\t\tIProblem.ReferenceToForwardTypeVariable,", "+\t\tnew String[] {new String(type.readableName())},", "+\t\tnew String[] {new String(type.shortReadableName())},", "+\t\tlocation.sourceStart,", "+\t\tlocation.sourceEnd);", "-public void invalidSuperclass(SourceTypeBinding type, TypeReference superclassRef, ReferenceBinding expectedType) {", "-\tint problemId = expectedType.problemId();", "-\tint id;", "-\tswitch (problemId) {", "-\t\tcase NotFound : // 1", "-\t\t\tid = IProblem.SuperclassNotFound;", "-\t\t\tbreak;", "-\t\tcase NotVisible : // 2", "-\t\t\tid = IProblem.SuperclassNotVisible;", "-\t\t\tbreak;", "-\t\tcase Ambiguous : // 3", "-\t\t\tid = IProblem.SuperclassAmbiguous;", "-\t\t\tbreak;", "-\t\tcase InternalNameProvided : // 4", "-\t\t\tid = IProblem.SuperclassInternalNameProvided;", "-\t\t\tbreak;", "-\t\tcase InheritedNameHidesEnclosingName : // 5", "-\t\t\tid = IProblem.SuperclassInheritedNameHidesEnclosingName;", "-\t\t\tbreak;", "-\t\tcase NoError : // 0", "-\t\tdefault :", "-\t\t\tneedImplementation(); // want to fail to see why we were here...", "-\t\t\treturn;", "-\t}", "-\tthis.handle(", "-\t\tid,", "-\t\tnew String[] {new String(expectedType.readableName()), new String(type.sourceName())},", "-\t\tnew String[] {new String(expectedType.shortReadableName()), new String(type.sourceName())},", "-\t\tsuperclassRef.sourceStart,", "-\t\tsuperclassRef.sourceEnd);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b89677d64e3ea3920af2157bf236e36a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void invalidSuperinterface(SourceTypeBinding type, TypeReference superinterfaceRef, ReferenceBinding expectedType)", "signatureAfterChange": " public void boundsMustBeAnInterface(ASTNode location, TypeBinding type)", "diff": ["+public void boundsMustBeAnInterface(ASTNode location, TypeBinding type) {", "+\tthis.handle(", "+\t\tIProblem.BoundsMustBeAnInterface,", "+\t\tnew String[] {new String(type.readableName())},", "+\t\tnew String[] {new String(type.shortReadableName())},", "+\t\tlocation.sourceStart,", "+\t\tlocation.sourceEnd);", "+}", "-}", "-public void invalidSuperinterface(SourceTypeBinding type, TypeReference superinterfaceRef, ReferenceBinding expectedType) {", "-\tint problemId = expectedType.problemId();", "-\tint id;", "-\tswitch (problemId) {", "-\t\tcase NotFound : // 1", "-\t\t\tid = IProblem.InterfaceNotFound;", "-\t\t\tbreak;", "-\t\tcase NotVisible : // 2", "-\t\t\tid = IProblem.InterfaceNotVisible;", "-\t\t\tbreak;", "-\t\tcase Ambiguous : // 3", "-\t\t\tid = IProblem.InterfaceAmbiguous;", "-\t\t\tbreak;", "-\t\tcase InternalNameProvided : // 4", "-\t\t\tid = IProblem.InterfaceInternalNameProvided;", "-\t\t\tbreak;", "-\t\tcase InheritedNameHidesEnclosingName : // 5", "-\t\t\tid = IProblem.InterfaceInheritedNameHidesEnclosingName;", "-\t\t\tbreak;", "-\t\tcase NoError : // 0", "-\t\tdefault :", "-\t\t\tneedImplementation(); // want to fail to see why we were here...", "-\t\t\treturn;", "-\t}", "-\t\tthis.handle(", "-\t\t\tid,", "-\t\t\tnew String[] {new String(expectedType.readableName()), new String(type.sourceName())},", "-\t\t\tnew String[] {new String(expectedType.shortReadableName()), new String(type.sourceName())},", "-\t\t\tsuperinterfaceRef.sourceStart,", "-\t\t\tsuperinterfaceRef.sourceEnd);", "-}"]}], "num": 47438}