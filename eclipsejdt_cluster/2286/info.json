{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbbbf44ba26d4f7a2ad8e24448eeec96", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2266249c70b8a32f515e967b91e43782", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": "  \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\tif (options.checkVisibility", "+\t\t\t\t\tif (this.options.checkVisibility", "-\t\t\t\t\tif (source != null", "-\t\t\t\t\t\t&& source.length > endPosition", "-\t\t\t\t\t\t&& source[endPosition] == '(')", "+\t\t\t\t\tif (this.source != null", "+\t\t\t\t\t\t&& this.source.length > this.endPosition", "+\t\t\t\t\t\t&& this.source[this.endPosition] == '(')", "-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, name);", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, name);", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptMethod(", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33da6d8fbd65b0a49378497ce90a22fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tprivate void findVariableName( \t\tchar[] token, \t\tchar[] qualifiedPackageName, \t\tchar[] qualifiedSourceName, \t\tchar[] sourceName, \t\tchar[][] excludeNames, \t\tint dim, \t\tint kind, \t\tint modifiers)", "signatureAfterChange": " \tprivate void findVariableName( \t\tchar[] token, \t\tchar[] qualifiedPackageName, \t\tchar[] qualifiedSourceName, \t\tchar[] sourceName, \t\tchar[][] excludeNames, \t\tint dim, \t\tint kind, \t\tint modifiers)", "diff": ["-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptVariableName(", "+\t\t\t\t\tCompletionEngine.this.noProposal = false;", "+\t\t\t\t\tCompletionEngine.this.requestor.acceptVariableName(", "-\t\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tCompletionEngine.this.startPosition - CompletionEngine.this.offset,", "+\t\t\t\t\t\tCompletionEngine.this.endPosition - CompletionEngine.this.offset,", "-\t\t\t\t\tjavaProject,", "+\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tjavaProject,", "+\t\t\t\t\tthis.javaProject,", "-\t\t\t\t\tjavaProject,", "+\t\t\t\t\tthis.javaProject,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db8b6c848bab6d0c275c7934372005d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void acceptPackage(char[] packageName)", "signatureAfterChange": " \tpublic void acceptPackage(char[] packageName)", "diff": ["-\t\trelevance += computeRelevanceForCaseMatching(qualifiedCompletionToken == null ? completionToken : qualifiedCompletionToken, packageName);", "+\t\trelevance += computeRelevanceForCaseMatching(this.qualifiedCompletionToken == null ? this.completionToken : this.qualifiedCompletionToken, packageName);", "-\t\tnoProposal = false;", "-\t\trequestor.acceptPackage(", "+\t\tthis.noProposal = false;", "+\t\tthis.requestor.acceptPackage(", "-\t\t\tresolvingImports", "+\t\t\tthis.resolvingImports", "-\t\t\tstartPosition - offset,", "-\t\t\tendPosition - offset,", "+\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af86da7c91cc3e21f05784b62ffaba24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "diff": ["-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptField(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptField(", "-\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\tif (source != null", "-\t\t\t\t\t&& source.length > endPosition", "-\t\t\t\t\t&& source[endPosition] == '(') {", "+\t\t\t\tif (this.source != null", "+\t\t\t\t\t&& this.source.length > this.endPosition", "+\t\t\t\t\t&& this.source[this.endPosition] == '(') {", "-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptMethod(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92dd241e55c5ff5cb32544eece04ab5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType)", "diff": ["-\t\t\tif (options.checkVisibility", "+\t\t\tif (this.options.checkVisibility", "-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptClass(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptInterface(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf76969e9fd281199e84481bc61f51cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t\t\t\t\tif (options.checkVisibility", "+\t\t\t\t\tif (this.options.checkVisibility", "-\t\t\t\t\tif (source == null", "-\t\t\t\t\t\t|| source.length <= endPosition", "-\t\t\t\t\t\t|| source[endPosition] != ')')", "+\t\t\t\t\tif (this.source == null", "+\t\t\t\t\t\t|| this.source.length <= this.endPosition", "+\t\t\t\t\t\t|| this.source[this.endPosition] != ')')", "-\t\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\t\trequestor.acceptAnonymousType(", "+\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\tthis.requestor.acceptAnonymousType(", "-\t\t\t\t\t\t\tendPosition - offset,", "-\t\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\t\tthis.endPosition - this.offset,", "+\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\t\trequestor.acceptMethod(", "+\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\t\t\t\tendPosition - offset,", "-\t\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\t\tthis.endPosition - this.offset,", "+\t\t\t\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c324460079fca2d7e9c625c5d1130dfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "diff": ["-\t\t\tif (options.checkVisibility", "+\t\t\tif (this.options.checkVisibility", "-\t\t\tint previousStartPosition = startPosition;", "+\t\t\tint previousStartPosition = this.startPosition;", "-\t\t\t\tif (source != null", "-\t\t\t\t\t&& source.length > endPosition", "-\t\t\t\t\t&& source[endPosition] == '(')", "+\t\t\t\tif (this.source != null", "+\t\t\t\t\t&& this.source.length > this.endPosition", "+\t\t\t\t\t&& this.source[this.endPosition] == '(')", "-\t\t\t\tif(prefixRequired && (source != null)) {", "-\t\t\t\t\tcompletion = CharOperation.subarray(source, startPosition, endPosition);", "+\t\t\t\tif(prefixRequired && (this.source != null)) {", "+\t\t\t\t\tcompletion = CharOperation.subarray(this.source, this.startPosition, this.endPosition);", "-\t\t\t\t\tstartPosition = endPosition;", "+\t\t\t\t\tthis.startPosition = this.endPosition;", "-\t\t\tif(prefixRequired || options.forceImplicitQualification){", "+\t\t\tif(prefixRequired || this.options.forceImplicitQualification){", "-\t\t\tnoProposal = false;", "-\t\t\trequestor.acceptMethod(", "+\t\t\tthis.noProposal = false;", "+\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\tstartPosition - offset,", "-\t\t\t\tendPosition - offset,", "+\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\tthis.endPosition - this.offset,", "-\t\t\tstartPosition = previousStartPosition;", "+\t\t\tthis.startPosition = previousStartPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35f8637f5d5c8d88c1723e77fcba3ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding)", "signatureAfterChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding)", "diff": ["-\t\tif (unitScope != null) {", "+\t\tif (this.unitScope != null) {", "-\t\t\tSourceTypeBinding[] types = unitScope.topLevelTypes;", "+\t\t\tSourceTypeBinding[] types = this.unitScope.topLevelTypes;", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptClass(", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\tstartPosition - offset, ", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tthis.startPosition - this.offset, ", "+\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptInterface(", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\tnameEnvironment.findTypes(qualifiedName, this);", "-\t\tnameEnvironment.findPackages(qualifiedName, this);", "+\t\tthis.nameEnvironment.findTypes(qualifiedName, this);", "+\t\tthis.nameEnvironment.findPackages(qualifiedName, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06904eb7429c43eedf811cd8415117b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "207683ceeef557e028c3a7026580ffe6ac9e1870", "commitAfterChange": "127cc67511a61e651ab72d6c1a8d166ef0b1ad54", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsFromStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tboolean exactMatch, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["-\tprivate void findLocalMethodsOfStaticImports(", "+\tprivate void findLocalMethodsFromStaticImports(", "+\t\tboolean exactMatch,", "-\t\t\t// nothing to insert - do not want to replace the existing selector & arguments", "-\t\t\tif (this.source != null", "-\t\t\t\t&& this.source.length > this.endPosition", "-\t\t\t\t&& this.source[this.endPosition] == '(') {", "-\t\t\t\tcompletion = method.selector;", "+\t\t\tif (!exactMatch) {", "+\t\t\t\tif (this.source != null", "+\t\t\t\t\t&& this.source.length > this.endPosition", "+\t\t\t\t\t&& this.source[this.endPosition] == '(') {", "+\t\t\t\t\tcompletion = method.selector;", "+\t\t\t\t} else {", "+\t\t\t\t\tcompletion = CharOperation.concat(method.selector, new char[] { '(', ')' });", "+\t\t\t\t}", "-\t\t\t\tcompletion = CharOperation.concat(method.selector, new char[] { '(', ')' });", "+\t\t\t\tthis.startPosition = this.endPosition;", "+\t\t\t\tthis.tokenStart = this.tokenEnd;"]}], "num": 2286}