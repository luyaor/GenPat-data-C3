{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5cc9adc25e78f7224864f882ece8d8d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cc6d43706b71e19c6fb7689e357880f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "7d4bee82a900c0281a6a29c63a8253603b313957", "commitAfterChange": "f13367a804be91afa515d5bd70068a59e4f675c4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public static IStatus validatePackageName(String name)", "signatureAfterChange": "\r public static IStatus validatePackageName(String name)", "diff": ["+\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\r", "-\t\tIStatus status = validateIdentifier(typeName);\r", "+\t\tchar[] scannedID = scannedIdentifier(typeName);\r", "+\t\tif (scannedID == null) {\r", "+\t\t\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"convention.illegalIdentifier\", typeName), null); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tIStatus status = workspace.validateName(new String(scannedID), IResource.FOLDER);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a47c3e3f4905aa276bffcfbff8d17c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "952d2bf40c8b5ee9d9f2f1971b355dede96e54bb", "commitAfterChange": "f9e0bb0958857b1dd0ff6b35b5ab438cbe588554", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public static boolean delete(IResource resource)", "signatureAfterChange": " public static IStatus delete(IResource resource)", "diff": ["-public static boolean delete(IResource resource) {", "-    try {", "-        resource.delete(true, null);", "-        if (isResourceDeleted(resource)) {", "-            return true;", "-        }", "-    }", "-    catch (CoreException e) {", "-        //\tskip", "-    }", "-    return waitUntilResourceDeleted(resource);", "+public static IStatus delete(IResource resource) {", "+\tIStatus status = null;", "+\ttry {", "+\t\tresource.delete(true, null);", "+\t\tif (isResourceDeleted(resource)) {", "+\t\t\treturn Status.OK_STATUS;", "+\t\t}", "+\t} catch (CoreException e) {", "+\t\tstatus = e.getStatus();", "+\t}", "+\tboolean deleted = waitUntilResourceDeleted(resource);", "+\tif (deleted) {", "+\t\treturn Status.OK_STATUS;", "+\t}", "+\tif (status != null) {", "+\t\treturn status;", "+\t}", "+\treturn new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, \"Cannot delete resource \"+resource);"]}], "num": 53108}