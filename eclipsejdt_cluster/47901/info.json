{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0d48d4b8f66e44d880b4eebe8febcf3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6ee7e34c3161f1d43c3589e0027348", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "e08c13a0c3bb4d09711ac8489d25db103dbf1d29", "commitAfterChange": "ef615d69291882d9684ed70ee76e1c7e60ee0223", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private void setUpBigProject() throws CoreException", "signatureAfterChange": " private void setUpBigProject() throws CoreException", "diff": ["-//\t\tboolean linux = \"linux\".equals(System.getProperty(\"osgi.os\", \"?\"));", "+\t\tlong start = System.currentTimeMillis();", "+\t\tif (PRINT) System.out.println(\"Create project \"+BIG_PROJECT_NAME+\":\");", "+", "-//\t\tfinal int rootLength = linux ? LINUX_FOLDERS_COUNT : FOLDERS_COUNT;", "-\t\tfinal String[] sourceFolders = new String[/*rootLength*/FOLDERS_COUNT];", "-\t\tfor (int i = 0; i < /*rootLength*/FOLDERS_COUNT; i++) {", "+\t\tfinal String[] sourceFolders = new String[FOLDERS_COUNT];", "+\t\tfor (int i = 0; i < FOLDERS_COUNT; i++) {", "+\t\tif (PRINT) System.out.print(\"\t- create \"+FOLDERS_COUNT+\" folders and \"+PACKAGES_COUNT+\" packages...\");", "-//\t\tint packLength = linux ? LINUX_PACKAGES_COUNT : PACKAGES_COUNT;", "-\t\tfor (int i = 0; i < /*rootLength*/FOLDERS_COUNT; i++) {", "-\t\t\tfor (int j = 0; j < /*packLength*/PACKAGES_COUNT; j++) {", "+\t\tfor (int i = 0; i < FOLDERS_COUNT; i++) {", "+\t\t\tif (PRINT && ((i+1)%10)==0) System.out.print(\"\t\t+ folder src\"+i+\"...\");", "+\t\t\tlong top = System.currentTimeMillis();", "+\t\t\tfor (int j = 0; j < PACKAGES_COUNT; j++) {", "+\t\t\tif (PRINT && ((i+1)%10)==0) System.out.println(\"(\"+(System.currentTimeMillis()-top)+\"ms)\");", "+\t\t}", "+\t\tif (PRINT) {", "+\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\t\tstart = System.currentTimeMillis();", "+\t\t\tSystem.out.print(\"\t- add project to full source workspace...\");", "-\t\tBIG_PROJECT = (JavaProject) createJavaProject(\"BigProject\", sourceFolders, \"bin\", \"1.4\");", "+\t\tBIG_PROJECT = (JavaProject) createJavaProject(BIG_PROJECT_NAME, sourceFolders, \"bin\", \"1.4\");", "-\t\tBIG_PROJECT_TYPE_PATH = new Path(\"/BigProject/src\" + (/*rootLength*/FOLDERS_COUNT-1) + \"/org/eclipse/jdt/core/tests\" + (/*rootLength*/FOLDERS_COUNT-1) + \"/performance\" + (/*packLength*/PACKAGES_COUNT-1) + \"/TestBigProject.java\");", "+\t\tif (PRINT) {", "+\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\t\tstart = System.currentTimeMillis();", "+\t\t\tSystem.out.print(\"\t- Create compilation unit with secondary type...\");", "+\t\t}", "+\t\tBIG_PROJECT_TYPE_PATH = new Path(\"/BigProject/src\" + (FOLDERS_COUNT-1) + \"/org/eclipse/jdt/core/tests\" + (FOLDERS_COUNT-1) + \"/performance\" + (PACKAGES_COUNT-1) + \"/TestBigProject.java\");", "-\t\tString content = \"package org.eclipse.jdt.core.tests\" + (/*rootLength*/FOLDERS_COUNT-1) + \".performance\" + (/*packLength*/PACKAGES_COUNT-1) + \";\\n\" +", "+\t\tString content = \"package org.eclipse.jdt.core.tests\" + (FOLDERS_COUNT-1) + \".performance\" + (PACKAGES_COUNT-1) + \";\\n\" +", "+\t\tif (PRINT) {", "+\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b98cf996e3f73496a2955c29967f2f8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "7e90b152d794472f9ccdc34291f34d9ac4acf6e7", "commitAfterChange": "8db2a22a82e2d4efc29edee16188f254a9d47da3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private void setUpBigProject() throws CoreException", "signatureAfterChange": " private void setUpBigProject() throws CoreException", "diff": ["-\t\tboolean linux = \"linux\".equals(System.getProperty(\"osgi.os\", \"?\"));", "+//\t\tboolean linux = \"linux\".equals(System.getProperty(\"osgi.os\", \"?\"));", "-\t\tfinal int rootLength = linux ? LINUX_FOLDERS_COUNT : FOLDERS_COUNT;", "-\t\tfinal String[] sourceFolders = new String[rootLength];", "-\t\tfor (int i = 0; i < rootLength; i++) {", "+//\t\tfinal int rootLength = linux ? LINUX_FOLDERS_COUNT : FOLDERS_COUNT;", "+\t\tfinal String[] sourceFolders = new String[/*rootLength*/FOLDERS_COUNT];", "+\t\tfor (int i = 0; i < /*rootLength*/FOLDERS_COUNT; i++) {", "-\t\tint packLength = linux ? LINUX_PACKAGES_COUNT : PACKAGES_COUNT;", "-\t\tfor (int i = 0; i < rootLength; i++) {", "-\t\t\tfor (int j = 0; j < packLength; j++) {", "+//\t\tint packLength = linux ? LINUX_PACKAGES_COUNT : PACKAGES_COUNT;", "+\t\tfor (int i = 0; i < /*rootLength*/FOLDERS_COUNT; i++) {", "+\t\t\tfor (int j = 0; j < /*packLength*/PACKAGES_COUNT; j++) {", "-\t\tBIG_PROJECT_TYPE_PATH = new Path(\"/BigProject/src\" + (rootLength-1) + \"/org/eclipse/jdt/core/tests\" + (rootLength-1) + \"/performance\" + (packLength-1) + \"/TestBigProject.java\");", "+\t\tBIG_PROJECT_TYPE_PATH = new Path(\"/BigProject/src\" + (/*rootLength*/FOLDERS_COUNT-1) + \"/org/eclipse/jdt/core/tests\" + (/*rootLength*/FOLDERS_COUNT-1) + \"/performance\" + (/*packLength*/PACKAGES_COUNT-1) + \"/TestBigProject.java\");", "-\t\tString content = \"package org.eclipse.jdt.core.tests\" + (rootLength-1) + \".performance\" + (packLength-1) + \";\\n\" +", "+\t\tString content = \"package org.eclipse.jdt.core.tests\" + (/*rootLength*/FOLDERS_COUNT-1) + \".performance\" + (/*packLength*/PACKAGES_COUNT-1) + \";\\n\" +"]}], "num": 47901}