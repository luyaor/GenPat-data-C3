{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bd175c2a622f41c5a808f36d3f411be", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b24bb9cb26c45dd9eca05ec3d24843f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t \tprotected void runNegativeTestWithExecution( \t\t\tString[] testFiles,  \t\t\tString expectedProblemLog,  \t\t\tString expectedSuccessOutputString,  \t\t\tString[] classLib, \t\t\tboolean shouldFlushOutputDirectory,  \t\t\tString[] vmArguments,  \t\t\tMap customOptions, \t\t\tICompilerRequestor clientRequestor)", "signatureAfterChange": " \t \tprotected void runNegativeTestWithExecution( \t\t\tString[] testFiles,  \t\t\tString expectedProblemLog,  \t\t\tString expectedSuccessOutputString,  \t\t\tString[] classLib, \t\t\tboolean shouldFlushOutputDirectory,  \t\t\tString[] vmArguments,  \t\t\tMap customOptions, \t\t\tICompilerRequestor clientRequestor)", "diff": ["+\t\tcompilerOptions.performMethodsFullRecovery = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef47edd787883e134804dbf0161a591", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments,  \t\tMap customOptions, \t\tICompilerRequestor clientRequestor, \t\tboolean skipJavac)", "signatureAfterChange": " \t \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments,  \t\tMap customOptions, \t\tICompilerRequestor clientRequestor, \t\tboolean skipJavac)", "diff": ["+\t\t\tcompilerOptions.performMethodsFullRecovery = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785ba139ece84ce30e138c248a4ab3cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 431, "methodNumberAfterChange": 432, "signatureBeforeChange": " public void setStatementsRecovery(boolean enabled)", "signatureAfterChange": " public void setStatementsRecovery(boolean enabled)", "diff": ["+}", "+\tif(enabled) this.options.performMethodsFullRecovery = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b97d0d5124ca9afb58332d6b38229f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected Compiler newCompiler()", "signatureAfterChange": "  protected Compiler newCompiler()", "diff": ["+\toptions.performStatementsRecovery = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b1a010e5cf5a01c168d184e3105dc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  protected Compiler newCompiler()", "signatureAfterChange": "  protected Compiler newCompiler()", "diff": ["+\tcompilerOptions.performMethodsFullRecovery = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c558e8cab67d28003d6b9febbaa8d31f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static void compile(String[] pathsAndContents, Map options, String outputPath)", "signatureAfterChange": " public static void compile(String[] pathsAndContents, Map options, String outputPath)", "diff": ["+\t\tcompilerOptions.performMethodsFullRecovery = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccebbf9b24d4321b9c7915ff951af34d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic void performCompilation() throws InvalidInputException", "signatureAfterChange": " \tpublic void performCompilation() throws InvalidInputException", "diff": ["+\t\tthis.compilerOptions.performStatementsRecovery = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd12715cddec2b6262c2f9198091509e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/Evaluator.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " Compiler getCompiler(ICompilerRequestor compilerRequestor)", "signatureAfterChange": " Compiler getCompiler(ICompilerRequestor compilerRequestor)", "diff": ["+\tcompilerOptions.performMethodsFullRecovery = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e85762535dfb5d9c08b4ec6888bca06a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected void runConformTestThrowingError( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "signatureAfterChange": " \tprotected void runConformTestThrowingError( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "diff": ["+\t\tcompilerOptions.performMethodsFullRecovery = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f425720f2d6d85192b9d4719df00eddd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void performCompilation() throws InvalidInputException", "signatureAfterChange": " public void performCompilation() throws InvalidInputException", "diff": ["+\tthis.compilerOptions.performMethodsFullRecovery = false;"]}], "num": 2051}