{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d10a4dea704c40c8eae65a8aef46658", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2375e566305f2916401fd0c2ef2a48d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "commitAfterChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\tcase 'n':", "-\t\t\t\t\t\tif (length == TAG_NOT_NULL_LENGTH && CharOperation.equals(TAG_NOT_NULL, tagName)) {", "-\t\t\t\t\t\t\tthis.notNull = true;", "-\t\t\t\t\t\t\tthis.tagValue = TAG_NOT_NULL_VALUE;", "-\t\t\t\t\t\t} ", "-\t\t\t\t\t\telse if (length == TAG_NULLABLE_LENGTH && CharOperation.equals(TAG_NULLABLE, tagName)) {", "-\t\t\t\t\t\t\tthis.nullable = true;", "-\t\t\t\t\t\t\tthis.tagValue = TAG_NULLABLE_VALUE;", "-\t\t\t\t\t\t} ", "-\t\t\t\t\t\telse {", "-\t\t\t\t\t\t\tthis.tagValue = TAG_OTHERS_VALUE;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tcreateTag();", "-\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9aa093e940a84ac4f54a5121010e801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "commitAfterChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase 'n':", "-\t\t\t\t\t\tif (length == TAG_NOT_NULL_LENGTH && CharOperation.equals(TAG_NOT_NULL, tagName)) {", "-\t\t\t\t\t\t\tthis.notNull = true;", "-\t\t\t\t\t\t\tvalid = true;", "-\t\t\t\t\t\t\tthis.tagValue = TAG_NOT_NULL_VALUE;", "-\t\t\t\t\t\t} ", "-\t\t\t\t\t\telse if (length == TAG_NULLABLE_LENGTH && CharOperation.equals(TAG_NULLABLE, tagName)) {", "-\t\t\t\t\t\t\tthis.nullable = true;", "-\t\t\t\t\t\t\tvalid = true;", "-\t\t\t\t\t\t\tthis.tagValue = TAG_NULLABLE_VALUE;", "-\t\t\t\t\t\t} "]}], "num": 43808}