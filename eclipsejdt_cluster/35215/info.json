{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12f60e58ddd8552a8b881e328a1911bb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2503878d46ad6b1400de91c1a9e87132", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testElementPatternSingleTypeArgument02() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesElementPatternSingleTypeParameter02() throws CoreException", "diff": ["-\t// Search reference to a generic method", "-\tpublic void testElementPatternSingleTypeArgument02() throws CoreException {", "-\t\tIType type = getCompilationUnit(\"JavaSearch15/src/g4/m/def/GS.java\").getType(\"GS\");", "+\tpublic void testMethodReferencesElementPatternSingleTypeParameter02() throws CoreException {", "+\t\tIType type = getCompilationUnit(\"JavaSearch15/src/g5/m/def/Single.java\").getType(\"Single\");", "+\t\t// search reference to a generic method", "-\t\tIJavaSearchScope scope = getJavaSearchCUScope(\"JavaSearch15\", \"g4/m/ref\", \"R1.java\");", "+\t\tIJavaSearchScope scope = getJavaSearchScope15();", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testObject() [generic(new Object())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testException() [generic(new Exception())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testRuntimeException() [generic(new RuntimeException())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testUnbound() [generic(new Exception())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testExtends() [generic(new Exception())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testSuper() [generic(new Exception())] EXACT_MATCH\",", "-\t\t\tresultCollector);", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testSingle() [generic(new Exception())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testObject() [generic(new Object())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [generic(new Exception())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testRuntimeException() [generic(new RuntimeException())] ERASURE_MATCH\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e564cde099574052115cfc8edda7270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void testElementPatternSingleTypeArgument01() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesElementPatternSingleTypeParameter01() throws CoreException", "diff": ["-\t// Search reference to a standard method", "-\tpublic void testElementPatternSingleTypeArgument01() throws CoreException {", "-\t\tIType type = getCompilationUnit(\"JavaSearch15/src/g4/m/def/GS.java\").getType(\"GS\");", "+\t// Search references to methods defined in a single type parameter class", "+\tpublic void testMethodReferencesElementPatternSingleTypeParameter01() throws CoreException {", "+\t\tIType type = getCompilationUnit(\"JavaSearch15/src/g5/m/def/Single.java\").getType(\"Single\");", "+\t\t// search reference to a standard method", "-\t\tIJavaSearchScope scope = getJavaSearchCUScope(\"JavaSearch15\", \"g4/m/ref\", \"R1.java\");", "+\t\tIJavaSearchScope scope = getJavaSearchScope15();", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testObject() [standard(new Object())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testException() [standard(new Exception())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testRuntimeException() [standard(new RuntimeException())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testUnbound() [standard(null)] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testExtends() [standard(null)] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g4/m/ref/R1.java void g4.m.ref.R1.testSuper() [standard(new Exception())] EXACT_MATCH\",", "-\t\t\tresultCollector);", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testSingle() [standard(new Exception())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testObject() [standard(new Object())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [standard(new Exception())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testRuntimeException() [standard(new RuntimeException())] ERASURE_MATCH\"", "+\t\t);"]}], "num": 35215}