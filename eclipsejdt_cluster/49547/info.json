{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a287314193cd3861c1b556dfdef46373", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548e0cce1c19a2b513ecb3c0892b9bb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "aaae955fcb8455cf927dc02d0253f8cb9fabe31f", "commitAfterChange": "3ba22e291e000d313f08c2f65103444b86598ec8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\tif (getException() == null) {", "+\t\tThrowable exception = getException();", "+\t\tif (exception == null) {", "-\t\t\treturn getException().getMessage();", "+\t\t\tString message = exception.getMessage();", "+\t\t\tif (message != null) {", "+\t\t\t\treturn message;", "+\t\t\t} else {", "+\t\t\t\treturn exception.toString();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e566914eb6d1e6f793638b751e3f40f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/target/CodeSnippetClassLoader.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected Class loadClass(String name, boolean resolve) throws ClassNotFoundException", "signatureAfterChange": " protected Class loadClass(String name, boolean resolve) throws ClassNotFoundException", "diff": ["-\t\t\t} else {", "-\t\t\t\treturn clazz;", "-\t\t}", "-\t} else {", "-\t\tClass clazz = makeClass(name, resolve);", "-\t\tif (clazz == null) {", "-\t\t\treturn delegateLoadClass(name);", "-\t\t} else {", "+\tClass clazz = makeClass(name, resolve);", "+\tif (clazz == null) {", "+\t\treturn delegateLoadClass(name);", "+\t}", "+\treturn clazz;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc06ef17ecc64c7e7783b5a54f8cd8d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/negative/NegativeModelProc.java", "commitBeforeChange": "347a15ddb09354fd82312f43e8a959f68c39e906", "commitAfterChange": "1203ec285e9510454e7eee6b9217d8d694a24e95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t\tif (enable > 4) {", "-\t\t\t\treportError(\"Option value must be an integer 1 to 4\");", "+\t\t\tif (enable > 5) {", "+\t\t\t\treportError(\"Option value must be an integer 1 to 5\");", "+\t\t\t\ttestNegative5 = enable == 5;", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\tif (testNegative5 && !checkNegative5()) {"]}], "num": 49547}