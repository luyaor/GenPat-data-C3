{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6703fbbf10f7592d152e54d0fb6dbc0a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280b5da0d1598725f1c953c0010f4de9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "2d6dd32ebdeb3cb0db4aae1fd68101be25bf888e", "commitAfterChange": "f8ceffc6d1e175591b286c476ddc0470a165aef9", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tLambdaExpression copy()", "signatureAfterChange": "  \tLambdaExpression copy()", "diff": ["-\t\tfinal char[] source = this.compilationResult.getCompilationUnit().getContents();", "-\t\tLambdaExpression copy =  (LambdaExpression) parser.parseLambdaExpression(source, this.sourceStart, this.sourceEnd - this.sourceStart + 1, ", "+\t\tfinal ICompilationUnit compilationUnit = this.compilationResult.getCompilationUnit();", "+\t\tchar[] source = compilationUnit != null ? compilationUnit.getContents() : this.text;", "+\t\tLambdaExpression copy =  (LambdaExpression) parser.parseLambdaExpression(source, compilationUnit != null ? this.sourceStart : 0, this.sourceEnd - this.sourceStart + 1, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e7f18d73085e7966922034850b7789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tLambdaExpression copy()", "signatureAfterChange": "  \tLambdaExpression copy()", "diff": ["-\t\tfinal Parser parser = new Parser(this.enclosingScope.problemReporter(), false);", "+\t\tfinal Parser parser = new Parser(this.scope.problemReporter(), false);", "-\t\tLambdaExpression copy;", "-\t\t", "-\t\tCompilationUnitDeclaration unit = this.enclosingScope.referenceCompilationUnit();", "-\t\tCompilationResult original = unit.compilationResult;", "-\t\tunit.compilationResult = devNullCompilationResult;", "-\t\t", "-\t\ttry {", "-\t\t\tcopy =  (LambdaExpression) parser.parseExpression(source, this.sourceStart, this.sourceEnd - this.sourceStart + 1, unit);", "-\t\t} finally {", "-\t\t\tunit.compilationResult = original;", "-\t\t}", "-\t\tcopy.compilationResult = devNullCompilationResult;", "-\t\treturn copy;", "+\t\treturn (LambdaExpression) parser.parseExpression(source, this.sourceStart, this.sourceEnd - this.sourceStart + 1, ", "+\t\t\t\t\t\t\t\t\t\tthis.scope.referenceCompilationUnit(), false /* record line separators */);"]}], "num": 24097}