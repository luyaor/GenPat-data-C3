{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea894670cfec7696c147ed8cddb6a63a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e1cde7e6e02347cc9cedcd7c415476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b031afa5d276b867791e1b801c0ddbbd905837a2", "commitAfterChange": "af60458069f14dd1b42612d075df4c51d6608d2d", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": " \tpublic void test085()", "signatureAfterChange": " \tpublic void test085()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in Parent.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tstatic void staticCase1(Collection c) {}\\n\" + ", "+\t\t\t\t\"\t                        ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in Parent.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tvoid instanceCase1(Collection c) {}\\n\" + ", "+\t\t\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in Parent.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tstatic void staticCase1(Collection<String> c) {}\\n\" + ", "+\t\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method staticCase1(Collection<String>) of type Child has the same erasure as staticCase1(Collection) of type Parent but does not hide it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in Parent.java (at line 10)\\n\" + ", "+\t\t\t\t\"\tstatic void staticCase2(Collection c) {}\\n\" + ", "+\t\t\t\t\"\t                        ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in Parent.java (at line 11)\\n\" + ", "+\t\t\t\t\"\tvoid instanceCase1(Collection<String> c) {}\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method instanceCase1(Collection<String>) of type Child has the same erasure as instanceCase1(Collection) of type Parent but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. WARNING in Parent.java (at line 12)\\n\" + ", "+\t\t\t\t\"\t@Override void instanceCase2(Collection c) {}\\n\" + ", "+\t\t\t\t\"\t                             ^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7a5f134e921573858fdbf55988c647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e62c45ebe5881b0e2838be4fcb8a4a48c85b9c0c", "commitAfterChange": "c36a6a2b662267e56067d121b7f34ae48cbcb692", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "  \tpublic void test037()", "signatureAfterChange": "  \tpublic void test037()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ? ", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" : ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tabstract class Y implements J, I { }\\n\" + ", "+\t\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(A<String>) of type J has the same erasure as foo(A) of type I but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tclass YYY implements J, I { public void foo(A a) {} }\\n\" + ", "+\t\t\t\t\"\t                                            ^\\n\" + ", "+\t\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tclass XXX implements I, J { public void foo(A a) {} }\\n\" + ", "+\t\t\t\t\"\t                                            ^\\n\" + ", "+\t\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tclass ZZZ implements K { public void foo(A a) {} }\\n\" + ", "+\t\t\t\t\"\t                                         ^\\n\" + ", "+\t\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\tinterface I { void foo(A a); }\\n\" + ", "+\t\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tinterface K extends I { void foo(A<String> a); }\\n\" + ", "+\t\t\t\t\"\t                             ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(A<String>) of type K has the same erasure as foo(A) of type I but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}], "num": 27689}