{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "597acd486acfd83383a1a99af8d7702b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d3f33a00405e3d4cbe369e1bc7c7e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0fb012af3c6557520ab00415c58833602b027192", "commitAfterChange": "9b946cfc5e836db6230d5f068e2a6b12c282bcf4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tnew PackageFragmentRoot((IResource)target, this));", "+\t\t\t\t\t\t\tgetPackageFragmentRoot((IResource)target));", "-\t\t\t\t\tswitch (resource.getType()){", "-\t\t\t\t\t\tcase IResource.FOLDER :", "-\t\t\t\t\t\t\taccumulatedRoots.add(", "-\t\t\t\t\t\t\t\tnew PackageFragmentRoot(resource, this));", "-\t\t\t\t\t\t\trootIDs.add(rootID);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase IResource.FILE :", "-\t\t\t\t\t\t\tif (Util.isArchiveFileName(resource.getName())) {", "-\t\t\t\t\t\t\t\taccumulatedRoots.add(", "-\t\t\t\t\t\t\t\t\tnew JarPackageFragmentRoot(resource, this));", "-\t\t\t\t\t\t\t\trootIDs.add(rootID);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\tIPackageFragmentRoot root = getPackageFragmentRoot(resource);", "+\t\t\t\t\tif (root != null) {", "+\t\t\t\t\t\taccumulatedRoots.add(root);", "+\t\t\t\t\t\trootIDs.add(rootID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b0cf364ca86f98ca9dfe34afaecac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "c333ceff8dd520a0590ee780b2fe8c5efcd4c013", "commitAfterChange": "c77b24714f3e6f9d0a1f77d86a434cfb1d3d7793", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["-\t\t\t\t\tpkgFragmentRoots = project.computePackageFragmentRoots(oldResolvedPath[i]);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tObjectVector accumulatedRoots = new ObjectVector();", "+\t\t\t\t\t\tHashSet rootIDs = new HashSet(5);", "+\t\t\t\t\t\trootIDs.add(project.rootID());", "+\t\t\t\t\t\tproject.computePackageFragmentRoots(", "+\t\t\t\t\t\t\toldResolvedPath[i], ", "+\t\t\t\t\t\t\taccumulatedRoots, ", "+\t\t\t\t\t\t\trootIDs,", "+\t\t\t\t\t\t\ttrue, // inside original project", "+\t\t\t\t\t\t\tfalse, // don't check existency", "+\t\t\t\t\t\t\tfalse); // don't retrieve exported roots", "+\t\t\t\t\t\tpkgFragmentRoots = new IPackageFragmentRoot[accumulatedRoots.size()];", "+\t\t\t\t\t\taccumulatedRoots.copyInto(pkgFragmentRoots);", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\tpkgFragmentRoots =  new IPackageFragmentRoot[] {};", "+\t\t\t\t\t}"]}], "num": 54799}