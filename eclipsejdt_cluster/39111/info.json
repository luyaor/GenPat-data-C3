{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8f938f50402bcc30083276e3f91d39b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241c9a36d20dd9d49b8f92a8b7c0493f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "7de3f6264799e01e0a483c9f8440cca573d04980", "commitAfterChange": "3b2576043b7ed3c90e0098c97a95659f4b9c9dcb", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tUtil.verbose(\"CPContainer SET  - setting container\"); //$NON-NLS-1$", "-\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\t\"\tprojects: {\" //$NON-NLS-1$", "-\t\t\t\t+ org.eclipse.jdt.internal.compiler.util.Util.toString( ", "+\t\t\t\t\"CPContainer SET  - setting container\\n\" + //$NON-NLS-1$", "+\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\"\tprojects: {\" +//$NON-NLS-1$", "+\t\t\t\torg.eclipse.jdt.internal.compiler.util.Util.toString( ", "-\t\t\t\t\t})", "-\t\t\t\t+ \"}\"); //$NON-NLS-1$", "-\t\t\tUtil.verbose(", "-\t\t\t\t\"\tvalues: {\\n\" //$NON-NLS-1$", "-\t\t\t\t+ org.eclipse.jdt.internal.compiler.util.Util.toString(", "-\t\t\t\t\t\trespectiveContainers, ", "-\t\t\t\t\t\tnew org.eclipse.jdt.internal.compiler.util.Util.Displayable(){ ", "-\t\t\t\t\t\t\tpublic String displayString(Object o) { ", "-\t\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(\"\t\t\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tif (o == null) {", "-\t\t\t\t\t\t\t\t\tbuffer.append(\"<null>\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\treturn buffer.toString();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tIClasspathContainer container = (IClasspathContainer) o;", "-\t\t\t\t\t\t\t\tbuffer.append(container.getDescription());", "-\t\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "-\t\t\t\t\t\t\t\tif (entries != null){", "-\t\t\t\t\t\t\t\t\tfor (int i = 0; i < entries.length; i++){", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\t\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(entries[i]); ", "-\t\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tbuffer.append(\" \t\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t}) +", "+\t\t\t\t\"}\\n\tvalues: {\\n\"  +//$NON-NLS-1$", "+\t\t\t\torg.eclipse.jdt.internal.compiler.util.Util.toString(", "+\t\t\t\t\trespectiveContainers, ", "+\t\t\t\t\tnew org.eclipse.jdt.internal.compiler.util.Util.Displayable(){ ", "+\t\t\t\t\t\tpublic String displayString(Object o) { ", "+\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(\"\t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tif (o == null) {", "+\t\t\t\t\t\t\t\tbuffer.append(\"<null>\"); //$NON-NLS-1$", "-\t\t\t\t\t\t})", "-\t\t\t\t+ \"\\n\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tIClasspathContainer container = (IClasspathContainer) o;", "+\t\t\t\t\t\t\tbuffer.append(container.getDescription());", "+\t\t\t\t\t\t\tbuffer.append(\" {\\n\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "+\t\t\t\t\t\t\tif (entries != null){", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < entries.length; i++){", "+\t\t\t\t\t\t\t\t\tbuffer.append(\" \t\t\t\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tbuffer.append(entries[i]); ", "+\t\t\t\t\t\t\t\t\tbuffer.append('\\n'); ", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbuffer.append(\" \t\t}\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn buffer.toString();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}) +", "+\t\t\t\t\"\\n\t}\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"CPContainer INIT - reentering access to project container during its initialization, will see previous value\"); //$NON-NLS-1$ ", "-\t\t\t\t\t\t\tUtil.verbose(\"\tproject: \" + affectedProject.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(previousContainer.getDescription());", "+\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\t\t\tbuffer.append(\"CPContainer INIT - reentering access to project container during its initialization, will see previous value\\n\"); //$NON-NLS-1$ ", "+\t\t\t\t\t\t\tbuffer.append(\"\tproject: \" + affectedProject.getElementName() + '\\n'); //$NON-NLS-1$", "+\t\t\t\t\t\t\tbuffer.append(\"\tcontainer path: \" + containerPath + '\\n'); //$NON-NLS-1$", "+\t\t\t\t\t\t\tbuffer.append(\"\tprevious value: \"); //$NON-NLS-1$", "+\t\t\t\t\t\t\tbuffer.append(previousContainer.getDescription());", "-\t\t\t\t\t\t\tUtil.verbose(\"\tprevious value: \" + buffer.toString()); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(buffer.toString());", "-\t\t\t\t\t\t\tUtil.verbose(\"CPContainer SET  - updating affected project due to setting container\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"\tproject: \" + affectedProject.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "+\t\t\t\t\t\t\tUtil.verbose(", "+\t\t\t\t\t\t\t\t\"CPContainer SET  - updating affected project due to setting container\\n\" + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\"\tproject: \" + affectedProject.getElementName() + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\tUtil.verbose(\"CPContainer SET  - FAILED DUE TO EXCEPTION\", System.err); //$NON-NLS-1$", "-\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath, System.err); //$NON-NLS-1$", "+\t\t\t\tUtil.verbose(", "+\t\t\t\t\t\"CPContainer SET  - FAILED DUE TO EXCEPTION\\n\" + //$NON-NLS-1$", "+\t\t\t\t\t\"\tcontainer path: \" + containerPath, //$NON-NLS-1$", "+\t\t\t\t\tSystem.err);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bf1a33969b149b0881a0f3c822a4d72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "7de3f6264799e01e0a483c9f8440cca573d04980", "commitAfterChange": "3b2576043b7ed3c90e0098c97a95659f4b9c9dcb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\t\t\t\tUtil.verbose(\"CPContainer INIT - triggering initialization\"); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tproject: \" + project.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tinitializer: \" + initializer); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tinvocation stack trace:\"); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(", "+\t\t\t\t\t\t\"CPContainer INIT - triggering initialization\\n\" + //$NON-NLS-1$", "+\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\"\tinitializer: \" + initializer + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\"\tinvocation stack trace:\"); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"CPContainer INIT - after resolution\"); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tproject: \" + project.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "+\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\tbuffer.append(\"CPContainer INIT - after resolution\\n\"); //$NON-NLS-1$", "+\t\t\t\t\tbuffer.append(\"\tproject: \" + project.getElementName() + '\\n'); //$NON-NLS-1$", "+\t\t\t\t\tbuffer.append(\"\tcontainer path: \" + containerPath + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\t\tUtil.verbose(\"\tcontainer: \"+container.getDescription()+\" {\"); //$NON-NLS-2$//$NON-NLS-1$", "+\t\t\t\t\t\tbuffer.append(\"\tcontainer: \"+container.getDescription()+\" {\\n\"); //$NON-NLS-2$//$NON-NLS-1$", "-\t\t\t\t\t\t\t\tUtil.verbose(\"\t\t\" + entries[i]); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tbuffer.append(\"\t\t\" + entries[i] + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\t\tUtil.verbose(\"\t}\");//$NON-NLS-1$", "+\t\t\t\t\t\tbuffer.append(\"\t}\");//$NON-NLS-1$", "-\t\t\t\t\t\tUtil.verbose(\"\tcontainer: {unbound}\");//$NON-NLS-1$", "+\t\t\t\t\t\tbuffer.append(\"\tcontainer: {unbound}\");//$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(buffer.toString());", "-\t\t\t\t\tUtil.verbose(\"CPContainer INIT - no initializer found\"); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tproject: \" + project.getElementName()); //$NON-NLS-1$", "-\t\t\t\t\tUtil.verbose(\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "+\t\t\t\t\tUtil.verbose(", "+\t\t\t\t\t\t\"CPContainer INIT - no initializer found\\n\" + //$NON-NLS-1$", "+\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "+\t\t\t\t\t\t\"\tcontainer path: \" + containerPath); //$NON-NLS-1$"]}], "num": 39111}