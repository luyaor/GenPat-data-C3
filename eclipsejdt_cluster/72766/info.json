{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42e240126e97b348d941f9085a360a8c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b0fff0b15144f264f56af7d5b1bca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "    public void resolve()", "signatureAfterChange": "    public void resolve()", "diff": ["+\t\tif (this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t\t\tif ((annotationTagBits & TagBits.AnnotationNullMASK) != 0) {", "+\t\t\t\tfor (int i = 0; i < this.annotations.length; i++) {", "+\t\t\t\t\tReferenceBinding annotationType = this.annotations[i].getCompilerAnnotation().getAnnotationType();", "+\t\t\t\t\tif (annotationType != null) {", "+\t\t\t\t\t\tif (annotationType.id == TypeIds.T_ConfiguredAnnotationNonNull", "+\t\t\t\t\t\t\t\t|| annotationType.id == TypeIds.T_ConfiguredAnnotationNullable)", "+\t\t\t\t\t\tthis.scope.problemReporter().nullAnnotationUnsupportedLocation(this.annotations[i]);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cda237cbb2cfaa25b4dde5d2dd200b2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a53da0027d2af09b928dca6fa330419b46afa0ca", "commitAfterChange": "792caf681810140ce615d98d3abfdde62639719c", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "  \tpublic void validateNullAnnotation(long tagBits, TypeReference typeRef, Annotation[] annotations)", "signatureAfterChange": "  \tpublic boolean validateNullAnnotation(long tagBits, TypeReference typeRef, Annotation[] annotations)", "diff": ["-\tpublic void validateNullAnnotation(long tagBits, TypeReference typeRef, Annotation[] annotations) {", "+\tpublic boolean validateNullAnnotation(long tagBits, TypeReference typeRef, Annotation[] annotations) {", "-\t\t\t\tproblemReporter().illegalAnnotationForBaseType(typeRef, annotations, nullAnnotationTagBit);", "+\t\t\t\t// type annotations are *always* illegal for 'void' (already reported)", "+\t\t\t\tif (!(typeRef.resolvedType.id == TypeIds.T_void && compilerOptions().sourceLevel >= ClassFileConstants.JDK1_8))", "+\t\t\t\t\tproblemReporter().illegalAnnotationForBaseType(typeRef, annotations, nullAnnotationTagBit);", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\tif (annotations != null && typeRef instanceof QualifiedTypeReference) {", "+\t\t\t\t// illegal @NonNull Outer.Inner:", "+\t\t\t\tfor (int i = 0; i < annotations.length; i++) {", "+\t\t\t\t\tint id = annotations[i].resolvedType.id;", "+\t\t\t\t\tif (id == TypeIds.T_ConfiguredAnnotationNonNull || id == TypeIds.T_ConfiguredAnnotationNullable) {", "+\t\t\t\t\t\tproblemReporter().nullAnnotationUnsupportedLocation(annotations[i]);", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\treturn true;"]}], "num": 72766}