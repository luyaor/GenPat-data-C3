{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84c75ae131d7af672ee51ab195774c95", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00276bd3198cf10a0d2e3374c8041101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "signatureAfterChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classformat.invokeinterface.compact\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],", "-\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\tInteger.toString(nargs),", "-\t\t\t\t\tUtil.toString(", "-\t\t\t\t\t\tconstantInterfaceMethodref.getClassName(),", "-\t\t\t\t\t\tconstantInterfaceMethodref.getMethodName(),", "-\t\t\t\t\t\tconstantInterfaceMethodref.getMethodDescriptor(),", "-\t\t\t\t\t\ttrue)", "-\t\t\t\t}));", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokeinterface_compact, (new String[] {", "+\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],", "+\t\t\t\tInteger.toString(index),", "+\t\t\t\tInteger.toString(nargs),", "+\t\t\t\tUtil.toString(", "+\t\t\t\t\tconstantInterfaceMethodref.getClassName(),", "+\t\t\t\t\tconstantInterfaceMethodref.getMethodName(),", "+\t\t\t\t\tconstantInterfaceMethodref.getMethodDescriptor(),", "+\t\t\t\t\ttrue)", "+\t\t\t})));", "-\t\t\tbuffer.append(Util.bind(\"classformat.invokeinterface\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokeinterface, (new String[] {", "-\t\t\t}));", "+\t\t\t})));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "044e3b0af901526410d17673b24fbd0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classformat.invokespecial.compact\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL],", "-\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\tUtil.toString(", "-\t\t\t\t\t\tconstantMethodref.getClassName(),", "-\t\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "-\t\t\t\t\t\ttrue)", "-\t\t\t\t}));", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokespecial_compact, (new String[] {", "+\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL],", "+\t\t\t\tInteger.toString(index),", "+\t\t\t\tUtil.toString(", "+\t\t\t\t\tconstantMethodref.getClassName(),", "+\t\t\t\t\tconstantMethodref.getMethodName(),", "+\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "+\t\t\t\t\ttrue)", "+\t\t\t})));", "-\t\t\tbuffer.append(Util.bind(\"classformat.invokespecial\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokespecial, (new String[] {", "-\t\t\t}));", "+\t\t\t})));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2f8b9c08d74d9bb89cc21397bbfae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["-\t\tmarker.setAttribute(IMarker.MESSAGE, Util.bind(\"build.abortDueToClasspathProblems\")); //$NON-NLS-1$", "+\t\tmarker.setAttribute(IMarker.MESSAGE, Messages.build_abortDueToClasspathProblems); ", "-\t\t\t\t\t? Util.bind(\"build.prereqProjectHasClasspathProblems\", p.getName()) //$NON-NLS-1$", "-\t\t\t\t\t: Util.bind(\"build.prereqProjectMustBeRebuilt\", p.getName())); //$NON-NLS-1$", "+\t\t\t\t\t? Messages.bind(Messages.build_prereqProjectHasClasspathProblems, p.getName()) ", "+\t\t\t\t\t: Messages.bind(Messages.build_prereqProjectMustBeRebuilt, p.getName())); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd6574f94baa7ab2e0ff13ba8315d7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "diff": ["-\t\t\t\t\t\t\tUtil.bind(\"classpath.cannotReadClasspathFile\", this.getElementName()))); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMessages.bind(Messages.classpath_cannotReadClasspathFile, this.getElementName()))); ", "-\t\t\t\t\t\tUtil.bind(\"classpath.cannotReadClasspathFile\", this.getElementName()))); //$NON-NLS-1$", "+\t\t\t\t\t\tMessages.bind(Messages.classpath_cannotReadClasspathFile, this.getElementName()))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4694a97506f4972bc8b73881f8dd9a75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tprivate String getMessageTemplate()", "signatureAfterChange": " \t \tprivate String getMessageTemplate()", "diff": ["-\t\t\treturn org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\treturn Messages.bind(", "+\t\t\t\torg.eclipse.jdt.internal.core.util.Messages.restrictedAccess_project,", "+\t\t\t\tnew String[] {\"{0}\", getPath().segment(0)});  //$NON-NLS-1$", "-\t\t\treturn org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", pathString); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\treturn Messages.bind(", "+\t\t\t\torg.eclipse.jdt.internal.core.util.Messages.restrictedAccess_library,", "+\t\t\t\tnew String[] {\"{0}\", pathString}); //$NON-NLS-1$ "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f654b00f310a373f2371c5250e33cf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "699f26e934e59aeb24a73287942d4b68645611a6", "commitAfterChange": "663ec6c2eb68be77ac5a9531885836701530934d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected static char[] readTable(String filename) throws java.io.IOException", "signatureAfterChange": " protected static char[] readTable(String filename) throws java.io.IOException", "diff": ["-\t\tthrow new java.io.IOException(Util.bind(\"parser.missingFile\", filename)); //$NON-NLS-1$", "+\t\tthrow new java.io.IOException(Messages.bind(Messages.parser_missingFile, filename)); ", "-\t\tthrow new java.io.IOException(Util.bind(\"parser.corruptedFile\", filename)); //$NON-NLS-1$", "+\t\tthrow new java.io.IOException(Messages.bind(Messages.parser_corruptedFile, filename)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6081f6f40202086b9d4692ea7baad0e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " \tpublic void _invokevirtual(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokevirtual(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classformat.invokevirtual.compact\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEVIRTUAL],", "-\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\tUtil.toString(", "-\t\t\t\t\t\tconstantMethodref.getClassName(),", "-\t\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "-\t\t\t\t\t\ttrue)", "-\t\t\t\t}));", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokevirtual_compact, (new String[] {", "+\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEVIRTUAL],", "+\t\t\t\tInteger.toString(index),", "+\t\t\t\tUtil.toString(", "+\t\t\t\t\tconstantMethodref.getClassName(),", "+\t\t\t\t\tconstantMethodref.getMethodName(),", "+\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "+\t\t\t\t\ttrue)", "+\t\t\t})));", "-\t\t\tbuffer.append(Util.bind(\"classformat.invokevirtual\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokevirtual, (new String[] {", "-\t\t\t}));", "+\t\t\t})));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647f6cc1baf88f8576557fba971fa026", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void _ldc2_w(int pc, int index, IConstantPoolEntry constantPoolEntry)", "signatureAfterChange": " \tpublic void _ldc2_w(int pc, int index, IConstantPoolEntry constantPoolEntry)", "diff": ["-\t\t\t\tbuffer.append(Util.bind(\"classformat.ldc2_w_long\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC2_W],", "-\t\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())", "-\t\t\t\t\t}));", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classformat_ldc2_w_long, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC2_W],", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tLong.toString(constantPoolEntry.getLongValue())", "+\t\t\t\t})));", "-\t\t\t\tbuffer.append(Util.bind(\"classformat.ldc2_w_double\", //$NON-NLS-1$", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC2_W],", "-\t\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())", "-\t\t\t\t\t}));", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classformat_ldc2_w_double, (new String[] {", "+\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC2_W],", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tDouble.toString(constantPoolEntry.getDoubleValue())", "+\t\t\t\t})));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e6b38ac194b7ef22d73423ff458a17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tmonitor.beginTask(Util.bind(\"engine.searching\"), 100); //$NON-NLS-1$", "+\t\t\tmonitor.beginTask(Messages.engine_searching, 100); ", "-\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.indexing\", participant.getDescription())); //$NON-NLS-1$", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Messages.bind(Messages.engine_searching_indexing, (new String[] {participant.getDescription()}))); ", "-\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.matching\", participant.getDescription())); //$NON-NLS-1$", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Messages.bind(Messages.engine_searching_matching, (new String[] {participant.getDescription()}))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f413a8a5e5363faa01dd22c80022ea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "signatureAfterChange": " \tprivate void processPackageFragmentResource(PackageFragment source, PackageFragmentRoot root, String newName) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\t\t\tUtil.bind(\"status.nameCollision\", destinationResource.getFullPath().toString()))); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\tMessages.bind(Messages.status_nameCollision, destinationResource.getFullPath().toString()))); ", "-\t\t\t\t\t\t\t\t\t\tUtil.bind(\"status.nameCollision\", destinationResource.getFullPath().toString()))); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\tMessages.bind(Messages.status_nameCollision, (new String[] {destinationResource.getFullPath().toString()})))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9009f2329df0fd831cba6a4db6ab054d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void acceptResult(CompilationResult result)", "signatureAfterChange": "  public void acceptResult(CompilationResult result)", "diff": ["-\t\t\t\t\tcreateProblemFor(compilationUnit.resource, type, Util.bind(\"build.duplicateClassFile\", new String(typeName)), JavaCore.ERROR); //$NON-NLS-1$", "+\t\t\t\t\tcreateProblemFor(compilationUnit.resource, type, Messages.bind(Messages.build_duplicateClassFile, new String(typeName)), JavaCore.ERROR); ", "-\t\t\t\t\tcreateProblemFor(compilationUnit.resource, null, Util.bind(\"build.classFileCollision\", e.getMessage()), JavaCore.ERROR); //$NON-NLS-1$", "+\t\t\t\t\tcreateProblemFor(compilationUnit.resource, null, Messages.bind(Messages.build_classFileCollision, e.getMessage()), JavaCore.ERROR); ", "-\t\t\t\t\tcreateProblemFor(compilationUnit.resource, null, Util.bind(\"build.inconsistentClassFile\"), JavaCore.ERROR); //$NON-NLS-1$", "+\t\t\t\t\tcreateProblemFor(compilationUnit.resource, null, Messages.build_inconsistentClassFile, JavaCore.ERROR); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7261139895198d282bb5343683b20c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\t\tbeginTask(Util.bind(\"operation.createUnitProgress\"), 2); //$NON-NLS-1$", "+\t\tbeginTask(Messages.operation_createUnitProgress, 2); ", "-\t\t\t\t\tUtil.bind(\"status.nameCollision\", compilationUnitFile.getFullPath().toString()))); //$NON-NLS-1$", "+\t\t\t\t\tMessages.bind(Messages.status_nameCollision, (new String[] {compilationUnitFile.getFullPath().toString()})))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21a5b899c546191f1c303c1cabdeffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "699f26e934e59aeb24a73287942d4b68645611a6", "commitAfterChange": "663ec6c2eb68be77ac5a9531885836701530934d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected static long[] readLongTable(String filename) throws java.io.IOException", "signatureAfterChange": " protected static long[] readLongTable(String filename) throws java.io.IOException", "diff": ["-\t\tthrow new java.io.IOException(Util.bind(\"parser.missingFile\", filename)); //$NON-NLS-1$", "+\t\tthrow new java.io.IOException(Messages.bind(Messages.parser_missingFile, filename)); ", "-\t\tthrow new java.io.IOException(Util.bind(\"parser.corruptedFile\", filename)); //$NON-NLS-1$", "+\t\tthrow new java.io.IOException(Messages.bind(Messages.parser_corruptedFile, filename)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3914388530739601a764964a0a8d0dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprotected void forceClasspathReload(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected void forceClasspathReload(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tUtil.bind(\"classpath.couldNotWriteClasspathFile\", getElementName(), e.getMessage()))); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_couldNotWriteClasspathFile, new String[] {getElementName(), e.getMessage()}))); ", "-\t\t\t\t\t\t\t\tUtil.bind(\"classpath.invalidClasspathInClasspathFile\", getElementName(), e.getMessage()))); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tMessages.bind(Messages.classpath_invalidClasspathInClasspathFile, new String[] {getElementName(), e.getMessage()}))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2c8e93142415b14c55ce2636ae685d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException", "signatureAfterChange": "  protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException", "diff": ["-\tnotifier.subTask(Util.bind(\"build.copyingResources\")); //$NON-NLS-1$", "+\tnotifier.subTask(Messages.build_copyingResources); ", "-\t\t\t\t\t\t\t\t\tUtil.bind(\"build.duplicateResource\", id), //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tMessages.bind(Messages.build_duplicateResource, (new String[] {id})), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb71451e532a06bdd2ff3af419d71ddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic void _invokestatic(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokestatic(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classformat.invokestatic.compact\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESTATIC],", "-\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\tUtil.toString(", "-\t\t\t\t\t\tconstantMethodref.getClassName(),", "-\t\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "-\t\t\t\t\t\ttrue)", "-\t\t\t\t}));", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokestatic_compact, (new String[] {", "+\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESTATIC],", "+\t\t\t\tInteger.toString(index),", "+\t\t\t\tUtil.toString(", "+\t\t\t\t\tconstantMethodref.getClassName(),", "+\t\t\t\t\tconstantMethodref.getMethodName(),", "+\t\t\t\t\tconstantMethodref.getMethodDescriptor(),", "+\t\t\t\t\ttrue)", "+\t\t\t})));", "-\t\t\tbuffer.append(Util.bind(\"classformat.invokestatic\", //$NON-NLS-1$", "-\t\t\t\tnew String[] {", "-\t\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESTATIC],", "-\t\t\t\t\tInteger.toString(index),", "-\t\t\t\t\treturnDeclaringClassName(constantMethodref),", "-\t\t\t\t\tnew String(constantMethodref.getMethodName()),", "-\t\t\t\t\tnew String(constantMethodref.getMethodDescriptor()),", "-\t\t\t\t}));", "+\t\t\tbuffer.append(Messages.bind(Messages.classformat_invokestatic, (new String[] {", "+\t\t\t\tOpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESTATIC],", "+\t\t\t\tInteger.toString(index),", "+\t\t\t\treturnDeclaringClassName(constantMethodref),", "+\t\t\t\tnew String(constantMethodref.getMethodName()),", "+\t\t\t\tnew String(constantMethodref.getMethodDescriptor()),", "+\t\t\t})));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d203355aba70f47fab9a28742d3eb8fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeOperation.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected IJavaModelStatus verifyNameCollision()", "signatureAfterChange": " protected IJavaModelStatus verifyNameCollision()", "diff": ["-\t\t\t\t\tUtil.bind(\"status.nameCollision\", typeName)); //$NON-NLS-1$", "+\t\t\t\t\tMessages.bind(Messages.status_nameCollision, typeName)); ", "-\t\t\t\t\tUtil.bind(\"status.nameCollision\", typeName)); //$NON-NLS-1$", "+\t\t\t\t\tMessages.bind(Messages.status_nameCollision, typeName)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52ffc1d74d08e0d78c4ea77b56f0b64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tUtil.bind(\"status.nameCollision\", destFile.getFullPath().toString()))); //$NON-NLS-1$", "+\t\t\t\t\t\t\tMessages.bind(Messages.status_nameCollision, destFile.getFullPath().toString()))); ", "-\t\t\t\t\tUtil.bind(\"status.nameCollision\", destFile.getFullPath().toString()))); //$NON-NLS-1$", "+\t\t\t\t\tMessages.bind(Messages.status_nameCollision, (new String[] {destFile.getFullPath().toString()})))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42bda2636276610ebebc65900deec5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  private SimpleLookupTable findDeltas()", "signatureAfterChange": "  private SimpleLookupTable findDeltas()", "diff": ["-\tnotifier.subTask(Util.bind(\"build.readingDelta\", currentProject.getName())); //$NON-NLS-1$", "+\tnotifier.subTask(Messages.bind(Messages.build_readingDelta, currentProject.getName())); ", "-\t\t\tnotifier.subTask(Util.bind(\"build.readingDelta\", p.getName())); //$NON-NLS-1$", "+\t\t\tnotifier.subTask(Messages.bind(Messages.build_readingDelta, p.getName())); "]}], "num": 23333}