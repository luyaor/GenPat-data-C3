{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae2b91f71651618153a5d7a1dfc112b7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71ce0402b5878c224a9bcae3e4402ed2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5acc9f38696ecf93bf41e3ef5e2738b55bfe04e9", "commitAfterChange": "bd576a9c793017db2f7eae213c14590a7efc1565", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\t\t\t// removeFirstSegment removes the part relative to the project which is retrieve \r", "-\t\t\t\t// through workspace.getDefaultContentLocation\r", "-\t\t\t\tif (path.isAbsolute() && getWorkspace().getRoot().findMember(path) == null) {\r", "-\t\t\t\t\t// file system jar\r", "-\t\t\t\t\troot = new JarPackageFragmentRoot(path.toOSString(), this);\r", "+\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, path, false);\r", "+\t\t\t\tif (target == null) {\r", "+\t\t\t\t\treturn new IPackageFragmentRoot[0];\r", "-\t\t\t\t\t// resource jar\r", "-\t\t\t\t\troot = new JarPackageFragmentRoot(workspaceRoot.getFile(path), this);\r", "+\t\t\t\t\tif (target instanceof java.io.File) {\r", "+\t\t\t\t\t\t// file system jar\r", "+\t\t\t\t\t\tif (((java.io.File)target).isDirectory()) {\r", "+\t\t\t\t\t\t\treturn new IPackageFragmentRoot[0]; // directory not supported as external library\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\troot = new JarPackageFragmentRoot(path.toOSString(), this);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t// resource jar\r", "+\t\t\t\t\t\tIResource resource = workspaceRoot.getFile(path);\r", "+\t\t\t\t\t\tif (resource.getType() == IResource.FOLDER) {\r", "+\t\t\t\t\t\t\troot = new PackageFragmentRoot(resource, this); \r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\troot = new JarPackageFragmentRoot(resource, this);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn new IPackageFragmentRoot[] { root };\r", "-\t\t\t\treturn new IPackageFragmentRoot[] { root };\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3441c3dd9f5300a6ed48537f8019528", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void initializeIndexLocations()", "signatureAfterChange": " private void initializeIndexLocations()", "diff": ["-\t\tfor (int i = 0; i < projectsAndJars.length; i++)", "-\t\t\tlocations.add(manager.computeIndexLocation(projectsAndJars[i]));", "+\t\tfor (int i = 0; i < projectsAndJars.length; i++) {", "+\t\t\tIPath path = projectsAndJars[i];", "+\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\tpath = ((IFolder) target).getFullPath();", "+\t\t\tlocations.add(manager.computeIndexLocation(path));", "+\t\t}", "-\t\t\tSimpleSet jarsToCheck = new SimpleSet(length);", "+\t\t\tSimpleSet externalLibsToCheck = new SimpleSet(length);", "-\t\t\t\t\tjarsToCheck.add(path);", "+\t\t\t\t\texternalLibsToCheck.add(path);", "-\t\t\tfor (int i = 0; i < projectIndex && jarsToCheck.elementSize > 0; i++) {", "+\t\t\tfor (int i = 0; i < projectIndex && externalLibsToCheck.elementSize > 0; i++) {", "-\t\t\t\t\t\tif (jarsToCheck.includes(path)) {", "-\t\t\t\t\t\t\tlocations.add(manager.computeIndexLocation(entry.getPath()));", "-\t\t\t\t\t\t\tjarsToCheck.remove(path);", "+\t\t\t\t\t\tif (externalLibsToCheck.remove(path) != null) {", "+\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "+\t\t\t\t\t\t\tlocations.add(manager.computeIndexLocation(path));", "-\t\t\tif (jarsToCheck.elementSize > 0) {", "+\t\t\tif (externalLibsToCheck.elementSize > 0) {", "-\t\t\t\tfor (int i = 0, l = allProjects.length; i < l && jarsToCheck.elementSize > 0; i++) {", "+\t\t\t\tfor (int i = 0, l = allProjects.length; i < l && externalLibsToCheck.elementSize > 0; i++) {", "-\t\t\t\t\t\t\t\tif (jarsToCheck.includes(path)) {", "-\t\t\t\t\t\t\t\t\tlocations.add(manager.computeIndexLocation(entry.getPath()));", "-\t\t\t\t\t\t\t\t\tjarsToCheck.remove(path);", "+\t\t\t\t\t\t\t\tif (externalLibsToCheck.remove(path) != null) {", "+\t\t\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "+\t\t\t\t\t\t\t\t\tlocations.add(manager.computeIndexLocation(path));"]}], "num": 17355}