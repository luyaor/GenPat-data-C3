{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df349141560085b14b360b20cddbb363", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1729117abb9a5957569eca09dbe9ac2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-public boolean isMatchingIndexRecord() {", "-\treturn matchesName(this.name, getFieldRecord().name);", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\treturn matchesName(this.name, ((FieldPattern) decodedPattern).name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793ec5b81afc98b4e04e409c0ec5c101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-public boolean isMatchingIndexRecord() {", "-\tif (this.simpleName == null) {", "-\t\t// Optimization, eg. type reference is 'org.eclipse.jdt.core.*'", "-\t\treturn matchesName(this.segments[this.currentSegment], getTypeReferenceRecord().segments[0]);", "-\t} else {", "-\t\treturn matchesName(this.simpleName, getTypeReferenceRecord().simpleName);", "-\t}", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\tif (this.simpleName != null)", "+\t\treturn matchesName(this.simpleName, ((TypeReferencePattern) decodedPattern).simpleName);", "+", "+\t// Optimization, eg. type reference is 'org.eclipse.jdt.core.*'", "+\treturn matchesName(this.segments[this.currentSegment], ((TypeReferencePattern) decodedPattern).segments[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797c926f9a3e1f989d81df70d407946b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["- */", "-public boolean isMatchingIndexRecord() {", "-\treturn matchesName(this.segments[this.currentSegment], ((PackageReferencePattern)getIndexRecord()).segments[0]);", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\treturn matchesName(this.segments[this.currentSegment], ((PackageReferencePattern) decodedPattern).segments[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848dcf61eaf02b59cc37991fac41e803", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic abstract boolean isMatchingIndexRecord();", "signatureAfterChange": " \tpublic boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-\tpublic abstract boolean isMatchingIndexRecord();", "+\tpublic boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\t\treturn false; // override as necessary", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a537ecf9aa6dc4fe31aebbf7474cebe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2193765f6a14f1428523dab68858768ca623c9d3", "commitAfterChange": "5450463d69e66bedc3d0797b782f5dab3b9072d6", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 155, "signatureBeforeChange": "  \tprivate File getNonChainingJarsFile()", "signatureAfterChange": " \t \tprivate File getClasspathListFile(String fileName)", "diff": ["-", "-\tprivate File getNonChainingJarsFile() {", "-\t\treturn JavaCore.getPlugin().getStateLocation().append(\"nonChainingJarsCache\").toFile(); //$NON-NLS-1$", "+\t", "+\tprivate File getClasspathListFile(String fileName) {", "+\t\treturn JavaCore.getPlugin().getStateLocation().append(fileName).toFile(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc806d4db2deb26ae1440d2a68cb038", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/pattern/InternalSearchPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic abstract boolean isMatchingIndexRecord();", "signatureAfterChange": "  \tpublic abstract boolean matchesDecodedPattern(SearchPattern decodedPattern);", "diff": ["-\t", "-\tpublic abstract boolean isMatchingIndexRecord();", "+", "+\tpublic abstract boolean matchesDecodedPattern(SearchPattern decodedPattern);"]}], "num": 49040}