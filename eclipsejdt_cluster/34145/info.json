{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0002bfda134f67e6f099ab0b7f97c8e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d67f4b007cf2a468650fa3da783eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testMoveTypeToAnotherWorkingCopy() throws CoreException", "signatureAfterChange": " public void testMoveTypeToAnotherWorkingCopy() throws CoreException", "diff": ["-\t\t\t\"    public class A {\\n\" + ", "-\t\t\t\"      public class Inner {\\n\" + ", "-\t\t\t\"        public class InnerInner {\\n\" + ", "-\t\t\t\"        }\\n\" + ", "-\t\t\t\"        int innerField;\\n\" + ", "-\t\t\t\"        void innerMethod() {\\n\" + ", "-\t\t\t\"        }\\n\" + ", "-\t\t\t\"      }\\n\" + ", "-\t\t\t\"      static String FIELD;\\n\" + ", "-\t\t\t\"      {\\n\" + ", "-\t\t\t\"        FIELD = File.pathSeparator;\\n\" + ", "-\t\t\t\"      }\\n\" + ", "-\t\t\t\"      int field1;\\n\" + ", "-\t\t\t\"      boolean field2;\\n\" + ", "-\t\t\t\"      public void foo() {\\n\" + ", "-\t\t\t\"      }\\n\" + ", "-\t\t\t\"    }\\n\" + ", "+\t\t\t\"\tpublic class A {\\n\" + ", "+\t\t\t\"\t  public class Inner {\\n\" + ", "+\t\t\t\"\t    public class InnerInner {\\n\" + ", "+\t\t\t\"\t    }\\n\" + ", "+\t\t\t\"\t    int innerField;\\n\" + ", "+\t\t\t\"\t    void innerMethod() {\\n\" + ", "+\t\t\t\"\t    }\\n\" + ", "+\t\t\t\"\t  }\\n\" + ", "+\t\t\t\"\t  static String FIELD;\\n\" + ", "+\t\t\t\"\t  {\\n\" + ", "+\t\t\t\"\t    FIELD = File.pathSeparator;\\n\" + ", "+\t\t\t\"\t  }\\n\" + ", "+\t\t\t\"\t  int field1;\\n\" + ", "+\t\t\t\"\t  boolean field2;\\n\" + ", "+\t\t\t\"\t  public void foo() {\\n\" + ", "+\t\t\t\"\t  }\\n\" + ", "+\t\t\t\"\t}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71430343f4de2cab54e9d4732e7dfbc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 505, "methodNumberAfterChange": 505, "signatureBeforeChange": " \tpublic void test503()", "signatureAfterChange": " \tpublic void test503()", "diff": ["-\t\t\t\"    1  invokespecial java/lang/Object.<init>()V [13]\\n\" + ", "+\t\t\t\"    1  invokespecial java.lang.Object() [13]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<E>\\n\" + ", "-\t\t\t\"     0  getstatic java/lang/System.out Ljava/io/PrintStream; [27]\\n\" + ", "+\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [27]\\n\" + ", "-\t\t\t\"     7  invokespecial X.<init>()V [28]\\n\" + ", "-\t\t\t\"    10  getfield X.e LXA; [30]\\n\" + ", "+\t\t\t\"     7  invokespecial X() [28]\\n\" + ", "+\t\t\t\"    10  getfield X.e : XA [30]\\n\" + ", "-\t\t\t\"    14  getstatic XAB.CONST LXB; [36]\\n\" + ", "-\t\t\t\"    17  invokevirtual java/io/PrintStream.print(Ljava/lang/Object;)V [42]\\n\" + ", "+\t\t\t\"    14  getstatic XAB.CONST : XB [36]\\n\" + ", "+\t\t\t\"    17  invokevirtual java.io.PrintStream.print(java.lang.Object) : void  [42]\\n\" + ", "-\t\t\t\"    24  invokespecial X.<init>()V [28]\\n\" + ", "-\t\t\t\"    27  invokevirtual X.foo()V [45]\\n\" + ", "+\t\t\t\"    24  invokespecial X() [28]\\n\" + ", "+\t\t\t\"    27  invokevirtual X.foo() : void  [45]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 31] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 31] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\"     0  getstatic java/lang/System.out Ljava/io/PrintStream; [27]\\n\" + ", "+\t\t\t\"     0  getstatic java.lang.System.out : java.io.PrintStream [27]\\n\" + ", "-\t\t\t\"     4  getfield X.e LXA; [30]\\n\" + ", "+\t\t\t\"     4  getfield X.e : XA [30]\\n\" + ", "-\t\t\t\"     8  getstatic XB.CONST LXB; [50]\\n\" + ", "-\t\t\t\"    11  invokevirtual java/io/PrintStream.print(Ljava/lang/Object;)V [42]\\n\" + ", "+\t\t\t\"     8  getstatic XB.CONST : XB [50]\\n\" + ", "+\t\t\t\"    11  invokevirtual java.io.PrintStream.print(java.lang.Object) : void  [42]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: X<E>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94996d2942afca42162cfcd3e6c0aedf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "166df64b1dde30fc61b2e4fda13d5a0d769a3aef", "commitAfterChange": "cd0e6730218f485335b628feb54a852eb0cb6a2f", "methodNumberBeforeChange": 1084, "methodNumberAfterChange": 1084, "signatureBeforeChange": " public void test1055()", "signatureAfterChange": " public void test1055()", "diff": ["-\t\t\t\"import java.lang.annotation.Retention;\\r\\n\" +", "-\t\t\t\"import java.lang.annotation.RetentionPolicy;\\r\\n\" +", "-\t\t\t\"import java.lang.reflect.Method;\\r\\n\" +", "-\t\t\t\"\\r\\n\" +", "-\t\t\t\"@Bar\\r\\n\" +", "-\t\t\t\"public class X {\\r\\n\" +", "-\t\t\t\"\\r\\n\" +", "-\t\t\t\"        @Bar\\r\\n\" +", "-\t\t\t\"        public void bar() throws Exception {\\r\\n\" +", "-\t\t\t\"                Class<X> clazz= X.class;\\r\\n\" +", "+\t\t\t\"import java.lang.annotation.Retention;\\n\" +", "+\t\t\t\"import java.lang.annotation.RetentionPolicy;\\n\" +", "+\t\t\t\"import java.lang.reflect.Method;\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"@Bar\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"        @Bar\\n\" +", "+\t\t\t\"        public void bar() throws Exception {\\n\" +", "+\t\t\t\"                Class<X> clazz= X.class;\\n\" +", "-\t\t\t\"                Method method= clazz.getMethod(\\\"bar\\\");\\r\\n\" +", "-\t\t\t\"                Bar bar2= method.getAnnotation(Bar.class);\\r\\n\" +", "-\t\t\t\"        }\\r\\n\" +", "-\t\t\t\"}\\r\\n\" +", "-\t\t\t\"\\r\\n\" +", "-\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\r\\n\" +", "-\t\t\t\"@interface Bar {\\r\\n\" +", "+\t\t\t\"                Method method= clazz.getMethod(\\\"bar\\\");\\n\" +", "+\t\t\t\"                Bar bar2= method.getAnnotation(Bar.class);\\n\" +", "+\t\t\t\"        }\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" +", "+\t\t\t\"@interface Bar {\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c151d2548b0f00ae1d1d336487bc05f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "a8a98188fc235240f392a4859de8a3706398f5e0", "commitAfterChange": "d9da62b96418ec7c4e63f83dc9c7f0cfe3e6af1a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testMoveTypeToAnotherWorkingCopy() throws CoreException", "signatureAfterChange": " public void testMoveTypeToAnotherWorkingCopy() throws CoreException", "diff": ["-\t\t\t\"\tpublic class A {\\n\" + ", "-\t\t\t\"\t  public class Inner {\\n\" + ", "-\t\t\t\"\t    public class InnerInner {\\n\" + ", "-\t\t\t\"\t    }\\n\" + ", "-\t\t\t\"\t    int innerField;\\n\" + ", "-\t\t\t\"\t    void innerMethod() {\\n\" + ", "-\t\t\t\"\t    }\\n\" + ", "-\t\t\t\"\t  }\\n\" + ", "-\t\t\t\"\t  static String FIELD;\\n\" + ", "-\t\t\t\"\t  {\\n\" + ", "-\t\t\t\"\t    FIELD = File.pathSeparator;\\n\" + ", "-\t\t\t\"\t  }\\n\" + ", "-\t\t\t\"\t  int field1;\\n\" + ", "-\t\t\t\"\t  boolean field2;\\n\" + ", "-\t\t\t\"\t  public void foo() {\\n\" + ", "-\t\t\t\"\t  }\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "+\t\t\t\"    public class A {\\n\" + ", "+\t\t\t\"      public class Inner {\\n\" + ", "+\t\t\t\"        public class InnerInner {\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"        int innerField;\\n\" + ", "+\t\t\t\"        void innerMethod() {\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"      static String FIELD;\\n\" + ", "+\t\t\t\"      {\\n\" + ", "+\t\t\t\"        FIELD = File.pathSeparator;\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"      int field1;\\n\" + ", "+\t\t\t\"      boolean field2;\\n\" + ", "+\t\t\t\"      public void foo() {\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"    }\\n\" + "]}], "num": 34145}