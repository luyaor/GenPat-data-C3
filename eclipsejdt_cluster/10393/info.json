{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9d562e3a0a5cadb3c1ecf6e48f5437d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693822c2f82e87789546f9e77e789bd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "76f5a1c536420ff37c3b13a645ebec88bfc3c494", "commitAfterChange": "902ad81671a3859ccd7100f43d06275b71901e88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, IWorkingCopy[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, IWorkingCopy[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\ttry {", "-\t\t\t\tthis.hierarchyResolver = ", "-\t\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, project.getOptions(true), this, new DefaultProblemFactory());", "-\t\t\t\tif (focusType != null) {", "-\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "-\t\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "-\t\t\t\t\tif (focusTypeBinding == null ", "-\t\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "-\t\t\t\t\t\t// focus type is not visible in this project: no need to go further", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.hierarchyResolver = ", "+\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, project.getOptions(true), this, new DefaultProblemFactory());", "+\t\t\tif (focusType != null) {", "+\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "+\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t\tif (focusTypeBinding == null ", "+\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "+\t\t\t\t\t// focus type is not visible in this project: no need to go further", "+\t\t\t\t\treturn;", "-\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "-\t\t\t} finally {", "-\t\t\t\tif (inProjectOfFocusType) {", "-\t\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);", "-\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "+\t\t} finally {", "+\t\t\tif (inProjectOfFocusType) {", "+\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cef1d80dba522ab26c786547850b25d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "5a3a5f398a8971568181868be2d5d76728016763", "commitAfterChange": "44cc03459f9020b4da0ebdb14fa0624b7d8dfc4d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "-\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "-\t\t\t\tif (focusTypeBinding == null ", "-\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "-\t\t\t\t\t// focus type is not visible in this project: no need to go further", "+\t\t\t\tMember declaringMember = ((Member)focusType).getInnerMostDeclaringMember();", "+\t\t\t\tif (declaringMember == null) {", "+\t\t\t\t\t// top level or member type", "+\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "+\t\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t\t\tif (focusTypeBinding == null ", "+\t\t\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "+\t\t\t\t\t\t// focus type is not visible in this project: no need to go further", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\t// local or anonymous type", "+\t\t\t\t\tthis.hierarchyResolver.resolveLocalType(focusType, declaringMember);"]}], "num": 10393}