{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a07fe5d4016ab38ffdfca7daf242f66d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac138a091f9c98a9a24e8bd6ae8dfb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "commitAfterChange": "1a542c460a449efbae14d1057ba233825602248d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected void removeAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void removeAffectedChild(JavaElementDelta child)", "diff": ["-\tint index = -1;", "-\tif (this.affectedChildren != null) {", "-\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "-\t\t\tif (equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\t\t\tindex = i;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (index >= 0) {", "-\t\tthis.affectedChildren= removeAndShrinkArray(this.affectedChildren, index);", "+\tif (this.affectedChildren.length == 0)", "+\t\treturn;", "+\tKey childKey = new Key(child.getElement());", "+\tInteger exisingChildIndex = getChildIndex(childKey);", "+\tif (exisingChildIndex != null) {", "+\t\tremoveExistingChild(childKey, exisingChildIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39539e23e3987084814f33640c844c1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "0c96a215dc417e2a3711d5e3a64712a85e5ebfe5", "commitAfterChange": "79e03912c161a70c24307f9119f487254a855031", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public IJavaElement getElementAtConsideringSibling(int position) throws JavaModelException", "signatureAfterChange": " public IJavaElement getElementAtConsideringSibling(int position) throws JavaModelException", "diff": ["-\t\tString prefix = null;", "-\t\tif (index > -1) {", "-\t\t\tprefix = this.name.substring(0, index);", "-\t\t} else {", "-\t\t\tprefix = this.name;", "-\t\t}", "-\t\t", "+\t\tint prefixLength = index < 0 ? this.name.length() : index;", "-\t\t\tString childPrefix = null;", "-\t\t\tif (childIndex > -1) {", "-\t\t\t\tchildPrefix = childName.substring(0, childIndex);", "-\t\t\t} else {", "-\t\t\t\tchildPrefix = childName.substring(0, childName.indexOf('.'));", "-\t\t\t}", "-\t\t\t", "-\t\t\tif(prefix.equals(childPrefix)) {", "+\t\t\tint childPrefixLength = childIndex < 0 ? childName.indexOf('.') : childIndex;", "+\t\t\tif (prefixLength == childPrefixLength && this.name.regionMatches(0, childName, 0, prefixLength)) {"]}], "num": 24456}