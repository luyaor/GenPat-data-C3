{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71577a4c1acd0dffc45e26d9392187c3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc7a492b02710cdfeb6954af5607fda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a697821401a1789d3bb95488153b9d9990238873", "commitAfterChange": "4dcab8b92fc7368fba3526b80aaecb1b65b56822", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void preserveEmptyLines(int count)", "signatureAfterChange": " \t \tprivate void preserveEmptyLines(int count)", "diff": ["-\t\t\tint linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve + 1);", "-\t\t\tthis.printNewLines(linesToPreserve);", "+\t\t\tif (this.formatter.preferences.preserve_user_linebreaks) {", "+\t\t\t\tthis.printNewLines(count);", "+\t\t\t} else {", "+\t\t\t\tint linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve + 1);", "+\t\t\t\tthis.printNewLines(linesToPreserve);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d1c689ef22a8fc8a1fa09e8647ce68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "0390be1950bcdfa43b629ba946ffaaaee0d5d33f", "commitAfterChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate void preserveEmptyLines(int count)", "signatureAfterChange": " \t \tprivate void preserveEmptyLines(int count)", "diff": ["-\t\t\t\tthis.printNewLines(count);", "+\t\t\t\tthis.printEmptyLines(count);", "-\t\t\t\tint linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve + 1);", "-\t\t\t\tthis.printNewLines(linesToPreserve);", "+\t\t\t\tint linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve);", "+\t\t\t\tthis.printEmptyLines(linesToPreserve);"]}], "num": 65714}