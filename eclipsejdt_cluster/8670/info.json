{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7c8b51e100940b18974902faf64c25d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d95f812da15863e3ab29fa45943b16aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "d6aa8e16140a145f3c96ce9fdb3130a59ba55ea3", "commitAfterChange": "78465a4e91181df84a490348256a171dc5ac14c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t\treturn false;", "-\t\tif (argumentType == null || substitution == null || this.superclass == null || substitution.substitute(this.superclass) == null)\t\t\t    {", "-\t\t\tint iii = 0;", "-\t\t}\t\t", "+\t\t\treturn false;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa119a5338b6243895fc73fa99e80a59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\t\t\t\t\tif ((bits & OnlyValueRequired) != 0) {", "-\t\t\t\t\t\t\tif (((bits & OperatorMASK) >> OperatorSHIFT) == EQUAL_EQUAL) {", "-\t\t\t\t\t\t\t\tcodeStream.iconst_1();", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tcodeStream.iconst_0();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (falseLabel == null) {", "-\t\t\t\t\t\t\t\t// implicit falling through the FALSE case", "-\t\t\t\t\t\t\t\tif (trueLabel != null) {", "-\t\t\t\t\t\t\t\t\tcodeStream.goto_(trueLabel);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (falseLabel == null) {", "+\t\t\t\t\t\t// implicit falling through the FALSE case", "+\t\t\t\t\t\tif (trueLabel != null) {", "+\t\t\t\t\t\t\tcodeStream.goto_(trueLabel);", "+\t\t\t\t\t\t}"]}], "num": 8670}