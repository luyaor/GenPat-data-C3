{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74527cd824e77eacd367a88fca61ca2c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ed30fcd39c284995d681c30d6d8e0af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "2a3cfde3c43eda7373112848bd26e889dafe74d6", "commitAfterChange": "c775c1d0f23881553fb0e260a70314c10cea2026", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\t// check against scope code deprecation", "-\t\tif (scope.isInsideDeprecatedCode()) {", "-\t\t\treturn scope.compilerOptions().reportDeprecationInsideDeprecatedCode;", "-\t\t} else {", "-\t\t\treturn scope.compilerOptions().reportDeprecationInNonDeprecatedCode;", "-\t\t}", "+\t\t// if context is deprecated, may avoid reporting", "+\t\tif (!scope.compilerOptions().reportDeprecationInsideDeprecatedCode && scope.isInsideDeprecatedCode()) return false;", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af82a13d4f844a27080518c45314354", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "2a3cfde3c43eda7373112848bd26e889dafe74d6", "commitAfterChange": "c775c1d0f23881553fb0e260a70314c10cea2026", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "signatureAfterChange": " \tpublic final boolean isMethodUseDeprecated(MethodBinding method, Scope scope, \t\t\tboolean isExplicitUse)", "diff": ["-\t\t// check against scope code deprecation", "-\t\tif (scope.isInsideDeprecatedCode()) {", "-\t\t\treturn scope.compilerOptions().reportDeprecationInsideDeprecatedCode;", "-\t\t} else {", "-\t\t\treturn scope.compilerOptions().reportDeprecationInNonDeprecatedCode;", "-\t\t}", "+\t\t// if context is deprecated, may avoid reporting", "+\t\tif (!scope.compilerOptions().reportDeprecationInsideDeprecatedCode && scope.isInsideDeprecatedCode()) return false;", "+\t\treturn true;"]}], "num": 3000}