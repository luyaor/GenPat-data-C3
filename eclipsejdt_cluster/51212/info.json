{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2f5ed82ee94e20f5310c10b1e2b6306", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6334093fcaf2423569835ee6c24ecf25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "49221e1dedf80843e710093d67caabba63367062", "commitAfterChange": "26bd6002dbcadf28eb844a4d87a4d9f705c01741", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 58, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["-\t\tsuper.consumeEnterVariable();", "+\t\t", "+\t\tif (this.pendingAnnotation != null &&", "+\t\t\t\tthis.assistNode != null &&", "+\t\t\t\tthis.currentElement != null &&", "+\t\t\t\tthis.currentElement instanceof RecoveredMethod &&", "+\t\t\t\t!this.currentElement.foundOpeningBrace &&", "+\t\t\t\t((RecoveredMethod)this.currentElement).methodDeclaration.declarationSourceEnd == 0) {", "+\t\t\t// this is a method parameter", "+\t\t\tsuper.consumeEnterVariable();", "+\t\t\tthis.pendingAnnotation.potentialAnnotatedNode = this.astStack[this.astPtr];", "+\t\t\tthis.pendingAnnotation.isParameter = true;", "+\t\t\tthis.pendingAnnotation = null;", "+\t\t\t", "+\t\t} else {", "+\t\t\tsuper.consumeEnterVariable();", "+\t\t\tif (this.pendingAnnotation != null) {", "+\t\t\t\tthis.pendingAnnotation.potentialAnnotatedNode = this.astStack[this.astPtr];", "+\t\t\t\tthis.pendingAnnotation = null;", "+\t\t\t}", "+\t\t}", "-", "-//\t\tprivate boolean checkKeyword() {", "-//\t\t\tif (currentElement instanceof RecoveredUnit) {", "-//\t\t\t\tRecoveredUnit unit = (RecoveredUnit) currentElement;", "-//\t\t\t\tint index = -1;", "-//\t\t\t\tif ((index = this.indexOfAssistIdentifier()) > -1) {", "-//\t\t\t\t\tif(unit.typeCount == 0", "-//\t\t\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.IMPORT)) {", "-//\t\t\t\t\t\tCompletionOnKeyword2 completionOnImportKeyword = new CompletionOnKeyword2(Keywords.IMPORT, identifierPositionStack[index]);", "-//\t\t\t\t\t\tthis.assistNode = completionOnImportKeyword;", "-//\t\t\t\t\t\tthis.lastCheckPoint = completionOnImportKeyword.sourceEnd + 1;", "-//\t\t\t\t\t\tthis.isOrphanCompletionNode = true;", "-//\t\t\t\t\t\treturn true;", "-//\t\t\t\t\t} else if(unit.typeCount == 0", "-//\t\t\t\t\t\t&& unit.importCount == 0", "-//\t\t\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.PACKAGE)) {", "-//\t\t\t\t\t\tCompletionOnKeyword2 completionOnImportKeyword = new CompletionOnKeyword2(Keywords.PACKAGE, identifierPositionStack[index]);", "-//\t\t\t\t\t\tthis.assistNode = completionOnImportKeyword;", "-//\t\t\t\t\t\tthis.lastCheckPoint = completionOnImportKeyword.sourceEnd + 1;", "-//\t\t\t\t\t\tthis.isOrphanCompletionNode = true;", "-//\t\t\t\t\t\treturn true;", "-//\t\t\t\t\t}", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t\treturn false;", "-//\t\t}", "-//\t\t\t\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);", "-//\t\t\t\tpushOnGenericsLengthStack(0);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9443ff879a78804f93f628d85384422e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "69b02d68015b1f30ee38d1576a843274517957c7", "commitAfterChange": "c7a9edf536467451ba659d7e03ac6c483c5c0cfe", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 36, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["+//\t\tprivate boolean checkKeyword() {", "+//\t\t\tif (currentElement instanceof RecoveredUnit) {", "+//\t\t\t\tRecoveredUnit unit = (RecoveredUnit) currentElement;", "+//\t\t\t\tint index = -1;", "+//\t\t\t\tif ((index = this.indexOfAssistIdentifier()) > -1) {", "+//\t\t\t\t\tif(unit.typeCount == 0", "+//\t\t\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.IMPORT)) {", "+//\t\t\t\t\t\tCompletionOnKeyword2 completionOnImportKeyword = new CompletionOnKeyword2(Keywords.IMPORT, identifierPositionStack[index]);", "+//\t\t\t\t\t\tthis.assistNode = completionOnImportKeyword;", "+//\t\t\t\t\t\tthis.lastCheckPoint = completionOnImportKeyword.sourceEnd + 1;", "+//\t\t\t\t\t\tthis.isOrphanCompletionNode = true;", "+//\t\t\t\t\t\treturn true;", "+//\t\t\t\t\t} else if(unit.typeCount == 0", "+//\t\t\t\t\t\t&& unit.importCount == 0", "+//\t\t\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.PACKAGE)) {", "+//\t\t\t\t\t\tCompletionOnKeyword2 completionOnImportKeyword = new CompletionOnKeyword2(Keywords.PACKAGE, identifierPositionStack[index]);", "+//\t\t\t\t\t\tthis.assistNode = completionOnImportKeyword;", "+//\t\t\t\t\t\tthis.lastCheckPoint = completionOnImportKeyword.sourceEnd + 1;", "+//\t\t\t\t\t\tthis.isOrphanCompletionNode = true;", "+//\t\t\t\t\t\treturn true;", "+//\t\t\t\t\t}", "+//\t\t\t\t}", "+//\t\t\t}", "+//\t\t\treturn false;", "+//\t\t}", "+\t\t", "-\t\t\tint nameSourceStart = (int)(identifierPositionStack[identifierPtr] >>> 32);", "-\t\t\tintPtr--;", "-\t\t\t", "-\t\t\tTypeReference type = getTypeReference(intStack[intPtr--]);", "-\t\t\tintPtr--;", "-\t\t\t", "-\t\t\tif (!(currentElement instanceof RecoveredType)", "-\t\t\t\t&& (currentToken == TokenNameDOT", "-\t\t\t\t\t|| (scanner.getLineNumber(type.sourceStart)", "-\t\t\t\t\t\t\t!= scanner.getLineNumber(nameSourceStart)))){", "-\t\t\t\tlastCheckPoint = nameSourceStart;", "-\t\t\t\trestartRecovery = true;", "-\t\t\t\treturn;", "+\t\t\tif(!checkKeyword() && !(currentElement instanceof RecoveredUnit && ((RecoveredUnit)currentElement).typeCount == 0)) {", "+\t\t\t\tint nameSourceStart = (int)(identifierPositionStack[identifierPtr] >>> 32);", "+\t\t\t\tintPtr--;", "+\t\t\t\t", "+\t\t\t\tTypeReference type = getTypeReference(intStack[intPtr--]);", "+\t\t\t\tintPtr--;", "+\t\t\t\t", "+\t\t\t\tif (!(currentElement instanceof RecoveredType)", "+\t\t\t\t\t&& (currentToken == TokenNameDOT", "+\t\t\t\t\t\t|| (scanner.getLineNumber(type.sourceStart)", "+\t\t\t\t\t\t\t\t!= scanner.getLineNumber(nameSourceStart)))){", "+\t\t\t\t\tlastCheckPoint = nameSourceStart;", "+\t\t\t\t\trestartRecovery = true;", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tFieldDeclaration completionFieldDecl = new CompletionOnFieldType(type, false);", "+\t\t\t\tcompletionFieldDecl.modifiers = intStack[intPtr--];", "+\t\t\t\tassistNode = completionFieldDecl;", "+\t\t\t\tlastCheckPoint = type.sourceEnd + 1;", "+\t\t\t\tcurrentElement = currentElement.add(completionFieldDecl, 0);", "+\t\t\t\tlastIgnoredToken = -1;", "-\t\t\t", "-\t\t\tFieldDeclaration completionFieldDecl = new CompletionOnFieldType(type, false);", "-\t\t\tcompletionFieldDecl.modifiers = intStack[intPtr--];", "-\t\t\tassistNode = completionFieldDecl;", "-\t\t\tlastCheckPoint = type.sourceEnd + 1;", "-\t\t\tcurrentElement = currentElement.add(completionFieldDecl, 0);", "-\t\t\tlastIgnoredToken = -1;"]}], "num": 51212}