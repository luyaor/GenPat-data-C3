{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c86744adc3a9b6bfc9ece7adde9b65c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17013c42d95bb03acd76d3a8c2d0331b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/ElementProc.java", "commitBeforeChange": "bbb750998e75511ba75783c9f2d763f2e32279d9", "commitAfterChange": "02bf4272774dd4f6faf4897c054614bdc809ab9e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate boolean examineAMethodsAndFields()", "signatureAfterChange": " \tprivate boolean examineAMethodsAndFields()", "diff": ["+\t\tList<ExecutableElement> methodsD = ElementFilter.methodsIn(_elementString.getEnclosedElements());", "+\t\tfor (ExecutableElement method : methodsD) {", "+\t\t\tList<? extends VariableElement> params = method.getParameters();", "+\t\t\tfor (VariableElement param : params) {", "+\t\t\t\tElement enclosingElement = param.getEnclosingElement();", "+\t\t\t\tif (enclosingElement == null) {", "+\t\t\t\t\treportError(\"Enclosing element of a parameter in one of the java.lang.String methods is null\");", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\tif (!enclosingElement.equals(method)) {", "+\t\t\t\t\treportError(\"Enclosing element of a parameter in one of the java.lang.String methods is not the method itself\");", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a53e0a0338e31e21af48929682cfe4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/messager/MessagerProc.java", "commitBeforeChange": "c658da8ee403c4a9726e31e0b3916361b6795525", "commitAfterChange": "bb6a78d249db719996651e9dce01af3d16d29c93", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate boolean collectElements()", "signatureAfterChange": " \tprivate boolean collectElements()", "diff": ["-/*\t\tList<? extends Element> enclosedElements = _elementE.getEnclosedElements();", "-\t\tloop : for (Element element : enclosedElements) {", "+\t\tList<? extends Element> enclosedElements = _elementE.getEnclosedElements();", "+\t\tfor (Element element : enclosedElements) {", "-\t\t\t\t\tif (element == null) continue loop;", "-\t\t\t\t\tif (\"foo\".equals(name)) {", "+\t\t\t\t\tif (\"foo\".equals(name) && _methodElement == null) {", "-\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase FIELD :", "+\t\t\t\t\tVariableElement variableElement = (VariableElement) element;", "+\t\t\t\t\tbuilder = new StringBuilder(variableElement.getSimpleName());", "+\t\t\t\t\tname = String.valueOf(builder);", "+\t\t\t\t\tif (\"j\".equals(name) && _variableElement == null) {", "+\t\t\t\t\t\t_variableElement = variableElement;", "-\t\t}*/", "+\t\t}", "+\t\t", "+\t\tif (_variableElement == null) {", "+\t\t\treportError(\"Element for field j could not be found\");", "+\t\t\treturn false;", "+\t\t}"]}], "num": 47216}