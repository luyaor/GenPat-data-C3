{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d436a54249ed74d06776c675b1d8f816", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a110ff7e29fecf9fef993c47386f8b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding binding)", "signatureAfterChange": " protected int resolveLevelForType(char[] simpleNamePattern, char[] qualificationPattern, TypeBinding binding)", "diff": ["-\tif ((this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0) {", "-\t\tif (CharOperation.prefixEquals(qualifiedPattern, sourceName, this.isCaseSensitive)) {", "-\t\t\treturn ACCURATE_MATCH;", "-\t\t}", "-\t}", "-\tif (this.isCamelCase) {", "-\t\tif ((qualifiedPattern.length>0 && sourceName.length>0 && qualifiedPattern[0] == sourceName[0])) {", "-\t\t\tif (CharOperation.camelCaseMatch(qualifiedPattern, sourceName, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "+\tswitch (this.matchMode) {", "+\t\tcase SearchPattern.R_PREFIX_MATCH:", "+\t\t\tif (CharOperation.prefixEquals(qualifiedPattern, sourceName, this.isCaseSensitive)) {", "-\t\t}", "-\t\tif (!this.isCaseSensitive && this.matchMode == SearchPattern.R_EXACT_MATCH) {", "-\t\t\tboolean matchPattern = CharOperation.equals(qualifiedPattern, sourceName, false);", "-\t\t\treturn matchPattern ? ACCURATE_MATCH : IMPOSSIBLE_MATCH;", "-\t\t}", "+\t\t\tbreak;", "+\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\tif ((qualifiedPattern.length>0 && sourceName.length>0 && qualifiedPattern[0] == sourceName[0])) {", "+\t\t\t\tif (CharOperation.camelCaseMatch(qualifiedPattern, sourceName, false)) {", "+\t\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t\t}", "+\t\t\t\tif (!this.isCaseSensitive && CharOperation.prefixEquals(qualifiedPattern, sourceName, false)) {", "+\t\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\tif ((qualifiedPattern.length>0 && sourceName.length>0 && qualifiedPattern[0] == sourceName[0])) {", "+\t\t\t\tif (CharOperation.camelCaseMatch(qualifiedPattern, sourceName, true)) {", "+\t\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\tif (CharOperation.match(qualifiedPattern, sourceName, this.isCaseSensitive)) {", "+\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t}", "-\tboolean matchPattern = CharOperation.match(qualifiedPattern, sourceName, this.isCaseSensitive);", "-\treturn matchPattern ? ACCURATE_MATCH : IMPOSSIBLE_MATCH;", "-", "+\treturn IMPOSSIBLE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7321229319b5b977848d03828479a02a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected int matchLevelForTokens(char[][] tokens)", "signatureAfterChange": " protected int matchLevelForTokens(char[][] tokens)", "diff": ["-\tchar[] packageName = null;", "-\tif (this.isCamelCase) {", "-\t\tpackageName = CharOperation.concatWith(tokens, '.');", "-\t\tif (CharOperation.camelCaseMatch(this.pattern.pkgName, packageName, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "-\t\t\treturn POSSIBLE_MATCH;", "-\t\t}", "-\t\tif (this.isCaseSensitive) return IMPOSSIBLE_MATCH;", "-\t}", "-\t\t\tif (packageName==null) packageName = CharOperation.concatWith(tokens, '.');", "-\t\t\tif (CharOperation.prefixEquals(this.pattern.pkgName, packageName, this.isCaseSensitive)) {", "+\t\t\tif (CharOperation.prefixEquals(this.pattern.pkgName, CharOperation.concatWith(tokens, '.'), this.isCaseSensitive)) {", "+", "-\t\t\tif (packageName==null) packageName = CharOperation.concatWith(tokens, '.');", "-\t\t\tif (CharOperation.match(patternName, packageName, this.isCaseSensitive)) {", "+\t\t\tif (CharOperation.match(patternName, CharOperation.concatWith(tokens, '.'), this.isCaseSensitive)) {", "+", "+", "+\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\tchar[] packageName = CharOperation.concatWith(tokens, '.');", "+\t\t\tif (CharOperation.camelCaseMatch(this.pattern.pkgName, packageName, false)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\t// only test case insensitive as CamelCase already verified prefix case sensitive", "+\t\t\tif (!this.isCaseSensitive && CharOperation.prefixEquals(this.pattern.pkgName, packageName, false)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\tbreak;", "+", "+\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\tpackageName = CharOperation.concatWith(tokens, '.');", "+\t\t\tif (CharOperation.camelCaseMatch(this.pattern.pkgName, CharOperation.concatWith(tokens, '.'), true)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\tbreak;"]}], "num": 32125}