{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f028638bcb42ec8e22b2c0a9047c82fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c375c6d63ee6d9d2c4896f6b83e6b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "5a2f988914931154f5726bd24a4a8b4b4e70ad8f", "commitAfterChange": "dde61f12215689beafafbd236819d1ddb00bab36", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tprivate void _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers, \t\t\tIJavaProject p)", "signatureAfterChange": " \t \tprivate void _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers, \t\t\tIJavaProject p)", "diff": ["+\t\t// Try to use the iterative CL as parent, so we can resolve classes within it", "+\t\tClassLoader parentCL = _iterativeLoaders.get(p);", "+\t\tif (parentCL == null) {", "+\t\t\tparentCL = AnnotationProcessorFactoryLoader.class.getClassLoader();", "+\t\t}", "+\t\t", "-\t\t\t_batchLoaders.put(p,createClassLoader( fileList, AnnotationProcessorFactoryLoader.class.getClassLoader()));", "+\t\t\t_batchLoaders.put(p,createClassLoader( fileList, parentCL));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3fb65ac4cfe45eb629fd7058056d05f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "015c66459c41ce714c2afab061dda99760bcb04e", "commitAfterChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static void setFactoryPath(IJavaProject jproj, IFactoryPath path)\t \t\t\tthrows CoreException", "signatureAfterChange": " \tpublic static void setFactoryPath(IJavaProject jproj, IFactoryPath path)\t \t\t\tthrows CoreException", "diff": ["-\t\t// The factory path isn't saved to the Eclipse preference store,", "-\t\t// so we can't rely on the ChangeListener mechanism.", "-\t\tAnnotationProcessorFactoryLoader.getLoader().resetAll();", "+\t\t// Project-specific factory path files are resources, so changes", "+\t\t// get picked up by the resource listener.  Workspace changes aren't.", "+\t\tif (jproj == null) {", "+\t\t\tAnnotationProcessorFactoryLoader.getLoader().resetAll();", "+\t\t}"]}], "num": 21928}