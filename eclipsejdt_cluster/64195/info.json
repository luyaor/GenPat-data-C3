{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e3dc1366922e7c38c8f345360bfb876", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e16032987a36126a9651412f6556128", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tprivate void dumpLocations(int[] locations)", "signatureAfterChange": " \t \tprivate void dumpLocations(int[] locations)", "diff": ["-", "+\t", "-\t\tif (locations != null) {", "-\t\t\tint length = locations.length;", "-\t\t\tint actualSize = 2 + length;", "-\t\t\tif (this.contentsOffset + actualSize >= this.contents.length) {", "-\t\t\t\tresizeContents(actualSize);", "+\t\tif (locations == null) {", "+\t\t\t// no type path", "+\t\t\tif (this.contentsOffset + 1 >= this.contents.length) {", "+\t\t\t\tresizeContents(1);", "-\t\t\tthis.contents[this.contentsOffset++] = (byte) (length >> 8);", "-\t\t\tthis.contents[this.contentsOffset++] = (byte) length;", "+\t\t\tthis.contents[this.contentsOffset++] = (byte) 0;", "+\t\t} else {", "+\t\t\tint length = locations.length;", "+\t\t\tif (this.contentsOffset + length >= this.contents.length) {", "+\t\t\t\tresizeContents(length + 1);", "+\t\t\t}", "+\t\t\tthis.contents[this.contentsOffset++] = (byte) (locations.length / 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e07c96bc690a0290aea35c2ccd03fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "82ebf715db153176c821d224623053c8e446f0cb", "commitAfterChange": "278d4e1b32f27e1cf67071cc3713ec8e809940ef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void addAttributes()", "signatureAfterChange": " \tpublic void addAttributes()", "diff": ["+\t\t", "+\t\tif (this.referenceBinding.isHierarchyInconsistent()) {", "+\t\t\t// add an attribute for inconsistent hierarchy", "+\t\t\tif (contentsOffset + 6 >= contents.length) {", "+\t\t\t\tresizeContents(6);", "+\t\t\t}", "+\t\t\tint inconsistentHierarchyNameIndex =", "+\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.InconsistentHierarchy);", "+\t\t\tcontents[contentsOffset++] = (byte) (inconsistentHierarchyNameIndex >> 8);", "+\t\t\tcontents[contentsOffset++] = (byte) inconsistentHierarchyNameIndex;", "+\t\t\t// the length of an inconsistent hierarchy attribute is equals to 0", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tattributeNumber++;", "+\t\t}"]}], "num": 64195}