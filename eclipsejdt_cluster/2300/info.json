{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e300071ab416a27954ab41edd9fb8eb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe4733cf6d6548e68c53cb8eacf6c4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c5fca7ef6c294c6139aba614099e9d98b3db43cc", "commitAfterChange": "bd80f54d2bce372d0cb569282d8bd3ac7581ecf9", "methodNumberBeforeChange": 296, "methodNumberAfterChange": 296, "signatureBeforeChange": "  protected void consumeTypeElidedLambdaParameter(boolean parenthesized)", "signatureAfterChange": "  protected void consumeTypeElidedLambdaParameter(boolean parenthesized)", "diff": ["+\targ.declarationSourceStart = (int) (namePositions >>> 32);", "+\t\tproblemReporter().illegalModifiersForElidedType(arg);", "-\t} else {", "-\t\targ.declarationSourceStart = (int) (namePositions >>> 32);\t", "-\t}", "+\t} ", "-\tif (modifier != ClassFileConstants.AccDefault || annotationLength != 0) {", "-\t\tproblemReporter().illegalModifiersForElidedType(arg);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8eeb2a514ef61cc66a9004e1b24eb97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "commitAfterChange": "b403420c651fc8995a4c44cff2ecebab69cc0fa2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\t\tint rangeStart = typeRef.completeInText() ? typeRef.sourceStart : (int) (completionPosition >>> 32);", "+\t\t\t\t\t\tsetSourceRange(rangeStart, (int) completionPosition);"]}], "num": 2300}