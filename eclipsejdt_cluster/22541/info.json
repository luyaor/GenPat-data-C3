{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dfb372f86ee3ec169ae6cdf6037f9c4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a370ea2bbdefa9fb8031322f8ff2e1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "729d195ede25ca6ee5a445494cda26bf5f4b94a7", "commitAfterChange": "9e025388268143d227b16d19d468b4e4bff0d580", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding(CompilationUnitResolver resolver)", "diff": ["-\t\t\tif (resolver.requestedKeys.containsKey(fileName) || resolver.requestedSources.containsKey(fileName))", "-\t\t\t\tthrow new RuntimeException(\"Key is part of a file that is being requested already\"); //$NON-NLS-1$", "-\t\t\tresolver.process(parsedUnit, resolver.totalUnits+1);", "+\t\t\t// don't resolve a second time the same unit (this would create the same bindingd twice)", "+\t\t\tif (!resolver.requestedKeys.containsKey(fileName) && !resolver.requestedSources.containsKey(fileName))", "+\t\t\t\tresolver.process(parsedUnit, resolver.totalUnits+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94cfa8f66844aea3c7467563c8355518", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "d252240fefecda6f8aa975ebdcb182953df40821", "commitAfterChange": "30adc5455828e871ab44ff73fd0dcda0c140e3ee", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public static void zip(File rootDir, String zipPath) throws IOException", "signatureAfterChange": " public static void zip(File rootDir, String zipPath) throws IOException", "diff": ["-        if (zipFile.exists()) delete(zipFile);", "+        if (zipFile.exists() && !delete(zipFile))", "+        \tthrow new IOException(\"Could not delete \" + zipPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e97fb4deb5b88098ed14fbe7a53318a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Override \tprotected synchronized Class<?> findClass(String name) throws ClassNotFoundException", "signatureAfterChange": " \t \t@Override \tprotected synchronized Class<?> findClass(String name) throws ClassNotFoundException", "diff": ["-\t\topen();", "-\t\ttry {", "-\t\t\tbyte[] b = loadClassData(name);", "-\t\t\tif (b == null) {", "-\t\t\t\tthrow new ClassNotFoundException(\"Could not find class \" + name); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tClass<?> clazz = defineClass(name, b, 0, b.length);", "-\t\t\t// Define the package if necessary", "-\t\t\tString pkgName = getPackageName(name);", "-\t\t\tif (pkgName != null) {", "-\t\t\t\tPackage pkg = getPackage(pkgName);", "-\t\t\t\tif (pkg == null) {", "-\t\t\t\t\tdefinePackage(pkgName, null, null, null, null, null, null, null);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn clazz;", "+\t\tif (!_open)", "+\t\t\tthrow new ClassNotFoundException(\"Classloader closed: \" + name); //$NON-NLS-1$", "+", "+\t\tbyte[] b = loadClassData(name);", "+\t\tif (b == null) {", "+\t\t\tthrow new ClassNotFoundException(\"Could not find class \" + name); //$NON-NLS-1$", "-\t\tfinally {", "-\t\t\tclose();", "+\t\tClass<?> clazz = defineClass(name, b, 0, b.length);", "+\t\t// Define the package if necessary", "+\t\tString pkgName = getPackageName(name);", "+\t\tif (pkgName != null) {", "+\t\t\tPackage pkg = getPackage(pkgName);", "+\t\t\tif (pkg == null) {", "+\t\t\t\tdefinePackage(pkgName, null, null, null, null, null, null, null);", "+\t\t\t}", "+\t\treturn clazz;"]}], "num": 22541}