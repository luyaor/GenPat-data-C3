{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36ba17e96af7b162cdd2bc364f21dfc2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479716f2e330d6bbc6c01848e02dcc9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testMakeReferences() throws IOException, Exception", "signatureAfterChange": " public void testMakeReferences() throws IOException, Exception", "diff": ["+\t// Dump the version", "+\tFile versionFile = new Path(OUTPUT_DIR.getPath()).append(\"version.txt\").toFile();", "+\tOUTPUT_DIR.mkdirs();", "+\tUtil.writeToFile(JDT_CORE_VERSION, versionFile.getAbsolutePath());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959deee7e3502a93c3613c037b5bfb08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "d597818a031f7015e22f49924a18cb275669d0f8", "commitAfterChange": "29e51ef33f78527537698d6cc7519e1be984f28d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected StringBuffer printProposal(CompletionProposal proposal, int tab, StringBuffer buffer)", "signatureAfterChange": "  \tprotected StringBuffer printProposal(CompletionProposal proposal, int tab, StringBuffer buffer)", "diff": ["+\t\tif(this.showModifiers) {", "+\t\t\tint flags = proposal.getFlags();", "+\t\t\tbuffer.append(\", \");", "+\t\t\tbuffer.append(Flags.toString(flags));", "+\t\t\tif (Flags.isDeprecated(flags)) {", "+\t\t\t\tbuffer.append(\" deprecated\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e695c48622b5bb4b74c8c62a6b0a1270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected StringBuffer print(StringBuffer output)", "signatureAfterChange": "  \tprotected StringBuffer print(StringBuffer output)", "diff": ["-\t\t\t\toutput.append(\"exact match,\"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"exact match, \"); //$NON-NLS-1$", "-\t\t\t\toutput.append(\"prefix match,\"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"prefix match, \"); //$NON-NLS-1$", "-\t\t\t\toutput.append(\"pattern match,\"); //$NON-NLS-1$", "+\t\t\t\toutput.append(\"pattern match, \"); //$NON-NLS-1$", "-\t\t\toutput.append(\" case sensitive\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"case sensitive, \"); //$NON-NLS-1$", "-\t\t\toutput.append(\" case insensitive\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"case insensitive, \"); //$NON-NLS-1$", "+\t\tif ((this.matchCompatibility & R_FULL_MATCH) != 0) {", "+\t\t\toutput.append(\"generic full match, \"); //$NON-NLS-1$", "+\t\t}", "-\t\t\toutput.append(\", erasure only\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"generic erasure match, \"); //$NON-NLS-1$", "-\t\t\toutput.append(\", equivalent oronly\"); //$NON-NLS-1$", "+\t\t\toutput.append(\"generic equivalent match, \"); //$NON-NLS-1$", "+\t\toutput.append(\"fine grain: \"); //$NON-NLS-1$", "+\t\toutput.append(getFineGrainFlagString(this.fineGrain));"]}], "num": 15394}