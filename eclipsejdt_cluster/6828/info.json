{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7835685645ee7ca99d593fe73dcb4341", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2135c80dc7e0591e5b0aa20b30cc85da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "9b26efa81a6e381ed8487b9883db0ad019b470e0", "commitAfterChange": "f8b4a09010dbba905cde5c02b5290761440c6661", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tpublic String getKey()", "signatureAfterChange": "\r \tpublic String getKey()", "diff": ["-\t\treturn null;\r", "+\t\tStringBuffer buffer = new StringBuffer();\r", "+\t\tbuffer.append(getReturnType().getKey());\r", "+\t\tif (!isConstructor()) {\r", "+\t\t\tbuffer.append(this.getName());\r", "+\t\t\tbuffer.append('/');\r", "+\t\t}\r", "+\t\tbuffer.append(this.getDeclaringClass().getKey());\r", "+\t\tITypeBinding[] parameters = getParameterTypes();\r", "+\t\tbuffer.append('(');\r", "+\t\tfor (int i = 0, max = parameters.length; i < max; i++) {\r", "+\t\t\tbuffer.append(parameters[i].getKey());\r", "+\t\t}\r", "+\t\tbuffer.append(')');\r", "+\t\tITypeBinding[] thrownExceptions = getExceptionTypes();\r", "+\t\tfor (int i = 0, max = thrownExceptions.length; i < max; i++) {\r", "+\t\t\tbuffer.append(thrownExceptions[i].getKey());\r", "+\t\t}\r", "+\t\treturn buffer.toString();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d178251e0b24b330ea987d9cd1faffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "8e8d8e45c2ef2f6ead0467d2ea8c6dadb189ddb8", "commitAfterChange": "b3d1d871406f56d8ee454b6524d9decdbf5e4860", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public RegionBasedTypeHierarchy(IRegion region, ICompilationUnit[] workingCopies, IType type, boolean computeSubtypes)", "signatureAfterChange": " public RegionBasedTypeHierarchy(IRegion region, ICompilationUnit[] workingCopies, IType type, boolean computeSubtypes)", "diff": ["-\tthis.region = region;", "+\t", "+\tRegion newRegion = new Region() {", "+\t\tpublic void add(IJavaElement element) {", "+\t\t\tif (!contains(element)) {", "+\t\t\t\t//\"new\" element added to region", "+\t\t\t\tremoveAllChildren(element);", "+\t\t\t\tfRootElements.add(element);", "+\t\t\t\tif (element.getElementType() == IJavaElement.JAVA_PROJECT) {", "+\t\t\t\t\t// add jar roots as well so that jars don't rely on their parent to know ", "+\t\t\t\t\t// if they are contained in the region", "+\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=146615)", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tIPackageFragmentRoot[] roots = ((IJavaProject) element).getPackageFragmentRoots();", "+\t\t\t\t\t\tfor (int i = 0, length = roots.length; i < length; i++) {", "+\t\t\t\t\t\t\tif (roots[i].isArchive() && !fRootElements.contains(roots[i]))", "+\t\t\t\t\t\t\t\tfRootElements.add(roots[i]);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// project doesn't exist", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tfRootElements.trimToSize();", "+\t\t\t}", "+\t\t}", "+\t};", "+\tfor (int i = 0, length = elements.length; i < length; i++) {", "+\t\tnewRegion.add(elements[i]);", "+\t\t", "+\t}", "+\tthis.region = newRegion;"]}], "num": 6828}