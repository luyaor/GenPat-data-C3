{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e062e9e820fbfdee804d60c85bac8089", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f650bda309a922724d4c8bb1c7491a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementInfo.java", "commitBeforeChange": "21cbb8771cc00d8e13a556404fdfae59ecdb14f8", "commitAfterChange": "0899c90ae8de27e397eab6637d91f616ff022416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void addChild(IJavaElement child)", "signatureAfterChange": " \tpublic void addChild(IJavaElement child)", "diff": ["-\t\tif (this.children == JavaElement.NO_ELEMENTS) {", "-\t\t\tsetChildren(new IJavaElement[] {child});", "+\t\tint length = this.children.length;\t\t", "+\t\tif (length == 0) {", "+\t\t\tthis.children = new IJavaElement[] {child};", "-\t\t\tif (!includesChild(child)) {", "-\t\t\t\tsetChildren(growAndAddToArray(this.children, child));", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tif (children[i].equals(child))", "+\t\t\t\t\treturn; // already included", "+\t\t\tSystem.arraycopy(this.children, 0, this.children = new IJavaElement[length+1], 0, length);", "+\t\t\tthis.children[length] = child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5054a0737aaf3bb7fcec38aa772f856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "027433d18c80815de3076b7fd489422a48401f1a", "commitAfterChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public TypeDeclaration updatedTypeDeclaration(int depth, Set knownTypes)", "signatureAfterChange": " public TypeDeclaration updatedTypeDeclaration(int depth, Set knownTypes)", "diff": ["+\t\tint totalMethods = existingCount;", "+\t\tnext:", "+\t\t\tfor (int j = 0; j < existingCount; j++) {", "+\t\t\t\tif (methodDeclarations[j] == this.methods[i].methodDeclaration)", "+\t\t\t\t\tcontinue next;", "+\t\t\t}", "-\t\t\tmethodDeclarations[existingCount + i] = updatedMethod;", "+\t\t\tmethodDeclarations[totalMethods ++] = updatedMethod;", "+\t\tif (totalMethods != methodDeclarations.length)", "+\t\t\tSystem.arraycopy(methodDeclarations, 0, methodDeclarations = new AbstractMethodDeclaration[totalMethods], 0, totalMethods);"]}], "num": 36894}