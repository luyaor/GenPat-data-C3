{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5cf61da40e99cc540f87cffa44d76b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aa00f71b3efd1ea35890837df824e69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "ae391996f2ba5153face2dc96f44fbe25cc6cfcf", "commitAfterChange": "bd2d6cba91ea60af9a4818216d0ebbc8f0ef4bb2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " boolean areMethodsCompatible(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean areMethodsCompatible(MethodBinding one, MethodBinding two)", "diff": ["-\ttwo = two.original();", "+\ttwo = one.findOriginalInheritedMethod(two);", "-\tTypeBinding match = one.declaringClass.findSuperTypeOriginatingFrom(two.declaringClass);", "-\tif (!(match instanceof ReferenceBinding))", "+\tif (two == null)", "-", "-\tif (match != two.declaringClass) {", "-\t\tMethodBinding[] superMethods = ((ReferenceBinding) match).getMethods(two.selector);", "-\t\tfor (int i = 0, length = superMethods.length; i < length; i++)", "-\t\t\tif (superMethods[i].original() == two)", "-\t\t\t\treturn isParameterSubsignature(one, superMethods[i]);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de024d6e1e33b574f62e9fe1cefad5e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "ae391996f2ba5153face2dc96f44fbe25cc6cfcf", "commitAfterChange": "bd2d6cba91ea60af9a4818216d0ebbc8f0ef4bb2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean isMethodSubsignature(MethodBinding method, MethodBinding inheritedMethod)", "signatureAfterChange": " public boolean isMethodSubsignature(MethodBinding method, MethodBinding inheritedMethod)", "diff": ["-\tinheritedMethod = inheritedMethod.original();", "-\tTypeBinding match = method.declaringClass.findSuperTypeOriginatingFrom(inheritedMethod.declaringClass);", "-\tif ((match instanceof ReferenceBinding) && match != inheritedMethod.declaringClass) {", "-\t\tMethodBinding[] superMethods = ((ReferenceBinding) match).getMethods(inheritedMethod.selector);", "-\t\tfor (int i = 0, length = superMethods.length; i < length; i++)", "-\t\t\tif (superMethods[i].original() == inheritedMethod.original())", "-\t\t\t\treturn isParameterSubsignature(method, superMethods[i]);", "-\t}", "-", "-\treturn isParameterSubsignature(method, inheritedMethod);", "+\tMethodBinding inheritedOriginal = method.findOriginalInheritedMethod(inheritedMethod);", "+\treturn isParameterSubsignature(method, inheritedOriginal == null ? inheritedMethod : inheritedOriginal);"]}], "num": 28517}