{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e7f7f9ab1eaeb52895cf34678e72a4b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2653529ef9b037cb24eb17018c53bd28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private boolean matches(NameReference nameRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(NameReference nameRef, boolean resolve) {\t\r", "-\t// field name\r", "-\tboolean nameMatch = true;\r", "-\tif (this.name != null) {\r", "-\t\tif (nameRef instanceof SingleNameReference) {\r", "-\t\t\tnameMatch = matchesName(this.name, ((SingleNameReference)nameRef).token);\r", "-\t\t} else { // QualifiedNameReference\r", "-\t\t\tnameMatch = false;\r", "-\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "-\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\tfor (int i = qNameRef.indexOfFirstFieldBinding-1, max = tokens.length; i < max && !nameMatch; i++){\r", "-\t\t\t\tif (i >= 0) nameMatch = matchesName(this.name, tokens[i]);\r", "-\t\t\t}\r", "-\t\t}\t\t\t\t\r", "-\t} \r", "-\tif (!nameMatch) return false;\r", "-\r", "-\tif (resolve){\t\r", "-\t\tBinding binding = nameRef.binding;\r", "-\t\tif (binding != null){\r", "-\t\t\tif (nameRef instanceof SingleNameReference){\r", "-\t\t\t\tif (binding instanceof FieldBinding){\r", "-\t\t\t\t\tif (!this.matches(nameRef.receiverType, false, (FieldBinding) binding)){\r", "-\t\t\t\t\t\treturn false;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn false; // must be a field binding\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedNameReference\r", "-\t\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "-\t\t\t\tTypeBinding receiverType = qNameRef.receiverType;\r", "-\t\t\t\tFieldBinding fieldBinding = null;\r", "-\t\t\t\tif (!(binding instanceof FieldBinding \r", "-\t\t\t\t\t\t&& matchesName(this.name, (fieldBinding = (FieldBinding)binding).name) \r", "-\t\t\t\t\t\t&& matches(receiverType, false, fieldBinding))){\r", "-\t\t\t\t\tif (binding instanceof VariableBinding){\r", "-\t\t\t\t\t\treceiverType = ((VariableBinding) binding).type;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tboolean otherMatch = false;\r", "-\t\t\t\t\tint otherMax = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\r", "-\t\t\t\t\tfor (int i = 0; i < otherMax && !otherMatch; i++){\r", "-\t\t\t\t\t\tFieldBinding otherBinding = qNameRef.otherBindings[i];\r", "-\t\t\t\t\t\tif (otherBinding == null) break;\r", "-\t\t\t\t\t\totherMatch = matchesName(this.name, otherBinding.name) && matches(receiverType, false, otherBinding);\r", "-\t\t\t\t\t\treceiverType = otherBinding.type;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (!otherMatch) return false;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(NameReference nameRef, boolean resolve) {\t\r", "+\t// field name\r", "+\tboolean nameMatch = true;\r", "+\tif (this.name != null) {\r", "+\t\tif (nameRef instanceof SingleNameReference) {\r", "+\t\t\tnameMatch = this.matchesName(this.name, ((SingleNameReference)nameRef).token);\r", "+\t\t} else { // QualifiedNameReference\r", "+\t\t\tnameMatch = false;\r", "+\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "+\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\tfor (int i = qNameRef.indexOfFirstFieldBinding-1, max = tokens.length; i < max && !nameMatch; i++){\r", "+\t\t\t\tif (i >= 0) nameMatch = this.matchesName(this.name, tokens[i]);\r", "+\t\t\t}\r", "+\t\t}\t\t\t\t\r", "+\t} \r", "+\tif (!nameMatch) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tif (resolve) {\t\r", "+\t\tBinding binding = nameRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (nameRef instanceof SingleNameReference){\r", "+\t\t\t\tif (binding instanceof FieldBinding){\r", "+\t\t\t\t\treturn this.matchLevel(nameRef.receiverType, false, (FieldBinding) binding);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH; // must be a field binding\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedNameReference\r", "+\t\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "+\t\t\t\tTypeBinding receiverType = qNameRef.receiverType;\r", "+\t\t\t\tFieldBinding fieldBinding = null;\r", "+\t\t\t\tif (binding instanceof FieldBinding && this.matchesName(this.name, (fieldBinding = (FieldBinding)binding).name)) {\r", "+\t\t\t\t\treturn this.matchLevel(receiverType, false, fieldBinding);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tif (binding instanceof VariableBinding){\r", "+\t\t\t\t\t\treceiverType = ((VariableBinding) binding).type;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tint otherLevel = IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\tint otherMax = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\r", "+\t\t\t\t\tfor (int i = 0; i < otherMax && (otherLevel == IMPOSSIBLE_MATCH); i++){\r", "+\t\t\t\t\t\tFieldBinding otherBinding = qNameRef.otherBindings[i];\r", "+\t\t\t\t\t\tif (this.matchesName(this.name, otherBinding.name)) {\r", "+\t\t\t\t\t\t\totherLevel = this.matchLevel(receiverType, false, otherBinding);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\treceiverType = otherBinding.type;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn otherLevel;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn POSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c731e1dd365adf83cbc83097957d3002", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private boolean matches(NameReference nameRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(NameReference nameRef, boolean resolve) {\t\r", "-\t// field name\r", "-\tboolean nameMatch = true;\r", "-\tif (this.name != null) {\r", "-\t\tif (nameRef instanceof SingleNameReference) {\r", "-\t\t\tnameMatch = matchesName(this.name, ((SingleNameReference)nameRef).token);\r", "-\t\t} else { // QualifiedNameReference\r", "-\t\t\tnameMatch = false;\r", "-\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "-\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\tfor (int i = qNameRef.indexOfFirstFieldBinding-1, max = tokens.length; i < max && !nameMatch; i++){\r", "-\t\t\t\tif (i >= 0) nameMatch = matchesName(this.name, tokens[i]);\r", "-\t\t\t}\r", "-\t\t}\t\t\t\t\r", "-\t} \r", "-\tif (!nameMatch) return false;\r", "-\r", "-\tif (resolve){\t\r", "-\t\tBinding binding = nameRef.binding;\r", "-\t\tif (binding != null){\r", "-\t\t\tif (nameRef instanceof SingleNameReference){\r", "-\t\t\t\tif (binding instanceof FieldBinding){\r", "-\t\t\t\t\tif (!this.matches(nameRef.receiverType, false, (FieldBinding) binding)){\r", "-\t\t\t\t\t\treturn false;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn false; // must be a field binding\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedNameReference\r", "-\t\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "-\t\t\t\tTypeBinding receiverType = qNameRef.receiverType;\r", "-\t\t\t\tFieldBinding fieldBinding = null;\r", "-\t\t\t\tif (!(binding instanceof FieldBinding \r", "-\t\t\t\t\t\t&& matchesName(this.name, (fieldBinding = (FieldBinding)binding).name) \r", "-\t\t\t\t\t\t&& matches(receiverType, false, fieldBinding))){\r", "-\t\t\t\t\tif (binding instanceof VariableBinding){\r", "-\t\t\t\t\t\treceiverType = ((VariableBinding) binding).type;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tboolean otherMatch = false;\r", "-\t\t\t\t\tint otherMax = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\r", "-\t\t\t\t\tfor (int i = 0; i < otherMax && !otherMatch; i++){\r", "-\t\t\t\t\t\tFieldBinding otherBinding = qNameRef.otherBindings[i];\r", "-\t\t\t\t\t\tif (otherBinding == null) break;\r", "-\t\t\t\t\t\totherMatch = matchesName(this.name, otherBinding.name) && matches(receiverType, false, otherBinding);\r", "-\t\t\t\t\t\treceiverType = otherBinding.type;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (!otherMatch) return false;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(NameReference nameRef, boolean resolve) {\t\r", "+\t// field name\r", "+\tboolean nameMatch = true;\r", "+\tif (this.name != null) {\r", "+\t\tif (nameRef instanceof SingleNameReference) {\r", "+\t\t\tnameMatch = this.matchesName(this.name, ((SingleNameReference)nameRef).token);\r", "+\t\t} else { // QualifiedNameReference\r", "+\t\t\tnameMatch = false;\r", "+\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "+\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\tfor (int i = qNameRef.indexOfFirstFieldBinding-1, max = tokens.length; i < max && !nameMatch; i++){\r", "+\t\t\t\tif (i >= 0) nameMatch = this.matchesName(this.name, tokens[i]);\r", "+\t\t\t}\r", "+\t\t}\t\t\t\t\r", "+\t} \r", "+\tif (!nameMatch) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tif (resolve) {\t\r", "+\t\tBinding binding = nameRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (nameRef instanceof SingleNameReference){\r", "+\t\t\t\tif (binding instanceof FieldBinding){\r", "+\t\t\t\t\treturn this.matchLevel(nameRef.receiverType, false, (FieldBinding) binding);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH; // must be a field binding\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedNameReference\r", "+\t\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "+\t\t\t\tTypeBinding receiverType = qNameRef.receiverType;\r", "+\t\t\t\tFieldBinding fieldBinding = null;\r", "+\t\t\t\tif (binding instanceof FieldBinding && this.matchesName(this.name, (fieldBinding = (FieldBinding)binding).name)) {\r", "+\t\t\t\t\treturn this.matchLevel(receiverType, false, fieldBinding);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tif (binding instanceof VariableBinding){\r", "+\t\t\t\t\t\treceiverType = ((VariableBinding) binding).type;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tint otherLevel = IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\tint otherMax = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\r", "+\t\t\t\t\tfor (int i = 0; i < otherMax && (otherLevel == IMPOSSIBLE_MATCH); i++){\r", "+\t\t\t\t\t\tFieldBinding otherBinding = qNameRef.otherBindings[i];\r", "+\t\t\t\t\t\tif (this.matchesName(this.name, otherBinding.name)) {\r", "+\t\t\t\t\t\t\totherLevel = this.matchLevel(receiverType, false, otherBinding);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\treceiverType = otherBinding.type;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn otherLevel;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn POSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4eb08199e86d336771ec355b6746f4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private boolean matches(NameReference nameRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(NameReference nameRef, boolean resolve) {\t\r", "-\t// field name\r", "-\tboolean nameMatch = true;\r", "-\tif (this.name != null) {\r", "-\t\tif (nameRef instanceof SingleNameReference) {\r", "-\t\t\tnameMatch = matchesName(this.name, ((SingleNameReference)nameRef).token);\r", "-\t\t} else { // QualifiedNameReference\r", "-\t\t\tnameMatch = false;\r", "-\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "-\t\t\tchar[][] tokens = qNameRef.tokens;\r", "-\t\t\tfor (int i = qNameRef.indexOfFirstFieldBinding-1, max = tokens.length; i < max && !nameMatch; i++){\r", "-\t\t\t\tif (i >= 0) nameMatch = matchesName(this.name, tokens[i]);\r", "-\t\t\t}\r", "-\t\t}\t\t\t\t\r", "-\t} \r", "-\tif (!nameMatch) return false;\r", "-\r", "-\tif (resolve){\t\r", "-\t\tBinding binding = nameRef.binding;\r", "-\t\tif (binding != null){\r", "-\t\t\tif (nameRef instanceof SingleNameReference){\r", "-\t\t\t\tif (binding instanceof FieldBinding){\r", "-\t\t\t\t\tif (!this.matches(nameRef.receiverType, false, (FieldBinding) binding)){\r", "-\t\t\t\t\t\treturn false;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn false; // must be a field binding\r", "-\t\t\t\t}\r", "-\t\t\t} else { // QualifiedNameReference\r", "-\t\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "-\t\t\t\tTypeBinding receiverType = qNameRef.receiverType;\r", "-\t\t\t\tFieldBinding fieldBinding = null;\r", "-\t\t\t\tif (!(binding instanceof FieldBinding \r", "-\t\t\t\t\t\t&& matchesName(this.name, (fieldBinding = (FieldBinding)binding).name) \r", "-\t\t\t\t\t\t&& matches(receiverType, false, fieldBinding))){\r", "-\t\t\t\t\tif (binding instanceof VariableBinding){\r", "-\t\t\t\t\t\treceiverType = ((VariableBinding) binding).type;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tboolean otherMatch = false;\r", "-\t\t\t\t\tint otherMax = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\r", "-\t\t\t\t\tfor (int i = 0; i < otherMax && !otherMatch; i++){\r", "-\t\t\t\t\t\tFieldBinding otherBinding = qNameRef.otherBindings[i];\r", "-\t\t\t\t\t\tif (otherBinding == null) break;\r", "-\t\t\t\t\t\totherMatch = matchesName(this.name, otherBinding.name) && matches(receiverType, false, otherBinding);\r", "-\t\t\t\t\t\treceiverType = otherBinding.type;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (!otherMatch) return false;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(NameReference nameRef, boolean resolve) {\t\r", "+\t// field name\r", "+\tboolean nameMatch = true;\r", "+\tif (this.name != null) {\r", "+\t\tif (nameRef instanceof SingleNameReference) {\r", "+\t\t\tnameMatch = this.matchesName(this.name, ((SingleNameReference)nameRef).token);\r", "+\t\t} else { // QualifiedNameReference\r", "+\t\t\tnameMatch = false;\r", "+\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "+\t\t\tchar[][] tokens = qNameRef.tokens;\r", "+\t\t\tfor (int i = qNameRef.indexOfFirstFieldBinding-1, max = tokens.length; i < max && !nameMatch; i++){\r", "+\t\t\t\tif (i >= 0) nameMatch = this.matchesName(this.name, tokens[i]);\r", "+\t\t\t}\r", "+\t\t}\t\t\t\t\r", "+\t} \r", "+\tif (!nameMatch) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tif (resolve) {\t\r", "+\t\tBinding binding = nameRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (nameRef instanceof SingleNameReference){\r", "+\t\t\t\tif (binding instanceof FieldBinding){\r", "+\t\t\t\t\treturn this.matchLevel(nameRef.receiverType, false, (FieldBinding) binding);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH; // must be a field binding\r", "+\t\t\t\t}\r", "+\t\t\t} else { // QualifiedNameReference\r", "+\t\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;\r", "+\t\t\t\tTypeBinding receiverType = qNameRef.receiverType;\r", "+\t\t\t\tFieldBinding fieldBinding = null;\r", "+\t\t\t\tif (binding instanceof FieldBinding && this.matchesName(this.name, (fieldBinding = (FieldBinding)binding).name)) {\r", "+\t\t\t\t\treturn this.matchLevel(receiverType, false, fieldBinding);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tif (binding instanceof VariableBinding){\r", "+\t\t\t\t\t\treceiverType = ((VariableBinding) binding).type;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tint otherLevel = IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\tint otherMax = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\r", "+\t\t\t\t\tfor (int i = 0; i < otherMax && (otherLevel == IMPOSSIBLE_MATCH); i++){\r", "+\t\t\t\t\t\tFieldBinding otherBinding = qNameRef.otherBindings[i];\r", "+\t\t\t\t\t\tif (this.matchesName(this.name, otherBinding.name)) {\r", "+\t\t\t\t\t\t\totherLevel = this.matchLevel(receiverType, false, otherBinding);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\treceiverType = otherBinding.type;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn otherLevel;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn POSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}], "num": 37821}