{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df43709a300588b6e46bc99d26beb8e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fccfd2046034b0d261ea677398cc5e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "bdd2ddc06125eff9d34246fb7941b569e87e3115", "commitAfterChange": "600ba421e993a3511db7b319a6d0197d8fd20d42", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t@SuppressWarnings({\"rawtypes\", \"unchecked\"}) \tprotected void addNewEntry(ArrayList paths, String currentClasspathName, \t\t\tArrayList currentRuleSpecs, String customEncoding, \t\t\tString destPath, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)", "signatureAfterChange": " \t@SuppressWarnings({\"rawtypes\", \"unchecked\"}) \tprotected void addNewEntry(ArrayList paths, String currentClasspathName, \t\t\tArrayList currentRuleSpecs, String customEncoding, \t\t\tString destPath, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)", "diff": ["-\t\t\t\tdestPath);", "+\t\t\t\tdestPath, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8745f3fe30bb16978b6af7024b0d30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, flowInfo, nullStatus);", "+\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, flowInfo, nullStatus, null);"]}], "num": 1380}