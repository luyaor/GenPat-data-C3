{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14ee3974e6c5fb710b7e6518daa24dea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45cee95753420da4e8820480d4e02a03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d35306cb5dcf7e4ac666fd0505f3086f50241fb2", "commitAfterChange": "3284f738bbf7a2dbd90434dea313c8629bed5722", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " public void test401939b()", "signatureAfterChange": " public void test401939b()", "diff": ["-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"This method must return a result of type String\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { while (FALSE) throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t                           ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Unreachable code\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { while (TRUE) throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 17)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { while (POI) throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"This method must return a result of type String\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { while (NIJAM) throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Unreachable code\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"5. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 18)\\n\" + ", "-\t\t\t\t\"\t                                                   ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Statement unnecessarily nested within else clause. The corresponding then clause does not complete normally\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"This method must return a result of type String\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"7. WARNING in X.java (at line 20)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"\t                                                   ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Statement unnecessarily nested within else clause. The corresponding then clause does not complete normally\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"8. WARNING in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { if (true) throw new Exception(); else throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t                                                   ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Dead code\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"9. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\t\"8. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\t\t\"\t                        ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + ", "-\t\t\t\t\"10. WARNING in X.java (at line 21)\\n\" + ", "-\t\t\t\t\"\tgoo((x) -> { if (false) throw new Exception(); else throw new Exception(); });\\n\" + ", "-\t\t\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Statement unnecessarily nested within else clause. The corresponding then clause does not complete normally\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"11. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\t\"9. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\t\"\t    ^^^^^^\\n\" + ", "-\t\t\t\t\"This method must return a result of type String\\n\" + ", "+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {})\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf531d166e804bd721169a8151b9e07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " public void test401939b()", "signatureAfterChange": " public void test401939b()", "diff": ["-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  while (FALSE)    throw new Exception();\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"This method must return a result of type String\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { while (FALSE) throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                           ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Unreachable code\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 17)\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  while (POI)    throw new Exception();\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"This method must return a result of type String\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 19)\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 17)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { while (POI) throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Unreachable code\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { if (TRUE) throw new Exception(); else throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                                                   ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Statement unnecessarily nested within else clause. The corresponding then clause does not complete normally\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  if (TRUE)\\n\" + ", "-\t\t\t\t\"      throw new Exception();\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"This method must return a result of type String\\n\" + ", "-\t\t\t\t\"4. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\t\"7. WARNING in X.java (at line 20)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { if (true) throw new Exception(); else throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                                                   ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Statement unnecessarily nested within else clause. The corresponding then clause does not complete normally\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"8. WARNING in X.java (at line 20)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { if (true) throw new Exception(); else throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                                                   ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"9. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { if (false) throw new Exception(); else throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                        ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Dead code\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"10. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\t\"\tgoo((x) -> { if (false) throw new Exception(); else throw new Exception(); });\\n\" + ", "+\t\t\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Statement unnecessarily nested within else clause. The corresponding then clause does not complete normally\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"11. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) in the type X is not applicable for the arguments ((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  while (BLANK)    throw new Exception();\\n\" + ", "-\t\t\t\t\"})\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"This method must return a result of type String\\n\" + "]}], "num": 49485}