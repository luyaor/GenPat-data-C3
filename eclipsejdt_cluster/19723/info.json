{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8680eba6bcebaf548ea1666cf0a0fd8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0914fb23cc2a672b64739b2e7162c244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().typeMismatchError(initializationType, variableType, this.initialization);", "+\t\t\t\t\t\tif ((variableType.tagBits & TagBits.HasMissingType) == 0) {", "+\t\t\t\t\t\t\t// if problem already got signaled on type, do not report secondary problem", "+\t\t\t\t\t\t\tscope.problemReporter().typeMismatchError(initializationType, variableType, this.initialization, null);", "+\t\t\t\t\t\t}\t\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64127acbcef25538759a39378020c0f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "6665973e9a36116a8cb24b7143317e47a83a98f0", "commitAfterChange": "305123b230bcfd1f733969b7cd2c687b75857ff0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().forwardReference(this, this.indexOfFirstFieldBinding-1, fieldBinding);", "+\t\t\t\t\t\tif ((this.bits & IsMemberValueReference) != 0 && fieldBinding.id == methodScope.lastVisibleFieldID) {", "+\t\t\t\t\t\t\t// false alarm, location is NOT a field initializer but the value in a memberValuePair", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tscope.problemReporter().forwardReference(this, this.indexOfFirstFieldBinding-1, fieldBinding);", "+\t\t\t\t\t\t}"]}], "num": 19723}