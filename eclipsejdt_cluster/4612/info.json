{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e06826ec8606e1dc0860c574db1bfb65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ab278011e0e890c919ed44fa31369b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "da058db49caa0df4b4f66bd12b8ee74b4f989546", "commitAfterChange": "32c958da845fca209f97cc0b2adf233df419f677", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 184, "signatureBeforeChange": "  \tprivate void saveVariablesAndContainers(ISaveContext context) throws CoreException", "signatureAfterChange": "  \tprivate void saveVariablesAndContainers(ISaveContext context) throws CoreException", "diff": ["-\t\t\tif (VARIABLES_AND_CONTAINERS_FILE_VERSION != 1)", "-\t\t\t\tnew VariablesAndContainersSaveHelper(out).save(context);", "-\t\t\telse {", "-\t\t\t\t// old code retained for performance comparisons", "-", "-    \t\t\t// variables", "-    \t\t\tout.writeInt(this.variables.size());", "-    \t\t\tIterator iterator = this.variables.entrySet().iterator();", "-    \t\t\twhile (iterator.hasNext()) {", "-    \t\t\t\tMap.Entry entry = (Map.Entry) iterator.next();", "-    \t\t\t\tString variableName = (String) entry.getKey();", "-    \t\t\t\tout.writeUTF(variableName);", "-    \t\t\t\tIPath path = (IPath) entry.getValue();", "-    \t\t\t\tout.writeUTF(path == null ? CP_ENTRY_IGNORE : path.toPortableString());", "-    \t\t\t}", "-", "-    \t\t\t// containers", "-    \t\t\tIJavaProject[] projects = getJavaModel().getJavaProjects();", "-    \t\t\tint length = projects.length;", "-    \t\t\tout.writeInt(length);", "-    \t\t\tfor (int i = 0; i < length; i++) {", "-    \t\t\t    IJavaProject project = projects[i];", "-    \t\t\t\t// clone while iterating (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59638)", "-    \t\t\t\tMap projectContainers = containerClone(project);", "-    \t\t\t\tout.writeUTF(project.getElementName());", "-    \t\t\t\tif (projectContainers == null) {", "-    \t\t\t\t\tout.writeInt(0);", "-    \t\t\t\t\tcontinue;", "-    \t\t\t\t}", "-    \t\t\t\tHashMap containersToSave = new HashMap();", "-    \t\t\t\tfor (iterator = projectContainers.entrySet().iterator(); iterator.hasNext();) {", "-    \t\t\t\t\tMap.Entry entry = (Map.Entry) iterator.next();", "-    \t\t\t\t    IPath containerPath = (IPath) entry.getKey();", "-    \t\t\t\t    IClasspathContainer container = (IClasspathContainer) entry.getValue();", "-    \t\t\t\t\tString containerString = null;", "-    \t\t\t\t\ttry {", "-    \t\t\t\t\t\tif (container == null) {", "-    \t\t\t\t\t\t\t// container has not been initialized yet, use previous session value", "-    \t\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=73969)", "-    \t\t\t\t\t\t\tcontainer = getPreviousSessionContainer(containerPath, project);", "-    \t\t\t\t\t\t}", "-    \t\t\t\t\t\tif (container != null) {", "-    \t\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "-    \t\t\t\t\t\t\tcontainerString = ((JavaProject)project).encodeClasspath(", "-    \t\t\t\t\t\t\t\t\tentries,", "-    \t\t\t\t\t\t\t\t\tnull,", "-    \t\t\t\t\t\t\t\t\tfalse,", "-    \t\t\t\t\t\t\t\t\tnull/*not interested in unknown elements*/);", "-    \t\t\t\t\t\t}", "-    \t\t\t\t\t} catch(JavaModelException e){", "-    \t\t\t\t\t\t// could not encode entry: will not persist", "-    \t\t\t\t\t\tUtil.log(e, \"Could not persist container \" + containerPath + \" for project \" + project.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "-    \t\t\t\t\t}", "-    \t\t\t\t\tif (containerString != null)", "-    \t\t\t\t\t\tcontainersToSave.put(containerPath, containerString);", "-    \t\t\t\t}", "-    \t\t\t\tout.writeInt(containersToSave.size());", "-    \t\t\t\titerator = containersToSave.entrySet().iterator();", "-    \t\t\t\twhile (iterator.hasNext()) {", "-    \t\t\t\t\tMap.Entry entry = (Map.Entry) iterator.next();", "-    \t\t\t\t\tIPath containerPath = (IPath) entry.getKey();", "-    \t\t\t\t\tout.writeUTF(containerPath.toPortableString());", "-    \t\t\t\t\tString containerString = (String) entry.getValue();", "-    \t\t\t\t\tout.writeInt(containerString.length());", "-    \t\t\t\t\tout.writeBytes(containerString);", "-    \t\t\t\t}", "-    \t\t\t}", "-\t\t\t}", "+\t\t\tnew VariablesAndContainersSaveHelper(out).save(context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95cd9a7dceb7b146a75f3fe05e18afa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "64adb94de0734c7d5adfd2cb11839ed3d3641dfc", "commitAfterChange": "a12b1847e48d96ac5e805a907f4cf72bcc8b1f19", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t    // save container values on snapshot/full save", "-\t\tIJavaProject[] projects = getJavaModel().getJavaProjects();", "-\t\tIEclipsePreferences preferences = getInstancePreferences();", "-\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "-\t\t    IJavaProject project = projects[i];", "-\t\t\t// clone while iterating (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59638)", "-\t\t\tMap projectContainers = containerClone(project);", "-\t\t\tif (projectContainers == null) continue;", "-\t\t\tfor (Iterator keys = projectContainers.keySet().iterator(); keys.hasNext();) {", "-\t\t\t    IPath containerPath = (IPath) keys.next();", "-\t\t\t    IClasspathContainer container = (IClasspathContainer) projectContainers.get(containerPath);", "-\t\t\t\tString containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +\"|\"+containerPath;//$NON-NLS-1$", "-\t\t\t\tString containerString = null;", "-\t\t\t\ttry {", "-\t\t\t\t\tif (container == null) {", "-\t\t\t\t\t\t// container has not been initialized yet, use previous session value", "-\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=73969)", "-\t\t\t\t\t\tcontainer = getPreviousSessionContainer(containerPath, project);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (container != null) {", "-\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "-\t\t\t\t\t\tcontainerString = ((JavaProject)project).encodeClasspath(", "-\t\t\t\t\t\t\t\tentries, ", "-\t\t\t\t\t\t\t\tnull, ", "-\t\t\t\t\t\t\t\tfalse);", "-\t\t\t\t\t}", "-\t\t\t\t} catch(JavaModelException e){", "-\t\t\t\t\t// could not encode entry: will not persist", "-\t\t\t\t\tUtil.log(e, \"Could not persist container \" + containerPath + \" for project \" + project.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t}", "-\t\t\t\tif (containerString != null)", "-\t\t\t\t\tpreferences.put(containerKey, containerString);", "-\t\t\t}", "-\t\t}", "-\t\ttry {", "-\t\t\tpreferences.flush();", "-\t\t} catch (BackingStoreException e) {", "-\t\t\tIStatus status = new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, IStatus.ERROR, \"Problems while saving context\", e); //$NON-NLS-1$", "-\t\t\tthrow new CoreException(status);", "-\t\t}", "+\t    // save variable and container values on snapshot/full save", "+\t\tsaveVariablesAndContainers();"]}], "num": 4612}