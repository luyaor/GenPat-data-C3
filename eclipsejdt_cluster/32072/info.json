{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d695163681e82b139b1f07567d13d68", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d2b8c3b1c422d4d6972843ec39df681", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "174f89aae07a92e58011875516697182fd7f3ebd", "commitAfterChange": "32d92c75e213c7276019a1d5b0a473480fced46d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \r \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": "\r \r \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\tSourceTypeBinding sourceType = types[i];\r", "+\t\t\t\tSourceTypeBinding sourceType = types[i]; \r", "-\t\t\t\tif (typeLength > sourceType.sourceName.length)\r", "-\t\t\t\t\tcontinue;\r", "+\t\t\t\tif (typeLength > sourceType.sourceName.length)\tcontinue;\r", "+\t\t\t\t\r", "+\t\t\t\tif (!CharOperation.prefixEquals(token, sourceType.sourceName, false))\tcontinue;\r", "-\t\t\t\tif (!CharOperation.prefixEquals(token, sourceType.sourceName, false\r", "-\t\t\t\t\t/* ignore case */\r", "-\t\t\t\t\t))\r", "-\t\t\t\t\tcontinue;\r", "-\r", "-\t\t\t\trequestor.acceptType(\r", "-\t\t\t\t\tsourceType.qualifiedPackageName(),\r", "-\t\t\t\t\tsourceType.sourceName(),\r", "-\t\t\t\t\tsourceType.sourceName(),\r", "-\t\t\t\t\tstartPosition - offset,\r", "-\t\t\t\t\tendPosition - offset);\r", "+\t\t\t\tif (sourceType.isClass()){\r", "+\t\t\t\t\trequestor.acceptClass(\r", "+\t\t\t\t\t\tsourceType.qualifiedPackageName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.modifiers,\r", "+\t\t\t\t\t\tstartPosition - offset, \r", "+\t\t\t\t\t\tendPosition - offset);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\trequestor.acceptInterface(\r", "+\t\t\t\t\t\tsourceType.qualifiedPackageName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.sourceName(),\r", "+\t\t\t\t\t\tsourceType.modifiers,\r", "+\t\t\t\t\t\tstartPosition - offset,\r", "+\t\t\t\t\t\tendPosition - offset);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26883e7a33ee38d86a3b84c53c61fc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c374466b639cefc117e60812e1d9f16701d104ca", "commitAfterChange": "788c169eda00b669155eb0f9164eec17e1ef661d", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, ObjectVector typesFound)", "diff": ["-\t\t\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\t\tnext : for (int i = 0, length = types.length; i < length; i++) {", "-\t\t\t\tif(isForbidden(sourceType)) continue;", "+\t\t\t\tif(isForbidden(sourceType)) continue next;", "-\t\t\t\tif (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue;", "-\t\t\t\tif (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue;", "+\t\t\t\tif (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue next;", "+\t\t\t\tif (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue next;", "-\t\t\t\tif (typeLength > sourceType.sourceName.length) continue;", "+\t\t\t\tif (typeLength > sourceType.sourceName.length) continue next;", "+\t\t\t\tfor (int j = typesFound.size; --j >= 0;) {", "+\t\t\t\t\tReferenceBinding otherType = (ReferenceBinding) typesFound.elementAt(j);", "+\t", "+\t\t\t\t\tif (sourceType == otherType) continue next;", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t\t\t\tif(!sourceType.isClass()) continue;", "+\t\t\t\t\tif(!sourceType.isClass()) continue next;", "-\t\t\t\t\tif(!sourceType.isInterface() && !sourceType.isAnnotationType()) continue;", "+\t\t\t\t\tif(!sourceType.isInterface() && !sourceType.isAnnotationType()) continue next;", "-\t\t\t\t\tif(!sourceType.isAnnotationType()) continue;", "+\t\t\t\t\tif(!sourceType.isAnnotationType()) continue next;"]}], "num": 32072}