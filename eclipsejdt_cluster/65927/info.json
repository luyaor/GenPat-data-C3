{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "764396b9eb5ac540ceb2ebe9bc384a3d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ee6bacc648abe4e99cf23646e956ed3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["+", "-\t\tif (this.superclass.id != T_JavaLangObject && !argumentType.isCompatibleWith(hasSubstitution ? substitution.substitute(this.superclass) : this.superclass)) {", "+\t\tif (this.superclass.id != T_JavaLangObject && !argumentType.isCompatibleWith(hasSubstitution ? Scope.substitute(substitution, this.superclass) : this.superclass)) {", "-\t        if (!argumentType.isCompatibleWith(hasSubstitution ? substitution.substitute(this.superInterfaces[i]) : this.superInterfaces[i])) {", "+\t        if (!argumentType.isCompatibleWith(hasSubstitution ? Scope.substitute(substitution, this.superInterfaces[i]) : this.superInterfaces[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d394c244acc538466abd60b591be2faa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "031f4591466017f4f20ec4f3c88fe46018e8f851", "commitAfterChange": "9e45544807a430783ba82eeba8c88ac8af064eeb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t", "-\t\tif (this.superclass.id != T_Object && !argumentType.isCompatibleWith(substitution.substitute(this.superclass))) {", "+\t\tboolean hasSubstitution = substitution != null;", "+\t\tif (this.superclass.id != T_Object && !argumentType.isCompatibleWith(hasSubstitution ? substitution.substitute(this.superclass) : this.superclass)) {", "-\t        if (!argumentType.isCompatibleWith(substitution.substitute(this.superInterfaces[i]))) {", "+\t        if (!argumentType.isCompatibleWith(hasSubstitution ? substitution.substitute(this.superInterfaces[i]) : this.superInterfaces[i])) {"]}], "num": 65927}