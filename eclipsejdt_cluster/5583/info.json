{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b39e3e200ecb248e5d3742b18ee72ed2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87893c5d978060db18717ebc73394cc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tif (!fieldBinding.isStatic() ", "-\t\t\t\t\t\t\t&& this.indexOfFirstFieldBinding == 1", "-\t\t\t\t\t\t\t&& scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {", "+\t\t\t\t\tif (fieldBinding.isStatic()) {", "+\t\t\t\t\t\tReferenceBinding declaringClass = fieldBinding.declaringClass;", "+\t\t\t\t\t\t// check if accessing enum static field in initializer\t\t\t\t\t", "+\t\t\t\t\t\tif (declaringClass.isEnum()) {", "+\t\t\t\t\t\t\tSourceTypeBinding sourceType = methodScope.enclosingSourceType();", "+\t\t\t\t\t\t\tif ((sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "+\t\t\t\t\t\t\t\t\t&& fieldBinding.constant() == Constant.NotAConstant", "+\t\t\t\t\t\t\t\t\t&& !methodScope.isStatic", "+\t\t\t\t\t\t\t\t\t&& methodScope.isInsideInitializerOrConstructor()) {", "+\t\t\t\t\t\t\t\tscope.problemReporter().enumStaticFieldUsedDuringInitialization(fieldBinding, this);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\t\t} else if (this.indexOfFirstFieldBinding == 1 && scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917fa29fe4abd92eecc03a2015dbeca4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "b15d555969226382f7ca55d85fc45725a266fc8b", "commitAfterChange": "ea2c66d41813ffe0a73e9227d41cf335eedf7fb6", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tif (this.indexOfFirstFieldBinding == 1 && scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {", "-\t\t\t\t\t\t\tscope.problemReporter().unqualifiedFieldAccess(this, fieldBinding);", "+\t\t\t\t\t\tboolean inStaticContext = scope.methodScope().isStatic;", "+\t\t\t\t\t\tif (this.indexOfFirstFieldBinding == 1) {", "+\t\t\t\t\t\t\tif (scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {", "+\t\t\t\t\t\t\t\tscope.problemReporter().unqualifiedFieldAccess(this, fieldBinding);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (!inStaticContext) {", "+\t\t\t\t\t\t\t\tscope.tagAsAccessingEnclosingInstanceStateOf(fieldBinding.declaringClass, false /* type variable access */);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t || scope.methodScope().isStatic) { \t// the field is the first token of the qualified reference....", "+\t\t\t\t\t\t\t\t || inStaticContext) { \t// the field is the first token of the qualified reference...."]}], "num": 5583}