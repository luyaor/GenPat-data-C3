{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c40538e355c60841cccf62a8acdf24ca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6261407f3a6787d414c3fe4b1c352368", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void bindArguments()", "signatureAfterChange": " \tpublic void bindArguments()", "diff": ["-\t\t\t\t}", "-\t\t\t\t// transfer nullness info from the argument to the method:", "-\t\t\t\tif ((argument.binding.tagBits & (TagBits.AnnotationNonNull|TagBits.AnnotationNullable)) != 0) {", "-\t\t\t\t\tif (this.binding.parameterNonNullness == null)", "-\t\t\t\t\t\tthis.binding.parameterNonNullness = new Boolean[this.arguments.length];", "-\t\t\t\t\tthis.binding.parameterNonNullness[i] = Boolean.valueOf((argument.binding.tagBits & TagBits.AnnotationNonNull) != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6866989b8de5a51c4254f3466628877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5d7b0ed4ccf6dc91337d9ac62f14ae585f547855", "commitAfterChange": "e706e02e84b0ab73a5fa0bab5675fe627a8c0157", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 188, "signatureBeforeChange": " public void booleanMethodThrowingException(MethodDeclaration methodDecl)", "signatureAfterChange": " public void uncommentedEmptyBlock(Block block)", "diff": ["-public void booleanMethodThrowingException(MethodDeclaration methodDecl) {", "-\tMethodBinding method = methodDecl.binding;", "-\tthis.handle(", "-\t\tIProblem.BooleanMethodThrowingException,", "-\t\tnew String[] {", "-\t\t\tnew String(method.declaringClass.readableName()),", "-\t\t\tnew String(method.selector),", "-\t\t\tparametersAsString(method)", "-\t\t }, ", "-\t\tnew String[] {", "-\t\t\tnew String(method.declaringClass.shortReadableName()),", "-\t\t\tnew String(method.selector),", "-\t\t\tparametersAsShortString(method)", "-\t\t }, ", "-\t\tmethodDecl.sourceStart,", "-\t\tmethodDecl.sourceEnd);", "-}", "+public void uncommentedEmptyBlock(Block block) {", "+\tString[] arguments = new String[] {};", "+\tthis.handle(", "+\t\tIProblem.UncommentedEmptyBlock,", "+\t\targuments,", "+\t\targuments,", "+\t\tblock.sourceStart,", "+\t\tblock.sourceEnd);", "+}"]}], "num": 55879}