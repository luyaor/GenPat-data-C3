{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9042a32ea708395b579943e1af88e474", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf39b4830078e08fe2eedc80d5abf8ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "78bbbeed8347e023a39893a354552d3196a82094", "commitAfterChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif (this.binding.isVarargs()) {", "+\t\t// Handle some special cases up front and transform them into implicit lambdas.", "+\t\tif (this.binding.isVarargs() || (isConstructorReference() && this.receiverType.syntheticOuterLocalVariables() != null && currentScope.methodScope().isStatic)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2fba98ea04339f03aa37703c12d63e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "d57dbd547ab44a22cc430f18490a1ae370e64432", "commitAfterChange": "6e68e9cf1522a12f0e985131be99c9578a7def47", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+\t", "-\t\tif (this.binding.isVarargs() || (isConstructorReference() && this.receiverType.syntheticOuterLocalVariables() != null && currentScope.methodScope().isStatic)) {", "+\t\tif (shouldGenerateImplicitLambda(currentScope)) {"]}], "num": 29223}