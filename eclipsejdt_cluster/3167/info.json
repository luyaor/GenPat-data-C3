{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35abcfe9455cf93008b8c6521332786d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e48c15ec9015ddfa2032a7a31b8a05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "01a8f31f82dc57594f04ca1c41a2972ca0fbc4cb", "commitAfterChange": "9297e3a72ef260facd430b52f857b854c01fa1d7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tcase Binding.TYPE_PARAMETER :", "-\t\t\t\t\t\t\trecordSuppressWarnings(scope, typeDeclaration.declarationSourceStart, typeDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);", "+\t\t\t\t\t\t\tint start;", "+//\t\t\t\t\t\t\tif (scope.referenceCompilationUnit().types[0] == typeDeclaration) {", "+//\t\t\t\t\t\t\t\tstart = 0;", "+//\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tstart = typeDeclaration.declarationSourceStart;", "+//\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\trecordSuppressWarnings(scope, start, typeDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cfc992e4a640c697863724df172946b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "f72b9294e29a54b769c09b51ef7c0dfbd4791089", "commitAfterChange": "bf20c4733b5ba628131f77425b6d1ad646dfd787", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient)", "signatureAfterChange": " \tpublic static void resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient)", "diff": ["-\t\t\t\t\t\tlocal.tagBits = ((LocalVariableBinding) annotationRecipient).tagBits;", "+\t\t\t\t\t\tlong otherLocalTagBits = ((LocalVariableBinding) annotationRecipient).tagBits;", "+\t\t\t\t\t\tlocal.tagBits = otherLocalTagBits;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * Annotations are shared between two locals, but we still need to record", "+\t\t\t\t\t\t * the suppress annotation range for the second local", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tif ((otherLocalTagBits & TagBits.AnnotationSuppressWarnings) != 0) {", "+\t\t\t\t\t\t\tLocalDeclaration localDeclaration = local.declaration;", "+\t\t\t\t\t\t\tannotation.recordSuppressWarnings(scope, localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd, scope.compilerOptions().suppressWarnings);", "+\t\t\t\t\t\t}"]}], "num": 3167}