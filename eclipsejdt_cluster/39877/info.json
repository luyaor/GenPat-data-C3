{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a497e73953e8552b78aec499effff5a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90fc09a77c3d34efa7c6077456a95a9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "39a1329e307fc24541c62f2b11af845177ce2ab1", "commitAfterChange": "57dec4f97ab62d03709eb0f38c04abeae05153fc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static TypeBinding[] greaterLowerBound(TypeBinding[] types, Scope scope)", "signatureAfterChange": " \tpublic static TypeBinding[] greaterLowerBound(TypeBinding[] types, Scope scope)", "diff": ["+\t\t\t\t} else if (!jType.isCompatibleWith(iType, scope)) {", "+\t\t\t\t\t// avoid creating unsatisfiable intersection types (see https://bugs.eclipse.org/405706):", "+\t\t\t\t\tif (iType.isParameterizedType() && jType.isParameterizedType()) {", "+\t\t\t\t\t\tif (iType.original().isCompatibleWith(jType.original(), scope)", "+\t\t\t\t\t\t\t\t|| jType.original().isCompatibleWith(iType.original(), scope)) ", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\t// parameterized types are incompatible due to incompatible type arguments => unsatisfiable", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13721bdf9e414e4abca362b02ec536d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "1a7a163e03aa5bffdeeebf1f9a9f7ec07f95a07d", "commitAfterChange": "1d272a4d3d292ca9861e3b30a4f14abda17cb010", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static TypeBinding[] greaterLowerBound(TypeBinding[] types, Scope scope)", "signatureAfterChange": " \tpublic static TypeBinding[] greaterLowerBound(TypeBinding[] types, Scope scope)", "diff": ["+\t\t\t\t} else if (!jType.isCompatibleWith(iType, scope)) {", "+\t\t\t\t\t// avoid creating unsatisfiable intersection types (see https://bugs.eclipse.org/405706):", "+\t\t\t\t\tif (iType.isParameterizedType() && jType.isParameterizedType()) {", "+\t\t\t\t\t\tif (iType.original().isCompatibleWith(jType.original(), scope)", "+\t\t\t\t\t\t\t\t|| jType.original().isCompatibleWith(iType.original(), scope)) ", "+\t\t\t\t\t\t{", "+\t\t\t\t\t\t\t// parameterized types are incompatible due to incompatible type arguments => unsatisfiable", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 39877}