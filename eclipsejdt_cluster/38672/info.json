{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03e5ab2aff3b312c9e9c66cb67885ced", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c66619aa1e9a12e6c560d8398f11f43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (use18specifics && valueIfTrueType != null && valueIfFalseType != null && valueIfTrueType != valueIfFalseType) {", "-\t\t\tvalueIfTrueType = valueIfTrueType.unannotated();", "-\t\t\tvalueIfFalseType = valueIfFalseType.unannotated();", "-\t\t}", "-\t\tif (use15specifics && valueIfTrueType != valueIfFalseType) {", "+\t\tif (use15specifics && TypeBinding.notEquals(valueIfTrueType, valueIfFalseType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcccf0e71a4c1e2947f6a02724b95c17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "661131f974fed90769c7088e8df5c9955de91a59", "commitAfterChange": "66c3009715c84f339a4f5a0dc51b98e9a9fb5e76", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (valueIfTrueType != NullBinding && valueIfTrueType.isBaseType()) {", "-\t\t\t\tif (!valueIfFalseType.isBaseType()) {", "+\t\t\tif (valueIfTrueType.isBaseType()) {", "+\t\t\t\tif ((valueIfTrueType == NullBinding) == valueIfFalseType.isBaseType()) {  // bool ? null : 12 --> Integer", "-\t\t\t} else if (valueIfFalseType != NullBinding && valueIfFalseType.isBaseType()) {", "-\t\t\t\tvalueIfTrueType = env.computeBoxingType(valueIfTrueType);", "+\t\t\t} else if (valueIfFalseType.isBaseType()) {", "+\t\t\t\tif ((valueIfFalseType == NullBinding) == valueIfTrueType.isBaseType()) {  // bool ? 12 : null --> Integer", "+\t\t\t\t\tvalueIfTrueType = env.computeBoxingType(valueIfTrueType);", "+\t\t\t\t}"]}], "num": 38672}