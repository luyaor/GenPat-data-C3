{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c66a32025d9406eab5844e2f1abe36a3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0de051081e452815ab7f01f1549391fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a725c7050ef02b8e240004926fb73e6f29767ffe", "commitAfterChange": "a8e18c32dc806d659bf5d8f2444be6f4268510d4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey()", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey()", "diff": ["+\t\t} else if(this.type.isLocalType()){", "+\t\t\tLocalTypeBinding localTypeBinding = (LocalTypeBinding) this.type;", "+\t\t\tReferenceBinding enclosing = localTypeBinding.enclosingType();", "+\t\t\tReferenceBinding temp;", "+\t\t\twhile ((temp = enclosing.enclosingType()) != null)", "+\t\t\t\tenclosing = temp;", "+\t\t\tchar[] typeSig = enclosing.signature();", "+\t\t    for (int i = 0; i < typeSig.length-1; i++) sig.append(typeSig[i]); // copy all but trailing semicolon", "+\t\t\tsig.append('$');", "+\t\t\tsig.append(localTypeBinding.sourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7ee6edddfe0b27b883f827232dcdba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "0f82c3c2351d2b4aa115f915a692d896ffbf12db", "commitAfterChange": "42ba068696287a55bc72837ef925c3e42a2ffc11", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\tif (this.isMemberType() && enclosingType().isParameterizedType()) {", "-\t\t    char[] typeSig = enclosingType().computeUniqueKey(false/*not a leaf*/);", "+\t    ReferenceBinding enclosing;", "+\t\tif (isMemberType() && ((enclosing = enclosingType()).isParameterizedType() || enclosing.isRawType())) {", "+\t\t    char[] typeSig = enclosing.computeUniqueKey(false/*not a leaf*/);", "-\t\t\tReferenceBinding enclosing = localTypeBinding.enclosingType();", "+\t\t\tenclosing = localTypeBinding.enclosingType();", "-", "+\t", "-   \t}", "+\t}"]}], "num": 14998}