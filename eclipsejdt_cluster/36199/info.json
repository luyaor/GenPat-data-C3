{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d6901dd08a34539c2931f5333013fde", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fdf1eb80bcf60a57b48c2b9b6b42c10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tvoid preCloneNodeEvent(ASTNode node)", "signatureAfterChange": " \tvoid preCloneNodeEvent(ASTNode node)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde67adf3d4ed28bf191aad4bbbf8acc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tvoid postCloneNodeEvent(ASTNode node, ASTNode clone)", "signatureAfterChange": " \tvoid postCloneNodeEvent(ASTNode node, ASTNode clone)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}], "num": 36199}