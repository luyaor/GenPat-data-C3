{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f691c26f35f67f222035268b3fa83c21", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5824324aa24e3cfea19684012fe207a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "ba74dc7a93e5bf80ccc6be3234ebe25167de5c99", "commitAfterChange": "d08effb073320a9ccb4faab2c54c467a507371be", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\tif (currentNode instanceof TypeDeclaration) {", "+\t\t\tif (currentNode instanceof TypeDeclaration", "+\t\t\t\t|| currentNode instanceof EnumDeclaration) {", "-\t\t\tif (currentNode instanceof TypeDeclaration) {", "+\t\t\tif (currentNode instanceof TypeDeclaration", "+\t\t\t\t\t|| currentNode instanceof EnumDeclaration) {", "-\t\t\t\t}", "-\t\t\t} else if (currentNode instanceof EnumDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn enumDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn enumDecl.initializerScope;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e7345ac20e9d61cd12c24525e0f3e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "5cd024d52141117881e2f62e4aa34624606418cf", "commitAfterChange": "a75f0756b3cdda16ae0347da0cb2609171946934", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic AnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic AnnotationBinding[] getAnnotations()", "diff": ["-\t\tAnnotationBinding[] annotations = sourceType.retrieveAnnotations(this);", "-\t\t\t\t\tint length = annotationNodes.length;", "-\t\t\t\t\tASTNode.resolveAnnotations(this.declaringScope, annotationNodes, this);", "-\t\t\t\t\tannotations = new AnnotationBinding[length];", "-\t\t\t\t\tfor (int i = 0; i < length; i++)", "-\t\t\t\t\t\tannotations[i] = new AnnotationBinding(annotationNodes[i]);", "-\t\t\t\t\tsetAnnotations(annotations, this.declaringScope);", "+\t\t\t\t\tASTNode.resolveAnnotations(this.declaringScope, annotationNodes, this, true);", "-\t\treturn annotations;", "+\t\treturn sourceType.retrieveAnnotations(this);"]}], "num": 66896}