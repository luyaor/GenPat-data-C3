{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5035bc77a775ea27fd136a2ee709936", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a04fc1b8cba8f4b0f8dcae0f6167130", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tthis.binding = currentScope.enclosingSourceType().addSyntheticMethod(this);", "+\t\tif (this.shouldCaptureInstance) {", "+\t\t\tthis.binding.modifiers &= ~ClassFileConstants.AccStatic;", "+\t\t} else {", "+\t\t\tthis.binding.modifiers |= ClassFileConstants.AccStatic;", "+\t\t}", "+\t\tSourceTypeBinding sourceType = currentScope.enclosingSourceType();", "+\t\tthis.binding = sourceType.addSyntheticMethod(this);", "+\t\tif (this.shouldCaptureInstance) {", "+\t\t\tcodeStream.aload_0();", "+\t\t\tsignature.append(sourceType.signature());", "+\t\t}", "-\t\t\tsignature.append(this.outerLocalVariables[i].type.signature());", "-\t\t\tLocalVariableBinding capturedOuterLocal = this.outerLocalVariables[i].actualOuterLocalVariable;", "+\t\t\tSyntheticArgumentBinding syntheticArgument = this.outerLocalVariables[i];", "+\t\t\tif (this.shouldCaptureInstance) {", "+\t\t\t\tsyntheticArgument.resolvedPosition++;", "+\t\t\t}", "+\t\t\tsignature.append(syntheticArgument.type.signature());", "+\t\t\tLocalVariableBinding capturedOuterLocal = syntheticArgument.actualOuterLocalVariable;", "-\t\tcodeStream.invokeDynamic(invokeDynamicNumber, this.outerLocalVariablesSlotSize, 1, TypeConstants.ANONYMOUS_METHOD, signature.toString().toCharArray());", "+\t\tcodeStream.invokeDynamic(invokeDynamicNumber, (this.shouldCaptureInstance ? 1 : 0) + this.outerLocalVariablesSlotSize, 1, TypeConstants.ANONYMOUS_METHOD, signature.toString().toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36c26d39d3f4a8d4b505e25fa528b15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tcodeStream.invokeDynamic(invokeDynamicNumber, 0, 1, TypeConstants.ANONYMOUS_METHOD, CharOperation.concat(\"()\".toCharArray(), this.descriptor.declaringClass.signature())); //$NON-NLS-1$", "+\t\tStringBuffer signature = new StringBuffer();", "+\t\tsignature.append('(');", "+\t\tfor (int i = 0, length = this.outerLocalVariables == null ? 0 : this.outerLocalVariables.length; i < length; i++) {", "+\t\t\tsignature.append(this.outerLocalVariables[i].type.signature());", "+\t\t\tLocalVariableBinding capturedOuterLocal = this.outerLocalVariables[i].actualOuterLocalVariable;", "+\t\t\tVariableBinding[] path = currentScope.getEmulationPath(capturedOuterLocal);", "+\t\t\tcodeStream.generateOuterAccess(path, this, capturedOuterLocal, currentScope);", "+\t\t}", "+\t\tsignature.append(')');", "+\t\tsignature.append(this.descriptor.declaringClass.signature());", "+\t\tcodeStream.invokeDynamic(invokeDynamicNumber, this.outerLocalVariablesSlotSize, 1, TypeConstants.ANONYMOUS_METHOD, signature.toString().toCharArray());"]}], "num": 44648}