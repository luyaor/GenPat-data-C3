{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0eb31fc6d569130a45fb915cd747737", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd88fb69a83cd03fd58b7e6830d8866", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tprivate void printBlockComment(boolean isJavadoc)", "signatureAfterChange": "  \tprivate void printBlockComment(boolean isJavadoc)", "diff": ["+\t\t", "+\t\tif (includesBlockComments()) {", "+\t\t\tprintBlockComment(currentTokenStartPosition, currentTokenEndPosition);", "+\t\t\treturn;", "+\t\t}", "-\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102780", "-\t\t// Previous behavior was to do nothing when dealing with javadoc kind and not formatting javadocs.", "-\t\t// Now, by default, all javadoc comments will be indented once processed in this method.", "-\t\t// This modification does not apply to block or single line comments", "-//\t\tboolean formatComment = (isJavadoc && formatJavadocComment) || (!isJavadoc && formatBlockComment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe4eb47c403ce56a5c88ff52454b76a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "4ce47574d95f211bec6cf02737b4ec30e386f5b1", "commitAfterChange": "6c173db4ca33e9b5b355fdac19466f82485aafe6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t\t \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source)", "signatureAfterChange": " \t\t \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source)", "diff": ["-\t\tString actualContentsString = new String(actualContents);\t\t", "-\t\tassertTrue(\"The two strings are not equals\\n---\\nactualContents = >\" + actualContentsString + \"<\\nexpectedContents = >\" + expectedContents + \"<\\n----\", expectedContents.equals(actualContentsString));", "+\t\tString actualContentsString = new String(actualContents);", "+\t\tif (containsLineSeparator(actualContentsString)) {", "+\t\t\tassertArraysEquals(actualContentsString, expectedContents);", "+\t\t} else {\t\t", "+\t\t\tassertTrue(\"The two strings are not equals\\n---\\nactualContents = >\" + actualContentsString + \"<\\nexpectedContents = >\" + expectedContents + \"<\\n----\", expectedContents.equals(actualContentsString));", "+\t\t}", "+\t}"]}], "num": 16928}