{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12b448f97a93fc09e0bba335c301db9f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef33755105e2cc5ded7fcf5faed0e46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "98cab260cb812cf41104f4ab6b99948f3194525c", "commitAfterChange": "ad0abd0ba7159a3530637d5ee793de5f0228f486", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static IWorkspace getWorkspace()", "signatureAfterChange": " \tpublic static File copyResource(File src, File dest)", "diff": ["-\t */", "-\tpublic static IWorkspace getWorkspace() {", "-\t\treturn ResourcesPlugin.getWorkspace();", "-\t}", "+\t */", "+\tpublic static File copyResource(File src, File dest) {", "+\t\t// read source bytes", "+\t\tbyte[] srcBytes = null;", "+\t\ttry {", "+\t\t\tsrcBytes = read(src);", "+\t\t} catch (IOException e1) {", "+\t\t\treturn null;", "+\t\t}", "+", "+\t\tif (convertToIndependantLineDelimiter(src)) {", "+\t\t\tString contents = new String(srcBytes);", "+\t\t\tcontents = TestUtils.convertToIndependantLineDelimiter(contents);", "+\t\t\tsrcBytes = contents.getBytes();", "+\t\t}", "+", "+\t\tif (!dest.exists()) {", "+\t\t\tdest.mkdirs();", "+\t\t}", "+\t\t// write bytes to dest", "+\t\tFileOutputStream out = null;", "+\t\tFile result = new File(dest, src.getName());", "+\t\ttry {", "+\t\t\tout = new FileOutputStream(result);", "+\t\t\tout.write(srcBytes);", "+\t\t\tout.flush();", "+\t\t} catch(IOException e) {", "+\t\t\treturn null;", "+\t\t} finally {", "+\t\t\tif (out != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\tout.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e4e6e028cff0c23e578c1277b6f3e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/BatchTestUtils.java", "commitBeforeChange": "5c04a73f2f7dbde661f920a53ef287a317d5389f", "commitAfterChange": "bc96e3fe1525ac02787685c40ced108ff079571b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic static File copyResource(File src, File dest)", "signatureAfterChange": " \tpublic static void copyResource(File src, File dest) throws IOException", "diff": ["+\tpublic static void copyResource(File src, File dest) throws IOException {", "+\t\tif (dest.exists() &&", "+\t\t\t\tsrc.lastModified() < dest.lastModified() && ", "+\t\t\t\tsrc.length() == dest.length()) ", "+\t\t{", "+\t\t\treturn;", "+\t\t}", "+\t\t", "+\t\tbyte[] srcBytes = null;", "+\t\tsrcBytes = read(src);", "+\t\tif (shouldConvertToIndependentLineDelimiter(src)) {", "+\t\t\tcontents = TestUtils.convertToIndependentLineDelimiter(contents);", "+\t\tFile destFolder = dest.getParentFile();", "+\t\tif (!destFolder.exists()) {", "+\t\t\tif (!destFolder.mkdirs()) {", "+\t\t\t\tthrow new IOException(\"Unable to create directory \" + destFolder);", "+\t\t\t}", "-\tpublic static File copyResource(File src, File dest) {", "-\t\t// read source bytes", "-\t\tbyte[] srcBytes = null;", "-\t\ttry {", "-\t\t\tsrcBytes = read(src);", "-\t\t} catch (IOException e1) {", "-\t\t\treturn null;", "-\t\t}", "-", "-\t\tif (convertToIndependantLineDelimiter(src)) {", "-\t\t\tString contents = new String(srcBytes);", "-\t\t\tcontents = TestUtils.convertToIndependantLineDelimiter(contents);", "-\t\t\tsrcBytes = contents.getBytes();", "-\t\t}", "-", "-\t\tif (!dest.exists()) {", "-\t\t\tdest.mkdirs();", "-\t\t}", "-\t\t// write bytes to dest", "-\t\tFileOutputStream out = null;", "-\t\tFile result = new File(dest, src.getName());", "-\t\ttry {", "-\t\t\tout = new FileOutputStream(result);", "-\t\t\tout.write(srcBytes);", "-\t\t\tout.flush();", "-\t\t} catch(IOException e) {", "-\t\t\treturn null;", "-\t\t} finally {", "-\t\t\tif (out != null) {", "-\t\t\t\ttry {", "-\t\t\t\t\tout.close();", "-\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t// ignore", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\treturn result;"]}], "num": 41573}