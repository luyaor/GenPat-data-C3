{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01247250461e8f991f12521273977e98", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4076d7912cb67dc551ec66b76eaabc01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "4ba7d6e2e967569810038cc4ccb09fdf6225d7a4", "commitAfterChange": "db7a5da98b5b4f713f8fb88ab9c3492c19c2fbbf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void resolve(IGenericType suppliedType)", "signatureAfterChange": " public void resolve(IGenericType suppliedType)", "diff": ["+\t\t\t\t\tCompilationUnitDeclaration previousUnitBeingCompleted = this.lookupEnvironment.unitBeingCompleted;", "+\t\t\t\t\t\t// ensure that unitBeingCompleted is set so that we don't get an AbortCompilation for a missing type", "+\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=213249 )", "+\t\t\t\t\t\tif (previousUnitBeingCompleted == null) {", "+\t\t\t\t\t\t\tthis.lookupEnvironment.unitBeingCompleted = FakeUnit;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tthis.lookupEnvironment.unitBeingCompleted = previousUnitBeingCompleted;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fde1e09593dbffa7abe31d8f2c4907bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "ba572e75ccc281ead35081ded887517feadc6035", "commitAfterChange": "bc3205eeacff8d7a677f8589b17d0604c418d42c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["+\t\t\t\tCompilationUnitDeclaration previousUnitBeingCompleted = this.lookupEnvironment.unitBeingCompleted;", "+\t\t\t\t\t// ensure that unitBeingCompleted is set so that we don't get an AbortCompilation for a missing type", "+\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=213249 )", "+\t\t\t\t\tif (previousUnitBeingCompleted == null) {", "+\t\t\t\t\t\tthis.lookupEnvironment.unitBeingCompleted = FakeUnit;", "+\t\t\t\t\t}", "+\t\t\t\t} finally {", "+\t\t\t\t\tthis.lookupEnvironment.unitBeingCompleted = previousUnitBeingCompleted;"]}], "num": 29978}