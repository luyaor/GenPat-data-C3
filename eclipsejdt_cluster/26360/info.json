{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbaec43e786d2c83a4aeb0742f412b45", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9230b2a237a226b249ed1ec87eb0c05d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "abab907ca988de55db9659fc1161de10230e8bdf", "commitAfterChange": "5a0382cf8f4f31c0856d2c7bec7b6965767832d9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "diff": ["-\tif (this.qualification != null){\r", "-\t\tchar[][] qualificationTokens = CharOperation.splitOn('.', this.qualification);\r", "-\t\tint qualificationLength = qualificationTokens.length;\r", "-\t\tif (qualificationLength+1 > importLength) return IMPOSSIBLE_MATCH;\r", "-\t\tfor (int i = 0; i < qualificationLength; i++){\r", "-\t\t\tif (!this.matchesName(qualificationTokens[i], tokens[i])) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tif (this.simpleName == null || this.matchesName(this.simpleName, tokens[qualificationLength])) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "+\tif (this.qualification != null) {\r", "+\t\tchar[] pattern;\r", "+\t\tif (this.simpleName == null) {\r", "+\t\t\tpattern = this.qualification;\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\tpattern = CharOperation.concat(this.qualification, this.simpleName, '.');\r", "+\t\tchar[] qualifiedTypeName = CharOperation.concatWith(importRef.tokens, '.');\r", "+\t\tswitch (this.matchMode) {\r", "+\t\t\tcase EXACT_MATCH :\r", "+\t\t\tcase PREFIX_MATCH :\r", "+\t\t\t\tif (CharOperation.prefixEquals(pattern, qualifiedTypeName, this.isCaseSensitive)) {\r", "+\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t} \r", "+\t\t\t\tbreak;\r", "+\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\tif (CharOperation.match(pattern, qualifiedTypeName, this.isCaseSensitive)) {\r", "+\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t\treturn IMPOSSIBLE_MATCH;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a32f03a37ad25b876c286b20d3659243", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "abab907ca988de55db9659fc1161de10230e8bdf", "commitAfterChange": "5a0382cf8f4f31c0856d2c7bec7b6965767832d9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(ImportReference importRef, boolean resolve)", "diff": ["-\t\tint length = importRef.tokens.length - 1;\r", "-\t\tchar[][] tokens = new char[length][];\r", "-\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);\r", "-\t\tif (this.matches(tokens)) {\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\tchar[] qualifiedTypeName = CharOperation.concatWith(importRef.tokens, '.');\r", "+\t\tswitch (this.matchMode) {\r", "+\t\t\tcase EXACT_MATCH :\r", "+\t\t\tcase PREFIX_MATCH :\r", "+\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, qualifiedTypeName, this.isCaseSensitive)) {\r", "+\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t} \r", "+\t\t\t\tbreak;\r", "+\t\t\tcase PATTERN_MATCH :\r", "+\t\t\t\tif (CharOperation.match(this.pkgName, qualifiedTypeName, this.isCaseSensitive)) {\r", "+\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\treturn IMPOSSIBLE_MATCH;\r"]}], "num": 26360}