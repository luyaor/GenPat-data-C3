{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59bf1fbbe02ab4d2eb08682c39742602", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d8e71863f418487d38a8ba7875d3c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "signatureAfterChange": " \t \tboolean match(char[] patternPkg, char[] patternTypeName, int matchRule, char[] pkg, char[] typeName)", "diff": ["+\t", "+\tboolean match(char[] patternPkg, char[] patternTypeName, int matchRule, char[] pkg, char[] typeName) {", "+\t\t", "+\t\tboolean isCaseSensitive = (matchRule & SearchPattern.R_CASE_SENSITIVE) != 0;", "+\t\t", "+\t\tif (patternPkg != null && !CharOperation.equals(patternPkg, pkg, true))", "+\t\t\treturn false;", "+\t\t", "+\t\tif (patternTypeName != null) {", "+\t\t\tboolean isCamelCase = (matchRule & (SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH)) != 0;", "+\t\t\tint matchMode = matchRule & JavaSearchPattern.MATCH_MODE_MASK;", "+\t\t\tif (!isCaseSensitive && !isCamelCase) {", "+\t\t\t\tpatternTypeName = CharOperation.toLowerCase(patternTypeName);", "+\t\t\t}", "+\t\t\tboolean matchFirstChar = !isCaseSensitive || patternTypeName[0] == typeName[0];", "+\t\t\tswitch(matchMode) {", "+\t\t\t\tcase SearchPattern.R_EXACT_MATCH :", "+\t\t\t\t\treturn matchFirstChar && CharOperation.equals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\tcase SearchPattern.R_PREFIX_MATCH :", "+\t\t\t\t\treturn matchFirstChar && CharOperation.prefixEquals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\tcase SearchPattern.R_PATTERN_MATCH :", "+\t\t\t\t\treturn CharOperation.match(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\tcase SearchPattern.R_REGEXP_MATCH :", "+\t\t\t\t\t// TODO (frederic) implement regular expression match", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "+\t\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, false)) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn !isCaseSensitive && matchFirstChar && CharOperation.prefixEquals(patternTypeName, typeName, false);", "+\t\t\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "+\t\t\t\t\treturn matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, true);", "+\t\t\t}", "+\t\t}", "+\t\treturn true;", "+", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9716afaf3a67138c4bb7c2760f26f49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "ad99e8346223888eb2f8e2613d918829f95fd2b2", "commitAfterChange": "7c65ba31905e387e2902b13fe71f33b55f069273", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tboolean match(char[] patternPkg, char[] patternTypeName, int matchRule, char[] pkg, char[] typeName)", "signatureAfterChange": " \t \tboolean match(char[] patternPkg, int matchRulePkg, char[] patternTypeName, int matchRuleTypeName, char[] pkg, char[] typeName)", "diff": ["-\t", "-\tboolean match(char[] patternPkg, char[] patternTypeName, int matchRule, char[] pkg, char[] typeName) {", "-\t\t", "-\t\tboolean isCaseSensitive = (matchRule & SearchPattern.R_CASE_SENSITIVE) != 0;", "-\t\t", "-\t\tif (patternPkg != null && !CharOperation.equals(patternPkg, pkg, true))", "-\t\t\treturn false;", "-\t\t", "-\t\tif (patternTypeName != null) {", "-\t\t\tboolean isCamelCase = (matchRule & (SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH)) != 0;", "-\t\t\tint matchMode = matchRule & JavaSearchPattern.MATCH_MODE_MASK;", "-\t\t\tif (!isCaseSensitive && !isCamelCase) {", "-\t\t\t\tpatternTypeName = CharOperation.toLowerCase(patternTypeName);", "-\t\t\t}", "-\t\t\tboolean matchFirstChar = !isCaseSensitive || patternTypeName[0] == typeName[0];", "-\t\t\tswitch(matchMode) {", "-\t\t\t\tcase SearchPattern.R_EXACT_MATCH :", "-\t\t\t\t\treturn matchFirstChar && CharOperation.equals(patternTypeName, typeName, isCaseSensitive);", "-\t\t\t\tcase SearchPattern.R_PREFIX_MATCH :", "-\t\t\t\t\treturn matchFirstChar && CharOperation.prefixEquals(patternTypeName, typeName, isCaseSensitive);", "-\t\t\t\tcase SearchPattern.R_PATTERN_MATCH :", "-\t\t\t\t\treturn CharOperation.match(patternTypeName, typeName, isCaseSensitive);", "-\t\t\t\tcase SearchPattern.R_REGEXP_MATCH :", "-\t\t\t\t\t// TODO (frederic) implement regular expression match", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SearchPattern.R_CAMELCASE_MATCH:", "-\t\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, false)) {", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}", "-\t\t\t\t\treturn !isCaseSensitive && matchFirstChar && CharOperation.prefixEquals(patternTypeName, typeName, false);", "-\t\t\t\tcase SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH:", "-\t\t\t\t\treturn matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName, true);", "-\t\t\t}", "-\t\t}", "-\t\treturn true;", "-", "-\t}", "+\t", "+\tboolean match(char[] patternPkg, int matchRulePkg, char[] patternTypeName, int matchRuleTypeName, char[] pkg, char[] typeName) {", "+\t\tboolean isPkgCaseSensitive = (matchRulePkg & SearchPattern.R_CASE_SENSITIVE) != 0;", "+\t\tif (patternPkg != null && !CharOperation.equals(patternPkg, pkg, isPkgCaseSensitive))", "+\t\t\treturn false;", "+\t\t", "+\t\tboolean isCaseSensitive = (matchRuleTypeName & SearchPattern.R_CASE_SENSITIVE) != 0;", "+\t\t\tboolean isCamelCase = (matchRuleTypeName & (SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH)) != 0;", "+\t\t\tint matchMode = matchRuleTypeName & JavaSearchPattern.MATCH_MODE_MASK;"]}], "num": 64010}