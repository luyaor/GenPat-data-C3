{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "357bbb08764282757fdb4e3ac7a90629", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d825fe265c43cc84ed8cf2a885c273d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void test021() throws Exception", "signatureAfterChange": " \t \tpublic void test031_methodTypeParameterBound_complex() throws Exception", "diff": ["-\t// class type parameter bound generic or array", "-\tpublic void test021() throws Exception {", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t", "+\tpublic void test031_methodTypeParameterBound_complex() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {\\n\" + ", "+\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t\"C.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t// javac-b81:", "+\t\t// Bytes:28[0 2 18 0 0 1 3 0 0 13 0 0 18 0 0 4 3 0 0 0 0 0 0 0 0 14 0 0]", "+\t\t// Bytes:29[0 2 18 0 0 3 3 0 0 0 0 0 0 16 0 0 18 0 1 0 0 16 0 1 0 17 73 0 18]", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "-\t\t\t\"        locations = {0,2}\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY, ARRAY]\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" +  ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "-\t\t\t\"        locations = {0,1}\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab43d70feef86ff49abaee98d4cef049", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test011()", "signatureAfterChange": " public void test011()", "diff": ["-//https://bugs.eclipse.org/bugs/show_bug.cgi?id=144413", "+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=144426", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"class X {\\n\" + ", "-\t\t\t\"    public void test() {\\n\" + ", "-\t\t\t\"        int ch;\\n\" + ", "-\t\t\t\"        if (ch == -1);\\n\" +", "-\t\t\t\"    }\\n\" + ", "-\t\t\t\"    public void test2() {\\n\" + ", "-\t\t\t\"        int ch;\\n\" + ", "-\t\t\t\"        ch++;\\n\" +", "-\t\t\t\"    }\\n\" + ", "-\t\t\t\"}\"},", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"        public static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"                int x = 2;\\n\" + ", "+\t\t\t\t\"                if (true) {\\n\" + ", "+\t\t\t\t\"                        int x = 4;\\n\" + ", "+\t\t\t\t\"                }\\n\" + ", "+\t\t\t\t\"        }\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tif (ch == -1);\\n\" + ", "-\t\t\t\"\t    ^^\\n\" + ", "-\t\t\t\"The local variable ch may not have been initialized\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tint x = 4;\\n\" + ", "+\t\t\t\"\t    ^\\n\" + ", "+\t\t\t\"Duplicate local variable x\\n\" + ", "+\t\t\t\"----------\\n\");", "+}", "-\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"\tch++;\\n\" + ", "-\t\t\t\"\t^^\\n\" + ", "-\t\t\t\"The local variable ch may not have been initialized\\n\" + "]}], "num": 67374}