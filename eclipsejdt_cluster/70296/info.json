{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f21d1dd89c7c47b2a42d57d5c225dc97", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d77daddfab028f649296bb960bc0aab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ae391996f2ba5153face2dc96f44fbe25cc6cfcf", "commitAfterChange": "bd2d6cba91ea60af9a4818216d0ebbc8f0ef4bb2", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\tTypeBinding superType = original.declaringClass.findSuperTypeOriginatingFrom(original2.declaringClass.erasure());", "-\t\t\t\t\t\tif (superType == null)", "+", "+\t\t\t\t\t\toriginal2 = original.findOriginalInheritedMethod(original2);", "+\t\t\t\t\t\tif (original2 == null)", "-\t\t\t\t\t\t\tif (original2.declaringClass != superType) {", "-\t\t\t\t\t\t\t\t// must find inherited method with the same substituted variables", "-\t\t\t\t\t\t\t\tMethodBinding[] superMethods = ((ReferenceBinding) superType).getMethods(original2.selector, argumentTypes.length);", "-\t\t\t\t\t\t\t\tfor (int m = 0, l = superMethods.length; m < l; m++) {", "-\t\t\t\t\t\t\t\t\tif (superMethods[m].original() == original2) {", "-\t\t\t\t\t\t\t\t\t\toriginal2 = superMethods[m];", "-\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e147aceb0242c8e677135be3b05e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d5153db1b78be1240488c00ed97be6f8d4f85142", "commitAfterChange": "703ea70d31fea8142c2f0c6536ccedc3e7344670", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  \tpublic ResolvedClasspath resolveClasspath(IClasspathEntry[] rawClasspath, IClasspathEntry[] referencedEntries, boolean usePreviousSession, boolean resolveChainedLibraries) throws JavaModelException", "signatureAfterChange": "  \tpublic ResolvedClasspath resolveClasspath(IClasspathEntry[] rawClasspath, IClasspathEntry[] referencedEntries, boolean usePreviousSession, boolean resolveChainedLibraries) throws JavaModelException", "diff": ["-\t\t\t\tresult.referencedEntries = new IClasspathEntry[referencedEntriesSet.size()];", "-\t\t\t\treferencedEntriesSet.toArray(result.referencedEntries);", "+\t\t\t\tif (referencedEntriesSet.size() > 0) {", "+\t\t\t\t\tresult.referencedEntries = new IClasspathEntry[referencedEntriesSet.size()];", "+\t\t\t\t\treferencedEntriesSet.toArray(result.referencedEntries);", "+\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305037", "+\t\t\t\t\t\t\t\t\t// referenced entries for variable entries could also be persisted with extra attributes, so addAsChainedEntry = true", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tif (resolveChainedLibraries && result.rawReverseMap.get(cEntry.getPath()) == null) {", "-\t\t\t\t\t\t\t\t// resolve Class-Path: in manifest", "-\t\t\t\t\t\t\t\tClasspathEntry[] extraEntries = cEntry.resolvedChainedLibraries();", "-\t\t\t\t\t\t\t\tfor (int k = 0, length2 = extraEntries.length; k < length2; k++) {", "-\t\t\t\t\t\t\t\t\tif (!rawLibrariesPath.contains(extraEntries[k].getPath())) {", "-\t\t\t\t\t\t\t\t\t\taddToResult(rawEntry, extraEntries[k], result, resolvedEntries, externalFoldersManager, referencedEntriesMap, true);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=305037", "+\t\t\t\t\t\t\t// responsibility of resolving chained (referenced) libraries lies with the container"]}], "num": 70296}