{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dcd0095c6deb56d2da58d5dad8cacc5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "520c95bf5855e52631d70962e4416029", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "ee6e442281c6adfce6f28a674af1fb9f7f9d707f", "commitAfterChange": "9d88e07972fdc72c8f68cd0cc8f036c691b75fb7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected IType getHandle(IGenericType genericType)", "signatureAfterChange": " \tprotected IType getHandle(IGenericType genericType, ReferenceBinding binding)", "diff": ["-\tprotected IType getHandle(IGenericType genericType) {", "+\tprotected IType getHandle(IGenericType genericType, ReferenceBinding binding) {", "+\t\t\t\thandle = new ResolvedSourceType((SourceType) handle, new String(binding.computeUniqueKey()));", "-\t\t\tIClassFile classFile = (IClassFile) this.infoToHandle.get(genericType);", "+\t\t\tClassFile classFile = (ClassFile) this.infoToHandle.get(genericType);", "-\t\t\t\tthis.infoToHandle.put(genericType, handle.getParent());", "-\t\t\t\treturn handle;", "-\t\t\t} else {", "-\t\t\t\ttry {", "-\t\t\t\t\treturn classFile.getType();", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\t\tclassFile = (ClassFile) handle.getParent();", "+\t\t\t\tthis.infoToHandle.put(genericType, classFile);", "+\t\t\t} ", "+\t\t\treturn new ResolvedBinaryType(classFile, classFile.getTypeName(), new String(binding.computeUniqueKey()));", "-\t\t\treturn ((SourceTypeElementInfo) genericType).getHandle();", "+\t\t\tIType handle = ((SourceTypeElementInfo) genericType).getHandle();", "+\t\t\treturn new ResolvedSourceType((SourceType) handle, new String(binding.computeUniqueKey()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685210eb44ca12c530e83985d6dd66b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tfinal TokenScanner getScanner()", "signatureAfterChange": "  \tfinal TokenScanner getScanner()", "diff": ["-\t\t\tIScanner scanner= ToolFactory.createScanner(true, false, false, false);", "+\t\t\tCompilerOptions compilerOptions = new CompilerOptions(this.options);", "+\t\t\tScanner scanner;", "+\t\t\tif (this.recoveryScannerData == null) {", "+\t\t\t\tscanner = ", "+\t\t\t\t\tnew Scanner(", "+\t\t\t\t\t\t\ttrue,/*tokenizeComments*/", "+\t\t\t\t\t\t\tfalse,/*tokenizeWhiteSpace*/", "+\t\t\t\t\t\t\tfalse,/*checkNonExternalizedStringLiterals*/", "+\t\t\t\t\t\t\tcompilerOptions.sourceLevel,", "+\t\t\t\t\t\t\tcompilerOptions.complianceLevel,", "+\t\t\t\t\t\t\tnull/*taskTags*/,", "+\t\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\t\ttrue/*taskCaseSensitive*/);", "+\t\t\t} else {", "+\t\t\t\tscanner =", "+\t\t\t\t\tnew RecoveryScanner(", "+\t\t\t\t\t\t\tfalse,/*tokenizeWhiteSpace*/", "+\t\t\t\t\t\t\tfalse,/*checkNonExternalizedStringLiterals*/", "+\t\t\t\t\t\t\tcompilerOptions.sourceLevel,", "+\t\t\t\t\t\t\tcompilerOptions.complianceLevel,", "+\t\t\t\t\t\t\tnull/*taskTags*/,", "+\t\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\t\ttrue/*taskCaseSensitive*/,", "+\t\t\t\t\t\t\tthis.recoveryScannerData);", "+\t\t\t}"]}], "num": 2994}