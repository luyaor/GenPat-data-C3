{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7188b2a685c7d732656e00604db4a98f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409d76cf23a884d3dca80c6e5fa819c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding, boolean isEnum, ITypeAnnotationWalker externalAnnotationWalker)", "signatureAfterChange": " private void scanFieldForNullAnnotation(IBinaryField field, FieldBinding fieldBinding, boolean isEnum, ITypeAnnotationWalker externalAnnotationWalker)", "diff": ["-\tchar[][] nullableAnnotationName = this.environment.getNullableAnnotationName();", "-\tchar[][] nonNullAnnotationName = this.environment.getNonNullAnnotationName();", "-\tif (nullableAnnotationName == null || nonNullAnnotationName == null)", "-\t\treturn; // not well-configured to use null annotations", "-\t\t\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);", "-\t\t\tif (CharOperation.equals(typeName, nonNullAnnotationName)) {", "+\t\t\tint typeBit = this.environment.getNullAnnotationBit(signature2qualifiedTypeName(annotationTypeName));", "+\t\t\tif (typeBit == TypeIds.BitNonNullAnnotation) {", "-\t\t\tif (CharOperation.equals(typeName, nullableAnnotationName)) {", "+\t\t\tif (typeBit == TypeIds.BitNullableAnnotation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba786ca1017427585b44797fe019e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "8761bc78bc4b10c860ffd0abaa11fe6e4409f4a7", "commitAfterChange": "e638bcfa6ede2617a8de404af4af8024502bc348", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "signatureAfterChange": " \tvoid checkNullSpecInheritance(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod,  \t\t\tboolean hasNonNullDefault, boolean shouldComplain, \t\t\tMethodBinding inheritedMethod, Scope scope, InheritedNonNullnessInfo[] inheritedNonNullnessInfos)", "diff": ["-\t\tLookupEnvironment environment = scope.environment();", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenvironment.getNonNullAnnotationName());", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.environment.getNonNullAnnotationName());", "-\t\t\t\t\tannotationName = environment.getNonNullAnnotationName();", "+\t\t\t\t\tannotationName = this.environment.getNonNullAnnotationName();", "-\t\t\t\t\tannotationName = environment.getNullableAnnotationName();", "+\t\t\t\t\tannotationName = this.environment.getNullableAnnotationName();", "-\t\t\t\t\t\t\t\t(inheritedNonNullNess == null) ? null : environment.getNullableAnnotationName());", "+\t\t\t\t\t\t\t\t(inheritedNonNullNess == null) ? null : this.environment.getNullableAnnotationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df64fca50a8d927c99dbf3b49cd70de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding)", "signatureAfterChange": " private void scanTypeForNullDefaultAnnotation(IBinaryType binaryType, PackageBinding packageBinding)", "diff": ["-\t\t\tchar[][] typeName = signature2qualifiedTypeName(annotationTypeName);", "-\t\t\tif (CharOperation.equals(typeName, nonNullByDefaultAnnotationName)) {", "+\t\t\tint typeBit = this.environment.getNullAnnotationBit(signature2qualifiedTypeName(annotationTypeName));", "+\t\t\tif (typeBit == TypeIds.BitNonNullByDefaultAnnotation) {", "+\t\t\t\t\tif (nullness == Binding.NONNULL_BY_DEFAULT && this.environment.usesNullTypeAnnotations()) {", "+\t\t\t\t\t\t// reading a decl-nnbd in a project using type annotations, mimic corresponding semantics by enumerating:", "+\t\t\t\t\t\tnullness |= Binding.DefaultLocationParameter | Binding.DefaultLocationReturnType | Binding.DefaultLocationField;", "+\t\t\t\t\t}"]}], "num": 7801}