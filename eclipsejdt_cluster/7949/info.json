{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54f7a0003ba36639a547911309f1fe1e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ac96984627c30ca826946fb311d4154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "407faf8899c60979a7963dd83b92115cf3b78328", "commitAfterChange": "8ce429ba50e328ba7bba736fb319609f81a16be8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private void deletePackageFragment(IPackageFragment frag)\r \tthrows JavaModelException", "signatureAfterChange": "\r private void deletePackageFragment(IPackageFragment frag)\r \tthrows JavaModelException", "diff": ["-\t\t// remove the folder if it is empty\r", "-\t\tIResource[] members;\r", "+\t\t// delete remaining files in this package (.class file in the case where Proj=src=bin)\r", "+\t\tIResource[] remaingFiles;\r", "-\t\t\tmembers = ((IFolder) res).members();\r", "+\t\t\tremaingFiles = ((IFolder) res).members();\r", "-\t\tif (members.length == 0) {\r", "-\t\t\tdeleteEmptyPackageFragment(frag, fForce);\r", "+\t\tboolean isEmpty = true;\r", "+\t\tfor (int i = 0, length = remaingFiles.length; i < length; i++) {\r", "+\t\t\tIResource file = remaingFiles[i];\r", "+\t\t\tif (file instanceof IFile) {\r", "+\t\t\t\tthis.deleteResource(file, true);\r", "+\t\t\t} else {\r", "+\t\t\t\tisEmpty = false;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\tif (isEmpty) {\r", "+\t\t\t// delete recursively empty folders\r", "+\t\t\tdeleteEmptyPackageFragment(frag, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1d8f370dc4402faac812a0ab1260aa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "0e2784c65bd65ef2a138f6fdb09cd313f041cee1", "commitAfterChange": "b5e57d73d725bb5d865a6308c973c0edca66e4cf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "signatureAfterChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "diff": ["-\t\tString jdkLib = Util.getJavaClassLibs()[0];", "-\t\tJavaCore.setClasspathVariable(\"JRE_LIB\", new Path(jdkLib), null);", "+\t\tString[] jdkLibs = Util.getJavaClassLibs();", "+\t\tint length = jdkLibs.length;", "+\t\tString jdkLib = null;", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tif (jdkLibs[i].endsWith(\"rt.jar\")) {", "+\t\t\t\tjdkLib = jdkLibs[i];", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tif (jdkLib == null) {", "+\t\t\tthrow new RuntimeException(\"Cannot set JRE_LIB classpath variable as the rt.jar lib was not found!!!\");", "+\t\t}", "-\t\tint length = ALL_PROJECTS.length;", "+\t\tlength = ALL_PROJECTS.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee24a2bca988106d21d2468147ab7b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "2b810e9ce6e62d5b8f5d0b01de3fab00973de806", "commitAfterChange": "e07ac4343b59e78d96b40c4bf7bf797b84cb728a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["+\t// Abort build only if there are classpath errors", "-\tif (markers.length > 0) {", "+\tboolean buildPathHasError = false;", "+\tfor (int i = 0, length = markers.length; i < length; i++) {", "+\t\tIMarker marker = markers[i];", "+\t\tif (((Integer)marker.getAttribute(IMarker.SEVERITY)).intValue() == IMarker.SEVERITY_ERROR) {", "+\t\t\tbuildPathHasError = true;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (buildPathHasError) {", "-\t\t\tSystem.out.println(\"Aborted build because project is involved in a cycle or has classpath problems\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"Aborted build because project has classpath errors (incomplete or involved in cycle)\"); //$NON-NLS-1$"]}], "num": 7949}