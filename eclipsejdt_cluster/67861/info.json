{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "332e9c6bb107b85e489fd29e71fcf93f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f77c85347795e42d50bf7f8dd151c14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName != null) {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "+\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding != null){\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+\treturn true;\r", "+}\r", "- */\r", "-private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName == null) {\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "-\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tdefault:\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding == null) {\r", "-\t\t\treturn INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding == null) {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "-\t\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1fe70457a3a4df1a744f2d6010e159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName != null) {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "+\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding != null){\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+\treturn true;\r", "+}\r", "- */\r", "-private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName == null) {\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "-\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tdefault:\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding == null) {\r", "-\t\t\treturn INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding == null) {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "-\t\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8babadfcceb73515cd3b5602af8b3b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName != null) {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "+\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding != null){\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+\treturn true;\r", "+}\r", "- */\r", "-private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName == null) {\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "-\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tdefault:\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding == null) {\r", "-\t\t\treturn INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding == null) {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "-\t\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0812623dff56054380ed76b65c4be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["+ */\r", "+private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName != null) {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "+\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding != null){\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+\treturn true;\r", "+}\r", "- */\r", "-private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName == null) {\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "-\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "-\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t\t}\r", "-\t\t\t\tdefault:\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding == null) {\r", "-\t\t\treturn INACCURATE_MATCH;\r", "-\t\t} else {\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding == null) {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "-\t\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r"]}], "num": 67861}