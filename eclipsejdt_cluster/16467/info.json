{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0544a5f8989df045a0504865cb5c55f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6163fec80c5bf6e4fec79fcbc76f84b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType)", "signatureAfterChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, char[][][] missingTypeNames)", "diff": ["-private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType) {", "+", "+private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, char[][][] missingTypeNames) {", "-\t\targs.add(getTypeFromVariantTypeSignature(wrapper, staticVariables, enclosingType, genericType, rank++));", "+\t\targs.add(getTypeFromVariantTypeSignature(wrapper, staticVariables, enclosingType, genericType, rank++, missingTypeNames));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9242a9ae27f624d0195302a3ba23599f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b7ba07c07da6eba63afdd84d57a7b0c7321ed73b", "commitAfterChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "signatureAfterChange": " TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType)", "diff": ["-\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, actualType);", "+\tif (actualType instanceof UnresolvedReferenceBinding)", "+\t\tif (CharOperation.indexOf('$', actualType.compoundName[actualType.compoundName.length - 1]) > 0)", "+\t\t\tactualType = BinaryTypeBinding.resolveType(actualType, this, false); // must resolve member types before asking for enclosingType", "+\tReferenceBinding genericType = actualType;", "+\t\t// The actualType needs to be a ParameterizedTypeBinding when its a member type, whose enclosing type is a generic", "+\t\tgenericType = createParameterizedType(actualType, null, actualEnclosing);", "+\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, genericType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a57e362c910388df585be924131e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, char[][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, char[][][] missingTypeNames) {", "+private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType,", "+\t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "+{", "-\t\targs.add(getTypeFromVariantTypeSignature(wrapper, staticVariables, enclosingType, genericType, rank++, missingTypeNames));", "+\t\targs.add(getTypeFromVariantTypeSignature(wrapper, staticVariables, enclosingType, genericType, rank, missingTypeNames,", "+\t\t\t\t\twalker.toTypeArgument(rank++)));"]}], "num": 16467}