{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c09f81ecbafa25b122db9c9c30e6826", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c460eb7147e2b78e949f740e401ba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "76a2ec884825e9edb380555c61500f23750ece32", "commitAfterChange": "0dc9f4a7cc769fd0c2e397d6cc32c352b61f03b4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\tif (this.typeArguments != null && this.binding.original().typeVariables == Binding.NO_TYPE_VARIABLES) {", "+\t\t\t\t\tscope.problemReporter().unnecessaryTypeArgumentsForMethodInvocation(this.binding, this.genericTypeArguments, this.typeArguments);", "+\t\t\t\t}\t\t\t\t", "+\t\tif (this.typeArguments != null && inheritedBinding.original().typeVariables == Binding.NO_TYPE_VARIABLES) {", "+\t\t\tscope.problemReporter().unnecessaryTypeArgumentsForMethodInvocation(inheritedBinding, this.genericTypeArguments, this.typeArguments);", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b14cc861e6c73a4f2425531c3cbac92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "3255db62a2a31c2b7911a20dbb001663d6aa8d6e", "commitAfterChange": "446232cf1f35af48915a191f1c4500b94c6d46e0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tint kind = this.recipient.kind();", "-\t\t\t\tswitch (this.recipient.kind()) {", "+\t\t\t\tswitch (kind) {", "-\t\t\t\t\t// does not specify any target restriction - all locations are possible including type annotations", "+\t\t\t\t\t// does not specify any target restriction - all locations supported in Java 7 and before are possible", "+\t\t\t\t\tif (kind == Binding.TYPE_PARAMETER || kind == Binding.TYPE_USE) {", "+\t\t\t\t\t\tscope.problemReporter().explitAnnotationTargetRequired(this);", "+\t\t\t\t\t}", "-\t\t\t\tswitch (this.recipient.kind()) {", "+\t\t\t\tswitch (kind) {"]}], "num": 54765}