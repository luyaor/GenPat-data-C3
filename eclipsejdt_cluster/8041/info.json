{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54c5f42c9307ad0142b5200186381657", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed847e5eabeaf8cc001bb30c0d70c13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "423d016920f3097905fe56138db30d43ac6cb2ca", "commitAfterChange": "9ef5cfd9967f0035d5c2a0b571acc93cfad6b4de", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " final public void jsr(Label lbl)", "signatureAfterChange": " final public void jsr(Label lbl)", "diff": ["+\tif (this.wideMode) {", "+\t\tthis.jsr_w(lbl);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b756bd4d07969a9bb57ea79c78f5e15e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "c9050a3a9594b7d361850fa9a3880d65c49e6aec", "commitAfterChange": "861f1162953e56602b4d7507e52e1f13733854c4", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "\r final public void goto_(Label lbl)", "signatureAfterChange": "\r final public void goto_(Label lbl)", "diff": ["+\tif (this.wideMode) {\r", "+\t\tthis.goto_w(lbl);\r", "+\t\treturn;\r", "+\t}\r", "+\ttry {\r", "+\t\tlbl.inlineForwardReferencesFromLabelsTargeting(position);\r", "+\t\t/*\r", "+\t\t Possible optimization for code such as:\r", "+\t\t public Object foo() {\r", "+\t\t\tboolean b = true;\r", "+\t\t\tif (b) {\r", "+\t\t\t\tif (b)\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t} else {\r", "+\t\t\t\tif (b) {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn null;\r", "+\t\t}\r", "+\t\tThe goto around the else block for the first if will\r", "+\t\tbe unreachable, because the thenClause of the second if\r", "+\t\treturns.\r", "+\t\tSee inlineForwardReferencesFromLabelsTargeting defined\r", "+\t\ton the Label class for the remaining part of this\r", "+\t\toptimization.\r", "+\t\t if (!lbl.isBranchTarget(position)) {\r", "+\t\t\tswitch(bCodeStream[classFileOffset-1]) {\r", "+\t\t\t\tcase OPC_return :\r", "+\t\t\t\tcase OPC_areturn:\r", "+\t\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t}*/\r", "+\t\tposition++;\r", "+\t\tbCodeStream[classFileOffset++] = OPC_goto;\r", "+\t} catch (IndexOutOfBoundsException e) {\r", "+\t\tresizeByteArray(OPC_goto);\r", "+\t}\r", "+\tlbl.branch();\r", "+}\r"]}], "num": 8041}