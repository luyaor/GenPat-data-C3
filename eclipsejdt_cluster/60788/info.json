{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7553d2f380d558b30e7835b129884a5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142254dd396f9150690371cc38b7545d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " private IWorkingCopy[] filterWorkingCopies(IWorkingCopy[] copies, IJavaElement focus, boolean isPolymorphicSearch)", "signatureAfterChange": " private ICompilationUnit[] filterWorkingCopies(ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch)", "diff": ["-private IWorkingCopy[] filterWorkingCopies(IWorkingCopy[] copies, IJavaElement focus, boolean isPolymorphicSearch) {", "+private ICompilationUnit[] filterWorkingCopies(ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch) {", "-\tIWorkingCopy[] result = null;", "+\tICompilationUnit[] result = null;", "-\t\tIWorkingCopy workingCopy = copies[i];", "+\t\tICompilationUnit workingCopy = copies[i];", "-\t\t\t\tresult = new IWorkingCopy[length-1];", "+\t\t\t\tresult = new ICompilationUnit[length-1];", "-\t\t\tSystem.arraycopy(result, 0, result = new IWorkingCopy[index], 0, index);", "+\t\t\tSystem.arraycopy(result, 0, result = new ICompilationUnit[index], 0, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cd5b861dccb76596d0341b7928d7f05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testShared2() throws JavaModelException", "signatureAfterChange": " public void testShared2() throws JavaModelException", "diff": ["-\tIWorkingCopy shared = (IWorkingCopy)this.cu.getSharedWorkingCopy(null, null, null);", "+\tICompilationUnit shared = (ICompilationUnit)this.cu.getSharedWorkingCopy(null, null, null);", "-\t\tIWorkingCopy shared2 = (IWorkingCopy)this.cu.getSharedWorkingCopy(null, null, null);", "+\t\tICompilationUnit shared2 = (ICompilationUnit)this.cu.getSharedWorkingCopy(null, null, null);", "-\t\tshared.destroy();", "+\t\tshared.discardWorkingCopy();", "-\t\t\tassertTrue(\"Original element should still have shared working copy\", this.cu.findSharedWorkingCopy(null) == shared);", "+\t\t\tassertTrue(\"Primary element should still have shared working copy\", this.cu.findSharedWorkingCopy(null) == shared);", "-\t\t\tshared.destroy();", "+\t\t\tshared.discardWorkingCopy();", "-\tassertTrue(\"Original element should not have shared working copy\", this.cu.findSharedWorkingCopy(null) == null);", "+\tassertTrue(\"Primary element should not have shared working copy\", this.cu.findSharedWorkingCopy(null) == null);"]}], "num": 60788}