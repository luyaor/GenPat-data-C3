{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3441cc29c6c49ae129758e45d4527af2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a21bc243499ba40bda9efab05290fe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " \tpublic void test183()", "signatureAfterChange": " \tpublic void test183()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tObject a2 = (Hashtable) o;\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Hashtable is a raw type. References to generic type Hashtable<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 18)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 27)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tabstract class Z3 extends Hashtable {\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Hashtable is a raw type. References to generic type Hashtable<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 27)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87973d7410d2c07ea27e878b442fbfab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 320, "methodNumberAfterChange": 320, "signatureBeforeChange": " \tpublic void test316()", "signatureAfterChange": " \tpublic void test316()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class X <E extends List & Runnable> {\\n\" + ", "+\t\t\t\"\t                          ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 16)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 16)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 19)\\n\" + ", "+\t\t\t\"\tabstract class XM implements List, Runnable {}\\n\" + ", "+\t\t\t\"\t                             ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 20)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d7c76bf25d6964dc31a8f42077c6e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 603, "methodNumberAfterChange": 603, "signatureBeforeChange": " \tpublic void test599()", "signatureAfterChange": " \tpublic void test599()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic class X implements Comparable {\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tstatic <T extends Comparable> void sort5(List<T> list) {}\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + "]}], "num": 55118}