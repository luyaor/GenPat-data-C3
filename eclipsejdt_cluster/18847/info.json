{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0989cc19a4470630c2d492cc0d5a8526", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35acd35669157034bb78debccfa474a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 21, "signatureBeforeChange": " public int literalIndexForJavaLangShort()", "signatureAfterChange": " private int literalIndexForMethod(char[] selector, char[] signature)", "diff": ["+}", "+private int literalIndexForMethod(char[] selector, char[] signature) {", "+\tint index = getFromNameAndTypeCache(selector, signature);", "+\tif (index == -1) {", "+\t\t// The entry doesn't exit yet", "+\t\tint nameIndex = literalIndex(selector);", "+\t\tint typeIndex = literalIndex(signature);", "+\t\tindex = putInNameAndTypeCache(selector, signature, currentIndex++);", "+\t\tif (index > 0xFFFF){", "+\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "+\t\t}", "+\t\twriteU1(NameAndTypeTag);", "+\t\twriteU2(nameIndex);", "+\t\twriteU2(typeIndex);", "+\t}", "+\treturn index;", "+}", "- */", "-public int literalIndexForJavaLangShort() {", "-\tint index;", "-\tif ((index = wellKnownTypes[JAVA_LANG_SHORT_TYPE]) == 0) {", "-\t\tint nameIndex;", "-\t\t// The entry doesn't exit yet", "-\t\tnameIndex = literalIndex(QualifiedNamesConstants.JavaLangShortConstantPoolName);", "-\t\tindex = wellKnownTypes[JAVA_LANG_SHORT_TYPE] = currentIndex++;", "-\t\tif (index > 0xFFFF){", "-\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "-\t\t}", "-\t\twriteU1(ClassTag);", "-\t\t// Then add the 8 bytes representing the long", "-\t\twriteU2(nameIndex);", "-\t}", "-\treturn index;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db847bb833e3563c8b1dc4122db1a0bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 20, "signatureBeforeChange": " public int literalIndexForJavaUtilIterator()", "signatureAfterChange": " private int literalIndexForField(char[] name, char[] signature)", "diff": ["+}", "+private int literalIndexForField(char[] name, char[] signature) {", "+\tint index = getFromNameAndTypeCache(name, signature);", "+\tif (index == -1) {", "+\t\t// The entry doesn't exit yet", "+\t\tint nameIndex = literalIndex(name);", "+\t\tint typeIndex = literalIndex(signature);", "+\t\tindex = putInNameAndTypeCache(name, signature, currentIndex++);", "+\t\tif (index > 0xFFFF){", "+\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "+\t\t}", "+\t\twriteU1(NameAndTypeTag);", "+\t\twriteU2(nameIndex);", "+\t\twriteU2(typeIndex);", "+\t}", "+\treturn index;", "+}", "- */", "-public int literalIndexForJavaUtilIterator() {", "-\tint index;", "-\tif ((index = wellKnownTypes[JAVA_UTIL_ITERATOR_TYPE]) == 0) {", "-\t\tint nameIndex;", "-\t\t// The entry doesn't exit yet", "-\t\tnameIndex = literalIndex(QualifiedNamesConstants.JavaUtilIteratorConstantPoolName);", "-\t\tindex = wellKnownTypes[JAVA_UTIL_ITERATOR_TYPE] = currentIndex++;", "-\t\tif (index > 0xFFFF){", "-\t\t\tthis.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());", "-\t\t}", "-\t\twriteU1(ClassTag);", "-\t\t// Then add the 8 bytes representing the long", "-\t\twriteU2(nameIndex);", "-\t}", "-\treturn index;", "-}"]}], "num": 18847}