{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28f93ba5282e988e932b2a67284bd978", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f6936882b9d787e3087506853d0880", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " public void test0061()", "signatureAfterChange": " public void test0061()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tFileSystems.<String, Object>newFileSystem(uri, Collections.emptyMap());\\n\" + ", "-\t\t\"\t                            ^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The method newFileSystem(URI, Map<String,?>) in the type FileSystems is not applicable for the arguments (URI, Map<Object,Object>)\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tFileSystems.<String, Object>newFileSystem(uri, Collections.emptyMap());\\n\" + ", "+\t\t\t\"\t                            ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method newFileSystem(URI, Map<String,?>) in the type FileSystems is not applicable for the arguments (URI, Map<Object,Object>)\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t: // with better inference, method is applicable, but then we have another problem:", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tFileSystems.<String, Object>newFileSystem(uri, Collections.emptyMap());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unhandled exception type IOException\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tFileSystems.<String, Object>newFileSystem(uri, Collections.emptyMap());\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unused type arguments for the non generic method newFileSystem(URI, Map<String,?>) of type FileSystems; it should not be parameterized with arguments <String, Object>\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96aecbdd136e6f1be9c768b3765499ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "aaa43eec904e27741de5c55121881f4c0383d53f", "commitAfterChange": "0ffd32ee08cd2dc832efa1134a050b16b350c66a", "methodNumberBeforeChange": 903, "methodNumberAfterChange": 903, "signatureBeforeChange": " public void test0883()", "signatureAfterChange": " public void test0883()", "diff": ["-\t\t\t\"\t\tList<U> v = null;\\n\" + ", "-\t\t\t\"\t\tString s = (String) foo(v);\\n\" + ", "+\t\t\t\"\t\tList<U> listu = null;\\n\" + ", "+\t\t\t\"\t\tString s = (String)foo(listu);\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tstatic <V extends List<V>> V bar(V v) {\\n\" + ", "+\t\t\t\"\t\tList<V> listv = null;\\n\" + ", "+\t\t\t\"\t\tString s = (String)foo(listv);\\n\" + ", "+\t\t\t\"\t\treturn v;\\n\" + ", "-\t\t\"\tString s = (String) foo(v);\\n\" + ", "-\t\t\"\t           ^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Cannot cast from List<U> to String\\n\" + // shouldn't it infer: List<List<U>> ?", "+\t\t\"\tString s = (String)foo(listu);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from List<U> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tString s = (String)foo(listu);\\n\" + ", "+\t\t\"\t                   ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<U>). The inferred type List<U> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tString s = (String)foo(listv);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from List<V> to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tString s = (String)foo(listv);\\n\" + ", "+\t\t\"\t                   ^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method foo(U) of type X is not applicable for the arguments (List<V>). The inferred type List<V> is not a valid substitute for the bounded parameter <U extends List<U>>\\n\" + "]}], "num": 44065}