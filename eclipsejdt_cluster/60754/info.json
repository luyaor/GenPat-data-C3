{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e46227d151cba6dd68f58633a52a1b3c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e15bf558380120322619e271f90e3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "commitAfterChange": "3b34d278ba258a10a58d188a2047da908229b941", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t\tpublic ControlStructureVisitor(Statement statement)", "signatureAfterChange": " public boolean continuesAtOuterLabel()", "diff": ["-\t\tpublic ControlStructureVisitor(Statement statement) {", "-\t\t\tthis.body = statement;", "-\t\t\tthis.breaksOut = false;", "-\t\t}", "+*/", "+public boolean continuesAtOuterLabel() {", "+\treturn new ASTVisitor() {", "+\t\tboolean continuesToLabel;", "+\t\tpublic boolean visit(ContinueStatement continueStatement, BlockScope skope) {", "+\t\t\tif (continueStatement.label != null)", "+\t\t\t\tthis.continuesToLabel = true;", "+\t    \treturn false;", "+\t    }", "+\t\tpublic boolean continuesAtOuterLabel() {", "+\t\t\tStatement.this.traverse(this, null);", "+\t\t\treturn this.continuesToLabel;", "+\t\t}", "+\t}.continuesAtOuterLabel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94a440a63df3acfb6dbbc2de5889ad1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "ec1408476a66b2a958a4e514cbefd2cf0438efc9", "commitAfterChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public boolean breaksOutOfLoop()", "signatureAfterChange": "  public boolean breaksOut()", "diff": ["-public boolean breaksOutOfLoop() {", "-\tclass LoopVisitor extends ASTVisitor {", "-\t\tStatement loopBody;", "-\t\tboolean breaks;", "-\t\tpublic LoopVisitor(Statement statement) {", "-\t\t\tthis.loopBody = statement;", "-\t\t\tthis.breaks = false;", "+public boolean breaksOut() {", "+\tclass ControlStructureVisitor extends ASTVisitor {", "+\t\tStatement body;", "+\t\tboolean breaksOut;", "+\t\tpublic ControlStructureVisitor(Statement statement) {", "+\t\t\tthis.body = statement;", "+\t\t\tthis.breaksOut = false;", "-\t    \tthis.breaks = true;", "+\t    \tthis.breaksOut = true;", "-\t\tpublic boolean breaksOutOfLoop() {", "-\t\t\tthis.loopBody.traverse(this, null);", "-\t\t\treturn this.breaks;", "+\t\tpublic boolean breaksOut() {", "+\t\t\tthis.body.traverse(this, null);", "+\t\t\treturn this.breaksOut;", "-\treturn new LoopVisitor(this).breaksOutOfLoop();", "+\treturn new ControlStructureVisitor(this).breaksOut();"]}], "num": 60754}