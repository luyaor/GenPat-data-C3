{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f632affd4ceab0d86499c15dcdcdb8bb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a32d5fea65cde397f63beca6d420f3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments02() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments02() throws CoreException", "diff": ["-\t\tsearch(\"complete % <Object, Exception, RuntimeException>\", METHOD, REFERENCES, scope, resultCollector);", "+\t\tsearch(\"<Object, Exception, RuntimeException>complete\", METHOD, REFERENCES, scope, resultCollector);", "-\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [complete(new Object(), new Exception(), new RuntimeException(), gm)] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [<Object, Exception, RuntimeException>complete(new Object(), new Exception(), new RuntimeException(), gm)] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [complete(new Object(), new Exception(), new RuntimeException(), gm)] EXACT_MATCH\"", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [complete(new Object(), new Exception(), new RuntimeException(), gm)] EQUIVALENT_RAW_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b071f8a3dd7c2363a17b41e9166e563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments06() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments06() throws CoreException", "diff": ["-\t\tsearch(\"generic(*,*,*) % <Object, RuntimeException, RuntimeException>\", METHOD, REFERENCES, scope, resultCollector);", "+\t\tsearch(\"<Object, RuntimeException, RuntimeException>generic(*,*,*)\", METHOD, REFERENCES, scope, resultCollector);", "-\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [generic(new Object(), new RuntimeException(), new RuntimeException())] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [<Object, RuntimeException, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] ERASURE_MATCH\"", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] EQUIVALENT_RAW_MATCH\""]}], "num": 55013}