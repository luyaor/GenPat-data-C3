{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1e92d7364dcc90cf2943736cb36b0fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ef05678e5a22036db9dde69c901accd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "f7ce86a79f082187bb9d131f12b4c9c140c05c32", "commitAfterChange": "908256095b93d8e1bbc7e5e244cc22e547564057", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\t\tdeclaringLevel = resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, methodReceiverType, method.parameters);", "+\t\tdeclaringLevel = resolveLevelAsSubtype(this.pattern.declaringSimpleName, this.pattern.declaringQualification, methodReceiverType, method.selector, method.parameters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba4bceacc11e306b58d250989c3f5d86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "dc1affe9e611f769ec98b19997bf2c83ebae3b73", "commitAfterChange": "e6f7bb520f03ff7b62eb7f4afa4e1000be9cfb18", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "signatureAfterChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "diff": ["-\t\tlevel = this.matchLevelAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification);\r", "+\t\t// Note there is no dynamic lookup for field access\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, receiverBinding);\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverBinding);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r"]}], "num": 19965}