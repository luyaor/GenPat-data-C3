{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b60467e95e68a77583903a3c991c081d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4154d6d3a542b3abd827fc529a28a168", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleNameReference.java", "commitBeforeChange": "33eef2073f376aa3fd5d07ca099391b28b7ce6dc", "commitAfterChange": "74418c8468270552cc550f0a4d106149287e4ed4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void resolve(BlockScope scope, boolean warn)", "signatureAfterChange": " \tpublic void resolve(BlockScope scope, boolean warn, boolean considerParamRefAsUsage)", "diff": ["-\tpublic void resolve(BlockScope scope, boolean warn) {", "+\tpublic void resolve(BlockScope scope, boolean warn, boolean considerParamRefAsUsage) {", "+\t\t\tif (considerParamRefAsUsage) {", "+\t\t\t\tvariableBinding.useFlag = LocalVariableBinding.USED;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ba23ca2e784390273f6d0d376ab85b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "165d2ee0a4a374ec3dbb0f3df780db24664ac692", "commitAfterChange": "146dc3b7afcca724ac2ba30b2cbb382c047a5a77", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createArgumentReference(char[] name, int dim, boolean isVarargs, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException", "diff": ["-\tprotected Object createArgumentReference(char[] name, int dim, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException {", "+\tprotected Object createArgumentReference(char[] name, int dim, boolean isVarargs, Object typeRef, long[] dimPositions, long argNamePos) throws InvalidInputException {", "-\t\t\tif (dim > 0) argEnd = (int) dimPositions[dim-1];", "+\t\t\tif (dim > 0) {", "+\t\t\t\targEnd = (int) dimPositions[dim-1];", "+\t\t\t\tif (isVarargs) {", "+\t\t\t\t\targTypeRef.bits |= ASTNode.IsVarArgs; // set isVarArgs", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3bc63ae4e6c3b957e5947039bcb019", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 239, "signatureBeforeChange": " public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit, boolean recordLineSeparator)", "diff": ["+}", "+public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit, boolean recordLineSeparator) {", "+\tif (recordLineSeparator) {", "+\t\tthis.scanner.recordLineSeparator = true;", "+\t}"]}], "num": 31782}