{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cbd22ae63cef9b543061be1793d0fdc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "512c920cf94b5bd25f63af36a0323257", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "a190d14807d4bcd5bcc5a224c605da11ef938ef0", "commitAfterChange": "65cd85ec657509335f606a8248f5deaa818d1194", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": " \t \tpublic void resolve(MethodScope initializationScope)", "diff": ["-", "+\t", "+\t\t\t// thus must lookup separately in super type and outer context", "+\t\t\t", "-\t\t\t\t\tBinding existingVariable = classScope.findField(declaringType.superclass, this.name, this, true /*resolve*/);", "-\t\t\t\t\tif (existingVariable != null && existingVariable.isValidBinding()) {", "+\t\t\t\t\tBinding existingVariable = classScope.findField(declaringType.superclass, this.name, this,  false /*do not resolve hidden field*/);", "+\t\t\t\t\tif (existingVariable != null && existingVariable.isValidBinding()){", "+\t\t\t\t\t// only corner case is: lookup of outer field through static declaringType, which isn't detected by #getBinding as lookup starts", "+\t\t\t\t\t// from outer scope. Subsequent static contexts are detected for free.", "-\t\t\t\t\tif (existingVariable != null && existingVariable.isValidBinding()){", "+\t\t\t\t\tif (existingVariable != null && existingVariable.isValidBinding()", "+\t\t\t\t\t\t\t&& (!(existingVariable instanceof FieldBinding)", "+\t\t\t\t\t\t\t\t\t|| ((FieldBinding) existingVariable).isStatic() ", "+\t\t\t\t\t\t\t\t\t|| !declaringType.isStatic())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9f6c4af4fd4c191c6a3f1137b835bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "42fae1490ed2d92e261335f913496df0bca26df8", "commitAfterChange": "c61a3471dc232eb282f499e766b6240869dfcc94", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (this.checkCastTypesCompatibility(scope, leftType, rightType, null) ", "-\t\t\t\t|| this.checkCastTypesCompatibility(scope, rightType, leftType, null)) {", "+\t\tif ((!leftType.isBaseType() || leftType == NullBinding) // cannot compare: Object == (int)0", "+\t\t\t\t&& (!rightType.isBaseType() || rightType == NullBinding)", "+\t\t\t\t&& (this.checkCastTypesCompatibility(scope, leftType, rightType, null) ", "+\t\t\t\t\t\t|| this.checkCastTypesCompatibility(scope, rightType, leftType, null))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f841adfda7a99987c5b6004e5233e149", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "d52634cff94d0f697424d9b236a69dab87113bd1", "commitAfterChange": "1dbfdf5103df5d6eeec5e2a371168366c917730e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": "\r public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t\t\t&& (indexOfFirstFieldBinding > 1 || !fieldBinding.isStatic()))\r", "-\t\t\t\t&& (scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\t\t\t\t\r", "+\t\t\t\t&& ((scope.environment().options.complianceLevel >= CompilerOptions.JDK1_4\r", "+\t\t\t\t\t\t&& (indexOfFirstFieldBinding > 1 || !fieldBinding.isStatic()))\r"]}], "num": 36834}