{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "baff9e8a772c6c798e45828be46a6d7a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e23e10cbe9f610bfc1249e6c2f96902", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "28020d0b0ceb0e665c1071bfd968796eb9e2e394", "commitAfterChange": "def990b8509828ed437909a92c80eeb89428931a", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic boolean visit(ReturnStatement returnStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ReturnStatement returnStatement, BlockScope scope)", "diff": ["-\t\t\tif (expression instanceof CastExpression", "-\t\t\t\t\t|| expression instanceof PrefixExpression", "-\t\t\t\t\t|| expression instanceof StringLiteral", "-\t\t\t\t\t|| expression instanceof StringLiteralConcatenation", "-\t\t\t\t\t|| (((expression.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT) != 0)) {", "-\t\t\t\tif (this.preferences.insert_space_before_expression_in_return) {", "+\t\t\tif (((expression.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT) != 0) {", "+\t\t\t\tif (this.preferences.insert_space_before_parenthesized_expression_in_return) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eec83472208295703d9c01978fcd9c93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "ba48713f8fe162de096e876002c466289dc8a647", "commitAfterChange": "42f61a276ba7d1e6da8e4e7be639a302682158f7", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic boolean visit(ReturnStatement returnStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ReturnStatement returnStatement, BlockScope scope)", "diff": ["-\t\t\tthis.scribe.space();", "+\t\t\tif (expression instanceof CastExpression", "+\t\t\t\t\t|| expression instanceof PrefixExpression", "+\t\t\t\t\t|| expression instanceof StringLiteral", "+\t\t\t\t\t|| expression instanceof StringLiteralConcatenation", "+\t\t\t\t\t|| (((expression.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT) != 0)) {", "+\t\t\t\tif (this.preferences.insert_space_before_expression_in_return) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}"]}], "num": 61343}