{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88658b84472732bdb81ce54756390f9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5ba7b20c9345a25670255dab3a09d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "86ee968d8acf90a0a75c72085f72a3416b02186d", "commitAfterChange": "7915a529d4dab8b70a0cdb9189fc342b9112ed8e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tif (this.receiver.isSuper() && this.actualReceiverType.isInterface()) {", "+\t\t// 15.12.3 (Java 8)", "+\t\tReferenceBinding enclosingType = scope.enclosingReceiverType();", "+\t\tMethodBinding otherMethod = scope.getMethod(enclosingType.superclass(), this.selector, argumentTypes, this);", "+\t\tif (scope.checkAppropriate(this.binding, otherMethod, this)) {", "+\t\t\tReferenceBinding[] superInterfaces = enclosingType.superInterfaces();", "+\t\t\tif (superInterfaces != null) {", "+\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "+\t\t\t\t\totherMethod = scope.getMethod(superInterfaces[i], this.selector, argumentTypes, this);", "+\t\t\t\t\tif (!scope.checkAppropriate(this.binding, otherMethod, this))", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad56c9c96d8be374801aef85d5e1c71a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "7a140644bb864b33a5703af3dc19c84a2bcb243d", "commitAfterChange": "0f61b5a730cd24bb7ab05a282fa3a07ec8b534a5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (this.type.annotations != null", "+\t\t\t\t\t&& (referenceType.tagBits & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK)", "+\t\t\t{", "+\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(this.type.annotations[this.type.annotations.length-1]);", "+\t\t\t}", "+\t\t\t\tlong[] nullTagBitsPerDimension = ((ArrayBinding)this.resolvedType).nullTagBitsPerDimension;", "+\t\t\t\tif (nullTagBitsPerDimension != null) {", "+\t\t\t\t\tfor (int i = 0; i < this.annotationsOnDimensions.length; i++) {", "+\t\t\t\t\t\tif ((nullTagBitsPerDimension[i] & TagBits.AnnotationNullMASK) == TagBits.AnnotationNullMASK) {", "+\t\t\t\t\t\t\tscope.problemReporter().contradictoryNullAnnotations(this.annotationsOnDimensions[i]);", "+\t\t\t\t\t\t\tnullTagBitsPerDimension[i] = 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 29612}