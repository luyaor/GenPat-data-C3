{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bf486826c959c57707481a073e81270", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48267fcc9e2a4ebd157fab65a75d36a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "bfeefe0bfa824914f542a3a07eccab1379d1c70b", "commitAfterChange": "999bcda04cb6d6af2ffd5ec4d0e38a056d1cb17e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\tif (this.forceProblemDetection && this.resolveBindings) {", "+\t\tif (this.forceProblemDetection || this.resolveBindings) {", "-\t\t\t\tif (this.problems == null) this.problems = new HashMap();", "+\t\t\t\tHashMap problemMap = this.problems == null ? new HashMap() : this.problems;", "+\t\t\t\tif (this.forceProblemDetection && this.problems == null) ", "+\t\t\t\t\tthis.problems = problemMap;", "-\t\t\t\t\t\t\tthis.problems, ", "+\t\t\t\t\t\t\tproblemMap, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f658a5adf34c01d9ac69cb7d47d47df1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "49c7e567a30e3d9cc1c4880ba35031661d2a5415", "commitAfterChange": "c9d2c7d4276b8b0f65a3b8bbfa4009e8632940f9", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block)", "diff": ["-\t\tboolean textOnNewLine = (text == block.nodes[0] && block.isParamTag() && (this.formatter.preferences.comment_insert_new_line_for_parameter || !block.hasTextOnTagLine())) || text.linesBefore > 0;", "+\t\tboolean textOnNewLine = (text == block.nodes[0] && !block.isInlined() && block.isParamTag() && (this.formatter.preferences.comment_insert_new_line_for_parameter || !block.hasTextOnTagLine())) || text.linesBefore > 0 || this.column > (this.formatter.preferences.comment_line_length+1);"]}], "num": 55536}