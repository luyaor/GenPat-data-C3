{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90153674707bab45a24c60ff56aec0f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568b0117c62cc523cee2d863230b1e0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a6c8228884c04f6b3939e82aa87b4381ec879da5", "commitAfterChange": "d57d057b9e029964391a7d18231884c456809f0a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": "  \tprivate boolean complete( \t\t\tASTNode astNode, \t\t\tASTNode astNodeParent, \t\t\tASTNode enclosingNode, \t\t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\t\tBinding qualifiedBinding, \t\t\tScope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["-\t\t\t\tTypeBinding receiverType = null;", "-\t\t\t\tif(qualifiedBinding instanceof VariableBinding) {", "-\t\t\t\t\treceiverType = ((VariableBinding)qualifiedBinding).type;", "-\t\t\t\t} else if(qualifiedBinding instanceof MethodBinding) {", "-\t\t\t\t\treceiverType = ((MethodBinding)qualifiedBinding).returnType;", "-\t\t\t\t} else if(qualifiedBinding instanceof ReferenceBinding && !(qualifiedBinding instanceof TypeVariableBinding)) {", "+\t\t\t\tif (messageSend.receiver instanceof NameReference) {", "+\t\t\t\t\tonlyStatic = ((NameReference)messageSend.receiver).isTypeReference();", "+\t\t\t\t} else if (!(messageSend.receiver instanceof MessageSend) &&", "+\t\t\t\t\t\t!(messageSend.receiver instanceof FieldReference) &&", "+\t\t\t\t\t\t!(messageSend.receiver.isThis())) {", "-\t\t\t\t\treceiverType = (TypeBinding)qualifiedBinding;", "+\t\t\t\t", "+\t\t\t\tTypeBinding receiverType = (TypeBinding)qualifiedBinding;", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8e1a5b0cc73ba5b3d2ad11d4417479", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-    \t\t\tBoolean declared = this.descriptor.parameterNonNullness == null ? null : this.descriptor.parameterNonNullness[i];", "-    \t\t\tBoolean implemented = this.binding.parameterNonNullness == null ? null : this.binding.parameterNonNullness[i];", "-    \t\t\tif (declared == Boolean.FALSE) { // promise to accept null", "-    \t\t\t\tif (implemented != Boolean.FALSE) {", "-    \t\t\t\t\tchar[][] requiredAnnot = implemented == null ? null : scope.environment().getNonNullAnnotationName();", "+    \t\t\tlong declared = this.descriptor.parameters[i].tagBits & TagBits.AnnotationNullMASK;", "+    \t\t\tlong implemented = this.binding.parameters[i].tagBits & TagBits.AnnotationNullMASK;", "+    \t\t\tif (declared == TagBits.AnnotationNullable) { // promise to accept null", "+    \t\t\t\tif (implemented != TagBits.AnnotationNullable) {", "+    \t\t\t\t\tchar[][] requiredAnnot = implemented == 0L ? null : scope.environment().getNonNullAnnotationName();", "-    \t\t\t} else if (declared == null) {", "-    \t\t\t\tif (implemented == Boolean.TRUE) {", "+    \t\t\t} else if (declared == 0L) {", "+    \t\t\t\tif (implemented == TagBits.AnnotationNonNull) {", "-        \tif ((this.descriptor.tagBits & TagBits.AnnotationNonNull) != 0) {", "-        \t\tif ((this.binding.tagBits & TagBits.AnnotationNonNull) == 0) {", "-        \t\t\tchar[][] providedAnnotationName = ((this.binding.tagBits & TagBits.AnnotationNullable) != 0) ?", "+        \tif ((this.descriptor.returnType.tagBits & TagBits.AnnotationNonNull) != 0) {", "+        \t\tif ((this.binding.returnType.tagBits & TagBits.AnnotationNonNull) == 0) {", "+        \t\t\tchar[][] providedAnnotationName = ((this.binding.returnType.tagBits & TagBits.AnnotationNullable) != 0) ?"]}], "num": 66961}