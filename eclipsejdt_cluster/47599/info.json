{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39e6313512426692635042f35a260598", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "759e044d271a3359d038c9d56c7eae4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "7aacb15554a9c6406d505856924e9f9ea2758365", "commitAfterChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "signatureAfterChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "diff": ["-\t\t\t\ttempNames = computeNonBaseTypeNames(baseName, isConstantField);", "+\t\t\t\ttempNames = computeNonBaseTypeNames(baseName, isConstantField, false);", "-\t\t\ttempNames = new char[][]{baseName};", "+\t\t\ttempNames = computeNonBaseTypeNames(baseName, isConstantField, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93fb3f088d97a9269c7e3269b519a56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "7aacb15554a9c6406d505856924e9f9ea2758365", "commitAfterChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate static char[][] computeBaseTypeNames(char[] typeName, boolean isConstantField, char[][] excludedNames)", "signatureAfterChange": "  \tprivate static char[][] computeBaseTypeNames(char[] typeName, boolean isConstantField, char[][] excludedNames)", "diff": ["-\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField);", "+\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField, false);", "-\t\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField);", "+\t\t\t\treturn computeNonBaseTypeNames(typeName, isConstantField, false);"]}], "num": 47599}