{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c381c627a3af16ce13034d21eafebc40", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24e4c2305efe2418280ddca4e486015c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "commitAfterChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void generateOptimizedGreaterThan(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": "\r public void generateOptimizedGreaterThan(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);\r", "-\t\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);\r", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);\r", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5ad3ac666e6199b263018b2f7cca2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "commitAfterChange": "65674b7aa655a5c156f52d0b9b7eeb56e8bfec23", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\tcodeStream.recordPositionsFrom(varPC, catchArguments[i]);\r", "+\t\t\t\t\tcodeStream.recordPositionsFrom(varPC, catchArguments[i].sourceStart);\r", "-\t\t\tcodeStream.recordPositionsFrom(finallySequenceStartPC, finallyBlock); // entire sequence for finally is associated to finally block\r", "+\t\t\tcodeStream.recordPositionsFrom(finallySequenceStartPC, finallyBlock.sourceStart); // entire sequence for finally is associated to finally block\r", "-\tcodeStream.recordPositionsFrom(pc, this);\r", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);\r"]}], "num": 76}