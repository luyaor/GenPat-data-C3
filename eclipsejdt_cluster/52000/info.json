{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91adf4a98950a0a921df1013efae84e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c59894db7fa57624ee5fb738a6f2dee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "1b7318e8b4bff96e8318070fbe6e3d3cd574e2b0", "commitAfterChange": "13d04cce0ea1e365f1d568669e2b131c84e2d694", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t\t \tpublic void print(char[] s, boolean considerSpaceIfAny)", "signatureAfterChange": " \t\t \tprivate void print(char[] s, int start, int end, boolean considerSpaceIfAny)", "diff": ["-\tpublic void print(char[] s, boolean considerSpaceIfAny) {", "+\tprivate void print(char[] s, int start, int end, boolean considerSpaceIfAny) {", "+\t\t}", "+\t\tif (this.positionsToMap != null) {", "+\t\t\tmapPositions(start, this.buffer.length(), s.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f5e309104b443dcfd5ce7713ff0ded", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "572725d14f6a5b50596855866ead2608fd5f6e51", "commitAfterChange": "bf41a0f465875b9e5984415f1f94595d93a282d9", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tprivate void disassembleAsModifier(IAnnotation annotation, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": "  \tprivate void disassembleAsModifier(IAnnotation annotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\tprivate void disassembleAsModifier(IAnnotation annotation, StringBuffer buffer, String lineSeparator, int tabNumber) {", "+\tprivate void disassembleAsModifier(IAnnotation annotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "-\t\tbuffer.append('@').append(Signature.toCharArray(typeName)).append('(');", "+\t\tbuffer.append('@').append(returnClassName(Signature.toCharArray(typeName), '.', mode));", "-\t\tfor (int i = 0, max = components.length; i < max; i++) {", "-\t\t\tif (i > 0) {", "-\t\t\t\tbuffer.append(',');", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\tfinal int length = components.length;", "+\t\tif (length != 0) {", "+\t\t\tbuffer.append('(');", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tif (i > 0) {", "+\t\t\t\t\tbuffer.append(',');", "+\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "+\t\t\t\t}", "+\t\t\t\tdisassembleAsModifier(components[i], buffer, lineSeparator, tabNumber + 1, mode);", "-\t\t\tdisassembleAsModifier(components[i], buffer, lineSeparator, tabNumber + 1);", "+\t\t\tbuffer.append(')');", "-\t\tbuffer.append(')');"]}], "num": 52000}