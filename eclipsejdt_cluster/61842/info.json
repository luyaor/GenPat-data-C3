{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f91a94668fcf6e3142b831061c462bb0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a2ca95ae0796b59c763b0bc58d7fea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "8879b56fd07da9d038783d336704cc8af2052901", "commitAfterChange": "5daf90a164d16969119f51284ec69f74248f815c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding, boolean createProblemMethod)", "signatureAfterChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding, boolean createProblemMethod)", "diff": ["-\t\tif (this.targetJDK < ClassFileConstants.JDK1_5 && methodBinding.isSynthetic()) {", "-\t\t\t// Synthetic attribute", "-\t\t\t// Check that there is enough space to write the deprecated attribute", "-\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "-\t\t\t\tresizeContents(6);", "+\t\tif (this.targetJDK < ClassFileConstants.JDK1_5) {", "+\t\t\tif (methodBinding.isSynthetic()) {", "+\t\t\t\t// Synthetic attribute", "+\t\t\t\t// Check that there is enough space to write the deprecated attribute", "+\t\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(6);", "+\t\t\t\t}", "+\t\t\t\tint syntheticAttributeNameIndex =", "+\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "+\t\t\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "+\t\t\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "+\t\t\t\t// the length of a synthetic attribute is equals to 0", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t", "+\t\t\t\tattributeNumber++;", "-\t\t\tint syntheticAttributeNameIndex =", "-\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "-\t\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "-\t\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "-\t\t\t// the length of a synthetic attribute is equals to 0", "-\t\t\tcontents[contentsOffset++] = 0;", "-\t\t\tcontents[contentsOffset++] = 0;", "-\t\t\tcontents[contentsOffset++] = 0;", "-\t\t\tcontents[contentsOffset++] = 0;", "-", "-\t\t\tattributeNumber++;", "+\t\t\tif (methodBinding.isVarargs()) {", "+\t\t\t\t/*", "+\t\t\t\t * handle of the target jsr14 for varargs in the source", "+\t\t\t\t * Varargs attribute", "+\t\t\t\t * Check that there is enough space to write the deprecated attribute", "+\t\t\t\t */", "+\t\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "+\t\t\t\t\tresizeContents(6);", "+\t\t\t\t}", "+\t\t\t\tint varargsAttributeNameIndex =", "+\t\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.VarargsName);", "+\t\t\t\tcontents[contentsOffset++] = (byte) (varargsAttributeNameIndex >> 8);", "+\t\t\t\tcontents[contentsOffset++] = (byte) varargsAttributeNameIndex;", "+\t\t\t\t// the length of a varargs attribute is equals to 0", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\t\tcontents[contentsOffset++] = 0;", "+\t", "+\t\t\t\tattributeNumber++;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e07c96bc690a0290aea35c2ccd03fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "82ebf715db153176c821d224623053c8e446f0cb", "commitAfterChange": "278d4e1b32f27e1cf67071cc3713ec8e809940ef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void addAttributes()", "signatureAfterChange": " \tpublic void addAttributes()", "diff": ["+\t\t", "+\t\tif (this.referenceBinding.isHierarchyInconsistent()) {", "+\t\t\t// add an attribute for inconsistent hierarchy", "+\t\t\tif (contentsOffset + 6 >= contents.length) {", "+\t\t\t\tresizeContents(6);", "+\t\t\t}", "+\t\t\tint inconsistentHierarchyNameIndex =", "+\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.InconsistentHierarchy);", "+\t\t\tcontents[contentsOffset++] = (byte) (inconsistentHierarchyNameIndex >> 8);", "+\t\t\tcontents[contentsOffset++] = (byte) inconsistentHierarchyNameIndex;", "+\t\t\t// the length of an inconsistent hierarchy attribute is equals to 0", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tcontents[contentsOffset++] = 0;", "+\t\t\tattributeNumber++;", "+\t\t}"]}], "num": 61842}