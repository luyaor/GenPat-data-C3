{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c05146c0f61077f45469d90f8a4a30a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "708f030a6795e9f44dad088f1aacfbe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\tif (receiverType.isBaseType())", "-\t\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "-", "+\t\t\tswitch (receiverType.kind()) {", "+\t\t\t\tcase Binding.BASE_TYPE :", "+\t\t\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, NotFound);", "+\t\t\t\tcase Binding.ARRAY_TYPE :", "+\t\t\t\t\tcompilationUnitScope().recordTypeReference(receiverType);", "+\t\t\t\t\treturn findMethodForArray((ArrayBinding) receiverType, selector, argumentTypes, invocationSite);", "+\t\t\t}", "-\t\t\tif (receiverType.isArrayType())", "-\t\t\t\treturn findMethodForArray((ArrayBinding) receiverType, selector, argumentTypes, invocationSite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc648c469fe75de44911bb71f82fcd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static ReferenceBinding resolveType(ReferenceBinding type, LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " public static ReferenceBinding resolveType(ReferenceBinding type, LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\tif (type.isParameterizedType())", "-\t\treturn ((ParameterizedTypeBinding) type).resolve();", "-\tif (type.isWildcard())", "-\t\treturn ((WildcardBinding) type).resolve();", "-", "+\tswitch (type.kind()) {", "+\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\treturn ((ParameterizedTypeBinding) type).resolve();", "+\t\tcase Binding.WILDCARD_TYPE :", "+\t\tcase Binding.INTERSECTION_TYPE :", "+\t\t\treturn ((WildcardBinding) type).resolve();", "+\t}"]}], "num": 17061}