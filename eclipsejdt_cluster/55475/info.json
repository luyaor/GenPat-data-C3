{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ce3048f104cecc86af88dd55df7d8af", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aea61c01f02a6c6829f7d35759e0ac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "3e2fd4cd2c4252c2460a8283c5392ab5417ca639", "commitAfterChange": "be15fec65a1d328a8dd75354d767fc9273aeddad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["+\t\tif (receiver instanceof CastExpression\t// ((type[])null)[0]", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\tcodeStream.checkcast(receiver.resolvedType); ", "+\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb3e5ec7123d9cc8e05c8fcc5020983c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "3e2fd4cd2c4252c2460a8283c5392ab5417ca639", "commitAfterChange": "be15fec65a1d328a8dd75354d767fc9273aeddad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tAssignment assignment, \t\tboolean valueRequired)", "diff": ["+\t\tif (receiver instanceof CastExpression\t// ((type[])null)[0]", "+\t\t\t\t&& ((CastExpression)receiver).innermostCastedExpression().resolvedType == NullBinding){", "+\t\t\tcodeStream.checkcast(receiver.resolvedType); ", "+\t\t}\t"]}], "num": 55475}