{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "265174a4fb1a473c22ead3162eff0d4a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a435dbb11971eba48218acd27c110a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "4f899ed65a6db0134a5169430983a39f00dbaf4c", "commitAfterChange": "302ba575da16bb6fb5610129dd618d637661239d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t\tboolean isInterfaceMethod = this.binding.declaringClass.isInterface();", "-\t\t\t\tif (!isInterfaceMethod && (bindingModifiers & (ClassFileConstants.AccStatic|ExtraCompilerModifiers.AccOverriding)) == ExtraCompilerModifiers.AccOverriding)", "+\t\t\t\tif ((bindingModifiers & (ClassFileConstants.AccStatic|ExtraCompilerModifiers.AccOverriding)) == ExtraCompilerModifiers.AccOverriding)", "-\t\t\t} else if (!isInterfaceMethod \t", "+\t\t\t} else if (!this.binding.declaringClass.isInterface() \t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc2475d48a06b538f45216e03bc8f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "commitAfterChange": "0b88f9a0bb1950edae0865a8658608a49edfc445", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t// by grammatical construction, interface methods are always abstract", "+\t\t\t\tbreak;", "+\t\t\tcase TypeDeclaration.INTERFACE_DECL :", "+\t\t\t\tif (compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8", "+\t\t\t\t\t\t&& (this.modifiers & (ExtraCompilerModifiers.AccSemicolonBody | ClassFileConstants.AccAbstract)) == ExtraCompilerModifiers.AccSemicolonBody) {", "+\t\t\t\t\tif ((this.modifiers & (ClassFileConstants.AccStatic | ExtraCompilerModifiers.AccDefaultMethod)) != 0) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().methodNeedBody(this);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}], "num": 71654}