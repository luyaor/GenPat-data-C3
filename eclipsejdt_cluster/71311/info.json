{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6a8f80d8ae0808156a87774e1d7609d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092ca881b548374beb14e64a642b4de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void test100()", "signatureAfterChange": " \tpublic void test100()", "diff": ["-\t\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Bound mismatch: The constructor X(? extends AX) of type X<? extends AX> is not applicable for the arguments (AX<String>). The wildcard parameter ? extends AX has no lower bound, and may actually be more restrictive than argument AX<String>\\n\" + ", "-\t\t\t\"----------\\n\");\t\t", "+\t\t\t\"\t                        ^\\n\" + ", "+\t\t\t\"Cannot instantiate the type X<? extends AX>\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935c5ee5fee274dc34e601e4d33872e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "aaa60fb67821ac85679fcff13ce96deec377f5bc", "commitAfterChange": "0909d326f6b563dc49b295f86f8e3bbab568c46d", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": " \tpublic void test222()", "signatureAfterChange": " \tpublic void test222()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tal.add(new Integer(1)); // (1)\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Bound mismatch: The method add(? extends Integer) of type ArrayList<? extends Integer> is not applicable for the arguments (Integer). The wildcard parameter ? extends Integer has no lower bound, and may actually be more restrictive than argument Integer\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tInteger i = lx.slot;\\n\" + ", "+\t\t\t\"\t        ^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from ? super Integer to Integer\\n\" + "]}], "num": 71311}