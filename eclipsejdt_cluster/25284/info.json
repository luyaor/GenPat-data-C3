{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13225ca262d8490455d366c77cc1f2aa", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544be68d1617ebc58b9bc5b98a20aa14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "26d507f9337456ca82e52ed896177b679ad9ed51", "commitAfterChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate boolean examineIsDeprecated()", "signatureAfterChange": " \tprivate boolean examineIsDeprecated()", "diff": ["-\t\t\treportError(\"Couldn't find targets.model.pc.Deprecation\");", "+\t\t\treportError(\"examineIsDeprecated: Couldn't find targets.model.pc.Deprecation\");", "-\t\t\treportError(\"Could not find methods Deprecation.deprecatedMethod() or Deprecation.nonDeprecatedMethod()\");", "+\t\t\treportError(\"examineIsDeprecated: Could not find methods Deprecation.deprecatedMethod() or Deprecation.nonDeprecatedMethod()\");", "-\t\t\treportError(\"ElementUtils.isDeprecated(Deprecation.nonDeprecatedMethod()) is true\");", "+\t\t\treportError(\"examineIsDeprecated: ElementUtils.isDeprecated(Deprecation.nonDeprecatedMethod()) is true\");", "-\t\t\treportError(\"ElementUtils.isDeprecated(Deprecation.deprecatedMethod()) is false\");", "+\t\t\treportError(\"examineIsDeprecated: ElementUtils.isDeprecated(Deprecation.deprecatedMethod()) is false\");", "-\t\t\treportError(\"Could not find methods Deprecation.deprecatedClass() or Deprecation.nonDeprecatedClass()\");", "+\t\t\treportError(\"examineIsDeprecated: Could not find methods Deprecation.deprecatedClass() or Deprecation.nonDeprecatedClass()\");", "-\t\t\treportError(\"Could not find methods Deprecation.deprecatedInterface() or Deprecation.nonDeprecatedInterface()\");", "+\t\t\treportError(\"examineIsDeprecated: Could not find methods Deprecation.deprecatedInterface() or Deprecation.nonDeprecatedInterface()\");", "-\t\t\treportError(\"ElementUtils.isDeprecated(Deprecation.nonDeprecatedClass()) is true\");", "+\t\t\treportError(\"examineIsDeprecated: ElementUtils.isDeprecated(Deprecation.nonDeprecatedClass()) is true\");", "-\t\t\treportError(\"ElementUtils.isDeprecated(Deprecation.deprecatedClass()) is false\");", "+\t\t\treportError(\"examineIsDeprecated: ElementUtils.isDeprecated(Deprecation.deprecatedClass()) is false\");", "-\t\t\treportError(\"ElementUtils.isDeprecated(Deprecation.nonDeprecatedInterface()) is true\");", "+\t\t\treportError(\"examineIsDeprecated: ElementUtils.isDeprecated(Deprecation.nonDeprecatedInterface()) is true\");", "-\t\t\treportError(\"ElementUtils.isDeprecated(Deprecation.deprecatedInterface()) is false\");", "+\t\t\treportError(\"examineIsDeprecated: ElementUtils.isDeprecated(Deprecation.deprecatedInterface()) is false\");", "-\t\t\treportError(\"Couldn't find class Deprecation.deprecatedClass\");", "+\t\t\treportError(\"examineIsDeprecated: Couldn't find class Deprecation.deprecatedClass\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6684430577cec950626d08be044a841f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "26d507f9337456ca82e52ed896177b679ad9ed51", "commitAfterChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate boolean examineHidesMethod()", "signatureAfterChange": " \tprivate boolean examineHidesMethod()", "diff": ["-\t\t\treportError(\"Failed to find an expected method on F\");", "+\t\t\treportError(\"examineHidesMethod: Failed to find an expected method on F\");", "-\t\t\treportError(\"Failed to find an expected method on G\");", "+\t\t\treportError(\"examineHidesMethod: Failed to find an expected method on G\");", "-\t\t\treportError(\"Failed to find an expected method on H\");", "+\t\t\treportError(\"examineHidesMethod: Failed to find an expected method on H\");", "-\t\t\treportError(\"Failed to find an expected method on J\");", "+\t\t\treportError(\"examineHidesMethod: Failed to find an expected method on J\");", "-\t\t\treportError(\"H.staticMethod() should hide G.staticMethod()\");", "+\t\t\treportError(\"examineHidesMethod: H.staticMethod() should hide G.staticMethod()\");", "+\t\tif (_elementUtils.hides(methodStaticOnG, methodStaticOnG)) {", "+\t\t\treportError(\"examineHidesMethod: G.staticMethod() should not hide itself\");", "+\t\t\treturn false;", "+\t\t}", "-\t\t\treportError(\"G.staticMethod() should not hide (private) F.staticMethod()\");", "+\t\t\treportError(\"examineHidesMethod: G.staticMethod() should not hide (private) F.staticMethod()\");", "-\t\t\treportError(\"G.staticMethod() should not hide H.staticMethod()\");", "+\t\t\treportError(\"examineHidesMethod: G.staticMethod() should not hide H.staticMethod()\");", "-\t\t\treportError(\"G.staticMethod() should not hide F.staticMethod2()\");", "+\t\t\treportError(\"examineHidesMethod: G.staticMethod() should not hide F.staticMethod2()\");", "-\t\t\treportError(\"J.staticMethod() should not hide G.staticMethod()\");", "+\t\t\treportError(\"examineHidesMethod: J.staticMethod() should not hide G.staticMethod()\");", "-\t\t\treportError(\"H.staticMethod(int) should not hide G.staticMethod()\");", "+\t\t\treportError(\"examineHidesMethod: H.staticMethod(int) should not hide G.staticMethod()\");", "-\t\t\treportError(\"G.methodT1() should not hide F.methodT1(), because they aren't static (JLS 8.4.8.2)\");", "+\t\t\treportError(\"examineHidesMethod: G.methodT1() should not hide F.methodT1(), because they aren't static (JLS 8.4.8.2)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4cb38a6a25090b988d85b780b82e4ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "26d507f9337456ca82e52ed896177b679ad9ed51", "commitAfterChange": "6954f6f09ec0fa4357c31e7abaa82f5c7cd86dbc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate boolean examineGetAllMembers()", "signatureAfterChange": " \tprivate boolean examineGetAllMembers()", "diff": ["-\t\t\treportError(\"getAllMembers(_elementG) returned null\");", "+\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) returned null\");", "-\t\t\treportError(\"getAllMembers(_elementG) did not include method hashCode()\");", "+\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) did not include method hashCode()\");", "-\t\t\treportError(\"getAllMembers(_elementG) did not include class FChild\");", "+\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) did not include class FChild\");", "-\t\t\t\treportError(\"getAllMembers(_elementG) included the private inherited field _fieldT1_private\");", "+\t\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) included the private inherited field _fieldT1_private\");", "-\t\t\treportError(\"getAllMembers(_elementG) did not return the protected inherited field _fieldT1_protected\");", "+\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) did not return the protected inherited field _fieldT1_protected\");", "-\t\t\t\treportError(\"getAllMembers(_elementG) returned a constructor for an element other than G\");", "+\t\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) returned a constructor for an element other than G\");", "-\t\t\treportError(\"getAllMembers(_elementG) did not include G's constructor\");", "+\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) did not include G's constructor\");", "-\t\t\t\t\treportError(\"getAllMembers(_elementG) included an overridden version of method_T1()\");", "+\t\t\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) included an overridden version of method_T1()\");", "-\t\t\treportError(\"getAllMembers(_elementG) did not include G's method_T1(String)\");", "+\t\t\treportError(\"examineGetAllMembers: getAllMembers(_elementG) did not include G's method_T1(String)\");"]}], "num": 25284}