{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dd7c3e252851551306d413873d8e39f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de9f304d07d9a19a20c8c9bc61f028f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "cc1b983a8e90a6eb8909a42b004cd126e56bf76f", "commitAfterChange": "400176b3d00d9671a0c4aab9bab4779b3ff7bf8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t        this.genericCast = originalBinding.returnType.genericCast(runtimeTimeType);", "+\t\t        this.valueCast = originalBinding.returnType.genericCast(runtimeTimeType);", "-\t\t} \t", "+\t\t} \telse if (this.actualReceiverType.isArrayType() ", "+\t\t\t\t\t\t&& this.binding.parameters == NoParameters ", "+\t\t\t\t\t\t&& scope.environment().options.complianceLevel >= JDK1_5 ", "+\t\t\t\t\t\t&& CharOperation.equals(this.binding.selector, CLONE)) {", "+\t\t\t\t\t// from 1.5 compliant mode on, array#clone() resolves to array type, but codegen to #clone()Object - thus require extra inserted cast", "+\t\t\tthis.valueCast = runtimeTimeType;\t\t\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb781469301f88ef59feb8f2e568c74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "cc1b983a8e90a6eb8909a42b004cd126e56bf76f", "commitAfterChange": "400176b3d00d9671a0c4aab9bab4779b3ff7bf8e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\treturn this.resolvedType = this.binding.returnType;", "+\t// from 1.5 compliance on, array#clone() returns the array type (but binding still shows Object)", "+\tif (actualReceiverType.isArrayType() ", "+\t\t\t&& this.binding.parameters == NoParameters ", "+\t\t\t&& scope.environment().options.complianceLevel >= JDK1_5 ", "+\t\t\t&& CharOperation.equals(this.binding.selector, CLONE)) {", "+\t\tthis.resolvedType = actualReceiverType;", "+\t} else {", "+\t\tthis.resolvedType = this.binding.returnType;", "+\t}", "+\treturn this.resolvedType;"]}], "num": 8083}