{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc1c404db1e896a73bff3f6cb0ac720f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35e6240d1a4e0775945b5c9d3352558a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java", "commitBeforeChange": "bc0186a50a53e5ba4ec06b1fd109f224596dcf85", "commitAfterChange": "f49a5f1104b55b3dc29e3fe79e333c326bd1d09f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "signatureAfterChange": "  \tpublic IAnnotationBinding[] getAnnotations()", "diff": ["-\t\t\t\t\t\t\t\tdomInstances[a] = this.resolver.getAnnotationInstance(allInstances[a]);", "-\t\t\t\t\t\t\t\tif (domInstances[a] == null) // not resolving binding", "+\t\t\t\t\t\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(allInstances[a]);", "+\t\t\t\t\t\t\t\tif (annotationInstance == null) {// not resolving binding", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tdomInstances[a] = annotationInstance;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efdc7675a0890342ddb77f8e93710428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "8d86c45b7dbc1d8316194b358e7234e4491fa695", "commitAfterChange": "0305482ace5c5443f44c914a225574b12096815b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "signatureAfterChange": " \tpublic void collectSubstitutes(TypeBinding otherType, Map substitutes)", "diff": ["-\t            if (variableSubstitutes[i] == otherType) return; // already there", "-\t            if (variableSubstitutes[i] == null) {", "+\t        \tTypeBinding substitute = variableSubstitutes[i];", "+\t            if (substitute == otherType) return; // already there", "+\t            if (substitute == null) {"]}], "num": 3116}