{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "891c86d3a321e7ba9ad449133926e361", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a900e1aefbb6595ecef87f6c833f4cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "cbc781423397a753d7a0e29b64da02f9ae05e6ae", "commitAfterChange": "e659592a32935b3480e8554de2e33b0870ea4573", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "\r public void testDefault07_bin()", "signatureAfterChange": "\r public void testDefault07_bin()", "diff": ["-\t\t\t\"\t\t@NonNull Number nnn = inner.process(Integer.MAX_VALUE, new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" +\r", "+\t\t\t\"\t\t@NonNull Number nnn = inner.process(Integer.valueOf(3), new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" +\r", "-\t\t\"\t@NonNull Number nnn = inner.process(Integer.MAX_VALUE, new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" + \r", "-\t\t\"\t                                    ^^^^^^^^^^^^^^^^^\\n\" + \r", "-\t\t\"Null type safety (type annotations): The expression of type \\'int\\' needs unchecked conversion to conform to \\'@NonNull Integer\\'\\n\" + \r", "+\t\t\"\t@NonNull Number nnn = inner.process(Integer.valueOf(3), new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" + \r", "+\t\t\"\t                                    ^^^^^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\"Null type safety (type annotations): The expression of type \\'Integer\\' needs unchecked conversion to conform to \\'@NonNull Integer\\'\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb60451d8eb0d4840acece17af5357b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "cbc781423397a753d7a0e29b64da02f9ae05e6ae", "commitAfterChange": "e659592a32935b3480e8554de2e33b0870ea4573", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "\r public void testDefault07()", "signatureAfterChange": "\r public void testDefault07()", "diff": ["-\t\t\t\"\t\t@NonNull Number nnn = inner.process(Integer.MAX_VALUE, new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" +\r", "+\t\t\t\"\t\t@NonNull Number nnn = inner.process(Integer.valueOf(3), new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" +\r", "-\t\t\"\t@NonNull Number nnn = inner.process(Integer.MAX_VALUE, new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" + \r", "-\t\t\"\t                                    ^^^^^^^^^^^^^^^^^\\n\" + \r", "-\t\t\"Null type safety (type annotations): The expression of type \\'int\\' needs unchecked conversion to conform to \\'@NonNull Integer\\'\\n\" + \r", "+\t\t\"\t@NonNull Number nnn = inner.process(Integer.valueOf(3), new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" + \r", "+\t\t\"\t                                    ^^^^^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\"Null type safety (type annotations): The expression of type \\'Integer\\' needs unchecked conversion to conform to \\'@NonNull Integer\\'\\n\" + \r", "-\t\t\"\t@NonNull Number nnn = inner.process(Integer.MAX_VALUE, new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" + \r", "-\t\t\"\t                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + \r", "+\t\t\"\t@NonNull Number nnn = inner.process(Integer.valueOf(3), new ArrayList<@Nullable Integer>()); // WARN on 1. arg; ERR on 2. arg\\n\" + \r", "+\t\t\"\t                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + \r"]}], "num": 51944}