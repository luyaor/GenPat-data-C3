{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0f797a93577f28ff40d49a9d7fed512", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103bfcb0841d6ddaec4070e87124f99a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "68e058c49e55090c3efeb985c0093a601de509bb", "commitAfterChange": "807b33cf50fdb479db403880e28eb0989e0fbdba", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": "  public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\t\tTypeBinding receiverErasure = receiverType.erasure();", "+\t\tReferenceBinding receiverErasure = (ReferenceBinding)receiverType.erasure();", "+\t\tReferenceBinding declaringErasure = (ReferenceBinding) declaringClass.erasure();", "-\t\t\tif (declaringClass.isSuperclassOf(currentType)) {", "+\t\t\tif (currentType.findSuperTypeErasingTo(declaringErasure) != null) {", "-\t\t\t\tif (currentType == receiverErasure || currentType.isSuperclassOf((ReferenceBinding) receiverErasure)){", "+\t\t\t\tif (currentType == receiverErasure || receiverErasure.findSuperTypeErasingTo(currentType) != null){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "670ca0eacfcad57a5a88a3be79f8ebaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "68e058c49e55090c3efeb985c0093a601de509bb", "commitAfterChange": "807b33cf50fdb479db403880e28eb0989e0fbdba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": " public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\t\tTypeBinding receiverErasure = receiverType.erasure();\t\t", "+\t\tReferenceBinding receiverErasure = (ReferenceBinding) receiverType.erasure();\t\t", "+\t\tReferenceBinding declaringErasure = (ReferenceBinding) declaringClass.erasure();", "-\t\t\tif (declaringClass.isSuperclassOf(currentType)) {", "+\t\t\tif (currentType.findSuperTypeErasingTo(declaringErasure) != null) {", "-\t\t\t\tif (currentType == receiverErasure || currentType.isSuperclassOf((ReferenceBinding) receiverErasure)){", "+\t\t\t\tif (currentType == receiverErasure || receiverErasure.findSuperTypeErasingTo(currentType) != null){"]}], "num": 3850}