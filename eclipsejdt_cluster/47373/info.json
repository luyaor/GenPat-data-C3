{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "658fe78e263f9def9ab4eeb6e156efb0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28fba4c5571c41d4f5676a5ac11628f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "37b393962270992362b04cbe26e00f2658c11b4c", "commitAfterChange": "c62f0c1bab5e955aabde01c278daeb6c0b3de6ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\tTypeBinding expectedType = null;", "+\t\t\t\t\tTypeBinding expectedType = null;", "-\t\t\t\t\tif (expectedType == null) expectedType = scope.getJavaLangObject(); // assume Object by default", "+\t\t\t\t\tif (expectedType != null) {", "+\t\t\t\t\t\t// record it was explicit from context, as opposed to assumed by default (see below)", "+\t\t\t\t\t\tinferenceContext.hasExplicitExpectedType = true; ", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\texpectedType = scope.getJavaLangObject(); // assume Object by default", "+\t\t\t\t\t}", "+\t\t\t\t\tinferenceContext.expectedType = expectedType;", "-\t\t\t\tmethodSubstitute = methodSubstitute.inferFromExpectedType(scope, expectedType, inferenceContext);", "+\t\t\t\tmethodSubstitute = methodSubstitute.inferFromExpectedType(scope, inferenceContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e477508a807b7fe4e9cb898ad6ba94f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "c0c378ef26bd8331cbc4eaed145d9bcfe4bd3ce5", "commitAfterChange": "07419ad64aa4c0dace87382c5b2c36e54491592b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\tsourceType.superInterfaces = NoSuperInterfaces;", "+\t\t\tsourceType.superInterfaces = NoSuperInterfaces;", "-\t\tif (sourceType.id == T_JavaLangObject) // already handled the case of redefining java.lang.Object", "+\t\tif (sourceType.id == T_JavaLangObject) { // already handled the case of redefining java.lang.Object", "+\t\t\tsourceType.superInterfaces = NoSuperInterfaces;", "+\t\t}", "+\t\t} else {", "+\t\t\tsourceType.superInterfaces = NoSuperInterfaces;"]}], "num": 47373}