{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24a38b50a8a6805ad567e4282bfd62e1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ea3b5f00ba25d257a6740359181986", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ddfc08455c51ec3ca9ceb0eaefe5f366b10475a4", "commitAfterChange": "47cd44339d540ba992e6757b69a80cc764284538", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "      \tpublic void loadVariables() throws CoreException", "signatureAfterChange": "  \tpublic void loadVariables() throws CoreException", "diff": ["-\t\t\t\tVariables.put(varName, VariablePreviouslyPersisted); // special value to allow cached value in case no initializer is available", "-\t\t\t\tPreviouslyPersistedVariables.put(varName, varPath);", "+\t\t\t\t", "+\t\t\t\tVariables.put(varName, varPath); ", "+\t\t// override persisted values for variables which have a registered initializer", "+\t\tString[] registeredVariables = getRegisteredVariableNames();", "+\t\tfor (int i = 0; i < registeredVariables.length; i++) {", "+\t\t\tString varName = registeredVariables[i];", "+\t\t\tVariables.put(varName, null); // reset variable, but leave its entry in the Map, so it will be part of variable names.", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2e36e2cbadd2911aa4e14adef870628", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "signatureAfterChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "diff": ["-\t\t\t\tVariables.put(varName, varPath); ", "-\t\t\t\tPreviousSessionVariables.put(varName, varPath);", "+\t\t\t\tthis.variables.put(varName, varPath); ", "+\t\t\t\tthis.previousSessionVariables.put(varName, varPath);", "-\t\t\tVariables.put(varName, null); // reset variable, but leave its entry in the Map, so it will be part of variable names.", "+\t\t\tthis.variables.put(varName, null); // reset variable, but leave its entry in the Map, so it will be part of variable names.", "-\t\t\tIterator projectIterator = Containers.keySet().iterator();", "+\t\t\tIterator projectIterator = this.containers.keySet().iterator();", "-\t\t\t\tMap projectContainers = (Map)Containers.get(project);", "+\t\t\t\tMap projectContainers = (Map)this.containers.get(project);"]}], "num": 45856}