{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bb17c2f93311b1f9fa05f804c335974", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b66c8c4712679f743759aee5c84b490", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "773c88d3e635cbc1422720dad5721da00c844211", "commitAfterChange": "ab1674a0873a6f0955401f0b440fd6a56c6beb1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tExpression closeTarget = null;", "-\t\t\t\tcloseTarget = this.receiver;", "+\t\t\t\trecordCallingClose(currentScope, flowContext, flowInfo, this.receiver);", "-\t\t\t\t\tcloseTarget = this.arguments[0];", "+\t\t\t\t\tint len = Math.min(record.numCloseableArgs, this.arguments.length);", "+\t\t\t\t\tfor (int j=0; j<len; j++)", "+\t\t\t\t\t\trecordCallingClose(currentScope, flowContext, flowInfo, this.arguments[j]);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (closeTarget != null) {", "-\t\t\tFakedTrackingVariable trackingVariable = FakedTrackingVariable.getCloseTrackingVariable(closeTarget, flowInfo, flowContext);", "-\t\t\tif (trackingVariable != null) { // null happens if target is not a local variable or not an AutoCloseable", "-\t\t\t\tif (trackingVariable.methodScope == currentScope.methodScope()) {", "-\t\t\t\t\ttrackingVariable.markClose(flowInfo, flowContext);", "-\t\t\t\t} else {", "-\t\t\t\t\ttrackingVariable.markClosedInNestedMethod();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a97247d3a0443cd507aefa197c98e8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "4bd3e6b0c5202bbe675a35ff5ce6eef56daecdd0", "commitAfterChange": "c9c5f11eddd07d2a8299046a3df03585e022db6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tExpression closeTarget = null;", "-\t\t\t\tcloseTarget = this.receiver;", "+\t\t\t\trecordCallingClose(currentScope, flowContext, flowInfo, this.receiver);", "-\t\t\t\t\tcloseTarget = this.arguments[0];", "+\t\t\t\t\tint len = Math.min(record.numCloseableArgs, this.arguments.length);", "+\t\t\t\t\tfor (int j=0; j<len; j++)", "+\t\t\t\t\t\trecordCallingClose(currentScope, flowContext, flowInfo, this.arguments[j]);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (closeTarget != null) {", "-\t\t\tFakedTrackingVariable trackingVariable = FakedTrackingVariable.getCloseTrackingVariable(closeTarget, flowInfo, flowContext);", "-\t\t\tif (trackingVariable != null) { // null happens if target is not a local variable or not an AutoCloseable", "-\t\t\t\tif (trackingVariable.methodScope == currentScope.methodScope()) {", "-\t\t\t\t\ttrackingVariable.markClose(flowInfo, flowContext);", "-\t\t\t\t} else {", "-\t\t\t\t\ttrackingVariable.markClosedInNestedMethod();"]}], "num": 34129}