{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d73fd0ee37387372be843794585df33", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25013b392e68182acd0516f354d46a4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "9baf80dbc090f318368e0d80ba44423a7e05244d", "commitAfterChange": "9e45bfcae21d1165f635d6ea9bce3658dd380dce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "diff": ["-        if (!this.isStatic() && this.declaringClass instanceof Substitution) {", "-        \treturn ((Substitution)this.declaringClass).substitute(originalVariable);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f608390ea28f5ddeed85f48ff45478", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void checkAndSetModifiersForMethod(MethodBinding methodBinding)", "signatureAfterChange": " private void checkAndSetModifiersForMethod(MethodBinding methodBinding)", "diff": ["-\t\tif (!methodBinding.declaringClass.isAbstract())", "-\t\t\tproblemReporter().abstractMethodInAbstractClass((SourceTypeBinding) declaringClass, (AbstractMethodDeclaration) this.referenceContext);", "+// We now report the error against the declaringClass to avoid problems with incremental builds & source vs. .class bindings", "+//\t\tif (!methodBinding.declaringClass.isAbstract())", "+//\t\t\tproblemReporter().abstractMethodInAbstractClass((SourceTypeBinding) declaringClass, (AbstractMethodDeclaration) this.referenceContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2ae71373a955123fa39df0f3c72fa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "93731ad7d2e375b2a3d12bffddb8ea97a519a9f0", "commitAfterChange": "6dc63090060c8280bef3548f9f6476dd71ec2272", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic boolean detectHierarchyCycle(TypeBinding superType, TypeReference reference)", "signatureAfterChange": "  \tpublic boolean detectHierarchyCycle(TypeBinding superType, TypeReference reference)", "diff": ["-", "-\t\tif ((superType.tagBits & TagBits.BeginHierarchyCheck) == 0 && superType instanceof SourceTypeBinding)", "-\t\t\t// ensure if this is a source superclass that it has already been checked", "-\t\t\t((SourceTypeBinding) superType).scope.connectTypeHierarchyWithoutMembers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6c40f0aa1e9f9b45511e626c9518582", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "8622e99cc18e0c0ae6c600de97be8d909f3d7ad6", "commitAfterChange": "97ffd5d9f10b645b867987b89ee09e9ee483a6d1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate TypeBinding getAnnotatedType(TypeBinding type, TypeBinding enclosingType, AnnotationBinding[] annotations)", "signatureAfterChange": " \tprivate TypeBinding getAnnotatedType(TypeBinding type, TypeBinding enclosingType, AnnotationBinding[] annotations)", "diff": ["-\t\t\t\t// point-fix for https://bugs.eclipse.org/432977", "-\t\t\t\tif (!type.isUnresolvedType() && derivedType.isUnresolvedType())", "-\t\t\t\t\treturn ((UnresolvedReferenceBinding)derivedType).resolve(this.environment, false);"]}], "num": 7190}