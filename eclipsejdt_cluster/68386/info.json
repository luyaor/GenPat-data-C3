{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55135f5fa5ff62806d220f59a2469d01", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "724b247079576a6e921f8b32fb2cd5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic synchronized IMethodBinding[] getDeclaredMethods()", "signatureAfterChange": " \tpublic synchronized IMethodBinding[] getDeclaredMethods()", "diff": ["-\t\t\t\t\tint removeSyntheticsCounter = 0;", "+\t\t\t\t\tint convertedMethodCount = 0;", "-\t\t\t\t\t\tif (!shouldBeRemoved(methodBinding)) {", "-\t\t\t\t\t\t\tIMethodBinding methodBinding2 = this.resolver.getMethodBinding(methodBinding);", "-\t\t\t\t\t\t\tif (methodBinding2 != null) {", "-\t\t\t\t\t\t\t\tnewMethods[removeSyntheticsCounter++] = methodBinding2;", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (methodBinding.isDefaultAbstract() || methodBinding.isSynthetic() || (methodBinding.isConstructor() && isInterface())) {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tIMethodBinding methodBinding2 = this.resolver.getMethodBinding(methodBinding);", "+\t\t\t\t\t\tif (methodBinding2 != null) {", "+\t\t\t\t\t\t\tnewMethods[convertedMethodCount++] = methodBinding2;", "-\t\t\t\t\tif (removeSyntheticsCounter != length) {", "-\t\t\t\t\t\tSystem.arraycopy(newMethods, 0, (newMethods = new IMethodBinding[removeSyntheticsCounter]), 0, removeSyntheticsCounter);", "+\t\t\t\t\tif (convertedMethodCount != length) {", "+\t\t\t\t\t\tif (convertedMethodCount == 0) {", "+\t\t\t\t\t\t\treturn this.methods = NO_METHOD_BINDINGS;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tSystem.arraycopy(newMethods, 0, (newMethods = new IMethodBinding[convertedMethodCount]), 0, convertedMethodCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97268e7d8a8ce81d543f10bea9b1f705", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IntersectionCastTypeReference.java", "commitBeforeChange": "fb41fdb7e255d6e5b46ffe2a413c2cecddfaeeea", "commitAfterChange": "e63b9746075cfa36f9c16fdf188f3c8e6604903a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "diff": ["+\t\tint typeCount = 0;", "+\t\tnextType:", "-\t\t\t} else if (!type.isInterface()) {  // TODO: understand how annotations play here ...", "+\t\t\t} else if (!type.isInterface()) {", "-\t\t\tfor (int j = 0; j < i; j++) {", "-\t\t\t\tif (TypeBinding.equalsEquals(intersectingTypes[j], type)) {", "+\t\t\tfor (int j = 0; j < typeCount; j++) {", "+\t\t\t\tfinal ReferenceBinding priorType = intersectingTypes[j];", "+\t\t\t\tif (TypeBinding.equalsEquals(priorType, type)) {", "+\t\t\t\tif (!priorType.isInterface())", "+\t\t\t\t\tcontinue;", "+\t\t\t\tif (type.findSuperTypeOriginatingFrom(priorType) != null) {", "+\t\t\t\t\tintersectingTypes[j] = (ReferenceBinding) type;", "+\t\t\t\t\tcontinue nextType;", "+\t\t\t\t}", "+\t\t\t\tif (priorType.findSuperTypeOriginatingFrom(type) != null)", "+\t\t\t\t\tcontinue nextType;", "-\t\t\tintersectingTypes[i] = (ReferenceBinding) type;", "+\t\t\tintersectingTypes[typeCount++] = (ReferenceBinding) type;", "+\t\tif (typeCount != length) {", "+\t\t\tif (typeCount == 1) {", "+\t\t\t\treturn this.resolvedType = intersectingTypes[0];", "+\t\t\t}", "+\t\t\tSystem.arraycopy(intersectingTypes, 0, intersectingTypes = new ReferenceBinding[typeCount], 0, typeCount);", "+\t\t}"]}], "num": 68386}