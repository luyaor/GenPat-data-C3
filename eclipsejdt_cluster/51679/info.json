{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a2f08f116b66439b803a85ed5722bc7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603e7c0272e693577b56327b8fd262c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tprivate int getDimensions()", "signatureAfterChange": " \tprivate int getDimensions()", "diff": ["+\t\tboolean inAnnotation = false;", "+\t\tint parenBalance = 0; // for inline annotations", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN:", "+\t\t\t\t\t\tparenBalance++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN:", "+\t\t\t\t\t\tif (! inAnnotation) break loop;", "+\t\t\t\t\t\tif (--parenBalance == 0) inAnnotation = false;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameAT :", "+\t\t\t\t\t\tinAnnotation = true;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameIdentifier :", "+\t\t\t\t\tcase TerminalTokens.TokenNameEQUAL :", "+\t\t\t\t\t\tif (parenBalance == 0 && ! inAnnotation) break loop;", "-\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t\tif (parenBalance == 0) break loop;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a484ed44b9d95b43f9b4ea8296ba2e07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "de1a896ae0cf9cc7fdee8ce3aebee48242ef244b", "commitAfterChange": "38590129939501d58d89738289276afaa02e2706", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": "\r public void add(IJavaElement element) throws JavaModelException", "diff": ["-\tif (element instanceof IJavaProject) {\r", "-\t\tthis.add((IJavaProject)element, true, new HashSet(2));\r", "-\t} else if (element instanceof IPackageFragmentRoot) {\r", "-\t\troot = (IPackageFragmentRoot)element;\r", "-\t\tthis.add(root.getPath(), true);\r", "-\t} else if (element instanceof IPackageFragment) {\r", "-\t\troot = (IPackageFragmentRoot)element.getParent();\r", "-\t\tif (root.isArchive()) {\r", "-\t\t\tthis.add(root.getPath().append(new Path(element.getElementName().replace('.', '/'))), false);\r", "-\t\t} else {\r", "+\tswitch (element.getElementType()) {\r", "+\t\tcase IJavaElement.JAVA_MODEL:\r", "+\t\t\t// a workspace sope should be used\r", "+\t\t\tbreak; \r", "+\t\tcase IJavaElement.JAVA_PROJECT:\r", "+\t\t\tthis.add((IJavaProject)element, true, new HashSet(2));\r", "+\t\t\tbreak;\r", "+\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT:\r", "+\t\t\troot = (IPackageFragmentRoot)element;\r", "+\t\t\tthis.add(root.getPath(), true);\r", "+\t\t\tbreak;\r", "+\t\tcase IJavaElement.PACKAGE_FRAGMENT:\r", "+\t\t\troot = (IPackageFragmentRoot)element.getParent();\r", "+\t\t\tif (root.isArchive()) {\r", "+\t\t\t\tthis.add(root.getPath().append(new Path(element.getElementName().replace('.', '/'))), false);\r", "+\t\t\t} else {\r", "+\t\t\t\tIResource resource = element.getUnderlyingResource();\r", "+\t\t\t\tif (resource != null && resource.isAccessible()) {\r", "+\t\t\t\t\tthis.add(resource.getFullPath(), false);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t\tdefault:\r", "-\t\t\t\tthis.add(resource.getFullPath(), false);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tIResource resource = element.getUnderlyingResource();\r", "-\t\tif (resource != null && resource.isAccessible()) {\r", "-\t\t\tthis.add(resource.getFullPath(), true);\r", "-\t\t\t\r", "-\t\t\t// find package fragment root including this java element\r", "-\t\t\tIJavaElement parent = element.getParent();\r", "-\t\t\twhile (parent != null && !(parent instanceof IPackageFragmentRoot)) {\r", "-\t\t\t\tparent = parent.getParent();\r", "-\t\t\t}\r", "-\t\t\tif (parent instanceof IPackageFragmentRoot) {\r", "-\t\t\t\troot = (IPackageFragmentRoot)parent;\r", "-\t\t\t}\r", "-\t\t}\t\r", "+\t\t\t\t// remember sub-cu (or sub-class file) java elements\r", "+\t\t\t\tif (element instanceof IMember) {\r", "+\t\t\t\t\tif (this.elements == null) {\r", "+\t\t\t\t\t\tthis.elements = new ArrayList();\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tthis.elements.add(element);\r", "+\t\t\t\t}\r", "+\t\t\t\tthis.add(resource.getFullPath(), true);\r", "+\t\t\t\t\r", "+\t\t\t\t// find package fragment root including this java element\r", "+\t\t\t\tIJavaElement parent = element.getParent();\r", "+\t\t\t\twhile (parent != null && !(parent instanceof IPackageFragmentRoot)) {\r", "+\t\t\t\t\tparent = parent.getParent();\r", "+\t\t\t\t}\r", "+\t\t\t\tif (parent instanceof IPackageFragmentRoot) {\r", "+\t\t\t\t\troot = (IPackageFragmentRoot)parent;\r", "+\t\t\t\t}\r", "+\t\t\t}\t\r"]}], "num": 51679}