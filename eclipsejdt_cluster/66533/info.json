{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "915232ade15ffa33b660d23e76034aaf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00aaf241d319f1f4beaf66085f46d733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "14d627dce82d56cfd2be03743c28c7ac3736df42", "commitAfterChange": "98d42611e634b1db50f18796da74a25e56b7b155", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 71, "signatureBeforeChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \t \tpublic IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\t\t\tcontainer = initializeAllContainers(project, containerPath);", "+\t\t\t\ttry {", "+\t\t\t\t\tcontainer = initializeAllContainers(project, containerPath);", "+\t\t\t\t} finally {", "+\t\t\t\t\tbatchInitializationFinished();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddbdb46e06c43dddc49ab97f1250933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "90b1908492a5f9d4c5df732b0e6c825a2d37465b", "commitAfterChange": "57baf3ab2dd5307ea86760f7955e1b40b82c6d4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCopyCUReadOnly() throws CoreException", "signatureAfterChange": " public void testCopyCUReadOnly() throws CoreException", "diff": ["-\tthis.createFolder(\"/P/src/p1\");", "-\tIFile file = this.createFile(", "-\t\t\"/P/src/p1/X.java\",", "-\t\t\"package p1;\\n\" +", "-\t\t\"public class X {\\n\" +", "-\t\t\"}\"", "-\t);", "-\tfile.setReadOnly(true);", "-\tICompilationUnit cuSource = getCompilationUnit(\"/P/src/p1/X.java\");", "-", "-\tthis.createFolder(\"/P/src/p2\");", "-\tIPackageFragment pkgDest = getPackage(\"/P/src/p2\");", "-", "-\tcopyPositive(cuSource, pkgDest, null, null, false);", "+\ttry {", "+\t\tthis.createFolder(\"/P/src/p1\");", "+\t\tIFile file = this.createFile(", "+\t\t\t\"/P/src/p1/X.java\",", "+\t\t\t\"package p1;\\n\" +", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"}\"", "+\t\t);", "+\t\tfile.setReadOnly(true);", "+\t\tICompilationUnit cuSource = getCompilationUnit(\"/P/src/p1/X.java\");", "-\tassertTrue(\"Destination cu should be read-only\", getFile(\"/P/src/p2/X.java\").isReadOnly());", "+\t\tthis.createFolder(\"/P/src/p2\");", "+\t\tIPackageFragment pkgDest = getPackage(\"/P/src/p2\");", "+\t", "+\t\tcopyPositive(cuSource, pkgDest, null, null, false);", "+\t\t", "+\t\tassertTrue(\"Destination cu should be read-only\", getFile(\"/P/src/p2/X.java\").isReadOnly());", "+\t} finally {", "+\t\tdeleteFolder(\"/P/src/p1\");", "+\t}"]}], "num": 66533}