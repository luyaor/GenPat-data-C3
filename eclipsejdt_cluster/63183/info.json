{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "793d5eb3a968b2ef13547fb45ddaf656", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e149c4be75fdd081ce6bee966f7862f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "ed3fcdd60ec8b1f1772167d9e21f98cd0900ad45", "commitAfterChange": "852e2d9035aaf672af96f0f4ddabfa7f2e0a2ddb", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public static final char[] replace( \tchar[] array, \tchar[] toBeReplaced, \tchar[] replacementChars)", "signatureAfterChange": " public static final char[] replace( \tchar[] array, \tchar[] toBeReplaced, \tchar[] replacementChars)", "diff": ["-\t\tnext : for (int i = 0; i < max; i++) {", "-\t\t\tint j = 0;", "-\t\t\twhile (j < replacedLength) {", "-\t\t\t\tif (i + j == max)", "-\t\t\t\t\tcontinue next;", "-\t\t\t\tif (array[i + j] != toBeReplaced[j++])", "-\t\t\t\t\tcontinue next;", "+\t\tnext : for (int i = 0; i < max;) {", "+\t\t\tint index = indexOf(toBeReplaced, array, true, i);", "+\t\t\tif (index == -1) {", "+\t\t\t\ti++;", "+\t\t\t\tcontinue next;", "-\t\t\tstarts[occurrenceCount++] = i;", "+\t\t\tstarts[occurrenceCount++] = index;", "+\t\t\ti = index + replacedLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f22cde8b73a7a52c1a6fabd4b1370e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "43191caefaa8fabb3434b14cf3063f1b06673205", "commitAfterChange": "7484e25e299b8203b28cf436ac2de883b2f5dd8e", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  private MethodBinding [] getInterfaceAbstractContracts(Scope scope) throws InvalidInputException", "signatureAfterChange": "  private MethodBinding [] getInterfaceAbstractContracts(Scope scope) throws InvalidInputException", "diff": ["-\t\tfor (int j = 0; j < contractsCount; j++) {", "-\t\t\tif (contracts[j] == null)", "-\t\t\t\tcontinue;", "-\t\t\tif (MethodVerifier.doesMethodOverride(method, contracts[j], scope.environment())) {", "+\t\tfor (int j = 0; j < contractsCount;) {", "+\t\t\tif ( contracts[j] != null && MethodVerifier.doesMethodOverride(method, contracts[j], scope.environment())) {", "-\t\t\t\tif (j < contractsCount)", "+\t\t\t\tif (j < contractsCount) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\tj++;"]}], "num": 63183}