{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63087fddbc17cfec8a1aa4e0a1475f40", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95ffcf83c8dc12192b28e750b41441e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t\t\t\t\t\t\t\tif ((result & ClasspathChange.HAS_LIBRARY_CHANGE) != 0) {", "+\t\t\t\t\t\t\t\t\t\tstate.addExternalFolderChange(change.project, change.oldResolvedClasspath);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tHashSet existingElements = this.state.removeExternalElementsToRefresh();", "-\t\t\t\t\t\t\t\tif (existingElements != null) {", "-\t\t\t\t\t\t\t\t\telementsToRefresh.addAll(existingElements);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tHashSet newElementsToRefresh = this.state.removeExternalElementsToRefresh();", "+\t\t\t\t\t\t\t\tif (newElementsToRefresh != null)", "+\t\t\t\t\t\t\t\t\telementsToRefresh.addAll(newElementsToRefresh);", "+\t\t\t\t// update external folders if necessary", "+\t\t\t    ExternalFolderChange[] folderChanges = this.state.removeExternalFolderChanges();", "+\t\t\t\tif (folderChanges != null) {", "+\t\t\t\t    for (int i = 0, length = folderChanges.length; i < length; i++) {", "+\t\t\t\t        try {", "+\t\t\t\t\t        folderChanges[i].updateExternalFoldersIfNecessary(null);", "+\t\t\t\t        } catch (JavaModelException e) {", "+\t\t\t\t        \tif (!e.isDoesNotExist())", "+\t\t\t\t        \t\tUtil.log(e, \"Exception while updating external folders\"); //$NON-NLS-1$", "+\t\t\t\t        }", "+\t\t\t\t    }", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t        \tif (!e.isDoesNotExist())", "+\t\t\t\t        \t\tUtil.log(e, \"Exception while updating project references\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963733d15519106423ef784b23c17264", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "6e412529e3c9d841ef857516943929ed94e3593c", "commitAfterChange": "cdf9b8e4c56a386ff2dde986be8b72d07aa1cb88", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\tcase IResourceChangeEvent.PRE_AUTO_BUILD :", "-\t\t\t\t\t// this.processPostChange = false;", "-\t\t\t\t\tif(isAffectedBy(delta)) { // avoid populating for SYNC or MARKER deltas", "-\t\t\t\t\t\tupdateClasspathMarkers(delta);", "-\t\t\t\t\t\tJavaBuilder.buildStarting();", "-\t\t\t\t\t}", "-\t\t\t\t\t// does not fire any deltas", "-\t\t\t\t\tbreak;", "-", "-\t\t\t\tcase IResourceChangeEvent.POST_AUTO_BUILD :", "-\t\t\t\t\tJavaBuilder.buildFinished();", "-\t\t\t\t\tbreak;", "-\t\t\t\t\t", "+\t\t\t\t\treturn;", "+\t\t\t\t\t", "+\t\t\t\tcase IResourceChangeEvent.PRE_AUTO_BUILD :", "+\t\t\t\t    DeltaProcessingState.ProjectUpdateInfo[] updates = this.state.removeAllProjectUpdates();", "+\t\t\t\t\tif (updates != null) {", "+\t\t\t\t\t    for (int i = 0, length = updates.length; i < length; i++) {", "+\t\t\t\t\t        try {", "+\t\t\t\t\t\t        updates[i].updateProjectReferencesIfNecessary();", "+\t\t\t\t\t        } catch(JavaModelException e) {", "+\t\t\t\t\t            // do nothing", "+\t\t\t\t\t        }", "+\t\t\t\t\t    }", "+\t\t\t\t\t}", "+\t\t\t\t\t// this.processPostChange = false;", "+\t\t\t\t\tif(isAffectedBy(delta)) { // avoid populating for SYNC or MARKER deltas", "+\t\t\t\t\t\tupdateClasspathMarkers(delta);", "+\t\t\t\t\t\tJavaBuilder.buildStarting();", "+\t\t\t\t\t}", "+\t\t\t\t\t// does not fire any deltas", "+\t\t\t\t\treturn;", "+", "+\t\t\t\tcase IResourceChangeEvent.POST_AUTO_BUILD :", "+\t\t\t\t\tJavaBuilder.buildFinished();", "+\t\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffd294c7263a2145b5b4f26ebb43c60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\t\tcheckProjectsBeingAddedOrRemoved(delta);", "+\t\t\t\t\t\t\tcheckProjectsAndClasspathChanges(delta);", "+", "+\t\t\t\t\t\t\t// generate external archive change deltas", "+\t\t\t\t\t\t\tif (elementsToRefresh != null) {", "+\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(elementsToRefresh, null);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// process late coming external elements to refresh (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=212769 )", "+\t\t\t\t\t\t\t\telementsToRefresh = this.state.removeExternalElementsToRefresh();", "+\t\t\t\t\t\t\t\tif (elementsToRefresh != null) {", "+\t\t\t\t\t\t\t\t\thasDelta |= createExternalArchiveDelta(elementsToRefresh, null);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-", "-\t\t\t\t\t\t\t// add late coming elements to refresh (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=212769 )", "-\t\t\t\t\t\t\tif (elementsToRefresh == null) {", "-\t\t\t\t\t\t\t\telementsToRefresh = this.state.removeExternalElementsToRefresh();", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tHashSet newElementsToRefresh = this.state.removeExternalElementsToRefresh();", "-\t\t\t\t\t\t\t\tif (newElementsToRefresh != null)", "-\t\t\t\t\t\t\t\t\telementsToRefresh.addAll(newElementsToRefresh);", "-\t\t\t\t\t\t\t}", "-", "-\t\t\t\t\t\t\t// generate external archive change deltas", "-\t\t\t\t\t\t\tif (elementsToRefresh != null) {", "-\t\t\t\t\t\t\t\tcreateExternalArchiveDelta(elementsToRefresh, null);"]}], "num": 36208}