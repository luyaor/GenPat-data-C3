{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a91e3e6e33656386642c85c9d1ca600", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16dc94863ca053e28c055e41c6e558e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "7b2270334c0bbb9df5c564108f1aff7085a06d0d", "commitAfterChange": "2193765f6a14f1428523dab68858768ca623c9d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["+\t\t\t\t\t// if the wildcard is lower-bounded by a type variable that has no relevant upper bound there's nothing to check here (bug 282152):", "+\t\t\t\t\tif (wildcard.bound.isTypeVariable() && ((TypeVariableBinding)wildcard.bound).superclass.id == TypeIds.T_JavaLangObject)", "+\t\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb3af4f9279726c8ad726183d663938", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "3561a65aa6894682f3ea9a6665dee82b18c3d4bf", "commitAfterChange": "0b12d287970a543efa74b3f16f5eaa0f1a0fc0f9", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic boolean isUpperbound()", "signatureAfterChange": " \tpublic boolean isUpperbound()", "diff": ["-\t\t// TODO (olivier) missing implementation of J2SE 1.5 language feature", "-\t\treturn false;", "+\t\treturn this.binding.isWildcard() && ((WildcardBinding) this.binding).kind == Wildcard.SUPER;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e4f7d9c6bb44e78b3c33e38e9bbbeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializationContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializationContext, \t\tFlowInfo flowInfo)", "diff": ["+\t\t\t// skip enum implicit methods", "+\t\t\tif (binding.declaringClass.isEnum() && (this.selector == TypeConstants.VALUES || this.selector == TypeConstants.VALUEOF))", "+\t\t\t\treturn;", "+", "-", "+\t\t\t"]}], "num": 43798}