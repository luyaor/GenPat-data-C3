{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bac4dafd0848f7110286fb4e6711fd0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdff8086231b624842b20b59cb4dab7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ThreadSafetyTests.java", "commitBeforeChange": "0c4df3b7ae51bae537a008281315a0b284492162", "commitAfterChange": "d3183838db02f64daed6afe0d19fa23bbbe5c6e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testDeadlock01() throws CoreException", "signatureAfterChange": " public void testDeadlock01() throws CoreException", "diff": ["-\t\tContainerInitializer.setInitializer(new ClasspathInitializerTests.DefaultContainerInitializer(new String[] {\"P\", \"\"}){", "-\t\t\tpublic void initialize(IPath containerPath, IJavaProject project) throws CoreException {", "-\t\t\t\tSystem.out.println(Thread.currentThread() + \"initializer has started: attempting to acquire workspace lock\");", "-\t\t\t\tsuper.initialize(containerPath, project);", "-\t\t\t\tSystem.out.println(Thread.currentThread() + \"initializer has finished\");", "-\t\t\t}", "-", "-\t\t});", "+\t\tContainerInitializer.setInitializer(new ClasspathInitializerTests.DefaultContainerInitializer(new String[] {\"P\", \"\"}){", "+\t\t\tpublic void initialize(IPath containerPath, IJavaProject project) throws CoreException {", "+\t\t\t\tpermissionToModifyResource.release();", "+\t\t\t\tSystem.out.println(Thread.currentThread() + \"initializer has started: attempting to acquire workspace lock\");", "+\t\t\t\tsuper.initialize(containerPath, project);", "+\t\t\t\tSystem.out.println(Thread.currentThread() + \"initializer has finished\");", "+\t\t\t}", "+", "+\t\t});", "+", "-\t\t\t\t\t\t\tpermissionToModifyResource.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2febf4e235dced337b338c3edd7974a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c8ca8bc0ed355b1996bc738eb2798ac55ee50894", "commitAfterChange": "702024139b0198e367688fa7a1f06bbaad0b6ba8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-        \t\tparamOffset = 1; // 0 is receiver, real parameters start at 1", "+        \tparamOffset = 1; // 0 is receiver, real parameters start at 1"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc82a2f0345f2ab6100b33b4eccd601a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "e56e767173dc5b5ba970e3e7ca9256e9541ebffc", "commitAfterChange": "071c3a7154f042f1dac67e366b91c1f1b510f2e9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected Object parseArguments(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprotected Object parseArguments(Object receiver) throws InvalidInputException", "diff": ["-\t\t\t\tint dimStart = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\tint dimStart = this.scanner.getCurrentTokenStartPosition();"]}], "num": 5483}