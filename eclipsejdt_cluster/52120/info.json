{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2db0a7f4e848586bb3b0dae098b97b4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0365c7c871887ddc7bc09dd4cc47f26c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tIBinding resolveReference(MemberRef ref)", "signatureAfterChange": " \tIBinding resolveReference(MemberRef ref)", "diff": ["-\t\t// TODO (frederic) missing implementation", "-\t\tthrow new RuntimeException(\"Missing implementation\"); //$NON-NLS-1$", "+\t\t/*", "+\t\tif (ref.getParent() != null) {", "+\t\t\tJavadoc docComment = ref.getJavadoc();", "+\t\t\tif (docComment != null) {", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Javadoc javadoc = (org.eclipse.jdt.internal.compiler.ast.Javadoc) this.newAstToOldAst.get(docComment);", "+\t\t\t\tif (javadoc != null) {", "+\t\t\t\t\tint start = ref.getStartPosition();", "+\t\t\t\t\t// search for compiler ast nodes with same position", "+\t\t\t\t\tif (ref.getName() == null) {", "+\t\t\t\t\t\tfor (int i=0; i<javadoc.thrownExceptions.length; i++) {", "+\t\t\t\t\t\t\tTypeReference typeRef = javadoc.thrownExceptions[i];", "+\t\t\t\t\t\t\tif (typeRef.sourceStart==start) {", "+\t\t\t\t\t\t\t\treturn getTypeBinding(typeRef.resolvedType);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int i=0; i<javadoc.references.length; i++) {", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = javadoc.references[i];", "+\t\t\t\t\t\tif (expression.sourceStart==start) {", "+\t\t\t\t\t\t\tif (expression instanceof TypeReference) {", "+\t\t\t\t\t\t\t\treturn getTypeBinding(expression.resolvedType);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\telse if (expression instanceof JavadocFieldReference) {", "+\t\t\t\t\t\t\t\treturn getVariableBinding(((JavadocFieldReference)expression).binding);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\t*/", "+\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = (org.eclipse.jdt.internal.compiler.ast.Expression) this.newAstToOldAst.get(ref);", "+\t\tif (expression instanceof TypeReference) {", "+\t\t\treturn getTypeBinding(expression.resolvedType);", "+\t\t}", "+\t\telse if (expression instanceof JavadocFieldReference) {", "+\t\t\treturn getVariableBinding(((JavadocFieldReference)expression).binding);", "+\t\t}", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85eaf8d4d8aaf46c968923f2e4fc3930", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tIBinding resolveReference(MethodRef ref)", "signatureAfterChange": " \tIBinding resolveReference(MethodRef ref)", "diff": ["-\t\t// TODO (frederic) missing implementation", "-\t\tthrow new RuntimeException(\"Missing implementation\"); //$NON-NLS-1$", "+\t\t/*", "+\t\tif (ref.getParent() != null) {", "+\t\t\tJavadoc docComment = ref.getJavadoc();", "+\t\t\tif (docComment != null) {", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Javadoc javadoc = (org.eclipse.jdt.internal.compiler.ast.Javadoc) this.newAstToOldAst.get(docComment);", "+\t\t\t\tif (javadoc != null) {", "+\t\t\t\t\tint start = ref.getStartPosition();", "+\t\t\t\t\t// search for compiler ast nodes with same position", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding binding = null;", "+\t\t\t\t\tfor (int i=0; binding==null && i<javadoc.references.length; i++) {", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = javadoc.references[i];", "+\t\t\t\t\t\tif (expression.sourceStart==start) {", "+\t\t\t\t\t\t\tif (expression instanceof JavadocMessageSend) {", "+\t\t\t\t\t\t\t\treturn this.getMethodBinding(((JavadocMessageSend)expression).binding);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\telse if (expression instanceof JavadocAllocationExpression) {", "+\t\t\t\t\t\t\t\treturn this.getMethodBinding(((JavadocAllocationExpression)expression).binding);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\t*/", "+\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = (org.eclipse.jdt.internal.compiler.ast.Expression) this.newAstToOldAst.get(ref);", "+\t\tif (expression instanceof JavadocMessageSend) {", "+\t\t\treturn this.getMethodBinding(((JavadocMessageSend)expression).binding);", "+\t\t}", "+\t\telse if (expression instanceof JavadocAllocationExpression) {", "+\t\t\treturn this.getMethodBinding(((JavadocAllocationExpression)expression).binding);", "+\t\t}", "+\t\treturn null;"]}], "num": 52120}