{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "420290da48da0e0d0159374749f85148", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6400a4939e58293621537f76f1e0ea21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "60e138d2828b37f2615e0cced57acea3adb47644", "commitAfterChange": "3c340a30d5ee47c28968789969de0fd1189f5b30", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (!(node instanceof TypeReference)) return false;\r", "-\r", "-\tTypeReference typeRef = (TypeReference)node;\r", "-\tif (!resolve) {\r", "-\t\tif (this.superSimpleName != null) {\r", "-\t\t\tchar[] typeRefSimpleName = null;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "-\t\t\t}\t\t\t\t\r", "-\t\t\tif (!this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "-\t\t\t\treturn false;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding binding = typeRef.binding;\r", "-\t\tif (binding != null && !this.matchesType(this.superSimpleName, this.superQualification, binding))\r", "-\t\t\treturn false;\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof TypeReference)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tTypeReference typeRef = (TypeReference)node;\r", "+\tif (resolve) {\r", "+\t\tTypeBinding binding = typeRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn this.matchLevelForType(this.superSimpleName, this.superQualification, binding);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (this.superSimpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tchar[] typeRefSimpleName = null;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "+\t\t\t}\t\t\t\t\r", "+\t\t\tif (this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "+\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\telse\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a51af460f06fe6e49785efac39faa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (!(node instanceof TypeReference)) return false;\r", "-\r", "-\tTypeReference typeRef = (TypeReference)node;\r", "-\tif (!resolve) {\r", "-\t\tif (this.superSimpleName != null) {\r", "-\t\t\tchar[] typeRefSimpleName = null;\r", "-\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "-\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "-\t\t\t} else { // QualifiedTypeReference\r", "-\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "-\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "-\t\t\t}\t\t\t\t\r", "-\t\t\tif (!this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "-\t\t\t\treturn false;\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding binding = typeRef.binding;\r", "-\t\tif (binding != null && !this.matchesType(this.superSimpleName, this.superQualification, binding))\r", "-\t\t\treturn false;\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (!(node instanceof TypeReference)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\tTypeReference typeRef = (TypeReference)node;\r", "+\tif (resolve) {\r", "+\t\tTypeBinding binding = typeRef.binding;\r", "+\t\tif (binding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn this.matchLevelForType(this.superSimpleName, this.superQualification, binding);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (this.superSimpleName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tchar[] typeRefSimpleName = null;\r", "+\t\t\tif (typeRef instanceof SingleTypeReference) {\r", "+\t\t\t\ttypeRefSimpleName = ((SingleTypeReference)typeRef).token;\r", "+\t\t\t} else { // QualifiedTypeReference\r", "+\t\t\t\tchar[][] tokens = ((QualifiedTypeReference)typeRef).tokens;\r", "+\t\t\t\ttypeRefSimpleName = tokens[tokens.length-1];\r", "+\t\t\t}\t\t\t\t\r", "+\t\t\tif (this.matchesName(this.superSimpleName, typeRefSimpleName))\r", "+\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\telse\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t}\r", "+}\r"]}], "num": 5778}