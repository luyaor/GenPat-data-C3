{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "932291f6580be826e372696620270734", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758d32a5d7c3f7f8cef0070ea71871e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testBug83127f()", "signatureAfterChange": " \tpublic void testBug83127f()", "diff": ["-\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\r\\n\" + ", "+\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\n\" + ", "-\t\t\t\"2. ERROR in Unrelated1.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tpublic Unrelated1(E e) {}\\r\\n\" + ", "+\t\t\t\"2. ERROR in Unrelated1.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic Unrelated1(E e) {}\\n\" + ", "-\t\t\t\"3. ERROR in Unrelated1.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tpublic boolean add(E e) { return false; }\\r\\n\" + ", "+\t\t\t\"3. ERROR in Unrelated1.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic boolean add(E e) { return false; }\\n\" + ", "-\t\t\t\"1. ERROR in Test.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#add(Number)\\r\\n\" + ", "+\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" + ", "+\t\t\t\"\t* @see Unrelated1#add(Number)\\n\" + ", "-\t\t\t\"Javadoc: The method add(Number) is undefined for the type Unrelated1\\n\" + ", "+\t\t\t\"Javadoc: The method add(E) in the type Unrelated1 is not applicable for the arguments (Number)\\n\" + ", "-\t\t\t\"2. ERROR in Test.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#Unrelated1(Number)\\r\\n\" + ", "+\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "+\t\t\t\"\t* @see Unrelated1#Unrelated1(Number)\\n\" + ", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\r\\n\" + ", "-\t\t\t\"\tpublic class Test<T>{\\r\\n\" + ", "+\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" + ", "+\t\t\t\"\tpublic class Test<T>{\\n\" + ", "-\t\t\t\"4. ERROR in Test.java (at line 9)\\r\\n\" + ", "-\t\t\t\"\tTest(T t) {}\\r\\n\" + ", "+\t\t\t\"4. ERROR in Test.java (at line 9)\\n\" + ", "+\t\t\t\"\tTest(T t) {}\\n\" + ", "-\t\t\t\"5. ERROR in Test.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\tpublic boolean add(T t) {\\r\\n\" + ", "+\t\t\t\"5. ERROR in Test.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic boolean add(T t) {\\n\" + ", "-\t\t\t\"6. ERROR in Test.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\r\\n\" + ", "+\t\t\t\"6. ERROR in Test.java (at line 14)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"7. ERROR in Test.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\r\\n\" + ", "+\t\t\t\"7. ERROR in Test.java (at line 14)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"8. ERROR in Test.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\r\\n\" + ", "+\t\t\t\"8. ERROR in Test.java (at line 14)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"9. ERROR in Test.java (at line 15)\\r\\n\" + ", "-\t\t\t\"\tSub (E e) {super(null);}\\r\\n\" + ", "+\t\t\t\"9. ERROR in Test.java (at line 15)\\n\" + ", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" + ", "-\t\t\t\"10. ERROR in Test.java (at line 15)\\r\\n\" + ", "-\t\t\t\"\tSub (E e) {super(null);}\\r\\n\" + ", "+\t\t\t\"10. ERROR in Test.java (at line 15)\\n\" + ", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" + ", "-\t\t\t\"The constructor Object(null) is undefined\\n\" + ", "+\t\t\t\"The constructor Test(T) refers to the missing type T\\n\" + ", "-\t\t\t\"11. ERROR in Test.java (at line 16)\\r\\n\" + ", "-\t\t\t\"\tpublic boolean add(E e) {\\r\\n\" + ", "+\t\t\t\"11. ERROR in Test.java (at line 16)\\n\" + ", "+\t\t\t\"\tpublic boolean add(E e) {\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9977560e173e50ee735cf0cefb68ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testBug83127f()", "signatureAfterChange": " \tpublic void testBug83127f()", "diff": ["-\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\r\\n\" + ", "+\t\t\t\"1. ERROR in Unrelated1.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class Unrelated1<E extends Number> {\\n\" + ", "-\t\t\t\"2. ERROR in Unrelated1.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tpublic Unrelated1(E e) {}\\r\\n\" + ", "+\t\t\t\"2. ERROR in Unrelated1.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic Unrelated1(E e) {}\\n\" + ", "-\t\t\t\"3. ERROR in Unrelated1.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tpublic boolean add(E e) { return false; }\\r\\n\" + ", "+\t\t\t\"3. ERROR in Unrelated1.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic boolean add(E e) { return false; }\\n\" + ", "-\t\t\t\"1. ERROR in Test.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#add(Number)\\r\\n\" + ", "+\t\t\t\"1. ERROR in Test.java (at line 2)\\n\" + ", "+\t\t\t\"\t* @see Unrelated1#add(Number)\\n\" + ", "-\t\t\t\"Javadoc: The method add(Number) is undefined for the type Unrelated1\\n\" + ", "+\t\t\t\"Javadoc: The method add(E) in the type Unrelated1 is not applicable for the arguments (Number)\\n\" + ", "-\t\t\t\"2. ERROR in Test.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\t* @see Unrelated1#Unrelated1(Number)\\r\\n\" + ", "+\t\t\t\"2. ERROR in Test.java (at line 3)\\n\" + ", "+\t\t\t\"\t* @see Unrelated1#Unrelated1(Number)\\n\" + ", "-\t\t\t\"3. ERROR in Test.java (at line 8)\\r\\n\" + ", "-\t\t\t\"\tpublic class Test<T>{\\r\\n\" + ", "+\t\t\t\"3. ERROR in Test.java (at line 8)\\n\" + ", "+\t\t\t\"\tpublic class Test<T>{\\n\" + ", "-\t\t\t\"4. ERROR in Test.java (at line 9)\\r\\n\" + ", "-\t\t\t\"\tTest(T t) {}\\r\\n\" + ", "+\t\t\t\"4. ERROR in Test.java (at line 9)\\n\" + ", "+\t\t\t\"\tTest(T t) {}\\n\" + ", "-\t\t\t\"5. ERROR in Test.java (at line 10)\\r\\n\" + ", "-\t\t\t\"\tpublic boolean add(T t) {\\r\\n\" + ", "+\t\t\t\"5. ERROR in Test.java (at line 10)\\n\" + ", "+\t\t\t\"\tpublic boolean add(T t) {\\n\" + ", "-\t\t\t\"6. ERROR in Test.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\r\\n\" + ", "+\t\t\t\"6. ERROR in Test.java (at line 14)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"7. ERROR in Test.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\r\\n\" + ", "+\t\t\t\"7. ERROR in Test.java (at line 14)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"8. ERROR in Test.java (at line 14)\\r\\n\" + ", "-\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\r\\n\" + ", "+\t\t\t\"8. ERROR in Test.java (at line 14)\\n\" + ", "+\t\t\t\"\tclass Sub<E extends Number> extends Test<E> {\\n\" + ", "-\t\t\t\"9. ERROR in Test.java (at line 15)\\r\\n\" + ", "-\t\t\t\"\tSub (E e) {super(null);}\\r\\n\" + ", "+\t\t\t\"9. ERROR in Test.java (at line 15)\\n\" + ", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" + ", "-\t\t\t\"10. ERROR in Test.java (at line 15)\\r\\n\" + ", "-\t\t\t\"\tSub (E e) {super(null);}\\r\\n\" + ", "+\t\t\t\"10. ERROR in Test.java (at line 15)\\n\" + ", "+\t\t\t\"\tSub (E e) {super(null);}\\n\" + ", "-\t\t\t\"The constructor Object(null) is undefined\\n\" + ", "+\t\t\t\"The constructor Test(T) refers to the missing type T\\n\" + ", "-\t\t\t\"11. ERROR in Test.java (at line 16)\\r\\n\" + ", "-\t\t\t\"\tpublic boolean add(E e) {\\r\\n\" + ", "+\t\t\t\"11. ERROR in Test.java (at line 16)\\n\" + ", "+\t\t\t\"\tpublic boolean add(E e) {\\n\" + "]}], "num": 69739}