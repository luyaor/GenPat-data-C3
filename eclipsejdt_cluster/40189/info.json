{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5398f17c321f87d341afca4889c893a7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a8ff00c64586e1638e91db1c8d2d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "commitAfterChange": "f5884fa8b0573c548eaeabaa37cd99c51e41fd3b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "signatureAfterChange": " MethodBinding inferInvocationType(Invocation invocation, TypeBinding[] argumentTypes, ParameterizedGenericMethodBinding method)", "diff": ["-\t\tboolean inferredInvocationType = false;", "-\t\tif (targetType != null || !invocation.getExpressionContext().definesTargetType()) {", "+\t\tif (haveProperTargetType || !invocation.getExpressionContext().definesTargetType()) {", "-\t\t\t\t\tinferredInvocationType = true;", "-\t\tif (inferredInvocationType) {", "+\t\tif (!haveProperTargetType && invocation.getExpressionContext().definesTargetType())", "+\t\t\treturn method; // still not ready!", "+", "+\t\tif (finalMethod != null) {", "-\t\t} else if (!haveProperTargetType && invocation.getExpressionContext().definesTargetType()) {", "-\t\t\treturn method; // still not ready!"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcaf5028132e52d8aa3805f9c7b6b8b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods)", "signatureAfterChange": " public BinaryTypeBinding createBinaryTypeFrom(IBinaryType binaryType, PackageBinding packageBinding, boolean needFieldsAndMethods)", "diff": ["-\t\tUnresolvedReferenceBinding unresolvedType = (UnresolvedReferenceBinding) cachedType;", "-\t\tunresolvedType.resolvedType = binaryBinding;", "-\t\tupdateArrayCache(unresolvedType, binaryBinding);", "+\t\t((UnresolvedReferenceBinding) cachedType).setResolvedType(binaryBinding, this);"]}], "num": 40189}