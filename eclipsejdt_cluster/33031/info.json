{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e25d3d581a9759226c89a2626f4826f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310f9dc0e0ecb120fe262d4c2915c724", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "commitAfterChange": "dbd0d1d22c0c3005a7b77030231806c749e2cebd", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_opening_paren_in_method_declaration); ", "+\t\tboolean spaceBeforeParen = this.preferences.insert_space_before_opening_paren_in_method_declaration;", "+\t\tif (node.isConstructor()) {", "+\t\t\tspaceBeforeParen = this.preferences.insert_space_before_opening_paren_in_constructor_declaration;", "+\t\t}", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, spaceBeforeParen); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a42aeb38ef60cd7e1bef61a63143391", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "5a88f6644c0454e2aeddcfeff61f92e0af6ee853", "commitAfterChange": "fbe3f3aabed3fd943703368b065a95bc68cf5a8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "signatureAfterChange": "\r \tprotected NameEnvironmentAnswer find(String typeName, String packageName)", "diff": ["-\r", "+\t\t\t\t\tISourceType topLevelType = sourceType;\r", "+\t\t\t\t\twhile (topLevelType.getEnclosingType() != null) {\r", "+\t\t\t\t\t\ttopLevelType = topLevelType.getEnclosingType();\r", "+\t\t\t\t\t}\r", "-\t\t\t\t\t\tif (!otherType.equals(sourceType))\r", "+\t\t\t\t\t\tif (!otherType.equals(topLevelType))\r"]}], "num": 33031}