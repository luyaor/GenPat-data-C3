{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c4d52db4ecd59cf9835823d46ac6bac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad93ab2efa46ac5fc954684c722502e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "7e8c39a9e3d7dea3d8b022efbc3b049165785892", "commitAfterChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test011()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["+", "+\tpublic void test001() { // constant cases of base type -> Number", "+\t\t// int -> Integer", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(1);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Integer i) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// byte -> Byte", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest((byte)127);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Byte b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// char -> Character", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest('b');\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Character c) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// float -> Float", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(-0.0f);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Float f) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// double -> Double", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(0.0);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Double d) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// long -> Long", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(Long.MAX_VALUE);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Long l) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// short -> Short", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(Short.MAX_VALUE);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Short s) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// boolean -> Boolean", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(false);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Boolean b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t}", "-\tpublic void test011() { // autoboxing method is chosen over private exact match & visible varargs method", "-\t\t// constant cases", "-\t\t// int -> Integer", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tnew Y().test(1);\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate void test(int i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tvoid test(int... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic void test(Integer i) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// byte -> Byte", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test((byte)127);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(byte i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(byte... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Byte b) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// char -> Character", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test('b');\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(char i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(char... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Character c) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// float -> Float", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(-0.0f);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(float f) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(float... f) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Float f) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// double -> Double", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(0.0);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(double d) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(double... d) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Double d) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// long -> Long", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(Long.MAX_VALUE);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(long l) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(long... l) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Long l) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// short -> Short", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(Short.MAX_VALUE);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(short s) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(short... s) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Short s) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// boolean -> Boolean", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(false);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(boolean b) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(boolean... b) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Boolean b) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ad6fecd7e7fff552fbccd9ce2a12fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "7e8c39a9e3d7dea3d8b022efbc3b049165785892", "commitAfterChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test008()", "signatureAfterChange": "  \tpublic void test002()", "diff": ["+", "+\tpublic void test002() { // non constant cases of base type -> Number", "+\t\t// int -> Integer", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static int bar() {return 1;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Integer i) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// byte -> Byte", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static byte bar() {return 1;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Byte b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// char -> Character", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static char bar() {return 'c';}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Character c) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// float -> Float", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static float bar() {return 0.0f;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Float f) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// double -> Double", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static double bar() {return 0.0;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Double d) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// long -> Long", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static long bar() {return 0;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Long l) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// short -> Short", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static short bar() {return 0;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Short s) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// boolean -> Boolean", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static boolean bar() {return true;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(Boolean b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t}", "-\tpublic void test008() { // autoboxing method is chosen over private exact match & visible varargs method", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static int bar() {return 1;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(int i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(int... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Integer i) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// int -> Integer", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static int bar() {return 1;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tnew Y().test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate void test(int i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tvoid test(int... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic void test(Integer i) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// byte -> Byte", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static byte bar() {return 1;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(byte i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(byte... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Byte b) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// char -> Character", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static char bar() {return 'c';}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(char i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(char... i) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Character c) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// float -> Float", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static float bar() {return 0.0f;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(float f) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(float... f) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Float f) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// double -> Double", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static double bar() {return 0.0;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(double d) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(double... d) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Double d) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// long -> Long", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static long bar() {return 0;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(long l) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(long... l) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Long l) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// short -> Short", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static short bar() {return 0;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(short s) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(short... s) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Short s) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t\t// boolean -> Boolean", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static boolean bar() {return true;}\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tY.test(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tprivate static void test(boolean b) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tstatic void test(boolean... b) { System.out.print('n'); }\\n\" +", "-\t\t\t\t\"\tpublic static void test(Boolean b) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t}"]}], "num": 4023}