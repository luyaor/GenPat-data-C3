{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0808cd59be5cab034f24403867a647d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03340378cc21108772e80164ee1ce56c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java", "commitBeforeChange": "66d9e86b4ff0c6095949f938b3e13495d2816b6d", "commitAfterChange": "8d5c22dc795489d8707a2c2212ce9020aac94b9f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "            public static void makeDerivedParentFolders (IContainer container) throws CoreException", "signatureAfterChange": "            public static synchronized void makeDerivedParentFolders (IContainer container) throws CoreException", "diff": ["-    public static void makeDerivedParentFolders (IContainer container) throws CoreException {", "+    public static synchronized void makeDerivedParentFolders (IContainer container) throws CoreException {", "-    \tsynchronized(container.getProject()) {", "-\t\t\tif ((container instanceof IFolder) && !container.exists()) {", "-\t\t\t\tmakeDerivedParentFolders(container.getParent());", "-\t\t    \ttry {", "-\t\t    \t\t((IFolder)container).create(true, true, null);", "-\t\t    \t}", "-\t\t    \tcatch (CoreException e) {", "-\t\t    \t\t// Ignore race condition where another thread created the folder at the", "-\t\t    \t\t// same time, causing checkDoesNotExist() to throw within create(). ", "-\t\t    \t\tif (!container.exists()) {", "-\t\t    \t\t\tthrow e;", "-\t\t    \t\t}", "-\t\t    \t}", "-\t\t\t\tcontainer.setDerived(true);", "-\t\t\t}", "-    \t}", "+\t\tif ((container instanceof IFolder) && !container.exists()) {", "+\t\t\tmakeDerivedParentFolders(container.getParent());", "+\t    \ttry {", "+\t    \t\t((IFolder)container).create(true, true, null);", "+\t    \t}", "+\t    \tcatch (CoreException e) {", "+\t    \t\t// Ignore race condition where another thread created the folder at the", "+\t    \t\t// same time, causing checkDoesNotExist() to throw within create(). ", "+\t    \t\tif (!container.exists()) {", "+\t    \t\t\tthrow e;", "+\t    \t\t}", "+\t    \t}", "+\t\t\tcontainer.setDerived(true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40d923a25c8f809d778674cbf91ed0d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java", "commitBeforeChange": "b32e19a51dc51c8f48a8148ad21af35d765d650d", "commitAfterChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "            public static void makeDerivedParentFolders (IContainer container) throws CoreException", "signatureAfterChange": "            public static void makeDerivedParentFolders (IContainer container) throws CoreException", "diff": ["-\t\tif ((container instanceof IFolder) && !container.exists()) {", "-\t\t\tmakeDerivedParentFolders(container.getParent());", "-\t\t\t((IFolder) container).create(true, true, null);", "-\t\t\tcontainer.setDerived(true);", "-\t\t}", "+    \t// synchronize the \"does it exist - if not, create it\" sequence.", "+    \tsynchronized(container.getProject()) {", "+\t\t\tif ((container instanceof IFolder) && !container.exists()) {", "+\t\t\t\tmakeDerivedParentFolders(container.getParent());", "+\t\t    \ttry {", "+\t\t    \t\t((IFolder)container).create(true, true, null);", "+\t\t    \t}", "+\t\t    \tcatch (CoreException e) {", "+\t\t    \t\t// Ignore race condition where another thread created the folder at the", "+\t\t    \t\t// same time, causing checkDoesNotExist() to throw within create(). ", "+\t\t    \t\tif (!container.exists()) {", "+\t\t    \t\t\tthrow e;", "+\t\t    \t\t}", "+\t\t    \t}", "+\t\t\t\tcontainer.setDerived(true);", "+\t\t\t}", "+    \t}"]}], "num": 40676}