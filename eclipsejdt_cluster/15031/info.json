{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "165d2b54e68873c9a64dbb9ae5dc3bfd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c3745e2d5955b3243beee323abf1d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": " \t \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["+\t\t\tif (this.typeArguments != null) {", "+\t\t\t\tfor (int i = 0, typeArgumentsLength = this.typeArguments.length; i < typeArgumentsLength; i++) {", "+\t\t\t\t\tthis.typeArguments[i].traverse(visitor, scope);", "+\t\t\t\t}\t\t\t\t\t", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1d7142a8f04978d2e0c326367c7827d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": "  \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["+\t\t\tif (this.typeArguments != null) {", "+\t\t\t\tfor (int i = 0, typeArgumentsLength = this.typeArguments.length; i < typeArgumentsLength; i++) {", "+\t\t\t\t\tthis.typeArguments[i].traverse(visitor, scope);", "+\t\t\t\t}\t\t\t", "+\t\t\t}"]}], "num": 15031}