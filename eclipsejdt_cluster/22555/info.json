{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fbfdcf59a374a83a07eaa0acb61a80d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76258bb78423469c160c7044d80ba36c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "3c5f4a72fa40d161c5df0c986d4c60e32d52f863", "commitAfterChange": "98204916425a6241634af08472ba583f090f0116", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": "  \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\tint tabWidthVal;", "-\t\ttry {", "-\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));", "-\t\t} catch (NumberFormatException e) {", "-\t\t\ttabWidthVal= 4;", "-\t\t}", "-\t\tthis.tabWidth= tabWidthVal;", "-\t\t", "-\t\tString indent;", "-\t\tString code= \"x\"; //$NON-NLS-1$", "-    \tTextEdit edit= formatString(CodeFormatter.K_EXPRESSION, code, 1, \"\", options); //$NON-NLS-1$", "-    \tif (edit != null) {", "-    \t\tString str= evaluateFormatterEdit(code, edit, null);", "-    \t\tindent= str.substring(0, str.indexOf(code));", "-    \t} else {", "-    \t   indent= String.valueOf('\\t');", "-    \t}", "-\t\tthis.singleIndentString= indent;", "+\t\tthis.tabWidth= Indents.getTabWidth(options);", "+\t\tthis.indentWidth= Indents.getIndentWidth(options, this.tabWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55b0df895a2c8dc4d5bbb7cbe4c22ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "1f25db82a90d7dfb41e186c23361a31470988684", "commitAfterChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": "  \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\tint tabWidthVal;", "-\t\ttry {", "-\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));", "-\t\t} catch (NumberFormatException e) {", "-\t\t\ttabWidthVal= 4;", "-\t\t}", "-\t\tthis.tabWidth= tabWidthVal;", "-\t\t", "-\t\tString indent;", "-\t\tString code= \"x\"; //$NON-NLS-1$", "-    \tTextEdit edit= formatString(CodeFormatter.K_EXPRESSION, code, 1, \"\", options); //$NON-NLS-1$", "-    \tif (edit != null) {", "-    \t\tString str= evaluateFormatterEdit(code, edit, null);", "-    \t\tindent= str.substring(0, str.indexOf(code));", "-    \t} else {", "-    \t   indent= String.valueOf('\\t');", "-    \t}", "-\t\tthis.singleIndentString= indent;", "+\t\tthis.tabWidth= Indents.getTabWidth(options);", "+\t\tthis.indentWidth= Indents.getIndentWidth(options, this.tabWidth);"]}], "num": 22555}