{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb8bcd5ce7325eed306335b61e6fc7f2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da0abc02a82ae986c6697b33fe66f8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tNullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);", "+\t\t\t\t\t\t\tNullAnnotationMatching.checkForContradictions(methodSubstitute, invocationSite, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f05a6a10d8c13e6675ae7c234b1f531", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "commitAfterChange": "2575bc1675526f9cf1bae80cf41843bf7eedd3c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "signatureAfterChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "diff": ["-\t\t\t\t\t\t\t\t\tmethodSubstitute = NullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);", "+\t\t\t\t\t\t\t\t\tNullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);"]}], "num": 61183}