{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3c0e3833f6a4b44462207c1d3204aa1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09b5441e2413ca0035884c854dd71fad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "3f4ac95948529c4150137c4866b44d6886a4fa9f", "commitAfterChange": "3ca2ab537229133d63619d22fd59715982e2fa03", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " protected void consumeFieldDeclaration()", "signatureAfterChange": " protected void consumeFieldDeclaration()", "diff": ["-\t\t\tcurrentElement = currentElement.parent;", "+\t\t\tif (!(currentElement instanceof RecoveredInitializer)) {", "+\t\t\t\tcurrentElement = currentElement.parent;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171f21f612c988a93c15750084b30bba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "848e612d33c010bc83985e60213e8fbc07d0fc75", "commitAfterChange": "ca9a57c5f68a174c74c1b92dc788a50b6c83720c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " protected void consumeMethodHeaderParameters()", "signatureAfterChange": " protected void consumeMethodHeaderParameters()", "diff": ["-\t\t\tRecoveredMethod recoveredMethod = (RecoveredMethod)currentElement;", "-\t\t\t/* filter out cases where scanner is still inside type header */", "-\t\t\tif (!recoveredMethod.foundOpeningBrace) {", "-\t\t\t\tAbstractMethodDeclaration method = recoveredMethod.methodDeclaration;", "-\t\t\t\tif(method.thrownExceptions == null", "-\t\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.THROWS)) {", "-\t\t\t\t\tCompletionOnKeyword1 completionOnKeyword = new CompletionOnKeyword1(", "-\t\t\t\t\t\tidentifierStack[index],", "-\t\t\t\t\t\tidentifierPositionStack[index],", "-\t\t\t\t\t\tKeywords.THROWS);", "-\t\t\t\t\tmethod.thrownExceptions = new TypeReference[]{completionOnKeyword};", "-\t\t\t\t\trecoveredMethod.foundOpeningBrace = true;", "-\t\t\t\t\tthis.assistNode = completionOnKeyword;", "-\t\t\t\t\tthis.lastCheckPoint = completionOnKeyword.sourceEnd + 1;", "+\t\t\tif (currentElement instanceof RecoveredMethod){", "+\t\t\t\tRecoveredMethod recoveredMethod = (RecoveredMethod)currentElement;", "+\t\t\t\t/* filter out cases where scanner is still inside type header */", "+\t\t\t\tif (!recoveredMethod.foundOpeningBrace) {", "+\t\t\t\t\tAbstractMethodDeclaration method = recoveredMethod.methodDeclaration;", "+\t\t\t\t\tif(method.thrownExceptions == null", "+\t\t\t\t\t\t&& CharOperation.prefixEquals(identifierStack[index], Keywords.THROWS)) {", "+\t\t\t\t\t\tCompletionOnKeyword1 completionOnKeyword = new CompletionOnKeyword1(", "+\t\t\t\t\t\t\tidentifierStack[index],", "+\t\t\t\t\t\t\tidentifierPositionStack[index],", "+\t\t\t\t\t\t\tKeywords.THROWS);", "+\t\t\t\t\t\tmethod.thrownExceptions = new TypeReference[]{completionOnKeyword};", "+\t\t\t\t\t\trecoveredMethod.foundOpeningBrace = true;", "+\t\t\t\t\t\tthis.assistNode = completionOnKeyword;", "+\t\t\t\t\t\tthis.lastCheckPoint = completionOnKeyword.sourceEnd + 1;", "+\t\t\t\t\t}"]}], "num": 60931}