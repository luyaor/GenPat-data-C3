{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12f08c141c72060c564918fb37493a33", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f05e725f51a667581c9ade36eaf877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (conditionExpression == null ? 0 : getExpression().treeSize())", "-\t\t\t+ (thenExpression == null ? 0 : getThenExpression().treeSize())", "-\t\t\t+ (elseExpression == null ? 0 : getElseExpression().treeSize());", "+\t\t\t+ (this.conditionExpression == null ? 0 : getExpression().treeSize())", "+\t\t\t+ (this.thenExpression == null ? 0 : getThenExpression().treeSize())", "+\t\t\t+ (this.elseExpression == null ? 0 : getElseExpression().treeSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180e06816c28150d45cbf413e808d08f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "073796394f294ba7eab5f5cbada70afdb33efe72", "commitAfterChange": "cfde3d60e6a6710e15dcac66faccc818a5f2f8fd", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tprotected void setUp () throws Exception", "signatureAfterChange": " \tprotected void setUp () throws Exception", "diff": ["-\t\tif (discard) {", "-\t\t\tworkingCopies = null;", "+\t\tif (this.discard) {", "+\t\t\tthis.workingCopies = null;", "-\t\tdiscard = true;", "+\t\tthis.discard = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6ed276fb96e9b8765094575dd46def", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t\tpublic boolean hasNext()", "signatureAfterChange": " \t\t\tpublic boolean hasNext()", "diff": ["-\t\t\t\treturn position < store.size();", "+\t\t\t\treturn this.position < NodeList.this.store.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21cb3ad47e0b65da01a832d586c44f09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "7daf62bc284b30571754ce8d7fd5c3a7c9740dcb", "commitAfterChange": "b8c9923212bd9598e5d2ca68e0dc316b81a3eccb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void run()", "signatureAfterChange": " \tpublic void run()", "diff": ["-\t\t\t\t\t\texecuting = true;", "+\t\t\t\t\t\tthis.executing = true;", "-\t\t\t\t\t\texecuting = false;", "+\t\t\t\t\t\tthis.executing = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "289443e2dd2ddca62d2b8f77404c0bc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayCreation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (arrayType == null ? 0 : getType().treeSize())", "-\t\t\t+ (optionalInitializer == null ? 0 : getInitializer().treeSize())", "-\t\t\t+ dimensions.listSize();", "+\t\t\t+ (this.arrayType == null ? 0 : getType().treeSize())", "+\t\t\t+ (this.optionalInitializer == null ? 0 : getInitializer().treeSize())", "+\t\t\t+ this.dimensions.listSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b1fef0efad22f0939b753ecbf615dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "af5208ad650bb16626635d58b15cab85ed3b6304", "commitAfterChange": "45055dc97c3da6c433b9c6b3534e9f01054887be", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private IGenericType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IGenericType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\tfor (int t = typeIndex; t >= 0; t--) {", "-\t\t\tif (typeBindings[t] == superBinding) {", "-\t\t\t\treturn typeModels[t];", "+\t\tfor (int t = this.typeIndex; t >= 0; t--) {", "+\t\t\tif (this.typeBindings[t] == superBinding) {", "+\t\t\t\treturn this.typeModels[t];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "307454c7e18281dfec6ef7ac29d00b92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " protected void consumeExpressionStatement()", "signatureAfterChange": " protected void consumeExpressionStatement()", "diff": ["-\texpressionLengthPtr--;", "-\tpushOnAstStack(expressionStack[expressionPtr--]);", "+\tthis.expressionLengthPtr--;", "+\tpushOnAstStack(this.expressionStack[this.expressionPtr--]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a7292340f2be09dc101f22d285f87ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["-\t\tflushCommentsDefinedPriorTo(endStatementPosition); // discard obsolete comments during recovery", "+\t\tflushCommentsDefinedPriorTo(this.endStatementPosition); // discard obsolete comments during recovery", "-\t\twhile (lastComment >= 0 && this.scanner.commentStarts[lastComment] > modifiersSourceStart) lastComment--;", "+\t\twhile (lastComment >= 0 && this.scanner.commentStarts[lastComment] > this.modifiersSourceStart) lastComment--;", "-\t\tthis.modifiersSourceStart = scanner.commentStarts[0]; ", "+\t\tthis.modifiersSourceStart = this.scanner.commentStarts[0]; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bd2449e91105baac28c021d456f32eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public TypeDeclarationPattern( \tchar[] pkg, \tchar[][] enclosingTypeNames, \tchar[] simpleName, \tchar classOrInterface, \tint matchRule)", "signatureAfterChange": "  public TypeDeclarationPattern( \tchar[] pkg, \tchar[][] enclosingTypeNames, \tchar[] simpleName, \tchar classOrInterface, \tint matchRule)", "diff": ["-\tif (isCaseSensitive || enclosingTypeNames == null) {", "+\tif (this.isCaseSensitive || enclosingTypeNames == null) {", "-\t", "-\tthis.mustResolve = pkg != null && enclosingTypeNames != null;", "+", "+\tthis.mustResolve = this.pkg != null && this.enclosingTypeNames != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f91d5a7af91764e19f5573c481f540a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (optionalExpression == null ? 0 : getExpression().treeSize())", "-\t\t\t+ (methodName == null ? 0 : getName().treeSize())", "-\t\t\t+ arguments.listSize();", "+\t\t\t+ (this.optionalExpression == null ? 0 : getExpression().treeSize())", "+\t\t\t+ (this.methodName == null ? 0 : getName().treeSize())", "+\t\t\t+ this.arguments.listSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40094ac65fcef561ff2276e7cdcf2a39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " protected void consumeStatementBreak()", "signatureAfterChange": " protected void consumeStatementBreak()", "diff": ["-\tpushOnAstStack(new BreakStatement(null, intStack[intPtr--], endPosition));", "+\tpushOnAstStack(new BreakStatement(null, this.intStack[this.intPtr--], this.endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a08ba07d2df295b897ddb9a75849f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayNameSuper()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayNameSuper()", "diff": ["-\t\t\tintStack[intPtr--],", "-\t\t\tendPosition));", "+\t\t\tthis.intStack[this.intPtr--],", "+\t\t\tthis.endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e11f4dc704da79febac3a9cd7771bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\tCursor newCursor()", "signatureAfterChange": " \t\tCursor newCursor()", "diff": ["-\t\t\tif (cursors == null) {", "+\t\t\tif (this.cursors == null) {", "-\t\t\t\tcursors = new ArrayList(1);", "+\t\t\t\tthis.cursors = new ArrayList(1);", "-\t\t\tcursors.add(result);", "+\t\t\tthis.cursors.add(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43210ca86c9fdc2a785fc68671efbef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "signatureAfterChange": " \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "diff": ["-\t\tif(uninterestingBindings != null) {", "-\t\t\tfor (int i = 0; i <= uninterestingBindingsPtr; i++) {", "-\t\t\t\tif(uninterestingBindings[i] == binding) {", "+\t\tif(this.uninterestingBindings != null) {", "+\t\t\tfor (int i = 0; i <= this.uninterestingBindingsPtr; i++) {", "+\t\t\t\tif(this.uninterestingBindings[i] == binding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459c52758bc6e431c6884f28fba20843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public boolean isLocal()", "signatureAfterChange": "\r public boolean isLocal()", "diff": ["-\treturn innerInfo != null && innerInfo.getEnclosingTypeName() == null && innerInfo.getSourceName() != null;\r", "+\treturn this.innerInfo != null && this.innerInfo.getEnclosingTypeName() == null && this.innerInfo.getSourceName() != null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c88770fbde6b2c4e6852ba919addec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/InnerClassInfo.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public InnerClassInfo(byte classFileBytes[], int offsets[], int offset)", "signatureAfterChange": "  public InnerClassInfo(byte classFileBytes[], int offsets[], int offset)", "diff": ["+", "-\tsuper(classFileBytes, offset);", "-\tconstantPoolOffsets = offsets;", "-\tinnerClassNameIndex = u2At(0);", "-\touterClassNameIndex = u2At(2);", "+\tsuper(classFileBytes, offsets, offset);", "+\tthis.innerClassNameIndex = u2At(0);", "+\tthis.outerClassNameIndex = u2At(2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1f2663c30fb3fdb9caa86d0681b769", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "fcc72e46b744ea79a152e24a7ffac0f0901b7400", "commitAfterChange": "06a3d951c7ec6b39762293a6177f305ce0f3f22c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic ITypeBinding getType()", "signatureAfterChange": " \tpublic ITypeBinding getType()", "diff": ["-\t\tif (type == null) {", "-\t\t\ttype = this.resolver.getTypeBinding(this.binding.type);", "+\t\tif (this.type == null) {", "+\t\t\tthis.type = this.resolver.getTypeBinding(this.binding.type);", "-\t\treturn type;", "+\t\treturn this.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58530cefce7966bbcfca65d0c63ef647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  public void resolve(ClassScope upperScope)", "diff": ["+", "+public void resolve(ClassScope upperScope) {", "+\t// member scopes are already created", "+\t// request the construction of a binding if local member type", "+", "+\tif (this.binding != null && this.binding instanceof LocalTypeBinding) {", "+\t\t// remember local types binding for innerclass emulation propagation", "+\t\tupperScope.referenceCompilationUnit().record((LocalTypeBinding)this.binding);", "+\t}", "+\tresolve();", "+\tupdateMaxFieldCount();", "+}", "-\t", "-\tpublic void resolve(ClassScope upperScope) {", "-\t\t// member scopes are already created", "-\t\t// request the construction of a binding if local member type", "-", "-\t\tif (binding != null && binding instanceof LocalTypeBinding) {", "-\t\t\t// remember local types binding for innerclass emulation propagation", "-\t\t\tupperScope.referenceCompilationUnit().record((LocalTypeBinding)binding);", "-\t\t}", "-\t\tresolve();", "-\t\tupdateMaxFieldCount();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599e12c8704f3174556904a5b8ac2420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic SingleNameReference(char[] source, long pos)", "signatureAfterChange": " \t public SingleNameReference(char[] source, long pos)", "diff": ["-\tpublic SingleNameReference(char[] source, long pos) {", "-\t\tsuper();", "-\t\ttoken = source;", "-\t\tsourceStart = (int) (pos >>> 32);", "-\t\tsourceEnd = (int) pos;", "-\t}", "+public SingleNameReference(char[] source, long pos) {", "+\tsuper();", "+\tthis.token = source;", "+\tthis.sourceStart = (int) (pos >>> 32);", "+\tthis.sourceEnd = (int) pos;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bac5a22cbe9f74b3895d44987c36c8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t */", "-\tpublic void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired) {", "-\t", "-\t\tthis.generateCompoundAssignment(", "-\t\t\tcurrentScope, ", "-\t\t\tcodeStream, ", "-\t\t\tsyntheticAccessors == null ? null : syntheticAccessors[WRITE],", "-\t\t\texpression,", "-\t\t\toperator, ", "-\t\t\tassignmentImplicitConversion, ", "-\t\t\tvalueRequired);", "-\t}", "+ */", "+public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired) {", "+\tthis.generateCompoundAssignment(", "+\t\tcurrentScope, ", "+\t\tcodeStream, ", "+\t\tthis.syntheticAccessors == null ? null : this.syntheticAccessors[SingleNameReference.WRITE],", "+\t\texpression,", "+\t\toperator, ", "+\t\tassignmentImplicitConversion, ", "+\t\tvalueRequired);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd2e7a96cb0f9d96e43edcc2345efb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void manageSyntheticReadAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticReadAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif (constant != NotAConstant)", "+\tif (this.constant != NotAConstant)", "-\tif ((bits & FIELD) != 0) {", "-\t\tFieldBinding fieldBinding = (FieldBinding) binding;", "-//\t\t\tif (((bits & DepthMASK) != 0)", "+\tif ((this.bits & FIELD) != 0) {", "+\t\tFieldBinding fieldBinding = (FieldBinding) this.binding;", "+//\t\t\tif (((this.bits & DepthMASK) != 0)", "-//\t\t\t\tif (syntheticAccessors == null)", "-//\t\t\t\t\tsyntheticAccessors = new MethodBinding[2];", "-//\t\t\t\tsyntheticAccessors[READ] = ", "+//\t\t\t\tif (this.syntheticAccessors == null)", "+//\t\t\t\t\tthis.syntheticAccessors = new MethodBinding[2];", "+//\t\t\t\tthis.syntheticAccessors[READ] = ", "-//\t\t\t\t\t\tenclosingTypeAt((bits & DepthMASK) >> DepthSHIFT)).", "+//\t\t\t\t\t\tenclosingTypeAt((this.bits & DepthMASK) >> DepthSHIFT))."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "600c4f44361ec04df7982e93dd37bdcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding getReceiverType(BlockScope currentScope)", "signatureAfterChange": " public TypeBinding getReceiverType(BlockScope currentScope)", "diff": ["-\tif (receiverType != null) return receiverType;", "+\tif (this.receiverType != null) return this.receiverType;", "-\t\t\t\t\treturn receiverType = ((ClassScope) scope).referenceContext.binding;", "+\t\t\t\t\treturn this.receiverType = ((ClassScope) scope).referenceContext.binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a66cd058491c11486900802c5feffa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Expression parseMember(TypeReference receiver) throws InvalidInputException", "diff": ["-\t\t\t\tstart = this.scanner.currentPosition;", "+\t\t\t\tstart = this.scanner.getCurrentTokenStartPosition();", "-\t\t\tJavadocFieldReference field = new JavadocFieldReference(identifierStack[0], identifierPositionStack[0]);", "+\t\t\tJavadocFieldReference field = new JavadocFieldReference(this.identifierStack[0], this.identifierPositionStack[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cdb87183a0e19137a9df47709c3da0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (expression == null ? 0 : getExpression().treeSize())", "-\t\t\t+ (thenStatement == null ? 0 : getThenStatement().treeSize())", "-\t\t\t+ (optionalElseStatement == null ? 0 : getElseStatement().treeSize());", "+\t\t\t+ (this.expression == null ? 0 : getExpression().treeSize())", "+\t\t\t+ (this.thenStatement == null ? 0 : getThenStatement().treeSize())", "+\t\t\t+ (this.optionalElseStatement == null ? 0 : getElseStatement().treeSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e55b14a78b16e4b7217712e99df43f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 261, "methodNumberAfterChange": 261, "signatureBeforeChange": " protected void resetModifiers()", "signatureAfterChange": " protected void resetModifiers()", "diff": ["-\tmodifiers = AccDefault;", "-\tmodifiersSourceStart = -1; // <-- see comment into modifiersFlag(int)", "-\tscanner.commentPtr = -1;", "+\tthis.modifiers = AccDefault;", "+\tthis.modifiersSourceStart = -1; // <-- see comment into modifiersFlag(int)", "+\tthis.scanner.commentPtr = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730d6fd2831fc62132baa8793c07c46b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodRef.java", "commitBeforeChange": "c0fb6d2b67dfdf597d878261fa4ba21d4a23918e", "commitAfterChange": "7c71bd67364ddd3b380d51d2f4e9afb3c139dbb2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (optionalQualifier == null ? 0 : getQualifier().treeSize())", "-\t\t\t+ (methodName == null ? 0 : getName().treeSize())", "-\t\t\t+ parameters.listSize();", "+\t\t\t+ (this.optionalQualifier == null ? 0 : getQualifier().treeSize())", "+\t\t\t+ (this.methodName == null ? 0 : getName().treeSize())", "+\t\t\t+ this.parameters.listSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8139bbdf59e7cedcd52ae821c719fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic final void addClinit()", "signatureAfterChange": " public final void addClinit()", "diff": ["-\t */", "-\tpublic final void addClinit() {", "-", "-\t\t//see comment on needClassInitMethod", "-\t\tif (needClassInitMethod()) {", "-\t\t\tint length;", "-\t\t\tAbstractMethodDeclaration[] methodDeclarations;", "-\t\t\tif ((methodDeclarations = this.methods) == null) {", "-\t\t\t\tlength = 0;", "-\t\t\t\tmethodDeclarations = new AbstractMethodDeclaration[1];", "-\t\t\t} else {", "-\t\t\t\tlength = methodDeclarations.length;", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tmethodDeclarations,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(methodDeclarations = new AbstractMethodDeclaration[length + 1]),", "-\t\t\t\t\t1,", "-\t\t\t\t\tlength);", "-\t\t\t}", "-\t\t\tClinit clinit = new Clinit(this.compilationResult);", "-\t\t\tmethodDeclarations[0] = clinit;", "-\t\t\t// clinit is added in first location, so as to minimize the use of ldcw (big consumer of constant inits)", "-\t\t\tclinit.declarationSourceStart = clinit.sourceStart = sourceStart;", "-\t\t\tclinit.declarationSourceEnd = clinit.sourceEnd = sourceEnd;", "-\t\t\tclinit.bodyEnd = sourceEnd;", "-\t\t\tthis.methods = methodDeclarations;", "-\t\t}", "-\t}", "+ */", "+public final void addClinit() {", "+\t//see comment on needClassInitMethod", "+\tif (needClassInitMethod()) {", "+\t\tint length;", "+\t\tAbstractMethodDeclaration[] methodDeclarations;", "+\t\tif ((methodDeclarations = this.methods) == null) {", "+\t\t\tlength = 0;", "+\t\t\tmethodDeclarations = new AbstractMethodDeclaration[1];", "+\t\t\tlength = methodDeclarations.length;", "+\t\t\t\tmethodDeclarations,", "+\t\t\t\t(methodDeclarations = new AbstractMethodDeclaration[length + 1]),", "+\t\t\t\tlength);", "+\t\tClinit clinit = new Clinit(this.compilationResult);", "+\t\tmethodDeclarations[0] = clinit;", "+\t\t// clinit is added in first location, so as to minimize the use of ldcw (big consumer of constant inits)", "+\t\tclinit.declarationSourceStart = clinit.sourceStart = this.sourceStart;", "+\t\tclinit.declarationSourceEnd = clinit.sourceEnd = this.sourceEnd;", "+\t\tclinit.bodyEnd = this.sourceEnd;", "+\t\tthis.methods = methodDeclarations;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d31a388bcdc4a7b80a17474aba24dee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredElement.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public RecoveredElement updateOnClosingBrace(int braceStart, int braceEnd)", "signatureAfterChange": " public RecoveredElement updateOnClosingBrace(int braceStart, int braceEnd)", "diff": ["-\tif ((--bracketBalance <= 0) && (parent != null)){", "+\tif ((--this.bracketBalance <= 0) && (this.parent != null)){", "-\t\treturn parent;", "+\t\treturn this.parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e2a7678e99c65facff7529a6ec98a0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public final boolean isStatic()", "signatureAfterChange": " public final boolean isStatic()", "diff": ["-", "-\treturn (modifiers & (ClassFileConstants.AccStatic | ClassFileConstants.AccInterface)) != 0 || (tagBits & IsNestedType) == 0;", "+\treturn (this.modifiers & (ClassFileConstants.AccStatic | ClassFileConstants.AccInterface)) != 0 || (this.tagBits & TagBits.IsNestedType) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "805834b3b5eee09b51a365aeb87be7db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " protected void consumeNestedMethod()", "signatureAfterChange": " protected void consumeNestedMethod()", "diff": ["-\tnestedMethod[nestedType] ++;", "-\tpushOnIntStack(scanner.currentPosition);", "+\tthis.nestedMethod[this.nestedType] ++;", "+\tpushOnIntStack(this.scanner.currentPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af4601609a55abef474983c86f95ddd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8b0f83ab2fc2f0377aa0a160aaebc6cf11976024", "commitAfterChange": "841d4b99f7f88577aa004d23df8444d60d488b4b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void resolve(BlockScope blockScope)", "signatureAfterChange": "  public void resolve(BlockScope blockScope)", "diff": ["+", "+public void resolve(BlockScope blockScope) {", "+\t// local type declaration", "+\t// need to build its scope first and proceed with binding's creation", "+\tif ((this.bits & ASTNode.IsAnonymousType) == 0) blockScope.addLocalType(this);", "+", "+\tif (this.binding != null) {", "+\t\t// remember local types binding for innerclass emulation propagation", "+\t\tblockScope.referenceCompilationUnit().record((LocalTypeBinding)this.binding);", "+", "+\t\t// binding is not set if the receiver could not be created", "+\t\tresolve();", "+\t\tupdateMaxFieldCount();", "+\t}", "+}", "-\tpublic void resolve(BlockScope blockScope) {", "-\t\t// local type declaration", "-", "-\t\t// need to build its scope first and proceed with binding's creation", "-\t\tif ((this.bits & IsAnonymousType) == 0) blockScope.addLocalType(this);", "-", "-\t\tif (binding != null) {", "-\t\t\t// remember local types binding for innerclass emulation propagation", "-\t\t\tblockScope.referenceCompilationUnit().record((LocalTypeBinding)binding);", "-", "-\t\t\t// binding is not set if the receiver could not be created", "-\t\t\tresolve();", "-\t\t\tupdateMaxFieldCount();", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3974a4b98a603b056f8d7d28ed8985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (body == null ? 0 : getBody().treeSize())", "-\t\t\t+ catchClauses.listSize()", "-\t\t\t+ (optionalFinallyBody == null ? 0 : getFinally().treeSize());", "+\t\t\t+ (this.body == null ? 0 : getBody().treeSize())", "+\t\t\t+ this.catchClauses.listSize()", "+\t\t\t+ (this.optionalFinallyBody == null ? 0 : getFinally().treeSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd92d9ae0f0f6bbd7d0aa1d85b15e74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/FloatCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FloatCache(int initialCapacity)", "signatureAfterChange": " public FloatCache(int initialCapacity)", "diff": ["-\telementSize = 0;", "-\tkeyTable = new float[initialCapacity];", "-\tvalueTable = new int[initialCapacity];", "+\tthis.elementSize = 0;", "+\tthis.keyTable = new float[initialCapacity];", "+\tthis.valueTable = new int[initialCapacity];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fbc6b2f53c6529c234f6b3840e6ad7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tString basicToString(int tab)", "signatureAfterChange": " String basicToString(int tab)", "diff": ["-\t}", "-\tString basicToString(int tab) {", "-\t\tString newLine = \"\\n\"; //$NON-NLS-1$", "-\t\tfor (int i = tab; --i >= 0;)", "-\t\t\tnewLine += \"\\t\"; //$NON-NLS-1$", "-", "-\t\tString s = newLine + \"--- Block Scope ---\"; //$NON-NLS-1$", "+}", "+String basicToString(int tab) {", "+\tString newLine = \"\\n\"; //$NON-NLS-1$", "+\tfor (int i = tab; --i >= 0;)", "-\t\ts += newLine + \"locals:\"; //$NON-NLS-1$", "-\t\tfor (int i = 0; i < localIndex; i++)", "-\t\t\ts += newLine + \"\\t\" + locals[i].toString(); //$NON-NLS-1$", "-\t\ts += newLine + \"startIndex = \" + startIndex; //$NON-NLS-1$", "-\t\treturn s;", "+", "+\tString s = newLine + \"--- Block Scope ---\"; //$NON-NLS-1$", "+\tnewLine += \"\\t\"; //$NON-NLS-1$", "+\ts += newLine + \"locals:\"; //$NON-NLS-1$", "+\tfor (int i = 0; i < this.localIndex; i++)", "+\t\ts += newLine + \"\\t\" + this.locals[i].toString(); //$NON-NLS-1$", "+\ts += newLine + \"startIndex = \" + this.startIndex; //$NON-NLS-1$", "+\treturn s;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90673bcc8994846fee160df358c2d328", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public boolean isAnonymous()", "signatureAfterChange": "\r public boolean isAnonymous()", "diff": ["-\treturn innerInfo != null && innerInfo.getEnclosingTypeName() == null && innerInfo.getSourceName() == null;\r", "+\treturn this.innerInfo != null && this.innerInfo.getEnclosingTypeName() == null && this.innerInfo.getSourceName() == null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9258fa6fa37453c0211277c959ce7388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 257, "signatureBeforeChange": " public void parseErrorUnexpectedEnd( \tint start, \tint end)", "signatureAfterChange": " public void parseErrorUnexpectedEnd( \tint start, \tint end)", "diff": ["-\tif(referenceContext instanceof ConstructorDeclaration) {", "+\tif(this.referenceContext instanceof ConstructorDeclaration) {", "-\t} else if(referenceContext instanceof MethodDeclaration) {", "+\t} else if(this.referenceContext instanceof MethodDeclaration) {", "-\t} else if(referenceContext instanceof TypeDeclaration) {", "+\t} else if(this.referenceContext instanceof TypeDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94fd708efdbae06ba6c4bf9214d0386b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\tpublic void add(int index, Object element)", "signatureAfterChange": " \t\tpublic void add(int index, Object element)", "diff": ["-\t\t\tASTNode.checkNewChild(ASTNode.this, newChild, cycleCheck, nodeType);", "-\t\t\tstore.add(index, element);", "+\t\t\tASTNode.checkNewChild(ASTNode.this, newChild, this.cycleCheck, this.nodeType);", "+\t\t\tthis.store.add(index, element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a107d00b6299718ba6ce28dd3b235bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": "  public CompilationUnitDeclaration dietParse(ICompilationUnit sourceUnit, CompilationResult compilationResult)", "signatureAfterChange": "  public CompilationUnitDeclaration dietParse(ICompilationUnit sourceUnit, CompilationResult compilationResult)", "diff": ["-\tboolean old = diet;", "+\tboolean old = this.diet;", "-\t\tdiet = true;", "+\t\tthis.diet = true;", "-\t\tdiet = old;", "+\t\tthis.diet = old;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f4566199811dbe4dc0daa9670d80e15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeDetector.java", "commitBeforeChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "commitAfterChange": "f08042169ed40835df5f51519ff1fa8d2ac0cd70", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tprivate boolean visit(ASTNode astNode)", "signatureAfterChange": " \tprivate boolean visit(ASTNode astNode)", "diff": ["-\t\tif(astNode == searchedNode) {", "-\t\t\tresult = true;", "+\t\tif(astNode == this.searchedNode) {", "+\t\t\tthis.result = true;", "-\t\treturn !result;", "+\t\treturn !this.result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f2ab75e0599de7ed29bcf5307b02ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "b418235473d69146fcb35be10bf158bb2b040cf7", "commitAfterChange": "eadf5ba6d44f28f071965cf829d67590b0a71974", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+ */", "+public void generateCode(BlockScope currentScope, CodeStream codeStream) {", "+\tif ((this.bits & ASTNode.IsReachable) == 0) {", "+\t\treturn;", "-\t */", "-\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream) {", "+\tint pc = codeStream.position;", "+\tthis.targetLabel.place();", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+}", "-\t\tif ((bits & IsReachable) == 0) {", "-\t\t\treturn;", "-\t\t}", "-\t\tint pc = codeStream.position;", "-\t\ttargetLabel.place();", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea863f95a80f369833dd95b467f019f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (leftOperand == null ? 0 : getLeftOperand().treeSize())", "-\t\t\t+ (rightOperand == null ? 0 : getRightOperand().treeSize())", "-\t\t\t+ (extendedOperands == null ? 0 : extendedOperands.listSize());", "+\t\t\t+ (this.leftOperand == null ? 0 : getLeftOperand().treeSize())", "+\t\t\t+ (this.rightOperand == null ? 0 : getRightOperand().treeSize())", "+\t\t\t+ (this.extendedOperands == null ? 0 : extendedOperands.listSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af093faba6b6052d9de57d347e15b8f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " protected void consumeStatementContinue()", "signatureAfterChange": " protected void consumeStatementContinue()", "diff": ["-\t\t\tintStack[intPtr--],", "-\t\t\tendPosition));", "+\t\t\tthis.intStack[this.intPtr--],", "+\t\t\tthis.endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b075bcec0ffceefab16bc2ec60856afa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 72, "signatureBeforeChange": "  public char[] signature()", "signatureAfterChange": " public char[] signature()", "diff": ["-", "-\tif (signature != null)", "-\t\treturn signature;", "+\tif (this.signature != null)", "+\t\treturn this.signature;", "-\treturn signature = CharOperation.concat('L', constantPoolName(), ';');", "+\treturn this.signature = CharOperation.concat('L', constantPoolName(), ';');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a110a7a70b94184cff6b185e129b85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/DoubleCache.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public DoubleCache(int initialCapacity)", "signatureAfterChange": " public DoubleCache(int initialCapacity)", "diff": ["-\telementSize = 0;", "-\tkeyTable = new double[initialCapacity];", "-\tvalueTable = new int[initialCapacity];", "+\tthis.elementSize = 0;", "+\tthis.keyTable = new double[initialCapacity];", "+\tthis.valueTable = new int[initialCapacity];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf87fa8b7e56ab8522010350b2854cb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (optionalQualifier == null ? 0 : getQualifier().treeSize())", "-\t\t\t+ (methodName == null ? 0 : getName().treeSize())", "-\t\t\t+ arguments.listSize();", "+\t\t\t+ (this.optionalQualifier == null ? 0 : getQualifier().treeSize())", "+\t\t\t+ (this.methodName == null ? 0 : getName().treeSize())", "+\t\t\t+ this.arguments.listSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8940156ff61a43418b3a5612e672e3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public TypeBinding getReceiverType(BlockScope currentScope)", "signatureAfterChange": " public TypeBinding getReceiverType(BlockScope currentScope)", "diff": ["-\tif (receiverType != null) {", "-\t\treturn receiverType;", "+\tif (this.receiverType != null) {", "+\t\treturn this.receiverType;", "-\t\t\t\t\treturn receiverType = ((ClassScope) scope).referenceContext.binding;", "+\t\t\t\t\treturn this.receiverType = ((ClassScope) scope).referenceContext.binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de43a748b9eb745713c4b04960147c79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "diff": ["-\t\tif (invocationType.fPackage == fPackage) return true;", "+\t\tif (invocationType.fPackage == this.fPackage) return true;", "-\tif (invocationType.fPackage != fPackage) return false;", "+\tif (invocationType.fPackage != this.fPackage) return false;", "-\t\tif (currentPackage != null && currentPackage != fPackage) return false;", "+\t\tif (currentPackage != null && currentPackage != this.fPackage) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e431d9ab5c0259e2854dd3b1ac19fb3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/SourceFile.java", "commitBeforeChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "commitAfterChange": "0bbfe267fb7eaaa77628088e8cdbd841ddb40de5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public boolean equals(Object o)", "signatureAfterChange": "  public boolean equals(Object o)", "diff": ["-\treturn sourceLocation == f.sourceLocation && resource.getFullPath().equals(f.resource.getFullPath());", "+\treturn this.sourceLocation == f.sourceLocation && this.resource.getFullPath().equals(f.resource.getFullPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e586e0728c72a605794b47d5acdd6a0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayThis()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayThis()", "diff": ["-\tpushOnExpressionStack(new ThisReference(intStack[intPtr--], endPosition));", "+\tpushOnExpressionStack(new ThisReference(this.intStack[this.intPtr--], this.endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6725f1c30bde0eb659addb1205b20e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "f34d0660fc08a428cce0fefe472952c23bd16c8b", "commitAfterChange": "26280894123d7ef2ecad980903e2002f03a13de2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tif (constant != Constant.NotAConstant) {", "+\t\tif (this.constant != Constant.NotAConstant) {", "-\t\t\tcodeStream.generateConstant(constant, implicitConversion);", "+\t\t\tcodeStream.generateConstant(this.constant, this.implicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea5448655dc6c4245152af85c7a8e970", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public final boolean canBeSeenBy(Scope scope)", "signatureAfterChange": " public final boolean canBeSeenBy(Scope scope)", "diff": ["-", "-\t\treturn !isPrivate() && scope.getCurrentPackage() == fPackage;", "+\t\treturn !isPrivate() && scope.getCurrentPackage() == this.fPackage;", "-\t\tif (invocationType.fPackage == fPackage) return true;", "+\t\tif (invocationType.fPackage == this.fPackage) return true;", "-\treturn invocationType.fPackage == fPackage;", "+\treturn invocationType.fPackage == this.fPackage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec0b13420bdafe94b35a57a3a82b45b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/PrefixExpression.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public PrefixExpression(Expression l, Expression e, int op, int pos)", "signatureAfterChange": "\r public PrefixExpression(Expression l, Expression e, int op, int pos)", "diff": ["-\tsuper(l, e, op);\r", "-\tsourceStart = pos;\r", "-\tsourceEnd = l.sourceEnd;\r", "+\tsuper(l, e, op, l.sourceEnd);\r", "+\tthis.sourceStart = pos;\r", "+\tthis.sourceEnd = l.sourceEnd;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd65fd7379fc7d337be31ae33b3ae16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "commitAfterChange": "f61787e560ec300f4e60b2d9cc64378b38b8a03a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+ */", "+public void generateCode(BlockScope currentScope, CodeStream codeStream) {", "+\tif ((this.bits & ASTNode.IsReachable) == 0)", "+\t\treturn;", "+\tint pc = codeStream.position;", "+\tthis.exception.generateCode(currentScope, codeStream, true);", "+\tcodeStream.athrow();", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+}", "-\t */", "-\tpublic void generateCode(BlockScope currentScope, CodeStream codeStream) {", "-", "-\t\tif ((bits & IsReachable) == 0)", "-\t\t\treturn;", "-\t\tint pc = codeStream.position;", "-\t\texception.generateCode(currentScope, codeStream, true);", "-\t\tcodeStream.athrow();", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf40071cc00fc786db5f75926e08a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayNameThis()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayNameThis()", "diff": ["-\t\t\tintStack[intPtr--],", "-\t\t\tendPosition));", "+\t\t\tthis.intStack[this.intPtr--],", "+\t\t\tthis.endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb2de5b35b95b30d3ecae14d2808fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "af5208ad650bb16626635d58b15cab85ed3b6304", "commitAfterChange": "45055dc97c3da6c433b9c6b3534e9f01054887be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private IGenericType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IGenericType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\t\t\tfor (int t = typeIndex; t >= 0; t--) {", "-\t\t\t\t\tif (typeBindings[t] == interfaceBinding) {", "-\t\t\t\t\t\tsuperinterfaces[i] = typeModels[t];", "+\t\t\t\tfor (int t = this.typeIndex; t >= 0; t--) {", "+\t\t\t\t\tif (this.typeBindings[t] == interfaceBinding) {", "+\t\t\t\t\t\tsuperinterfaces[i] = this.typeModels[t];"]}], "num": 1204}