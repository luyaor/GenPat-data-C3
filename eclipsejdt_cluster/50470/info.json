{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4591767c99e2b2fbf2ba8b12327340b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e0a6da60eee9f4b93e0333a3725530", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "d96b4f2d2690a613d86ff8a25f7f4e62c3b517ac", "commitAfterChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Object reduce(InferenceContext18 inferenceContext)", "signatureAfterChange": " \tpublic Object reduce(InferenceContext18 inferenceContext)", "diff": ["-\t\t\t\t\tif (this.left.kind() != Binding.WILDCARD_TYPE && !this.left.isCapture()) {", "+\t\t\t\t\tif (this.left.kind() != Binding.WILDCARD_TYPE) {", "-\t\t\t\t\t\tWildcardBinding s = this.left.isCapture() ? ((CaptureBinding) this.left).wildcard : (WildcardBinding) this.left;", "+\t\t\t\t\t\tWildcardBinding s = (WildcardBinding) this.left;", "-\t\t\t\t\tif (this.left.kind() != Binding.WILDCARD_TYPE && !this.left.isCapture()) {", "+\t\t\t\t\tif (this.left.kind() != Binding.WILDCARD_TYPE) {", "-\t\t\t\t\t\tWildcardBinding s = this.left.isCapture() ? ((CaptureBinding) this.left).wildcard : (WildcardBinding) this.left;", "+\t\t\t\t\t\tWildcardBinding s = (WildcardBinding) this.left;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33f01c8913bbb9f8f3aba5717ef5593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 415, "methodNumberAfterChange": 423, "signatureBeforeChange": " public void unsafeRawGenericMethodInvocation(ASTNode location, MethodBinding rawMethod, TypeBinding[] argumentTypes)", "signatureAfterChange": " public void unsafeRawGenericMethodInvocation(ASTNode location, MethodBinding rawMethod, TypeBinding[] argumentTypes)", "diff": ["-\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.original().parameters, false),", "+\t\t\t\ttypesAsString(rawMethod.original(), false),", "-\t\t\t\ttypesAsString(false, argumentTypes, false),", "+\t\t\t\ttypesAsString(argumentTypes, false),", "-\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.original().parameters, true),", "+\t\t\t\ttypesAsString(rawMethod.original(), true),", "-\t\t\t\ttypesAsString(false, argumentTypes, true),", "+\t\t\t\ttypesAsString(argumentTypes, true),", "-\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.original().parameters, false),", "+\t\t\t\ttypesAsString(rawMethod.original(), false),", "-\t\t\t\ttypesAsString(false, argumentTypes, false),", "+\t\t\t\ttypesAsString(argumentTypes, false),", "-\t\t\t\ttypesAsString(rawMethod.original().isVarargs(), rawMethod.original().parameters, true),", "+\t\t\t\ttypesAsString(rawMethod.original(), true),", "-\t\t\t\ttypesAsString(false, argumentTypes, true),", "+\t\t\t\ttypesAsString(argumentTypes, true),"]}], "num": 50470}