{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c46994305e80f631729ccc9acc63cf8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f578d59775d6789c68967bc6f692db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "8032392aee6168afb7d9361a5e7c32ded0b6567a", "commitAfterChange": "af7c555b94268663ad75bc44adea174c67a820bf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public abstract void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope)  throws IOException ;", "signatureAfterChange": " public void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope) throws IOException", "diff": ["-public abstract void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope)  throws IOException ;", "+public void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope) throws IOException {", "+\tfor (int i = 0, max = references.length; i < max; i++) {", "+\t\tIndexedFile file = input.getIndexedFile(references[i]);", "+\t\tif (file != null) {", "+\t\t\tString path = IndexedFile.convertPath(file.getPath());", "+\t\t\tif (scope.encloses(path))", "+\t\t\t\tacceptPath(requestor, path);", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d46fd76b593ff4d9d4bde16ae528579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "c820ba1f211d66d6793e3497769f49b98d676c05", "commitAfterChange": "f4923805b964d85cb33433de20d2bd31cc289386", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["+\t\t\t\t", "+\t\t\t\t// reset containers that are no longer on the classpath", "+\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=139446)", "+\t\t\t\tfor (int i = 0, length = this.oldRawClasspath.length; i < length; i++) {", "+\t\t\t\t\tIClasspathEntry entry = this.oldRawClasspath[i];", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER) {", "+\t\t\t\t\t\tif (classpathContains(newRawClasspath, entry) == -1)", "+\t\t\t\t\t\t\tmanager.containerPut(this.project, entry.getPath(), null);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 22537}