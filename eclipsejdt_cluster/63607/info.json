{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ecae7f350f028a7bd8393134f389339", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227cfb5694ab41a487bfcb7a1a545fe5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "10d0299472db75b0d2601fb1ed8fd13d430fef5a", "commitAfterChange": "1d1bcfc5dd72fdf22291e7342487bb93d58df5c4", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\tScope scope) {", "+\t\tScope scope,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems) {", "+\t\t\t", "+\t\t\tif (missingElements != null) {", "+\t\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);", "+\t\t\t}", "-\t\t\tcreateTypeProposal(memberType, memberType.qualifiedSourceName(), IAccessRule.K_ACCESSIBLE, completionName, relevance);", "+\t\t\tcreateTypeProposal(", "+\t\t\t\t\tmemberType,", "+\t\t\t\t\tmemberType.qualifiedSourceName(),", "+\t\t\t\t\tIAccessRule.K_ACCESSIBLE,", "+\t\t\t\t\tcompletionName,", "+\t\t\t\t\trelevance,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\tmissingElementsHaveProblems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b96948439481635b7b37159ec437c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "9f8931bf92b7966fbd8c101a448f79f7965fbbf9", "commitAfterChange": "3bf5bab95449ec256a601c2551910573083178b4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification)", "signatureAfterChange": " protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification, boolean isDeclaration, int start, int end)", "diff": ["-protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification) {", "-\tIType type= resolveType(packageName, typeName, acceptFlags);", "+protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean needQualification, boolean isDeclaration, int start, int end) {", "+\tIType type = null;", "+\tif(isDeclaration) {", "+\t\ttype = resolveTypeByLocation(packageName, typeName, acceptFlags, start, end);", "+\t} else {", "+\t\ttype = resolveType(packageName, typeName, acceptFlags);", "+\t}", "+\t", "-\t"]}], "num": 63607}