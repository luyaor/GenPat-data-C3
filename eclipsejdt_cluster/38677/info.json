{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29a93251c1236c5a19e0c32634a6ff4e", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a5a871b0795054a316d5be9f0133e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 170, "signatureBeforeChange": "\r protected void consumeToken(int type)", "signatureAfterChange": "\r protected void consumeToken(int type)", "diff": ["+\tif (scanner.wasNonExternalizedStringLiteral) {\r", "+\t\tStringLiteral[] literals = this.scanner.nonNLSStrings;\r", "+\t\tfor (int i = 0, max = literals.length; i < max; i++) {\r", "+\t\t\tproblemReporter().nonExternalizedStringLiteral(literals[i]);\r", "+\t\t}\r", "+\t\tscanner.currentLine = null;\r", "+\t\tscanner.wasNonExternalizedStringLiteral = false;\r", "+\t}\r", "+\t\t\tif (scanner.useAssertAsAnIndentifier) {\r", "+\t\t\t\tlong positions = identifierPositionStack[identifierPtr];\r", "+\t\t\t\tproblemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);\r", "+\t\t\t}\r", "-\t\t\tif (scanner.wasNonExternalizedStringLiteral) problemReporter().nonExternalizedStringLiteral(stringLiteral);\r", "+\t\tcase TokenNameassert :\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "783815d99d848de7299780145f0d1852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 170, "signatureBeforeChange": "\r protected void consumeToken(int type)", "signatureAfterChange": "\r protected void consumeToken(int type)", "diff": ["+\tif (scanner.wasNonExternalizedStringLiteral) {\r", "+\t\tStringLiteral[] literals = this.scanner.nonNLSStrings;\r", "+\t\tfor (int i = 0, max = literals.length; i < max; i++) {\r", "+\t\t\tproblemReporter().nonExternalizedStringLiteral(literals[i]);\r", "+\t\t}\r", "+\t\tscanner.currentLine = null;\r", "+\t\tscanner.wasNonExternalizedStringLiteral = false;\r", "+\t}\r", "+\t\t\tif (scanner.useAssertAsAnIndentifier) {\r", "+\t\t\t\tlong positions = identifierPositionStack[identifierPtr];\r", "+\t\t\t\tproblemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);\r", "+\t\t\t}\r", "-\t\t\tif (scanner.wasNonExternalizedStringLiteral) problemReporter().nonExternalizedStringLiteral(stringLiteral);\r", "+\t\tcase TokenNameassert :\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9628c57507cdcaf7ec2ff4c4b3162719", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 170, "signatureBeforeChange": "\r protected void consumeToken(int type)", "signatureAfterChange": "\r protected void consumeToken(int type)", "diff": ["+\tif (scanner.wasNonExternalizedStringLiteral) {\r", "+\t\tStringLiteral[] literals = this.scanner.nonNLSStrings;\r", "+\t\tfor (int i = 0, max = literals.length; i < max; i++) {\r", "+\t\t\tproblemReporter().nonExternalizedStringLiteral(literals[i]);\r", "+\t\t}\r", "+\t\tscanner.currentLine = null;\r", "+\t\tscanner.wasNonExternalizedStringLiteral = false;\r", "+\t}\r", "+\t\t\tif (scanner.useAssertAsAnIndentifier) {\r", "+\t\t\t\tlong positions = identifierPositionStack[identifierPtr];\r", "+\t\t\t\tproblemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);\r", "+\t\t\t}\r", "-\t\t\tif (scanner.wasNonExternalizedStringLiteral) problemReporter().nonExternalizedStringLiteral(stringLiteral);\r", "+\t\tcase TokenNameassert :\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb23222f0986810add1cefa7894324ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 170, "signatureBeforeChange": "\r protected void consumeToken(int type)", "signatureAfterChange": "\r protected void consumeToken(int type)", "diff": ["+\tif (scanner.wasNonExternalizedStringLiteral) {\r", "+\t\tStringLiteral[] literals = this.scanner.nonNLSStrings;\r", "+\t\tfor (int i = 0, max = literals.length; i < max; i++) {\r", "+\t\t\tproblemReporter().nonExternalizedStringLiteral(literals[i]);\r", "+\t\t}\r", "+\t\tscanner.currentLine = null;\r", "+\t\tscanner.wasNonExternalizedStringLiteral = false;\r", "+\t}\r", "+\t\t\tif (scanner.useAssertAsAnIndentifier) {\r", "+\t\t\t\tlong positions = identifierPositionStack[identifierPtr];\r", "+\t\t\t\tproblemReporter().useAssertAsAnIdentifier((int) (positions >>> 32), (int) positions);\r", "+\t\t\t}\r", "-\t\t\tif (scanner.wasNonExternalizedStringLiteral) problemReporter().nonExternalizedStringLiteral(stringLiteral);\r", "+\t\tcase TokenNameassert :\r"]}], "num": 38677}