{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "835a2bbabf8a73ead9202bb840b73c3b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43ae739bf69e7cc42839d27360cebf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "916e1b97cb8f68e0c3d2550db5f74003efc3f036", "commitAfterChange": "cb0883381704b865376b174b125a5d26ee0abae4", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions,  \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken, \t\tboolean skipJavac, \t\tboolean performStatementsRecovery)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions,  \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken, \t\tboolean skipJavac, \t\tboolean performStatementsRecovery)", "diff": ["-\t\t\t\tString computedProblemLog = Util.convertToIndependantLineDelimiter(requestor.problemLog.toString());", "-\t\t\t\tif (!platformIndependantExpectedLog.equals(computedProblemLog)) {", "-\t\t\t\t\tSystem.out.println(getClass().getName() + '#' + getName());", "-\t\t\t\t\tSystem.out.println(Util.displayString(computedProblemLog, INDENT, SHIFT));", "-\t\t\t\t\tfor (int i = 0; i < testFiles.length; i += 2) {", "-\t\t\t\t\t\tSystem.out.print(testFiles[i]);", "-\t\t\t\t\t\tSystem.out.println(\" [\"); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(testFiles[i + 1]);", "-\t\t\t\t\t\tSystem.out.println(\"]\"); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (exception == null)", "-\t\t\t\t\tassertEquals(\"Invalid problem log \", platformIndependantExpectedLog, computedProblemLog);", "+\t\t\t\tcomputeProblemLog(testFiles, requestor, platformIndependantExpectedLog, exception);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb20a7edffd89c61103de044dca133cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "e4335f612db86aa6e739c4af37c0425a42aadb90", "commitAfterChange": "39f1f31087ae36f09c69d342ba90d4c2023a9fbb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprotected void checkCompilerLog(String[] testFiles, Requestor requestor, \t\t\tString platformIndependantExpectedLog, Throwable exception)", "signatureAfterChange": " \tprotected void checkCompilerLog(String[] testFiles, Requestor requestor, \t\t\tString[] alternatePlatformIndependantExpectedLogs, Throwable exception)", "diff": ["-\t\t\tString platformIndependantExpectedLog, Throwable exception) {", "+\t\t\tString[] alternatePlatformIndependantExpectedLogs, Throwable exception) {", "-\t\tif (!platformIndependantExpectedLog.equals(computedProblemLog)) {", "-\t\t\tlogTestTitle();", "-\t\t\tSystem.out.println(Util.displayString(computedProblemLog, INDENT, SHIFT));", "-\t\t\tlogTestFiles(false, testFiles);", "+\t\tint i;", "+\t\tfor (i = 0; i < alternatePlatformIndependantExpectedLogs.length; i++) {", "+\t\t\tif (alternatePlatformIndependantExpectedLogs[i].equals(computedProblemLog))", "+\t\t\t\treturn; // OK", "+\t\tlogTestTitle();", "+\t\tSystem.out.println(Util.displayString(computedProblemLog, INDENT, SHIFT));", "+\t\tlogTestFiles(false, testFiles);", "-\t\t\tassertEquals(\"Invalid problem log \", platformIndependantExpectedLog, computedProblemLog);", "+\t\t\tassertEquals(\"Invalid problem log \", alternatePlatformIndependantExpectedLogs[i-1], computedProblemLog);"]}], "num": 30652}