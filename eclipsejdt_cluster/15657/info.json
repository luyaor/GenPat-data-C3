{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ef264c4465716cddcd93191b4d42ea1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0abf7627584d67229199fac3d16bf6b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3eb085ff141aa0943f0e7cfcd789554d94243507", "commitAfterChange": "8f6891d448939e984803e732396c844070896f56", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["+\t\tObjectVector methodsFound,", "+\t\t", "+\t\tObjectVector newMethodsFound =  new ObjectVector();", "+\t\t\t", "+\t\t\tfor (int i = methodsFound.size; --i >= 0;) {", "+\t\t\t\tObject[] other = (Object[]) methodsFound.elementAt(i);", "+\t\t\t\tMethodBinding otherMethod = (MethodBinding) other[0];", "+\t\t\t\tReferenceBinding otherReceiverType = (ReferenceBinding) other[1];", "+\t\t\t\tif (method == otherMethod && receiverType == otherReceiverType)", "+\t\t\t\t\tcontinue next;", "+\t\t\t\t", "+\t\t\t\tif (CharOperation.equals(method.selector, otherMethod.selector, true)) {", "+\t\t\t\t\tif (lookupEnvironment.methodVerifier().doesMethodOverride(otherMethod, method)) {", "+\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+", "+\t\t\tnewMethodsFound.add(new Object[]{method, receiverType});", "+\t\t", "+\t\tmethodsFound.addAll(newMethodsFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "869f550348c25913903332bda6de9cf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7ecdf98ece67bf3fdea67eea206e42452063cddc", "commitAfterChange": "2c9e7841658ee7c7be2ce4b7a93bf1140c694e08", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tprivate void findLocalMethodsFromFavorites( \t\t\tchar[] methodName, \t\t\tMethodBinding[] methods, \t\t\tScope scope, \t\t\tObjectVector methodsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "signatureAfterChange": " \t \tprivate void findLocalMethodsFromFavorites( \t\t\tchar[] methodName, \t\t\tMethodBinding[] methods, \t\t\tScope scope, \t\t\tObjectVector methodsFound, \t\t\tObjectVector methodsFoundFromFavorites, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "diff": ["+\t\t\tObjectVector methodsFoundFromFavorites,", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tfor (int i = methodsFoundFromFavorites.size; --i >= 0;) {", "+\t\t\t\t\tObject[] other = (Object[]) methodsFoundFromFavorites.elementAt(i);", "+\t\t\t\t\tMethodBinding otherMethod = (MethodBinding) other[0];", "+\t\t\t\t\t", "+\t\t\t\t\tif (method == otherMethod) continue next;", "+\t\t\t\t\t", "+\t\t\t\t\tif (CharOperation.equals(method.selector, otherMethod.selector, true)) {", "+\t\t\t\t\t\tif (otherMethod.declaringClass == method.declaringClass &&", "+\t\t\t\t\t\t\t\tlookupEnvironment.methodVerifier().isMethodSubsignature(otherMethod, method)) {", "+\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\tmethodsFound.add(new Object[]{method, receiverType});", "+\t\t\t\tmethodsFoundFromFavorites.add(new Object[]{method, receiverType});"]}], "num": 15657}