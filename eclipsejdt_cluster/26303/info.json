{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "954325ed0dbf1b1e5ebf3fe378f18115", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3bc063931e2f257cb1741da3c507d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["-\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776acde5f1a308f3b0dc06fbd1a55cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["-\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\t\t\tif (lastArgument == NullBinding) break checkVarargDimension;", "+\t\t\t\t\t\tif (lastArgument == TypeBinding.NULL) break checkVarargDimension;", "-\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution", "-\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(TypeBinding.VOID) != null) return null; // impossible substitution"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15fdf9f6da78aa33ecca1fd34f9334a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "commitAfterChange": "aaa066e01ab34ac4b1e524fd85da7d4cc6ffdf4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["+\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47072a3bd9d582de6682a1b704a2e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "commitAfterChange": "aaa066e01ab34ac4b1e524fd85da7d4cc6ffdf4e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["+\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution", "+\t\t\t\tif (collectedSubstitutes.get(VoidBinding) != null) return null; // impossible substitution"]}], "num": 26303}