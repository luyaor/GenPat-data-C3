{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3699d49667f811471a07cce1c0e9f988", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eac0fac87af12090d339736cbf80eae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "6defd2b79520062f5150164ded77c2d030acc168", "commitAfterChange": "d351702f3561d64a024c15ffbed0faad48ce2838", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected boolean pushParamName()", "signatureAfterChange": " \tprotected boolean pushParamName(boolean isTypeParam)", "diff": ["-\tprotected boolean pushParamName() {", "-\t\tSimpleName name = this.ast.newSimpleName(new String(this.scanner.getCurrentIdentifierSource()));", "-\t\tname.setSourceRange(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition()-this.scanner.getCurrentTokenStartPosition()+1);", "+\tprotected boolean pushParamName(boolean isTypeParam) {", "+\t\tSimpleName name = this.ast.newSimpleName(new String(this.identifierStack[0]));", "+\t\tint start = (int) (this.identifierPositionStack[0] >>> 32);", "+\t\tint end = (int) (this.identifierPositionStack[0] & 0x00000000FFFFFFFFL);", "+\t\tname.setSourceRange(start, end-start+1);", "-\t\tparamTag.setSourceRange(this.tagSourceStart, this.scanner.getCurrentTokenEndPosition()-this.tagSourceStart+1);", "+\t\tparamTag.setSourceRange(this.tagSourceStart, end-this.tagSourceStart+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3fe84b4616d9a6d5fca3ab2fd37b8da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "fb0020e27808c429f3f311a11ef0ea9ea04441aa", "commitAfterChange": "29bba5ec8d05a9cd1832ad934d2530b41087b676", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\tpublic void setInstantiation(TypeBinding type, LookupEnvironment environment)", "signatureAfterChange": " \t\tpublic void setInstantiation(TypeBinding type, InferenceVariable variable, LookupEnvironment environment)", "diff": ["-\t\tpublic void setInstantiation(TypeBinding type, LookupEnvironment environment) {", "+\t\tpublic void setInstantiation(TypeBinding type, InferenceVariable variable, LookupEnvironment environment) {", "-\t\t\t\tif (this.instantiation != null) {", "-\t\t\t\t\t// sanity check:", "-\t\t\t\t\tif (!TypeBinding.equalsEquals(this.instantiation, type)) {", "-\t\t\t\t\t\tthis.instantiation = null;", "-\t\t\t\t\t\treturn; // incorporation should find the conflict and fail the inference", "-\t\t\t\t\t}", "-\t\t\t\t\tlong oldBits = this.instantiation.tagBits & TagBits.AnnotationNullMASK;", "-\t\t\t\t\tif (oldBits != 0) {", "-\t\t\t\t\t\tlong newBits = type.tagBits & TagBits.AnnotationNullMASK;", "-\t\t\t\t\t\tif (newBits == oldBits || newBits == 0)", "-\t\t\t\t\t\t\treturn; // no update", "-\t\t\t\t\t\tAnnotationBinding[] annot = environment.nullAnnotationsFromTagBits(newBits);", "-\t\t\t\t\t\tif (annot != null)", "-\t\t\t\t\t\t\ttype = environment.createAnnotatedType(this.instantiation, annot);", "-\t\t\t\t\t}", "+\t\t\t\tlong oldBits = ((this.instantiation != null) ? this.instantiation.tagBits : variable.tagBits)", "+\t\t\t\t\t\t\t\t& TagBits.AnnotationNullMASK;", "+\t\t\t\tlong requestedBits = type.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\tlong newBits = (oldBits == TagBits.AnnotationNonNull) ? oldBits : requestedBits; // need to preserve @NonNull", "+\t\t\t\tif (this.instantiation != null && oldBits == newBits) {", "+\t\t\t\t\treturn; // no update needed", "+\t\t\t\t}", "+\t\t\t\tif (requestedBits != newBits) {", "+\t\t\t\t\t// adjust 'type' to fit the newBits", "+\t\t\t\t\tAnnotationBinding[] annot = environment.nullAnnotationsFromTagBits(newBits);", "+\t\t\t\t\tif (annot != null)", "+\t\t\t\t\t\ttype = environment.createAnnotatedType(type.unannotated(), annot);"]}], "num": 70398}