{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d4a184686f0689241a6afe53223773c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b16efd079e0f03a3fcf43c8e94050379", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "6fb311673d1501ca166502c77ddfedc4e1f01c4f", "commitAfterChange": "51a358cb1826956218a0838475a109e014b95398", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "diff": ["-\t\tconstant = NotAConstant;", "+\t\tthis.constant = NotAConstant;", "+\t\t", "+\t\t// allow new List<?>[5]", "+\t\tTypeBinding leafComponentType = expectedTb.leafComponentType();", "+\t\tif (leafComponentType.isBoundParameterizedType() || leafComponentType.isGenericType() || leafComponentType.isTypeVariable()) {", "+\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "+\t\t}", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd0e309a5e58d66e785e5ed2da110ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "6de9512852d6a313c2efeeb72386871ba5a15d81", "commitAfterChange": "bdf1aa008887ee645c5354918f10478a9dc27f84", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (referenceType.isParameterizedType()) {", "-\t\t\t    scope.problemReporter().illegalArrayOfParameterizedType(referenceType, this);", "+\t\t\tif (referenceType.isParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {", "+\t\t\t    scope.problemReporter().illegalGenericArray(referenceType, this);"]}], "num": 10278}