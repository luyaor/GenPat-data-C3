{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5933110fce136f795617cd8f5c10ac6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25802987ce93455b17ce6bc800e35474", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": " final public void ldc(String constant)", "signatureAfterChange": " final public void ldc(String constant)", "diff": ["-\t\t\ttry {", "-\t\t\t\tposition++;", "-\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\tresizeByteArray(OPC_ldc_w);", "+\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "+\t\t\tposition++;", "+\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t\ttry {", "-\t\t\t\tposition++;", "-\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "-\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\tresizeByteArray(OPC_ldc);", "+\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "-\t\t\twriteUnsignedByte(index);", "+\t\t\tposition += 2;", "+\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "+\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t\ttry {", "-\t\t\t\tposition++;", "-\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\tresizeByteArray(OPC_ldc_w);", "+\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "+\t\t\tposition++;", "+\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t\ttry {", "-\t\t\t\tposition++;", "-\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "-\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\tresizeByteArray(OPC_ldc);", "+\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "+\t\t\t\tresizeByteArray();", "-\t\t\twriteUnsignedByte(index);", "+\t\t\tposition += 2;", "+\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "+\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t\t\ttry {", "-\t\t\t\t\tposition++;", "-\t\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\tresizeByteArray(OPC_ldc_w);", "+\t\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\t\t\t\tresizeByteArray();", "+\t\t\t\tposition++;", "+\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc_w;", "-\t\t\t\ttry {", "-\t\t\t\t\tposition++;", "-\t\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "-\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\tresizeByteArray(OPC_ldc);", "+\t\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "+\t\t\t\t\tresizeByteArray();", "-\t\t\t\twriteUnsignedByte(index);", "+\t\t\t\tposition += 2;", "+\t\t\t\tbCodeStream[classFileOffset++] = OPC_ldc;", "+\t\t\t\tbCodeStream[classFileOffset++] = (byte) index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b39dd23d82f46b9d2bb868f4889fc93e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "837307d08b616384b505afc73627ca69c848f688", "commitAfterChange": "3766f92877d37ddf99f4fd2284092baada4bd7d4", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " public void ldc(String constant)", "signatureAfterChange": " public void ldc(String constant)", "diff": ["-\t\tstackDepth++;", "-\t\tif (stackDepth > stackMax) {", "-\t\t\tstackMax = stackDepth;", "-\t\t}", "-\t\tif (index > 255) {", "-\t\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc_w:\"+constant); //$NON-NLS-1$", "-\t\t\t// Generate a ldc_w", "-\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc_w;", "-\t\t\twriteUnsignedShort(index);", "-\t\t} else {", "-\t\t\tif (DEBUG) System.out.println(position + \"\\t\\tldc:\"+constant); //$NON-NLS-1$", "-\t\t\t// Generate a ldc", "-\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition += 2;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc;", "-\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t}", "+\t\tthis.ldcForIndex(index, constantChars);", "-\t\tstackDepth++;", "-\t\tif (stackDepth > stackMax) {", "-\t\t\tstackMax = stackDepth;", "-\t\t}", "-\t\tif (index > 255) {", "-\t\t\t// Generate a ldc_w", "-\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition++;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc_w;", "-\t\t\twriteUnsignedShort(index);", "-\t\t} else {", "-\t\t\t// Generate a ldc", "-\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "-\t\t\t\tresizeByteArray();", "-\t\t\t}", "-\t\t\tposition += 2;", "-\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc;", "-\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t}", "+\t\tthis.ldcForIndex(index, subChars);", "-\t\t\tstackDepth++;", "-\t\t\tif (stackDepth > stackMax)", "-\t\t\t\tstackMax = stackDepth;", "-\t\t\tif (index > 255) {", "-\t\t\t\t// Generate a ldc_w", "-\t\t\t\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\t\t\t\tresizeByteArray();", "-\t\t\t\t}", "-\t\t\t\tposition++;", "-\t\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc_w;", "-\t\t\t\twriteUnsignedShort(index);", "-\t\t\t} else {", "-\t\t\t\t// Generate a ldc", "-\t\t\t\tif (classFileOffset + 1 >= bCodeStream.length) {", "-\t\t\t\t\tresizeByteArray();", "-\t\t\t\t}", "-\t\t\t\tposition += 2;", "-\t\t\t\tbCodeStream[classFileOffset++] = Opcodes.OPC_ldc;", "-\t\t\t\tbCodeStream[classFileOffset++] = (byte) index;", "-\t\t\t}", "+\t\t\tthis.ldcForIndex(index, subChars);"]}], "num": 16324}