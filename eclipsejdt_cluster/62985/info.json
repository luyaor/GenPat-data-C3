{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a38ff63c2285c1e55486867339cf0de", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c40d354e8ee0bba244b05440982fe9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c83f12517cdac51319ba031385bd9a380905c315", "commitAfterChange": "3230c94014e69f2e2750889e5eaac5c1e552ded1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public final boolean getNextCharAsDigit(int radix)", "signatureAfterChange": " public final boolean getNextCharAsDigit(int radix)", "diff": ["-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\tgetNextUnicodeChar();", "+\t\t\t\tthis.withoutUnicodePtr--;", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "+\t\t} else {", "+\t\tthis.currentPosition = temp;", "+\t\treturn false;", "+\t} catch(InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c48c3ccac8484345aa37c37d8ee2da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "c83f12517cdac51319ba031385bd9a380905c315", "commitAfterChange": "3230c94014e69f2e2750889e5eaac5c1e552ded1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "signatureAfterChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "diff": ["-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\tgetNextUnicodeChar();", "+\t\t\t\tthis.withoutUnicodePtr--;", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "+\t\t} else {", "+\t\tthis.currentPosition = temp;", "+\t\treturn false;", "+\t} catch(InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a605201cefafc8f97c63ab0eb8c7020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6bbe631c4aee5403134035d5558f68ceeb91c520", "commitAfterChange": "a387db32f06bcc44b6b47e5aa021853a1cfee33c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "signatureAfterChange": " public final boolean getNextCharAsDigit() throws InvalidInputException", "diff": ["-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\tgetNextUnicodeChar();", "+\t\t\t\tthis.withoutUnicodePtr--;", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "+\t\t} else {", "+\t\tthis.currentPosition = temp;", "+\t\treturn false;", "+\t} catch(InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deda425938a202d1691dfc2661f9b00c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6bbe631c4aee5403134035d5558f68ceeb91c520", "commitAfterChange": "a387db32f06bcc44b6b47e5aa021853a1cfee33c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public final boolean getNextCharAsDigit(int radix)", "signatureAfterChange": " public final boolean getNextCharAsDigit(int radix)", "diff": ["-\t\t\t//-------------unicode traitement ------------", "-\t\t\tint c1, c2, c3, c4;", "-\t\t\tint unicodeSize = 6;", "-\t\t\tthis.currentPosition++;", "-\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\tthis.currentPosition++;", "-\t\t\t\tunicodeSize++;", "-\t\t\t}", "-", "-\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t|| c1 < 0)", "-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)", "-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)", "-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {", "-\t\t\t\tthis.currentPosition = temp;", "-\t\t\t\treturn false;", "-\t\t\t}", "-", "-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\tgetNextUnicodeChar();", "+\t\t\t\tthis.withoutUnicodePtr--;", "-", "-\t\t\t//need the unicode buffer", "-\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t//buffer all the entries that have been left aside....", "-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);", "-\t\t\t}", "-\t\t\t//fill the buffer with the char", "-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);", "-\t\t} //-------------end unicode traitement--------------", "-\t\telse {", "+\t\t} else {", "+\t\tthis.currentPosition = temp;", "+\t\treturn false;", "+\t} catch(InvalidInputException e) {"]}], "num": 62985}