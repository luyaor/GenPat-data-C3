{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0b2e5710060426f0c112d71abb2d4a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63d506b1fd2de377d01a1a491ee26e53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "6ab8a052a7d8ac7a830c6733e19e9b30c380dad7", "commitAfterChange": "ec64763fa4e57b4943311ee555e5ddce81854cf2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\tresult = infCtx18.solve();", "+\t\t\t\tresult = infCtx18.solve(true);", "-\t\t\t\tresult = infCtx18.solve();", "+\t\t\t\tresult = infCtx18.solve(true);", "-\t\t\t\tresult = infCtx18.currentBounds.copy(); // the result after reduction, without effects of resolve()", "-\t\t\t\tresult = infCtx18.inferInvocationType(result, expectedType, invocationSite, originalMethod);", "+\t\t\t\tresult = infCtx18.inferInvocationType(expectedType, invocationSite, originalMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e04f4198839b99d59825aefd90d6217", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a0827b5ed51f9fc68d50a6070897f74217550da1", "commitAfterChange": "266357791826a02f1dd87ad4cdccffd484f96fd9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t\tbottomSet.add(pickFromCycle(c)); ", "+\t\t\t\t\tbottomSet.add(pickFromCycle(c));", "-\t\t\t\tBoundSet solution = resolve();", "+\t\t\t\tBoundSet solution = resolve(variablesArray);", "+\t\t\t\t// in rare cases resolving just one set of variables doesn't suffice,", "+\t\t\t\t// don't bother with finding the necessary superset, just resolve all:", "+\t\t\t\tif (solution == null)", "+\t\t\t\t\tsolution = resolve(this.inferenceVariables);"]}], "num": 4514}