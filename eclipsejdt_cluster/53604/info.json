{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc0fa081051f1147774dc6234fa53f0c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5cc7b6c34fa33a78c33fb70ba4b0bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "f69ff4a662bad4fd89b88d240101a9ac63e64955", "commitAfterChange": "7c493ed6b34d98f52ff4fc8520fcd8662e5ffd91", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "diff": ["-\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);", "-\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);", "-\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98668a282fa34b789eb7677ef4a44dc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "signatureAfterChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "-\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(actualType.id), this, missingTypeNames);", "-\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(memberType.id), this, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d58d1e2708f25b1b47b8f0fc7d2b6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "diff": ["-\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "-\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "-\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);"]}], "num": 53604}