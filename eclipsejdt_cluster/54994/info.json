{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31c5271f10483ccea19f6d0782dcebb9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24822daaa9df65996203f68bec894ac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "2978b616998f0f50433e3cb9e144a93c6a03fff0", "commitAfterChange": "084f4c75ee441cff88e4ef94e656b9ebf2194eb9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd)", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd)", "diff": ["-\t\t\t\tif (src[i + t] != tag[t])", "-\t\t\t\t\tcontinue nextTag;", "+\t\t\t\tchar sc, tc;", "+\t\t\t\tif ((sc = src[i + t]) != (tc = tag[t])) { \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// case sensitive check", "+\t\t\t\t\tif (this.isTaskCaseSensitive || (Character.toLowerCase(sc) != Character.toLowerCase(tc))) { \t// case insensitive check", "+\t\t\t\t\t\tcontinue nextTag;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a669f7b0fdf032befb9ae361e7aff631", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "2978b616998f0f50433e3cb9e144a93c6a03fff0", "commitAfterChange": "084f4c75ee441cff88e4ef94e656b9ebf2194eb9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd)", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd)", "diff": ["-\t\t\t\tif (src[i + t] != tag[t])", "-\t\t\t\t\tcontinue nextTag;", "+\t\t\t\tchar sc, tc;", "+\t\t\t\tif ((sc = src[i + t]) != (tc = tag[t])) { \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// case sensitive check", "+\t\t\t\t\tif (this.isTaskCaseSensitive || (Character.toLowerCase(sc) != Character.toLowerCase(tc))) { \t// case insensitive check", "+\t\t\t\t\t\tcontinue nextTag;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 54994}