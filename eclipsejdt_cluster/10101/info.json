{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a7d2ef17448eb292c51ac191337b914", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16db4277dc0bd0a57f96754962f4c83c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3639dc175801e2c9b679b76a5a58c78d31a121fb", "commitAfterChange": "d376f3738e131d90e211985a40fdbdae44710f60", "methodNumberBeforeChange": 1005, "methodNumberAfterChange": 1005, "signatureBeforeChange": " public void test0996()", "signatureAfterChange": " public void test0996()", "diff": ["-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"  /**\\n\" + ", "-\t\t\t\t\"   * @param pArgs\\n\" + ", "-\t\t\t\t\"   */\\n\" + ", "-\t\t\t\t\"    final List<X<?>> l2 = castList(l1, X.class);\\n\" + ", "-\t\t\t\t\"    System.exit(0);\\n\" + ", "+\t\t\t\t\"    final List<X<?>> l2 = castList(l1, List.class);\\n\" + ", "+\t\t\t\t\"    \\n\" + ", "+\t\t\t\t\"    List<X> l3 = l2;\\n\" + ", "+\t\t\t\t\"    List<X<String>> l4 = null;\\n\" + ", "+\t\t\t\t\"    l3 = l4;\\n\" + ", "+\t\t\t\t\"\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 25)\\n\" + ", "-\t\t\t\"\tfinal List<X<?>> l2 = castList(l1, X.class);\\n\" + ", "-\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from List<X> to List<X<?>>\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 20)\\n\" + ", "+\t\t\t\"\tfinal List<X<?>> l2 = castList(l1, List.class);\\n\" + ", "+\t\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<List> to List<X<?>>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 22)\\n\" + ", "+\t\t\t\"\tList<X> l3 = l2;\\n\" + ", "+\t\t\t\"\t     ^\\n\" + ", "+\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\"\tList<X> l3 = l2;\\n\" + ", "+\t\t\t\"\t             ^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<X<?>> to List<X>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tl3 = l4;\\n\" + ", "+\t\t\t\"\t     ^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<X<String>> to List<X>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f3fbe567dbd21987d94a7aada02962f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void testBug101283b()", "signatureAfterChange": " \tpublic void testBug101283b()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"\tpublic class X<T, F> {\\n\" + ", "-\t\t\t\"\t               ^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t* @see T Variable \\n\" + ", "-\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t* @see F Variable\\n\" + ", "-\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tstatic class Entry<L, R> {\\n\" + ", "-\t\t\t\"\t                   ^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" +", "+\t\t\t\"\tpublic class X<T, F> {\\n\" +", "+\t\t\t\"\t               ^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\"\t* @see T Variable \\n\" +", "+\t\t\t\"\t       ^\\n\" +", "+\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 5)\\n\" +", "+\t\t\t\"\t* @see F Variable\\n\" +", "+\t\t\t\"\t       ^\\n\" +", "+\t\t\t\"Javadoc: F cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\"\tstatic class Entry<L, R> {\\n\" +", "+\t\t\t\"\t                   ^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ebc6bab5abab72a01ebca708a5d0c36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void testBug101283b()", "signatureAfterChange": " \tpublic void testBug101283b()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"\tpublic class X<T, F> {\\n\" + ", "-\t\t\t\"\t               ^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t* @see T Variable \\n\" + ", "-\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t* @see F Variable\\n\" + ", "-\t\t\t\"\t       ^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tstatic class Entry<L, R> {\\n\" + ", "-\t\t\t\"\t                   ^^^^\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" +", "+\t\t\t\"\tpublic class X<T, F> {\\n\" +", "+\t\t\t\"\t               ^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\"\t* @see T Variable \\n\" +", "+\t\t\t\"\t       ^\\n\" +", "+\t\t\t\"Javadoc: T cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 5)\\n\" +", "+\t\t\t\"\t* @see F Variable\\n\" +", "+\t\t\t\"\t       ^\\n\" +", "+\t\t\t\"Javadoc: F cannot be resolved to a type\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"4. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\"\tstatic class Entry<L, R> {\\n\" +", "+\t\t\t\"\t                   ^^^^\\n\" +", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedfe84e4bf9a71310d51cacb0060766", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "cee242bcb21b999953c5459d6b40de2d782355f3", "commitAfterChange": "de0ba5a5e09b42f4671d55cb69260aca34e3da86", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testBug47215()", "signatureAfterChange": " \tpublic void testBug47215()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t* @see X(double)\\n\" + ", "-\t\t\t\"\t        ^^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\t* @see X   (double)\\n\" + ", "-\t\t\t\"\t           ^^^^^^^^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"\t* @see foo()\\n\" + ", "-\t\t\t\"\t          ^^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\t* @see foo  ()\\n\" + ", "-\t\t\t\"\t            ^^\\n\" + ", "-\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\t* @see X(double)\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Missing #: \\\"X(double\\\"\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t* @see X[double]\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Malformed reference (missing end space separator)\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t* @see X!=}}\\n\" + ", "+\t\t\t\t\"\t       ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Malformed reference (missing end space separator)\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"\t* @see foo()\\n\" + ", "+\t\t\t\t\"\t       ^^^^^\\n\" + ", "+\t\t\t\t\"Javadoc: Missing #: \\\"foo(\\\"\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\t* @see foo  ()\\n\" + ", "+\t\t\t\t\"\t       ^^^\\n\" + ", "+\t\t\t\t\"Javadoc: foo cannot be resolved or is not a type\\n\" + ", "+\t\t\t\t\"----------\\n\""]}], "num": 10101}