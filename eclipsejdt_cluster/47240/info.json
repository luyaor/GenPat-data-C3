{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f84777027e15f98e66c2f0ed1b4ee75", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9377153e0e992b30509cc3c735dd6bda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "67744c35fb096b073b6eb207529145544c47d6b6", "commitAfterChange": "a69ec5abfba2adcf10fe50b7c7be7bc087bd47c7", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 242, "signatureBeforeChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult)", "signatureAfterChange": "  public CompilationUnitDeclaration parse( \tICompilationUnit sourceUnit,  \tCompilationResult compilationResult)", "diff": ["-\tCompilationUnitDeclaration unit;", "-\ttry {", "-\t\t/* automaton initialization */", "-\t\tinitialize();", "-\t\tgoForCompilationUnit();", "-", "-\t\t/* scanner initialization */", "-\t\tscanner.setSource(sourceUnit.getContents());", "-", "-\t\t/* unit creation */", "-\t\treferenceContext = ", "-\t\t\tcompilationUnit = ", "-\t\t\t\tnew CompilationUnitDeclaration(", "-\t\t\t\t\tproblemReporter, ", "-\t\t\t\t\tcompilationResult, ", "-\t\t\t\t\tscanner.source.length);", "-\t\t/* run automaton */", "-\t\tparse();", "-\t} finally {", "-\t\tunit = compilationUnit;", "-\t\tcompilationUnit = null; // reset parser", "-\t}", "-\treturn unit;", "+\treturn parse(sourceUnit, compilationResult, -1, -1/*parse without reseting the scanner*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82a564bb8ecfacc161439f4bf58f83a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testPerfFullBuildNoComments() throws CoreException, IOException", "signatureAfterChange": " \tpublic void testFullBuildAllWarnings() throws CoreException, IOException", "diff": ["-\t */", "-\tpublic void testPerfFullBuildNoComments() throws CoreException, IOException {", "-\t\t// Do no longer print results for this test", "-\t\ttagAsSummary(\"Compile>Build>Clean>Src:full wksp>Options:NoCommentSupport\", Dimension.CPU_TIME, true); // put in fingerprint", "-\t\tHashtable options = JavaCore.getOptions();", "-\t\toptions.put(JavaCore.COMPILER_DOC_COMMENT_SUPPORT, JavaCore.DISABLED);", "-\t\toptions.put(JavaCore.COMPILER_PB_INVALID_JAVADOC, JavaCore.IGNORE);", "-\t\toptions.put(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, JavaCore.IGNORE);", "-\t\toptions.put(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, JavaCore.IGNORE);", "-\t\tstartBuild(options);", "-\t}", "+\t */", "+\tpublic void testFullBuildAllWarnings() throws CoreException, IOException {", "+\t\ttagAsSummary(\"Compile>Build>Clean>Full>All warnings\", false); // do NOT put in fingerprint", "+\t\tstartBuild(warningOptions(true/*all warnings*/), false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8227103d7bb7e8748b23cff4d432dd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "f21df947ddaafde66f4dcb18fce1af560901e739", "commitAfterChange": "d960babe998acb7fa00822d4abe32ae4e44701ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void attachSource(IPath zipPath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tpublic void attachSource(IPath zipPath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t//remove the property\r", "-\t\t\t\tgetWorkspace().getRoot().setPersistentProperty(qName, null);\r", "+\t\t\t\tsetSourceAttachmentProperty(null); //remove the property\r", "-\t\t\t\tgetWorkspace().getRoot().setPersistentProperty(qName, zipPath.toString() + ATTACHMENT_PROPERTY_DELIMITER + rootPath.toString());\r", "+\t\t\t\tsetSourceAttachmentProperty(zipPath.toString() + ATTACHMENT_PROPERTY_DELIMITER + rootPath.toString());\r", "-\t\t\ttry {\r", "-\t\t\t\tgetWorkspace().getRoot().setPersistentProperty(qName, null); // loose info - will be recomputed\r", "-\t\t\t} catch(CoreException ce){\r", "-\t\t\t}\r", "+\t\t\tsetSourceAttachmentProperty(null); // loose info - will be recomputed\r", "-\t\t\ttry {\r", "-\t\t\t\tgetWorkspace().getRoot().setPersistentProperty(qName, null); // loose info - will be recomputed\r", "-\t\t\t} catch(CoreException ce){\r", "-\t\t\t}\r", "+\t\t\tsetSourceAttachmentProperty(null);  // loose info - will be recomputed\r"]}], "num": 47240}