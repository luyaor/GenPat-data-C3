{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1898e884e122b9f26d7b4d6bc13fd906", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32fd1b8337c8eb5641d99f5cf8a73f6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["+\tif ((possibleComplianceLevels & AbstractCompilerTest.F_1_6) != 0) {", "+\t\tArrayList tests_1_6 = (ArrayList)standardTests.clone();", "+\t\ttests_1_6.addAll(RunComparableTests.ALL_CLASSES);", "+\t\ttests_1_6.add(AssertionTest.class);", "+\t\ttests_1_6.add(ClassFileReaderTest_1_5.class);", "+\t\ttests_1_6.add(GenericTypeSignatureTest.class);", "+\t\ttests_1_6.add(InternalHexFloatTest.class);", "+\t\ttests_1_6.add(JavadocTest_1_5.class);", "+\t\ttests_1_6.add(BatchCompilerTest.class);", "+\t\ttests_1_6.add(ExternalizeStringLiterals15Test.class);", "+\t\ttests_1_6.add(StackMapAttributeTest.class);", "+\t\t// Reset forgotten subsets tests", "+\t\tTestCase.TESTS_PREFIX = null;", "+\t\tTestCase.TESTS_NAMES = null;", "+\t\tTestCase.TESTS_NUMBERS= null;", "+\t\tTestCase.TESTS_RANGE = null;", "+\t\tall.addTest(AbstractCompilerTest.suiteForComplianceLevel(AbstractCompilerTest.COMPLIANCE_1_6, RegressionTestSetup.class, tests_1_6));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86aca4e8072f0164319b9a670263eb64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "50acefc2048260070d2acf9418003e0db6eb34ad", "commitAfterChange": "92852bca9a4e0ceab73bc2cba44652396852b1a5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate void formatStatements(final List statements, boolean insertNewLineAfterLastStatement)", "signatureAfterChange": " \t \tprivate void formatStatements(final List statements, boolean insertNewLineAfterLastStatement)", "diff": ["-\t\tfor (int i = 0; i < statementsLength; i++) {", "-\t\t\tfinal Statement statement = (Statement) statements.get(i);", "+\t\tif (statementsLength > 1) {", "+\t\t\tStatement previousStatement = (Statement) statements.get(0);", "+\t\t\tpreviousStatement.accept(this);", "+\t\t\tfor (int i = 1; i < statementsLength - 1; i++) {", "+\t\t\t\tfinal Statement statement = (Statement) statements.get(i);", "+\t\t\t\tif (i > 0", "+\t\t\t\t\t\t&& (previousStatement.getNodeType() == ASTNode.EMPTY_STATEMENT)", "+\t\t\t\t\t\t&& (statement.getNodeType() != ASTNode.EMPTY_STATEMENT)) {", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t}", "+\t\t\t\tstatement.accept(this);", "+\t\t\t\tpreviousStatement = statement;", "+\t\t\t}", "+\t\t\tfinal Statement statement = ((Statement) statements.get(statementsLength - 1));", "+\t\t\tif (previousStatement.getNodeType() == ASTNode.EMPTY_STATEMENT", "+\t\t\t\t\t&& statement.getNodeType() != ASTNode.EMPTY_STATEMENT) {", "+\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t}", "+\t\t} else {", "+\t\t\t((Statement) statements.get(0)).accept(this);", "+\t\t}", "+\t\tif (insertNewLineAfterLastStatement) {", "+\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "908ba61c49a4605b283feab8ec3aa21e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/TestAll.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn suite(JRE_PATH, EVAL_DIRECTORY);", "-}", "+\t\tArrayList testClasses = new ArrayList();", "+\t\ttestClasses.add(SanityTestEvaluationContext.class);", "+\t\ttestClasses.add(SanityTestEvaluationResult.class);", "+\t\ttestClasses.add(VariableTest.class);", "+\t\ttestClasses.add(CodeSnippetTest.class);", "+\t\ttestClasses.add(NegativeCodeSnippetTest.class);", "+\t\ttestClasses.add(NegativeVariableTest.class);", "+\t\ttestClasses.add(DebugEvaluationTest.class);", "+\t\t", "+\t\treturn AbstractCompilerTest.suite(TestAll.class.getName(), DebugEvaluationSetup.class, testClasses);", "+\t\t// Disable evaluation tests on Linux"]}], "num": 31175}