{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2c7183fec3f72ba92496cd0374843e9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fab3b863b9aa1a3c8733156dc879ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "01cd32eca444bcd6948bb1f985568a530753506d", "commitAfterChange": "0b99e59f5b8c33dba4fea6bb15ed5a9967aeb172", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "signatureAfterChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "diff": ["-\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "-\t\t\t\t\t\ttempName[length-1] = 'I';", "-\t\t\t\t\t\ttempName[length] = 'E';", "-\t\t\t\t\t\ttempName[length+1] = 'S';", "+\t\t\t\t\t\tboolean precededByAVowel = false;", "+\t\t\t\t\t\tif(tempName.length > 1) {", "+\t\t\t\t\t\t\tswitch (tempName[length-2]) {", "+\t\t\t\t\t\t\t\tcase 'A':", "+\t\t\t\t\t\t\t\tcase 'E':", "+\t\t\t\t\t\t\t\tcase 'I':", "+\t\t\t\t\t\t\t\tcase 'O':", "+\t\t\t\t\t\t\t\tcase 'U':", "+\t\t\t\t\t\t\t\t\tprecededByAVowel = true;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (precededByAVowel) {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 1], 0, length);", "+\t\t\t\t\t\t\ttempName[length] = 'S';", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\t\t\ttempName[length-1] = 'I';", "+\t\t\t\t\t\t\ttempName[length] = 'E';", "+\t\t\t\t\t\t\ttempName[length+1] = 'S';", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "-\t\t\t\t\t\ttempName[length-1] = 'i';", "-\t\t\t\t\t\ttempName[length] = 'e';", "-\t\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\t\tboolean precededByAVowel = false;", "+\t\t\t\t\t\tif(tempName.length > 1) {", "+\t\t\t\t\t\t\tswitch (tempName[length-2]) {", "+\t\t\t\t\t\t\t\tcase 'a':", "+\t\t\t\t\t\t\t\tcase 'e':", "+\t\t\t\t\t\t\t\tcase 'i':", "+\t\t\t\t\t\t\t\tcase 'o':", "+\t\t\t\t\t\t\t\tcase 'u':", "+\t\t\t\t\t\t\t\t\tprecededByAVowel = true;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (precededByAVowel) {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 1], 0, length);", "+\t\t\t\t\t\t\ttempName[length] = 's';", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tSystem.arraycopy(tempName, 0, tempName = new char[length + 2], 0, length);", "+\t\t\t\t\t\t\ttempName[length-1] = 'i';", "+\t\t\t\t\t\t\ttempName[length] = 'e';", "+\t\t\t\t\t\t\ttempName[length+1] = 's';", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a658349e3a2ed114fee693c844df515", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "0243628c08ab4b4900a7554ddbc8a451c6a47550", "commitAfterChange": "047584befb8673c45fb37a5eec1f22e3adb791d0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["+\t\t\t\t\tTypeVariableBinding[] typeVariables = methodBinding.original().typeVariables;", "+\t\t\t\t\tlength = typeVariables == null ? 0 : typeVariables.length;", "+\t\t\t\t\tchar[][] typeParameterNames = new char[length][];", "+\t\t\t\t\tchar[][][] typeParameterBoundNames = new char[length][][];", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tTypeVariableBinding typeVariable = typeVariables[i];", "+\t\t\t\t\t\ttypeParameterNames[i] = typeVariable.sourceName;", "+\t\t\t\t\t\tif (typeVariable.firstBound == null) {", "+\t\t\t\t\t\t\ttypeParameterBoundNames[i] = new char[0][];", "+\t\t\t\t\t\t} else if (typeVariable.firstBound == typeVariable.superclass) {", "+\t\t\t\t\t\t\tint boundCount = 1 + (typeVariable.superInterfaces == null ? 0 : typeVariable.superInterfaces.length);", "+\t\t\t\t\t\t\ttypeParameterBoundNames[i] = new char[boundCount][];", "+\t\t\t\t\t\t\ttypeParameterBoundNames[i][0] = typeVariable.superclass.sourceName;", "+\t\t\t\t\t\t\tfor (int j = 1; j < boundCount; j++) {", "+\t\t\t\t\t\t\t\ttypeParameterBoundNames[i][j] = typeVariables[i].superInterfaces[j - 1].sourceName;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tint boundCount = typeVariable.superInterfaces == null ? 0 : typeVariable.superInterfaces.length;", "+\t\t\t\t\t\t\ttypeParameterBoundNames[i] = new char[boundCount][];", "+\t\t\t\t\t\t\tfor (int j = 0; j < boundCount; j++) {", "+\t\t\t\t\t\t\t\ttypeParameterBoundNames[i][j] = typeVariables[i].superInterfaces[j].sourceName;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t\t\ttypeParameterNames,", "+\t\t\t\t\t\t\ttypeParameterBoundNames,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0ab1e71564f13d9eb713fae400d97f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8b43d224642ee7d1b616bb187976b917b924c6e2", "commitAfterChange": "8728875c2badeba6a33c75154be535794f7d1a9c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate char[][] findEnclosingTypeNames(Scope scope)", "signatureAfterChange": " \t \tprivate char[][] findEnclosingTypeNames(Scope scope)", "diff": ["-\t\t\t\t\tfor (int i = 0; i < classTypeParameters.length; i++) {", "-\t\t\t\t\t\tTypeParameter typeParameter = classTypeParameters[i];", "-\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "-\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\tif(classTypeParameters != null) {", "+\t\t\t\t\t\tfor (int i = 0; i < classTypeParameters.length; i++) {", "+\t\t\t\t\t\t\tTypeParameter typeParameter = classTypeParameters[i];", "+\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "+\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\tfor (int i = 0; i < methodTypeParameters.length; i++) {", "-\t\t\t\t\t\t\tTypeParameter typeParameter = methodTypeParameters[i];", "-\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "-\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\tif(methodTypeParameters != null) {", "+\t\t\t\t\t\t\tfor (int i = 0; i < methodTypeParameters.length; i++) {", "+\t\t\t\t\t\t\t\tTypeParameter typeParameter = methodTypeParameters[i];", "+\t\t\t\t\t\t\t\tif(excludedNameCount == excludedNames.length) {", "+\t\t\t\t\t\t\t\t\tSystem.arraycopy(excludedNames, 0, excludedNames = new char[excludedNameCount * 2][], 0, excludedNameCount);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;", "-\t\t\t\t\t\t\texcludedNames[excludedNameCount++] = typeParameter.name;"]}], "num": 37323}