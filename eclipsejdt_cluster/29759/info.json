{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1413d29fefd8d7a1cfab6e2319d0672", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbd64aa435ee35b1afc2f09bcb306d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public static String[] getParameterTypes(String methodSignature) throws IllegalArgumentException", "signatureAfterChange": "\r public static char[][] getParameterTypes(char[] methodSignature) throws IllegalArgumentException", "diff": ["-public static String[] getParameterTypes(String methodSignature) throws IllegalArgumentException {\r", "+public static char[][] getParameterTypes(char[] methodSignature) throws IllegalArgumentException {\r", "-\t\tString[] result = new String[count];\r", "+\t\tchar[][] result = new char[count][];\r", "-\t\tint i = methodSignature.indexOf(C_PARAM_START) + 1;\r", "+\t\tint i = CharOperation.indexOf(C_PARAM_START, methodSignature) + 1;\r", "-\t\t\tchar c = methodSignature.charAt(i++);\r", "+\t\t\tchar c = methodSignature[i++];\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_BOOLEAN;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_BOOLEAN};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_BYTE;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_BYTE};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_CHAR;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_CHAR};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_DOUBLE;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_DOUBLE};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_FLOAT;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_FLOAT};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_INT;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_INT};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_LONG;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_LONG};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_SHORT;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_SHORT};\r", "-\t\t\t\t\t\t\t\tresult[count++] = SIG_VOID;\r", "+\t\t\t\t\t\t\t\tresult[count++] = new char[] {C_VOID};\r", "-\t\t\t\t\t\tresult[count++] = methodSignature.substring(start, i);\r", "+\t\t\t\t\t\tresult[count++] = CharOperation.subarray(methodSignature, start, i);\r", "-\t\t\t\t\ti = methodSignature.indexOf(C_SEMICOLON, i) + 1;\r", "+\t\t\t\t\ti = CharOperation.indexOf(C_SEMICOLON, methodSignature, i) + 1;\r", "-\t\t\t\t\tresult[count++] = methodSignature.substring(start, i);\r", "+\t\t\t\t\tresult[count++] = CharOperation.subarray(methodSignature, start, i);\r", "-\t} catch (StringIndexOutOfBoundsException e) {\r", "+\t} catch (ArrayIndexOutOfBoundsException e) {\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9aa78af4fd246901dadf1cdf2b6a8aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "signatureAfterChange": "\r public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "diff": ["-\tthis(problemReporter, false, false);\r", "-}\r"]}], "num": 29759}