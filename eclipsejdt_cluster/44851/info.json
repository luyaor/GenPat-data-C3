{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc4fad7a3c5a303a2c586c445f56f2c9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a0b8376ae372de560a08e1947cc859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "d9f5208ccd9842b7305a76e615fa0b04487a1a33", "commitAfterChange": "9ac3d3205dd69d72df25a75c1584224d5519622d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test004() throws CoreException", "signatureAfterChange": " public void test004() throws CoreException", "diff": ["-\t\t\t\"\\n\" + //$NON-NLS-1$", "-\t\t\t\"\t// start of method declaration\\n\" + //$NON-NLS-1$", "-\t\t\t\"\\n\" + //$NON-NLS-1$", "-\t\t\t\"\t// end of class X\\n\" + //$NON-NLS-1$", "-\t\t\t\"}\\n\" +  //$NON-NLS-1$", "-\t\t\t\"// end of compilation unit\\n\" //$NON-NLS-1$", "+\t\t\t\"}\\n\" //$NON-NLS-1$", "-\t\t\t\"\\n\" + //$NON-NLS-1$", "-\t\t\t\"\t// start of method declaration\\n\" + //$NON-NLS-1$", "-\t\t\t\"\\n\" + //$NON-NLS-1$", "-\t\t\t\"\t// end of class X\\n\" + //$NON-NLS-1$", "-\t\t\t\"}\\n\" + //$NON-NLS-1$", "-\t\t\t\"// end of compilation unit\\n\"; //$NON-NLS-1$", "+\t\t\t\"}\\n\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d214aa9cd1e21f6d3bf47f504c5dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tpublic void test048()", "signatureAfterChange": "  \tpublic void test048()", "diff": ["-\t\t\t\"  /*  Method descriptor  #15 (Z)I */\\n\" + ", "+\t\t\t\"  // Method descriptor  #15 (Z)I\\n\" + ", "+\t\t\t\"  // Stack: 1, Locals: 4\\n\" + ", "-\t\t\t\"    /* Stack: 1, Locals: 4 */\\n\" + ", "-\t\t\t\"    Code attribute:\\n\" + ", "-\t\t\t\"       0  iload_0\\n\" + ", "-\t\t\t\"       1  ifeq 9\\n\" + ", "-\t\t\t\"       4  jsr 20\\n\" + ", "-\t\t\t\"       7  iconst_1\\n\" + ", "-\t\t\t\"       8  ireturn\\n\" + ", "-\t\t\t\"       9  iconst_2\\n\" + ", "-\t\t\t\"      10  istore_1\\n\" + ", "-\t\t\t\"      11  goto 25\\n\" + ", "-\t\t\t\"      14  astore_3\\n\" + ", "-\t\t\t\"      15  jsr 20\\n\" + ", "-\t\t\t\"      18  aload_3\\n\" + ", "-\t\t\t\"      19  athrow\\n\" + ", "-\t\t\t\"      20  astore_2\\n\" + ", "-\t\t\t\"      21  iconst_3\\n\" + ", "-\t\t\t\"      22  istore_1\\n\" + ", "-\t\t\t\"      23  ret 2\\n\" + ", "-\t\t\t\"      25  jsr 20\\n\" + ", "-\t\t\t\"      28  iload_1\\n\" + ", "-\t\t\t\"      29  ireturn\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"    Exception Table:\\n\" + ", "-\t\t\t\"      [pc: 0, pc: 7] -> 14 when : any\\n\" + ", "-\t\t\t\"      [pc: 9, pc: 14] -> 14 when : any\\n\" + ", "-\t\t\t\"      [pc: 25, pc: 28] -> 14 when : any\\n\" + ", "-\t\t\t\"      \\n\" + ", "-\t\t\t\"    Line number attribute:\\n\" + ", "-\t\t\t\"      [pc: 0, line: 6]\\n\" + ", "-\t\t\t\"      [pc: 9, line: 7]\\n\" + ", "-\t\t\t\"      [pc: 14, line: 8]\\n\" + ", "-\t\t\t\"      [pc: 21, line: 9]\\n\" + ", "-\t\t\t\"      [pc: 23, line: 10]\\n\" + ", "-\t\t\t\"      [pc: 25, line: 8]\\n\" + ", "-\t\t\t\"      [pc: 28, line: 11]\\n\" + ", "-\t\t\t\"    Local variable table attribute:\\n\" + ", "-\t\t\t\"      [pc: 0, pc: 30] local: bool index: 0 type: boolean\\n\" + ", "-\t\t\t\"      [pc: 11, pc: 14] local: j index: 1 type: int\\n\" + ", "-\t\t\t\"      [pc: 23, pc: 30] local: j index: 1 type: int\\n\";", "+\t\t\t\"     0  iload_0\\n\" + ", "+\t\t\t\"     1  ifeq 9\\n\" + ", "+\t\t\t\"     4  jsr 20\\n\" + ", "+\t\t\t\"     7  iconst_1\\n\" + ", "+\t\t\t\"     8  ireturn\\n\" + ", "+\t\t\t\"     9  iconst_2\\n\" + ", "+\t\t\t\"    10  istore_1\\n\" + ", "+\t\t\t\"    11  goto 25\\n\" + ", "+\t\t\t\"    14  astore_3\\n\" + ", "+\t\t\t\"    15  jsr 20\\n\" + ", "+\t\t\t\"    18  aload_3\\n\" + ", "+\t\t\t\"    19  athrow\\n\" + ", "+\t\t\t\"    20  astore_2\\n\" + ", "+\t\t\t\"    21  iconst_3\\n\" + ", "+\t\t\t\"    22  istore_1\\n\" + ", "+\t\t\t\"    23  ret 2\\n\" + ", "+\t\t\t\"    25  jsr 20\\n\" + ", "+\t\t\t\"    28  iload_1\\n\" + ", "+\t\t\t\"    29  ireturn\\n\" + ", "+\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 7] -> 14 when : any\\n\" + ", "+\t\t\t\"        [pc: 9, pc: 14] -> 14 when : any\\n\" + ", "+\t\t\t\"        [pc: 25, pc: 28] -> 14 when : any\\n\" + ", "+\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\"        [pc: 0, line: 6]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 7]\\n\" + ", "+\t\t\t\"        [pc: 14, line: 8]\\n\" + ", "+\t\t\t\"        [pc: 21, line: 9]\\n\" + ", "+\t\t\t\"        [pc: 23, line: 10]\\n\" + ", "+\t\t\t\"        [pc: 25, line: 8]\\n\" + ", "+\t\t\t\"        [pc: 28, line: 11]\\n\" + ", "+\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 30] local: bool index: 0 type: Z\\n\" + ", "+\t\t\t\"        [pc: 11, pc: 14] local: j index: 1 type: I\\n\" + ", "+\t\t\t\"        [pc: 23, pc: 30] local: j index: 1 type: I\\n\";"]}], "num": 44851}