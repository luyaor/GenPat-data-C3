{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d73bd044ad2ff4fb90d86c64f82867f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b62cabfc29a2d30883bfb4f5abd7a96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public IClasspathEntry createSourceEntry(String referingProjectName, String src, String patterns)", "signatureAfterChange": " public IClasspathEntry createSourceEntry(String referingProjectName, String src, String patterns)", "diff": ["+\t\tboolean ignoreIfBetter = false;", "+\t\t\t\tbreak;", "+\t\t\tcase '?':", "+\t\t\t\tkind = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\tignoreIfBetter = true;", "-\t\taccessRules[j] = JavaCore.newAccessRule(new Path(rule.substring(1)), kind);", "+\t\taccessRules[j] = JavaCore.newAccessRule(new Path(rule.substring(1)), ignoreIfBetter ? kind | IAccessRule.IGNORE_IF_BETTER : kind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3559aa8a97538103150e2911419d796", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tstatic IAccessRule[] decodeAccessRules(NodeList list)", "signatureAfterChange": " \t \tstatic IAccessRule[] decodeAccessRules(NodeList list)", "diff": ["-\t\t\t\tresult[index++] = new ClasspathAccessRule(new Path(pattern), kind);", "+\t\t\t\tboolean ignoreIfBetter = \"true\".equals(elementAccessRule.getAttribute(TAG_IGNORE_IF_BETTER)); //$NON-NLS-1$", "+\t\t\t\tresult[index++] = new ClasspathAccessRule(new Path(pattern), ignoreIfBetter ? kind | IAccessRule.IGNORE_IF_BETTER : kind);"]}], "num": 8634}