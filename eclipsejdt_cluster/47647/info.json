{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23fbe73b3fd6773436bbd9e948e63d37", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562ad8cee47dd7f50bf21fb780772ab0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["-\t\t// Get compilation unit and compare source", "+\t\t// Get source and compare with file contents", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "-\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, source);", "+\t\tString systemSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, systemSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6348a9d0876383aae2d88c51d2dfa574", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "6fb7a9335718cbeefed30f7d73d3fe305c8a755d", "commitAfterChange": "801d7d5511e83327c3894f00f5cd936b85d670b5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test013() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void _test013() throws JavaModelException, CoreException", "diff": ["-\tpublic void test013() throws JavaModelException, CoreException {", "+\tpublic void _test013() throws JavaModelException, CoreException {", "-\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, source);", "+\t\tString independentEncodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tString independentSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", independentEncodedContents, independentSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22f8e0d2c3c1fec60d1de0d45abacfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "72ca2c3744b0b46cfe8780d450ef8209198d924d", "commitAfterChange": "d45ad1a67e8f9a416fa456cf20e55baeabaa980f", "methodNumberBeforeChange": 235, "methodNumberAfterChange": 235, "signatureBeforeChange": " \tprotected void touch(File f)", "signatureAfterChange": " \tprotected void touch(File f)", "diff": ["-\t\tint time = 1000;", "+\t\tfinal int time = 1000;", "-\t\t// Assertion to track the reason of unexpected failures with tests on external resources", "+\t\t// Loop until the last modified time has really changed on the file", "-\t\tassertEquals(\"The file \"+f.getAbsolutePath()+\" was not touched!\", lastModified+time, f.lastModified());", "+\t\tint n = 1;", "+\t\twhile (n < 10) { // retry 9 times more if necessary", "+\t\t\tif (f.lastModified() != lastModified) {", "+\t\t\t\t// We can leave the loop as the file has been really touched", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tf.setLastModified(lastModified + n*time);", "+\t\t\torg.eclipse.jdt.core.tests.util.Util.waitAtLeast(time);", "+\t\t\tn++;", "+\t\t}", "+\t\tassertFalse(\"The file \"+f.getAbsolutePath()+\" was not touched!\", lastModified == f.lastModified());"]}], "num": 47647}