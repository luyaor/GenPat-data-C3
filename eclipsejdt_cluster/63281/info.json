{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc5ec31ab0987ca5893fa7772f33e1ab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c55a0bc5ea9176f0c2dac13c27f1615", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\tboolean buggyArguments = false;", "+\t\tboolean argumentsHaveErrors = false;", "-            \t\tbuggyArguments = true;", "+            \t\targumentsHaveErrors = true;", "-\t\t\t\t\tbuggyArguments = true;", "+\t\t\t\t\targumentsHaveErrors = true;", "-\t\t\t\tbuggyArguments = true;", "+\t\t\t\targumentsHaveErrors = true;", "-\t\t\t\tbuggyArguments = true;", "+\t\t\t\targumentsHaveErrors = true;", "-\t\tif (!argumentsTypeElided && !buggyArguments) {", "+\t\tif (!argumentsTypeElided && !argumentsHaveErrors) {", "-\t\t\t\t// TODO: in which cases do we have to assign this.resolvedType & this.descriptor (with problem bindings) to prevent NPE downstream??", "-\t\tif (!buggyArguments) {", "+\t\tif (!argumentsHaveErrors) {", "-\t\tif (haveDescriptor && !buggyArguments && blockScope.compilerOptions().isAnnotationBasedNullAnalysisEnabled) {", "+\t\tif (haveDescriptor && !argumentsHaveErrors && blockScope.compilerOptions().isAnnotationBasedNullAnalysisEnabled) {", "-\t\t\tthis.voidCompatible = this.original.voidCompatible = expression.statementExpression();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82e879e67df89a73693115f1e78decd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic boolean match(DoStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(UnionType node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(UnionType node, Object other) {", "+\t\tif (!(other instanceof UnionType)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tUnionType o = (UnionType) other;", "+\t\treturn", "+\t\t\tsafeSubtreeListMatch(", "+\t\t\t\tnode.types(),", "+\t\t\t\to.types());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0fa4a58c19d7d199aa141cb95054c2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "8ddd224fb46a93d2d42c51b540573c4ff473b8c5", "commitAfterChange": "185794a74ce9e7c2b47a4b8dbd2f41e89a7a469e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean match(ArrayAccess node, Object other)", "signatureAfterChange": " \tpublic boolean match(AnonymousClassDeclaration node, Object other)", "diff": ["+\tpublic boolean match(AnonymousClassDeclaration node, Object other) {", "+\t\tif (!(other instanceof AnonymousClassDeclaration)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tAnonymousClassDeclaration o = (AnonymousClassDeclaration) other;", "+\t\treturn safeSubtreeListMatch(node.bodyDeclarations(), o.bodyDeclarations());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a550ae83d41105d07358453b0225e75c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationFragment node, Object other)", "signatureAfterChange": " \tpublic boolean match(TypeMethodReference node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(TypeMethodReference node, Object other) {", "+\t\tif (!(other instanceof TypeMethodReference)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tTypeMethodReference o = (TypeMethodReference) other;", "+\t\treturn (", "+\t\t\tsafeSubtreeMatch(node.getType(), o.getType())", "+\t\t\t\t&& safeSubtreeListMatch(node.typeArguments(), o.typeArguments())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23fd026100f8df38b7a35bdc66c5b44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationExpression node, Object other)", "signatureAfterChange": " \tpublic boolean match(TextElement node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(TextElement node, Object other) {", "+\t\tif (!(other instanceof TextElement)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tTextElement o = (TextElement) other;", "+\t\treturn safeEquals(node.getText(), o.getText());", "+\t}"]}], "num": 63281}