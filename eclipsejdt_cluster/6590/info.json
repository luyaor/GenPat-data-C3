{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1589c6bd004c5ab1001f0a786814495", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1348d0663940927c10f9c383ddd00e61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames)", "diff": ["-\t\tAnnotationBinding[] annots = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\tAnnotationBinding[] annots = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(binding.id), this, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ec701df4669ac07152359c80b279be8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "f69ff4a662bad4fd89b88d240101a9ac63e64955", "commitAfterChange": "7c493ed6b34d98f52ff4fc8520fcd8662e5ffd91", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "diff": ["-\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4cc7b41fa53899ef3bf5dbda3652d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " TypeBinding getTypeFromSignature(char[] signature, int start, int end, boolean isParameterized, TypeBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "signatureAfterChange": " TypeBinding getTypeFromSignature(char[] signature, int start, int end, boolean isParameterized, TypeBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dac2ce2e39237945ceddc670bf21edc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "diff": ["-\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(), this, missingTypeNames);", "+\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);"]}], "num": 6590}