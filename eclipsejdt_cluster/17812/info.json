{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55f8e5e40f6acaaa87fe425de8011db2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949a7c6e4f75c5c649859d7bcf4544d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/AnnotationDependencyTests.java", "commitBeforeChange": "19eef6f26c48016adc4a14301bf3da3ca0ccecb1", "commitAfterChange": "650839ed308774b6702bdf04023742a308aab499", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate void addAnnotationType()", "signatureAfterChange": " \t \tprivate void addAnnotationType()", "diff": ["+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoInt {\\n\"", "+\t\t\t+ \"int value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoInt\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoBoolean {\\n\"", "+\t\t\t+ \"boolean value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoBoolean\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoByte {\\n\"", "+\t\t\t+ \"byte value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoByte\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoChar {\\n\"", "+\t\t\t+ \"char value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoChar\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoShort {\\n\"", "+\t\t\t+ \"short value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoShort\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoDouble {\\n\"", "+\t\t\t+ \"double value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoDouble\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoFloat {\\n\"", "+\t\t\t+ \"float value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoFloat\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoLong {\\n\"", "+\t\t\t+ \"long value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoLong\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoStringArray {\\n\"", "+\t\t\t+ \"String[] value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoStringArray\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoAnnotation {\\n\"", "+\t\t\t+ \"AnnoLong value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoAnnotation\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"enum E {\\n\"", "+\t\t\t+ \"A, B, C\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"E\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoEnum {\\n\"", "+\t\t\t+ \"E value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoEnum\", annoCode);", "+\t\tannoCode = \"package p1;\\n\"", "+\t\t\t+ \"@interface AnnoClass {\\n\"", "+\t\t\t+ \"Class<?> value();\\n\"", "+\t\t\t+ \"}\\n\";", "+\t\tenv.addClass(this.srcRoot, \"p1\", \"AnnoClass\", annoCode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9563803bd419950ec891a6fe2700daa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "4ce47574d95f211bec6cf02737b4ec30e386f5b1", "commitAfterChange": "6c173db4ca33e9b5b355fdac19466f82485aafe6", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 342, "signatureBeforeChange": " \tpublic void test0341() throws JavaModelException", "signatureAfterChange": " \tpublic void test0341() throws JavaModelException", "diff": ["-\t\t\t\t\"if (field != null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new IOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"if (field != null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new IOException();\\n\" +", "+\t\t\t\t\"\t\t} else if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\n\" +", "+\t\t\t\t\"\t\t} else if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "+\t\t\t\t\"\t\t} else {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new IOException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new IOException();\\n\" +", "-\t\t\t\t\"if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\n\" +", "+\t\t\t\t\"\t\t} else if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "+\t\t\t\t\"\t\t} else {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new MalformedURLException();\\n\" +", "-\t\t\t\t\"if (field == null) {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "-\t\t\t\t\"\t\t} else {\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"if (field == null) {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "+\t\t\t\t\"\t\t} else {\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new InterruptedIOException();\\n\" +", "-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tthrow new UnsupportedEncodingException();\\n\" +"]}], "num": 17812}