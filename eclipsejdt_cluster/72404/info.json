{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2df1d905a53032932ba3d2c5aa7f96e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234ad2201f8e41554e70ae01cbc673f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "03fb447430bbd6d0961e14660d00cb87259d1e29", "commitAfterChange": "ed2c95aa71d14d30cd0a1f4a55b319c490dab2f3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "signatureAfterChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "diff": ["-\t\tObject value = this.packageFragments.get(pkgName);", "-\t\tif (value != null) {", "+\t\tint pkgIndex = this.packageFragments.getIndex(pkgName);", "+\t\tif (pkgIndex != -1) {", "+\t\t\tObject value = this.packageFragments.valueTable[pkgIndex];", "+\t\t\t// reuse existing String[]", "+\t\t\tpkgName = (String[]) this.packageFragments.keyTable[pkgIndex];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c15b5542b3c309acbeccaa6a040ae1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "03fb447430bbd6d0961e14660d00cb87259d1e29", "commitAfterChange": "ed2c95aa71d14d30cd0a1f4a55b319c490dab2f3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void seekPackageFragments(String name, boolean partialMatch, IJavaElementRequestor requestor)", "signatureAfterChange": " \tpublic void seekPackageFragments(String name, boolean partialMatch, IJavaElementRequestor requestor)", "diff": ["-\t\t\tObject value = this.packageFragments.get(splittedName);", "-\t\t\tif (value instanceof PackageFragmentRoot) {", "-\t\t\t\trequestor.acceptPackageFragment(((PackageFragmentRoot) value).getPackageFragment(splittedName));", "-\t\t\t} else {", "-\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "-\t\t\t\tif (roots != null) {", "-\t\t\t\t\tfor (int i = 0, length = roots.length; i < length; i++) {", "-\t\t\t\t\t\tif (requestor.isCanceled())", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[i];", "-\t\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(splittedName));", "+\t\t\tint pkgIndex = this.packageFragments.getIndex(splittedName);", "+\t\t\tif (pkgIndex != -1) {", "+\t\t\t\tObject value = this.packageFragments.valueTable[pkgIndex];", "+\t\t\t\t// reuse existing String[]", "+\t\t\t\tString[] pkgName = (String[]) this.packageFragments.keyTable[pkgIndex];", "+\t\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\t\trequestor.acceptPackageFragment(((PackageFragmentRoot) value).getPackageFragment(pkgName));", "+\t\t\t\t} else {", "+\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\t\tif (roots != null) {", "+\t\t\t\t\t\tfor (int i = 0, length = roots.length; i < length; i++) {", "+\t\t\t\t\t\t\tif (requestor.isCanceled())", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[i];", "+\t\t\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(pkgName));", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a2a6f30e8888ef105a1d4387237072", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "03fb447430bbd6d0961e14660d00cb87259d1e29", "commitAfterChange": "ed2c95aa71d14d30cd0a1f4a55b319c490dab2f3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch, boolean patternMatch)", "signatureAfterChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch, boolean patternMatch)", "diff": ["-\t\t\tObject value = this.packageFragments.get(splittedName);", "-\t\t\tif (value == null)", "+\t\t\tint pkgIndex = this.packageFragments.getIndex(splittedName);", "+\t\t\tif (pkgIndex == -1)", "+\t\t\tObject value = this.packageFragments.valueTable[pkgIndex];", "+\t\t\t// reuse existing String[]", "+\t\t\tString[] pkgName = (String[]) this.packageFragments.keyTable[pkgIndex];", "-\t\t\t\treturn new IPackageFragment[] {((PackageFragmentRoot) value).getPackageFragment(splittedName)};", "+\t\t\t\treturn new IPackageFragment[] {((PackageFragmentRoot) value).getPackageFragment(pkgName)};", "-\t\t\t\t\tresult[i] = ((PackageFragmentRoot) roots[i]).getPackageFragment(splittedName);", "+\t\t\t\t\tresult[i] = ((PackageFragmentRoot) roots[i]).getPackageFragment(pkgName);"]}], "num": 72404}