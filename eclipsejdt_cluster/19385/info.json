{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6d1de4d7408a80b9f69f3ae1e31d003", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d42abff3c586ebec0b0a0f60c90ed9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic void parseMethod(Parser parser, CompilationUnitDeclaration unit)", "signatureAfterChange": "  \tpublic void parseMethod(Parser parser, CompilationUnitDeclaration unit)", "diff": ["-\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t}", "-\t\t\t\tif (fields[i] instanceof Initializer) {", "-\t\t\t\t\t((Initializer) fields[i]).parseStatements(parser, this, unit);", "+\t\t\t\tfinal FieldDeclaration fieldDeclaration = fields[i];", "+\t\t\t\tswitch(fieldDeclaration.getKind()) {", "+\t\t\t\t\tcase AbstractVariableDeclaration.INITIALIZER:", "+\t\t\t\t\t\t((Initializer) fieldDeclaration).parseStatements(parser, this, unit);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase AbstractVariableDeclaration.ENUM_CONSTANT:", "+\t\t\t\t\t\tFieldDeclaration enumConstant = fieldDeclaration;", "+\t\t\t\t\t\tfinal Expression expression = enumConstant.initialization;", "+\t\t\t\t\t\tif (expression instanceof QualifiedAllocationExpression) {", "+\t\t\t\t\t\t\t((QualifiedAllocationExpression) expression).anonymousType.parseMethod(parser, unit);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932d8ac48b9d92fe4bbaf7fdabe7bc41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "40839c8ae241bc3756eb5365b207dfbe748c6775", "commitAfterChange": "5b51a72819d5c60012d8b11dca35a367dee2c02a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate AstNode parseMethod( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "signatureAfterChange": "  \tprivate AstNode parseBlockStatements( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "diff": ["-\tprivate AstNode parseMethod(", "+\tprivate AstNode parseBlockStatements(", "-\t\t\t\t\treturn parseMethod(memberType, unit, position);", "+\t\t\t\t\treturn parseBlockStatements(memberType, unit, position);", "-\t\t\t\tif (!(fields[i] instanceof Initializer))", "+\t\t\t\tFieldDeclaration field = fields[i];", "+\t\t\t\tif (field.sourceStart > position)", "-\t\t\t\tInitializer initializer = (Initializer) fields[i];", "-\t\t\t\tif (initializer.sourceStart > position)", "-\t\t\t\t\tcontinue;", "-\t\t\t\tif (initializer.declarationSourceEnd >= position) {", "-\t\t\t\t\tgetParser().parseBlockStatements(initializer, type, unit);", "-\t\t\t\t\treturn initializer;", "+\t\t\t\tif (field.declarationSourceEnd >= position) {", "+\t\t\t\t\tif (field instanceof Initializer) {", "+\t\t\t\t\t\tgetParser().parseBlockStatements((Initializer)field, type, unit);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn field;"]}], "num": 19385}