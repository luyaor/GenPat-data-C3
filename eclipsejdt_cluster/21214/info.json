{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b14dcd951d0421ac440ddc426df1ea8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b2aa008dd81b2beeefc339892e9b9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "bf6df8627f96e973f0cc6c092846b75072d50f5c", "commitAfterChange": "80128531342fff8be18f7aa90d817f119ab6ec8a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tvoid postCloneNodeEvent(ASTNode node, ASTNode clone)", "signatureAfterChange": " \tvoid postCloneNodeEvent(ASTNode node, ASTNode clone)", "diff": ["+\t */", "-\t\tif(this.rewriter != null) {", "-\t\t\tthis.rewriter.postCloneNodeEvent(node, clone);", "+\t\tif (this.disableEvents > 0) {", "+\t\t\t// doing lazy init OR already processing an event", "+\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "+\t\t\treturn;", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.disableEvents++;", "+\t\t\tthis.eventHandler.postCloneNodeEvent(node, clone);", "+\t\t\t// N.B. even if event handler blows up, the AST is not", "+\t\t\t// corrupted since node has already been changed", "+\t\t} finally {", "+\t\t\tthis.disableEvents--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a1a40d28a1e7d76623d3d0325d83b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "bf6df8627f96e973f0cc6c092846b75072d50f5c", "commitAfterChange": "80128531342fff8be18f7aa90d817f119ab6ec8a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tvoid preCloneNodeEvent(ASTNode node)", "signatureAfterChange": " \tvoid preCloneNodeEvent(ASTNode node)", "diff": ["+\t */", "-\t\tif(this.rewriter != null) {", "-\t\t\tthis.rewriter.preCloneNodeEvent(node);", "+\t\tif (this.disableEvents > 0) {", "+\t\t\t// doing lazy init OR already processing an event", "+\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "+\t\t\treturn;", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.disableEvents++;", "+\t\t\tthis.eventHandler.preCloneNodeEvent(node);", "+\t\t\t// N.B. even if event handler blows up, the AST is not", "+\t\t\t// corrupted since node has already been changed", "+\t\t} finally {", "+\t\t\tthis.disableEvents--;"]}], "num": 21214}