{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72d4dbbedff9d509e5a95183dbc41e07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73884cfec1ad360a19cc500ed3b9e7c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": " protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\tif (((length = astLengthStack[astLengthPtr--]) == 1)", "-\t\t&& (astStack[astPtr] == null)) {", "+\tif (((length = this.astLengthStack[this.astLengthPtr--]) == 1)", "+\t\t&& (this.astStack[this.astPtr] == null)) {", "-\t\tastPtr--;", "+\t\tthis.astPtr--;", "-\t\t\talloc = new CodeSnippetAllocationExpression(evaluationContext);", "+\t\t\talloc = new CodeSnippetAllocationExpression(this.evaluationContext);", "-\t\talloc.sourceEnd = endPosition; //the position has been stored explicitly", "+\t\talloc.sourceEnd = this.endPosition; //the position has been stored explicitly", "-\t\tif ((length = expressionLengthStack[expressionLengthPtr--]) != 0) {", "-\t\t\texpressionPtr -= length;", "+\t\tif ((length = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\t\tthis.expressionPtr -= length;", "-\t\t\t\texpressionStack, ", "-\t\t\t\texpressionPtr + 1, ", "+\t\t\t\tthis.expressionStack, ", "+\t\t\t\tthis.expressionPtr + 1, ", "-\t\talloc.sourceStart = intStack[intPtr--];", "+\t\talloc.sourceStart = this.intStack[this.intPtr--];", "-\t\tTypeDeclaration anonymousTypeDeclaration = (TypeDeclaration) astStack[astPtr];", "-\t\tanonymousTypeDeclaration.declarationSourceEnd = endStatementPosition;", "+\t\tTypeDeclaration anonymousTypeDeclaration = (TypeDeclaration) this.astStack[this.astPtr];", "+\t\tanonymousTypeDeclaration.declarationSourceEnd = this.endStatementPosition;", "-\t\t\tanonymousTypeDeclaration.allocation.sourceEnd = endStatementPosition;", "+\t\t\tanonymousTypeDeclaration.allocation.sourceEnd = this.endStatementPosition;", "-\t\tastPtr--;", "-\t\tastLengthPtr--;", "+\t\tthis.astPtr--;", "+\t\tthis.astLengthPtr--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d8396f6ffcd7dbb49863b9afb75333", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void getBaseTypeValue(int baseTypeID)", "signatureAfterChange": " public void getBaseTypeValue(int baseTypeID)", "diff": ["-\tcountLabels = 0;", "+\tthis.countLabels = 0;", "-\t\tposition++;", "-\t\tbCodeStream[classFileOffset++] = OPC_invokevirtual;", "+\t\tthis.position++;", "+\t\tthis.bCodeStream[this.classFileOffset++] = OPC_invokevirtual;", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangByteByteValue());", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangByteByteValue());", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangShortShortValue());", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangShortShortValue());", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangCharacterCharValue());", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangCharacterCharValue());", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangIntegerIntValue());", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangIntegerIntValue());", "-\t\t\tstackDepth++;", "-\t\t\tif (stackDepth > stackMax)", "-\t\t\t\tstackMax = stackDepth;", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangLongLongValue());", "+\t\t\tthis.stackDepth++;", "+\t\t\tif (this.stackDepth > this.stackMax)", "+\t\t\t\tthis.stackMax = this.stackDepth;", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangLongLongValue());", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangFloatFloatValue());", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangFloatFloatValue());", "-\t\t\tstackDepth++;", "-\t\t\tif (stackDepth > stackMax)", "-\t\t\t\tstackMax = stackDepth;", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangDoubleDoubleValue());", "+\t\t\tthis.stackDepth++;", "+\t\t\tif (this.stackDepth > this.stackMax)", "+\t\t\t\tthis.stackMax = this.stackDepth;", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangDoubleDoubleValue());", "-\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) constantPool).literalIndexForJavaLangBooleanBooleanValue());", "+\t\t\twriteUnsignedShort(((CodeSnippetConstantPool) this.constantPool).literalIndexForJavaLangBooleanBooleanValue());"]}], "num": 25493}