{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "276e1b0e5aad1c97ecf7c8fc59343131", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091d50f4be52a204fdaba646dc1de55a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 277, "signatureBeforeChange": " public void testBug110060_AllTypeNames08new() throws CoreException", "signatureAfterChange": " public void testBug110060_AllTypeNames02_SamePartCount() throws CoreException", "diff": ["+}", "+public void testBug110060_AllTypeNames02_SamePartCount() throws CoreException {", "+\tsetUpBug110060_TypePattern();", "+\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();", "+\tsearchAllTypeNames(\"aaa\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, requestor);", "+\t// Invalid camel case pattern => replace the camel case flag with exact match one (case insensitive)", "+\tassertSearchResults(\"Unexpected all type names\",", "+\t\t\"b110060.AAa\\n\" + ", "+\t\t\"b110060.Aaa\",", "-public void testBug110060_AllTypeNames08new() throws CoreException {", "-\tsearchAllTypeNames(\"aa\", SearchPattern.R_CAMEL_CASE_MATCH, requestor);", "-\t\t\"\", // no match as pattern is not a valid camel case"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351a7836f90a1f5954ac4618a9158ebd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 283, "methodNumberAfterChange": 285, "signatureBeforeChange": " public void testBug110060_AllTypeNames10() throws CoreException", "signatureAfterChange": " public void testBug110060_AllTypeNames08() throws CoreException", "diff": ["+}", "+public void testBug110060_AllTypeNames08() throws CoreException {", "+\tsetUpBug110060_TypePattern();", "+\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();", "+\tsearchAllTypeNames(\"aaa\", SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CASE_SENSITIVE, requestor);", "+\t// Invalid camel case pattern => replace the camel case flag with prefix match one keeping case sensitive", "+\tassertSearchResults(", "+\t\t\"Unexpected all type names\",", "+\t\t\"\",", "+\t\trequestor);", "+}", "-public void testBug110060_AllTypeNames10() throws CoreException {", "-\tsearchAllTypeNames(\"aa\", SearchPattern.R_CAMEL_CASE_MATCH | SearchPattern.R_CASE_SENSITIVE, requestor);", "-\tassertSearchResults(", "-\t\t\"Unexpected all type names\",", "-\t\t\"\", // no match as pattern is not a valid camel case", "-\t\trequestor);", "-}"]}], "num": 56843}