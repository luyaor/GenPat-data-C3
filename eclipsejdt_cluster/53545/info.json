{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f80709bb1afdd6a8ea466fdfcd2a412", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ac8a652402cea5bba0c96bee31e3f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tprivate void discardGeneratedWorkingCopy( String typeName, IFile parentFile, boolean deleteFromParent2TypeNames ) \t\tthrows JavaModelException", "signatureAfterChange": "  \tprivate void removeFromWorkingCopyMaps( IFile derivedFile, IFile parentFile ) \t\tthrows JavaModelException", "diff": ["-\t", "-\tprivate void discardGeneratedWorkingCopy( String typeName, IFile parentFile, boolean deleteFromParent2TypeNames )", "-\t\tthrows JavaModelException", "-\t{", "-\t\tif ( deleteFromParent2TypeNames )", "-\t\t{", "-\t\t\tSet<String> typeNames = _parent2TypeNames.get( parentFile );", "-\t\t\t", "-\t\t\tif ( typeNames == null ) throw new RuntimeException( \"Unexpected null entry in _parent2TypeNames map.\");", "-\t\t\tif ( ! typeNames.contains( typeName )) throw new RuntimeException (\"type names set didn't contain expected value\");", "-\t\t\t", "-\t\t\ttypeNames.remove( typeName );", "-\t\t}", "-\t", "-\t\tSet<IFile> parents = _typeName2Parents.get( typeName );", "-\t\t// TODO:  change these to assertions", "-\t\tif ( parents == null ) throw new RuntimeException( \"parents == null and it shouldnt\");", "-\t\tif ( ! parents.contains( parentFile )) throw new RuntimeException(\"parents set should contain parentCompilationUnit\");", "-\t\tparents.remove( parentFile );", "-\t\t", "-\t\tif ( parents.size() == 0 )", "-\t\t{", "-\t\t\tICompilationUnit cu = _typeName2WorkingCopy.get( typeName );", "-", "-\t\t\tif ( cu == null ) throw new RuntimeException( \"compilation unit is null and it shouldn't be\");", "-\t\t\t", "-\t\t\t_typeName2WorkingCopy.remove( typeName );", "-\t\t\tcu.discardWorkingCopy();", "-\t\t}", "-\t}", "+", "+\tprivate void removeFromWorkingCopyMaps( IFile derivedFile, IFile parentFile )", "+\t\tthrows JavaModelException", "+\t{", "+\t\tICompilationUnit workingCopy = _generatedFile2WorkingCopy.get( derivedFile );", "+\t\tif ( workingCopy == null )", "+\t\t\treturn;", "+\t", "+\t\tSet<IFile> parents = _generatedWorkingCopy2OpenParentFiles.get( workingCopy );", "+", "+\t\t// TODO:  change these to assertions", "+\t\tif ( parents == null ) throw new RuntimeException( \"parents == null and it shouldnt\");", "+\t\tif ( ! parents.contains( parentFile )) throw new RuntimeException(\"parents set should contain parentCompilationUnit\");", "+\t\t", "+\t\t// remove entry from parents _derivedWorkingCopy2OpenParentFiles", "+\t\tparents.remove( parentFile );", "+\t", "+\t\t// and remove entry from _derivedFile2WorkingCopy", "+\t\tif ( parents.size() == 0 )", "+\t\t{", "+\t\t\t_generatedFile2WorkingCopy.remove( derivedFile );", "+\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63fab165f9770932e27f9bbe35a67513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tprivate boolean deleteGeneratedFile(IFile fileToDelete, IFile parent, IProgressMonitor progressMonitor, boolean deleteFromParent2DerivedFiles )  \t\tthrows CoreException", "signatureAfterChange": " \t \tprivate void removeFromFileMaps( IFile generatedFile, IFile parentFile )  \t    throws CoreException", "diff": ["-\t", "-\tprivate boolean deleteGeneratedFile(IFile fileToDelete, IFile parent, IProgressMonitor progressMonitor, boolean deleteFromParent2DerivedFiles ) ", "-\t\tthrows CoreException", "-\t{", "-\t\tString typeName = getTypeNameForDerivedFile( fileToDelete );", "-\t\tif ( _typeName2WorkingCopy.containsKey( typeName ) )", "-\t\t\tdiscardGeneratedWorkingCopy( typeName, parent );", "-\t\t// update _parents2DerivedFiles map", "-\t\tif ( deleteFromParent2DerivedFiles )", "-\t\t{", "-\t\t\tSet<IFile> derivedFiles = _parent2DerivedFiles.get( parent );", "-", "-\t\t\t// assertions", "-\t\t\tif ( derivedFiles == null ) throw new RuntimeException( \"derivedFiles is null and it shouldn't be\");", "-\t\t\tif ( ! derivedFiles.contains( fileToDelete )) throw new RuntimeException( \"derivedFiles does not contain fileToDelete\");", "-\t\t\tderivedFiles.remove( fileToDelete );", "-\t\t}", "-\t\t", "-\t\t// update _derivedFile2Parents map and delete file if it has no other parents", "-\t\tSet<IFile> parents = _derivedFile2Parents.get( fileToDelete );", "-\t\t", "-\t\t// assertions", "-\t\tif( parents == null ) throw new RuntimeException( \" parents is null and it shouldn't be\" );", "-\t\tif( ! parents.contains( parent )) throw new RuntimeException( \"parents set does not contain parent\" );", "-\t\t", "-\t\tparents.remove( parent );", "-\t\tif ( parents.size() == 0 )", "-\t\t{", "-\t\t\tfileToDelete.delete( true, true, progressMonitor );", "+\t", "+\tprivate void removeFromFileMaps( IFile generatedFile, IFile parentFile ) ", "+\t    throws CoreException ", "+\t{", "+\t\tif (_generatedFile2WorkingCopy.containsKey(generatedFile))", "+\t\t\tdiscardGeneratedWorkingCopy(generatedFile, parentFile);", "+", "+\t\tSet<IFile> derivedFiles = _parentFile2GeneratedFiles.get(parentFile);", "+", "+\t\t// assertions", "+\t\tif (derivedFiles == null)", "+\t\t\tthrow new RuntimeException(", "+\t\t\t\t\t\"derivedFiles is null and it shouldn't be\");", "+\t\tif (!derivedFiles.contains(generatedFile))", "+\t\t\tthrow new RuntimeException(", "+\t\t\t\t\t\"derivedFiles does not contain fileToDelete\");", "+", "+\t\tderivedFiles.remove(generatedFile);", "+\t\t", "+\t\t// update _derivedFile2Parents map", "+\t\tSet<IFile> parents = _generatedFile2ParentFiles.get(generatedFile);", "+", "+\t\t// assertions", "+\t\tif (parents == null)", "+\t\t\tthrow new RuntimeException(\" parents is null and it shouldn't be\");", "+\t\tif (!parents.contains(parentFile))", "+\t\t\tthrow new RuntimeException(\"parents set does not contain parent\");", "+", "+\t\tparents.remove(parentFile);", "+", "+\t}"]}], "num": 53545}