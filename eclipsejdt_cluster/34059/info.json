{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "417696cd89f22b76a4e6bba06bd56666", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1a1ac09e7c6e98a9452f96f3831a6d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "cb2eaefdef69578cdf849641990d24a5851d3e0b", "commitAfterChange": "8d4ab5644565c055b67fa7745388cbe96026e76a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\tboolean illFormed = false;", "+\t\t", "-            \tif (argumentsTypeElided || this.original != this) // no interest in continuing to error check copy.", "-            \t\treturn this.resolvedType = null; // FUBAR, bail out ...", "+            \treturn this.resolvedType = null; // FUBAR, bail out ...", "-\t\t\t\t\tthis.scope.problemReporter().lambdaParameterTypeMismatched(argument, argument.type, expectedParameterType);", "+\t\t\t\t\tif (!(expectedParameterType instanceof InferenceVariable)) {", "+\t\t\t\t\t\tthis.scope.problemReporter().lambdaParameterTypeMismatched(argument, argument.type, expectedParameterType);", "+\t\t\t\t\t\tillFormed = true; // continue to type check.", "+\t\t\t\t\t}", "-\t\treturn this.resolvedType;", "+\t\treturn illFormed ? this.resolvedType = null : this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5da6edfc5ee7359951d0a883abe924d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "8d4ab5644565c055b67fa7745388cbe96026e76a", "commitAfterChange": "d40d65cc310f8b80e4964046fc88b861b3de2b63", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\tboolean illFormed = false;", "-\t\t", "+\t\tboolean buggyArguments = false;", "-            \treturn this.resolvedType = null; // FUBAR, bail out ...", "+            \tif (argumentsTypeElided || this.original != this) // no interest in continuing to error check copy.", "+            \t\treturn this.resolvedType = null; // FUBAR, bail out ...", "+            \telse {", "+            \t\tthis.resolvedType = null; // continue to type check.", "+            \t\tbuggyArguments = true;", "+            \t}", "-\t\tboolean buggyArguments = false;", "-\t\t\t\t\t\tillFormed = true; // continue to type check.", "+\t\t\t\t\t\tthis.resolvedType = null; // continue to type check.", "-\t\treturn illFormed ? this.resolvedType = null : this.resolvedType;", "+\t\treturn this.resolvedType;"]}], "num": 34059}