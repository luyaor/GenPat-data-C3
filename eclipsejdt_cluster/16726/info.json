{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fefd0e6a4880717477b104f28d9de384", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "429b2c635b986b678598864de54e2340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\tint exceptionTableLength = codeAttribute.getExceptionTableLength();", "+\t\tfinal int exceptionTableLength = codeAttribute.getExceptionTableLength();", "-\t\t\tIExceptionTableEntry[] exceptionTableEntries = codeAttribute.getExceptionTable();", "+\t\t\tfinal IExceptionTableEntry[] exceptionTableEntries = codeAttribute.getExceptionTable();", "-\t\tILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "-\t\tint lineAttributeLength = lineNumberAttribute == null ? 0 : lineNumberAttribute.getLineNumberTableLength();", "+\t\tfinal ILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "+\t\tfinal int lineAttributeLength = lineNumberAttribute == null ? 0 : lineNumberAttribute.getLineNumberTableLength();", "-\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "-\t\tint localVariableAttributeLength = localVariableAttribute == null ? 0 : localVariableAttribute.getLocalVariableTableLength();", "+\t\tfinal ILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "+\t\tfinal int localVariableAttributeLength = localVariableAttribute == null ? 0 : localVariableAttribute.getLocalVariableTableLength();", "-\t\tILocalVariableTypeTableAttribute localVariableTypeAttribute= getLocalVariableTypeAttribute(codeAttribute);", "-\t\tint localVariableTypeTableLength = localVariableTypeAttribute == null ? 0 : localVariableTypeAttribute.getLocalVariableTypeTableLength();", "+\t\tfinal ILocalVariableTypeTableAttribute localVariableTypeAttribute= (ILocalVariableTypeTableAttribute) getAttribute(IAttributeNamesConstants.LOCAL_VARIABLE_TYPE_TABLE, codeAttribute);", "+\t\tfinal int localVariableTypeTableLength = localVariableTypeAttribute == null ? 0 : localVariableTypeAttribute.getLocalVariableTypeTableLength();", "-\t\t} ", "+\t\t}", "+\t\tfinal int length = codeAttribute.getAttributesCount();", "+\t\tif (length != 0) {", "+\t\t\tIClassFileAttribute[] attributes = codeAttribute.getAttributes();", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tIClassFileAttribute attribute = attributes[i];", "+\t\t\t\tif (CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.STACK_MAP_TABLE)) {", "+\t\t\t\t\tdisassemble((StackMapTableAttribute) attribute, buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t} else if (attribute != lineNumberAttribute", "+\t\t\t\t\t\t&& attribute != localVariableAttribute", "+\t\t\t\t\t\t&& attribute != localVariableTypeAttribute) {", "+\t\t\t\t\tdisassemble(attribute, buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ec7669376ca094e46686651cc78770", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "a82d28ad3c4f97d6c4b28c5439c23028fcc38c73", "commitAfterChange": "65fa5c3060e4327551c38497dd416e8e9a64be21", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\tICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "-\t\tchar[] methodDescriptor = methodInfo.getDescriptor();", "-\t\tIClassFileAttribute classFileAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.SIGNATURE);", "-\t\tISignatureAttribute signatureAttribute = (ISignatureAttribute) classFileAttribute;", "-\t\tIClassFileAttribute runtimeVisibleAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_VISIBLE_ANNOTATIONS);", "-\t\tIClassFileAttribute runtimeInvisibleAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_INVISIBLE_ANNOTATIONS);", "-\t\tIClassFileAttribute runtimeVisibleParameterAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS);", "-\t\tIClassFileAttribute runtimeInvisibleParameterAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS);", "-\t\tIClassFileAttribute annotationDefaultAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.ANNOTATION_DEFAULT);", "+\t\tfinal ICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "+\t\tfinal char[] methodDescriptor = methodInfo.getDescriptor();", "+\t\tfinal ISignatureAttribute signatureAttribute = (ISignatureAttribute) Util.getAttribute(methodInfo, IAttributeNamesConstants.SIGNATURE);", "+\t\tfinal IClassFileAttribute runtimeVisibleAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_VISIBLE_ANNOTATIONS);", "+\t\tfinal IClassFileAttribute runtimeInvisibleAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_INVISIBLE_ANNOTATIONS);", "+\t\tfinal IClassFileAttribute runtimeVisibleParameterAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS);", "+\t\tfinal IClassFileAttribute runtimeInvisibleParameterAnnotationsAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS);", "+\t\tfinal IClassFileAttribute annotationDefaultAttribute = Util.getAttribute(methodInfo, IAttributeNamesConstants.ANNOTATION_DEFAULT);", "+\t\t\t// put the annotation default attribute if needed", "+\t\t\tif (annotationDefaultAttribute != null) {", "+\t\t\t\tbuffer.append(\" default \"); //$NON-NLS-1$", "+\t\t\t\tdisassembleAsModifier((IAnnotationDefaultAttribute) annotationDefaultAttribute, buffer, lineSeparator, tabNumber);", "+\t\t\t}"]}], "num": 16726}