{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "684ffc391b2614316c6ac742076bc1cc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3a26cb9c2f806170f772da47e32868", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "a430dcf4a558e1c36680a36ef4af1ace851e14d2", "commitAfterChange": "dce0303da6d0cbf1d565391873636c507bd68d3f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static String convertToIndependantLineDelimiter(String source)", "signatureAfterChange": " public static String convertToIndependantLineDelimiter(String source)", "diff": ["+\tif (source.indexOf('\\n') == -1 && source.indexOf('\\r') == -1) return source;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff75b5a85a08f0862f01edcbed6be5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " protected void runJavac( \t\tString[] testFiles, \t\tboolean expectingCompilerErrors, \t\tString expectedCompilerLog, \t\tString expectedOutputString, \t\tString expectedErrorString, \t\tboolean shouldFlushOutputDirectory,  \t\tJavacTestOptions options)", "signatureAfterChange": " protected void runJavac( \t\tString[] testFiles, \t\tboolean expectingCompilerErrors, \t\tString expectedCompilerLog, \t\tString expectedOutputString, \t\tString expectedErrorString, \t\tboolean shouldFlushOutputDirectory,  \t\tJavacTestOptions options)", "diff": ["-\t\t\t\t\t\tif (!expectedErrorString.equals(err)) {", "+\t\t\t\t\t\tif (!expectedErrorString.equals(err) && // special case: command-line java does not like missing main methods", "+\t\t\t\t\t\t\t\t!(expectedErrorString.length() == 0 && ", "+\t\t\t\t\t\t\t\t\terr.indexOf(\"java.lang.NoSuchMethodError: main\") != -1)) {"]}], "num": 47367}