{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58c75d5acdc995a619815deff2e95cb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a52b8e3e336bf084a5f5795fe906057", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tprivate void findMessageSends(\r \t\tchar[] token,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r private void findMessageSends(char[] token, TypeBinding[] argTypes, Scope scope)", "diff": ["-\t}\r", "-\tprivate void findMessageSends(\r", "-\t\tchar[] token,\r", "-\t\tTypeBinding[] argTypes,\r", "-\t\tScope scope,\r", "-\t\tInvocationSite invocationSite) {\r", "-\t\tif (token == null)\r", "-\t\t\treturn;\r", "-\r", "-\t\tboolean staticsOnly = false;\r", "-\t\t// need to know if we're in a static context (or inside a constructor)\r", "-\t\tint tokenLength = token.length;\r", "-\t\tObjectVector methodsFound = new ObjectVector();\r", "-\t\tdone : while (true) { // done when a COMPILATION_UNIT_SCOPE is found\r", "-\t\t\tswitch (scope.kind) {\r", "-\t\t\t\tcase Scope.METHOD_SCOPE :\r", "-\t\t\t\t\t// handle the error case inside an explicit constructor call (see MethodScope>>findField)\r", "-\t\t\t\t\tMethodScope methodScope = (MethodScope) scope;\r", "-\t\t\t\t\tstaticsOnly |= methodScope.isStatic | methodScope.isConstructorCall;\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase Scope.CLASS_SCOPE :\r", "-\t\t\t\t\tClassScope classScope = (ClassScope) scope;\r", "-\t\t\t\t\tSourceTypeBinding enclosingType = classScope.referenceContext.binding;\r", "-\t\t\t\t\tfindMethods(\r", "-\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\tenclosingType,\r", "-\t\t\t\t\t\tclassScope,\r", "-\t\t\t\t\t\tmethodsFound,\r", "-\t\t\t\t\t\tstaticsOnly,\r", "-\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\tinvocationSite);\r", "-\t\t\t\t\tstaticsOnly |= enclosingType.isStatic();\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE :\r", "-\t\t\t\t\tbreak done;\r", "-\t\t\t}\r", "-\t\t\tscope = scope.parent;\r", "-\t\t}\r", "-\t}\r", "+}\r", "+private void findMessageSends(char[] token, TypeBinding[] argTypes, Scope scope) {\r", "+\tif (token == null) return;\r", "+\r", "+\tboolean staticsOnly = false; // need to know if we're in a static context (or inside a constructor)\r", "+\tint tokenLength = token.length;\r", "+\tObjectVector methodsFound = new ObjectVector();\r", "+\tdone : while (true) { // done when a COMPILATION_UNIT_SCOPE is found\r", "+\t\tswitch (scope.kind) {\r", "+\t\t\tcase Scope.METHOD_SCOPE :\r", "+\t\t\t\t// handle the error case inside an explicit constructor call (see MethodScope>>findField)\r", "+\t\t\t\tMethodScope methodScope = (MethodScope) scope;\r", "+\t\t\t\tstaticsOnly |= methodScope.isStatic | methodScope.isConstructorCall;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase Scope.CLASS_SCOPE :\r", "+\t\t\t\tClassScope classScope = (ClassScope) scope;\r", "+\t\t\t\tSourceTypeBinding enclosingType = classScope.referenceContext.binding;\r", "+\t\t\t\tfindMethods(token, argTypes, enclosingType, classScope, methodsFound, staticsOnly, true);\r", "+\t\t\t\tstaticsOnly |= enclosingType.isStatic();\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase Scope.COMPILATION_UNIT_SCOPE :\r", "+\t\t\t\tbreak done;\r", "+\t\t}\r", "+\t\tscope = scope.parent;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23efe548aa69b58336f03827bea87cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tprivate void findMessageSends(\r \t\tchar[] token,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r private void findMessageSends(char[] token, TypeBinding[] argTypes, Scope scope)", "diff": ["-\t}\r", "-\tprivate void findMessageSends(\r", "-\t\tchar[] token,\r", "-\t\tTypeBinding[] argTypes,\r", "-\t\tScope scope,\r", "-\t\tInvocationSite invocationSite) {\r", "-\t\tif (token == null)\r", "-\t\t\treturn;\r", "-\r", "-\t\tboolean staticsOnly = false;\r", "-\t\t// need to know if we're in a static context (or inside a constructor)\r", "-\t\tint tokenLength = token.length;\r", "-\t\tObjectVector methodsFound = new ObjectVector();\r", "-\t\tdone : while (true) { // done when a COMPILATION_UNIT_SCOPE is found\r", "-\t\t\tswitch (scope.kind) {\r", "-\t\t\t\tcase Scope.METHOD_SCOPE :\r", "-\t\t\t\t\t// handle the error case inside an explicit constructor call (see MethodScope>>findField)\r", "-\t\t\t\t\tMethodScope methodScope = (MethodScope) scope;\r", "-\t\t\t\t\tstaticsOnly |= methodScope.isStatic | methodScope.isConstructorCall;\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase Scope.CLASS_SCOPE :\r", "-\t\t\t\t\tClassScope classScope = (ClassScope) scope;\r", "-\t\t\t\t\tSourceTypeBinding enclosingType = classScope.referenceContext.binding;\r", "-\t\t\t\t\tfindMethods(\r", "-\t\t\t\t\t\ttoken,\r", "-\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\tenclosingType,\r", "-\t\t\t\t\t\tclassScope,\r", "-\t\t\t\t\t\tmethodsFound,\r", "-\t\t\t\t\t\tstaticsOnly,\r", "-\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t\tinvocationSite);\r", "-\t\t\t\t\tstaticsOnly |= enclosingType.isStatic();\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE :\r", "-\t\t\t\t\tbreak done;\r", "-\t\t\t}\r", "-\t\t\tscope = scope.parent;\r", "-\t\t}\r", "-\t}\r", "+}\r", "+private void findMessageSends(char[] token, TypeBinding[] argTypes, Scope scope) {\r", "+\tif (token == null) return;\r", "+\r", "+\tboolean staticsOnly = false; // need to know if we're in a static context (or inside a constructor)\r", "+\tint tokenLength = token.length;\r", "+\tObjectVector methodsFound = new ObjectVector();\r", "+\tdone : while (true) { // done when a COMPILATION_UNIT_SCOPE is found\r", "+\t\tswitch (scope.kind) {\r", "+\t\t\tcase Scope.METHOD_SCOPE :\r", "+\t\t\t\t// handle the error case inside an explicit constructor call (see MethodScope>>findField)\r", "+\t\t\t\tMethodScope methodScope = (MethodScope) scope;\r", "+\t\t\t\tstaticsOnly |= methodScope.isStatic | methodScope.isConstructorCall;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase Scope.CLASS_SCOPE :\r", "+\t\t\t\tClassScope classScope = (ClassScope) scope;\r", "+\t\t\t\tSourceTypeBinding enclosingType = classScope.referenceContext.binding;\r", "+\t\t\t\tfindMethods(token, argTypes, enclosingType, classScope, methodsFound, staticsOnly, true);\r", "+\t\t\t\tstaticsOnly |= enclosingType.isStatic();\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase Scope.COMPILATION_UNIT_SCOPE :\r", "+\t\t\t\tbreak done;\r", "+\t\t}\r", "+\t\tscope = scope.parent;\r", "+\t}\r", "+}\r"]}], "num": 69675}