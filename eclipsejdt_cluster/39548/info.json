{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be90671848c7dce35a1f33565b71bf98", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e007c4cc53ee52073a175adb93db039", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "3f92e8a5a07dd9ede4257e502806d13fe53cd5fa", "commitAfterChange": "ef611461f875a680b17b8fa198a6386473d15159", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 254, "signatureBeforeChange": " public void test0250() throws JavaModelException", "signatureAfterChange": " public void test0250() throws JavaModelException", "diff": ["-\tthis.workingCopies = new ICompilationUnit[2];", "-\tthis.workingCopies[0] = getWorkingCopy(", "-\t\t\"/Completion/src/camelcase/Test.java\",", "-\t\t\"package camelcase;\"+", "-\t\t\"import static camelcase.ImportedType.oTT;\"+", "-\t\t\"public class Test {\\n\"+", "-\t\t\"}\");", "+\tthis.oldOptions = JavaCore.getOptions();", "+\ttry {", "+\t\tHashtable options = new Hashtable(oldOptions);", "+\t\toptions.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.ENABLED);", "+\t\tJavaCore.setOptions(options);", "-\tthis.workingCopies[1] = getWorkingCopy(", "-\t\t\"/Completion/src/camelcase/ImportedType.java\",", "-\t\t\"package camelcase;\"+", "-\t\t\"public class ImportedType {\\n\"+", "-\t\t\"  public static void oneTwoThree(){}\\n\"+", "-\t\t\"  public static void oTTMethod(){}\\n\"+", "-\t\t\"}\");", "-", "-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\tString str = this.workingCopies[0].getSource();", "-\tString completeBehind = \"oTT\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-", "-\tassertResults(", "-\t\t\t\"oneTwoThree[METHOD_IMPORT]{camelcase.ImportedType.oneTwoThree;, Lcamelcase.ImportedType;, ()V, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"oTTMethod[METHOD_IMPORT]{camelcase.ImportedType.oTTMethod;, Lcamelcase.ImportedType;, ()V, oTTMethod, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\t\tthis.workingCopies = new ICompilationUnit[2];", "+\t\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\t\"/Completion/src/camelcase/Test.java\",", "+\t\t\t\"package camelcase;\"+", "+\t\t\t\"import static camelcase.ImportedType.oTT;\"+", "+\t\t\t\"public class Test {\\n\"+", "+\t\t\t\"}\");", "+\t\t", "+\t\tthis.workingCopies[1] = getWorkingCopy(", "+\t\t\t\"/Completion/src/camelcase/ImportedType.java\",", "+\t\t\t\"package camelcase;\"+", "+\t\t\t\"public class ImportedType {\\n\"+", "+\t\t\t\"  public static void oneTwoThree(){}\\n\"+", "+\t\t\t\"  public static void oTTMethod(){}\\n\"+", "+\t\t\t\"}\");", "+\t", "+\t\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t\tString str = this.workingCopies[0].getSource();", "+\t\tString completeBehind = \"oTT\";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"oneTwoThree[METHOD_IMPORT]{camelcase.ImportedType.oneTwoThree;, Lcamelcase.ImportedType;, ()V, oneTwoThree, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"oTTMethod[METHOD_IMPORT]{camelcase.ImportedType.oTTMethod;, Lcamelcase.ImportedType;, ()V, oTTMethod, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tJavaCore.setOptions(oldOptions);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac72f38de3990e631486d8d78112beec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3f92e8a5a07dd9ede4257e502806d13fe53cd5fa", "commitAfterChange": "ef611461f875a680b17b8fa198a6386473d15159", "methodNumberBeforeChange": 620, "methodNumberAfterChange": 620, "signatureBeforeChange": " public void testCamelCaseType4() throws JavaModelException", "signatureAfterChange": " public void testCamelCaseType4() throws JavaModelException", "diff": ["-\tthis.workingCopies = new ICompilationUnit[3];", "-\tthis.workingCopies[0] = getWorkingCopy(", "-\t\t\"/Completion/src/camelcase/Test.java\",", "-\t\t\"package camelcase;\"+", "-\t\t\"public class Test {\\n\"+", "-\t\t\"  FF\\n\"+", "-\t\t\"}\");", "-", "-\tthis.workingCopies[1] = getWorkingCopy(", "-\t\t\"/Completion/src/camelcase/Member1.java\",", "-\t\t\"package camelcase;\"+", "-\t\t\"public class Member1 {\\n\"+", "-\t\t\"  public class FoFoFo {\\n\"+", "-\t\t\"  }\\n\"+", "-\t\t\"}\");", "+\tthis.oldOptions = JavaCore.getOptions();", "+\ttry {", "+\t\tHashtable options = new Hashtable(oldOptions);", "+\t\toptions.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.ENABLED);", "+\t\tJavaCore.setOptions(options);", "+\t\t", "+\t\tthis.workingCopies = new ICompilationUnit[3];", "+\t\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\t\"/Completion/src/camelcase/Test.java\",", "+\t\t\t\"package camelcase;\"+", "+\t\t\t\"public class Test {\\n\"+", "+\t\t\t\"  FF\\n\"+", "+\t\t\t\"}\");", "-\tthis.workingCopies[2] = getWorkingCopy(", "-\t\t\"/Completion/src/camelcase/Member2.java\",", "-\t\t\"package camelcase;\"+", "-\t\t\"public class Member2 {\\n\"+", "-\t\t\"  public class FFFTest {\\n\"+", "-\t\t\"  }\\n\"+", "-\t\t\"}\");", "-", "-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "-\tString str = this.workingCopies[0].getSource();", "-\tString completeBehind = \"FF\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-", "-\tassertResults(", "-\t\t\t\"FF[POTENTIAL_METHOD_DECLARATION]{FF, Lcamelcase.Test;, ()V, FF, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"Member1.FoFoFo[TYPE_REF]{camelcase.Member1.FoFoFo, camelcase, Lcamelcase.Member1$FoFoFo;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "-\t\t\t\"Member2.FFFTest[TYPE_REF]{camelcase.Member2.FFFTest, camelcase, Lcamelcase.Member2$FFFTest;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "-\t\t\trequestor.getResults());", "+\t\tthis.workingCopies[1] = getWorkingCopy(", "+\t\t\t\"/Completion/src/camelcase/Member1.java\",", "+\t\t\t\"package camelcase;\"+", "+\t\t\t\"public class Member1 {\\n\"+", "+\t\t\t\"  public class FoFoFo {\\n\"+", "+\t\t\t\"  }\\n\"+", "+\t\t\t\"}\");", "+\t\t", "+\t\tthis.workingCopies[2] = getWorkingCopy(", "+\t\t\t\"/Completion/src/camelcase/Member2.java\",", "+\t\t\t\"package camelcase;\"+", "+\t\t\t\"public class Member2 {\\n\"+", "+\t\t\t\"  public class FFFTest {\\n\"+", "+\t\t\t\"  }\\n\"+", "+\t\t\t\"}\");", "+\t", "+\t\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\t\tString str = this.workingCopies[0].getSource();", "+\t\tString completeBehind = \"FF\";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\t\tassertResults(", "+\t\t\t\t\"FF[POTENTIAL_METHOD_DECLARATION]{FF, Lcamelcase.Test;, ()V, FF, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"Member1.FoFoFo[TYPE_REF]{camelcase.Member1.FoFoFo, camelcase, Lcamelcase.Member1$FoFoFo;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CAMEL_CASE + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\t\"Member2.FFFTest[TYPE_REF]{camelcase.Member2.FFFTest, camelcase, Lcamelcase.Member2$FFFTest;, null, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\trequestor.getResults());", "+\t} finally {", "+\t\tJavaCore.setOptions(oldOptions);", "+\t}"]}], "num": 39548}