{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0f2b71cdde9774bbaa5688a785a2c26", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447c4112ccff2da9805a3580f7d8455e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Util.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static String bind(String id, String[] bindings)", "signatureAfterChange": " \tpublic static String bind(String id, String[] bindings)", "diff": ["-\t\tmessage = new String(messageWithNoDoubleQuotes);", "-", "-\t\tint length = message.length();", "-\t\tint start = -1;", "+\t", "+\t\tif (bindings == null) return new String(messageWithNoDoubleQuotes);", "+\t", "+\t\tint length = messageWithNoDoubleQuotes.length;", "+\t\tint start = 0;", "-\t\t\tif ((end = message.indexOf('{', start)) > -1) {", "-\t\t\t\tif (output == null) output = new StringBuffer(80);", "-\t\t\t\toutput.append(message.substring(start + 1, end));", "-\t\t\t\tif ((start = message.indexOf('}', end)) > -1) {", "+\t\t\tif ((end = CharOperation.indexOf('{', messageWithNoDoubleQuotes, start)) > -1) {", "+\t\t\t\tif (output == null) output = new StringBuffer(length+bindings.length*20);", "+\t\t\t\toutput.append(messageWithNoDoubleQuotes, start, end - start);", "+\t\t\t\tif ((start = CharOperation.indexOf('}', messageWithNoDoubleQuotes, end + 1)) > -1) {", "+\t\t\t\t\tString argId = new String(messageWithNoDoubleQuotes, end + 1, start - end - 1);", "-\t\t\t\t\t\tindex = Integer.parseInt(message.substring(end + 1, start));", "+\t\t\t\t\t\tindex = Integer.parseInt(argId);", "-\t\t\t\t\t\tString argId = message.substring(end + 1, start);", "-\t\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t\t\t// unable to bind argument, ignore (will leave argument in)", "-\t\t\t\t\t\tif (!done) output.append(message.substring(end + 1, start + 1));", "+\t\t\t\t\t\tif (!done) output.append(messageWithNoDoubleQuotes, end + 1, start - end);", "+\t\t\t\t\tstart++;", "-\t\t\t\t\toutput.append(message.substring(end, length));", "+\t\t\t\t\toutput.append(messageWithNoDoubleQuotes, end, length);", "-\t\t\t\tif (output == null) return message;", "-\t\t\t\toutput.append(message.substring(start + 1, length));", "+\t\t\t\tif (output == null) return new String(messageWithNoDoubleQuotes);", "+\t\t\t\toutput.append(messageWithNoDoubleQuotes, start, length - start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b62ce7eab7e80fc26af01bb27169aca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String bind(String id, String[] bindings)", "signatureAfterChange": " \tpublic static String bind(String id, String[] bindings)", "diff": ["-\t\tmessage = new String(messageWithNoDoubleQuotes);", "-\t\tif (bindings == null) return message;", "-", "-\t\tint length = message.length();", "-\t\tint start = -1;", "+\t", "+\t\tif (bindings == null) return new String(messageWithNoDoubleQuotes);", "+\t", "+\t\tint length = messageWithNoDoubleQuotes.length;", "+\t\tint start = 0;", "-\t\t\tif ((end = message.indexOf('{', start)) > -1) {", "-\t\t\t\tif (output == null) output = new StringBuffer(80);", "-\t\t\t\toutput.append(message.substring(start + 1, end));", "-\t\t\t\tif ((start = message.indexOf('}', end)) > -1) {", "+\t\t\tif ((end = CharOperation.indexOf('{', messageWithNoDoubleQuotes, start)) > -1) {", "+\t\t\t\tif (output == null) output = new StringBuffer(length+bindings.length*20);", "+\t\t\t\toutput.append(messageWithNoDoubleQuotes, start, end - start);", "+\t\t\t\tif ((start = CharOperation.indexOf('}', messageWithNoDoubleQuotes, end + 1)) > -1) {", "+\t\t\t\t\tString argId = new String(messageWithNoDoubleQuotes, end + 1, start - end - 1);", "-\t\t\t\t\t\tindex = Integer.parseInt(message.substring(end + 1, start));", "+\t\t\t\t\t\tindex = Integer.parseInt(argId);", "-\t\t\t\t\t\tString argId = message.substring(end + 1, start);", "-\t\t\t\t\t\tif (!done) output.append(message.substring(end + 1, start + 1));", "+\t\t\t\t\t\tif (!done) output.append(messageWithNoDoubleQuotes, end + 1, start - end);", "+\t\t\t\t\tstart++;", "-\t\t\t\t\toutput.append(message.substring(end, length));", "+\t\t\t\t\toutput.append(messageWithNoDoubleQuotes, end, length);", "-\t\t\t\tif (output == null) return message;", "-\t\t\t\toutput.append(message.substring(start + 1, length));", "+\t\t\t\tif (output == null) return new String(messageWithNoDoubleQuotes);", "+\t\t\t\toutput.append(messageWithNoDoubleQuotes, start, length - start);"]}], "num": 55650}