{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31fea293cf0d7eb85346823d7fccf266", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57e93aef44a1677f94328f177152444d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "d16d71303cc38b4ca3466d0f95ab4eeb4eced38a", "commitAfterChange": "04423947d8d7bb07b422b48e36dce13f3a6590fc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void generateLogicalXor(BlockScope currentScope,\tCodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateLogicalXor(BlockScope currentScope,\tCodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t// reposition the endPC", "-\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df649bdd5b3575d523fb7b33e34ab71c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "2e199be1cb9f53bc00414ea80765129518e12c23", "commitAfterChange": "46bdd6036153580a7889ceb7993a8f8a6300be85", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void generateLogicalXor(BlockScope currentScope,\tCodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateLogicalXor(BlockScope currentScope,\tCodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t\t\t\t\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\t\t\t\t\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);", "-\t// reposition the endPC", "-\tcodeStream.updateLastRecordedEndPC(currentScope, codeStream.position);", "+\tcodeStream.recordPositionsFrom(codeStream.position, this.sourceEnd);"]}], "num": 38185}