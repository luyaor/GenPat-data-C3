{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "623c13ea3640d6fd328a491f4bc0a042", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a69d3f3e888761c0e893aeb67b7f5e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public boolean isPackage(char[][] compoundName, char[] packageName)", "signatureAfterChange": "\r \r public boolean isPackage(char[][] compoundName, char[] packageName)", "diff": ["-\tif (compoundName == null)\r", "-\t\tcompoundName = new char[0][];\r", "-\r", "+\tString qualifiedPackageName = new String(CharOperation.concatWith(compoundName, packageName, '/'));\r", "-\t\tif (classpathLocations[i].isPackage(compoundName, packageName))\r", "+\t\tif (classpathLocations[i].isPackage(qualifiedPackageName))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4cd2351a55662827c18e04a38ea695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "9b845d774c1c19314da22ed0751cec3d607d5455", "commitAfterChange": "649631b834e755f12bf40b9c916ce9dfc765a8d0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "signatureAfterChange": "  protected void writeClassFileContents(ClassFile classFile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "diff": ["-protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException {", "+protected void writeClassFileContents(ClassFile classFile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException {", "+//\tInputStream input = new SequenceInputStream(", "+//\t\t\tnew ByteArrayInputStream(classFile.header, 0, classFile.headerOffset),", "+//\t\t\tnew ByteArrayInputStream(classFile.contents, 0, classFile.contentsOffset));", "+\tInputStream input = new ByteArrayInputStream(classFile.getBytes());", "-\t\tfile.setContents(new ByteArrayInputStream(bytes), true, false, null);", "+\t\tfile.setContents(input, true, false, null);", "-\t\tfile.create(new ByteArrayInputStream(bytes), IResource.FORCE | IResource.DERIVED, null);", "+\t\tfile.create(input, IResource.FORCE | IResource.DERIVED, null);"]}], "num": 37871}