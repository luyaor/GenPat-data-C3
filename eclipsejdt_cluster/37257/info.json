{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3094c0f02f948514ef90fedebc70da6e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3be34da07a1fbc41c40d2d08d3d4cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "a6002c5b8e946e1be020c41b3eb8e042f8637f31", "commitAfterChange": "ed3347ae7ec216d556b809af245174ad70158540", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String[] getParameterNames() throws JavaModelException", "signatureAfterChange": " public String[] getParameterNames() throws JavaModelException", "diff": ["+ \t\t\tif (timeOut == 0) {", "+ \t\t\t\t// don't try to fetch the values", "+ \t\t\t\treturn this.parameterNames = getRawParameterNames(paramCount);", "+ \t\t\t} if (timeOut == -1) {", "+ \t\t\t\ttimeOut = 0; // infinite time out, wait until the fetching is complete", "+ \t\t\t}", "+\t\t\t\t\t\t// this call has a side-effect on the per project info cache"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9434bb9d6d2fb169d174baf2d373465c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "d48c3936eb7643859e6c2cea0aecbe0fd30a502d", "commitAfterChange": "45a50f132d1a94817dc9fe333d375cdfb8483391", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["-\t\t\tblock.printBody(indent, output);", "+\t\t\tif (block != null) {", "+\t\t\t\tblock.printBody(indent, output);", "+\t\t\t}", "+\t\t} else if (block != null) {", "+\t\t\tblock.printStatement(indent, output);", "-\t\t\treturn block.printStatement(indent, output);", "+\t\t\tprintIndent(indent, output).append(\"{}\"); //$NON-NLS-1$", "+\t\treturn output;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8befe040e7c3d6f5b7a63013d45d6a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "37d67ed9fa27dc85b6112e216c3af6d687e12530", "commitAfterChange": "8924c9453af0fcfcdde960b7165abadc76ad272e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["+\t\t\tif (signatureAttribute != null) {", "+\t\t\t\tdisassembleGenericSignature(mode, buffer, signatureAttribute.getSignature());", "+\t\t\t}", "-\t\t\tbuffer.append(\" extends \"); //$NON-NLS-1$", "-\t\t\tbuffer.append(returnClassName(superclassName, '.', mode));", "+\t\t\tif (!isJavaLangObject(superclassName)) {", "+\t\t\t\tbuffer.append(\" extends \"); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(returnClassName(superclassName, '.', mode));", "+\t\t\t}", "+\t}"]}], "num": 37257}