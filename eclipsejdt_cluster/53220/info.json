{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbb3bf6649618d8e652b051a780231ab", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cfe252089dea69cd7b9deceaa141b8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "bcb46990486d868577608d099b51c359510600ab", "commitAfterChange": "76641371763d25b26245b79d3162c6759e069b9e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int match(MessageSend node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(MemberValuePair node, MatchingNodeSet nodeSet)", "diff": ["+public int match(MemberValuePair node, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findReferences) return IMPOSSIBLE_MATCH;", "+", "+\tif (!matchesName(this.pattern.selector, node.name)) return IMPOSSIBLE_MATCH;", "+", "+\treturn nodeSet.addMatch(node, ((InternalSearchPattern)this.pattern).mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f597be706ce46414cc4543e2670244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "4dd777707c2803e1e51e44f3ccb37074b166c552", "commitAfterChange": "bb0062c9650742fadc1d35f4bf3fa1b174bd1969", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(MethodDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(MethodDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-\tTypeReference returnType =  node.returnType;", "-\tif (returnType == null || !matchesTypeReference(this.pattern.returnSimpleName, returnType)) return;", "+\tif (!matchesTypeReference(this.pattern.returnSimpleName, node.returnType)) return;", "+", "+\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c764a4cfa0021a2863313fe38c5e2f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferenceLocator.java", "commitBeforeChange": "c1df0e7e5c85f7bdffc6de0240f4d56d2d495552", "commitAfterChange": "cb2eaefdef69578cdf849641990d24a5851d3e0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public int match(TypeReference node, MatchingNodeSet nodeSet)", "signatureAfterChange": "  public int match(LambdaExpression node, MatchingNodeSet nodeSet)", "diff": ["+", "+public int match(LambdaExpression node, MatchingNodeSet nodeSet) {", "+\tif (this.pattern.superRefKind != SuperTypeReferencePattern.ONLY_SUPER_INTERFACES)", "+\t\treturn IMPOSSIBLE_MATCH;", "+\tnodeSet.mustResolve = true;", "+\treturn nodeSet.addMatch(node, POSSIBLE_MATCH);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3760fc740fb217df1e4e8a05e4b75f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "ec12553ca5ec05e5d29ae2df78ae2ebf9cac1065", "commitAfterChange": "165d2ee0a4a374ec3dbb0f3df780db24664ac692", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(MessageSend msgSend, MatchingNodeSet nodeSet)", "diff": ["+ */", "+public int match(MessageSend msgSend, MatchingNodeSet nodeSet)  {", "+\tif ((msgSend.bits & ASTNode.InsideJavadoc) == 0) return IMPOSSIBLE_MATCH;", "+\tif (this.pattern.declaringSimpleName == null || CharOperation.equals(msgSend.selector, this.pattern.declaringSimpleName)) {", "+\t\treturn nodeSet.addMatch(msgSend, ((InternalSearchPattern)this.pattern).mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+\t}", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd022a3f0ef4d8bfe80fbf278790607d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "cefc7f3f8677282aa49e610700500999ffcaffcb", "commitAfterChange": "89e8879d5dd978e5f2535f9d8b7bac080dd4f73b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int match(MethodDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": "  public int match(LambdaExpression node, MatchingNodeSet nodeSet)", "diff": ["+", "+public int match(LambdaExpression node, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findDeclarations) return IMPOSSIBLE_MATCH;", "+\tif (this.pattern.parameterSimpleNames.length != node.arguments().length) return IMPOSSIBLE_MATCH;", "+", "+\tnodeSet.mustResolve = true;", "+\treturn nodeSet.addMatch(node, POSSIBLE_MATCH);", "+}"]}], "num": 53220}