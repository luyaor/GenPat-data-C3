{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70b00e8fb2ce033666744d6f21775bbe", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035b7cdad0fdb9371b1fb163f8b202db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "60507801da6a601cb9ccd1a6711dd6f2c042109a", "commitAfterChange": "ce85ea384272e2d2a973888e0c9a4872544d60c3", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 138, "signatureBeforeChange": " public void testSearchScope07() throws CoreException", "signatureAfterChange": " public void testSearchScope07() throws CoreException", "diff": ["-        IJavaSearchScope scope = SearchEngine.createHierarchyScope(null, type, true, true, null);", "+        IJavaSearchScope scope = SearchEngine.createStrictHierarchyScope(null, type, true, false, null);", "-        assertFalse(\"a10.C should be not included in hierarchy scope\", scope.encloses(type));", "-        assertFalse(\"a10/C.java should be included in hierarchy scope\", scope.encloses(cuC.getUnderlyingResource().getFullPath().toString()));       ", "+        assertFalse(\"a10.C should not be included in hierarchy scope\", scope.encloses(type));", "+        assertFalse(\"a10/C.java should not be included in hierarchy scope\", scope.encloses(cuC.getUnderlyingResource().getFullPath().toString()));       ", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "393a5f3461b0740380c52cc74f041024", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "60507801da6a601cb9ccd1a6711dd6f2c042109a", "commitAfterChange": "ce85ea384272e2d2a973888e0c9a4872544d60c3", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 149, "signatureBeforeChange": " public void testSearchScope18() throws CoreException", "signatureAfterChange": " public void testSearchScope17() throws CoreException", "diff": ["+        IJavaSearchScope scope = SearchEngine.createStrictHierarchyScope(null, type, true, false, null);", "- */", "-public void testSearchScope18() throws CoreException {", "-    \tICompilationUnit cuC = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"C.java\");", "-        ICompilationUnit cuE = this. getCompilationUnit(\"JavaSearch\", \"src\", \"a10\", \"E.java\");", "-        IType type = cuC.getType(\"C\");", "-        IJavaSearchScope scope = SearchEngine.createHierarchyScope(null, type, true, false, null);", "-        ", "-        // method of a member of a sub-type:", "-        assertTrue(\"a10.F$G.m() should be included in hierarchy scope\", scope.encloses(cuE.getType(\"F\").getType(\"G\").getMethod(\"m\", new String[0])));"]}], "num": 11380}