{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0656f09716194c0d4e00895e9b58058", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2e9da97b30a57ea5cdfd333a91917e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate IType findSecondaryType(String packageName, String typeName, IJavaProject project)", "signatureAfterChange": " \tprivate IType findSecondaryType(String packageName, String typeName, IJavaProject project, boolean waitForIndexes, IProgressMonitor monitor)", "diff": ["-\tprivate IType findSecondaryType(String packageName, String typeName, IJavaProject project) {", "+\tprivate IType findSecondaryType(String packageName, String typeName, IJavaProject project, boolean waitForIndexes, IProgressMonitor monitor) {", "-\t\t\tHashMap secondaryTypePaths = manager.getSecondaryTypes(javaProject);", "+\t\t\tHashMap secondaryTypePaths = manager.getSecondaryTypes(javaProject, waitForIndexes, monitor);", "+\t\t\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\t\t\tUtil.verbose(\" -> type: \" + type.getElementName());  //$NON-NLS-1$", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2093ec5133ec9220ef0e2e17c7cb8c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "a4e360d6406fed9275bf933467b5e9a51a704eb6", "commitAfterChange": "7065da01531bf4c318c59206b62aa1503a948abe", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve(ICompilationUnit sourceUnit, boolean verifyMethods)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\tpublic CompilationUnitDeclaration resolve(ICompilationUnit sourceUnit, boolean verifyMethods) {", "+\tpublic CompilationUnitDeclaration resolve(", "+\t\t\tICompilationUnit sourceUnit, ", "+\t\t\tboolean verifyMethods,", "+\t\t\tboolean analyzeCode,", "+\t\t\tboolean generateCode) {", "+\t\t\t\t", "-\t\t\t\tunit.resolve();", "-\t\t\t}", "+\t\t\t\tunit.resolve();\t\t", "+", "+\t\t\t\t// flow analysis", "+\t\t\t\tif (analyzeCode) unit.analyseCode();", "+\t\t", "+\t\t\t\t// code generation", "+\t\t\t\tif (generateCode) unit.generateCode();", "+\t\t}", "-\t}"]}], "num": 16874}