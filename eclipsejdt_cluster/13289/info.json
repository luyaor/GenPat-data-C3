{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb2e03c4f8362a1ec6cf521b7a448e35", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f497685b77f2db09136cd4ea3897b50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetEvaluator.java", "commitBeforeChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "commitAfterChange": "846faf5699bcd826a09451dfb06e7bb91fe5a472", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " Compiler getCompiler(ICompilerRequestor compilerRequestor)", "signatureAfterChange": " Compiler getCompiler(ICompilerRequestor compilerRequestor)", "diff": ["+\t\t((CodeSnippetParser) compiler.parser).lineSeparatorLength = this.context.lineSeparator.length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8715bf60469cccd879affec633831e1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 57, "signatureBeforeChange": " \t \tprivate void parseParameterizedType(char[] typeName)", "signatureAfterChange": " \t \tprivate void parseParameterizedType(char[] typeName, boolean isRaw)", "diff": ["-\tprivate void parseParameterizedType(char[] typeName) {", "-\t\tboolean isRaw = false;", "-\t\tif (this.scanner.isAtParametersStart()) {", "-\t\t\tif (!this.scanner.isAtRawTypeEnd()) {", "-\t\t\t\tint rank = 0;", "-\t\t\t\twhile (!this.scanner.isAtParametersEnd()) {", "-\t\t\t \t\tif (this.scanner.isAtWildCardStart()) {", "-\t\t\t \t\t\tparseWildCard(rank++);", "-\t\t\t \t\t} else {", "-\t\t\t\t\t\tparseTypeArgument();", "-\t\t\t \t\t}", "-\t\t\t\t}", "-\t\t\t}  else", "-\t\t\t\tisRaw = true;", "-\t\t \t// skip \";>\"", "-\t\t \tthis.scanner.skipParametersEnd();", "+\t", "+\tprivate void parseParameterizedType(char[] typeName, boolean isRaw) {", "+\t\tif (!isRaw) {", "+\t\t\tint rank = 0;", "+\t\t\twhile (!this.scanner.isAtParametersEnd()) {", "+\t\t \t\tif (this.scanner.isAtWildCardStart()) {", "+\t\t \t\t\tparseWildCard(rank++);", "+\t\t \t\t} else {", "+\t\t\t\t\tparseTypeArgument();", "+\t\t \t\t}", "+\t\t\t}", "+\t \t// skip \";>\"", "+\t \tthis.scanner.skipParametersEnd();", "+\t\tthis.scanner.skipTypeEnd();", "+\t\tparseFlags();", "-\t \t\tparseParameterizedType(typeName);", "+\t\t\tif (this.scanner.isAtParametersStart()) {", "+\t\t\t\tthis.scanner.skipParametersStart();", "+\t\t \t\tparseParameterizedType(typeName, this.scanner.isAtRawTypeEnd());", "+\t\t\t} else", "+\t\t\t\tconsumeParameterizedType(typeName, true/*raw*/);"]}], "num": 13289}