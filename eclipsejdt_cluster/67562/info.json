{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1aae6716463364fc1d86864153135d2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1402061aa4e70dd64bbb4bc1ae360f07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "signatureAfterChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "diff": ["-\t\t\t\tif (sourceLevel >= ClassFileConstants.JDK1_8 && (argument.isPolyExpression() || (argument instanceof Invocation && ((Invocation)argument).usesInference()))) {", "-\t\t\t\t\tif (this.innerInferenceHelper == null)", "-\t\t\t\t\t\tthis.innerInferenceHelper = new InnerInferenceHelper();", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4243f5cb39ea1d981f374d57a6cfa0ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\tif (sourceLevel >= ClassFileConstants.JDK1_8 && (argument.isPolyExpression() || ((argument instanceof Invocation) && ((Invocation) argument).usesInference()))) {", "-\t\t\t\t\t\tif (this.innerInferenceHelper == null)", "-\t\t\t\t\t\t\tthis.innerInferenceHelper = new InnerInferenceHelper();", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c1ec5e86ee00dd8136d3c7404ed703", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "ae0b30b76dcbe89d5bd08d53d907ae7218823168", "commitAfterChange": "cbe2b622e81a27ceffd382724966e1dd065a9d5c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t|| (argument instanceof Invocation && ((Invocation)argument).usesInference()))", "-\t\t\t\t\tthis.innersNeedUpdate = true;", "+\t\t\t\t\t|| (argument instanceof Invocation && ((Invocation)argument).usesInference())) {", "+\t\t\t\t\tif (this.innerInferenceHelper == null)", "+\t\t\t\t\t\tthis.innerInferenceHelper = new InnerInferenceHelper();", "+\t\t\t\t}"]}], "num": 67562}