{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa9b04009272e59bb95baf1f004a373b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1c6f9b86817768dc6f24b84d142444", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic String getEmptyLines(int linesNumber)", "signatureAfterChange": "  \tpublic String getEmptyLines(int linesNumber)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "+\t\tString emptyLines;", "-\t\t\tfor (int i = 0; i < linesNumber; i++) {", "-\t\t\t\tif (this.indentEmptyLines) printIndentationIfNecessary(buffer);", "-\t\t\t\tbuffer.append(this.lineSeparator);", "+\t\t\tif (this.indentEmptyLines) {", "+\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\tfor (int i = 0; i < linesNumber; i++) {", "+\t\t\t\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\t\t\t}", "+\t\t\t\temptyLines = this.tempBuffer.toString();", "+\t\t\t} else {", "+\t\t\t\temptyLines = getNewLineString(linesNumber);", "-\t\t\tfor (int i = 0; i < linesNumber; i++) {", "-\t\t\t\tif (this.indentEmptyLines) printIndentationIfNecessary(buffer);", "-\t\t\t\tbuffer.append(this.lineSeparator);", "+\t\t\tif (this.indentEmptyLines) {", "+\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\tfor (int i = 0; i < linesNumber; i++) {", "+\t\t\t\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\t\t\t}", "+\t\t\t\temptyLines = this.tempBuffer.toString();", "+\t\t\t} else {", "+\t\t\t\temptyLines = getNewLineString(linesNumber);", "-\t\t\tfor (int i = 0; i < realNewLineNumber; i++) {", "-\t\t\t\tif (this.indentEmptyLines) printIndentationIfNecessary(buffer);", "-\t\t\t\tbuffer.append(this.lineSeparator);", "+\t\t\tif (this.indentEmptyLines) {", "+\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\tfor (int i = 0; i < realNewLineNumber; i++) {", "+\t\t\t\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\t\t\t}", "+\t\t\t\temptyLines = this.tempBuffer.toString();", "+\t\t\t} else {", "+\t\t\t\temptyLines = getNewLineString(realNewLineNumber);", "-\t\treturn String.valueOf(buffer);", "+\t\treturn emptyLines;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb942cf207d6ea229b3376c37cfc9a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "7fa5c3ab9c1f1b66a5090c628b3dd76db959682b", "commitAfterChange": "98d98039d31a5dcc8a3b24b4a05191f05e175f2b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic String getQualifiedName()", "signatureAfterChange": " \tpublic String getQualifiedName()", "diff": ["-\t\tif (isAnonymous() || isLocal() || isPrimitive() || isArray() || isNullType()) {", "-\t\t\treturn null;", "+\t\tif (isAnonymous() || isLocal()) {", "+\t\t\treturn NO_NAME;", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tbuffer.append(getName());", "-\t\tbuffer.insert(0, '.');", "-\t\tif (isMember()) {", "-\t\t\t// handle member type", "-\t\t\tITypeBinding declaringClass = getDeclaringClass();", "-\t\t\twhile(declaringClass != null) {", "-\t\t\t\tbuffer.insert(0, declaringClass.getName());", "-\t\t\t\tbuffer.insert(0, '.');", "-\t\t\t\tdeclaringClass = declaringClass.getDeclaringClass();", "+\t\t", "+\t\tif (isPrimitive() || isNullType()) {", "+\t\t\treturn getName();", "+\t\t}", "+\t\t", "+\t\tif (isArray()) {", "+\t\t\tITypeBinding elementType = getElementType();", "+\t\t\tString elementTypeQualifiedName = elementType.getQualifiedName();", "+\t\t\tif (elementTypeQualifiedName.length() != 0) {", "+\t\t\t\tint dimensions = getDimensions();", "+\t\t\t\tchar[] brackets = new char[dimensions * 2];", "+\t\t\t\tfor (int i = dimensions * 2 - 1; i >= 0; i -= 2) {", "+\t\t\t\t\tbrackets[i] = ']';", "+\t\t\t\t\tbrackets[i - 1] = '[';", "+\t\t\t\t}", "+\t\t\t\tStringBuffer stringBuffer = new StringBuffer(elementTypeQualifiedName);", "+\t\t\t\tstringBuffer.append(brackets);", "+\t\t\t\treturn stringBuffer.toString();", "+\t\t\t} else {", "+\t\t\t\treturn NO_NAME;", "-\t\tIPackageBinding packageBinding = getPackage();", "-\t\tif (!packageBinding.isUnnamed()) {", "-\t\t\tbuffer.insert(0, packageBinding.getName());", "+\t\t", "+\t\tif (isTopLevel() || isMember()) {", "+\t\t\tStringBuffer stringBuffer = new StringBuffer();", "+\t\t\tstringBuffer", "+\t\t\t\t.append(this.binding.qualifiedPackageName())", "+\t\t\t\t.append('.')", "+\t\t\t\t.append(this.binding.qualifiedSourceName());", "+\t\t\treturn stringBuffer.toString();", "-\t\treturn buffer.toString();", "+\t\treturn NO_NAME;"]}], "num": 65725}