{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce98041b2fdfb60a17a962fc2aeb8c4b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103a105900967c47dcc425d512057f18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SignatureWrapper.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic SignatureWrapper(char[] signature)", "signatureAfterChange": "  \tpublic SignatureWrapper(char[] signature, boolean use15specifics)", "diff": ["-\tpublic SignatureWrapper(char[] signature) {", "+\tpublic SignatureWrapper(char[] signature, boolean use15specifics) {", "+\t\tthis.use15specifics = use15specifics;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210f8997aba8a4b05193e69b958d5119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "8eff811a28d835d940585e1dd6e43b7e81d9c25c", "commitAfterChange": "ecd6b6b03e84e16fa2ef3316475695c9990930d4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public IndexSelector( \tIJavaSearchScope searchScope, \tIJavaElement focus, \tIndexManager indexManager)", "signatureAfterChange": " public IndexSelector( \tIJavaSearchScope searchScope, \tIJavaElement focus, \tboolean isPolymorphicSearch, \tIndexManager indexManager)", "diff": ["+\tboolean isPolymorphicSearch;", "+\tboolean isPolymorphicSearch,", "-}", "+\tthis.isPolymorphicSearch = isPolymorphicSearch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d084d17b1570f8e0f934860382b167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SignatureWrapper.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic SignatureWrapper(char[] signature)", "signatureAfterChange": "  \tpublic SignatureWrapper(char[] signature, boolean use15specifics)", "diff": ["-\tpublic SignatureWrapper(char[] signature) {", "+\tpublic SignatureWrapper(char[] signature, boolean use15specifics) {", "+\t\tthis.use15specifics = use15specifics;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0037131387885473b7537af8e17876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "46f0bf33fc17707f84a4651387bf3026d6bae545", "commitAfterChange": "4d6296b6ebb5111ab8825f79519da9de471cce30", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "signatureAfterChange": "  public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tboolean varargs, \tIType declaringType, \tint matchRule)", "diff": ["+\tboolean varargs,", "-", "+\tthis.varargs = varargs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34995b83276923a7e2fc3c98cc720988", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "46f0bf33fc17707f84a4651387bf3026d6bae545", "commitAfterChange": "4d6296b6ebb5111ab8825f79519da9de471cce30", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName, \tchar[] declaringQualification, \tchar[][] parameterQualifications, \tchar[][] parameterSimpleNames, \tint matchRule)", "signatureAfterChange": "  public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName, \tchar[] declaringQualification, \tchar[][] parameterQualifications, \tchar[][] parameterSimpleNames, \tboolean varargs, \tint matchRule)", "diff": ["+\tboolean varargs,", "-", "+\tthis.varargs = varargs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358cf3168501a609014c492c4fa2c05c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tNonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[] typeAnnotations, long newMatches, int newPathPtr, \t\t\t\t\t\tint defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation)", "signatureAfterChange": " \tNonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[] typeAnnotations, long newMatches, int newPathPtr, \t\t\t\t\t\tint defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation, boolean atTypeBound)", "diff": ["-\t\t\t\t\t\tint defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation) {", "+\t\t\t\t\t\tint defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation, boolean atTypeBound) {", "+\t\tthis.atTypeBound = atTypeBound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba15047bc732ae4234c16f42d4a7a0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tNonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation)", "signatureAfterChange": " \tNonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation, boolean atTypeBound)", "diff": ["-\tNonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation) {", "+\tNonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, IBinaryAnnotation nonNullAnnotation, boolean atDefaultLocation, boolean atTypeBound) {", "+\t\tthis.atTypeBound = atTypeBound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65c6e2e74a39fe3d858c8f50316c07b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tlong complianceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "signatureAfterChange": "  public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tlong complianceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive, \tboolean checkNullReferences)", "diff": ["-\tboolean isTaskCaseSensitive) {", "+\tboolean isTaskCaseSensitive,", "+\tboolean checkNullReferences) {", "+\tthis.checkNullReferences = checkNullReferences;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695178cfd70a34bda3aca5de9e37d621", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/CompilationUnit.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " public CompilationUnit(char[] contents, String fileName, String encoding, \t\tString destinationPath)", "signatureAfterChange": " public CompilationUnit(char[] contents, String fileName, String encoding, \t\tString destinationPath, boolean ignoreOptionalProblems)", "diff": ["+}", "+public CompilationUnit(char[] contents, String fileName, String encoding,", "+\t\tString destinationPath, boolean ignoreOptionalProblems) {", "+\tthis.ignoreOptionalProblems = ignoreOptionalProblems;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9cac7e1aeb4cbe9142fea9910d369d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "2978b616998f0f50433e3cb9e144a93c6a03fff0", "commitAfterChange": "084f4c75ee441cff88e4ef94e656b9ebf2194eb9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities)", "signatureAfterChange": "  public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "diff": ["-\tchar[][] taskPriorities) {", "+\tchar[][] taskPriorities,", "+\tboolean isTaskCaseSensitive) {", "+\tthis.isTaskCaseSensitive = isTaskCaseSensitive;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7def3987fd68f41e948de250a1c8c77c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tDefaultBindingResolver(CompilationUnitScope scope, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables)", "signatureAfterChange": " \tDefaultBindingResolver(CompilationUnitScope scope, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables, boolean isRecoveredBinding)", "diff": ["-\tDefaultBindingResolver(CompilationUnitScope scope, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables) {", "+\tDefaultBindingResolver(CompilationUnitScope scope, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables, boolean isRecoveredBinding) {", "+\t\tthis.isRecoveredBinding = isRecoveredBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8377c80ae64e441aaae9f1da13fec6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "8eff811a28d835d940585e1dd6e43b7e81d9c25c", "commitAfterChange": "ecd6b6b03e84e16fa2ef3316475695c9990930d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic PatternSearchJob( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope, \t\tIJavaElement focus, \t\tint detailLevel, \t\tIIndexSearchRequestor requestor, \t\tIndexManager indexManager)", "signatureAfterChange": " \tpublic PatternSearchJob( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope, \t\tIJavaElement focus, \t\tboolean isPolymorphicSearch, \t\tint detailLevel, \t\tIIndexSearchRequestor requestor, \t\tIndexManager indexManager)", "diff": ["+\t\tboolean isPolymorphicSearch,", "+\t\tthis.isPolymorphicSearch = isPolymorphicSearch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876779bd2d7d82205c8dd1a17a236581", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tDefaultBindingResolver(LookupEnvironment lookupEnvironment, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables)", "signatureAfterChange": "  \tDefaultBindingResolver(LookupEnvironment lookupEnvironment, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables, boolean isRecoveredBinding)", "diff": ["-\tDefaultBindingResolver(LookupEnvironment lookupEnvironment, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables) {", "+\tDefaultBindingResolver(LookupEnvironment lookupEnvironment, WorkingCopyOwner workingCopyOwner, BindingTables bindingTables, boolean isRecoveredBinding) {", "+\t\tthis.isRecoveredBinding = isRecoveredBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "965ec1de076cc8b4d676b65471f75922", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathMultiDirectory.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  ClasspathMultiDirectory(IContainer sourceFolder, IContainer binaryFolder, char[][] inclusionPatterns, char[][] exclusionPatterns)", "signatureAfterChange": "  ClasspathMultiDirectory(IContainer sourceFolder, IContainer binaryFolder, char[][] inclusionPatterns, char[][] exclusionPatterns, boolean ignoreOptionalProblems)", "diff": ["-ClasspathMultiDirectory(IContainer sourceFolder, IContainer binaryFolder, char[][] inclusionPatterns, char[][] exclusionPatterns) {", "+ClasspathMultiDirectory(IContainer sourceFolder, IContainer binaryFolder, char[][] inclusionPatterns, char[][] exclusionPatterns, boolean ignoreOptionalProblems) {", "+\tthis.ignoreOptionalProblems = ignoreOptionalProblems;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8faa540cf111e65510b77c8d013b11a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnQualifiedNameReference.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CompletionOnQualifiedNameReference(char[][] previousIdentifiers, char[] completionIdentifier, long[] positions)", "signatureAfterChange": " public CompletionOnQualifiedNameReference(char[][] previousIdentifiers, char[] completionIdentifier, long[] positions, boolean isInsideAnnotationAttribute)", "diff": ["-public CompletionOnQualifiedNameReference(char[][] previousIdentifiers, char[] completionIdentifier, long[] positions) {", "+\tpublic boolean isInsideAnnotationAttribute;", "+public CompletionOnQualifiedNameReference(char[][] previousIdentifiers, char[] completionIdentifier, long[] positions, boolean isInsideAnnotationAttribute) {", "+\tthis.isInsideAnnotationAttribute = isInsideAnnotationAttribute;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ba58564027f7540d26056f56e5ab31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnSingleNameReference.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic CompletionOnSingleNameReference(char[] source, long pos, char[][] possibleKeywords, boolean canBeExplicitConstructor)", "signatureAfterChange": "  \tpublic CompletionOnSingleNameReference(char[] source, long pos, char[][] possibleKeywords, boolean canBeExplicitConstructor, boolean isInsideAnnotationAttribute)", "diff": ["-\tpublic CompletionOnSingleNameReference(char[] source, long pos, char[][] possibleKeywords, boolean canBeExplicitConstructor) {", "+\tpublic CompletionOnSingleNameReference(char[] source, long pos, char[][] possibleKeywords, boolean canBeExplicitConstructor, boolean isInsideAnnotationAttribute) {", "+\t\tthis.isInsideAnnotationAttribute = isInsideAnnotationAttribute;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be0e8761c1ed967b4142e5b95f940484", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "2978b616998f0f50433e3cb9e144a93c6a03fff0", "commitAfterChange": "084f4c75ee441cff88e4ef94e656b9ebf2194eb9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public PublicScanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities)", "signatureAfterChange": "  public PublicScanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "diff": ["-\tchar[][] taskPriorities) {", "+\tchar[][] taskPriorities,", "+\tboolean isTaskCaseSensitive) {", "+\tthis.isTaskCaseSensitive = isTaskCaseSensitive;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5163e0b315d6b872cfb34b509a73689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "ff42431800359aed42a231c5c784b3764b5a7341", "commitAfterChange": "9814bb06776e7a6f85cab0ee3f3e1e621c043d2c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public PublicScanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tlong complianceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "signatureAfterChange": "  public PublicScanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tlong complianceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive, \tboolean checkNullReferences)", "diff": ["-\tboolean isTaskCaseSensitive) {", "+\tboolean isTaskCaseSensitive,", "+\tboolean checkNullReferences) {", "+\tthis.checkNullReferences = checkNullReferences;", "+}"]}], "num": 27687}