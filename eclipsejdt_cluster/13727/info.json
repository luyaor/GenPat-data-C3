{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99f4da77778a23873c17a21bebc23969", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9971b2c66ef8da92b7869394b41c88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\tTypeBinding unannotatedOriginal = originalType.unannotated();", "-\t\tTypeBinding substitute = substitute0(substitution, unannotatedOriginal);", "-\t\tif (unannotatedOriginal == originalType)\t\t// no annotation => use naked substitute", "-\t\t\treturn substitute;", "-\t\telse if (substitute == unannotatedOriginal)\t\t// no substitution => re-use annotated type", "-\t\t\treturn originalType;", "-\t\telse \t\t\t\t\t\t\t\t\t\t\t// substitution and annotation: merge both", "-\t\t\treturn substitution.environment().copyAnnotations(originalType, substitute);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f464ff94d09eec49c438c7af6c014097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "c3c8917789b86ee8ba49ca3909bec03bf932cdc5", "commitAfterChange": "6e652c66c504914c1daaa584a7eee66b8e87dca4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["+\t\tTypeBinding unannotatedOriginal = originalType.unannotated();", "+\t\tTypeBinding substitute = substitute0(substitution, unannotatedOriginal);", "+\t\tif (unannotatedOriginal == originalType)\t\t// no annotation => use naked substitute", "+\t\t\treturn substitute;", "+\t\telse if (substitute == unannotatedOriginal)\t\t// no substitution => re-use annotated type", "+\t\t\treturn originalType;", "+\t\telse \t\t\t\t\t\t\t\t\t\t\t// substitution and annotation: merge both", "+\t\t\treturn substitution.environment().copyAnnotations(originalType, substitute);", "+\t}"]}], "num": 13727}