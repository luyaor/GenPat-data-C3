{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77ba63637b1b687f3bdb88535fa31cc5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118a8cd675750a4f061284fdcc84e5f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "bf7da35d682baccfa16458c25713faba9c375b20", "commitAfterChange": "f0ba284185943d1b8df039a8beb736a55eeed994", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate ASTNode[] computeMergedMemberDeclarations(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate ASTNode[] computeMergedMemberDeclarations(TypeDeclaration typeDeclaration)", "diff": ["-\t\t\t\t\t\t\tmembers[index - 1] = new MultiFieldDeclaration(new FieldDeclaration[]{ (FieldDeclaration)previousMember, field});", "+\t\t\t\t\t\t\tFieldDeclaration fieldDeclaration = (FieldDeclaration)previousMember;", "+\t\t\t\t\t\t\tfinal MultiFieldDeclaration multiFieldDeclaration = new MultiFieldDeclaration(new FieldDeclaration[]{ fieldDeclaration, field});", "+\t\t\t\t\t\t\tmultiFieldDeclaration.annotations = fieldDeclaration.annotations;", "+\t\t\t\t\t\t\tmembers[index - 1] = multiFieldDeclaration;", "-\t\t\t\t\t\tmembers[index++] = field;\t\t\t\t\t", "+\t\t\t\t\t\tmembers[index++] = field;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18e39aecda32cb147db0ce2e73b38056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "bf7da35d682baccfa16458c25713faba9c375b20", "commitAfterChange": "f0ba284185943d1b8df039a8beb736a55eeed994", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate ASTNode[] computeMergedMemberDeclarations(ASTNode[] nodes)", "signatureAfterChange": "  \tprivate ASTNode[] computeMergedMemberDeclarations(ASTNode[] nodes)", "diff": ["-\t\t\t\t\t\tif (currentField.declarationSourceStart == ((FieldDeclaration) previousMergedNode).declarationSourceStart) {", "+\t\t\t\t\t\tfinal FieldDeclaration previousFieldDeclaration = (FieldDeclaration)previousMergedNode;", "+\t\t\t\t\t\tif (currentField.declarationSourceStart == previousFieldDeclaration.declarationSourceStart) {", "-\t\t\t\t\t\t\tmergedNodes.set(mergedNodes.size() - 1, new MultiFieldDeclaration(new FieldDeclaration[]{ (FieldDeclaration)previousMergedNode, currentField}));", "+\t\t\t\t\t\t\tfinal MultiFieldDeclaration multiFieldDeclaration = new MultiFieldDeclaration(new FieldDeclaration[]{ previousFieldDeclaration, currentField});", "+\t\t\t\t\t\t\tmultiFieldDeclaration.annotations = previousFieldDeclaration.annotations;", "+\t\t\t\t\t\t\tmergedNodes.set(mergedNodes.size() - 1, multiFieldDeclaration);"]}], "num": 62915}