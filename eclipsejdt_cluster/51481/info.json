{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6a1ed60a2cde049b6e5cabcf6ad06a1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922c63ca1e5edc2aad464002bf213af5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 219, "signatureBeforeChange": " protected void updateRecoveryState()", "signatureAfterChange": " protected void updateRecoveryState()", "diff": ["+\t// attachOrphanCompletionNode pops various stacks to construct astNodeParent and enclosingNode. This does not gel well with extended recovery.", "+\tCommitRollbackParser parser = null;", "+\tif (lastIndexOfElement(K_LAMBDA_EXPRESSION_DELIMITER) >= 0) {", "+\t\tparser = createSnapShotParser();", "+\t\tparser.copyState(this);", "+\t}", "+\tif (parser != null)", "+\t\tthis.copyState(parser);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe03ceb1c78bf9f11947475bcf97042", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "e2dd5ee821f887ad13e39f8b44d89f9abfea148f", "commitAfterChange": "0a42969cf5af4836de11a0ddb17424701edec007", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 225, "signatureBeforeChange": " protected void updateRecoveryState()", "signatureAfterChange": " protected void updateRecoveryState()", "diff": ["-\t/* may be able to retrieve completionNode as an orphan, and then attach it */", "-\tcompletionIdentifierCheck();", "-\t// attachOrphanCompletionNode pops various stacks to construct astNodeParent and enclosingNode. This does not gel well with extended recovery.", "+\t// completionIdentifierCheck && attachOrphanCompletionNode pops various stacks to construct astNodeParent and enclosingNode. This does not gel well with extended recovery.", "+\t", "+\t/* may be able to retrieve completionNode as an orphan, and then attach it */", "+\tcompletionIdentifierCheck();"]}], "num": 51481}