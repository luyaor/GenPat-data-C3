{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61456dfc28e698d9eb142c550e937bc9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b5f2885e75dc0f9b22e5701636fdd2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "bdd2cfc82a3426545bab4afb639d15520b2873d7", "commitAfterChange": "98437527126e72a93381b156d37a067c9df0abf1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "signatureAfterChange": " \tprivate void enterAbstractMethod(MethodInfo methodInfo)", "diff": ["-\t\t\t\tint length = parameterTypes.length;", "-\t\t\t\tchar[][] newParameterTypes = new char[length+1][];", "-\t\t\t\tnewParameterTypes[0] = currentType.getDeclaringType().getElementName().toCharArray();", "-\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "-\t\t\t\tthis.methodParameterTypes[typeDepth] = newParameterTypes;", "+\t\t\t\tIType declaringType = currentType.getDeclaringType();", "+\t\t\t\tString declaringTypeName = declaringType.getElementName();", "+\t\t\t\tif (declaringTypeName.length() == 0) {", "+\t\t\t\t\tIClassFile classFile = declaringType.getClassFile();", "+\t\t\t\t\tint length = parameterTypes.length;", "+\t\t\t\t\tchar[][] newParameterTypes = new char[length+1][];", "+\t\t\t\t\tdeclaringTypeName = classFile.getElementName();", "+\t\t\t\t\tdeclaringTypeName = declaringTypeName.substring(0, declaringTypeName.indexOf('.'));", "+\t\t\t\t\tnewParameterTypes[0] = declaringTypeName.toCharArray();", "+\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\t\tthis.methodParameterTypes[typeDepth] = newParameterTypes;", "+\t\t\t\t} else {", "+\t\t\t\t\tint length = parameterTypes.length;", "+\t\t\t\t\tchar[][] newParameterTypes = new char[length+1][];", "+\t\t\t\t\tnewParameterTypes[0] = declaringTypeName.toCharArray();", "+\t\t\t\t\tSystem.arraycopy(parameterTypes, 0, newParameterTypes, 1, length);", "+\t\t\t\t\tthis.methodParameterTypes[typeDepth] = newParameterTypes;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c25b66a9124edac709baf0ef18da36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "d26bd96cc9e1c9e59f2c9d083b9a2725de90852a", "commitAfterChange": "8b048c313a1c6f07bac23f1c84c9ba7d1df315ac", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public static char[] getTypeErasure(char[] parameterizedTypeSignature) throws IllegalArgumentException", "signatureAfterChange": " public static char[] getTypeErasure(char[] parameterizedTypeSignature) throws IllegalArgumentException", "diff": ["-\tint genericStart = CharOperation.indexOf(C_GENERIC_START, parameterizedTypeSignature);", "-\tif (genericStart == -1) return parameterizedTypeSignature;", "-\tchar[] result = new char[genericStart+1];", "-\tSystem.arraycopy(parameterizedTypeSignature, 0, result, 0, genericStart);", "-\tresult[genericStart] = C_SEMICOLON;", "-\treturn result;", "+\tint end = CharOperation.indexOf(C_GENERIC_START, parameterizedTypeSignature);", "+\tif (end == -1) return parameterizedTypeSignature;", "+\tint length = parameterizedTypeSignature.length;", "+\tchar[] result = new char[length];", "+\tint pos = 0;", "+\tint start = 0;", "+\tint deep= 0;", "+\tfor (int idx=end; idx<length; idx++) {", "+\t\tswitch (parameterizedTypeSignature[idx]) {", "+\t\t\tcase C_GENERIC_START:", "+\t\t\t\tif (deep == 0) {", "+\t\t\t\t\tint size = idx-start;", "+\t\t\t\t\tSystem.arraycopy(parameterizedTypeSignature, start, result, pos, size);", "+\t\t\t\t\tend = idx;", "+\t\t\t\t\tpos += size;", "+\t\t\t\t}", "+\t\t\t\tdeep++;", "+\t\t\t\tbreak;", "+\t\t\tcase C_GENERIC_END:", "+\t\t\t\tdeep--;", "+\t\t\t\tif (deep < 0) throw new IllegalArgumentException();", "+\t\t\t\tif (deep == 0) start = idx+1;", "+\t\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (deep > 0) throw new IllegalArgumentException();", "+\tint size = pos+length-start;", "+\tchar[] resized = new char[size];", "+\tSystem.arraycopy(result, 0, resized, 0, pos);", "+\tSystem.arraycopy(parameterizedTypeSignature, start, resized, pos, length-start);", "+\treturn resized;"]}], "num": 29372}