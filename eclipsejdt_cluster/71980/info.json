{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc8961e96da5493e7355df8ac7eec8d6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7369dcf0be66ef27e73d1c643b515188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif (((this.bits & ASTNode.IsElseStatementUnreachable) != 0) ||", "-\t\t\t\t(cst != Constant.NotAConstant && cst.booleanValue() == true)) {", "-\t\t\t// No need to generate if condition statement when we know that only the then action", "-\t\t\t// will be executed", "+\t\tif (cst != Constant.NotAConstant && cst.booleanValue() == true) {", "-\t\tif (((this.bits & ASTNode.IsThenStatementUnreachable) != 0) ||", "-\t\t\t\t(cst != Constant.NotAConstant && cst.booleanValue() == false)) {", "-\t\t\t// No need to generate if condition statement when we know that only the else action", "-\t\t\t// will be executed", "+\t\tif (cst != Constant.NotAConstant && cst.booleanValue() == false) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b47efbe687657b397cfbb8277a0ffa88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isConditionTrue = cst != NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff0f1d57079ec6562b5d464b8fc8cbad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isConditionTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;", "-\t\tboolean isConditionOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}], "num": 71980}