{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32da3266bde8796fc454b8ab83fae7e8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "390fe0790ff483fe1963fb39c6d2f8a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate void reconcile(ReconcileContext reconcileContext, \t\t\t   IJavaProject javaProject)", "signatureAfterChange": " \t \tprivate void reconcile(final ReconcileContext reconcileContext, \t\t\t   IJavaProject javaProject)", "diff": ["-\tprivate void reconcile(ReconcileContext reconcileContext,", "+\tprivate void reconcile(final ReconcileContext reconcileContext,", "-\t\tReconcileProcessorEnv processorEnv = CompilationProcessorEnv", "-\t\t\t\t.newReconcileEnv(reconcileContext, javaProject);", "-\t\tdispatchToFileBasedProcessor(processorEnv);", "-\t\tfinal List<? extends CategorizedProblem> problemList = processorEnv", "-\t\t\t\t.getProblems();", "-\t\tfinal int numProblems = problemList.size();", "-\t\tif (numProblems > 0) {", "-\t\t\tfinal CategorizedProblem[] aptCatProblems = new CategorizedProblem[numProblems];", "-\t\t\treconcileContext.putProblems(", "+\t\tEnvCallback callback = new EnvCallback() {", "+\t\t\tpublic void run(AbstractCompilationEnv env) {", "+\t\t\t\t", "+\t\t\t\tdispatchToFileBasedProcessor(env);", "+\t\t\t\tfinal List<? extends CategorizedProblem> problemList = env.getProblems();", "+\t\t\t\tfinal int numProblems = problemList.size();", "+\t\t\t\tif (numProblems > 0) {", "+\t\t\t\t\tfinal CategorizedProblem[] aptCatProblems = new CategorizedProblem[numProblems];", "+\t\t\t\t\treconcileContext.putProblems(", "-\t\t}", "-\t\tprocessorEnv.close();", "+\t\t\t\t}", "+\t\t\t\tenv.close();", "+\t\t\t}", "+\t\t};", "+\t\t", "+\t\t// Construct a reconcile time environment. This will do invoke", "+\t\t// dispatch from inside the callback.", "+\t\tAbstractCompilationEnv.newReconcileEnv(reconcileContext, callback);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba67330df396f14bb74e4bf342631c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate void build()", "signatureAfterChange": " \t \tprivate void build()", "diff": ["-\t\t\tProcessorEnvImpl processorEnv = ProcessorEnvImpl.newBuildEnv( ", "+\t\t\t", "+\t\t\tEnvCallback buildCallback = new EnvCallback() {", "+\t\t\t\tpublic void run(AbstractCompilationEnv env) {", "+\t\t\t\t\tbuild((BuildEnv)env);", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\t", "+\t\t\t// Construct build environment, this invokes the build inside a callback", "+\t\t\t// in order to keep open the DOM AST pipeline", "+\t\t\tBuildEnv.newBuildEnv( ", "-\t\t\t\t\t_aptProject.getJavaProject());", "-\t\t\tbuild(processorEnv); ", "+\t\t\t\t\t_aptProject.getJavaProject(),", "+\t\t\t\t\tbuildCallback);"]}], "num": 5412}