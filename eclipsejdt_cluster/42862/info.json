{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03ef17b517cf66de1eaa8f9ee27ea41d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215abdecc72593460d6d9b2eb94bcb63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": " \tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements)", "signatureAfterChange": " \tprotected synchronized Object putInfos(IJavaElement openedElement, Object newInfo, boolean forceAdd, Map newElements)", "diff": ["-\tprotected synchronized void putInfos(IJavaElement openedElement, Map newElements) {", "+\tprotected synchronized Object putInfos(IJavaElement openedElement, Object newInfo, boolean forceAdd, Map newElements) {", "+\t\tif (existingInfo != null && !forceAdd) {", "+\t\t\t// If forceAdd is false, then it could mean that the particular element ", "+\t\t\t// wasn't in cache at that point of time, but would have got added through ", "+\t\t\t// another thread. In that case, we better use the other thread's info", "+\t\t\t// rather than removing it's children and creating one another. ", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=372687", "+\t\t\treturn existingInfo;", "+\t\t}", "+\t\treturn newInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f8914bea91c95ba959f89d39f1cee89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "605cc5dd745b7e1d6935bfc34c1be6fcea51b4ab", "commitAfterChange": "03be42bb9ac6b223bea20e29a7b3f31a76dae9e4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected IJavaElement getElement(SearchMatch searchMatch)", "signatureAfterChange": " \tprotected void writeLine() throws CoreException", "diff": ["-\tprotected IJavaElement getElement(SearchMatch searchMatch) {", "-\t\tIJavaElement element = super.getElement(searchMatch);", "-\t\tIJavaElement localElement = null;", "+\tprotected void writeLine() throws CoreException {", "+\t\tsuper.writeLine();", "-\t\tlocalElement = refMatch.getLocalElement();", "+\t\tIJavaElement localElement = refMatch.getLocalElement();", "-\t\t\treturn localElement;", "+\t\t\tthis.line.append(\"+[\");", "+\t\t\tif (localElement.getElementType() == IJavaElement.ANNOTATION) {", "+\t\t\t\tthis.line.append('@');", "+\t\t\t\tthis.line.append(localElement.getElementName());", "+\t\t\t\tthis.line.append(\" on \");", "+\t\t\t\tthis.line.append(localElement.getParent().getElementName());", "+\t\t\t} else {", "+\t\t\t\tthis.line.append(localElement.getElementName());", "+\t\t\t}", "+\t\t\tthis.line.append(']');", "-\t\treturn element;"]}], "num": 42862}