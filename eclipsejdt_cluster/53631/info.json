{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "918d7367a7235a909e56bbf8c2f1fc7e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c280641704669f937c9a90fc6a24ee9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "fe6a884d07923baa40d9529cf7f3a98ef01ac1de", "commitAfterChange": "1aa4cd735bf7026e52f4628e91c000e2311012b1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate void searchVisibleVariablesAndMethods( \t\t\tScope scope, \t\t\tObjectVector localsFound, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector methodsFound, \t\t\tboolean notInJavadoc)", "signatureAfterChange": " \tprivate void searchVisibleVariablesAndMethods( \t\t\tScope scope, \t\t\tObjectVector localsFound, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector methodsFound, \t\t\tboolean notInJavadoc)", "diff": ["-", "+\t\t\t\t\t\t// If the local variable declaration's initialization statement itself has the completion,", "+\t\t\t\t\t\t// then don't propose the local variable", "+\t\t\t\t\t\tif (local.declaration.initialization != null) {", "+\t\t\t\t\t\t\tif(local.declaration.initialization.sourceEnd > 0) {", "+\t\t\t\t\t\t\t\t\tif (this.assistNode.sourceEnd <= local.declaration.initialization.sourceEnd", "+\t\t\t\t\t\t\t\t\t\t\t&& this.assistNode.sourceStart >= local.declaration.initialization.sourceStart) {", "+\t\t\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tCompletionNodeDetector detector = new CompletionNodeDetector(", "+\t\t\t\t\t\t\t\t\t\tthis.assistNode,", "+\t\t\t\t\t\t\t\t\t\tlocal.declaration.initialization);", "+\t\t\t\t\t\t\t\tif (detector.containsCompletionNode()) {", "+\t\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bf70e78b919801047b8ce558ec8cf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void invalidType(ASTNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(ASTNode location, TypeBinding type)", "diff": ["+\t\tif(ref.tokens[ref.tokens.length - 1].length == 0) return;", "+\t\tif(arrayQualifiedTypeReference.tokens[arrayQualifiedTypeReference.tokens.length - 1].length == 0) return;", "+\t\tif(ref.tokens[ref.tokens.length - 1].length == 0) return;", "+\t\tif (ref.tokens[ref.tokens.length - 1].length == 0) return;", "+\t\tif (arrayTypeReference.token.length == 0) return;"]}], "num": 53631}