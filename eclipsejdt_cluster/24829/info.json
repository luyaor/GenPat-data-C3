{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2772b56850239648b6f27ee85971485", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3429c09d0fe1d1831e947f120c577ecd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t\t\tIterator keys = newOptions.keySet().iterator();", "-\t\t\t\twhile (keys.hasNext()){", "-\t\t\t\t\tString key = (String)keys.next();", "+\t\t\t\tIterator entries = newOptions.entrySet().iterator();", "+\t\t\t\twhile (entries.hasNext()){", "+\t\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\t\tString key = (String) entry.getKey();", "-\t\t\t\t\tString value = (String)newOptions.get(key);", "-\t\t\t\t\tprojectPreferences.put(key, value);", "+\t\t\t\t\tprojectPreferences.put(key, (String) entry.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e203146a1dd32847f73b2798b8546d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void saveExternalLibTimeStamps() throws CoreException", "signatureAfterChange": " \t \tpublic void saveExternalLibTimeStamps() throws CoreException", "diff": ["-\t\t\tIterator keys = this.externalTimeStamps.keySet().iterator();", "-\t\t\twhile (keys.hasNext()) {", "-\t\t\t\tIPath key = (IPath) keys.next();", "+\t\t\tIterator entries = this.externalTimeStamps.entrySet().iterator();", "+\t\t\twhile (entries.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\tIPath key = (IPath) entry.getKey();", "-\t\t\t\tLong timestamp = (Long) this.externalTimeStamps.get(key);", "+\t\t\t\tLong timestamp = (Long) entry.getValue();"]}], "num": 24829}