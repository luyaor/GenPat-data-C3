{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1738c23ad8590ef55d356c41d4cf2a7f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374c28ff9715f977171dc873d30f8a1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "49166670dcee568b2c27289d7cd85c2be5781113", "commitAfterChange": "c888906b277669532d97376e8747878a8a58f472", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private char[][][] typeParameterNames(IType type)", "signatureAfterChange": " private char[][][] typeParameterNames(IType type)", "diff": ["+\tboolean hasParameters = false;", "-\t\tboolean hasParameters = false;", "-\t\t\tif (parentType.isBinary()) {", "-\t\t\t\tparameters = ((BinaryType) parent).getTypeParameters();", "-\t\t\t} else {", "-\t\t\t\tparameters = ((SourceType) parent).getTypeParameters();", "-\t\t\t}", "+\t\t\tparameters = parentType.getTypeParameters();", "+\tif (!hasParameters) return null;", "+\tif (++ptr < typeParameters.length)", "+\t\tSystem.arraycopy(typeParameters, 0, typeParameters = new char[ptr][][], 0, ptr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf901d33d05c42e7b2ba6cec829b210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "0199702ff6cca8392f62e334c86875a1b31484e2", "commitAfterChange": "4d36cf912bda83cf994dbb030b9c8cbc9e169048", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tif (monitor == null) {", "-\t\t\tmonitor= new NullProgressMonitor();", "+", "+\t\tSubMonitor subMonitor = SubMonitor.convert(monitor,", "+\t\t\t\tMessages.bind(Messages.importRewrite_processDescription), 2);", "+\t\tif (!hasRecordedChanges()) {", "+\t\t\tthis.createdImports= CharOperation.NO_STRINGS;", "+\t\t\tthis.createdStaticImports= CharOperation.NO_STRINGS;", "+\t\t\treturn new MultiTextEdit();", "-\t\ttry {", "-\t\t\tmonitor.beginTask(Messages.bind(Messages.importRewrite_processDescription), 2);", "-\t\t\tif (!hasRecordedChanges()) {", "-\t\t\t\tthis.createdImports= CharOperation.NO_STRINGS;", "-\t\t\t\tthis.createdStaticImports= CharOperation.NO_STRINGS;", "-\t\t\t\treturn new MultiTextEdit();", "-\t\t\t}", "-", "-\t\t\tCompilationUnit usedAstRoot= this.astRoot;", "-\t\t\tif (usedAstRoot == null) {", "-\t\t\t\tASTParser parser= ASTParser.newParser(AST.JLS8);", "-\t\t\t\tparser.setSource(this.compilationUnit);", "-\t\t\t\tparser.setFocalPosition(0); // reduced AST", "-\t\t\t\tparser.setResolveBindings(false);", "-\t\t\t\tusedAstRoot= (CompilationUnit) parser.createAST(new SubProgressMonitor(monitor, 1));", "-\t\t\t}", "-", "-\t\t\tImportRewriteConfiguration config= buildImportRewriteConfiguration();", "-", "-\t\t\tImportRewriteAnalyzer computer=", "-\t\t\t\tnew ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, config);", "-", "-\t\t\tfor (String addedImport : this.addedImports) {", "-\t\t\t\tboolean isStatic = STATIC_PREFIX == addedImport.charAt(0);", "-\t\t\t\tString qualifiedName = addedImport.substring(1);", "-\t\t\t\tcomputer.addImport(isStatic, qualifiedName);", "-\t\t\t}", "-", "-\t\t\tfor (String removedImport : this.removedImports) {", "-\t\t\t\tboolean isStatic = STATIC_PREFIX == removedImport.charAt(0);", "-\t\t\t\tString qualifiedName = removedImport.substring(1);", "-\t\t\t\tcomputer.removeImport(isStatic, qualifiedName);", "-\t\t\t}", "-", "-\t\t\tfor (String typeExplicitSimpleName : this.typeExplicitSimpleNames) {", "-\t\t\t\tcomputer.requireExplicitImport(false, typeExplicitSimpleName);", "-\t\t\t}", "-", "-\t\t\tfor (String staticExplicitSimpleName : this.staticExplicitSimpleNames) {", "-\t\t\t\tcomputer.requireExplicitImport(true, staticExplicitSimpleName);", "-\t\t\t}", "-", "-\t\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(new SubProgressMonitor(monitor, 1));", "-", "-\t\t\tthis.createdImports= result.getCreatedImports();", "-\t\t\tthis.createdStaticImports= result.getCreatedStaticImports();", "-", "-\t\t\treturn result.getTextEdit();", "-\t\t} finally {", "-\t\t\tmonitor.done();", "+\t\tCompilationUnit usedAstRoot= this.astRoot;", "+\t\tif (usedAstRoot == null) {", "+\t\t\tASTParser parser= ASTParser.newParser(AST.JLS8);", "+\t\t\tparser.setSource(this.compilationUnit);", "+\t\t\tparser.setFocalPosition(0); // reduced AST", "+\t\t\tparser.setResolveBindings(false);", "+\t\t\tusedAstRoot= (CompilationUnit) parser.createAST(subMonitor.split(1));", "+", "+\t\tImportRewriteConfiguration config= buildImportRewriteConfiguration();", "+", "+\t\tImportRewriteAnalyzer computer=", "+\t\t\tnew ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, config);", "+", "+\t\tfor (String addedImport : this.addedImports) {", "+\t\t\tboolean isStatic = STATIC_PREFIX == addedImport.charAt(0);", "+\t\t\tString qualifiedName = addedImport.substring(1);", "+\t\t\tcomputer.addImport(isStatic, qualifiedName);", "+\t\t}", "+", "+\t\tfor (String removedImport : this.removedImports) {", "+\t\t\tboolean isStatic = STATIC_PREFIX == removedImport.charAt(0);", "+\t\t\tString qualifiedName = removedImport.substring(1);", "+\t\t\tcomputer.removeImport(isStatic, qualifiedName);", "+\t\t}", "+", "+\t\tfor (String typeExplicitSimpleName : this.typeExplicitSimpleNames) {", "+\t\t\tcomputer.requireExplicitImport(false, typeExplicitSimpleName);", "+\t\t}", "+", "+\t\tfor (String staticExplicitSimpleName : this.staticExplicitSimpleNames) {", "+\t\t\tcomputer.requireExplicitImport(true, staticExplicitSimpleName);", "+\t\t}", "+", "+\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(subMonitor.split(1));", "+", "+\t\tthis.createdImports= result.getCreatedImports();", "+\t\tthis.createdStaticImports= result.getCreatedStaticImports();", "+", "+\t\treturn result.getTextEdit();"]}], "num": 37029}