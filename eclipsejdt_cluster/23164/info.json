{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "371d2162e66dee228c9e8f3e7b4d6fba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c14e6ed6acfce6854089f9df85afb83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "fd3b7a5f13831ab502da35b25283f8932b2b1174", "commitAfterChange": "4542c74874023fdaf35f1d53423cc7a878dae2ec", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tif (spacesBetweenGroups > 0) {", "+\t\t\t\tif (spacesBetweenGroups > 0 && lastPackage != null) {", "-\t\t\t\t\tif (lastPackage != null && !pack.isComment() && !pack.isSameGroup(lastPackage)) {", "-\t\t\t\t\t\tImportDeclEntry last= lastPackage.getImportAt(lastPackage.getNumberOfImports() - 1);", "-\t\t\t\t\t\tImportDeclEntry first= pack.getImportAt(0);", "-\t\t\t\t\t\tif (!lastPackage.isComment() && (last.isNew() || first.isNew())) {", "-\t\t\t\t\t\t\tfor (int k= spacesBetweenGroups; k > 0; k--) {", "-\t\t\t\t\t\t\t\tstringsToInsert.add(lineDelim);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (!lastPackage.isComment() && !pack.isComment() && !pack.isSameGroup(lastPackage)) {", "+\t\t\t\t\t\tfor (int k= spacesBetweenGroups; k > 0; k--) {", "+\t\t\t\t\t\t\tstringsToInsert.add(lineDelim);", "-\t\t\t\t\t} else if (lastPackage != null && lastPackage.isComment() && pack.isSameGroup(lastPackage)) {", "+\t\t\t\t\t} else if (lastPackage.isComment() && pack.isSameGroup(lastPackage)) {", "-\t\t\t\t\tallImportsAddedToStar = true;", "+\t\t\t\t\tallImportsAddedToStar = true; // may still need to handle onDemandConflicts below", "-", "+\t\t\t\t\tboolean isConflict = !currDecl.isComment() && onDemandConflicts != null && onDemandConflicts.contains(currDecl.getSimpleName());", "+\t\t\t\t\tboolean addRegularToStar = doStarImport && !currDecl.isOnDemand();", "+\t\t\t\t\t", "-\t\t\t\t\t\tif (!doStarImport || currDecl.isOnDemand() || (onDemandConflicts != null && onDemandConflicts.contains(currDecl.getSimpleName()))) {", "+\t\t\t\t\t\tif (!addRegularToStar || isConflict) {", "-\t\t\t\t\t\t} else if (doStarImport && !currDecl.isOnDemand() && !allImportsAddedToStar) {", "+\t\t\t\t\t\t} else if (addRegularToStar && !allImportsAddedToStar) {", "-\t\t\t\t\t} else if (!doStarImport || currDecl.isOnDemand() || onDemandConflicts == null || onDemandConflicts.contains(currDecl.getSimpleName())) {", "+\t\t\t\t\t} else if (!addRegularToStar || isConflict) {", "-\t\t\t\t\t} else if (doStarImport && !currDecl.isOnDemand()) {", "+\t\t\t\t\t} else if (addRegularToStar && !allImportsAddedToStar && !currDecl.isComment()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53c9183cccccdc385ecffe7ecd3c9b5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "919024c6945d276058446a723145394a23656d2f", "commitAfterChange": "4acde1e0a5179616c6bfc8db1555f7556fcd927f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tif (spacesBetweenGroups > 0) {", "+\t\t\t\tif (spacesBetweenGroups > 0 && lastPackage != null) {", "-\t\t\t\t\tif (lastPackage != null && !pack.isComment() && !pack.isSameGroup(lastPackage)) {", "-\t\t\t\t\t\tImportDeclEntry last= lastPackage.getImportAt(lastPackage.getNumberOfImports() - 1);", "-\t\t\t\t\t\tImportDeclEntry first= pack.getImportAt(0);", "-\t\t\t\t\t\tif (!lastPackage.isComment() && (last.isNew() || first.isNew())) {", "-\t\t\t\t\t\t\tfor (int k= spacesBetweenGroups; k > 0; k--) {", "-\t\t\t\t\t\t\t\tstringsToInsert.add(lineDelim);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (!lastPackage.isComment() && !pack.isComment() && !pack.isSameGroup(lastPackage)) {", "+\t\t\t\t\t\tfor (int k= spacesBetweenGroups; k > 0; k--) {", "+\t\t\t\t\t\t\tstringsToInsert.add(lineDelim);", "-\t\t\t\t\t} else if (lastPackage != null && lastPackage.isComment() && pack.isSameGroup(lastPackage)) {", "+\t\t\t\t\t} else if (lastPackage.isComment() && pack.isSameGroup(lastPackage)) {", "-\t\t\t\t\tallImportsAddedToStar = true;", "+\t\t\t\t\tallImportsAddedToStar = true; // may still need to handle onDemandConflicts below", "-", "+\t\t\t\t\tboolean isConflict = !currDecl.isComment() && onDemandConflicts != null && onDemandConflicts.contains(currDecl.getSimpleName());", "+\t\t\t\t\tboolean addRegularToStar = doStarImport && !currDecl.isOnDemand();", "+\t\t\t\t\t", "-\t\t\t\t\t\tif (!doStarImport || currDecl.isOnDemand() || (onDemandConflicts != null && onDemandConflicts.contains(currDecl.getSimpleName()))) {", "+\t\t\t\t\t\tif (!addRegularToStar || isConflict) {", "-\t\t\t\t\t\t} else if (doStarImport && !currDecl.isOnDemand() && !allImportsAddedToStar) {", "+\t\t\t\t\t\t} else if (addRegularToStar && !allImportsAddedToStar) {", "-\t\t\t\t\t} else if (!doStarImport || currDecl.isOnDemand() || onDemandConflicts == null || onDemandConflicts.contains(currDecl.getSimpleName())) {", "+\t\t\t\t\t} else if (!addRegularToStar || isConflict) {", "-\t\t\t\t\t} else if (doStarImport && !currDecl.isOnDemand()) {", "+\t\t\t\t\t} else if (addRegularToStar && !allImportsAddedToStar && !currDecl.isComment()) {"]}], "num": 23164}