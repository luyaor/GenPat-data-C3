{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45676ed6e6f43daa687861f561c8e884", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b46948bf94f8ffaf62415279aa4cae6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tSearchMatch match = locator.newFieldReferenceMatch(element, accuracy, ((int) (position >>> 32)), ((int) position)+1, fieldReference);", "+\t\tint start = (int) (position >>> 32);", "+\t\tint end = (int) position;", "+\t\tSearchMatch match = locator.newFieldReferenceMatch(element, accuracy, start, end-start+1, fieldReference);", "-\t\tSearchMatch match = locator.newFieldReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\tint offset = reference.sourceStart;", "+\t\tSearchMatch match = locator.newFieldReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d42d0e1d13977cf409d1c1fe68ea6be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariableLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tSearchMatch match = locator.newLocalVariableReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\tint offset = reference.sourceStart;", "+\t\tSearchMatch match = locator.newLocalVariableReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\tSearchMatch match = locator.newLocalVariableReferenceMatch(element, accuracy, ((int) (sourcePosition >>> 32)), ((int) sourcePosition)+1, reference);", "+\t\tint start = (int) (sourcePosition >>> 32);", "+\t\tint end = (int) sourcePosition;", "+\t\tSearchMatch match = locator.newLocalVariableReferenceMatch(element, accuracy, start, end-start+1, reference);", "-\t\tSearchMatch match = locator.newLocalVariableReferenceMatch(localVariable, accuracy, localVariable.nameStart, localVariable.nameEnd+1, reference);", "+\t\tint offset = localVariable.nameStart;", "+\t\tSearchMatch match = locator.newLocalVariableReferenceMatch(localVariable, accuracy, offset, localVariable.nameEnd-offset+1, reference);"]}], "num": 44441}