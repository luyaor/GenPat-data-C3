{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4a88f3d7a9483f7d6ccabe51529851f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe84eff1d54dd8bf600fca0e672999d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "ef77db37669242a4bac152127ea8ae67d10be39c", "commitAfterChange": "bdd2caf7038fc61f1afd6b5818fa3cecae49a2c7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test013() throws Exception", "signatureAfterChange": " \tpublic void test013() throws Exception", "diff": ["-\tpublic void test013() throws Exception { // WILL FAIL WHEN https://bugs.eclipse.org/bugs/show_bug.cgi?id=415399 IS FIXED.", "+\tpublic void test013() throws Exception {", "+\t\t// javac b100 gives:", "+\t\t//\t\tRuntimeInvisibleTypeAnnotations:", "+\t\t//\t\t      0: #9(): METHOD_RETURN", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "-\t\t\t\t\"    constant #14 utf8: \\\"SourceFile\\\"\\n\" + ", "-\t\t\t\t\"    constant #15 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #15 utf8: \\\"LImmutable;\\\"\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #15 @Immutable(\\n\" + ", "+\t\t\t\t\"        target type = 0x14 METHOD_RETURN\\n\" + ", "+\t\t\t\t\"      )\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad2b9bbbf58e1a3e71229fab33e0c85a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "c4baf766be166b04f595eec5cebbd2a64f399daa", "commitAfterChange": "6574ecf5c4b5647220e5c6028073411e3f107ad7", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test037() throws Exception", "signatureAfterChange": " \tpublic void test037() throws Exception", "diff": ["-\tpublic void test037() throws Exception { // WILL FAIL WHEN REFERENCE EXPRESSIONS ARE ANALYZED.", "+\tpublic void test037() throws Exception {", "-\t\t\t\t\"\t       ^^^^^^\\n\" + ", "-\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"The type Y.Z[][][] does not define foo(int) that is applicable here\\n\" + ", "-\t\t\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^\\n\" + ", "-\t\t\t\t\"\t                            ^^^^^^\\n\" + ", "+\t\t\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\t\t\"\t                            ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 8)\\n\" + "]}], "num": 51400}