{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23f99c1308d5f01e2b1f328defafdf93", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff12ac861dd64b34a5bf031b5153fb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "44799a4312de29adda0739b7526827290ad954be", "commitAfterChange": "b9cb873d4449d2f10b10f7985e564b1f6bad691b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tpublic void testModifiersAST3WithAnnotations2() throws Exception", "signatureAfterChange": " \t \tpublic void testModifiersAST3WithAnnotations2() throws Exception", "diff": ["+\t\tbuf.append(\"    @Deprecated()Object foo3() { return null; }\\n\");", "+\t\tbuf.append(\"    @Deprecated()Object foo4() { return null; }\\n\");", "+\t\t{ // insert modifier last", "+\t\t\tMethodDeclaration methodDecl= findMethodDeclaration(type, \"foo3\");", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.MODIFIERS2_PROPERTY);", "+\t\t\tModifier modifier= ast.newModifier(Modifier.ModifierKeyword.PUBLIC_KEYWORD);", "+\t\t\tlistRewrite.insertLast(modifier, null);", "+\t\t}", "+\t\t{ // insert modifier first", "+\t\t\tMethodDeclaration methodDecl= findMethodDeclaration(type, \"foo4\");", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.MODIFIERS2_PROPERTY);", "+\t\t\tModifier modifier= ast.newModifier(Modifier.ModifierKeyword.PUBLIC_KEYWORD);", "+\t\t\tlistRewrite.insertFirst(modifier, null);", "+\t\t}", "+\t\tbuf.append(\"    @Deprecated()\\n\");", "+\t\tbuf.append(\"    public Object foo3() { return null; }\\n\");", "+\t\tbuf.append(\"    public @Deprecated()Object foo4() { return null; }\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e78e90ba4220fb81f083e8ea96ba1e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "cafb00c9a05a5f3d6c3b24a32fe9b4ce9e8ba449", "commitAfterChange": "055cf2299e246e07310e3c00069174f749475bd4", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic void testParameterAnnotations_since_3() throws Exception", "signatureAfterChange": "  \tpublic void testParameterAnnotations_since_3() throws Exception", "diff": ["+\t\t{", "+\t\t\tSingleVariableDeclaration decl= ast.newSingleVariableDeclaration();", "+\t\t\t", "+\t\t\tMarkerAnnotation markerAnnotation= ast.newMarkerAnnotation();", "+\t\t\tmarkerAnnotation.setTypeName(ast.newSimpleName(\"X\"));", "+\t\t\tdecl.modifiers().add(markerAnnotation);", "+\t\t\t", "+\t\t\tType type= ast.newPrimitiveType(PrimitiveType.INT);", "+\t\t\tdecl.setType(type);", "+\t\t\t", "+\t\t\tdecl.setName(ast.newSimpleName(\"e\"));", "+\t\t\t", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "+\t\t\tlistRewrite.insertLast(decl, null);", "+\t\t}", "+\t\t", "-\t\tbuf.append(\"    public void foo(@X @A int a, @B2 int b, @X int c, @X int d) {\\n\");", "+\t\tbuf.append(\"    public void foo(@X @A int a, @B2 int b, @X int c, @X int d, @X int e) {\\n\");", "-\t\tbuf.append(\"    public void foo(@X\\n    @A int a, @B2 int b, @X\\n    int c, @X int d) {\\n\");", "+\t\tbuf.append(\"    public void foo(@X\\n    @A int a, @B2 int b, @X\\n    int c, @X int d, @X\\n    int e) {\\n\");"]}], "num": 55764}