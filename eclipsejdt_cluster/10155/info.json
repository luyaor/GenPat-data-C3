{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2896a1f3341b7e575f90dbd6f8b0a83b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4023cece202c8e8d40a9382538c082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "6de947a98e0d56f5c21755936ebc6de93f79b0e6", "commitAfterChange": "e18b8152863f75de59815219afe0ab3ec946a798", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock)", "signatureAfterChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel, boolean endOfBlock)", "diff": ["-\tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock) {", "+\tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel, boolean endOfBlock) {", "-\t\treturn super.complainIfUnreachable(flowInfo, flowContext, scope, complaintLevel, endOfBlock);", "+\t\treturn super.complainIfUnreachable(flowInfo, scope, complaintLevel, endOfBlock);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a4d9cd9cafcee7821be35537e30cb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "3f131825dfbebcd2d9846517fd8419ae56311784", "commitAfterChange": "ede87229fe271e061ecd80820c468f7956351f61", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock)", "signatureAfterChange": " \tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel)", "diff": ["-\tpublic int complainIfUnreachable(FlowInfo flowInfo, FlowContext flowContext, BlockScope scope, int complaintLevel, boolean endOfBlock) {", "+\tpublic int complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, int complaintLevel) {", "-\t\treturn super.complainIfUnreachable(flowInfo, flowContext, scope, complaintLevel, endOfBlock);", "+\t\treturn super.complainIfUnreachable(flowInfo, scope, complaintLevel);"]}], "num": 10155}