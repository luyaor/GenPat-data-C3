{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "453bbda9ff74bc70a230a9050c26f4c2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b849be7eae5ed673c736fe56415cb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void test032() throws Exception", "signatureAfterChange": " \t \tpublic void test032_field() throws Exception", "diff": ["+\t", "+\tpublic void test032_field() throws Exception {", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {}\\n\",", "+\t\t\t\t", "+\t\t\t\t\"\t@A int field;\\n\" +", "+\t\t// javac-b81: Bytes:8[0 1 19 0 0 7 0 0]  19 = 0x13 (FIELD)", "+\t\t\t\"      #8 @A(\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "-\t// type argument method call and generic or array", "-\tpublic void test032() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"\tstatic <T, U> T foo(T t, U u) {\\n\" +", "-\t\t\t\t\"\t\treturn t;\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tpublic static void bar() {\\n\" +", "-\t\t\t\t\"\t\tSystem.out.println(X.<@A String[] @B(1) [], @C('-') X>foo(new String[][]{{\\\"SUCCESS\\\"}}, null)[0]);\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tchar value() default '-';\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t},", "-\t\t\"\");", "-\t\tString expectedOutput =", "-\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #52 @A(\\n\" + ", "-\t\t\t\"        target type = 0x1b TYPE_ARGUMENT_METHOD_CALL_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        offset = 20\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"        locations = {1}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #53 @C(\\n\" + ", "-\t\t\t\"        #49 value=\\'-\\' (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x1a TYPE_ARGUMENT_METHOD_CALL\\n\" + ", "-\t\t\t\"        offset = 20\\n\" + ", "-\t\t\t\"        type argument index = 1\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #48 @B(\\n\" + ", "-\t\t\t\"        #49 value=(int) 1 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x1b TYPE_ARGUMENT_METHOD_CALL_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        offset = 20\\n\" + ", "-\t\t\t\"        type argument index = 0\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "-\t\t\t\"      )\\n\";", "-\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e14603655b59db4b206bf34e3622b769", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test028() throws Exception", "signatureAfterChange": " \t \tpublic void test042_methodReturnType() throws Exception", "diff": ["-\t// cast", "-\tpublic void test028() throws Exception {", "+\t", "+\tpublic void test042_methodReturnType() throws Exception {", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.CLASS)\\n\" + ", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tchar value() default '-';\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"I.java\",", "-\t\t\t\t\"interface I {}\\n\",", "-\t\t\t\t\"J.java\",", "-\t\t\t\t\"interface J {}\\n\",", "-\t\t\t\t\"\tpublic void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\tif (o instanceof String[][]) {\\n\" +", "-\t\t\t\t\"\t\t\tString[][] tab = (@C('_') @B(3) String[] @A[]) o;\\n\" +", "-\t\t\t\t\"\t\t\tSystem.out.println(tab.length);\\n\" +", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t\tSystem.out.println(o);\\n\" +", "+\t\t\t\t\"\t@B(3) @A(value=\\\"test\\\") int foo() {\\n\" +", "+\t\t\t\t\"\t\treturn 1;\\n\" +", "+\t\t// javac-b81:", "+\t\t// Bytes:13[0 1 20 0 0 11 0 1 0 12 115 0 13]", "+\t\t// Bytes:13[0 1 20 0 0 15 0 1 0 12 73 0 16]", "-\t\t\t\"      #41 @C(\\n\" + ", "-\t\t\t\"        #38 value=\\'_\\' (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x1 TYPE_CAST_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        offset = 8\\n\" + ", "-\t\t\t\"        locations = {1}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #43 @A(\\n\" + ", "-\t\t\t\"        target type = 0x1 TYPE_CAST_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        offset = 8\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "+\t\t\t\"      #21 @A(\\n\" + ", "+\t\t\t\"        #18 value=\\\"test\\\" (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x14 METHOD_RETURN\\n\" + ", "-\t\t\t\"      #37 @B(\\n\" + ", "-\t\t\t\"        #38 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x1 TYPE_CAST_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        offset = 8\\n\" + ", "-\t\t\t\"        locations = {1}\\n\" + ", "+\t\t\t\"      #17 @B(\\n\" + ", "+\t\t\t\"        #18 value=(int) 3 (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x14 METHOD_RETURN\\n\" + "]}], "num": 35523}