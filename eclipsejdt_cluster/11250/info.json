{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be6abecf11d46327432276dbd7b79dbc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0060f6d0d5e4984428ecaff965e0d965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "signatureAfterChange": " \tpublic ClasspathEntry( \t\tint contentKind, \t\tint entryKind, \t\tIPath path, \t\tIPath[] inclusionPatterns, \t\tIPath[] exclusionPatterns, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tIPath specificOutputLocation, \t\tIClasspathEntry referencingEntry, \t\tboolean isExported, \t\tIAccessRule[] accessRules, \t\tboolean combineAccessRules, \t\tIClasspathAttribute[] extraAttributes)", "diff": ["+\t\tIClasspathEntry referencingEntry,", "-", "+\t\tthis.referencingEntry = referencingEntry;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6b39cdf3ac7ef0e2115332f3de067a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType)", "signatureAfterChange": "  public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType, TypeReference exceptionTypeReference)", "diff": ["+", "+public ExceptionLabel(CodeStream codeStream, TypeBinding exceptionType, TypeReference exceptionTypeReference) {", "+\tsuper(codeStream);", "+\tthis.exceptionType = exceptionType;", "+\tthis.exceptionTypeReference = exceptionTypeReference;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1656cd5d6c729e8615be97d0cacf4bd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "commitAfterChange": "fe8f03030c996e7f3abaa101bf62fc6c88122090", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic EscapingExceptionCatchSite(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException)", "signatureAfterChange": " \t\tpublic EscapingExceptionCatchSite(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException, FlowInfo exceptionInfo)", "diff": ["-\t\tpublic EscapingExceptionCatchSite(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException) {", "+\t\tfinal FlowInfo exceptionInfo; // flow leading to the location of throwing", "+\t\tpublic EscapingExceptionCatchSite(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException, FlowInfo exceptionInfo) {", "+\t\t\tthis.exceptionInfo = exceptionInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b3bb96cabed197c134b0708201f876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tPackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding binding)", "signatureAfterChange": " \t\t \tPackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding binding, BindingResolver resolver)", "diff": ["-\tPackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding binding) {", "-\t\tthis.binding = binding;", "+\tPackageBinding(org.eclipse.jdt.internal.compiler.lookup.PackageBinding binding, BindingResolver resolver) {", "+\t\tthis.binding = binding;\t\t", "+\t\tthis.resolver = resolver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8c0972692e87e5ed2383f5e683ca45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "7eeea60289161cbc82181c2049d38d6375b340c4", "commitAfterChange": "bac0b688c9760eba84723fa01c9ef8fce3bf0175", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic InferenceContext18(Scope scope, Expression[] arguments, InvocationSite site)", "signatureAfterChange": " \tpublic InferenceContext18(Scope scope, Expression[] arguments, InvocationSite site, InferenceContext18 outerContext)", "diff": ["-\tpublic InferenceContext18(Scope scope, Expression[] arguments, InvocationSite site) {", "+\tpublic InferenceContext18(Scope scope, Expression[] arguments, InvocationSite site, InferenceContext18 outerContext) {", "+\t\tthis.outerContext = outerContext;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb8ae28c4ccfacc251e0422af98017e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "e3d38d54656be191fa1d8d0f586f0801ff0c9c11", "commitAfterChange": "9c722d652ae14a97e7431d85a6d79ecda38a4c0a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected WorkingCopy(IPackageFragment parent, String name)", "signatureAfterChange": "\r protected WorkingCopy(IPackageFragment parent, String name, IBufferFactory bufferFactory)", "diff": ["-protected WorkingCopy(IPackageFragment parent, String name) {\r", "+protected WorkingCopy(IPackageFragment parent, String name, IBufferFactory bufferFactory) {\r", "+\tthis.bufferFactory = bufferFactory;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec8062b2eef98debac798935b7e98d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "8875b1052910bffade008ed6793e67cfe8203a11", "commitAfterChange": "b0d68cdb00358dc1a637953611eddbe9ce7088cc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  NameEnvironment(IWorkspaceRoot root, JavaProject javaProject, SimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": "  NameEnvironment(IWorkspaceRoot root, JavaProject javaProject, SimpleLookupTable binaryLocationsPerProject, BuildNotifier notifier) throws CoreException", "diff": ["-NameEnvironment(IWorkspaceRoot root, JavaProject javaProject, SimpleLookupTable binaryLocationsPerProject) throws CoreException {", "+NameEnvironment(IWorkspaceRoot root, JavaProject javaProject, SimpleLookupTable binaryLocationsPerProject, BuildNotifier notifier) throws CoreException {", "+\tthis.notifier = notifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e5af0a1c5bfd278922017703c6868f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceSubstitution.java", "commitBeforeChange": "d516022cc45faaf269239c9a3eb11f62f3444f69", "commitAfterChange": "06338d59e18dd650cacadfb53051f533c530fabf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic InferenceSubstitution(LookupEnvironment environment, InferenceVariable[] variables)", "signatureAfterChange": "  \tpublic InferenceSubstitution(LookupEnvironment environment, InferenceVariable[] variables, InvocationSite site)", "diff": ["-\tpublic InferenceSubstitution(LookupEnvironment environment, InferenceVariable[] variables) {", "+\tpublic InferenceSubstitution(LookupEnvironment environment, InferenceVariable[] variables, InvocationSite site) {", "+\t\tthis.site = site;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627f7315b65750ce0d3ede2065c612c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "fcb6b52dfb91300241dc1cd9c915f45219747f35", "commitAfterChange": "9d67e78041cfcf4ea8149504d41dd65a12494e92", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank)", "signatureAfterChange": " \t \tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, BindingKeyResolver outerMostResolver)", "diff": ["-\tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank) {", "+\t", "+\tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, BindingKeyResolver outerMostResolver) {", "+\t\tthis.outerMostResolver = outerMostResolver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64301e9263370304d90238d273c16ae3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ASTRewriteAnalyzer(char[] content, LineInformation lineInfo, String lineDelim, TextEdit rootEdit, RewriteEventStore eventStore, NodeInfoStore nodeInfos, List comments, Map options, TargetSourceRangeComputer extendedSourceRangeComputer)", "signatureAfterChange": " \tpublic ASTRewriteAnalyzer( \t\t\tchar[] content, \t\t\tLineInformation lineInfo, \t\t\tString lineDelim, \t\t\tTextEdit rootEdit, \t\t\tRewriteEventStore eventStore, \t\t\tNodeInfoStore nodeInfos, \t\t\tList comments, \t\t\tMap options, \t\t\tTargetSourceRangeComputer extendedSourceRangeComputer, \t\t\tRecoveryScannerData recoveryScannerData)", "diff": ["-\tpublic ASTRewriteAnalyzer(char[] content, LineInformation lineInfo, String lineDelim, TextEdit rootEdit, RewriteEventStore eventStore, NodeInfoStore nodeInfos, List comments, Map options, TargetSourceRangeComputer extendedSourceRangeComputer) {", "+\tpublic ASTRewriteAnalyzer(", "+\t\t\tchar[] content,", "+\t\t\tLineInformation lineInfo,", "+\t\t\tString lineDelim,", "+\t\t\tTextEdit rootEdit,", "+\t\t\tRewriteEventStore eventStore,", "+\t\t\tNodeInfoStore nodeInfos,", "+\t\t\tList comments,", "+\t\t\tMap options,", "+\t\t\tTargetSourceRangeComputer extendedSourceRangeComputer,", "+\t\t\tRecoveryScannerData recoveryScannerData) {", "+\t\t", "+\t\tthis.recoveryScannerData = recoveryScannerData;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b38fc385b2fe18eca19db35fb27e92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "22dfb29015980684f8c134336f7b55238ec69ca1", "commitAfterChange": "ad3220b4b434313891b223270deb616283ce8051", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": "  public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["+\t\tFlowContext initializationParent,", "+\tthis.\tinitializationParent = initializationParent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6cd586bf0ad7220a3a5ef312a02b2de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1248181e23c81da45ee8e328a409b761a39e6e52", "commitAfterChange": "3df0b6d0a7c9e742ebbc5f2930d09070fa613a77", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings)", "signatureAfterChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings, \t\tIJavaProject javaProject)", "diff": ["-\t\tMap settings) {", "+\t\tMap settings,", "+\t\tIJavaProject javaProject) {", "+\t\tthis.javaProject = javaProject;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78b1186b67f4393937b1099c35e7f9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public PossibleMatch(MatchLocator locator, IResource resource, Openable openable)", "signatureAfterChange": "  public PossibleMatch(MatchLocator locator, IResource resource, Openable openable, SearchDocument document)", "diff": ["-public PossibleMatch(MatchLocator locator, IResource resource, Openable openable) {", "+public PossibleMatch(MatchLocator locator, IResource resource, Openable openable, SearchDocument document) {", "+\tthis.document = document;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb74fa226d2c8c196b732da9f17b49a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Requestor.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Requestor(IProblemFactory problemFactory, String outputPath, boolean generateOutput)", "signatureAfterChange": " public Requestor(IProblemFactory problemFactory, String outputPath, boolean generateOutput, ICompilerRequestor clientRequestor)", "diff": ["-public Requestor(IProblemFactory problemFactory, String outputPath, boolean generateOutput) {", "+\tpublic ICompilerRequestor clientRequestor;", "+public Requestor(IProblemFactory problemFactory, String outputPath, boolean generateOutput, ICompilerRequestor clientRequestor) {", "+\tthis.clientRequestor = clientRequestor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4565f7d38bc30f75f523992e5e22696", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "f4826af2e2ac8306bb9ff659455263dec112880d", "commitAfterChange": "7086675b9016b36eb3327ff794af3728a774a189", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, CompilationUnitDeclaration outerMostParsedUnit)", "signatureAfterChange": " \t \tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, CompilationUnitDeclaration outerMostParsedUnit, HashtableOfObject parsedUnits)", "diff": ["-\tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, CompilationUnitDeclaration outerMostParsedUnit) {", "+\t", "+\tprivate BindingKeyResolver(BindingKeyParser parser, Compiler compiler, LookupEnvironment environment, int wildcardRank, CompilationUnitDeclaration outerMostParsedUnit, HashtableOfObject parsedUnits) {", "+\t\tthis.resolvedUnits = parsedUnits;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabb341e6ee4bfdc3ea25640797477b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "9fff7ba189be037b4cf4f61956b7e287259b8f6d", "commitAfterChange": "8f52c3e814b7d9e86327e186704f1c7e2be78c75", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType)", "signatureAfterChange": " \t public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType, CaseStatement switchCase)", "diff": ["-", "-public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType) {", "+\t", "+public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType, CaseStatement switchCase) {", "-", "+\t", "+\tthis.switchCase = switchCase;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9749dd335703500e9d6c176fdd4514c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "fcf5bf0d0a4c39456e8c7db3f2ddaa402f21bade", "commitAfterChange": "6f8419ff850f25167775793977c62e26753f7b73", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tProjectCache(IPackageFragmentRoot[] allPkgFragmentRootsCache, HashtableOfArrayToObject allPkgFragmentsCache, Map rootToResolvedEntries)", "signatureAfterChange": " \t\tProjectCache(IPackageFragmentRoot[] allPkgFragmentRootsCache, HashtableOfArrayToObject allPkgFragmentsCache, HashtableOfArrayToObject isPackageCache, Map rootToResolvedEntries)", "diff": ["-\t\tProjectCache(IPackageFragmentRoot[] allPkgFragmentRootsCache, HashtableOfArrayToObject allPkgFragmentsCache, Map rootToResolvedEntries) {", "+\t\tProjectCache(IPackageFragmentRoot[] allPkgFragmentRootsCache, HashtableOfArrayToObject allPkgFragmentsCache, HashtableOfArrayToObject isPackageCache, Map rootToResolvedEntries) {", "+\t\t\tthis.isPackageCache = isPackageCache;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e974ffc23c3b377f5821909befab9666", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImportBinding.java", "commitBeforeChange": "996624297f7f1b08dc25c3bd565493751f6df397", "commitAfterChange": "a8d55f7d4930fd7566ac4b1489f0aa7e3f902477", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public ImportBinding(char[][] compoundName, boolean isOnDemand, Binding binding)", "signatureAfterChange": "\r \t\r public ImportBinding(char[][] compoundName, boolean isOnDemand, Binding binding, ImportReference reference)", "diff": ["-public ImportBinding(char[][] compoundName, boolean isOnDemand, Binding binding) {\r", "+\t\r", "+public ImportBinding(char[][] compoundName, boolean isOnDemand, Binding binding, ImportReference reference) {\r", "+\tthis.reference = reference;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f50fe330cbb79e24721d26c446f64165", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompletionRequestorWrapper.java", "commitBeforeChange": "2a46362da18e1189829e578c276cfbf726376a20", "commitAfterChange": "948661c4cb198af70b598b9954e5159cb73d7234", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor)", "signatureAfterChange": "\r \t\r public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, INameLookup nameLookup)", "diff": ["-public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor){\r", "+\t\r", "+public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, INameLookup nameLookup){\r", "+\tthis.nameLookup = nameLookup;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc0db0de821cb95cf0adbb0049e49b48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodReferencePattern.java", "commitBeforeChange": "4d19416746402b8fbbfd02c13772658da70a345a", "commitAfterChange": "81400db64234d6cf1ce3b6a87a8f065ac6bd072f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public MethodReferencePattern(\r \tchar[] selector, \r \tint matchMode, \r \tboolean isCaseSensitive,\r \tchar[] declaringQualification,\r \tchar[] declaringSimpleName,\t\r \tchar[] returnQualification, \r \tchar[] returnSimpleName,\r \tchar[][] parameterQualifications, \r \tchar[][] parameterSimpleNames)", "signatureAfterChange": "\r \r public MethodReferencePattern(\r \tchar[] selector, \r \tint matchMode, \r \tboolean isCaseSensitive,\r \tchar[] declaringQualification,\r \tchar[] declaringSimpleName,\t\r \tchar[] returnQualification, \r \tchar[] returnSimpleName,\r \tchar[][] parameterQualifications, \r \tchar[][] parameterSimpleNames,\r \tIType declaringType)", "diff": ["-\tchar[][] parameterSimpleNames) {\r", "+\tchar[][] parameterSimpleNames,\r", "+\tIType declaringType) {\r", "-\r", "+\tthis.declaringType = declaringType;\r"]}], "num": 11250}