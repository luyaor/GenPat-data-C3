{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "995a357efa970ffaa8ff0a3c284aab1c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "097b9c5a340896fc586f593cd26fec70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void testCompletionCatchArgumentName2() throws JavaModelException", "signatureAfterChange": "  public void testCompletionCatchArgumentName2() throws JavaModelException", "diff": ["+", "+public void testCompletionCatchArgumentName2() throws JavaModelException {", "+\tHashtable options = JavaCore.getOptions();", "+\t", "+\tObject argumentPrefixPreviousValue = options.get(JavaCore.CODEASSIST_ARGUMENT_PREFIXES);", "+\toptions.put(JavaCore.CODEASSIST_ARGUMENT_PREFIXES,\"arg\"); //$NON-NLS-1$", "+\tObject localPrefixPreviousValue = options.get(JavaCore.CODEASSIST_LOCAL_PREFIXES);", "+\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,\"loc\"); //$NON-NLS-1$", "+\t", "+\tJavaCore.setOptions(options);", "+\t", "+\ttry {", "+\t\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionCatchArgumentName2.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"Exception \";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor);", "+\t", "+\t\tassertEquals(", "+\t\t\t\"element:exception    completion:exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:locException    completion:locException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX+ R_NON_RESTRICTED),", "+\t\t\trequestor.getResults());", "+\t} finally {", "+\t\toptions.put(JavaCore.CODEASSIST_ARGUMENT_PREFIXES,argumentPrefixPreviousValue);", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,localPrefixPreviousValue);", "+\t\tJavaCore.setOptions(options);", "+\t}", "+}", "-}", "-public void testCompletionCatchArgumentName2() throws JavaModelException {", "-\tHashtable options = JavaCore.getOptions();", "-\tObject argumentPrefixPreviousValue = options.get(JavaCore.CODEASSIST_ARGUMENT_PREFIXES);", "-\toptions.put(JavaCore.CODEASSIST_ARGUMENT_PREFIXES,\"arg\"); //$NON-NLS-1$", "-\tObject localPrefixPreviousValue = options.get(JavaCore.CODEASSIST_LOCAL_PREFIXES);", "-\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,\"loc\"); //$NON-NLS-1$", "-\t", "-\tJavaCore.setOptions(options);", "-", "-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionCatchArgumentName2.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"Exception \";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\toptions.put(JavaCore.CODEASSIST_ARGUMENT_PREFIXES,argumentPrefixPreviousValue);", "-\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,localPrefixPreviousValue);", "-\tJavaCore.setOptions(options);", "-", "-\tassertEquals(", "-\t\t\"element:exception    completion:exception    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:locException    completion:locException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9647f5888851ee7fec0de3a0cbc4c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageFragmentOperation.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\tJavaElementDelta delta = null;", "-\tPackageFragmentRoot root = (PackageFragmentRoot) getParentElement();", "-\tbeginTask(Messages.operation_createPackageFragmentProgress, this.pkgName.length); ", "-\tIContainer parentFolder = (IContainer) root.getResource();", "-\tString[] sideEffectPackageName = CharOperation.NO_STRINGS; ", "-\tArrayList results = new ArrayList(this.pkgName.length);", "-\tchar[][] inclusionPatterns = root.fullInclusionPatternChars();", "-\tchar[][] exclusionPatterns = root.fullExclusionPatternChars();", "-\tint i;", "-\tfor (i = 0; i < this.pkgName.length; i++) {", "-\t\tString subFolderName = this.pkgName[i];", "-\t\tsideEffectPackageName = Util.arrayConcat(sideEffectPackageName, subFolderName);", "-\t\tIResource subFolder = parentFolder.findMember(subFolderName);", "-\t\tif (subFolder == null) {", "-\t\t\tcreateFolder(parentFolder, subFolderName, force);", "-\t\t\tparentFolder = parentFolder.getFolder(new Path(subFolderName));", "-\t\t\tIPackageFragment addedFrag = root.getPackageFragment(sideEffectPackageName);", "-\t\t\tif (!Util.isExcluded(parentFolder, inclusionPatterns, exclusionPatterns)) {", "-\t\t\t\tif (delta == null) {", "-\t\t\t\t\tdelta = newJavaElementDelta();", "+\ttry {", "+\t\tJavaElementDelta delta = null;", "+\t\tPackageFragmentRoot root = (PackageFragmentRoot) getParentElement();", "+\t\tbeginTask(Messages.operation_createPackageFragmentProgress, this.pkgName.length); ", "+\t\tIContainer parentFolder = (IContainer) root.getResource();", "+\t\tString[] sideEffectPackageName = CharOperation.NO_STRINGS; ", "+\t\tArrayList results = new ArrayList(this.pkgName.length);", "+\t\tchar[][] inclusionPatterns = root.fullInclusionPatternChars();", "+\t\tchar[][] exclusionPatterns = root.fullExclusionPatternChars();", "+\t\tint i;", "+\t\tfor (i = 0; i < this.pkgName.length; i++) {", "+\t\t\tString subFolderName = this.pkgName[i];", "+\t\t\tsideEffectPackageName = Util.arrayConcat(sideEffectPackageName, subFolderName);", "+\t\t\tIResource subFolder = parentFolder.findMember(subFolderName);", "+\t\t\tif (subFolder == null) {", "+\t\t\t\tcreateFolder(parentFolder, subFolderName, force);", "+\t\t\t\tparentFolder = parentFolder.getFolder(new Path(subFolderName));", "+\t\t\t\tIPackageFragment addedFrag = root.getPackageFragment(sideEffectPackageName);", "+\t\t\t\tif (!Util.isExcluded(parentFolder, inclusionPatterns, exclusionPatterns)) {", "+\t\t\t\t\tif (delta == null) {", "+\t\t\t\t\t\tdelta = newJavaElementDelta();", "+\t\t\t\t\t}", "+\t\t\t\t\tdelta.added(addedFrag);", "-\t\t\t\tdelta.added(addedFrag);", "+\t\t\t\tresults.add(addedFrag);", "+\t\t\t} else {", "+\t\t\t\tparentFolder = (IContainer) subFolder;", "-\t\t\tresults.add(addedFrag);", "-\t\t} else {", "-\t\t\tparentFolder = (IContainer) subFolder;", "+\t\t\tworked(1);", "-\t\tworked(1);", "-\t}", "-\tif (results.size() > 0) {", "-\t\tthis.resultElements = new IJavaElement[results.size()];", "-\t\tresults.toArray(this.resultElements);", "-\t\tif (delta != null) {", "-\t\t\taddDelta(delta);", "+\t\tif (results.size() > 0) {", "+\t\t\tthis.resultElements = new IJavaElement[results.size()];", "+\t\t\tresults.toArray(this.resultElements);", "+\t\t\tif (delta != null) {", "+\t\t\t\taddDelta(delta);", "+\t\t\t}", "+\t} finally {", "+\t\tdone();", "-\tdone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7382c6d74268565ab88853f194a3456", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/MergeFactory.java", "commitBeforeChange": "2f4f5e86f2e4aaf45121fdec3d6b9c586ffaf25e", "commitAfterChange": "753308c7e77198873182da037131d7e90e799c1c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void merge() throws IOException", "signatureAfterChange": "\r \tpublic void merge() throws IOException", "diff": ["-\t\t//init\r", "-\t\taddsInput.open();\r", "-\t\toldInput.open();\r", "-\t\tmergeOutput.open();\r", "-\t\tinit();\r", "-\t\t//merge\r", "-\t\t//findChanges();\r", "-\t\tmergeFiles();\r", "-\t\tmergeReferences();\r", "-\t\tmergeOutput.flush();\r", "-\t\t//closes everything\r", "-\t\toldInput.close();\r", "-\t\taddsInput.close();\r", "-\t\tmergeOutput.close();\r", "+\t\ttry {\r", "+\t\t\t//init\r", "+\t\t\taddsInput.open();\r", "+\t\t\toldInput.open();\r", "+\t\t\tmergeOutput.open();\r", "+\t\t\tinit();\r", "+\t\t\t//merge\r", "+\t\t\t//findChanges();\r", "+\t\t\tmergeFiles();\r", "+\t\t\tmergeReferences();\r", "+\t\t\tmergeOutput.flush();\r", "+\t\t} finally {\r", "+\t\t\t//closes everything\r", "+\t\t\toldInput.close();\r", "+\t\t\taddsInput.close();\r", "+\t\t\tmergeOutput.close();\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d9cd29f04684c54f932b08e6868a42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "9d8b73554095c311a209be1a1d5aa92bb30583eb", "commitAfterChange": "990424c900c7463d4257bff26a1ccc6812106204", "methodNumberBeforeChange": 543, "methodNumberAfterChange": 543, "signatureBeforeChange": " public void testCompletionVariableName3() throws JavaModelException", "signatureAfterChange": " public void testCompletionVariableName3() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionVariableName3.java\");", "+\ttry {", "+\t\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "+\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionVariableName3.java\");", "+\t", "+\t\tString str = cu.getSource();", "+\t\tString completeBehind = \"OneName \";", "+\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+\t\tcu.codeComplete(cursorLocation, requestor);", "+\t", "+\t\tassertEquals(", "+\t\t\t\"element:name    completion:name    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:names1    completion:names1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:names2    completion:names2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:oneName    completion:oneName    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:oneNames1    completion:oneNames1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:oneNames2    completion:oneNames2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p1Name    completion:p1Name    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p1Names1    completion:p1Names1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p1Names2    completion:p1Names2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p1OneName    completion:p1OneName    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p1OneNames1    completion:p1OneNames1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p1OneNames2    completion:p1OneNames2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p2Name    completion:p2Name    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p2Names1    completion:p2Names1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p2Names2    completion:p2Names2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p2OneName    completion:p2OneName    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p2OneNames1    completion:p2OneNames1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "+\t\t\t\"element:p2OneNames2    completion:p2OneNames2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_SUFFIX+ R_NON_RESTRICTED),", "+\t\t\trequestor.getResults());", "+\t} finally {", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,argumentPrefixPreviousValue);", "+\t\toptions.put(JavaCore.CODEASSIST_LOCAL_SUFFIXES,localPrefixPreviousValue);", "+\t\tJavaCore.setOptions(options);", "+\t}", "+}", "-\tString str = cu.getSource();", "-\tString completeBehind = \"OneName \";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-\toptions.put(JavaCore.CODEASSIST_LOCAL_PREFIXES,argumentPrefixPreviousValue);", "-\toptions.put(JavaCore.CODEASSIST_LOCAL_SUFFIXES,localPrefixPreviousValue);", "-\tassertEquals(", "-\t\t\"element:name    completion:name    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:names1    completion:names1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:names2    completion:names2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:oneName    completion:oneName    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:oneNames1    completion:oneNames1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:oneNames2    completion:oneNames2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p1Name    completion:p1Name    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p1Names1    completion:p1Names1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p1Names2    completion:p1Names2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p1OneName    completion:p1OneName    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p1OneNames1    completion:p1OneNames1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p1OneNames2    completion:p1OneNames2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_FIRST_PREFIX + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p2Name    completion:p2Name    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p2Names1    completion:p2Names1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p2Names2    completion:p2Names2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p2OneName    completion:p2OneName    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p2OneNames1    completion:p2OneNames1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_FIRST_SUFFIX + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:p2OneNames2    completion:p2OneNames2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NAME_PREFIX + R_NAME_SUFFIX+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf084b5c8924789f204472e249ea868", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "2f4f5e86f2e4aaf45121fdec3d6b9c586ffaf25e", "commitAfterChange": "753308c7e77198873182da037131d7e90e799c1c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprotected void merge() throws IOException", "signatureAfterChange": "\r \tprotected void merge() throws IOException", "diff": ["-\t\t//invoke a mergeFactory\r", "-\t\tnew MergeFactory(\r", "-\t\t\tmainIndexInput, \r", "-\t\t\taddsIndexInput, \r", "-\t\t\ttempIndexOutput, \r", "-\t\t\tremovedInOld, \r", "-\t\t\tremovedInAdds).merge();\r", "-\t\t\r", "-\t\t//rename the file created to become the main index\r", "-\t\tFile mainIndexFile= (File) mainIndexInput.getSource();\r", "-\t\tFile tempIndexFile= (File) tempIndexOutput.getDestination();\r", "-\t\tmainIndexFile.delete();\r", "-\t\ttempIndexFile.renameTo(mainIndexFile);\r", "-\t\t\r", "-\t\t//initialise remove vectors and addsindex, and change the state\r", "-\t\tremovedInAdds.clear();\r", "-\t\tremovedInOld.clear();\r", "-\t\taddsIndex.init();\r", "-\t\taddsIndexInput= new SimpleIndexInput(addsIndex);\r", "-\t\tstate= MERGED;\r", "+\t\ttry {\r", "+\t\t\t//invoke a mergeFactory\r", "+\t\t\tnew MergeFactory(\r", "+\t\t\t\tmainIndexInput, \r", "+\t\t\t\taddsIndexInput, \r", "+\t\t\t\ttempIndexOutput, \r", "+\t\t\t\tremovedInOld, \r", "+\t\t\t\tremovedInAdds).merge();\r", "+\t\t\t\r", "+\t\t\t//rename the file created to become the main index\r", "+\t\t\tFile mainIndexFile= (File) mainIndexInput.getSource();\r", "+\t\t\tFile tempIndexFile= (File) tempIndexOutput.getDestination();\r", "+\t\t\tmainIndexFile.delete();\r", "+\t\t\ttempIndexFile.renameTo(mainIndexFile);\r", "+\t\t} finally {\t\t\r", "+\t\t\t//initialise remove vectors and addsindex, and change the state\r", "+\t\t\tremovedInAdds.clear();\r", "+\t\t\tremovedInOld.clear();\r", "+\t\t\taddsIndex.init();\r", "+\t\t\taddsIndexInput= new SimpleIndexInput(addsIndex);\r", "+\t\t\tstate= MERGED;\r", "+\t\t}\r"]}], "num": 19174}