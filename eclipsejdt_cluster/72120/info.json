{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7de1d7f15881e001bcd9b8bfef0387ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171df9185f9ffbbae8f17d5e074be6e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "928d90c3d930147ffd37781c56673795a6f31eb3", "commitAfterChange": "c7679cd484cc416e79c8e4fd2e1a89f930508174", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void testMissingLibrary2() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testMissingLibrary2() throws JavaModelException", "diff": ["-\t\t\tnew Problem(\"\", \"The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project\", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"\", \"The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try building this project\", projectPath, -1, -1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest1, new Problem(\"p1\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest1, -1, -1, -1)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest1, new Problem(\"p1\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest1, -1, -1, -1, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest2, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest2, -1, -1, -1)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest2, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest2, -1, -1, -1, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest3, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest3, 0, 1, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest3, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files\", classTest3, 0, 1, CategorizedProblem.CAT_BUILDPATH, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bde2e86f83aa074cefcaf87852a29d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ClasspathTests.java", "commitBeforeChange": "b6c3ef88a42ce595faa4897ed3f3cb935e51c7fb", "commitAfterChange": "80d11a1b2e7fe69d0ca6c0214575c56a017a1140", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testMissingLibrary2() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testMissingLibrary2() throws JavaModelException", "diff": ["-\t\t\tnew Problem(\"\", \"The project was not built since its classpath is incomplete. Cannot find the class file for java.lang.Object. Fix the classpath then try rebuilding this project.\", projectPath)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"\", \"The project was not built since its build path is incomplete. Cannot find the class file for java.lang.Object. Fix the build path then try rebuilding this project.\", projectPath)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tassertEquals(\"too much problems\", prob1.length + prob2.length + prob3.length,1); //$NON-NLS-1$", "+\t\tassertEquals(\"too many problems\", prob1.length + prob2.length + prob3.length,1); //$NON-NLS-1$", "-\t\t\texpectingSpecificProblemFor(classTest1, new Problem(\"p1\", \"This compilation unit indirectly references the missing type java.lang.Object (typically some required class file is referencing a type outside the classpath)\", classTest1)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest1, new Problem(\"p1\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files.\", classTest1)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest2, new Problem(\"p2\", \"This compilation unit indirectly references the missing type java.lang.Object (typically some required class file is referencing a type outside the classpath)\", classTest2)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest2, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files.\", classTest2)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingSpecificProblemFor(classTest3, new Problem(\"p2\", \"This compilation unit indirectly references the missing type java.lang.Object (typically some required class file is referencing a type outside the classpath)\", classTest3)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingSpecificProblemFor(classTest3, new Problem(\"p2\", \"The type java.lang.Object cannot be resolved. It is indirectly referenced from required .class files.\", classTest3)); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 72120}