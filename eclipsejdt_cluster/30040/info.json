{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7cd2b0e2b5f8ef2383cf2976ed27be6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ea50d6998b8d6f8b9193d17026f584", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "36b510694d3467a3270adec86a6794548a63026c", "commitAfterChange": "0fce782c30295dc23e93138e6c49716f297bb662", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry entry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "diff": ["-\t\tIClasspathEntry entry,", "+\t\tIClasspathEntry resolvedEntry,", "-\t\tString rootID = ((ClasspathEntry)entry).rootID();", "+\t\tString rootID = ((ClasspathEntry)resolvedEntry).rootID();", "-\t\tIPath entryPath = entry.getPath();", "+\t\tIPath entryPath = resolvedEntry.getPath();", "-\t\tswitch(entry.getEntryKind()){", "+\t\tswitch(resolvedEntry.getEntryKind()){", "-\t\t\t\tif (!insideOriginalProject && !entry.isExported()) return;", "+\t\t\t\tif (!insideOriginalProject && !resolvedEntry.isExported()) return;", "-\t\t\t\tif (!insideOriginalProject && !entry.isExported()) return;", "+\t\t\t\tif (!insideOriginalProject && !resolvedEntry.isExported()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c51a411a682143d9362d254731e1fbec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "d3434cab637c618fa02e8b8dadd731b79bf7386b", "commitAfterChange": "46e3483cccbab80fe0f5c6a0da160435634e474e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY && entry.getPath().equals(projectPath))", "-\t\t\t\t\t\treturn true; // the project is also a library folder (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89815)", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY && entry.getPath().equals(projectPath)) {", "+\t\t\t\t\t\t// the project is also a library folder (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89815)", "+\t\t\t\t\t\t// ensure a job exists to index it as a binary folder", "+\t\t\t\t\t\tthis.manager.indexLibrary(projectPath, this.project);", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}"]}], "num": 30040}