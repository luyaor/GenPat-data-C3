{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aca97439ba59344c32a5ce3ddc22b63", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6e36a0d4d52ca90e146e9666302c7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, IRegion[] regions, boolean includeComments)", "signatureAfterChange": "  \tprivate void updateWorkingOptions(int indentationLevel, String lineSeparator, int kind)", "diff": ["-", "-\tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, IRegion[] regions, boolean includeComments) {", "-\t\tif (lineSeparator != null) {", "-\t\t\tthis.preferences.line_separator = lineSeparator;", "-\t\t} else {", "-\t\t\tthis.preferences.line_separator = Util.LINE_SEPARATOR;", "-\t\t}", "-\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil, includeComments);", "-", "-\t\treturn this.newCodeFormatter.format(source, constructorDeclaration);", "-\t}", "+\tprivate void updateWorkingOptions(int indentationLevel, String lineSeparator, int kind) {", "+\t\tthis.workingOptions.line_separator = lineSeparator != null ? lineSeparator", "+\t\t\t\t: this.originalOptions.line_separator;", "+\t\tif (this.workingOptions.line_separator == null)", "+\t\t\tthis.workingOptions.line_separator = Util.LINE_SEPARATOR;", "+", "+\t\tthis.workingOptions.initial_indentation_level = indentationLevel;", "+", "+\t\tthis.workingOptions.comment_format_javadoc_comment = this.originalOptions.comment_format_javadoc_comment", "+\t\t\t\t&& canFormatComment(kind, K_JAVA_DOC);", "+\t\tthis.workingOptions.comment_format_block_comment = this.originalOptions.comment_format_block_comment", "+\t\t\t\t&& canFormatComment(kind, K_MULTI_LINE_COMMENT);", "+\t\tthis.workingOptions.comment_format_line_comment = this.originalOptions.comment_format_line_comment", "+\t\t\t\t&& canFormatComment(kind, K_SINGLE_LINE_COMMENT);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bcdb654d8337b572efb1e48db4122b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, IRegion[] regions, boolean includeComments)", "signatureAfterChange": "  \tprivate void updateWorkingOptions(int indentationLevel, String lineSeparator, int kind)", "diff": ["-", "-\tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, IRegion[] regions, boolean includeComments) {", "-\t\tif (lineSeparator != null) {", "-\t\t\tthis.preferences.line_separator = lineSeparator;", "-\t\t} else {", "-\t\t\tthis.preferences.line_separator = Util.LINE_SEPARATOR;", "-\t\t}", "-\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, regions, this.codeSnippetParsingUtil, includeComments);", "-", "-\t\treturn this.newCodeFormatter.format(source, constructorDeclaration);", "-\t}", "+\tprivate void updateWorkingOptions(int indentationLevel, String lineSeparator, int kind) {", "+\t\tthis.workingOptions.line_separator = lineSeparator != null ? lineSeparator", "+\t\t\t\t: this.originalOptions.line_separator;", "+\t\tif (this.workingOptions.line_separator == null)", "+\t\t\tthis.workingOptions.line_separator = Util.LINE_SEPARATOR;", "+", "+\t\tthis.workingOptions.initial_indentation_level = indentationLevel;", "+", "+\t\tthis.workingOptions.comment_format_javadoc_comment = this.originalOptions.comment_format_javadoc_comment", "+\t\t\t\t&& canFormatComment(kind, K_JAVA_DOC);", "+\t\tthis.workingOptions.comment_format_block_comment = this.originalOptions.comment_format_block_comment", "+\t\t\t\t&& canFormatComment(kind, K_MULTI_LINE_COMMENT);", "+\t\tthis.workingOptions.comment_format_line_comment = this.originalOptions.comment_format_line_comment", "+\t\t\t\t&& canFormatComment(kind, K_SINGLE_LINE_COMMENT);", "+\t}"]}], "num": 24337}