{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19fd11019a8aaf70293c4796543b3756", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27734674f9ab3e4026ea9c5b5e665bc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "9a099ab7eaca6de468f171f604d52045eb064822", "commitAfterChange": "245938f53ddff468739c34085f55dc93baea5c7e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "  protected void setUp() throws Exception", "signatureAfterChange": "  protected void setUp() throws Exception", "diff": ["+", "+\t// Store test class and its name when changing", "+\tfirst = false;", "+\tif (CURRENT_CLASS == null || CURRENT_CLASS != getClass()) {", "+\t\tif (CURRENT_CLASS != null && RUN_GC) clean();", "+\t\tCURRENT_CLASS = getClass();", "+\t\tfirst = true;", "+\t\tCURRENT_CLASS_NAME = getClass().getName();", "+\t\tCURRENT_CLASS_NAME = CURRENT_CLASS_NAME.substring(CURRENT_CLASS_NAME.indexOf(\".tests.\")+7, CURRENT_CLASS_NAME.length());", "+\t}", "+", "-\t\tnewClass = false;", "-\t\tif (CURRENT_CLASS == null || CURRENT_CLASS != getClass()) {", "-\t\t\tif (CURRENT_CLASS != null && RUN_GC) clean();", "-\t\t\tCURRENT_CLASS = getClass();", "-\t\t\tnewClass = true;", "-\t\t\tCURRENT_CLASS_NAME = getClass().getName();", "-\t\t\tCURRENT_CLASS_NAME = CURRENT_CLASS_NAME.substring(CURRENT_CLASS_NAME.indexOf(\".tests.\")+7, CURRENT_CLASS_NAME.length());", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662923cb71d3ac39b1b3253dd8f7c37f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "2405db5aa5fe68001490d17fc143b2b94cd3e4c0", "commitAfterChange": "f9e197d5d504f2f1e192bb89ac7c3b3675cc44f4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  protected void setUp() throws Exception", "signatureAfterChange": "  protected void setUp() throws Exception", "diff": ["-\tif (CURRENT_CLASS == null || CURRENT_CLASS != getClass()) {", "+\tboolean isFirstTestRun = CURRENT_CLASS == null;", "+\tif (isFirstTestRun || CURRENT_CLASS != getClass()) {", "+\t\tif (isFirstTestRun) clean();", "-\t\t\tstream.print(used);", "+\t\t\tstream.print(format(used));", "-\t\t\tstream.print(total);", "+\t\t\tstream.print(format(total));", "-\t\t\tstream.print(Runtime.getRuntime().maxMemory());", "+\t\t\tstream.print(format(Runtime.getRuntime().maxMemory()));", "+\t\t\tif (isFirstTestRun) {", "+\t\t\t\tSystem.out.println(\"\t\"+format(used));", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (isFirstTestRun) {", "+\t\t\t\tlong total = Runtime.getRuntime().totalMemory();", "+\t\t\t\tlong used = total - Runtime.getRuntime().freeMemory();", "+\t\t\t\tSystem.out.println(\"\talready used while starting: \"+format(used));", "+\t\t\t}", "+}"]}], "num": 7232}