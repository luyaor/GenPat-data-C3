{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "566a5cee75665e99ec602d88056f2e5d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961e4ca24d322907e159f6982eb76020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "446bb541ca213992576e03757eea7f75301ac1be", "commitAfterChange": "37207b2312332e7eb9b138e12e2db23f9f9da53e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+        int paramOffset = 0;", "+        \t\tparamOffset = 1; // 0 is receiver, real parameters start at 1", "-        \tint len = this.descriptor.parameters.length;", "+        \tint len = this.binding.parameters.length;", "-    \t\t\tlong declared = this.descriptor.parameters[i].tagBits & TagBits.AnnotationNullMASK;", "+    \t\t\tlong declared = this.descriptor.parameters[i+paramOffset].tagBits & TagBits.AnnotationNullMASK;", "-    \t\t\t\t\tscope.problemReporter().parameterLackingNullableAnnotation(this, this.descriptor, i, ", "+    \t\t\t\t\tscope.problemReporter().parameterLackingNullableAnnotation(this, this.descriptor, i, paramOffset, ", "-    \t\t\t\t\tscope.problemReporter().parameterRequiresNonnull(this, this.descriptor, i,", "+    \t\t\t\t\tscope.problemReporter().parameterRequiresNonnull(this, this.descriptor, i+paramOffset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2bc4800aed621270e8111b8834fe00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, TypeBinding[] typeArguments, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, TypeBinding[] typeArguments, LookupEnvironment environment)", "diff": ["+\t    // special case: @NonNull for a parameter that is inferred to 'null' is encoded the old way", "+\t    // because we cannot (and don't want to) add type annotations to NullTypeBinding.", "+\t    int len = this.parameters.length;", "+\t    for (int i = 0; i < len; i++) {", "+\t    \tif (this.parameters[i] == TypeBinding.NULL) {", "+\t    \t\tlong nullBits = originalMethod.parameters[i].tagBits & TagBits.AnnotationNullMASK;", "+\t    \t\tif (nullBits == TagBits.AnnotationNonNull) {", "+\t    \t\t\tif (this.parameterNonNullness == null)", "+\t    \t\t\t\tthis.parameterNonNullness = new Boolean[len];", "+\t    \t\t\tthis.parameterNonNullness[i] = Boolean.TRUE;", "+\t    \t\t}", "+\t    \t}", "+\t    }"]}], "num": 5155}