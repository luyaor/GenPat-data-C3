{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c681aad6d3dd39321611f04c410dff9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980ed0f46fb26dad320d280ebb0a670a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 556, "methodNumberAfterChange": 556, "signatureBeforeChange": " \tpublic void test0538()", "signatureAfterChange": " \tpublic void test0538()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 9)\\n\" +", "-\t\t\t\"\tClass c = Foo.class;\\n\" +", "-\t\t\t\"\t^^^^^\\n\" +", "-\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t        ^^^^\\n\" +", "-\t\t\t\"Bound mismatch: The type Enum<?> is not a valid substitute for the bounded parameter <E extends Enum<E>> of the type EnumSet<E>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation allOf(Class) of the generic method allOf(Class<E>) of type EnumSet\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type EnumSet needs unchecked conversion to conform to EnumSet<Enum<?>>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t                                      ^\\n\" +", "-\t\t\t\"Type safety: The expression of type Class needs unchecked conversion to conform to Class<E>\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tClass c = Foo.class;\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t        ^^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The type Enum<?> is not a valid substitute for the bounded parameter <E extends Enum<E>> of the type EnumSet<E>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation allOf(Class) of the generic method allOf(Class<E>) of type EnumSet\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type EnumSet needs unchecked conversion to conform to EnumSet<Enum<?>>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum<?>> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                                      ^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Class needs unchecked conversion to conform to Class<Enum<?>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc6e6068458f45f3834ab0e13fa6e1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 551, "methodNumberAfterChange": 551, "signatureBeforeChange": " \tpublic void test0533()", "signatureAfterChange": " \tpublic void test0533()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in X.java (at line 9)\\n\" +", "-\t\t\t\"\tClass c = Foo.class;\\n\" +", "-\t\t\t\"\t^^^^^\\n\" +", "-\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t        ^^^^\\n\" +", "-\t\t\t\"Enum is a raw type. References to generic type Enum<E> should be parameterized\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t        ^^^^\\n\" +", "-\t\t\t\"Bound mismatch: The type Enum is not a valid substitute for the bounded parameter <E extends Enum<E>> of the type EnumSet<E>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t                     ^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: Unchecked invocation allOf(Class) of the generic method allOf(Class<E>) of type EnumSet\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t                     ^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Type safety: The expression of type EnumSet needs unchecked conversion to conform to EnumSet<Enum>\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. WARNING in X.java (at line 10)\\n\" +", "-\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" +", "-\t\t\t\"\t                                   ^\\n\" +", "-\t\t\t\"Type safety: The expression of type Class needs unchecked conversion to conform to Class<E>\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tClass c = Foo.class;\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t        ^^^^\\n\" + ", "+\t\t\t\"Enum is a raw type. References to generic type Enum<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t        ^^^^\\n\" + ", "+\t\t\t\"Bound mismatch: The type Enum is not a valid substitute for the bounded parameter <E extends Enum<E>> of the type EnumSet<E>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation allOf(Class) of the generic method allOf(Class<E>) of type EnumSet\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                     ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The expression of type EnumSet needs unchecked conversion to conform to EnumSet<Enum>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tEnumSet<Enum> eSet = EnumSet.allOf(c);\\n\" + ", "+\t\t\t\"\t                                   ^\\n\" + ", "+\t\t\t\"Type safety: The expression of type Class needs unchecked conversion to conform to Class<Enum>\\n\" + "]}], "num": 43011}