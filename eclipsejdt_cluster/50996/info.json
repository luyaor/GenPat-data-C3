{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7ec0b853d8e6fd10da4c3f364348638", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9726a3b8eaead80ca7a1efa973d4ef34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "61742b7a485fa965b2f7b05fc8eadc51ecd60a49", "commitAfterChange": "d304d5cd9d0c4f90c63a024d76dece50501ce7a8", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "  \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "signatureAfterChange": "  \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "diff": ["+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=271296", "+\t\t\t// If there is at least one expected type, then void proposal types attract a degraded relevance.  ", "+\t\t\tif (proposalType == TypeBinding.VOID && this.expectedTypesPtr >=0) {", "+\t\t\t\treturn R_VOID;", "+\t\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc807c04eee62574a17de5feb5eed53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1db6cbd08071fd387d5c2eab07da46a873d0aaff", "commitAfterChange": "eeee664e29d06fc4cc8b056329f9c8c46f9df971", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["+\t\t\t\t} else { // https://bugs.eclipse.org/bugs/show_bug.cgi?id=310747", "+\t\t\t\t\t// If the variable is of type X[], and we're in the initializer", "+\t\t\t\t\t// we should have X as the expected type for the variable initializers.", "+\t\t\t\t\tbinding = binding.leafComponentType();", "+\t\t\t\t\taddExpectedType(binding, scope);"]}], "num": 50996}