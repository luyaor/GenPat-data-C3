{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b267d0d536e9b1c2ecc5d9bf01efeb9d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9350b1efc23d67e414a0a449d10b99a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/impl/FormatterOptions.java", "commitBeforeChange": "98f0de74a38b5d56ad4c7ad7bb857ae598d48654", "commitAfterChange": "ecaac3d2c5c743a7471099f473eb673438f5a50a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FormatterOptions(Map settings)", "signatureAfterChange": " public FormatterOptions(Map settings)", "diff": ["-\tif (settings == null) return;", "+\tMap javaCoreOptions = JavaCore.getOptions();", "+\t", "+\tif (settings != null) {", "+\t\tObject[] presetEntries = settings.entrySet().toArray();", "+\t\t", "+\t\tfor (int i = 0, max = presetEntries.length; i < max; i++){", "+\t\t\tMap.Entry entry = (Map.Entry)presetEntries[i];", "+\t\t\tif (!(entry.getKey() instanceof String)) continue;", "+\t\t\tif (!(entry.getValue() instanceof String)) continue;", "+\t\t\tString optionID = (String) entry.getKey();", "+\t\t\tString optionValue = (String) entry.getValue();", "+\t", "+\t\t\tjavaCoreOptions.put(optionID, optionValue);", "+\t\t}\t", "+\t}", "+", "+\tObject[] entries = javaCoreOptions.entrySet().toArray();", "+", "+\tif (entries == null) {", "+\t\treturn;", "+\t}", "-\tObject[] entries = settings.entrySet().toArray();", "+\t\tif(optionID.equals(OPTION_InsertSpaceAfterCast)){", "+\t\t\tif (optionValue.equals(INSERT)){", "+\t\t\t\tthis.spaceInCastExpression = true;", "+\t\t\t} else if (optionValue.equals(DO_NOT_INSERT)){", "+\t\t\t\tthis.spaceInCastExpression = false;", "+\t\t\t}", "+\t\t\tcontinue;", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7427a80bfa749a8c614afcc0e3808f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java", "commitBeforeChange": "c7661325767c4e77e04e24d10bf6642ff69f23f8", "commitAfterChange": "51877e4780935a9796976dae9b68bdf169233103", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic AssistOptions(Map settings)", "signatureAfterChange": "\r \tpublic AssistOptions(Map settings)", "diff": ["-\tif (settings == null) return;\r", "-\t\r", "-\t// filter options which are related to the assist component\r", "-\tObject[] entries = settings.entrySet().toArray();\r", "-\tfor (int i = 0, max = entries.length; i < max; i++){\r", "-\t\tMap.Entry entry = (Map.Entry)entries[i];\r", "-\t\tif (!(entry.getKey() instanceof String)) continue;\r", "-\t\tif (!(entry.getValue() instanceof String)) continue;\r", "-\t\tString optionID = (String) entry.getKey();\r", "-\t\tString optionValue = (String) entry.getValue();\r", "-\t\t\r", "-\t\tif (optionID.equals(OPTION_PerformVisibilityCheck)) {\r", "-\t\t\tif (optionValue.equals(ENABLED)){\r", "-\t\t\t\tthis.checkVisibility = true;\r", "-\t\t\t} else if (optionValue.equals(DISABLED)){\r", "-\t\t\t\tthis.checkVisibility = false;\r", "+\t\tif (settings == null)\r", "+\t\t\treturn;\r", "+\r", "+\t\t// filter options which are related to the assist component\r", "+\t\tObject[] entries = settings.entrySet().toArray();\r", "+\t\tfor (int i = 0, max = entries.length; i < max; i++) {\r", "+\t\t\tMap.Entry entry = (Map.Entry) entries[i];\r", "+\t\t\tif (!(entry.getKey() instanceof String))\r", "+\t\t\t\tcontinue;\r", "+\t\t\tif (!(entry.getValue() instanceof String))\r", "+\t\t\t\tcontinue;\r", "+\t\t\tString optionID = (String) entry.getKey();\r", "+\t\t\tString optionValue = (String) entry.getValue();\r", "+\r", "+\t\t\tif (optionID.equals(OPTION_PerformVisibilityCheck)) {\r", "+\t\t\t\tif (optionValue.equals(ENABLED)) {\r", "+\t\t\t\t\tthis.checkVisibility = true;\r", "+\t\t\t\t} else\r", "+\t\t\t\t\tif (optionValue.equals(DISABLED)) {\r", "+\t\t\t\t\t\tthis.checkVisibility = false;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tcontinue;\r", "-\t\t\tcontinue;\r", "-\t\t} \r", "-\t\tif (optionID.equals(OPTION_EntireWordReplacement)) {\r", "-\t\t\tif (optionValue.equals(REPLACE)){\r", "-\t\t\t\tthis.replaceEntireWord = true;\r", "-\t\t\t} else if (optionValue.equals(DO_NOT_REPLACE)){\r", "-\t\t\t\tthis.replaceEntireWord = false;\r", "-\t\t\t}\r", "-\t\t\tcontinue;\r", "-}\r"]}], "num": 72528}