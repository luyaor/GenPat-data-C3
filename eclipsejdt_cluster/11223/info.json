{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8de8cbc536b5e498f7201f1a288c7aa9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e18fe7a80bf6b96828c36823e82767a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tthis.ast = workingCopy.makeConsistent(this.createAST, this.progressMonitor);", "+\t\t\t\tthis.ast = workingCopy.makeConsistent(this.createAST, this.astLevel, this.progressMonitor);", "-\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(unit, contents, options, this.progressMonitor);", "+\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e74b130f0cac5487b57666bc19def3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ec599e4c58cf9dcf3bb165b099eef06d3812ab2b", "commitAfterChange": "a550851d48c467f82a31f39506f0608e901f2c23", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\tpublic Object set(int index, Object element)", "signatureAfterChange": " \t\tpublic Object set(int index, Object element)", "diff": ["+\t\t\tASTNode.this.ast.preReplaceChildEvent(ASTNode.this, oldChild, newChild, this.propertyDescriptor);", "-\t\t\tASTNode.this.ast.preRemoveChildEvent(ASTNode.this, oldChild, this.propertyDescriptor);", "-\t\t\tASTNode.this.ast.postAddChildEvent(ASTNode.this, newChild, this.propertyDescriptor);", "+\t\t\tASTNode.this.ast.postReplaceChildEvent(ASTNode.this, oldChild, newChild, this.propertyDescriptor);"]}], "num": 11223}