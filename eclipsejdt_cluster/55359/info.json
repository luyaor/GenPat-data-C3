{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27c829de6d5875055d3240fd403d7864", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa852fde0405f6cdefebdd4ae7910f22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "5226fa1674065c97f28b67bbba8df2a3bf04953b", "commitAfterChange": "437a34a69de3f4e8fe773bec16b603b312cdd47e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  private boolean encloses(String scopePath, String path, int index)", "signatureAfterChange": "  private boolean encloses(String scopePath, String path, int index)", "diff": ["-\t\tif (path.startsWith(scopePath)) {", "+\t\t// TODO (frederic) apply similar change also if not looking at subfolders", "+\t\tint pathLength = path.length();", "+\t\tint scopeLength = scopePath.length();", "+\t\tif (pathLength < scopeLength) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (scopeLength == 0) {", "+\t\tif (pathLength == scopeLength) {", "+\t\t\treturn path.equals(scopePath);", "+\t\t}", "+\t\tif (path.startsWith(scopePath)) {", "+\t\t\treturn path.charAt(scopeLength) == '/';", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c1fe68d526b7c78076ba6f2e5203bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "44aa8100cf1acafb668d09083fbe900feba372d4", "commitAfterChange": "502ac8abc8910137c8c48c0b99f02c92a8a1a0bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "signatureAfterChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "diff": ["-\t\tif (externalPath.isAbsolute()) {\r", "+\t\tint canonicalLength = canonicalPath.segmentCount();\r", "+\t\tif (canonicalLength == 0) {\r", "+\t\t\t// the java.io.File canonicalization failed\r", "+\t\t\treturn externalPath;\r", "+\t\t} else if (externalPath.isAbsolute()) {\r", "-\t\t\tint canonicalLength = canonicalPath.segmentCount();\r", "-\t\t\tif (canonicalLength > externalLength) {\r", "+\t\t\tif (canonicalLength >= externalLength) {\r", "-\t\t\t\tresult = canonicalPath;\r", "+\t\t\t\treturn externalPath;\r"]}], "num": 55359}