{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9c761f9c9cba1d308a0dcc991f9c379", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807b4066a52bba1b5f33c2a80ac7a0dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "a744e65ca211ca7be2dd3830d1bd4009b273df27", "commitAfterChange": "c95e24ef2e4bfa2139fbca3e3b2078e40695cacf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void formatLocalDeclaration(VariableDeclarationExpression declarationExpression, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "signatureAfterChange": "  \tprivate void formatLocalDeclaration(VariableDeclarationExpression declarationExpression, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "diff": ["-\t\tList fragments = declarationExpression.fragments();", "+\t\tformatVariableDeclarationFragments(declarationExpression.fragments(), insertSpaceBeforeComma, insertSpaceAfterComma);", "+\t}", "-\t\t\t\t\t\t\tinitialization.accept(this);", "-\t\t\t\tAlignment2 assignmentAlignment = this.scribe.createAlignment(\"localDeclarationAssignmentAlignment\", this.preferences.alignment_for_assignment, Alignment.R_OUTERMOST, 1, this.scribe.scanner.currentPosition); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc18033624906bec33ecb02dd889b93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "a744e65ca211ca7be2dd3830d1bd4009b273df27", "commitAfterChange": "c95e24ef2e4bfa2139fbca3e3b2078e40695cacf", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 93, "signatureBeforeChange": "  \tpublic boolean visit(VariableDeclarationStatement node)", "signatureAfterChange": "  \tpublic boolean visit(VariableDeclarationStatement node)", "diff": ["-\t\tList fragments = node.fragments();", "-\t\tfinal int fragmentsLength = fragments.size();", "-\t\tif (fragmentsLength > 1) {", "-\t\t\t// multiple field declaration", "-\t\t\tAlignment2 multiFieldDeclarationsAlignment =this.scribe.createAlignment(", "-\t\t\t\t\t\"multiple_field\",//$NON-NLS-1$", "-\t\t\t\t\tthis.preferences.alignment_for_multiple_fields,", "-\t\t\t\t\tfragmentsLength - 1,", "-\t\t\t\t\tthis.scribe.scanner.currentPosition);", "-\t\t\tthis.scribe.enterAlignment(multiFieldDeclarationsAlignment);", "-\t\t", "-\t\t\tboolean ok = false;", "-\t\t\tdo {", "-\t\t\t\ttry {", "-\t\t\t\t\tfor (int i = 0; i < fragmentsLength; i++) {", "-\t\t\t\t\t\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) fragments.get(i);", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t * Field name", "-\t\t\t\t\t\t */", "-\t\t\t\t\t\tif (i == 0) {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, false);", "-\t\t\t\t\t\t}", "-\t\t\t\t", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t * Check for extra dimensions", "-\t\t\t\t\t\t */", "-\t\t\t\t\t\tfinal int extraDimensions = fragment.getExtraDimensions();", "-\t\t\t\t\t\tif (extraDimensions != 0) {", "-\t\t\t\t\t\t\t for (int index = 0; index < extraDimensions; index++) {", "-\t\t\t\t\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\t\t\t\t \tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t\t\t\t }", "-\t\t\t\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t * Field initialization", "-\t\t\t\t\t\t */", "-\t\t\t\t\t\tfinal Expression initialization = fragment.getInitializer();", "-\t\t\t\t\t\tif (initialization != null) {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "-\t\t\t\t\t\t\tif (this.preferences.insert_space_after_assignment_operator) {", "-\t\t\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tinitialization.accept(this);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (i != fragmentsLength - 1) {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_multiple_local_declarations);", "-\t\t\t\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t\t\t\t\tthis.scribe.alignFragment(multiFieldDeclarationsAlignment, i);", "-", "-\t\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_multiple_local_declarations) {", "-\t\t\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tok = true;", "-\t\t\t\t} catch (AlignmentException e) {", "-\t\t\t\t\tthis.scribe.redoAlignment(e);", "-\t\t\t\t}", "-\t\t\t} while (!ok);", "-\t\t\tthis.scribe.exitAlignment(multiFieldDeclarationsAlignment, true);\t\t\t\t", "-\t\t} else {", "-\t\t\t// single field declaration", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true);", "-\t\t\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) fragments.get(0);", "-\t\t\tfinal int extraDimensions = fragment.getExtraDimensions();", "-\t\t\tif (extraDimensions != 0) {", "-\t\t\t\tfor (int i = 0; i < extraDimensions; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tfinal Expression initialization = fragment.getInitializer();", "-\t\t\tif (initialization != null) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);", "-\t\t\t\tif (this.preferences.insert_space_after_assignment_operator) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tAlignment2 assignmentAlignment = this.scribe.createAlignment(\"localDeclarationAssignmentAlignment\", this.preferences.alignment_for_assignment, Alignment.R_OUTERMOST, 1, this.scribe.scanner.currentPosition); //$NON-NLS-1$", "-\t\t\t\tthis.scribe.enterAlignment(assignmentAlignment);", "-\t\t\t\tboolean ok = false;", "-\t\t\t\tdo {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tthis.scribe.alignFragment(assignmentAlignment, 0);", "-\t\t\t\t\t\tinitialization.accept(this);", "-\t\t\t\t\t\tok = true;", "-\t\t\t\t\t} catch(AlignmentException e){", "-\t\t\t\t\t\tthis.scribe.redoAlignment(e);", "-\t\t\t\t\t}", "-\t\t\t\t} while (!ok);\t\t", "-\t\t\t\tthis.scribe.exitAlignment(assignmentAlignment, true);\t\t\t", "-\t\t\t}", "-\t\t}", "+\t\tformatVariableDeclarationFragments(node.fragments(), this.preferences.insert_space_before_comma_in_multiple_local_declarations, this.preferences.insert_space_after_comma_in_multiple_local_declarations);"]}], "num": 64928}