{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "885ffe940d8f017bf4d3dacca3401167", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a82fd77b66926997fda8ded79b47afec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTrackingTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void testNamesWithMove1() throws Exception", "signatureAfterChange": " \t \tpublic void testNamesWithMove1() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(ast);", "+\t\tASTRewrite rewrite= new ASTRewrite(ast);", "-\t\tITrackedNodePosition position= rewrite.markAsTracked(typeC.getName());", "+\t\tITrackedNodePosition position= rewrite.track(typeC.getName());", "-\t\tposition= rewrite.markAsTracked(method.getName());", "+\t\tposition= rewrite.track(method.getName());", "-\t\tposition= rewrite.markAsTracked(prefixExpression.getOperand());", "+\t\tposition= rewrite.track(prefixExpression.getOperand());", "-\t\tposition= rewrite.markAsTracked(frag1.getName());", "+\t\tposition= rewrite.track(frag1.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e2299baf5bb305c6b7d61aa42b72b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTrackingTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void testNamesWithReplace() throws Exception", "signatureAfterChange": " \t \tpublic void testNamesWithReplace() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(ast);", "+\t\tASTRewrite rewrite= new ASTRewrite(ast);", "-\t\trewrite.markAsReplaced(typeC.getName(), newName, null);", "-\t\tITrackedNodePosition position= rewrite.markAsTracked(newName);", "+\t\trewrite.replace(typeC.getName(), newName, null);", "+\t\tITrackedNodePosition position= rewrite.track(newName);", "-\t\tposition= rewrite.markAsTracked(method.getName());", "+\t\tposition= rewrite.track(method.getName());", "-\t\tposition= rewrite.markAsTracked(prefixExpression.getOperand());", "+\t\tposition= rewrite.track(prefixExpression.getOperand());", "-\t\tposition= rewrite.markAsTracked(frag1.getName());", "+\t\tposition= rewrite.track(frag1.getName());"]}], "num": 61052}