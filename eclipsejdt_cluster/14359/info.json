{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ae70be967eb8ca970f7069167661429", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0294532dac6e8d2dfc66c72f32848e4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer print(int tab, StringBuffer output)", "diff": ["+\tpublic StringBuffer print(int tab, StringBuffer output) {", "+", "+\t\tprintIndent(tab, output);", "+\t\tprintModifiers(modifiers, output);", "+\t\tprintReturnType(0, output).append(selector).append('(');", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].print(0, output);", "+\t\t\t}", "+\t\t}", "+\t\toutput.append(')');", "+\t\tif (thrownExceptions != null) {", "+\t\t\toutput.append(\" throws \"); //$NON-NLS-1$", "+\t\t\tfor (int i = 0; i < thrownExceptions.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\tthrownExceptions[i].print(0, output);", "+\t\t\t}", "+\t\t}", "+\t\tprintBody(tab + 1, output);", "+\t\treturn output;", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString s = tabString(tab);", "-\t\tif (modifiers != AccDefault) {", "-\t\t\ts += modifiersString(modifiers);", "-\t\t}", "-", "-\t\ts += returnTypeToString(0);", "-\t\ts += new String(selector) + \"(\"; //$NON-NLS-1$", "-\t\tif (arguments != null) {", "-\t\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\t\ts += arguments[i].toString(0);", "-\t\t\t\tif (i != (arguments.length - 1))", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "-\t\t\t};", "-\t\t};", "-\t\ts += \")\"; //$NON-NLS-1$", "-\t\tif (thrownExceptions != null) {", "-\t\t\ts += \" throws \"; //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < thrownExceptions.length; i++) {", "-\t\t\t\ts += thrownExceptions[i].toString(0);", "-\t\t\t\tif (i != (thrownExceptions.length - 1))", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "-\t\t\t};", "-\t\t};", "-", "-\t\ts += toStringStatements(tab + 1);", "-\t\treturn s;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "110786894a567bfd482aadb22cc6b31e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "+", "+\t\tprintIndent(tab, output).append(\"for (\"); //$NON-NLS-1$", "+\t\t//inits", "+\t\tif (initializations != null) {", "+\t\t\tfor (int i = 0; i < initializations.length; i++) {", "+\t\t\t\t//nice only with expressions", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\tinitializations[i].print(0, output);", "+\t\t\t}", "+\t\t}", "+\t\toutput.append(\"; \"); //$NON-NLS-1$", "+\t\t//cond", "+\t\tif (condition != null) condition.printExpression(0, output);", "+\t\toutput.append(\"; \"); //$NON-NLS-1$", "+\t\t//updates", "+\t\tif (increments != null) {", "+\t\t\tfor (int i = 0; i < increments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\tincrements[i].print(0, output);", "+\t\t\t}", "+\t\t}; ", "+\t\toutput.append(\") \"); //$NON-NLS-1$", "+\t\t//block", "+\t\tif (action == null)", "+\t\t\toutput.append(';');", "+\t\telse {", "+\t\t\toutput.append('\\n');", "+\t\t\taction.printStatement(tab + 1, output); //$NON-NLS-1$", "+\t\t}", "+\t\treturn output.append(';');", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString s = tabString(tab) + \"for (\"; //$NON-NLS-1$", "-\t\tif (!neededScope)", "-\t\t\ts = s + \" //--NO upperscope scope needed\\n\" + tabString(tab) + \"     \";\t//$NON-NLS-2$ //$NON-NLS-1$", "-\t\t//inits", "-\t\tif (initializations != null) {", "-\t\t\tfor (int i = 0; i < initializations.length; i++) {", "-\t\t\t\t//nice only with expressions", "-\t\t\t\ts = s + initializations[i].toString(0);", "-\t\t\t\tif (i != (initializations.length - 1))", "-\t\t\t\t\ts = s + \" , \"; //$NON-NLS-1$", "-\t\t\t}", "-\t\t}; ", "-\t\ts = s + \"; \"; //$NON-NLS-1$", "-\t\t//cond", "-\t\tif (condition != null)", "-\t\t\ts = s + condition.toStringExpression();", "-\t\ts = s + \"; \"; //$NON-NLS-1$", "-\t\t//updates", "-\t\tif (increments != null) {", "-\t\t\tfor (int i = 0; i < increments.length; i++) {", "-\t\t\t\t//nice only with expressions", "-\t\t\t\ts = s + increments[i].toString(0);", "-\t\t\t\tif (i != (increments.length - 1))", "-\t\t\t\t\ts = s + \" , \"; //$NON-NLS-1$", "-\t\t\t}", "-\t\t}; ", "-\t\ts = s + \") \"; //$NON-NLS-1$", "-\t\t//block", "-\t\tif (action == null)", "-\t\t\ts = s + \"{}\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\ts = s + \"\\n\" + action.toString(tab + 1); //$NON-NLS-1$", "-\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce76c11d4a8f2b0eb20d8e4c8cc3666", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnMethodName.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": " \t \tpublic StringBuffer print(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer print(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output);", "+\t\toutput.append(\"<CompletionOnMethodName:\"); //$NON-NLS-1$", "+\t\tprintModifiers(this.modifiers, output);", "+\t\tprintReturnType(0, output);", "+\t\toutput.append(selector).append('(');", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].print(0, output);", "+\t\t\t}", "+\t\t}", "+\t\toutput.append(')');", "+\t\tif (thrownExceptions != null) {", "+\t\t\toutput.append(\" throws \"); //$NON-NLS-1$", "+\t\t\tfor (int i = 0; i < thrownExceptions.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\tthrownExceptions[i].print(0, output);", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append('>');", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString s = tabString(tab);", "-\t\ts += \"<CompletionOnMethodName:\"; //$NON-NLS-1$", "-", "-\t\tif (modifiers != AccDefault) {", "-\t\t\ts += modifiersString(modifiers);", "-\t\t}", "-", "-\t\ts += returnTypeToString(0);", "-\t\ts += new String(selector) + \"(\"; //$NON-NLS-1$", "-\t\tif (arguments != null) {", "-\t\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\t\ts += arguments[i].toString(0);", "-\t\t\t\tif (i != (arguments.length - 1))", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "-\t\t\t};", "-\t\t};", "-\t\ts += \")\"; //$NON-NLS-1$", "-\t\tif (thrownExceptions != null) {", "-\t\t\ts += \" throws \"; //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < thrownExceptions.length; i++) {", "-\t\t\t\ts += thrownExceptions[i].toString(0);", "-\t\t\t\tif (i != (thrownExceptions.length - 1))", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "-\t\t\t};", "-\t\t};", "-", "-\t\ts += \">\"; //$NON-NLS-1$", "-\t\treturn s;"]}], "num": 14359}