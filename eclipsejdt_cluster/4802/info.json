{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ee7817ea1f46b7b23a916bacc9b37b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a352056155fc5ca608fb2fb7a81deb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "96c7afd29f6893c16cf00a3ac29701c1a81f919d", "commitAfterChange": "dd45817f66a0a68c9747e1c73f77cc12766ad25c", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate boolean isValidEdit(OptimizedReplaceEdit edit)", "signatureAfterChange": "  \tprivate boolean isValidEdit(OptimizedReplaceEdit edit)", "diff": ["-\t\t\t}", "-", "-\t\t\tIRegion starting = getAdaptedRegionAt(editOffset + editLength);", "-\t\t\tif (starting != null) {", "-\t\t\t\tint i = editOffset;", "-\t\t\t\tfor (int max = editOffset + editLength; i < max; i++) {", "-\t\t\t\t\tint replacementStringIndex = i - editOffset;", "-\t\t\t\t\tif (replacementStringIndex >= editReplacementLength || this.scanner.source[i] != edit.replacement.charAt(replacementStringIndex)) {", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (i - editOffset != editReplacementLength && i != editOffset + editLength - 1) {", "-\t\t\t\t\tedit.offset = starting.getOffset();", "-\t\t\t\t\tedit.length = 0;", "-\t\t\t\t\tedit.replacement = edit.replacement.substring(i - editOffset);", "-\t\t\t\t\treturn true;", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c47ae5389c426d60f0c624d754e1b12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void assertCamelCase(String pattern, String name, boolean match)", "signatureAfterChange": " void assertCamelCase(String pattern, String name, boolean match)", "diff": ["-\tboolean camelCase = CharOperation.camelCaseMatch(pattern==null?null:pattern.toCharArray(), name==null?null:name.toCharArray());", "+\tassertCamelCase(pattern, name, true /*prefix match*/, match);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957b7bb482cca592d49fed8d3d0978ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "0a52fc66fb4db2fd9981d577d974e91228093601", "commitAfterChange": "76d395ddd90431ef7cb4486078cb51e978a5ad63", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "diff": ["-\t\t\t\t\t\t\ttextLength = getTextLength(block, text);", "+\t\t\t\t\t\t\ttextLength = getTextLength(block, text, false);", "-\t\t\t\t\t\tif (newLines > 0) {", "-\t\t\t\t\t\t\tint col = this.column;", "-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\t\t\t\tint textEnd = text.separatorsPtr == -1 ? text.sourceEnd : (int) (text.separators[0] >>> 32);", "-\t\t\t\t\t\t\tprintJavadocTextLine(buffer, text.sourceStart, textEnd, block, true, true, true);", "-\t\t\t\t\t\t\taddReplaceEdit(text.sourceStart, textEnd, buffer.toString());", "-\t\t\t\t\t\t\ttextLength -= this.column - col;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tthis.column += textLength;", "+\t\t\t\t\t\tint additionalLength = printJavadocHtmlImmutableTag(text, block, newLines > 0);", "+\t\t\t\t\t\tthis.column += textLength - additionalLength;"]}], "num": 4802}