{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39afb2598965f0eb02cfd425053cf316", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d8f8e417797e80d6f41bf185d549cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "commitAfterChange": "7cfd56aa5aa705aacf0169b60235be81421d4a6e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate boolean examineHidesMethod()", "signatureAfterChange": " \tprivate boolean examineHidesMethod()", "diff": ["+\t\t// The should-hide cases", "+\t\tif (!_elementUtils.hides(methodStaticOnH, methodStaticOnG)) {", "+\t\t\treportError(\"H.staticMethod() should hide G.staticMethod()\");", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "-\t\tif (_elementUtils.hides(methodStaticOnF, methodStaticOnG)) {", "-\t\t\treportError(\"F.staticMethod() should not hide G.staticMethod()\");", "+\t\tif (_elementUtils.hides(methodStaticOnG, methodStaticOnF)) {", "+\t\t\treportError(\"G.staticMethod() should not hide (private) F.staticMethod()\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (_elementUtils.hides(methodStaticOnG, methodStaticOnH)) {", "+\t\t\treportError(\"G.staticMethod() should not hide H.staticMethod()\");", "-\t\tif (_elementUtils.hides(methodStaticOnJ, methodStaticOnF)) {", "-\t\t\treportError(\"J.staticMethod() should not hide F.staticMethod()\");", "+\t\tif (_elementUtils.hides(methodStaticOnJ, methodStaticOnG)) {", "+\t\t\treportError(\"J.staticMethod() should not hide G.staticMethod()\");", "-\t\t\treturn false;", "-\t\t}", "-\t\t", "-\t\t// The should-hide cases", "-\t\tif (!_elementUtils.hides(methodStaticOnG, methodStaticOnF)) {", "-\t\t\treportError(\"G.staticMethod() should hide F.staticMethod()\");", "-\t\t\treturn false;", "-\t\t}", "-\t\tif (!_elementUtils.hides(methodStaticOnH, methodStaticOnF)) {", "-\t\t\treportError(\"H.staticMethod() should hide F.staticMethod()\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3657220aca5f8b9164041801c6dbe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "diff": ["-public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding localTargetMethod) {", "-\tif (!isClass()) return null; // only classes get bridge methods", "-\tif (inheritedMethodToBridge.returnType.erasure() == localTargetMethod.returnType.erasure()", "-\t\t&& inheritedMethodToBridge.areParameterErasuresEqual(localTargetMethod)) {", "+public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod) {", "+\tif (isInterface()) return null; // only classes & enums get bridge methods", "+\t// targetMethod may be inherited", "+\tif (inheritedMethodToBridge.returnType.erasure() == targetMethod.returnType.erasure()", "+\t\t&& inheritedMethodToBridge.areParameterErasuresEqual(targetMethod)) {", "-\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, targetMethod, this);", "-\t\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, localTargetMethod);", "+\t\t\taccessMethod = new SyntheticMethodBinding(inheritedMethodToBridge, targetMethod, this);"]}], "num": 632}