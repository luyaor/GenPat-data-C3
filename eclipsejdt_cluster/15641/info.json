{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5f420bddf005c39021b14210eb3191b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9075986a4bf15e7340952304bd6b3c54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c0a0c19db3e1c410023eabce30626d520ce59204", "commitAfterChange": "b522a66d284b0239a056370560676a12fc9ec458", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \tprotected static Element getEntryAsXMLElement(Document document, IClasspathEntry entry, IPath prefixPath) throws JavaModelException", "signatureAfterChange": "\r \tprotected static Element getEntryAsXMLElement(\r \t\tDocument document,\r \t\tIClasspathEntry entry,\r \t\tIPath prefixPath)\r \t\tthrows JavaModelException", "diff": ["-\tprotected static Element getEntryAsXMLElement(Document document, IClasspathEntry entry, IPath prefixPath) throws JavaModelException {\r", "-\t\t\r", "-\t\tElement element= document.createElement(\"classpathentry\"); //$NON-NLS-1$\r", "-\t\telement.setAttribute(\"kind\", kindToString(entry.getEntryKind())); //$NON-NLS-1$\r", "-\t\tIPath path= entry.getPath();\r", "-\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE){\r", "+\tprotected static Element getEntryAsXMLElement(\r", "+\t\tDocument document,\r", "+\t\tIClasspathEntry entry,\r", "+\t\tIPath prefixPath)\r", "+\t\tthrows JavaModelException {\r", "+\r", "+\t\tElement element = document.createElement(\"classpathentry\"); //$NON-NLS-1$\r", "+\t\telement.setAttribute(\"kind\", kindToString(entry.getEntryKind()));\t//$NON-NLS-1$\r", "+\t\tIPath path = entry.getPath();\r", "+\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_VARIABLE) {\r", "-\t\t\t\t\t\tpath= path.removeFirstSegments(1);\r", "-\t\t\t\t\t\tpath= path.makeRelative();\r", "+\t\t\t\t\t\tpath = path.removeFirstSegments(1);\r", "+\t\t\t\t\t\tpath = path.makeRelative();\r", "-\t\t\t\t\t\tpath= path.makeAbsolute();\r", "+\t\t\t\t\t\tpath = path.makeAbsolute();\r", "-\t\tif (entry.getSourceAttachmentPath() != null){\r", "+\t\tif (entry.getSourceAttachmentPath() != null) {\r", "-\t\tif (entry.getSourceAttachmentRootPath() != null){\r", "-\t\t\telement.setAttribute(\"rootpath\", entry.getSourceAttachmentRootPath().toString()); //$NON-NLS-1$\r", "+\t\tif (entry.getSourceAttachmentRootPath() != null) {\r", "+\t\t\telement.setAttribute(\r", "+\t\t\t\t\"rootpath\", //$NON-NLS-1$\r", "+\t\t\t\tentry.getSourceAttachmentRootPath().toString());\r", "+\t\t}\r", "+\t\tif (entry.isExported()) {\r", "+\t\t\telement.setAttribute(\"exported\", \"true\"); //$NON-NLS-1$ //$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f92c97d273dd0c5d09ee102236b953", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "6d8d09b9885a9c8ffeca138d74d5612474463476", "commitAfterChange": "882b15cdf57237ee1b4c7b7c42c6578750f8d6cc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Element elementEncode( \t\tDocument document, \t\tIPath projectPath)", "signatureAfterChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "diff": ["-\t *///TODO (olivier) should remove", "-\tpublic Element elementEncode(", "-\t\tDocument document,", "-\t\tIPath projectPath) {", "-", "-\t\tElement element = document.createElement(\"classpathentry\"); //$NON-NLS-1$", "-\t\telement.setAttribute(\"kind\", kindToString(this.entryKind));\t//$NON-NLS-1$", "-\t\tIPath xmlPath = this.path;", "-\t\tif (this.entryKind != IClasspathEntry.CPE_VARIABLE && this.entryKind != IClasspathEntry.CPE_CONTAINER) {", "-\t\t\t// translate to project relative from absolute (unless a device path)", "-\t\t\tif (xmlPath.isAbsolute()) {", "-\t\t\t\tif (projectPath != null && projectPath.isPrefixOf(xmlPath)) {", "-\t\t\t\t\tif (xmlPath.segment(0).equals(projectPath.segment(0))) {", "-\t\t\t\t\t\txmlPath = xmlPath.removeFirstSegments(1);", "-\t\t\t\t\t\txmlPath = xmlPath.makeRelative();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\txmlPath = xmlPath.makeAbsolute();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\telement.setAttribute(\"path\", xmlPath.toString()); //$NON-NLS-1$", "-\t\t", "-\t\tif (this.sourceAttachmentPath != null) {", "-\t\t\txmlPath = this.sourceAttachmentPath;", "-\t\t\t// translate to project relative from absolute ", "-\t\t\tif (this.entryKind != IClasspathEntry.CPE_VARIABLE && projectPath != null && projectPath.isPrefixOf(xmlPath)) {", "-\t\t\t\tif (xmlPath.segment(0).equals(projectPath.segment(0))) {", "-\t\t\t\t\txmlPath = xmlPath.removeFirstSegments(1);", "-\t\t\t\t\txmlPath = xmlPath.makeRelative();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telement.setAttribute(\"sourcepath\", xmlPath.toString()); //$NON-NLS-1$", "-\t\t}", "-\t\tif (this.sourceAttachmentRootPath != null) {", "-\t\t\telement.setAttribute(\"rootpath\", this.sourceAttachmentRootPath.toString()); //$NON-NLS-1$", "-\t\t}", "-\t\tif (this.isExported) {", "-\t\t\telement.setAttribute(\"exported\", \"true\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t}", "-\t\t", "-\t\tif (this.exclusionPatterns.length > 0) {", "-\t\t\tStringBuffer excludeRule = new StringBuffer(10);", "-\t\t\tfor (int i = 0, max = this.exclusionPatterns.length; i < max; i++){", "-\t\t\t\tif (i > 0) excludeRule.append('|');", "-\t\t\t\texcludeRule.append(this.exclusionPatterns[i]);", "-\t\t\t}", "-\t\t\telement.setAttribute(\"excluding\", excludeRule.toString());  //$NON-NLS-1$", "-\t\t}", "-\t\t", "-\t\tif (this.specificOutputLocation != null) {", "-\t\t\tIPath outputLocation = this.specificOutputLocation.removeFirstSegments(1);", "-\t\t\toutputLocation = outputLocation.makeRelative();", "-\t\t\telement.setAttribute(\"output\", outputLocation.toString()); //$NON-NLS-1$ ", "-\t\t}", "-\t\treturn element;"]}], "num": 15641}