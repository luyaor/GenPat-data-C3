{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ddada5ba8dec682374a696f65037725", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f6ff92ecd4894a6175eef9ce32db6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \"                       and '']''.\\n\" + ", "+        \"                       and '']''. Each directory can further specify a specific\\n\" + ", "+        \"                       destination directory using a ''-d'' option between ''[''\\n\" +", "+        \"                       and '']''; this overrides the general ''-d'' option.\\n\" +", "-        \"                       destination directory is specified.\\n\" + ", "+        \"                       general ''-d'' option is specified. zip/jar files cannot\\n\" +", "+        \"                       override the general ''-d'' option\\n\" + ", "-        \"                       created)\\n\" + ", "-        \"    -d none            generate no .class files\\n\" + ", "+        \"                       created); this option can be overridden per source\\n\" + ", "+\t\t\"                       directory\\n\" +", "+\t\t\"    -d none            generate no .class files\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9095c51187ae7421caedb7dbddd0d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void testArraySingle03() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedArrayTypeSingleArgument03() throws CoreException", "diff": ["-\tpublic void testArraySingle03() throws CoreException {", "-\t\tICompilationUnit unit = getCompilationUnit(\"JavaSearch15/src/g6/t/ref/Single.java\");", "-\t\t// selected text is: \"List<Exception>\". Difference with previous test is that this is an array in the code", "-\t\tSourceType type = selectSourceType(unit,  \"s3\"); //$NON-NLS-1$", "+\tpublic void testParameterizedArrayTypeSingleArgument03() throws CoreException {", "+\t\tICompilationUnit unit = getCompilationUnit(\"JavaSearch15/src/g6/t/ref/QualifSingle.java\");", "+\t\tSourceType type = selectSourceType(unit,  \"g6.t.def.List<Exception>\", 2 /* 2nd occurence*/); //$NON-NLS-1$", "+\t\t\t\"src/g6/t/ref/QualifSingle.java g6.t.ref.QualifSingle.exceptionListArrayList [g6.t.def.List<g6.t.def.List<Exception>[]>] ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/Single.java g6.t.ref.Single.list [List] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Single.java [g6.t.def.List] COMPATIBLE_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Single.java g6.t.ref.Single.list [List] COMPATIBLE_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Single.java g6.t.ref.Single.exceptionListArrayList [List<List<Exception>[]>] ERASURE_MATCH\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ecfcbe9ffc964cee22b70221bb60c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 84, "signatureBeforeChange": "     public void testBug378024b() throws Exception", "signatureAfterChange": "     public void testBug378024b() throws Exception", "diff": ["-                \"import java.awt.*;// test1\\n\" +", "+                \"// test1\\n\" +", "+                \"import java.awt.*;\\n\" +", "-                \"import java.io.*;// test2\\n\" +", "+                \"// test2\\n\" +", "+                \"import java.io.*;\\n\" +", "-                \"import java.util.*;// test3\\n\" +", "+                \"// test3\\n\" +", "+                \"import java.util.*;\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e648e40102a21956559418e52d40befa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "commitAfterChange": "1b7cc740dd9297bd0f4bafe7fea18d712058ba6e", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void test0312_if_else()", "signatureAfterChange": " public void test0312_if_else()", "diff": ["-\t\t\"2. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" +", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" +", "+\t\t\"\tif (o == null) { /* */ }\\n\" +", "+\t\t\"\t               ^^^^^^^^^\\n\" +", "+\t\t\"Dead code\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" +", "+\t\t\"\tif (o != null) { /* */ }\\n\" +", "+\t\t\"\t    ^\\n\" +", "+\t\t\"Redundant null check: The variable o cannot be null at this location\\n\" +"]}], "num": 4242}