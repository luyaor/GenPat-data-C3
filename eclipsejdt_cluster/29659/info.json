{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e35b0b2564d49ff33d4b50a0930eee64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b0244adb7502a3214966196496babca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "763e42ee77f843bf78751f85365c5a74eb47696c", "commitAfterChange": "525a282931680472e1c4e0ea3a9d163e6052ec36", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\tif (entry.getContentKind() == IPackageFragmentRoot.K_BINARY) {\r", "-\t\t\tString ext= path.getFileExtension();\r", "+\t\tString ext= path.getFileExtension();\r", "+\t\tif (ext != null && entry.getContentKind() == IPackageFragmentRoot.K_BINARY) {\r", "-\t\t\tif (ext != null && (ext.equalsIgnoreCase(\"zip\") || ext.equalsIgnoreCase(\"jar\"))) { //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\tif (ext.equalsIgnoreCase(\"zip\") || ext.equalsIgnoreCase(\"jar\")) { //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t}\r", "+\t\t} \r", "-\t\t\tif (path.segmentCount() != 1)\r", "-\t\t\t\treturn new IPackageFragmentRoot[] {}; // invalid path for a project\r", "-\t\t\tString project= path.segment(0);\r", "-\t\t\tIJavaProject javaProject= getJavaModel().getJavaProject(project);\r", "-\t\t\tVector sourceRoots= new Vector();\r", "-\t\t\tIPackageFragmentRoot[] roots= null;\r", "-\t\t\ttry {\r", "-\t\t\t\troots= javaProject.getPackageFragmentRoots();\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\treturn new IPackageFragmentRoot[]{};\r", "-\t\t\t}\r", "-\t\t\tfor (int i= 0; i < roots.length; i++) {\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tif (roots[i].getKind() == IPackageFragmentRoot.K_SOURCE) {\r", "-\t\t\t\t\t\tsourceRoots.addElement(roots[i]);\r", "+\t\t\tif (path.segmentCount() != 1) {\r", "+\t\t\t\tif (entry.getContentKind() == IPackageFragmentRoot.K_BINARY) {\r", "+\t\t\t\t\t// binary folder in another project\r", "+\t\t\t\t\tIResource resource= workspaceRoot.getFolder(path);\r", "+\t\t\t\t\tif (resource == null) {\r", "+\t\t\t\t\t\t return new IPackageFragmentRoot[]{};\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tIPackageFragmentRoot root= new PackageFragmentRoot(resource, this);\r", "+\t\t\t\t\t\treturn new IPackageFragmentRoot[] {root};\r", "-\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t\t// do nothing if the root does not exist\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\t// invalid path for a project\r", "+\t\t\t\t\treturn new IPackageFragmentRoot[] {}; \r", "-\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tString project= path.segment(0);\r", "+\t\t\t\tIJavaProject javaProject= getJavaModel().getJavaProject(project);\r", "+\t\t\t\tVector sourceRoots= new Vector();\r", "+\t\t\t\tIPackageFragmentRoot[] roots= null;\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\troots= javaProject.getPackageFragmentRoots();\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\treturn new IPackageFragmentRoot[]{};\r", "+\t\t\t\t}\r", "+\t\t\t\tfor (int i= 0; i < roots.length; i++) {\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tif (roots[i].getKind() == IPackageFragmentRoot.K_SOURCE) {\r", "+\t\t\t\t\t\t\tsourceRoots.addElement(roots[i]);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t\t// do nothing if the root does not exist\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "-\t\t\tsourceRoots.copyInto(copy);\r", "-\t\t\treturn copy;\r", "+\t\t\t\tsourceRoots.copyInto(copy);\r", "+\t\t\t\treturn copy;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b17a338a92e8208264979727e60cf36e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "commitAfterChange": "846faf5699bcd826a09451dfb06e7bb91fe5a472", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected String generateSyntaxIncorrectAST()", "signatureAfterChange": " protected String generateSyntaxIncorrectAST()", "diff": ["-\tbuff.append(Util.LINE_SEPARATOR + \" public class A {\" + Util.LINE_SEPARATOR); //$NON-NLS-1$", "+\tIType type = getType();", "+\tString lineSeparator = org.eclipse.jdt.internal.core.util.Util.getLineSeparator(this.source, type == null ? null : type.getJavaProject());", "+\tbuff.append(lineSeparator + \" public class A {\" + lineSeparator); //$NON-NLS-1$", "-\tbuff.append(Util.LINE_SEPARATOR).append('}');", "+\tbuff.append(lineSeparator).append('}');"]}], "num": 29659}