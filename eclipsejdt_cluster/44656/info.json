{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "617a0799e12c1f8aec39e9e18fc38f18", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8a7f28f0a86dad3be0918c9817cd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "155f96ad35dd069f34736b72fe6caa90731d8291", "commitAfterChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 96, "signatureBeforeChange": "  \tIClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "signatureAfterChange": "  \tIClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "diff": ["+", "-\t\t\tif (CP_RESOLVE_VERBOSE){", "-\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\"CPContainer INIT - triggering initialization\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\"\tinitializer: \" + initializer + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\"\tinvocation stack trace:\"); //$NON-NLS-1$", "-\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "-\t\t\t}", "+\t\t\tif (CP_RESOLVE_VERBOSE)", "+\t\t\t\tverbose_triggering_container_initialization(project, containerPath, initializer);", "+\t\t\tif (CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\tverbose_triggering_container_initialization_invocation_trace();", "-\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE)", "-\t\t\t\t}", "-\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "+\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE)", "-\t\t\t\t}", "-\t\t\t\t\tif (CP_RESOLVE_VERBOSE) {", "-\t\t\t\t\t\tif (container == CONTAINER_INITIALIZATION_IN_PROGRESS) {", "-\t\t\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\t\t\"CPContainer INIT - FAILED (initializer did not initialize container)\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tinitializer: \" + initializer); //$NON-NLS-1$", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\t\t\"CPContainer INIT - FAILED (see exception above)\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\"\tinitializer: \" + initializer); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\tif (CP_RESOLVE_VERBOSE) ", "+\t\t\t\t\t\tverbose_container_initialization_failed(project, containerPath, container, initializer);", "-\t\t\tif (CP_RESOLVE_VERBOSE){", "-\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\tbuffer.append(\"CPContainer INIT - after resolution\\n\"); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(\"\tproject: \" + project.getElementName() + '\\n'); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(\"\tcontainer path: \" + containerPath + '\\n'); //$NON-NLS-1$", "-\t\t\t\tif (container != null){", "-\t\t\t\t\tbuffer.append(\"\tcontainer: \"+container.getDescription()+\" {\\n\"); //$NON-NLS-2$//$NON-NLS-1$", "-\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "-\t\t\t\t\tif (entries != null){", "-\t\t\t\t\t\tfor (int i = 0; i < entries.length; i++){", "-\t\t\t\t\t\t\tbuffer.append(\"\t\t\" + entries[i] + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tbuffer.append(\"\t}\");//$NON-NLS-1$", "-\t\t\t\t} else {", "-\t\t\t\t\tbuffer.append(\"\tcontainer: {unbound}\");//$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tUtil.verbose(buffer.toString());", "-\t\t\t}", "+\t\t\tif (CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\tverbose_container_value_after_initialization(project, containerPath, container);", "-\t\t\tif (CP_RESOLVE_VERBOSE){", "-\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\"CPContainer INIT - no initializer found\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t}", "+\t\t\tif (CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\tverbose_no_container_initializer_found(project, containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494a4e2f1976711ebd6e0075611aed7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "b5c8750a0ee496ea162f56c86aa0c17734837d78", "commitAfterChange": "4a527830b1c1be247e88d2c75fe787e73bc4e15a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException", "diff": ["-\tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException {", "+\tpublic static IClasspathContainer getClasspathContainer(IPath containerPath, IJavaProject project) throws JavaModelException {", "-\t\tIClasspathContainer container = JavaModelManager.getJavaModelManager().containerGet(project, containerPath);", "-\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "-", "-\t\tif (container == null){", "-\t\t\tfinal ClasspathContainerInitializer initializer = JavaCore.getClasspathContainerInitializer(containerPath.segment(0));", "-\t\t\tif (initializer != null){", "-\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "-\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\"CPContainer INIT - triggering initialization\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\"\tinitializer: \" + initializer + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\"\tinvocation stack trace:\"); //$NON-NLS-1$", "-\t\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(project, containerPath, JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS); // avoid initialization cycles", "-\t\t\t\tboolean ok = false;", "-\t\t\t\ttry {", "-\t\t\t\t\t// let OperationCanceledException go through", "-\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59363)", "-\t\t\t\t\tinitializer.initialize(containerPath, project);", "-\t\t\t\t\t", "-\t\t\t\t\t// retrieve value (if initialization was successful)", "-\t\t\t\t\tcontainer = JavaModelManager.getJavaModelManager().containerGet(project, containerPath);", "-\t\t\t\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) return null; // break cycle", "-\t\t\t\t\tok = true;", "-\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\tif (e instanceof JavaModelException) {", "-\t\t\t\t\t\tthrow (JavaModelException) e;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthrow new JavaModelException(e);", "-\t\t\t\t\t}", "-\t\t\t\t} catch (RuntimeException e) {", "-\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "-\t\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\t}", "-\t\t\t\t\tthrow e;", "-\t\t\t\t} catch (Error e) {", "-\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "-\t\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\t}", "-\t\t\t\t\tthrow e;", "-\t\t\t\t} finally {", "-\t\t\t\t\tif (!ok) {", "-\t\t\t\t\t\tJavaModelManager.getJavaModelManager().containerPut(project, containerPath, null); // flush cache", "-\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "-\t\t\t\t\t\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) {", "-\t\t\t\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\t\t\t\"CPContainer INIT - FAILED (initializer did not initialize container)\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\"\tinitializer: \" + initializer); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\t\t\t\"CPContainer INIT - FAILED (see exception above)\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\"\tcontainer path: \" + containerPath + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\"\tinitializer: \" + initializer); //$NON-NLS-1$", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "-\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\t\tbuffer.append(\"CPContainer INIT - after resolution\\n\"); //$NON-NLS-1$", "-\t\t\t\t\tbuffer.append(\"\tproject: \" + project.getElementName() + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\tbuffer.append(\"\tcontainer path: \" + containerPath + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\tif (container != null){", "-\t\t\t\t\t\tbuffer.append(\"\tcontainer: \"+container.getDescription()+\" {\\n\"); //$NON-NLS-2$//$NON-NLS-1$", "-\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "-\t\t\t\t\t\tif (entries != null){", "-\t\t\t\t\t\t\tfor (int i = 0; i < entries.length; i++){", "-\t\t\t\t\t\t\t\tbuffer.append(\"\t\t\" + entries[i] + '\\n'); //$NON-NLS-1$", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbuffer.append(\"\t}\");//$NON-NLS-1$", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tbuffer.append(\"\tcontainer: {unbound}\");//$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tUtil.verbose(buffer.toString());", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "-\t\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\t\"CPContainer INIT - no initializer found\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\t\"\tproject: \" + project.getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\t\"\tcontainer path: \" + containerPath); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tIClasspathContainer container = JavaModelManager.getJavaModelManager().getClasspathContainer(containerPath, project);", "+\t\tif (container == JavaModelManager.CONTAINER_INITIALIZATION_IN_PROGRESS) return null;"]}], "num": 44656}