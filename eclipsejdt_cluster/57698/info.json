{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6665c969f61204dc0864ad7c64975db7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd6961671684d361f599f2c861eb7de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 144, "signatureBeforeChange": " public void testTypeReferenceNotInClasspath() throws CoreException", "signatureAfterChange": " public void testTypeReferenceNotInClasspath() throws CoreException", "diff": ["-\t\t\"src/p/A.java p.A.x [X]\\n\" +", "-\t\t\"src/p/A.java p.A(X) [X]\\n\" +", "-\t\t\"src/p/A.java p.A.foo(int, String, X) -> void [X]\\n\" +", "-\t\t\"src/p/X.java p.X() [X]\\n\" +", "-\t\t\"src/p/X.java p.X.foo(int, String, X) -> void [X]\\n\" +", "-\t\t\"src/p/Y.java p.Y [X]\\n\" +", "-\t\t\"src/p/Z.java p.Z.foo(int, String, X) -> void [X]\",", "+\t\t\"src/p/A.java p.A.x [X]\\n\" + ", "+\t\t\"src/p/A.java p.A(X) [X]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/X.java p.X() [X]\\n\" + ", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/Y.java p.Y [X]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [X]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f28604bec2936d678d4e666430cddb6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 116, "signatureBeforeChange": " public void testSimpleTypeReference() throws CoreException", "signatureAfterChange": " public void testSimpleTypeReference() throws CoreException", "diff": ["-\t\t\"src/p/A.java p.A.x [X]\\n\" +", "-\t\t\"src/p/A.java p.A(X) [X]\\n\" +", "-\t\t\"src/p/A.java p.A.foo(int, String, X) -> void [X]\\n\" +", "-\t\t\"src/p/X.java p.X() [X]\\n\" +", "-\t\t\"src/p/X.java p.X.foo(int, String, X) -> void [X]\\n\" +", "-\t\t\"src/p/Y.java p.Y [X]\\n\" +", "-\t\t\"src/p/Z.java p.Z.foo(int, String, X) -> void [X]\", ", "+\t\t\"src/p/A.java p.A.x [X]\\n\" + ", "+\t\t\"src/p/A.java p.A(X) [X]\\n\" + ", "+\t\t\"src/p/A.java void p.A.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/X.java p.X() [X]\\n\" + ", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [X]\\n\" + ", "+\t\t\"src/p/Y.java p.Y [X]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [X]\","]}], "num": 57698}