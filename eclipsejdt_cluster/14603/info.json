{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1a4fff4d4bac4b08f893ea6344c2a46", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a44631cd31a32cce98600231cfff96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "commitAfterChange": "3c7abdea60e3dea7a9b2b822e92d260aea9179a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\t\t\tboolean valueReturnSeen = false;", "-\t\t\t\t\tboolean voidReturnSeen = false;", "+\t\t\t\t\tprivate boolean valueReturnSeen = false;", "+\t\t\t\t\tprivate boolean voidReturnSeen = false;", "+\t\t\t\t\tprivate boolean throwSeen = false;", "+\t\t\t\t\tpublic boolean visit(ThrowStatement throwStatement, BlockScope dontCare) {", "+\t\t\t\t\t\tthis.throwSeen  = true;", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "-\t\t\t\t\t\tif (!this.voidReturnSeen && !this.valueReturnSeen) {  // () -> { throw new Exception(); } is value compatible.", "+\t\t\t\t\t\tif (!this.voidReturnSeen && !this.valueReturnSeen && this.throwSeen) {  // () -> { throw new Exception(); } is value compatible.", "-\t\t\t\t\t\t\tLambdaExpression.this.valueCompatible = ultimateStatement instanceof ThrowStatement; // for now, we will settle for a simplistic analysis.", "+\t\t\t\t\t\t\tLambdaExpression.this.valueCompatible = ultimateStatement instanceof ThrowStatement;", "+\t\t\t\t\t\t\tLambdaExpression.this.shapeAnalysisComplete = LambdaExpression.this.valueCompatible;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf467409b6e852eeb7f074a763c33feb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic void returnsExpression(Expression expression, TypeBinding resultType)", "signatureAfterChange": "  \tpublic void returnsExpression(Expression expression, TypeBinding resultType)", "diff": ["-\t\tif (this.original == this) // not in overload resolution context.", "+\t\tif (this.original == this) // Not in overload resolution context. result expressions not relevant.", "-\t\t\tthis.original.valueCompatible = resultType != null && resultType.id == TypeIds.T_void ? false : true;", "-\t\t\tthis.original.resultExpressions = new Expression[1];", "-\t\t\tthis.original.resultExpressions[0] = expression;", "-\t\t\treturn; // void compatibility determined via statementExpression()", "+\t\t\tthis.valueCompatible = resultType != null && resultType.id == TypeIds.T_void ? false : true;", "+\t\t\tthis.voidCompatible = this.assistNode ? true : ((Expression) this.body).statementExpression(); // while code is still being written and completed, we can't ask if it is a statement", "+\t\t\tthis.resultExpressions = new Expression[] { expression };", "+\t\t\treturn;", "-\t\t\tthis.original.returnsValue = true;", "-\t\t\tthis.original.voidCompatible = false;", "-\t\t\tthis.original.valueCompatible = !this.original.returnsVoid;", "+\t\t\tthis.returnsValue = true;", "+\t\t\tthis.voidCompatible = false;", "+\t\t\tthis.valueCompatible = !this.returnsVoid;", "-\t\t\t\tExpression [] returnExpressions = this.original.resultExpressions;", "+\t\t\t\tExpression [] returnExpressions = this.resultExpressions;", "-\t\t\t\tthis.original.resultExpressions = returnExpressions;", "+\t\t\t\tthis.resultExpressions = returnExpressions;", "-\t\t\tthis.original.returnsVoid = true;", "-\t\t\tthis.original.valueCompatible = false;", "-\t\t\tthis.original.voidCompatible = !this.original.returnsValue;", "+\t\t\tthis.returnsVoid = true;", "+\t\t\tthis.valueCompatible = false;", "+\t\t\tthis.voidCompatible = !this.returnsValue;"]}], "num": 14603}