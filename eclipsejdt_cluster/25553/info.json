{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1fc5d28770eba59911d853288b3304a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01db2ecc02ab9402b6ffb9746404f8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "42a5591e6405d9d5a9661e1fdb211c39440692e6", "commitAfterChange": "90b5d0d22a673acac5fa922f69ac563d54cf8a91", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod) {", "-\t\tfor (int i = 0, l = currentParams.length; i < l; i++) {", "-\t\t\tif (!areTypesEqual(currentParams[i], inheritedParams[i])) {", "-\t\t\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, this.type);", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t}", "-\t\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, this.type);", "-\t\t\treturn false;", "+}", "+boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod) {", "+\tif (isUnsafeReturnTypeOverride(currentMethod, inheritedMethod)) {", "+\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, this.type);", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bccc91cc397cff573238347eb847e123", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c97a12fe797bc8f1a4e22eb2cfe11932a52f122", "commitAfterChange": "cb3bfb0879489be8fed32e037d62f37c21d37c6b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": " public boolean doesMethodOverride(MethodBinding method, MethodBinding inheritedMethod)", "signatureAfterChange": " public boolean doesMethodOverride(MethodBinding method, MethodBinding inheritedMethod)", "diff": ["-\tif (doTypeVariablesClash(method, inheritedMethod)) return false;", "-\tif (areParametersEqual(method, inheritedMethod)) return true;", "-\tif (method.declaringClass == inheritedMethod.declaringClass) return false;", "+\tMethodBinding substitute = computeSubstituteMethod(inheritedMethod, method);", "+\treturn substitute != null && doesSubstituteMethodOverride(method, substitute);", "+}", "-\tTypeBinding[] inheritedParams = inheritedMethod.parameters;", "-\tif (method.typeVariables != NoTypeVariables || !inheritedMethod.hasSubstitutedParameters())", "-\tif (method.declaringClass.findSuperTypeWithSameErasure(inheritedMethod.declaringClass) == null)"]}], "num": 25553}