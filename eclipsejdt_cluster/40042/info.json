{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90df2b1070d317e48d3f95b89bfce651", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af5ed6b8f877f4edfbb346a845fdb082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": " public int inferenceKind()", "signatureAfterChange": " public InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method)", "diff": ["-public int inferenceKind() {", "-\treturn (this.inferenceKind & InferenceContext18.INFERENCE_KIND_MASK);", "-}", "+public InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method) {", "+\tif (this.inferenceContexts == null)", "+\t\treturn null;", "+\treturn (InferenceContext18) this.inferenceContexts.get(method);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4020817ab7d1dd15dbee381f99fd4f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t@Override \tpublic IType getType(String typeName)", "signatureAfterChange": " \t \tpublic JavaElement resolved(Binding binding)", "diff": ["-", "-\t@Override", "-\tpublic IType getType(String typeName) {", "-\t\treturn null;", "-\t}", "+\tpublic JavaElement resolved(Binding binding) {", "+\t\tResolvedLambdaExpression resolvedHandle = new ResolvedLambdaExpression(this.parent, this, new String(binding.computeUniqueKey()));", "+\t\treturn resolvedHandle;"]}], "num": 40042}