{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b45b3ae7c9a83a4efc2135cdb27e0f73", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33dd66b559375f7e4c5f8f0c82bb9eea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9122b48400c1b7bbd5f34248ba27601e8c1f8c81", "commitAfterChange": "b7727722e1a93459ec6844ad6bb94bb1a32aeb2c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\tif (visibleField == null)", "-\t\t\t\t\t\tvisibleField = field;", "-\t\t\t\t\telse", "+\t\t\t\t\tif (visibleField != null)", "+\t\t\t\t\tif (!currentType.canBeSeenBy(this))", "+\t\t\t\t\t\treturn new ProblemFieldBinding(currentType, fieldName, ReceiverTypeNotVisible);", "+\t\t\t\t\tvisibleField = field;", "+\t\t\tProblemFieldBinding nonVisibleType = null;", "-\t\t\t\t\t\t\t\tvisibleField = field;", "+\t\t\t\t\t\t\t\tif (anInterface.canBeSeenBy(this))", "+\t\t\t\t\t\t\t\t\tvisibleField = field;", "+\t\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\t\tnonVisibleType = new ProblemFieldBinding(anInterface, fieldName, ReceiverTypeNotVisible);", "+\t\t\tif (nonVisibleType != null)", "+\t\t\t\treturn nonVisibleType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3eb572c382a843243172d77ab2f587e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9bef1c9466abe8b593c4d2051a95cedc2ae4d102", "commitAfterChange": "2b3faf03e480607600ec10a4a39f50f16f7be45e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["+\t\t\tif (visibleField != null && !visibleField.declaringClass.canBeSeenBy(this)) // double check that interface is visible", "+\t\t\t\treturn new ProblemFieldBinding(visibleField, visibleField.declaringClass, fieldName, ProblemReasons.ReceiverTypeNotVisible);", "-\t\tif (notVisibleField != null)", "+\t\tif (notVisibleField != null) {", "+\t\t\tif (!notVisibleField.declaringClass.canBeSeenBy(this))", "+\t\t\t\treturn new ProblemFieldBinding(notVisibleField, notVisibleField.declaringClass, fieldName, ProblemReasons.ReceiverTypeNotVisible);", "+\t\t}"]}], "num": 41858}