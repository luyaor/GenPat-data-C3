{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5317837944b8c2d37c40290e09b6d32", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661b91015569d969cd163e6c1b471f9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "aa717ce56e721f6ed4fc92594ba56da9f08c982e", "commitAfterChange": "5e93996c6b4562ee73fa5730afbd832d1574cd08", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printTrailingComment()", "signatureAfterChange": "  \tpublic void printTrailingComment()", "diff": ["-\t\t\tboolean hasLineComment = false;", "-\t\t\t\t\t\taddDeleteEdit(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition());", "-\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;\t\t\t\t\t\t", "-\t\t\t\t\t\tif (count > 1) {", "-\t\t\t\t\t\t\tpreserveEmptyLines(count);", "+\t\t\t\t\t\tif (count >= 1) {", "-\t\t\t\t\t\t} else if (count == 1) {", "-\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t} else if (hasLineComment) {", "-\t\t\t\t\t\t\tprintNewLine();", "-\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "-\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;\t\t\t\t\t\t", "+\t\t\t\t\t\t\taddDeleteEdit(this.scanner.getCurrentTokenStartPosition(), this.scanner.getCurrentTokenEndPosition());", "-\t\t\t\t\t\thasLineComment = true;\t\t\t\t\t", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\treturn;", "-\t\t\t\t\t\tif (hasLineComment) {", "-\t\t\t\t\t\t\tprintNewLine();", "-\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\thasLineComment = false;", "-\t\t\t\t\t\tif (hasLineComment) {", "-\t\t\t\t\t\t\tprintNewLine();", "-\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\thasLineComment = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a00d65bb83d1dcb86d0801e09c4d6e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "ab9430a3c2886efbbcdfa22a396b4380d0e945dc", "commitAfterChange": "15af5c9febf3e53f2418ebc52d74d4a523f18cbf", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  \tprivate void printLineComment(int commentStart, int commentEnd)", "signatureAfterChange": "  \tprivate void printLineComment(int commentStart, int commentEnd)", "diff": ["+\t\t\t\tcase TerminalTokens.TokenNameIdentifier:", "+\t\t\t\t\tif (previousToken == -1 || previousToken == SKIP_FIRST_WHITESPACE_TOKEN) {", "+\t\t\t\t\t\tchar[] identifier = this.scanner.getCurrentTokenSource();", "+\t\t\t\t\t\tint startPosition = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\t\tint restartPosition = this.scanner.currentPosition;", "+\t\t\t\t\t\tif (CharOperation.equals(identifier, Parser.FALL_THROUGH_TAG, 0, 5/*length of string \"$FALL\"*/) && this.scanner.currentCharacter == '-') {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tthis.scanner.getNextToken(); //  consume the '-'", "+\t\t\t\t\t\t\t\ttoken = this.scanner.getNextToken(); // consume the \"THROUGH\"", "+\t\t\t\t\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "+\t\t\t\t\t\t\t\t\tidentifier = this.scanner.getCurrentTokenSource();", "+\t\t\t\t\t\t\t\t\tif (CharOperation.endsWith(Parser.FALL_THROUGH_TAG, identifier)) {", "+\t\t\t\t\t\t\t\t\t\t// the comment starts with a fall through", "+\t\t\t\t\t\t\t\t\t\tif (previousToken == SKIP_FIRST_WHITESPACE_TOKEN) {", "+\t\t\t\t\t\t\t\t\t\t\taddReplaceEdit(spaceStartPosition, startPosition-1, \" \"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tthis.scanner.startPosition = startPosition;", "+\t\t\t\t\t\t\t\t\t\tpreviousToken = token;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} catch (InvalidInputException iie) {", "+\t\t\t\t\t\t\t\t// skip", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t// this was not a valid fall-through tag, hence continue to process the comment normally", "+\t\t\t\t\t\tthis.scanner.startPosition = startPosition;", "+\t\t\t    \t\tthis.scanner.currentPosition = restartPosition;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;"]}], "num": 26534}