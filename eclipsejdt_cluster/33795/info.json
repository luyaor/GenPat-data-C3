{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "865f1b1ac648ca0f43816872fef5be8f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a251a6ea67fd7b420d239b0336072d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "802408127f6c9d056b74d013d85acd8e4ce01d9f", "commitAfterChange": "d564e900659710065d21e2c2bbe03963838cefc3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (leftType.isBaseType()) {", "-\t\t\t\tif (!rightType.isBaseType()) {", "-\t\t\t\t\tint unboxedID = scope.computeBoxingType(rightType).id;", "-\t\t\t\t\tif (unboxedID != rightTypeID) {", "-\t\t\t\t\t\trightTypeID = unboxedID;", "-\t\t\t\t\t\tunboxedRight = true;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else if (rightType.isBaseType()) {", "+\t\t\tif (!leftType.isBaseType() && rightTypeID != T_String) {", "-\t\t\t\t\tif (unboxedID != leftTypeID) {", "-\t\t\t\t\t\tleftTypeID = unboxedID;", "-\t\t\t\t\t\tunboxedLeft = true;", "-\t\t\t\t\t}", "+\t\t\t\tif (unboxedID != leftTypeID) {", "+\t\t\t\t\tleftTypeID = unboxedID;", "+\t\t\t\t\tunboxedLeft = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!rightType.isBaseType() && leftTypeID != T_String) {", "+\t\t\t\tint unboxedID = scope.computeBoxingType(rightType).id;", "+\t\t\t\tif (unboxedID != rightTypeID) {", "+\t\t\t\t\trightTypeID = unboxedID;", "+\t\t\t\t\tunboxedRight = true;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df38832598a36b035a22fb849dae23fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "d5d1f909364b4e39cfd35a80c7f05625e4e84132", "commitAfterChange": "ab7efb5fc7aa3c0010645bf37cbb96632a7db099", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (!leftType.isBaseType()) {", "-\t\t\t\tTypeBinding unboxedType = scope.computeBoxingType(leftType);", "-\t\t\t\tif (unboxedType != leftType) {", "-\t\t\t\t\tleftType = unboxedType;", "-\t\t\t\t\tunboxedLeft = true;", "+\t\t\tif (leftType.isBaseType()) {", "+\t\t\t\tif (!rightType.isBaseType()) {", "+\t\t\t\t\tTypeBinding unboxedType = scope.computeBoxingType(rightType);", "+\t\t\t\t\tif (unboxedType != rightType) {", "+\t\t\t\t\t\trightType = unboxedType;", "+\t\t\t\t\t\tunboxedRight = true;", "+\t\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (!rightType.isBaseType()) {", "-\t\t\t\tTypeBinding unboxedType = scope.computeBoxingType(rightType);", "-\t\t\t\tif (unboxedType != rightType) {", "-\t\t\t\t\trightType = unboxedType;", "-\t\t\t\t\tunboxedRight = true;", "+\t\t\t} else {", "+\t\t\t\tif (rightType.isBaseType()) {", "+\t\t\t\t\tTypeBinding unboxedType = scope.computeBoxingType(leftType);", "+\t\t\t\t\tif (unboxedType != leftType) {", "+\t\t\t\t\t\tleftType = unboxedType;", "+\t\t\t\t\t\tunboxedLeft = true;", "+\t\t\t\t\t}"]}], "num": 33795}