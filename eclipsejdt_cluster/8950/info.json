{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bba413ec8c84b0554715427f72fd6e57", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3429c09d0fe1d1831e947f120c577ecd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t\t\tIterator keys = newOptions.keySet().iterator();", "-\t\t\t\twhile (keys.hasNext()){", "-\t\t\t\t\tString key = (String)keys.next();", "+\t\t\t\tIterator entries = newOptions.entrySet().iterator();", "+\t\t\t\twhile (entries.hasNext()){", "+\t\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\t\tString key = (String) entry.getKey();", "-\t\t\t\t\tString value = (String)newOptions.get(key);", "-\t\t\t\t\tprojectPreferences.put(key, value);", "+\t\t\t\t\tprojectPreferences.put(key, (String) entry.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f98475c690f454f3347f3d357f769bc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void secondaryTypeAdding(String path, char[] key)", "signatureAfterChange": " \tpublic void secondaryTypeAdding(String path, char[] key)", "diff": ["-\t\t\t\t\t\tIterator keys = indexedSecondaryTypes.keySet().iterator();", "-\t\t\t\t\t\twhile (keys.hasNext()) {", "-\t\t\t\t\t\t\tIFile file = (IFile) keys.next();", "-\t\t\t\t\t\t\tUtil.verbose(\"\t\t+ \"+file.getFullPath()+':'+indexedSecondaryTypes.get(file) ); //$NON-NLS-1$", "+\t\t\t\t\t\tIterator entries = indexedSecondaryTypes.entrySet().iterator();", "+\t\t\t\t\t\twhile (entries.hasNext()) {", "+\t\t\t\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\t\t\t\tIFile file = (IFile) entry.getKey();", "+\t\t\t\t\t\t\tUtil.verbose(\"\t\t+ \"+file.getFullPath()+':'+ entry.getValue()); //$NON-NLS-1$"]}], "num": 8950}