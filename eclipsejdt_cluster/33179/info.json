{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8241d09a7d4920005441beb4cb778614", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7388785d53d9a762b86c7e4733b46b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void setUpJavaProject() throws CoreException, IOException, JavaModelException", "signatureAfterChange": "  \tprivate void setUpJavaProject() throws CoreException, IOException, JavaModelException", "diff": ["+\t\tIProblemRequestor problemRequestor = new IProblemRequestor() {", "+\t\t\tpublic void acceptProblem(IProblem problem) {}", "+\t\t\tpublic void beginReporting() {}", "+\t\t\tpublic void endReporting() {}", "+\t\t\tpublic boolean isActive() {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t};", "-\t\t\tnew WorkingCopyOwner() {}, ", "-\t\t\tnew IProblemRequestor() {", "-\t\t\t\tpublic void acceptProblem(IProblem problem) {}", "-\t\t\t\tpublic void beginReporting() {}", "-\t\t\t\tpublic void endReporting() {}", "-\t\t\t\tpublic boolean isActive() {", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "-\t\t\t}, ", "+\t\t\tnewWorkingCopyOwner(problemRequestor), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3a350023b5a869b72f7551a9c93188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 156, "signatureBeforeChange": " public void scannerError(Parser parser, String errorTokenName)", "signatureAfterChange": " public void scannerError(Parser parser, String errorTokenName)", "diff": ["+\tString[] arguments = flag == IProblem.ParsingErrorNoSuggestion ", "+\t\t\t? new String[] {errorTokenName}", "+\t\t\t: NoArgument;", "-\t\tflag == IProblem.ParsingErrorNoSuggestion ", "-\t\t\t? new String[] {errorTokenName}", "-\t\t\t: new String[0],", "+\t\targuments,", "+\t\targuments,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd5277acc12d82e0f8c91df0c87b23d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "diff": ["+\t\t\t\tCharOperation.toString(CharOperation.subarray(nameRef.tokens, 0, index)),", "+\t\t\t\tnew String(nameRef.tokens[index])},", "+\t\t\tnew String[] {", "+\t\t\t\tnew String(searchedType.sourceName()),", "+\tString[] arguments = new String[] {CharOperation.toString(CharOperation.subarray(nameRef.tokens, 0, index + 1))};", "-\t\tnew String[] {CharOperation.toString(CharOperation.subarray(nameRef.tokens, 0, index + 1))},", "+\t\targuments,", "+\t\targuments,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7c9eb8b02636ce045b025baa37e9bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "85dfd6fe21dc1e0468031a6a1792973a7ccd77aa", "commitAfterChange": "260abd4c81f5e6a46979b443ec583d3f991d2708", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test042() throws CoreException", "signatureAfterChange": " \tpublic void test042() throws CoreException", "diff": ["-\t\t\tresolveASTs(", "-\t\t\t\tnew ICompilationUnit[] {workingCopy}, ", "+\t\t\tString[] bindingKeys = ", "-\t\t\t\t},", "+\t\t\t\t};", "+\t\t\tresolveASTs(", "+\t\t\t\tnew ICompilationUnit[] {workingCopy}, ", "+\t\t\t\tbindingKeys,", "-\t\t\t\trequestor.getBindings());", "+\t\t\t\trequestor.getBindings(bindingKeys));"]}], "num": 33179}