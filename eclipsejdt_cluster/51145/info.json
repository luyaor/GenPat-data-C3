{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32fa9b5ea8232bbc1b4085a23cd5712f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7638dfdfb19477d075371e581e5c37d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ea176c4b30f0ccecbe1ef65d5acaa7a437fc7839", "commitAfterChange": "51ed698671d4eccb2f1e7d9fc9f63f18fc20c064", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic static void setClasspathContainer(IPath containerPath, final IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(IPath containerPath, final IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tif (affectedProject.getProject().exists()){", "+\t\t\tif (JavaProject.hasJavaNature(affectedProject.getProject())){", "-\t\t\t\taffectedProjects[i] = null; // filter out this project - does not reference the container path", "+\t\t\t\taffectedProjects[i] = null; // filter out this project - does not reference the container path, or isnt't Java project"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f069c92e995a68b5ac8ff3e181452df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6ca2c17de7d2cf75286045cf5fe4db47b5ffe702", "commitAfterChange": "ec09b25a18c19092cc9fe16e9fc3af2be1689d02", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries) throws JavaModelException", "diff": ["-\t\t\t\t\t\tif (projRsc.isOpen()) {\t\t\t\t", "+\t\t\t\t\t\tif (JavaProject.hasJavaNature(projRsc)) {\t\t\t\t"]}], "num": 51145}