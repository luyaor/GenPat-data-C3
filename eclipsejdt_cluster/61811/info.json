{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a43f9350979ba7a4210f8753e20cafdc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fda9146a00fe036134e5bfc93d6c1a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "a7116ba747c4c0c7d306d5c170ed0c79f4ee0ea2", "commitAfterChange": "c4a9c950955e2519a6156f93a25e4e5f905489ef", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void test043() throws Exception", "signatureAfterChange": " public void test043() throws Exception", "diff": ["-\t\t\t\"     70  goto 13\\n\" +", "-\t\t\t\"     73  astore 5\\n\" +", "-\t\t\t\"     75  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "-\t\t\t\"     78  new java.lang.StringBuilder [27]\\n\" +", "-\t\t\t\"     81  dup\\n\" +", "-\t\t\t\"     82  ldc <String \\\"#inner -> \\\"> [29]\\n\" +", "-\t\t\t\"     84  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "-\t\t\t\"     87  iload_1 [a]\\n\" +", "-\t\t\t\"     88  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "-\t\t\t\"     91  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "-\t\t\t\"     94  invokevirtual java.io.PrintStream.print(java.lang.String) : void [42]\\n\" +", "-\t\t\t\"     97  aload 5\\n\" +", "-\t\t\t\"     99  athrow\\n\" +", "-\t\t\t\"    100  astore_2 [e]\\n\" +", "-\t\t\t\"    101  goto 35\\n\" +", "-\t\t\t\"    104  astore 6\\n\" +", "-\t\t\t\"    106  iconst_0\\n\" +", "-\t\t\t\"    107  istore 7 [var]\\n\" +", "-\t\t\t\"    109  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "-\t\t\t\"    112  new java.lang.StringBuilder [27]\\n\" +", "-\t\t\t\"    115  dup\\n\" +", "-\t\t\t\"    116  ldc <String \\\"#save -> \\\"> [44]\\n\" +", "-\t\t\t\"    118  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "-\t\t\t\"    121  iload_1 [a]\\n\" +", "-\t\t\t\"    122  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "-\t\t\t\"    125  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "-\t\t\t\"    128  invokevirtual java.io.PrintStream.println(java.lang.String) : void [46]\\n\" +", "-\t\t\t\"    131  aload 6\\n\" +", "-\t\t\t\"    133  athrow\\n\" +", "+\t\t\t\"     70  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "+\t\t\t\"     73  new java.lang.StringBuilder [27]\\n\" +", "+\t\t\t\"     76  dup\\n\" +", "+\t\t\t\"     77  ldc <String \\\"#inner -> \\\"> [29]\\n\" +", "+\t\t\t\"     79  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "+\t\t\t\"     82  iload_1 [a]\\n\" +", "+\t\t\t\"     83  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "+\t\t\t\"     86  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "+\t\t\t\"     89  invokevirtual java.io.PrintStream.print(java.lang.String) : void [42]\\n\" +", "+\t\t\t\"     92  iconst_0\\n\" +", "+\t\t\t\"     93  istore 7 [var]\\n\" +", "+\t\t\t\"     95  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "+\t\t\t\"     98  new java.lang.StringBuilder [27]\\n\" +", "+\t\t\t\"    101  dup\\n\" +", "+\t\t\t\"    102  ldc <String \\\"#save -> \\\"> [44]\\n\" +", "+\t\t\t\"    104  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "+\t\t\t\"    107  iload_1 [a]\\n\" +", "+\t\t\t\"    108  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "+\t\t\t\"    111  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "+\t\t\t\"    114  invokevirtual java.io.PrintStream.println(java.lang.String) : void [46]\\n\" +", "+\t\t\t\"    117  return\\n\" +", "+\t\t\t\"    118  astore 5\\n\" +", "+\t\t\t\"    120  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "+\t\t\t\"    123  new java.lang.StringBuilder [27]\\n\" +", "+\t\t\t\"    126  dup\\n\" +", "+\t\t\t\"    127  ldc <String \\\"#inner -> \\\"> [29]\\n\" +", "+\t\t\t\"    129  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "+\t\t\t\"    132  iload_1 [a]\\n\" +", "+\t\t\t\"    133  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "+\t\t\t\"    136  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "+\t\t\t\"    139  invokevirtual java.io.PrintStream.print(java.lang.String) : void [42]\\n\" +", "+\t\t\t\"    142  aload 5\\n\" +", "+\t\t\t\"    144  athrow\\n\" +", "+\t\t\t\"    145  astore_2 [e]\\n\" +", "+\t\t\t\"    146  iconst_0\\n\" +", "+\t\t\t\"    147  istore 7 [var]\\n\" +", "+\t\t\t\"    149  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "+\t\t\t\"    152  new java.lang.StringBuilder [27]\\n\" +", "+\t\t\t\"    155  dup\\n\" +", "+\t\t\t\"    156  ldc <String \\\"#save -> \\\"> [44]\\n\" +", "+\t\t\t\"    158  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "+\t\t\t\"    161  iload_1 [a]\\n\" +", "+\t\t\t\"    162  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "+\t\t\t\"    165  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "+\t\t\t\"    168  invokevirtual java.io.PrintStream.println(java.lang.String) : void [46]\\n\" +", "+\t\t\t\"    171  return\\n\" +", "+\t\t\t\"    172  astore 6\\n\" +", "+\t\t\t\"    174  iconst_0\\n\" +", "+\t\t\t\"    175  istore 7 [var]\\n\" +", "+\t\t\t\"    177  getstatic java.lang.System.out : java.io.PrintStream [15]\\n\" +", "+\t\t\t\"    180  new java.lang.StringBuilder [27]\\n\" +", "+\t\t\t\"    183  dup\\n\" +", "+\t\t\t\"    184  ldc <String \\\"#save -> \\\"> [44]\\n\" +", "+\t\t\t\"    186  invokespecial java.lang.StringBuilder(java.lang.String) [31]\\n\" +", "+\t\t\t\"    189  iload_1 [a]\\n\" +", "+\t\t\t\"    190  invokevirtual java.lang.StringBuilder.append(int) : java.lang.StringBuilder [34]\\n\" +", "+\t\t\t\"    193  invokevirtual java.lang.StringBuilder.toString() : java.lang.String [38]\\n\" +", "+\t\t\t\"    196  invokevirtual java.io.PrintStream.println(java.lang.String) : void [46]\\n\" +", "+\t\t\t\"    199  aload 6\\n\" +", "+\t\t\t\"    201  athrow\\n\" +", "-\t\t\t\"        [pc: 6, pc: 13] -> 73 when : any\\n\" +", "-\t\t\t\"        [pc: 61, pc: 73] -> 73 when : any\\n\" +", "-\t\t\t\"        [pc: 2, pc: 35] -> 100 when : java.lang.Exception\\n\" +", "-\t\t\t\"        [pc: 61, pc: 100] -> 100 when : java.lang.Exception\\n\" +", "-\t\t\t\"        [pc: 2, pc: 35] -> 104 when : any\\n\" +", "-\t\t\t\"        [pc: 61, pc: 104] -> 104 when : any\\n\" +", "+\t\t\t\"        [pc: 6, pc: 13] -> 118 when : any\\n\" +", "+\t\t\t\"        [pc: 61, pc: 70] -> 118 when : any\\n\" +", "+\t\t\t\"        [pc: 2, pc: 35] -> 145 when : java.lang.Exception\\n\" +", "+\t\t\t\"        [pc: 61, pc: 92] -> 145 when : java.lang.Exception\\n\" +", "+\t\t\t\"        [pc: 118, pc: 145] -> 145 when : java.lang.Exception\\n\" +", "+\t\t\t\"        [pc: 2, pc: 35] -> 172 when : any\\n\" +", "+\t\t\t\"        [pc: 61, pc: 92] -> 172 when : any\\n\" +", "+\t\t\t\"        [pc: 118, pc: 146] -> 172 when : any\\n\" +", "-\t\t\t\"        [pc: 70, line: 12]\\n\" +", "-\t\t\t\"        [pc: 73, line: 13]\\n\" +", "-\t\t\t\"        [pc: 75, line: 14]\\n\" +", "-\t\t\t\"        [pc: 97, line: 15]\\n\" +", "-\t\t\t\"        [pc: 100, line: 16]\\n\" +", "-\t\t\t\"        [pc: 101, line: 17]\\n\" +", "-\t\t\t\"        [pc: 104, line: 18]\\n\" +", "-\t\t\t\"        [pc: 106, line: 19]\\n\" +", "-\t\t\t\"        [pc: 109, line: 20]\\n\" +", "-\t\t\t\"        [pc: 131, line: 21]\\n\" +", "+\t\t\t\"        [pc: 70, line: 14]\\n\" +", "+\t\t\t\"        [pc: 92, line: 19]\\n\" +", "+\t\t\t\"        [pc: 95, line: 20]\\n\" +", "+\t\t\t\"        [pc: 117, line: 12]\\n\" +", "+\t\t\t\"        [pc: 118, line: 13]\\n\" +", "+\t\t\t\"        [pc: 120, line: 14]\\n\" +", "+\t\t\t\"        [pc: 142, line: 15]\\n\" +", "+\t\t\t\"        [pc: 145, line: 16]\\n\" +", "+\t\t\t\"        [pc: 146, line: 19]\\n\" +", "+\t\t\t\"        [pc: 149, line: 20]\\n\" +", "+\t\t\t\"        [pc: 171, line: 17]\\n\" +", "+\t\t\t\"        [pc: 172, line: 18]\\n\" +", "+\t\t\t\"        [pc: 174, line: 19]\\n\" +", "+\t\t\t\"        [pc: 177, line: 20]\\n\" +", "+\t\t\t\"        [pc: 199, line: 21]\\n\" +", "-\t\t\t\"        [pc: 0, pc: 134] local: this index: 0 type: X\\n\" +", "-\t\t\t\"        [pc: 2, pc: 134] local: a index: 1 type: int\\n\" +", "-\t\t\t\"        [pc: 4, pc: 100] local: warnings index: 2 type: java.lang.Object\\n\" +", "-\t\t\t\"        [pc: 6, pc: 100] local: contexts index: 3 type: java.lang.Object\\n\" +", "-\t\t\t\"        [pc: 63, pc: 73] local: npe index: 4 type: java.lang.NullPointerException\\n\" +", "-\t\t\t\"        [pc: 101, pc: 104] local: e index: 2 type: java.lang.Exception\\n\" +", "+\t\t\t\"        [pc: 0, pc: 202] local: this index: 0 type: X\\n\" +", "+\t\t\t\"        [pc: 2, pc: 202] local: a index: 1 type: int\\n\" +", "+\t\t\t\"        [pc: 4, pc: 145] local: warnings index: 2 type: java.lang.Object\\n\" +", "+\t\t\t\"        [pc: 6, pc: 145] local: contexts index: 3 type: java.lang.Object\\n\" +", "+\t\t\t\"        [pc: 63, pc: 118] local: npe index: 4 type: java.lang.NullPointerException\\n\" +", "+\t\t\t\"        [pc: 146, pc: 172] local: e index: 2 type: java.lang.Exception\\n\" +", "-\t\t\t\"        [pc: 109, pc: 131] local: var index: 7 type: int\\n\";", "+\t\t\t\"        [pc: 95, pc: 117] local: var index: 7 type: int\\n\" +", "+\t\t\t\"        [pc: 149, pc: 171] local: var index: 7 type: int\\n\" +", "+\t\t\t\"        [pc: 177, pc: 199] local: var index: 7 type: int\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be08752b2e6cfd303bf3e3bb64efa06c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void test050()", "signatureAfterChange": " public void test050()", "diff": ["-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 11\\n\" + ", "-\t\t\t\"     7  goto 11\\n\" + ", "-\t\t\t\"    10  astore_1\\n\" + ", "-\t\t\t\"    11  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 6]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 10]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo2();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 11\\n\" + ", "-\t\t\t\"     7  goto 11\\n\" + ", "-\t\t\t\"    10  astore_1\\n\" + ", "-\t\t\t\"    11  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 13]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 14]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 16]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 18]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo3();\\n\" + ", "-\t\t\t\"    0  goto 4\\n\" + ", "-\t\t\t\"    3  astore_1\\n\" + ", "-\t\t\t\"    4  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 22]\\n\" + ", "-\t\t\t\"        [pc: 3, line: 24]\\n\" + ", "-\t\t\t\"        [pc: 4, line: 26]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo4();\\n\" + ", "-\t\t\t\"     0  iconst_0\\n\" + ", "-\t\t\t\"     1  istore_1 [i]\\n\" + ", "-\t\t\t\"     2  aload_0 [this]\\n\" + ", "-\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     6  ifeq 13\\n\" + ", "-\t\t\t\"     9  goto 13\\n\" + ", "-\t\t\t\"    12  astore_1\\n\" + ", "-\t\t\t\"    13  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 9] -> 12 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 29]\\n\" + ", "-\t\t\t\"        [pc: 9, line: 30]\\n\" + ", "-\t\t\t\"        [pc: 12, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 13, line: 34]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 12] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\"  void bar();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 17\\n\" + ", "-\t\t\t\"     7  aload_0 [this]\\n\" + ", "-\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    11  ifeq 24\\n\" + ", "-\t\t\t\"    14  goto 24\\n\" + ", "-\t\t\t\"    17  aload_0 [this]\\n\" + ", "-\t\t\t\"    18  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    21  ifeq 24\\n\" + ", "-\t\t\t\"    24  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 36]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 37]\\n\" + ", "-\t\t\t\"        [pc: 14, line: 38]\\n\" + ", "-\t\t\t\"        [pc: 17, line: 40]\\n\" + ", "-\t\t\t\"        [pc: 24, line: 44]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 25] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #28 (I)V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void baz(int i);\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 34\\n\" + ", "-\t\t\t\"     7  iload_1 [i]\\n\" + ", "-\t\t\t\"     8  tableswitch default: 31\\n\" + ", "-\t\t\t\"          case 0: 28\\n\" + ", "-\t\t\t\"    28  goto 39\\n\" + ", "-\t\t\t\"    31  goto 39\\n\" + ", "-\t\t\t\"    34  aload_0 [this]\\n\" + ", "-\t\t\t\"    35  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    38  pop\\n\" + ", "-\t\t\t\"    39  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 46]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 47]\\n\" + ", "-\t\t\t\"        [pc: 28, line: 48]\\n\" + ", "-\t\t\t\"        [pc: 31, line: 49]\\n\" + ", "-\t\t\t\"        [pc: 34, line: 52]\\n\" + ", "-\t\t\t\"        [pc: 39, line: 54]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 40] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 40] local: i index: 1 type: int\\n\"", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 11\\n\" + ", "+\t\t\t\t\"     7  goto 11\\n\" + ", "+\t\t\t\t\"    10  astore_1\\n\" + ", "+\t\t\t\t\"    11  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 6]\\n\" + ", "+\t\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "+\t\t\t\t\"        [pc: 11, line: 10]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo2();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 11\\n\" + ", "+\t\t\t\t\"     7  goto 11\\n\" + ", "+\t\t\t\t\"    10  astore_1\\n\" + ", "+\t\t\t\t\"    11  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 13]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 14]\\n\" + ", "+\t\t\t\t\"        [pc: 10, line: 16]\\n\" + ", "+\t\t\t\t\"        [pc: 11, line: 18]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\t\t\"  void foo3();\\n\" + ", "+\t\t\t\t\"    0  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 26]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo4();\\n\" + ", "+\t\t\t\t\"     0  iconst_0\\n\" + ", "+\t\t\t\t\"     1  istore_1 [i]\\n\" + ", "+\t\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     6  ifeq 13\\n\" + ", "+\t\t\t\t\"     9  goto 13\\n\" + ", "+\t\t\t\t\"    12  astore_1\\n\" + ", "+\t\t\t\t\"    13  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 9] -> 12 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 29]\\n\" + ", "+\t\t\t\t\"        [pc: 9, line: 30]\\n\" + ", "+\t\t\t\t\"        [pc: 12, line: 32]\\n\" + ", "+\t\t\t\t\"        [pc: 13, line: 34]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 2, pc: 12] local: i index: 1 type: int\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  void bar();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 17\\n\" + ", "+\t\t\t\t\"     7  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    11  ifeq 24\\n\" + ", "+\t\t\t\t\"    14  goto 24\\n\" + ", "+\t\t\t\t\"    17  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    18  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    21  ifeq 24\\n\" + ", "+\t\t\t\t\"    24  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 36]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 37]\\n\" + ", "+\t\t\t\t\"        [pc: 14, line: 38]\\n\" + ", "+\t\t\t\t\"        [pc: 17, line: 40]\\n\" + ", "+\t\t\t\t\"        [pc: 24, line: 44]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 25] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #28 (I)V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void baz(int i);\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 34\\n\" + ", "+\t\t\t\t\"     7  iload_1 [i]\\n\" + ", "+\t\t\t\t\"     8  tableswitch default: 31\\n\" + ", "+\t\t\t\t\"          case 0: 28\\n\" + ", "+\t\t\t\t\"    28  goto 39\\n\" + ", "+\t\t\t\t\"    31  goto 39\\n\" + ", "+\t\t\t\t\"    34  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    35  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    38  pop\\n\" + ", "+\t\t\t\t\"    39  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 46]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 47]\\n\" + ", "+\t\t\t\t\"        [pc: 28, line: 48]\\n\" + ", "+\t\t\t\t\"        [pc: 31, line: 49]\\n\" + ", "+\t\t\t\t\"        [pc: 34, line: 52]\\n\" + ", "+\t\t\t\t\"        [pc: 39, line: 54]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 40] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 40] local: i index: 1 type: int\\n\"", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 7, same]\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "-\t\t\t\"    0  goto 4\\n\" + ", "-\t\t\t\"    3  astore_1\\n\" + ", "-\t\t\t\"    4  return\\n\" + ", "+\t\t\t\"    0  return\\n\" + ", "-\t\t\t\"        [pc: 0, line: 22]\\n\" + ", "-\t\t\t\"        [pc: 3, line: 24]\\n\" + ", "-\t\t\t\"        [pc: 4, line: 26]\\n\" + ", "+\t\t\t\"        [pc: 0, line: 26]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 0, same]\\n\" + ", "-\t\t\t\"        [pc: 3, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + ", "-\t\t\t\"        [pc: 4, same]\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 9, append: {int}]\\n\" + ", "-\t\t\t\"        [pc: 12, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\"        [pc: 12, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + "]}], "num": 61811}