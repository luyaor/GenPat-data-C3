{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a0c6b22cec9c8ab7c9274935c30276b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d385687da2c3724228881a1facbb471", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "commitAfterChange": "ea9b3c75a1ccab739b2bea3a45cffc49cfff1439", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test0009()", "signatureAfterChange": " public void test0009()", "diff": ["-\tString expected14ProblemLog =", "-\t\texpected13ProblemLog;", "-\t", "-\trunComplianceParserTest(", "-\t\ttestFiles,", "-\t\texpected13ProblemLog,", "-\t\texpected14ProblemLog,", "-\t\texpected15ProblemLog", "-\t);", "+", "+\tif(this.complianceLevel < ClassFileConstants.JDK1_5) {", "+\t\tthis.runNegativeTest(testFiles, expected13ProblemLog);", "+\t} else {", "+\t\trunConformTest(", "+\t\t\ttrue,", "+\t\t\ttestFiles, ", "+\t\t\texpected15ProblemLog,", "+\t\t\tnull, null,", "+\t\t\tJavacTestOptions.Excuse.EclipseHasSomeMoreWarnings);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42b70da20a5fcc83dc33845f6736b95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "4174406df4aaa1a9c0c2c9957e746701c111ecea", "commitAfterChange": "6bb08b5ff6e2a895c10400289dd373545dd86757", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void compareFormattedSource() throws IOException, Exception", "signatureAfterChange": "  void compareFormattedSource() throws IOException, Exception", "diff": ["-\t\t} else {", "-\t\t\toutputFile.getParentFile().mkdirs();", "-\t\t\tUtil.writeToFile(actualResult, outputFile.getAbsolutePath());", "+\t\t}", "+\t\tif (WRITE_DIR != null) {", "+\t\t\tFile writtenFile = new Path(WRITE_DIR.getPath()).append(this.path).toFile();", "+\t\t\twrittenFile.getParentFile().mkdirs();", "+\t\t\tUtil.writeToFile(actualResult, writtenFile.getAbsolutePath());"]}], "num": 25067}