{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2247037e6c7617056e0da6e4f91f875c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae951332d9f99bcf5ff6a9061d3c903", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "809c21ac086d44a312f3c31c6951126c6520aeaa", "commitAfterChange": "495067f03b4b0bfec29183e25c4db2e6b2a1dc02", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\t\t// compute the pkg fragment roots", "+\t\t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\t\t\tIWorkspaceRoot wRoot = workspace.getRoot();", "+\t\t\t\t// request marker refresh on project opening (so as to diagnose unbound variables on startup)", "+\t\t\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/, !workspace.isTreeLocked()  /*refresh CP markers*/);", "+", "+\t\t\t\t// compute the pkg fragment roots (resolved CP should already be cached from marker refresh)", "-\t\t\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/);", "-\t\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "+\t\t\t\t\t\tObject target = JavaModel.getTarget(wRoot, path, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8558fb3a6b07e93cfe9eb753797980da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\t\t// compute the pkg fragment roots", "+\t\t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\t\t\tIWorkspaceRoot wRoot = workspace.getRoot();", "+\t\t\t\t// request marker refresh on project opening (so as to diagnose unbound variables on startup)", "+\t\t\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/, !workspace.isTreeLocked()  /*refresh CP markers*/);", "+", "+\t\t\t\t// compute the pkg fragment roots (resolved CP should already be cached from marker refresh)", "-\t\t\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/);", "-\t\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "+\t\t\t\t\t\tObject target = JavaModel.getTarget(wRoot, path, true);"]}], "num": 28813}