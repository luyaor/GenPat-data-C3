{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43fea6a00b65e77451112ee29306cea1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b42aa882661e5e63d3ced38454a745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void test053()", "signatureAfterChange": " public void test053()", "diff": ["-\t\t\"No .class file created for file X.class in ---OUTPUT_DIR_PLACEHOLDER---/X.java because of an IOException: The output directory is a file : ---OUTPUT_DIR_PLACEHOLDER---/X.java\\n\",", "-        true);", "+\t\t\"No .class file created for file X.class in ---OUTPUT_DIR_PLACEHOLDER\" +", "+\t\t\t\"---/X.java because of an IOException: Regular file \" +", "+\t\t\t\"---OUTPUT_DIR_PLACEHOLDER---/X.java cannot be used \" +", "+\t\t\t\"as output directory\\n\",", "+\t\ttrue);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4acc7768de2a430ef18352df7805fc58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexedFile.java", "commitBeforeChange": "b1b4d66c4b4947d339dcdfbcccb9da5452078dcf", "commitAfterChange": "2cf7797b4ea66e168b1744bb1b1ca62dd02e91b1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic int footprint()", "signatureAfterChange": "\r \tpublic int footprint()", "diff": ["-\t\t//object+ 2 slots + size of the string\r", "-\t\treturn 8 + (2 * 4) + (28 + path.length() * 2);\r", "+\t\t//object+ 2 slots + size of the string (header + 4 slots + char[])\r", "+\t\treturn 8 + (2 * 4) + (8 + (4 * 4) + 8 + path.length() * 2);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6562c6801d8e0083209237d420fc85fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic void test0081() throws JavaModelException", "signatureAfterChange": " \tpublic void test0081() throws JavaModelException", "diff": ["-\t\tString expectedOutput = \"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\";", "-\t\tassertProblemsSize(compilationUnit, 1, expectedOutput);", "+\t\tString expectedOutput =", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type Y. References to generic type Y<T> should be parameterized\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<T> should be parameterized\";", "+\t\tassertProblemsSize(compilationUnit, 4, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec0444ebb4cee11f970f4ed91f4512d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest18.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0004()", "signatureAfterChange": " public void test0004()", "diff": ["-\tString expectedParentNodeToString = \"<NONE>\";", "+\tString expectedParentNodeToString = \"static Foo f = (<no type> x5, <no type> x6) -> {\\n\" +", "+\t\t\t\t\t\t\t\t\t\t\"  <CompleteOnName:x>;\\n\" +", "+\t\t\t\t\t\t\t\t\t\t\"};\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fbd018ed3632fefe32f9197c0092f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchScopeTests.java", "commitBeforeChange": "e569ccbcfbcb74e518eafb76280b234f1f261194", "commitAfterChange": "2f320253f72e97c287894f0303a7d3fb710470ca", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void _testBug215841b() throws CoreException", "signatureAfterChange": " public void testApplicationLibrairiesNonExistingClasspathVariable() throws CoreException", "diff": ["+}", "+public void testApplicationLibrairiesNonExistingClasspathVariable() throws CoreException {", "+\ttry {", "+\t\tVariablesInitializer.setInitializer(new ClasspathInitializerTests.DefaultVariableInitializer(new String[] {\"TEST_LIB\", \"/P/lib.jar\"}));", "+\t\tIJavaProject project = createJavaProject(\"P\", new String[] {}, new String[] {\"TEST_LIB\"}, \"\");", "-// see #testApplicationLibrairiesClasspathContainer()", "-public void _testBug215841b() throws CoreException {", "-\ttry {", "-\t\tVariablesInitializer.setInitializer(new ClasspathInitializerTests.DefaultVariableInitializer(new String[] {\"TEST_LIB\", \"/P/lib.jar\"}));", "-\t\tIJavaProject project = createJavaProject(\"P\", new String[] {}, new String[] {\"TEST_LIB\"}, \"\");", "-\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] {project}, IJavaSearchScope.APPLICATION_LIBRARIES);", "-\t\tassertScopeEquals(", "-\t\t\t\"JavaSearchScope on [empty scope]\",", "-\t\t\tscope);", "-\t} finally {", "-\t\tdeleteProject(\"P\");", "-\t\tVariablesInitializer.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2510b0e2b5a17ee27d3ac7595d28102", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " public void testBug110060_TypePattern07() throws CoreException", "signatureAfterChange": " public void testBug110060_TypePattern07() throws CoreException", "diff": ["-/** @deprecated As using a depreciated constant */", "-\tsearch(\"aa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\tassertSearchResults(", "-\t\t\"\" // no result because it's an invalid camel case pattern which is replaced with ", "-\t\t\t// prefix case sensitive match bu SearchPatter.validateMatchRule(...) (old behavior)", "-\t);", "-}", "+\tsearch(\"aaa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\t// Invalid camel case pattern => replace the camel case flag by prefix match one (case insensitive)", "+\t\t\"src/b110060/Test.java b110060.Test.a3 [AaAaAa] EXACT_MATCH\"", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acfc865af78e0a64f6cef95b594e89c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ScalingTests.java", "commitBeforeChange": "aa15430252e650136143e4a86f0a6f6e27539382", "commitAfterChange": "749aa1c27be4903ff44650cbac7fb5e2a22e8990", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testGeneratingLotsOfFiles() throws Exception", "signatureAfterChange": " \tpublic void testGeneratingLotsOfFiles() throws Exception", "diff": ["-\t\t\t\"public class Test%05d {}\";", "+\t\t\t\"public class Test%05d { generatedfilepackage.Generated%05d _t; }\";", "-\t\t\tString contents = String.format(template, i, i);", "+\t\t\tString contents = String.format(template, i, i, FILES_TO_GENERATE - i + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1113e7dbaa11f9f29eb2672bf16767a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "a430dcf4a558e1c36680a36ef4af1ace851e14d2", "commitAfterChange": "dce0303da6d0cbf1d565391873636c507bd68d3f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["+\t\t\"null\\n\" + ", "+\t\t\"null\\n\" + ", "+\t\t\"#inner-finally ->334\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0948efde86f64fb0c76ef5e053ad319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a81ccfc0bc8694879e3dd29554f4e34087f49572", "commitAfterChange": "090ebdc0744610fb4e5ac8b5b4731d3eafdb24fe", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test017()", "signatureAfterChange": " \tpublic void test017()", "diff": ["-\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\"\", ", "+\t        + \" -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "-\t        \"\",", "+\t        \"incorrect classpath: dummmy_dir\\r\\n\" + ", "+\t        \"incorrect classpath: dummy.jar\\r\\n\" + ", "+\t        \"incorrect classpath: dummy.jar\\r\\n\","]}], "num": 31606}