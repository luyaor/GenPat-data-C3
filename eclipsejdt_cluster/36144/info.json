{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0decf41593139a2e3bf9b17e802b254f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73516fbe1c62be2fe3a086167018717f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "7ceb7b86e5d2c6d0639c543a0b8998dc4ed1502e", "commitAfterChange": "9a7973aead32a6f88b27fa3f47ab00d5a6b3a410", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   \tprivate ConstraintFormula[] deriveTypeArgumentConstraints(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": "   \tprivate ConstraintFormula[] deriveTypeArgumentConstraints(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\treturn deriveTypeArgumentConstraintsRecursive(boundS.right, boundT.right, boundS.isSoft || boundT.isSoft);", "-\t}", "+\t\tTypeBinding[] supers = superTypesWithCommonGenericType(boundS.right, boundT.right);", "+\t\tif (supers != null)", "+\t\t\treturn typeArgumentEqualityConstraints(supers[0], supers[1], boundS.isSoft || boundT.isSoft);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff8c71339cb75d506fba83aa79cb38e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "d81e6de27221b2caec858658787abf55d91a925e", "commitAfterChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate ConstraintTypeFormula combineSameSameWithProperType(TypeBound boundLeft, TypeBound boundRight)", "signatureAfterChange": " \tprivate ConstraintTypeFormula combineSameSameWithProperType(TypeBound boundLeft, TypeBound boundRight)", "diff": ["-\t\t\treturn new ConstraintTypeFormula(left, right, ReductionResult.SAME, boundLeft.isSoft||boundRight.isSoft);", "+\t\t\treturn ConstraintTypeFormula.create(left, right, ReductionResult.SAME, boundLeft.isSoft||boundRight.isSoft);"]}], "num": 36144}