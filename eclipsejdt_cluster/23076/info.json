{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "462366dbcb209360a44a75789211a494", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4802a923d9ccb70ba2fdbe86f991dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void initialize(JavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic void initialize(JavaProject project) throws JavaModelException", "diff": ["+", "+\t\t// create hierarchy resolver if scope is a hierarchy scope", "+\t\tif (this.scope instanceof HierarchyScope) {", "+\t\t\tIType focusType = ((HierarchyScope)this.scope).focusType;", "+\t\t\tif (focusType != null) {", "+\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "+\t\t\t\t\tthis.hierarchyResolver = new HierarchyResolver(this.lookupEnvironment, null/*hierarchy is not going to be computed*/);", "+\t\t\t\t\tthis.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t} else {", "+\t\t\t\tthis.hierarchyResolver = null;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tthis.hierarchyResolver = null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ebe51f21b73f6987194230dbf62043a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "15070dfb720141f260eff9f86b3742c51648d5f0", "commitAfterChange": "f850238096d0e6e37fbf42c72e3eea2d357ec53f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "diff": ["+\t\t// create hierarchy resolver if scope is a hierarchy scope", "+\t\tif (this.scope instanceof HierarchyScope) {", "+\t\t\tIType focusType = ((HierarchyScope)this.scope).focusType;", "+\t\t\tif (focusType != null) {", "+\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "+\t\t\t\t\tthis.hierarchyResolver = new HierarchyResolver(this.lookupEnvironment, null/*hierarchy is not going to be computed*/);", "+\t\t\t\t\tthis.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t} else {", "+\t\t\t\tthis.hierarchyResolver = null;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tthis.hierarchyResolver = null;", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7546e65b760ce7fa37efcc035430768", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "af5208ad650bb16626635d58b15cab85ed3b6304", "commitAfterChange": "45055dc97c3da6c433b9c6b3534e9f01054887be", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "diff": ["+\t\t} else if (focus.isBinary()) {", "+\t\t\t// may have been resolved indirectly, should then be in type cache", "+\t\t\tchar[] fullyQualifiedName = focus.getFullyQualifiedName().toCharArray();", "+\t\t\tthis.focusType = this.lookupEnvironment.getCachedType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\tif (this.focusType == null) return;", "-\tfor (int current = typeIndex; current >= 0; current--) {", "-\t\tReferenceBinding typeBinding = typeBindings[current];", "+\tfor (int current = this.typeIndex; current >= 0; current--) {", "+\t\tReferenceBinding typeBinding = this.typeBindings[current];", "-\t\tIGenericType suppliedType = typeModels[current];", "+\t\tIGenericType suppliedType = this.typeModels[current];", "-\t\trequestor.connect(suppliedType, superclass, superinterfaces);", "+\t\tthis.requestor.connect(suppliedType, superclass, superinterfaces);", "-\t\trequestor.connect(typeModels[objectIndex], null, null);", "+\t\tthis.requestor.connect(this.typeModels[objectIndex], null, null);"]}], "num": 23076}