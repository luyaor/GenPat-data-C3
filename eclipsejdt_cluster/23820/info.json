{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec096eb7f13cdbba5b95a8b45385e1d1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ce413aa01a5c52c4c0f3ef8d2bbd20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "80afe0245e61b0a1bc378b68d1e49e7223b1baa6", "commitAfterChange": "d2f1cef7b0e84ef19aab589d93965b305b118ad6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "signatureAfterChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "diff": ["-\t\tif (foundSize == startFoundSize)", "-\t\t\treturn concreteMatch;", "+\t\tif (foundSize == startFoundSize) {", "+\t\t\tif (concreteMatch != null) {", "+\t\t\t\tunitScope.recordTypeReferences(concreteMatch.thrownExceptions);", "+\t\t\t\treturn concreteMatch;", "+\t\t\t}", "+\t\t\treturn null;", "+\t\t}", "-\t\t\tif (concreteMatch == null)", "-\t\t\t\treturn problemMethod; // can be null", "-\t\t\treturn concreteMatch;", "+\t\t\tif (concreteMatch != null) {", "+\t\t\t\tunitScope.recordTypeReferences(concreteMatch.thrownExceptions);", "+\t\t\t\treturn concreteMatch;", "+\t\t\t}", "+\t\t\treturn problemMethod; // can be null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad4d704ba5d9c259fd683e56cb678356", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "548230af13c5905ba392c25f655dd34224d58c55", "commitAfterChange": "984bec0735c837a49816a47e66faa3e64aa59275", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["-\t\t\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t}", "+\t\t\t\tif (newElement != null) {", "+\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t\tint occurenceCount = 1;", "-\t\t\t\t\t\t\t\tnewElement = parentType.getInitializer(1);", "+\t\t\t\t\t\t\t\tnewElement = parentType.getInitializer(occurenceCount);", "+\t\t\t\t\t\t} else if (!field.isField()) {", "+\t\t\t\t\t\t\toccurenceCount++;", "+\t\t\t\t\tif (newElement != null) {", "+\t\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t\t}"]}], "num": 23820}