{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6df4c3cdc7f769e04714659b209caa95", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0683f4c1f1bafffb34cdd530db91d602", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "3e190b68d238643d825e1ad9aa87d6bbe9e82edc", "commitAfterChange": "2b27dcb10e8425a7a2b60cafac84f86873aa3258", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private TypeVariableBinding createTypeVariable(SignatureWrapper wrapper, int rank)", "signatureAfterChange": " private TypeVariableBinding createTypeVariable(SignatureWrapper wrapper, int rank)", "diff": ["-\twrapper.start = colon + 1; // skip name + ':'", "-\tReferenceBinding type, firstBound = null;", "-\tif (wrapper.signature[wrapper.start] == ':') {", "-\t\ttype = environment.getType(JAVA_LANG_OBJECT);", "-\t} else {", "-\t\ttype = (ReferenceBinding) environment.getTypeFromTypeSignature(wrapper, NoTypeVariables, this);", "-\t\tfirstBound = type;", "-\t}", "-", "-\t// variable is visible to its bounds", "-\tvariable.modifiers |= AccUnresolved;", "-\tvariable.superclass = type;", "-", "-\tReferenceBinding[] bounds = null;", "-\tif (wrapper.signature[wrapper.start] == ':') {", "-\t\tjava.util.ArrayList types = new java.util.ArrayList(2);", "-\t\tdo {", "-\t\t\twrapper.start++; // skip ':'", "-\t\t\ttypes.add(environment.getTypeFromTypeSignature(wrapper, new TypeVariableBinding[] {variable}, this));", "-\t\t} while (wrapper.signature[wrapper.start] == ':');", "-\t\tbounds = new ReferenceBinding[types.size()];", "-\t\ttypes.toArray(bounds);", "-\t}", "-", "-\tvariable.superInterfaces = bounds == null ? NoSuperInterfaces : bounds;", "-\tif (firstBound == null) {", "-\t\tfirstBound = variable.superInterfaces.length == 0 ? null : variable.superInterfaces[0];", "-\t\tvariable.modifiers |= AccInterface;", "-//\t\tvariable.superclass = null;", "-\t}", "-\tvariable.firstBound = firstBound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a217cc55d3854f9fdad82a2eb40bc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "e0224da700606ee4894293f10b71bd4b6b9d30f5", "commitAfterChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CaptureBinding(WildcardBinding wildcard, ReferenceBinding sourceType, int position)", "signatureAfterChange": " \t \tpublic CaptureBinding(WildcardBinding wildcard, ReferenceBinding sourceType, int position)", "diff": ["-\t\tTypeVariableBinding wildcardVariable = wildcard.typeVariable();", "-\t\tswitch (wildcard.boundKind) {", "-\t\t\tcase Wildcard.EXTENDS :", "-\t\t\t\tthis.superclass = wildcard.superclass();", "-\t\t\t\tthis.firstBound = wildcard.bound;", "-\t\t\t\tReferenceBinding[] wildcardInterfaces = wildcard.superInterfaces();", "-\t\t\t\tif (wildcardInterfaces == NoSuperInterfaces) {", "-\t\t\t\t\tthis.superInterfaces = NoSuperInterfaces;", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.superInterfaces = Scope.greaterLowerBound(wildcardInterfaces);", "-\t\t\t\t}", "-\t\t\t\tif ((wildcard.bound.tagBits & HasTypeVariable) == 0)", "-\t\t\t\t\tthis.tagBits &= ~HasTypeVariable;", "-\t\t\t\tbreak;", "-\t\t\tcase Wildcard.UNBOUND :", "-\t\t\t\tthis.superclass = wildcardVariable.superclass();", "-\t\t\t\tthis.superInterfaces = wildcardVariable.superInterfaces();", "-\t\t\t\tthis.tagBits &= ~HasTypeVariable;", "-\t\t\t\tbreak;", "-\t\t\tcase Wildcard.SUPER :", "-\t\t\t\tthis.superclass = wildcardVariable.superclass();", "-\t\t\t\tif (wildcardVariable.firstBound == this.superclass || wildcard.bound == this.superclass) {", "-\t\t\t\t\tthis.firstBound = this.superclass;", "-\t\t\t\t}", "-\t\t\t\tthis.superInterfaces = wildcardVariable.superInterfaces();", "-\t\t\t\tthis.lowerBound = wildcard.bound;", "-\t\t\t\tif ((wildcard.bound.tagBits & HasTypeVariable) == 0)", "-\t\t\t\t\tthis.tagBits &= ~HasTypeVariable;", "-\t\t\t\tbreak;", "-\t\t}"]}], "num": 50508}