{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71dfd3e39f9ebd1f491902931b5c8358", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a68ef54327f281d4f1c7b976c230337e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.assignmentImplicitConversion);", "+\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.preAssignImplicitConversion);", "-\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.assignmentImplicitConversion);", "+\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.preAssignImplicitConversion);", "-\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.assignmentImplicitConversion);", "+\t\t\t\tcodeStream.generateImplicitConversion(postIncrement.preAssignImplicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcfcf8470cdc85bb9bf91dc3c2695b19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "dbbc6d08fc2b695c154b640221ae8cbfa61d3287", "commitAfterChange": "3532d66830bec28729ed8f03267572d66c6f777a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["+\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);\t\t", "-\t\t\t\tcodeStream.sendOperator(postIncrement.operator, fieldBinding.type.id);", "+\t\t\t\tcodeStream.sendOperator(postIncrement.operator, this.implicitConversion & COMPILE_TYPE_MASK);", "+\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\tcodeStream.sendOperator(postIncrement.operator, localBinding.type.id);", "+\t\t\t\t\tcodeStream.sendOperator(postIncrement.operator, this.implicitConversion & COMPILE_TYPE_MASK);"]}], "num": 42179}