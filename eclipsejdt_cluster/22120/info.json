{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14f6ac68d31f9bd11abd708a9c17b7a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27632806fb2fcde8f55325d49fc70c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody()", "diff": ["-\talloc.sourceEnd = rParenPos; //the position has been stored explicitly", "+\talloc.sourceEnd = this.rParenPos; //the position has been stored explicitly", "-\tif ((argumentLength = expressionLengthStack[expressionLengthPtr--]) != 0) {", "-\t\texpressionPtr -= argumentLength;", "+\tif ((argumentLength = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\tthis.expressionPtr -= argumentLength;", "-\t\t\texpressionStack, ", "-\t\t\texpressionPtr + 1, ", "+\t\t\tthis.expressionStack, ", "+\t\t\tthis.expressionPtr + 1, ", "-\talloc.sourceStart = intStack[intPtr--];", "+\talloc.sourceStart = this.intStack[this.intPtr--];", "-\tanonymousType.bodyStart = scanner.currentPosition;\t", "-\tlistLength = 0; // will be updated when reading super-interfaces", "+\tanonymousType.bodyStart = this.scanner.currentPosition;\t", "+\tthis.listLength = 0; // will be updated when reading super-interfaces", "-\tif (currentElement != null){ ", "-\t\tlastCheckPoint = anonymousType.bodyStart;\t\t", "-\t\tcurrentElement = currentElement.add(anonymousType, 0);", "-\t\tcurrentToken = 0; // opening brace already taken into account", "-\t\tlastIgnoredToken = -1;", "+\tif (this.currentElement != null){ ", "+\t\tthis.lastCheckPoint = anonymousType.bodyStart;\t\t", "+\t\tthis.currentElement = this.currentElement.add(anonymousType, 0);", "+\t\tthis.currentToken = 0; // opening brace already taken into account", "+\t\tthis.lastIgnoredToken = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719cfb0e9aac99f6fe02dd8ed4c9caa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " protected void consumePackageDeclarationName()", "signatureAfterChange": " protected void consumePackageDeclarationName()", "diff": ["-\t\tnew char[length = identifierLengthStack[identifierLengthPtr--]][]; ", "-\tidentifierPtr -= length;", "+\t\tnew char[length = this.identifierLengthStack[this.identifierLengthPtr--]][]; ", "+\tthis.identifierPtr -= length;", "-\tSystem.arraycopy(identifierStack, ++identifierPtr, tokens, 0, length);", "+\tSystem.arraycopy(this.identifierStack, ++this.identifierPtr, tokens, 0, length);", "-\t\tidentifierPositionStack, ", "-\t\tidentifierPtr--, ", "+\t\tthis.identifierPositionStack, ", "+\t\tthis.identifierPtr--, ", "-\tcompilationUnit.currentPackage = ", "+\tthis.compilationUnit.currentPackage = ", "-\tif (currentToken == TokenNameSEMICOLON){", "-\t\timpt.declarationSourceEnd = scanner.currentPosition - 1;", "+\tif (this.currentToken == TokenNameSEMICOLON){", "+\t\timpt.declarationSourceEnd = this.scanner.currentPosition - 1;", "-\timpt.declarationSourceStart = intStack[intPtr--];", "+\timpt.declarationSourceStart = this.intStack[this.intPtr--];", "-\tif (currentElement != null){", "-\t\tlastCheckPoint = impt.declarationSourceEnd+1;", "-\t\trestartRecovery = true; // used to avoid branching back into the regular automaton\t\t", "+\tif (this.currentElement != null){", "+\t\tthis.lastCheckPoint = impt.declarationSourceEnd+1;", "+\t\tthis.restartRecovery = true; // used to avoid branching back into the regular automaton\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c9694b818bf309ea8e677f8149f081f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " protected void consumeStaticOnly()", "signatureAfterChange": " protected void consumeStaticOnly()", "diff": ["-\tint savedModifiersSourceStart = modifiersSourceStart;", "+\tint savedModifiersSourceStart = this.modifiersSourceStart;", "-\tif (modifiersSourceStart >= savedModifiersSourceStart) {", "-\t\tmodifiersSourceStart = savedModifiersSourceStart;", "+\tif (this.modifiersSourceStart >= savedModifiersSourceStart) {", "+\t\tthis.modifiersSourceStart = savedModifiersSourceStart;", "-\tpushOnIntStack(scanner.currentPosition);", "+\tpushOnIntStack(this.scanner.currentPosition);", "-\t\tmodifiersSourceStart >= 0 ? modifiersSourceStart : scanner.startPosition);", "+\t\tthis.modifiersSourceStart >= 0 ? this.modifiersSourceStart : this.scanner.startPosition);", "-\tnestedMethod[nestedType]++;", "+\tthis.nestedMethod[this.nestedType]++;", "-\tif (currentElement != null){", "-\t\trecoveredStaticInitializerStart = intStack[intPtr]; // remember start position only for static initializers", "+\tif (this.currentElement != null){", "+\t\tthis.recoveredStaticInitializerStart = this.intStack[this.intPtr]; // remember start position only for static initializers"]}], "num": 22120}