{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fd9a99dd43d91c84f2aad83904a1729", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b26aa2f800ed78a0238bbe853785ef4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1f75748fb7a2b5e72eeec8bc6e9327229810294b", "commitAfterChange": "5a2f988914931154f5726bd24a4a8b4b4e70ad8f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tprivate CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit, \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \t \tprivate CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit, \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\t\tif (searchPosition >= 0 && searchPosition <= sourceUnit.getContents().length) {", "+\t\t\t\tchar[] source = sourceUnit.getContents();", "+\t\t\t\tint length = source.length;", "+\t\t\t\tif (searchPosition >= 0 && searchPosition <= length) {", "-\t\t\t\t\tthis.parser.scanner.setSource(unit.compilationResult);", "+\t\t\t\t\tthis.parser.scanner.setSource(source, unit.compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc87d38dd36f7b02f733a8aebdc48596", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "commitAfterChange": "8ddb90194cdf45633ca959a6158f4f155e521349", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected void reportAccurateParameterizedTypeReference(SearchMatch match, TypeReference typeRef, int index, TypeReference[] typeArguments) throws CoreException", "signatureAfterChange": " protected void reportAccurateParameterizedTypeReference(SearchMatch match, TypeReference typeRef, int index, TypeReference[] typeArguments) throws CoreException", "diff": ["-\t\t// Initialize scanner", "-\t\tScanner scanner = this.parser.scanner;", "-\t\tchar[] source = this.currentPossibleMatch.getContents();", "-\t\tscanner.setSource(source);", "+\t\t\t// Initialize scanner", "+\t\t\tScanner scanner = this.parser.scanner;", "+\t\t\tchar[] source = this.currentPossibleMatch.getContents();", "+\t\t\tscanner.setSource(source);", "+"]}], "num": 40360}