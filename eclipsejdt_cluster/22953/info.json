{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec4153fdec6c731c7eb372bd58a4b8c7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f059c96f6e13c271d73f48d194727cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tprivate void preserveEmptyLines(int count, int insertPosition)", "signatureAfterChange": "  \tprivate void preserveEmptyLines(int count, int insertPosition)", "diff": ["-\t\t\tif (this.formatter.preferences.number_of_empty_lines_to_preserve != 0) {", "+\t\t\tif (this.blank_lines_between_import_groups >= 0) {", "+\t\t\t\tprintEmptyLines(this.blank_lines_between_import_groups, insertPosition);", "+\t\t\t} else if (this.formatter.preferences.number_of_empty_lines_to_preserve != 0) {", "-\t\t\t\tthis.printEmptyLines(linesToPreserve, insertPosition);", "+\t\t\t\tprintEmptyLines(linesToPreserve, insertPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc7a492b02710cdfeb6954af5607fda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a697821401a1789d3bb95488153b9d9990238873", "commitAfterChange": "4dcab8b92fc7368fba3526b80aaecb1b65b56822", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void preserveEmptyLines(int count)", "signatureAfterChange": " \t \tprivate void preserveEmptyLines(int count)", "diff": ["-\t\t\tint linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve + 1);", "-\t\t\tthis.printNewLines(linesToPreserve);", "+\t\t\tif (this.formatter.preferences.preserve_user_linebreaks) {", "+\t\t\t\tthis.printNewLines(count);", "+\t\t\t} else {", "+\t\t\t\tint linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve + 1);", "+\t\t\t\tthis.printNewLines(linesToPreserve);", "+\t\t\t}"]}], "num": 22953}