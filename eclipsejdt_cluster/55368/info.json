{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b5b7ebab901551da7995cdf46ad819d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034fe5278ed3b05f5618f70fae51b36f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "commitAfterChange": "0bbfe267fb7eaaa77628088e8cdbd841ddb40de5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic String getEncoding()", "signatureAfterChange": " \tpublic String getEncoding()", "diff": ["+\t\t// Return the encoding of the associated file", "-\t\tif (resource != null)", "-\t\t\treturn JavaCore.create(resource.getProject()).getOption(JavaCore.CORE_ENCODING, true);", "-\t\treturn JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\tif (resource != null) {", "+\t\t\ttry {", "+\t\t\t\treturn resource.getCharset();", "+\t\t\t}", "+\t\t\tcatch(CoreException ce) {", "+\t\t\t\ttry {", "+\t\t\t\t\treturn ResourcesPlugin.getWorkspace().getRoot().getDefaultCharset();", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t// use no encoding", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a48a9b3122ddf4840cf03b6c45c0270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9185602916ae3d2b479dd70264118bc8aec45408", "commitAfterChange": "c7b885d9a7ea7e7c885c4c2f25d6b7140acc1111", "methodNumberBeforeChange": 222, "methodNumberAfterChange": 222, "signatureBeforeChange": "  \tpublic void setOptions(Hashtable newOptions)", "signatureAfterChange": "  \tpublic void setOptions(Hashtable newOptions)", "diff": ["+\t\t\tHashtable cachedValue = newOptions == null ? null : new Hashtable(newOptions);", "-\t\t\t\t\tif (key.equals(JavaCore.CORE_ENCODING)) continue; // skipped, contributed by resource prefs", "+\t\t\t\t\tif (key.equals(JavaCore.CORE_ENCODING)) {", "+\t\t\t\t\t\tif (cachedValue != null) {", "+\t\t\t\t\t\t\tcachedValue.put(key, JavaCore.getEncoding());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcontinue; // skipped, contributed by resource prefs", "+\t\t\t\t\t}", "-\t\t\tthis.optionsCache = newOptions==null ? null : new Hashtable(newOptions);", "+\t\t\tthis.optionsCache = cachedValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d70d188c3103671e361072678edf96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "52b00369d469c7b24a63a3fde464411aba7b73af", "commitAfterChange": "2bfa11153ef154267e539d45f27351ed761ef0a2", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["+\t\t\tIMarker marker = null;", "-\t\t\t\t\tcreateClasspathProblemMarker(", "+\t\t\t\t\tmarker = createClasspathProblemMarker(", "+\t\t\t\t\t\tif (marker != null) {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tmarker.setAttribute(IJavaModelMarker.UNBOUND_VARIABLE, rawEntry.getPath().segment(0));", "+\t\t\t\t\t\t\t} catch(CoreException e) {", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (marker != null) {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tmarker.setAttribute(IJavaModelMarker.UNBOUND_CONTAINER, rawEntry.getPath().makeRelative().toString());", "+\t\t\t\t\t\t\t} catch(CoreException e) {", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}], "num": 55368}