{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57a57f3643b48c5e7e14bf9ea8043807", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7715fd9717ffea97e7eabfbccd1ba67b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrame.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Object clone() throws CloneNotSupportedException", "signatureAfterChange": " public StackMapFrame duplicate()", "diff": ["-public Object clone() throws CloneNotSupportedException {", "-\tStackMapFrame result = (StackMapFrame) super.clone();", "+public StackMapFrame duplicate() {", "+\tStackMapFrame result = new StackMapFrame(this.locals.length);", "-\t", "+", "-\t\t\t\tresult.locals[i] = (VerificationTypeInfo) verificationTypeInfo.clone();", "+\t\t\t\tresult.locals[i] = verificationTypeInfo.duplicate();", "-\t\t\tresult.stackItems[i] = (VerificationTypeInfo) this.stackItems[i].clone();", "+\t\t\tresult.stackItems[i] = this.stackItems[i].duplicate();", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c49e8298d9436cba70e500f153a167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "0727a0a8c9c54eadeab1063076b7f4ac82d6a00b", "commitAfterChange": "a2289c8ffc926e20e6e4969b658db049f5aad071", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tprotected void startLogListening()", "signatureAfterChange": " \tprotected void startLogListening(ILog logToListen)", "diff": ["-\t\tILog log = JavaCore.getPlugin().getLog();", "-\t\tif (this.logListener != null) {", "-\t\t\tlog.removeLogListener(this.logListener);", "-\t\t}", "+\t}", "+\tprotected void startLogListening(ILog logToListen) {", "+\t\tstopLogListening(); // cleanup if we forgot to stop listening", "+\t\tthis.log = logToListen;", "-\t\tlog.addLogListener(this.logListener);", "+\t\tif (logToListen == null) {", "+\t\t\tPlatform.addLogListener(this.logListener);", "+\t\t} else {", "+\t\t\tthis.log.addLogListener(this.logListener);", "+\t\t}"]}], "num": 33181}