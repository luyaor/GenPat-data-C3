{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d003af34ebb4f46cd15f8756aafa120f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb46089c042924c69635d38866c8fad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionProposal.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "signatureAfterChange": " \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "diff": ["-\t\t\ttype = this.nameLookup.findType(new String(tName),", "+\t\t\tNameLookup.Answer answer = this.nameLookup.findType(new String(tName),", "+\t\t\t\tfalse/*don't check restrictions*/,", "+\t\t\ttype = answer == null ? null : answer.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26bd84b07efbb97801abc15e37d54a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "122aaead4e358f6ebb2c21aa961cc53294d2209d", "commitAfterChange": "dad14e26b600f99744a420507cc556dc0f0ff73b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected IType lookupBinaryHandle(IBinaryType typeInfo)", "signatureAfterChange": " \tprotected IType lookupBinaryHandle(IBinaryType typeInfo)", "diff": ["-\t\treturn this.nameLookup.findType(qualifiedName, false, flag);", "+\t\treturn this.nameLookup.findType(qualifiedName,", "+\t\t\tfalse,", "+\t\t\tflag,", "+\t\t\ttrue/* consider secondary types */,", "+\t\t\tfalse/* do NOT wait for indexes */,", "+\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb2073cd2a86f2e47ece2b90d40eee7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected IType lookupBinaryHandle(IBinaryType typeInfo)", "signatureAfterChange": " \tprotected IType lookupBinaryHandle(IBinaryType typeInfo)", "diff": ["-\t\treturn this.nameLookup.findType(qualifiedName,", "+\t\tNameLookup.Answer answer = this.nameLookup.findType(qualifiedName,", "+\t\t\tfalse/*don't check restrictions*/,", "+\t\treturn answer == null ? null : answer.type;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a60d4fe49700fc554d5913510a8b53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tIType findType(String packageName, String typeQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tIType findType(String packageName, String typeQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\treturn lookup.findType(", "+\t\tNameLookup.Answer answer = lookup.findType(", "+\t\t\tfalse/*don't check restrictions*/,", "+\t\treturn answer == null ? null : answer.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b520cae2d30d889726855ed771fd352c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic IJavaElement findElement(IPath path, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic IJavaElement findElement(IPath path, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\t\t\tIType type = lookup.findType(", "+\t\t\t\tNameLookup.Answer answer = lookup.findType(", "+\t\t\t\t\tfalse/*don't check restrictions*/,", "-\t\t\t\tif (type != null) {", "-\t\t\t\t\treturn type.getParent();", "+\t\t\t\tif (answer != null) {", "+\t\t\t\t\treturn answer.type.getParent();"]}], "num": 14100}