{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10ea964b8475a52b8e51c83552ee603a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84662a5e750d37d61f22bc0e1509223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeParameter.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void resolve(ClassScope scope)", "signatureAfterChange": " \t \tpublic void resolve(ClassScope scope)", "diff": ["-\tpublic void resolve(ClassScope scope) {", "-\t\t\tScope outerScope = scope.parent;", "-\t\t\tBinding existingType = outerScope.getBinding(this.name, Binding.TYPE, this, false);", "-\t\t\tif (existingType != null && this.binding != existingType && existingType.isValidBinding()) {", "+\t", "+\tpublic void resolve(ClassScope scope) {", "+\t\tinternalResolve(scope, scope.enclosingSourceType().isStatic());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5e75296e736b8b0b3b77f0706aade7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeParameter.java", "commitBeforeChange": "6781b5445d9813f939573ded9d37ee82c9dbbd15", "commitAfterChange": "6989e5bb4ed8f3be37ea69298930332629e9b475", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolve(ClassScope scope)", "signatureAfterChange": " \t \tpublic void resolve(ClassScope scope)", "diff": ["-\t    // TODO (philippe) add warning for detecting variable name collisions", "+\t    // detect variable/type name collisions", "+\t\tif (this.binding != null) {", "+\t\t\tScope outerScope = scope.parent;", "+\t\t\tBinding existingType = outerScope.getBinding(this.name, Binding.TYPE, this, false);", "+\t\t\tif (existingType != null && this.binding != existingType && existingType.isValidBinding()) {", "+\t\t\t\tscope.problemReporter().typeHiding(this, existingType);", "+\t\t\t}", "+\t\t}"]}], "num": 35847}