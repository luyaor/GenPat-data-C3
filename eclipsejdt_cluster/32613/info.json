{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ebd28df0028ee47fee93b590acb295a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28cbc942f76e3f3ffebb24057f045046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\tif ((field.getAnnotationTagBits() & AnnotationDeprecated) != 0)", "+\t\tif ((field.getAnnotationTagBits() & TagBits.AnnotationDeprecated) != 0)", "-\t\t\t\tif (fieldType == VoidBinding) {", "+\t\t\t\tif (fieldType == TypeBinding.VOID) {", "-\t\t\t\tif (fieldType.isArrayType() && ((ArrayBinding) fieldType).leafComponentType == VoidBinding) {", "+\t\t\t\tif (fieldType.isArrayType() && ((ArrayBinding) fieldType).leafComponentType == TypeBinding.VOID) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2caebf9a10de1c009e436d0c2f0dfd2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (referenceType == VoidBinding) {", "+\t\tif (referenceType == TypeBinding.VOID) {", "-\t\t\t\tTypeBinding dimensionType = dimensions[i].resolveTypeExpecting(scope, IntBinding);", "+\t\t\t\tTypeBinding dimensionType = dimensions[i].resolveTypeExpecting(scope, TypeBinding.INT);", "-\t\t\t\t\tdimensions[i].computeConversion(scope, IntBinding, dimensionType);", "+\t\t\t\t\tdimensions[i].computeConversion(scope, TypeBinding.INT, dimensionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3c7be4bf34452890ef4a8a53e71c81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["-\t\t\t\t\tnew FieldBinding(IncompleteHierarchy, IntBinding, ClassFileConstants.AccPrivate, referenceContext.binding, null);", "+\t\t\t\t\tnew FieldBinding(IncompleteHierarchy, TypeBinding.INT, ClassFileConstants.AccPrivate, referenceContext.binding, null);", "-\t\t\t\treferenceContext.binding.fields = NoFields;", "+\t\t\t\treferenceContext.binding.fields = Binding.NO_FIELDS;", "-\t\t\tfieldBindings[count++] = new FieldBinding(IncompleteHierarchy, IntBinding, ClassFileConstants.AccPrivate, referenceContext.binding, null);", "+\t\t\tfieldBindings[count++] = new FieldBinding(IncompleteHierarchy, TypeBinding.INT, ClassFileConstants.AccPrivate, referenceContext.binding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0123d085bf67583c0db9da2e864b6af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "68fbbc2b696126776a21b18e5e10fb30f89536f0", "commitAfterChange": "dd411ec32d2c716eadc1e7d9bf20b5ee5b59371a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void buildTypeBindings()", "signatureAfterChange": " void buildTypeBindings()", "diff": ["-\t\t\tcurrentPackageName = expectedPackageName.length == 0 ? NoCharChar : expectedPackageName;", "+\t\t\tcurrentPackageName = expectedPackageName.length == 0 ? CharOperation.NO_CHAR_CHAR : expectedPackageName;", "-\tif (currentPackageName == NoCharChar) {", "+\tif (currentPackageName == CharOperation.NO_CHAR_CHAR) {", "-\t\tboolean packageExists = currentPackageName == NoCharChar", "+\t\tboolean packageExists = currentPackageName == CharOperation.NO_CHAR_CHAR"]}], "num": 32613}