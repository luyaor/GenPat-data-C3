{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8275e5f6892a0b26aa9eb242c3fb91b3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df7e9c4c27cd58d55e54768984844fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACE, this.preferences.insert_space_before_opening_brace_in_array_initializer);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACE, this.preferences.insert_space_before_opening_brace_in_array_initializer);", "-\t\t\t\t\t\t\"expressions\",//$NON-NLS-1$", "+\t\t\t\t\t\t\"array_initializer\",//$NON-NLS-1$", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\tfor (int i = 1; i < expressionsLength; i++) {", "-\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_array_initializer) {", "-\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\tif (expressionsLength == 1) {", "+\t\t\t\t\tif (isComma()) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "-\t\t\t\t\texpressions[i].traverse(this, scope);", "-\t\t\t\t\tif (i == expressionsLength - 1) {", "-\t\t\t\t\t\tif (isComma()) {", "-\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 1; i < expressionsLength; i++) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_array_initializer) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\texpressions[i].traverse(this, scope);", "+\t\t\t\t\t\tif (i == expressionsLength - 1) {", "+\t\t\t\t\t\t\tif (isComma()) {", "+\t\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\t}", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE, this.preferences.insert_space_before_closing_brace_in_array_initializer, true); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE, this.preferences.insert_space_before_closing_brace_in_array_initializer, true); ", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE, this.preferences.insert_space_between_empty_array_initializer, true);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE, this.preferences.insert_space_between_empty_array_initializer, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75bb78ee70ba065ad422155f5d7effb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "9fb011fe5b4aca4793efb86f1d3d50e33ecd5617", "commitAfterChange": "3d15a5717b4eb69fe5d37f1951eed2dbd24e7159", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["+\t\t\t\t\t\t\tif (i == expressionsLength - 1) {", "+\t\t\t\t\t\t\t\tif (isComma()) {", "+\t\t\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (i == expressionsLength - 1) {", "+\t\t\t\t\t\tif (isComma()) {", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (isComma()) {", "-\t\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_array_initializer);"]}], "num": 36963}