{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7183583b07a5477c55f83cfd0287901", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c396518a07f467d2eb17fecb9a0d047", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic IType findType(String fullyQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String fullyQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tIType type = null;", "-\t\tNameLookup lookup = null;", "-\t\ttry {", "-\t\t\t// set units to look inside", "-\t\t\tlookup = getNameLookup();", "-\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "-\t\t\tlookup.setUnitsToLookInside(workingCopies);", "-\t\t\t", "-\t\t\t// lookup type", "-\t\t\ttype = lookup.findType(", "-\t\t\t\tfullyQualifiedName,", "-\t\t\t\tfalse,", "-\t\t\t\tNameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);", "-\t\t} finally {", "-\t\t\tif (lookup != null) {", "-\t\t\t\tlookup.setUnitsToLookInside(null);", "-\t\t\t}", "-\t\t}", "+\t\tNameLookup lookup = newNameLookup(owner);", "+\t\tIType type = lookup.findType(", "+\t\t\tfullyQualifiedName,", "+\t\t\tfalse,", "+\t\t\tNameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbf96bc5c156e537cec47a1611bc6c52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tNameLookup lookup = null;", "-\t\ttry {", "-\t\t\t// set units to look inside", "-\t\t\tlookup = getNameLookup();", "-\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "-\t\t\tlookup.setUnitsToLookInside(workingCopies);", "-\t\t\t", "-\t\t\t// lookup type", "-\t\t\treturn lookup.findType(", "-\t\t\t\ttypeQualifiedName, ", "-\t\t\t\tpackageName,", "-\t\t\t\tfalse,", "-\t\t\t\tNameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);", "-\t\t} finally {", "-\t\t\tif (lookup != null) {", "-\t\t\t\tlookup.setUnitsToLookInside(null);", "-\t\t\t}", "-\t\t}", "+\t\tNameLookup lookup = newNameLookup(owner);", "+\t\treturn lookup.findType(", "+\t\t\ttypeQualifiedName, ", "+\t\t\tpackageName,", "+\t\t\tfalse,", "+\t\t\tNameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);"]}], "num": 28157}