{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c95d230104f135c2ecbc50e663fc429", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419e03bd800fee5bfff834a1b9b01206", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\t\t\tint max = typeArgument.length - 1;", "-\t\t\t\tfor (int j = 0; j < max; j++) {", "-\t\t\t\t\ttypeArgument[j].print(0, output);", "-\t\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t\tint typeArgumentLength = typeArgument.length;", "+\t\t\t\tif (typeArgumentLength > 0) {", "+\t\t\t\t\tint max = typeArgumentLength - 1;", "+\t\t\t\t\tfor (int j = 0; j < max; j++) {", "+\t\t\t\t\t\ttypeArgument[j].print(0, output);", "+\t\t\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\ttypeArgument[max].print(0, output);", "-\t\t\t\ttypeArgument[max].print(0, output);", "-\t\t\tint max = typeArgument.length - 1;", "-\t\t\tfor (int j = 0; j < max; j++) {", "-\t\t\t\ttypeArgument[j].print(0, output);", "-\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\tint typeArgumentLength = typeArgument.length;", "+\t\t\tif (typeArgumentLength > 0) {", "+\t\t\t\tint max = typeArgumentLength - 1;", "+\t\t\t\tfor (int j = 0; j < max; j++) {", "+\t\t\t\t\ttypeArgument[j].print(0, output);", "+\t\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\ttypeArgument[max].print(0, output);", "-\t\t\ttypeArgument[max].print(0, output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c7555e477e0b3a8b985d96e74ea312", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6272ddbc393added5976d56f44f1521fcf876495", "commitAfterChange": "a738cdbf5d0b40e078d2ec76d22bcb613279cff6", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": " public int[] getJavaDocPositions()", "signatureAfterChange": " public int[] getJavaDocPositions()", "diff": ["-\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\t// javadoc only (non javadoc comment have negative end positions.)", "-\t\tif (this.scanner.commentStops[i] > 0){", "+\tint max = this.scanner.commentPtr;", "+\tfor (int i = 0; i <= max; i++){", "+\t\t// javadoc only (non javadoc comment have negative start and/or end positions.)", "+\t\tif (this.scanner.commentStarts[i] >= 0 && this.scanner.commentStops[i] > 0) {", "-\tfor (int i = 0, max = this.scanner.commentPtr; i <= max; i++){", "-\t\t// javadoc only (non javadoc comment have negative end positions.)", "-\t\tif (this.scanner.commentStops[i] > 0){", "-\t\t\tpositions[index++] = this.scanner.commentStarts[i];", "-\t\t\tpositions[index++] = this.scanner.commentStops[i]-1; //stop is one over", "+\tfor (int i = 0; i <= max; i++){", "+\t\t// javadoc only (non javadoc comment have negative start and/or end positions.)", "+\t\tint commentStart = this.scanner.commentStarts[i];", "+\t\tif (commentStart >= 0) {", "+\t\t\tint commentStop = this.scanner.commentStops[i];", "+\t\t\tif (commentStop > 0){", "+\t\t\t\tpositions[index++] = commentStart;", "+\t\t\t\tpositions[index++] = commentStop-1; //stop is one over", "+\t\t\t}"]}], "num": 24859}