{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6eab745121323ac6ca33e990b52f6dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0d494ab4a6870cff8fa1eb1152c89f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a8ed44ab293103676897ed9136a7f2a05e2373aa", "commitAfterChange": "e65b63041c8c7cd949117994382bac725ff52855", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "signatureAfterChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "diff": ["-\t\tif (!method.isConstructor())", "-\t\t\treturnType = environment.getTypeFromTypeSignature(wrapper, typeVars, this);", "+\t\t// always retrieve return type (for constructors, its V for void - will be ignored)", "+\t\treturnType = environment.getTypeFromTypeSignature(wrapper, typeVars, this);", "-\t\t\t// attempt to find each superinterface if it exists in the cache (otherwise - resolve it when requested)", "+\t\t\t// attempt to find each exception if it exists in the cache (otherwise - resolve it when requested)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35b77f50eab59ab3e6c3001c11ff1ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "48ab17cbdf3deccaf2dbadd198bb57e5a4382148", "commitAfterChange": "977778c5ffb93962a86b77e68d84b35e620d598d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "signatureAfterChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "diff": ["-\t\t\t\tint startIndex = (method.isConstructor() && isMemberType() && !isStatic()) ? 1 : 0;", "-\t\t\t\tif (startIndex == 1)", "-\t\t\t\t\tenvironment.getTypeFromTypeSignature(wrapper, typeVars, this); // skip synthetic argument", "-\t\t\t\twhile (wrapper.signature[wrapper.start] != ')') {", "+\t\t\t\twhile (wrapper.signature[wrapper.start] != ')')", "-\t\t\t\t}", "-\tif (use15specifics) {", "+\tif (use15specifics)", "-\t}", "-\tfor (int i = 0, length = typeVars.length; i < length; i++) {", "+\tfor (int i = 0, length = typeVars.length; i < length; i++)", "-\t}"]}], "num": 23575}