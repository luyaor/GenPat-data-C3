{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20c4795dc8e33999f1cd074af77489b5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36bea158ff3ef00c97f4683abe3d6ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  protected void updateProblemsFor(String sourceLocation, CompilationResult result) throws CoreException", "signatureAfterChange": "  protected void updateProblemsFor(String sourceLocation, CompilationResult result) throws CoreException", "diff": ["-\tIProblem[] problems = result.getProblems();", "-\tboolean hasNoProblems = problems == null;", "-\tfoundProblem : if (!hasNoProblems) {", "-\t\tfor (int i = 0, length = problems.length; i < length; i++)", "-\t\t\tif (problems[i].getID() != IProblem.Task) break foundProblem;", "-\t\thasNoProblems = true;", "-\t}", "-\tif (hasNoProblems && markers.length == 0) return;", "+\tIProblem[] problems = result.getProblems(); // contains both true problems and todo tasks", "+\tif (problems == null && markers.length == 0 && JavaBuilder.getTasksFor(resource) == null) return;", "-\tJavaBuilder.removeProblemsFor(resource);", "+\tJavaBuilder.removeProblemsAndTasksFor(resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff914bb7f71c461aab7ffa8e42d4d05d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "487518d242da0a7f63289dd927851dff16ea9f7a", "commitAfterChange": "050a9c6e48eb0f6afd9130b84b06f0bc9eaab8cf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected String getEscapedExternalJCLPath()", "signatureAfterChange": " protected String getEscapedExternalJCLPath()", "diff": ["-\tString path = getExternalJCLPath().toString();", "+\treturn getEscapedPath(getExternalJCLPath().toString());", "+}"]}], "num": 17522}