{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6ca9715b542a9f17f4a6c440434f27a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dec5795e7ad00530a7d5e6d21c41f65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "4cf5441fe359583a3d77a31fc213bc74e94cf25e", "commitAfterChange": "40893837639c1eb9109e9994f8211db5f484441a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic static CompilationUnit parseCompilationUnit(char[] source)", "signatureAfterChange": "\r \tpublic static CompilationUnit parseCompilationUnit(\r \t\tchar[] source,\r \t\tString unitName,\r \t\tIJavaProject javaProject)", "diff": ["+\t */\r", "+\tpublic static CompilationUnit parseCompilationUnit(\r", "+\t\tchar[] source,\r", "+\t\tString unitName,\r", "+\t\tIJavaProject javaProject) {\r", "+\t\tCompilationUnitDeclaration compilationUnitDeclaration = null;\r", "+\r", "+\t\tif (javaProject != null) {\r", "+\t\t\t// If resolveBindings is true, we need to record the mod count\r", "+\t\t\t// once newAST has been constructed. If the mod count goes above\r", "+\t\t\t// this level, someone is modifying the AST and all bets are off\r", "+\t\t\t// regarding resolved bindings. All existing binding info should be\r", "+\t\t\t// discarded, and the various public resolveBinding methods should\r", "+\t\t\t// thereafter return null.\r", "+\t\t\ttry {\r", "+\t\t\t\tcompilationUnitDeclaration =\r", "+\t\t\t\t\tCompilationUnitResolver.resolve(\r", "+\t\t\t\t\t\tsource,\r", "+\t\t\t\t\t\tunitName,\r", "+\t\t\t\t\t\tjavaProject,\r", "+\t\t\t\t\t\tnew AbstractSyntaxTreeVisitorAdapter());\r", "+\t\t\t\treturn convert(compilationUnitDeclaration, source);\r", "+\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\treturn parseCompilationUnit(source);\r", "+\t\t}\r", "+\t\treturn null;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6197d628c1ebf6d7f0fb3a1e276491b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project, \t\tWorkingCopyOwner owner)", "diff": ["+\t\t", "+\t\treturn parseCompilationUnit(source, unitName, project, owner, null);", "+\t}", "-\tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options) {", "-\t\tASTConverter converter = new ASTConverter(options, false);"]}], "num": 3970}