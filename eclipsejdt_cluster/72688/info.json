{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70549cf02fad6099a755d5db093c9467", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155dc1406db3e6a66026aca2efc2bf9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprotected void startBuild(Hashtable options) throws IOException, CoreException", "signatureAfterChange": " \tprotected int startBuild(Hashtable options) throws IOException, CoreException", "diff": ["-\tprotected void startBuild(Hashtable options) throws IOException, CoreException {", "+\tprotected int startBuild(Hashtable options) throws IOException, CoreException {", "+\t\tint warnings = 0;", "-\t\t\tassertTrue(", "-\t\t\t\t\"Unexpected marker: \" + marker.getAttribute(IMarker.MESSAGE), ", "-\t\t\t\tIMarker.SEVERITY_ERROR != ((Integer) marker.getAttribute(IMarker.SEVERITY)).intValue());", "-\t\t}", "-\t\tif (DEBUG) System.out.println(\"done\");", "-\t\tcommitMeasurements();", "-\t\tassertPerformance();", "-\t}", "+\t\t\tswitch (((Integer) marker.getAttribute(IMarker.SEVERITY)).intValue()) {", "+\t\t\t\tcase IMarker.SEVERITY_ERROR:", "+\t\t\t\t\tassertTrue(\"Unexpected marker: \" + marker.getAttribute(IMarker.MESSAGE), false);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IMarker.SEVERITY_WARNING:", "+\t\t\t\t\twarnings++;", "+\t\t\t\t\tbreak;", "+\t\tif (DEBUG) System.out.println(\"done\");", "+\t\t{", "+\t\t\tcommitMeasurements();", "+\t\t\tassertPerformance();", "+\t\t}", "+\t\treturn warnings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7068bf869c249f1525d452b23528af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "dcc13bcc231a91a0da132c3e6be02c0dee1633d4", "commitAfterChange": "025681891696756dee175279859f47fc45429f5e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "signatureAfterChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "diff": ["-\t\t\t\tArrays.sort(markers, new Comparator() {", "-\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "-\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "-\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "-\t\t\t\t\t\t\treturn start1 - start2;", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\treturn 0;", "+\t\t\t\tif (markers.length > 1) {", "+\t\t\t\t\tArrays.sort(markers, new Comparator() {", "+\t\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "+\t\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\t\treturn start1 - start2;", "+\t\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t});", "+\t\t\t\t\t});", "+\t\t\t\t}"]}], "num": 72688}