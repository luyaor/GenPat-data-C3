{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2da0a94ae85ceb95a31c7690ff78dfc8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea8b16ddccbae6d0a523165dd93169b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/MethodInfo.java", "commitBeforeChange": "ffcfe0dac7f476f076089d3cdae600b5982efdfb", "commitAfterChange": "263d5090059fdde1fe0ad777198fe1aa5d325a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset, int decodingFlags) \t\tthrows ClassFormatException", "signatureAfterChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset, int decodingFlags) \t\tthrows ClassFormatException", "diff": ["-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleParameterAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeVisibleParameterAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleParameterAnnotationsAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new RuntimeInvisibleParameterAnnotationsAttribute(classFileBytes, constantPool, offset + readOffset);", "-\t\t\t\tthis.attributes[attributesIndex++] = new AnnotationDefaultAttribute(classFileBytes, constantPool, readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new AnnotationDefaultAttribute(classFileBytes, constantPool, offset + readOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93b99c93930eb7130f529d62505af1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tint sourceStart = (int) (((MessageSend) reference).nameSourcePosition >>> 32);", "-\t\tSearchMatch match = locator.newMethodReferenceMatch(element, accuracy, sourceStart, reference.sourceEnd+1, reference);", "+\t\tint offset = (int) (((MessageSend) reference).nameSourcePosition >>> 32);", "+\t\tSearchMatch match = locator.newMethodReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\tSearchMatch match = locator.newMethodReferenceMatch(element, accuracy, reference.sourceStart, reference.sourceEnd+1, reference);", "+\t\tint offset = reference.sourceStart;", "+\t\tSearchMatch match = locator.newMethodReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);"]}], "num": 57044}