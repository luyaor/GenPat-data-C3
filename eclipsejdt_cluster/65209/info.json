{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71dcd85c8a3f8a1d1c76cac906ec7cbd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cfabfe8a6d3bc5828fa96c720a9d235", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "4e6bb96b0e120539a45cc4860f508bf12e097d37", "commitAfterChange": "ffd0667b5086352f304c15ea4ad31de38892668e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tprivate void handleBracedCode(ASTNode node, ASTNode nodeBeforeOpenBrace, String bracePosition, boolean indentBody, \t\t\tboolean newLineInEmpty)", "signatureAfterChange": "  \tprivate void handleBracedCode(ASTNode node, ASTNode nodeBeforeOpenBrace, String bracePosition, boolean indentBody, \t\t\tboolean newLineInEmpty)", "diff": ["+\t\tToken closeBraceToken = this.tm.get(closeBraceIndex);", "+", "+\t\thandleEmptyLinesIndentation(openBraceIndex);", "+", "-\t\t\tthis.tm.get(closeBraceIndex).breakBefore();", "+\t\t\tcloseBraceToken.breakBefore();", "-\t\t\tthis.tm.get(closeBraceIndex).unindent();", "+\t\t\tcloseBraceToken.unindent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0e272c3e4110da62e34f6f8dd0ff42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "2e56c16c054ee89ad0380a5a606694122f7187a1", "commitAfterChange": "9120b6c49a4b36e25b20147789ffde03aca85f97", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(ArrayInitializer node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(ArrayInitializer node)", "diff": ["-\t\tboolean isEmpty = handleEmptyLinesIndentation(openBraceIndex);", "-", "+", "+\t\tboolean isEmpty = openBraceIndex + 1 == closeBraceIndex;", "+\t\tif (isEmpty) {", "+\t\t\taddEmptyLineTokenAfter(openBraceIndex);", "+\t\t\tcloseBraceIndex = this.tm.lastIndexIn(node, TokenNameRBRACE);", "+\t\t}", "+"]}], "num": 65209}