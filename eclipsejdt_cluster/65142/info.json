{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "821289f6098e38df68d611aede6a0b96", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141434c9b884d660a56608f5e977d447", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "83131156491c6d4c0d08e15f25d8dc1f37820d67", "commitAfterChange": "2c70d5c69e8bbbeb311379d260eac66b7938478f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic AssertStatement convert(org.eclipse.jdt.internal.compiler.ast.AssertStatement statement)", "signatureAfterChange": "  \tpublic AssertStatement convert(org.eclipse.jdt.internal.compiler.ast.AssertStatement statement)", "diff": ["+\t\tint end = statement.assertExpression.sourceEnd + 1;", "+\t\t\tend = exceptionArgument.sourceEnd + 1;", "-\t\tassertStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);", "+\t\tint start = statement.sourceStart;", "+\t\tint sourceEnd = retrieveEndingSemiColonPosition(end, compilationUnitSource.length);", "+\t\tassertStatement.setSourceRange(start, sourceEnd - start + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69eb74a1cdae63effe98d3f1f4018b26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "67be753fec1b8f88653e28d3d4d4837dd29cdece", "commitAfterChange": "c76b87d837ed14384819cb84439501329f23edce", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 76, "signatureBeforeChange": "\r \t\r \tpublic TryStatement convert(org.eclipse.jdt.internal.compiler.ast.TryStatement statement)", "signatureAfterChange": "\r \t\r \tpublic TryStatement convert(org.eclipse.jdt.internal.compiler.ast.TryStatement statement)", "diff": ["+\t\t\tint start = statement.tryBlock.sourceEnd;\r", "-\t\t\t\tcatchClause.setSourceRange(catchArguments[i].sourceStart, catchBlocks[i].sourceEnd - catchArguments[i].sourceStart + 1);\t\r", "+\t\t\t\tint catchClauseSourceStart = retrieveStartingCatchPosition(start, catchArguments[i].sourceStart);\r", "+\t\t\t\tcatchClause.setSourceRange(catchClauseSourceStart, catchBlocks[i].sourceEnd - catchClauseSourceStart + 1);\t\r", "+\t\t\t\tstart = catchBlocks[i].sourceEnd;\r"]}], "num": 65142}