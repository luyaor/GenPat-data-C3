{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10822da38e49f76fa99e8ed2b29e6d43", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b691a572c04a69b696ce46782e57c88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "af92ec761864fc440fb8211ae7d1ddf0cccd86d0", "commitAfterChange": "60205bed5116ad3496dacec47d060779de36e647", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tif (this.classpath != null) {\r", "-\t\t\tif (kind == FULL_BUILD) {\r", "+\t\tif (kind == FULL_BUILD) {\r", "+\t\t\tbuildAll();\r", "+\t\t} else {\r", "+\t\t\tif ((this.lastState = getLastState(currentProject)) == null) {\r", "+\t\t\t\tif (DEBUG)\r", "+\t\t\t\t\tSystem.out.println(\"Performing full build since last saved state was not found\"); //$NON-NLS-1$\r", "-\t\t\t} else {\r", "-\t\t\t\tif ((this.lastState = getLastState(currentProject)) == null) {\r", "-\t\t\t\t\tif (DEBUG)\r", "-\t\t\t\t\t\tSystem.out.println(\"Performing full build since last saved state was not found\"); //$NON-NLS-1$\r", "+\t\t\t} else if (hasClasspathChanged() || hasOutputLocationChanged()) {\r", "+\t\t\t\t// if the output location changes, do not delete the binary files from old location\r", "+\t\t\t\t// the user may be trying something\r", "+\t\t\t\tbuildAll();\r", "+\t\t\t} else if (sourceFolders.length > 0) {\r", "+\t\t\t\t// if there is no source to compile & no classpath changes then we are done\r", "+\t\t\t\tSimpleLookupTable deltas = findDeltas();\r", "+\t\t\t\tif (deltas == null)\r", "-\t\t\t\t} else if (hasClasspathChanged() || hasOutputLocationChanged()) {\r", "-\t\t\t\t\t// if the output location changes, do not delete the binary files from old location\r", "-\t\t\t\t\t// the user may be trying something\r", "-\t\t\t\t\tbuildAll();\r", "-\t\t\t\t} else if (sourceFolders.length > 0) {\r", "-\t\t\t\t\t// if there is no source to compile & no classpath changes then we are done\r", "-\t\t\t\t\tSimpleLookupTable deltas = findDeltas();\r", "-\t\t\t\t\tif (deltas == null)\r", "-\t\t\t\t\t\tbuildAll();\r", "-\t\t\t\t\telse\r", "-\t\t\t\t\t\tbuildDeltas(deltas);\r", "-\t\t\t\t}\r", "+\t\t\t\telse\r", "+\t\t\t\t\tbuildDeltas(deltas);\r", "-\t\t\tok = true;\r", "+\t\tok = true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597f71707992e43b78f20b921634fcd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ccc3f585223a02209d9fb1de4b1dae325e3fd665", "commitAfterChange": "9a356484adb65f7cc29bbc7281d74cb6498e9713", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "\r \r protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\tif (this.classpath != null) {\r", "-\t\tif (kind == FULL_BUILD) {\r", "-\t\t\tbuildAll();\r", "-\t\t} else {\r", "-\t\t\tif ((this.lastState = getLastState(currentProject)) == null) {\r", "-\t\t\t\tif (DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Performing full build since last saved state was not found\"); //$NON-NLS-1$\r", "+\t\t\tif (kind == FULL_BUILD) {\r", "-\t\t\t} else if (hasClasspathChanged() || hasOutputLocationChanged()) {\r", "-\t\t\t\t// if the output location changes, do not delete the binary files from old location\r", "-\t\t\t\t// the user may be trying something\r", "-\t\t\t\tbuildAll();\r", "-\t\t\t} else if (sourceFolders.length > 0) {\r", "-\t\t\t\t// if there is no source to compile & no classpath changes then we are done\r", "-\t\t\t\tSimpleLookupTable deltas = findDeltas();\r", "-\t\t\t\tif (deltas == null)\r", "+\t\t\t} else {\r", "+\t\t\t\tif ((this.lastState = getLastState(currentProject)) == null) {\r", "+\t\t\t\t\tif (DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Performing full build since last saved state was not found\"); //$NON-NLS-1$\r", "-\t\t\t\telse\r", "-\t\t\t\t\tbuildDeltas(deltas);\r", "+\t\t\t\t} else if (hasClasspathChanged() || hasOutputLocationChanged()) {\r", "+\t\t\t\t\t// if the output location changes, do not delete the binary files from old location\r", "+\t\t\t\t\t// the user may be trying something\r", "+\t\t\t\t\tbuildAll();\r", "+\t\t\t\t} else if (sourceFolders.length > 0) {\r", "+\t\t\t\t\t// if there is no source to compile & no classpath changes then we are done\r", "+\t\t\t\t\tSimpleLookupTable deltas = findDeltas();\r", "+\t\t\t\t\tif (deltas == null)\r", "+\t\t\t\t\t\tbuildAll();\r", "+\t\t\t\t\telse\r", "+\t\t\t\t\t\tbuildDeltas(deltas);\r", "+\t\t\t\t}\r", "+\t\t\tok = true;\r", "-\t\tok = true;\r"]}], "num": 67638}