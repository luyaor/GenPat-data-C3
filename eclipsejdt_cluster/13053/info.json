{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "803d7efdf79ffb2c1c93ad35cb284c14", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fa177f36e85c4b0b7dd2bf768afd55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryManager.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static void rebindClasspathEntries(String name, boolean remove, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tprivate static void rebindClasspathEntries(String name, boolean remove, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tIWorkspaceRoot root= ResourcesPlugin.getWorkspace().getRoot();", "-\t\tIJavaProject[] projects= JavaCore.create(root).getJavaProjects();", "-\t\tIPath containerPath= new Path(JavaCore.USER_LIBRARY_CONTAINER_ID).append(name);", "-\t\t", "-\t\tArrayList affectedProjects= new ArrayList();", "-\t\t", "-\t\tfor (int i= 0; i < projects.length; i++) {", "-\t\t\tIJavaProject project= projects[i];", "-\t\t\tIClasspathEntry[] entries= project.getRawClasspath();", "-\t\t\tfor (int k= 0; k < entries.length; k++) {", "-\t\t\t\tIClasspathEntry curr= entries[k];", "-\t\t\t\tif (curr.getEntryKind() == IClasspathEntry.CPE_CONTAINER) {", "-\t\t\t\t\tif (containerPath.equals(curr.getPath())) {", "-\t\t\t\t\t\taffectedProjects.add(project);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}\t\t\t\t", "+\t\ttry {", "+\t\t\tif (monitor != null) {", "+\t\t\t\tmonitor.beginTask(\"\", 1); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tIWorkspaceRoot root= ResourcesPlugin.getWorkspace().getRoot();", "+\t\t\tIJavaProject[] projects= JavaCore.create(root).getJavaProjects();", "+\t\t\tIPath containerPath= new Path(JavaCore.USER_LIBRARY_CONTAINER_ID).append(name);", "+\t\t\t", "+\t\t\tArrayList affectedProjects= new ArrayList();", "+\t\t\t", "+\t\t\tfor (int i= 0; i < projects.length; i++) {", "+\t\t\t\tIJavaProject project= projects[i];", "+\t\t\t\tIClasspathEntry[] entries= project.getRawClasspath();", "+\t\t\t\tfor (int k= 0; k < entries.length; k++) {", "+\t\t\t\t\tIClasspathEntry curr= entries[k];", "+\t\t\t\t\tif (curr.getEntryKind() == IClasspathEntry.CPE_CONTAINER) {", "+\t\t\t\t\t\tif (containerPath.equals(curr.getPath())) {", "+\t\t\t\t\t\t\taffectedProjects.add(project);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\t}", "-\t\t}", "-\t\tif (!affectedProjects.isEmpty()) {", "-\t\t\tIJavaProject[] affected= (IJavaProject[]) affectedProjects.toArray(new IJavaProject[affectedProjects.size()]);", "-\t\t\tIClasspathContainer[] containers= new IClasspathContainer[affected.length];", "-\t\t\tif (!remove) {", "-\t\t\t\t// Previously, containers array only contained a null value. Then, user library classpath entry was first removed", "-\t\t\t\t// and then added a while after when post change delta event on .classpath file was fired...", "-\t\t\t\t// Unfortunately, in some cases, this event was fired a little bit too late and missed the refresh of Package Explorer", "-\t\t\t\t// (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=61872)", "-\t\t\t\t// So now, instanciate a new user library classpath container instead which allow to refresh its content immediately", "-\t\t\t\t// as there's no classpath entry removal...", "-\t\t\t\t// Note that it works because equals(Object) method is not overridden for UserLibraryClasspathContainer.", "-\t\t\t\t// If it was, the update wouldn't happen while setting classpath container", "-\t\t\t\t// @see javaCore.setClasspathContainer(IPath, IJavaProject[], IClasspathContainer[], IProgressMonitor)", "-\t\t\t\tUserLibraryClasspathContainer container= new UserLibraryClasspathContainer(name);", "-\t\t\t\tcontainers[0] = container;", "-\t\t\t}", "-\t\t\tJavaCore.setClasspathContainer(containerPath, affected, containers, monitor);", "-\t\t} else {", "+\t\t\tif (!affectedProjects.isEmpty()) {", "+\t\t\t\tIJavaProject[] affected= (IJavaProject[]) affectedProjects.toArray(new IJavaProject[affectedProjects.size()]);", "+\t\t\t\tIClasspathContainer[] containers= new IClasspathContainer[affected.length];", "+\t\t\t\tif (!remove) {", "+\t\t\t\t\t// Previously, containers array only contained a null value. Then, user library classpath entry was first removed", "+\t\t\t\t\t// and then added a while after when post change delta event on .classpath file was fired...", "+\t\t\t\t\t// Unfortunately, in some cases, this event was fired a little bit too late and missed the refresh of Package Explorer", "+\t\t\t\t\t// (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=61872)", "+\t\t\t\t\t// So now, instanciate a new user library classpath container instead which allow to refresh its content immediately", "+\t\t\t\t\t// as there's no classpath entry removal...", "+\t\t\t\t\t// Note that it works because equals(Object) method is not overridden for UserLibraryClasspathContainer.", "+\t\t\t\t\t// If it was, the update wouldn't happen while setting classpath container", "+\t\t\t\t\t// @see javaCore.setClasspathContainer(IPath, IJavaProject[], IClasspathContainer[], IProgressMonitor)", "+\t\t\t\t\tUserLibraryClasspathContainer container= new UserLibraryClasspathContainer(name);", "+\t\t\t\t\tcontainers[0] = container;", "+\t\t\t\t}", "+\t\t\t\tJavaCore.setClasspathContainer(containerPath, affected, containers, monitor == null ? null : new SubProgressMonitor(monitor, 1));", "+\t\t\t} ", "+\t\t} finally {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979430da014bfc6db58961940f50627b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void searchAllSecondaryTypeNames(IPackageFragmentRoot[] sourceFolders, final IRestrictedAccessTypeRequestor nameRequestor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllSecondaryTypeNames( \t\t\tIPackageFragmentRoot[] sourceFolders, \t\t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\tpublic void searchAllSecondaryTypeNames(IPackageFragmentRoot[] sourceFolders, final IRestrictedAccessTypeRequestor nameRequestor)  throws JavaModelException {", "+\tpublic void searchAllSecondaryTypeNames(", "+\t\t\tIPackageFragmentRoot[] sourceFolders,", "+\t\t\tfinal IRestrictedAccessTypeRequestor nameRequestor,", "+\t\t\tIProgressMonitor progressMonitor)  throws JavaModelException {", "-\t", "+", "+\t\tif (progressMonitor != null) {", "+\t\t\tprogressMonitor.beginTask(Messages.engine_searching, 100); ", "+\t\t}", "-\t\t\tnull);\t", "+\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 100));"]}], "num": 13053}