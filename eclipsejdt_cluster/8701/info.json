{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b86a906c3a451cdd07c1e84d1fee7cb5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1490b38d76dcb7aa3567919104682073", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "8e7310b027923e6b6fb7ffbf5b72521e2be7c944", "commitAfterChange": "86d1359a1bdc418f91cedcb516834615291bb2a0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  static char[][][] internQualifiedNames(char[][][] qualifiedNames)", "signatureAfterChange": "  static char[][][] internQualifiedNames(char[][][] qualifiedNames)", "diff": ["-\t\tArrayList internedNames = InternedQualifiedNames[qLength <= MaxQualifiedNames ? qLength - 1 : 0];", "-\t\tfor (int j = 0, m = internedNames.size(); j < m; j++) {", "-\t\t\tchar[][] internedName = (char[][]) internedNames.get(j);", "-\t\t\tif (CharOperation.equals(qualifiedName, internedName)) {", "-\t\t\t\tkeepers[index++] = internedName;", "-\t\t\t\tcontinue next;", "-\t\t\t}", "-\t\t}", "+\t\tQualifiedNameSet internedNames = InternedQualifiedNames[qLength <= MaxQualifiedNames ? qLength - 1 : 0];", "-\t\tinternedNames.add(qualifiedName);", "-\t\tkeepers[index++] = qualifiedName;", "+\t\tkeepers[index++] = internedNames.add(qualifiedName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78498278f6ea57eb76b0a64caaa35079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "8e7310b027923e6b6fb7ffbf5b72521e2be7c944", "commitAfterChange": "86d1359a1bdc418f91cedcb516834615291bb2a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  static char[][] internSimpleNames(char[][] simpleNames, boolean removeWellKnown)", "signatureAfterChange": "  static char[][] internSimpleNames(char[][] simpleNames, boolean removeWellKnown)", "diff": ["-\t\tArrayList internedNames = InternedSimpleNames[sLength < MaxSimpleNames ? sLength : 0];", "-\t\tfor (int j = 0, m = internedNames.size(); j < m; j++) {", "-\t\t\tchar[] internedName = (char[]) internedNames.get(j);", "-\t\t\tif (CharOperation.equals(name, internedName)) {", "-\t\t\t\tkeepers[index++] = internedName;", "-\t\t\t\tcontinue next;", "-\t\t\t}", "-\t\t}", "-\t\tinternedNames.add(name);", "-\t\tkeepers[index++] = name;", "+\t\tNameSet internedNames = InternedSimpleNames[sLength < MaxSimpleNames ? sLength : 0];", "+\t\tkeepers[index++] = internedNames.add(name);"]}], "num": 8701}