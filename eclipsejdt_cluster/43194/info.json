{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea2ca41ee25c532836743f96085b037e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c5498aff1593f644ae0cda1763b93b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "diff": ["-\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\t\tboolean hasRestrictedAccess = field.declaringClass.hasRestrictedAccess();", "-//\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ab300ec95ca219ae8fa588f08da4c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed)", "diff": ["-\t\t\t", "-\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\tboolean hasRestrictedAccess = field.declaringClass.hasRestrictedAccess();", "-//\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4abd19f49fb0f79e4f462f8699aba938", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "signatureAfterChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "diff": ["-", "-\t\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\t\tboolean hasRestrictedAccess = field.declaringClass.hasRestrictedAccess();", "-//\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53cb1e3aba669c62291ffd4dac4fbda6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tprivate void findImportsOfStaticMethdods(char[] methodName, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void findImportsOfStaticMethdods(char[] methodName, ReferenceBinding ref)", "diff": ["-\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\t\tboolean hasRestrictedAccess = method.declaringClass.hasRestrictedAccess();", "-//\t\t\t\tif (this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\t", "-\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6199ddce1312306c543cde7a070693e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t", "-\t\t\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\t\t\tboolean hasRestrictedAccess = constructor.declaringClass.hasRestrictedAccess();", "-//\t\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a24cd85d3403bec14998ba60860e1f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\t\t\t\t\tboolean hasRestrictedAccess = typeBinding.hasRestrictedAccess();", "-//\t\t\t\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue;", "-\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82ec7657c6b88b8072c6a10797123042", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\t\tboolean hasRestrictedAccess = false;", "-//\t\t\tboolean hasRestrictedAccess = method.declaringClass.hasRestrictedAccess();", "-//\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "-\t\t\t", "-\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a148f6b5842408054b3da58dd742b8bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "11c24986fc925cfc43f4c88e72e0daee39a1576b", "commitAfterChange": "55350d5af8386833b94a470ab6a0d389ee3fc665", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t", "+\t\t\t\t\t", "+\t\t\t\t\tboolean hasRestrictedAccess = false;", "+//\t\t\t\t\tboolean hasRestrictedAccess = constructor.declaringClass.hasRestrictedAccess();", "+//\t\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "+\t\t\t\t\t", "+\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);"]}], "num": 43194}