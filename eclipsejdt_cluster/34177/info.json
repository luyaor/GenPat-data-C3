{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbab00a2f2e3b22cdbf7a3dd6ee6c95a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45fee79a2778a88bd9ec46cfa312aa76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  \tprotected Comment createComment(int[] positions)", "signatureAfterChange": "  \tprotected Comment createComment(int[] positions)", "diff": ["-\t\t\tif (positions[0]>0) { // Block comment have positive start position", "+\t\t\tif (positions[0] == 0) { // we cannot know without testing chars again", "+\t\t\t\tif (this.docParser.scanner.source[1] == '/') {", "+\t\t\t\t\tcomment = new LineComment(this.ast);", "+\t\t\t\t} else {", "+\t\t\t\t\tcomment = new BlockComment(this.ast);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\telse if (positions[0]>0) { // Block comment have positive start position"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a4c340e82f29f417c65432b3489ed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\tif (hasLocalType[i]) // NB: no-op if method bodies have been already parsed", "+\t\t\t\t\tif (hasLocalType[i]) { // NB: no-op if method bodies have been already parsed", "+\t\t\t\t\t\tif (monitor != null && monitor.isCanceled())", "+\t\t\t\t\t\t\tthrow new OperationCanceledException();", "+\t\t\t\t\t}", "+\t\t\t\t\tif (monitor != null && monitor.isCanceled())", "+\t\t\t\t\t\tthrow new OperationCanceledException();"]}], "num": 34177}