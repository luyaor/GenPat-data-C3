{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "113874e8e1c33ca541201bf38fb673ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20af08e24a4ef63c49024f4873a7dea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "a5822e4abe91eaf0fe1933bbc495dc0385983f17", "commitAfterChange": "104e672748818fb3397c541d035cd02e71d1053c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic FlowContext getTargetContextForContinueLabel(char[] labelName)", "signatureAfterChange": " public FlowContext getTargetContextForContinueLabel(char[] labelName)", "diff": ["-\t */", "-\tpublic FlowContext getTargetContextForContinueLabel(char[] labelName) {", "-", "-\t\tFlowContext current = this;", "-\t\tFlowContext lastContinuable = null;", "-\t\tFlowContext lastNonReturningSubRoutine = null;", "-", "-\t\twhile (current != null) {", "-\t\t\tif (current.isNonReturningContext()) {", "-\t\t\t\tlastNonReturningSubRoutine = current;", "-\t\t\t} else {", "-\t\t\t\tif (current.isContinuable()) {", "-\t\t\t\t\tlastContinuable = current;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "-\t\t\tchar[] currentLabelName;", "-\t\t\tif ((currentLabelName = current.labelName()) != null && CharOperation.equals(currentLabelName, labelName)) {", "-", "-\t\t\t\t// matching label found\t\t\t\t\t", "-\t\t\t\tif ((lastContinuable != null)", "-\t\t\t\t\t\t&& (current.associatedNode.concreteStatement()\t== lastContinuable.associatedNode)) {", "-\t\t\t\t    ", "-\t\t\t\t\tif (lastNonReturningSubRoutine == null) return lastContinuable;", "-\t\t\t\t\treturn lastNonReturningSubRoutine;", "-\t\t\t\t} ", "-\t\t\t\t// label is found, but not a continuable location", "-\t\t\t\treturn NotContinuableContext;", "-\t\t\t}", "-\t\t\tcurrent = current.parent;", "-\t\t}", "-\t\t// not found", "-\t\treturn null;", "-\t}", "+ */", "+public FlowContext getTargetContextForContinueLabel(char[] labelName) {", "+\tFlowContext current = this;", "+\tFlowContext lastContinuable = null;", "+\tFlowContext lastNonReturningSubRoutine = null;", "+", "+\twhile (current != null) {", "+\t\tif (current.isNonReturningContext()) {", "+\t\t\tlastNonReturningSubRoutine = current;", "+\t\t} else {", "+\t\t\tif (current.isContinuable()) {", "+\t\t\t\tlastContinuable = current;", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tchar[] currentLabelName;", "+\t\tif ((currentLabelName = current.labelName()) != null && CharOperation.equals(currentLabelName, labelName)) {", "+\t\t\t((LabeledStatement)current.associatedNode).bits |= ASTNode.LabelUsed;", "+", "+\t\t\t// matching label found\t\t\t\t\t", "+\t\t\tif ((lastContinuable != null)", "+\t\t\t\t\t&& (current.associatedNode.concreteStatement()\t== lastContinuable.associatedNode)) {", "+\t\t\t    ", "+\t\t\t\tif (lastNonReturningSubRoutine == null) return lastContinuable;", "+\t\t\t\treturn lastNonReturningSubRoutine;", "+\t\t\t} ", "+\t\t\t// label is found, but not a continuable location", "+\t\t\treturn NotContinuableContext;", "+\t\t}", "+\t\tcurrent = current.parent;", "+\t}", "+\t// not found", "+\treturn null;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "befa4778f2b4b4ebc0ccdcc2b4a050af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "a5822e4abe91eaf0fe1933bbc495dc0385983f17", "commitAfterChange": "104e672748818fb3397c541d035cd02e71d1053c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic FlowContext getTargetContextForBreakLabel(char[] labelName)", "signatureAfterChange": " public FlowContext getTargetContextForBreakLabel(char[] labelName)", "diff": ["-\t */", "-\tpublic FlowContext getTargetContextForBreakLabel(char[] labelName) {", "-", "-\t\tFlowContext current = this, lastNonReturningSubRoutine = null;", "-\t\twhile (current != null) {", "-\t\t\tif (current.isNonReturningContext()) {", "-\t\t\t\tlastNonReturningSubRoutine = current;", "-\t\t\tchar[] currentLabelName;", "-\t\t\tif (((currentLabelName = current.labelName()) != null)", "-\t\t\t\t&& CharOperation.equals(currentLabelName, labelName)) {", "-\t\t\t\tif (lastNonReturningSubRoutine == null)", "-\t\t\t\t\treturn current;", "-\t\t\t\treturn lastNonReturningSubRoutine;", "-\t\t\t}", "-\t\t\tcurrent = current.parent;", "-\t\t}", "-\t\t// not found", "-\t\treturn null;", "-\t}", "+ */", "+public FlowContext getTargetContextForBreakLabel(char[] labelName) {", "+\tFlowContext current = this, lastNonReturningSubRoutine = null;", "+\twhile (current != null) {", "+\t\tif (current.isNonReturningContext()) {", "+\t\t\tlastNonReturningSubRoutine = current;", "+\t\t}", "+\t\tchar[] currentLabelName;", "+\t\tif (((currentLabelName = current.labelName()) != null)", "+\t\t\t&& CharOperation.equals(currentLabelName, labelName)) {", "+\t\t\t((LabeledStatement)current.associatedNode).bits |= ASTNode.LabelUsed;", "+\t\t\tif (lastNonReturningSubRoutine == null)", "+\t\t\t\treturn current;", "+\t\t\treturn lastNonReturningSubRoutine;", "+\t\t}", "+\t\tcurrent = current.parent;", "+\t}", "+\t// not found", "+\treturn null;", "+}"]}], "num": 13119}