{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b927ca806c0681afe79cf3998b79fcd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33788eb0a357af41771eeadd530c8754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BranchStatement.java", "commitBeforeChange": "17d4fac2e2145f81ae8773e6bd604f552ec24c76", "commitAfterChange": "8f4037084194a0a8c6b51e4ac889744e5d6e68a8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["+\t\t\t\t\tif (this.initStateIndex != -1) {", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.initStateIndex);", "+\t\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.initStateIndex);", "+\t\t\t\t\t}\t\t\t\t\t", "+\tif (this.initStateIndex != -1) {", "+\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.initStateIndex);", "+\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.initStateIndex);", "+\t}\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58d48c9d2861de3cd31bc7358423ab24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "fa632e87587c69f11b6e90d1ed0b778dff40b23c", "commitAfterChange": "074bcf8e02160c02f4c4edb70f2f1ade7ede52b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (valueIfTrueType == NullBinding) {", "+\t\t\t\tvalueIfTrue.computeConversion(scope, valueIfTrueType, originalValueIfTrueType);", "+\t\t\t\tvalueIfFalse.computeConversion(scope, valueIfFalseType, originalValueIfFalseType);", "+\t\t\t\treturn this.resolvedType = valueIfFalseType;", "+\t\t\t} else if (valueIfFalseType == NullBinding) {", "+\t\t\t\tvalueIfTrue.computeConversion(scope, valueIfTrueType, originalValueIfTrueType);", "+\t\t\t\tvalueIfFalse.computeConversion(scope, valueIfFalseType, originalValueIfFalseType);", "+\t\t\t\treturn this.resolvedType = valueIfTrueType;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94cf9506d8ba1207611faf182e7c19cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\tLabel falseLabel;", "+\t\t\tLabel falseLabel = null;", "-\t\t\t\t(falseLabel = new Label(codeStream)),", "+\t\t\t\thasElsePart ? (falseLabel = new Label(codeStream)) : endifLabel,", "-\t\t\tif (hasElsePart && !thenExit) {", "-\t\t\t\tthis.thenStatement.branchChainTo(endifLabel);", "-\t\t\t\tint position = codeStream.position;", "-\t\t\t\tcodeStream.goto_(endifLabel);", "-\t\t\t\tcodeStream.updateLastRecordedEndPC((this.thenStatement instanceof Block) ? ((Block) this.thenStatement).scope : currentScope, position);", "-\t\t\t\t//goto is tagged as part of the thenAction block", "-\t\t\t}", "-\t\t\tfalseLabel.place();", "-\t\t} else {", "-\t\t\t\t// generate boolean condition", "-\t\t\t\tthis.condition.generateOptimizedBoolean(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tcodeStream,", "-\t\t\t\t\tendifLabel,", "-\t\t\t\t\tnull,", "-\t\t\t\t\ttrue);", "-\t\t\t} else {", "-\t\t\t\t// generate condition side-effects", "-\t\t\t\tthis.condition.generateCode(currentScope, codeStream, false);", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\tif (!thenExit) {", "+\t\t\t\t\tthis.thenStatement.branchChainTo(endifLabel);", "+\t\t\t\t\tint position = codeStream.position;", "+\t\t\t\t\tcodeStream.goto_(endifLabel);", "+\t\t\t\t\t//goto is tagged as part of the thenAction block", "+\t\t\t\t\tcodeStream.updateLastRecordedEndPC((this.thenStatement instanceof Block) ? ((Block) this.thenStatement).scope : currentScope, position);", "+\t\t\t\t\t// generate else statement", "+\t\t\t\t}", "+\t\t\t\t// May loose some local variable initializations : affecting the local variable attributes", "+\t\t\t\tif (elseInitStateIndex != -1) {", "+\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "+\t\t\t\t\t\tcurrentScope,", "+\t\t\t\t\t\telseInitStateIndex);", "+\t\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, elseInitStateIndex);", "+\t\t\t\t}", "+\t\t\t\tif (falseLabel != null) falseLabel.place();", "+\t\t\t\tthis.elseStatement.generateCode(currentScope, codeStream);", "-\t\t}", "-\t\t// generate else statement", "-\t\tif (hasElsePart) {", "+\t\t} else if (hasElsePart) {", "+\t\t\t// generate boolean condition", "+\t\t\tthis.condition.generateOptimizedBoolean(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tcodeStream,", "+\t\t\t\tendifLabel,", "+\t\t\t\tnull,", "+\t\t\t\ttrue);", "+\t\t\t// generate else statement", "+\t\t} else {", "+\t\t\t// generate condition side-effects", "+\t\t\tthis.condition.generateCode(currentScope, codeStream, false);", "+\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "-\t\tendifLabel.place();", "+\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "+\t\tendifLabel.place();"]}], "num": 45636}