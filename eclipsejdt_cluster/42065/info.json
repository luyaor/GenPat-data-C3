{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e7bf852c5ccd7be3b98f8cb1f95fcc9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c49ce30cb4954d8bbe60513b18c4f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "30cfa99848b2d4ca7841137f88e58fc103dc0cf8", "commitAfterChange": "20f29ecb7dccc0201fa2b6e954033a0394345c38", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void computeTypeRange() throws JavaModelException", "signatureAfterChange": " \tprivate void computeTypeRange() throws JavaModelException", "diff": ["-\t\t * Check out to cut off the hierarchy see 119844", "-\t\t * We remove what the contents between the start of class data and the first <P>", "+\t\t * Cut off the type hierarchy, see bug 119844.", "+\t\t * We remove the contents between the start of class data and where", "+\t\t * we guess the actual class comment starts.", "-\t\tint indexOfFirstParagraph = CharOperation.indexOf(\"<P>\".toCharArray(), this.content, false, start); //$NON-NLS-1$", "-\t\tif (indexOfFirstParagraph != -1 && indexOfFirstParagraph < indexOfNextSummary) {", "-\t\t\tstart = indexOfFirstParagraph;", "+\t\tint indexOfFirstParagraph = CharOperation.indexOf(JavadocConstants.P.toCharArray(), this.content, false, start, indexOfNextSummary);", "+\t\tint indexOfFirstDiv = CharOperation.indexOf(JavadocConstants.DIV_CLASS_BLOCK.toCharArray(), this.content, false, start, indexOfNextSummary);", "+\t\tint afterHierarchy = indexOfNextSummary;", "+\t\tif (indexOfFirstParagraph != -1 && indexOfFirstParagraph < afterHierarchy) {", "+\t\t\tafterHierarchy = indexOfFirstParagraph;", "+\t\t}", "+\t\tif (indexOfFirstDiv != -1 && indexOfFirstDiv < afterHierarchy) {", "+\t\t\tafterHierarchy = indexOfFirstDiv;", "+\t\t}", "+\t\tif (afterHierarchy != indexOfNextSummary) {", "+\t\t\tstart = afterHierarchy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b762a92e0779282078d39f05c7373aeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavadocContents.java", "commitBeforeChange": "9591154d216db8069dcf00f13824c9c7304facc1", "commitAfterChange": "cc88b1426c452c5cff46c8e175553c1f137ac328", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void computeTypeRange() throws JavaModelException", "signatureAfterChange": " \tprivate void computeTypeRange() throws JavaModelException", "diff": ["-\t\t * Check out to cut off the hierarchy see 119844", "-\t\t * We remove what the contents between the start of class data and the first <P>", "+\t\t * Cut off the type hierarchy, see bug 119844.", "+\t\t * We remove the contents between the start of class data and where", "+\t\t * we guess the actual class comment starts.", "-\t\tint indexOfFirstParagraph = CharOperation.indexOf(\"<P>\".toCharArray(), this.content, false, start); //$NON-NLS-1$", "-\t\tif (indexOfFirstParagraph != -1 && indexOfFirstParagraph < indexOfNextSummary) {", "-\t\t\tstart = indexOfFirstParagraph;", "+\t\tint indexOfFirstParagraph = CharOperation.indexOf(JavadocConstants.P.toCharArray(), this.content, false, start, indexOfNextSummary);", "+\t\tint indexOfFirstDiv = CharOperation.indexOf(JavadocConstants.DIV_CLASS_BLOCK.toCharArray(), this.content, false, start, indexOfNextSummary);", "+\t\tint afterHierarchy = indexOfNextSummary;", "+\t\tif (indexOfFirstParagraph != -1 && indexOfFirstParagraph < afterHierarchy) {", "+\t\t\tafterHierarchy = indexOfFirstParagraph;", "+\t\t}", "+\t\tif (indexOfFirstDiv != -1 && indexOfFirstDiv < afterHierarchy) {", "+\t\t\tafterHierarchy = indexOfFirstDiv;", "+\t\t}", "+\t\tif (afterHierarchy != indexOfNextSummary) {", "+\t\t\tstart = afterHierarchy;"]}], "num": 42065}