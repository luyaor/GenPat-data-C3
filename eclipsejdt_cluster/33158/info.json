{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fede01ebf93ffa6bb9590b00e415e940", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07ad753f7e356ffe057346200fc702ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "65bc58d731b2b7495611004f31fbf68869bf0c34", "commitAfterChange": "a618dea008dd005a2062d94159d61d7900b021b7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t ParameterizedGenericMethodBinding getParameterizedGenericMethodBinding(MethodBinding methodBinding, CompilationUnitResolver resolver)", "signatureAfterChange": " \t ParameterizedGenericMethodBinding getParameterizedGenericMethodBinding(MethodBinding methodBinding)", "diff": ["-\t ParameterizedGenericMethodBinding getParameterizedGenericMethodBinding(MethodBinding methodBinding, CompilationUnitResolver resolver) {", "+\t ParameterizedGenericMethodBinding getParameterizedGenericMethodBinding(MethodBinding methodBinding) {", "-\t\t\tBinding argument = getCompilerBinding(resolver);", "+\t\t\tBinding argument = getCompilerBinding();", "-\t \treturn new ParameterizedGenericMethodBinding(methodBinding, arguments, resolver.lookupEnvironment);", "+\t \treturn new ParameterizedGenericMethodBinding(methodBinding, arguments, this.environment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2428701d28e436f79caa1242e59b7da1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "985bbf877eb7f0470a093f3a8cf5e47ddbe7045f", "commitAfterChange": "6d56fa2ff304c66dffb3921f7844c0b14acec01a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "signatureAfterChange": " \tprivate static ParameterizedGenericMethodBinding inferFromArgumentTypes(Scope scope, MethodBinding originalMethod, TypeBinding[] arguments, TypeBinding[] parameters, Map collectedSubstitutes, TypeBinding[] substitutes)", "diff": ["-\t\t\treturn new ParameterizedGenericMethodBinding(originalMethod, (RawTypeBinding)null, scope.environment());", "+\t\t\treturn scope.environment().createParameterizedGenericMethod(originalMethod, (RawTypeBinding)null);", "-\t\treturn new ParameterizedGenericMethodBinding(originalMethod, resolvedSubstitutes, scope.environment());\t\t", "+\t\treturn scope.environment().createParameterizedGenericMethod(originalMethod, resolvedSubstitutes);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fadc768261c96d8bffc4c4ef3c8b892", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "985bbf877eb7f0470a093f3a8cf5e47ddbe7045f", "commitAfterChange": "6d56fa2ff304c66dffb3921f7844c0b14acec01a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void consumeParameterizedGenericMethod()", "signatureAfterChange": "  \tpublic void consumeParameterizedGenericMethod()", "diff": ["-\t\t\tthis.methodBinding = new ParameterizedGenericMethodBinding(this.methodBinding, (RawTypeBinding) null, this.environment);", "+\t\t\tthis.methodBinding = this.environment.createParameterizedGenericMethod(this.methodBinding, (RawTypeBinding) null);", "-\t \t\tthis.methodBinding = new ParameterizedGenericMethodBinding(this.methodBinding, arguments, this.environment);", "+\t \t\tthis.methodBinding = this.environment.createParameterizedGenericMethod(this.methodBinding, arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1a8556bf70237d9ef48033e815226dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "1ddc6abfe5d6cd8ad8c71d5100cfa53f4e84487a", "commitAfterChange": "9043b6a8e4132c7e53a6fb980711e9a0982fef9b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "diff": ["-\t\tParameterizedGenericMethodBinding methodSubstitute = null;", "+\t\tif (invocationSite.checkingPotentialCompatibility()) {", "+\t\t\t// Not interested in a solution, only that there could potentially be one.", "+\t\t\treturn scope.environment().createParameterizedGenericMethod(originalMethod, typeVariables);", "+\t\t}", "+\t\t", "+\t\tParameterizedGenericMethodBinding methodSubstitute = null;", "-\t\t", "-\t\tif (invocationSite.checkingPotentialCompatibility()) {", "-\t\t\treturn scope.environment().createParameterizedGenericMethod(originalMethod, typeVariables);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25e588e6b174188a2e7c092932c3ade", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "93b9a714e06865506483806f65cbe1e5a927344c", "commitAfterChange": "3af157fbd00b58fecb02a576cde9c4829d0022e5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void consumeParameterizedMethod()", "signatureAfterChange": "  \tpublic void consumeParameterizedMethod()", "diff": ["-\t\tif (arguments.length != this.methodBinding.typeVariables().length) return;", "-\t \tthis.methodBinding = new ParameterizedGenericMethodBinding(this.methodBinding, arguments, this.environment);", "+\t\tif (arguments.length != this.methodBinding.typeVariables().length)", "+\t\t\tthis.methodBinding = new ParameterizedGenericMethodBinding(this.methodBinding, (RawTypeBinding) null, this.environment);", "+\t\telse", "+\t \t\tthis.methodBinding = new ParameterizedGenericMethodBinding(this.methodBinding, arguments, this.environment);"]}], "num": 33158}