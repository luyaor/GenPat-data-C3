{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "558d175aa5660d275fe98a578b2637da", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1ec93b72a59848053cd3f117baf950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "241d64f631bbf77014d4fbfc8f74f781b65e5c36", "commitAfterChange": "42e53b3c82f631cac5341438af4d88461f281652", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate void verifyNameBindings(Name name)", "signatureAfterChange": " \tprivate void verifyNameBindings(Name name)", "diff": ["-\t\t\t\tassumeNull(this.prefix+name+\" binding at <\"+nameStart+\"> should be null!\", binding);", "+\t\t\t\tassumeNull(this.prefix+name+\" binding should be null!\", binding);", "-\t\t\t\tassumeNotNull(this.prefix+name+\" binding at <\"+nameStart+\"> was not found!\", binding);", "+\t\t\t\tassumeNotNull(this.prefix+name+\" binding was not found!\", binding);", "-\t\t\t\t\tassumeNull(this.prefix+simpleName+\" binding at <\"+simpleNameStart+\"> should be null!\", binding);", "+\t\t\t\t\tassumeNull(this.prefix+simpleName+\" binding should be null!\", binding);", "-\t\t\t\t\tassumeNotNull(this.prefix+simpleName+\" binding at <\"+simpleNameStart+\"> was not found!\", binding);", "+\t\t\t\t\tassumeNotNull(this.prefix+simpleName+\" binding was not found!\", binding);", "-\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type at <\"+simpleNameStart+\">\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type!\", IBinding.PACKAGE, binding.getKind());", "-\t\t\t\t\tassumeNull(this.prefix+name+\" binding at <\"+nameStart+\"> should be null!\", binding);", "+\t\t\t\t\tassumeNull(this.prefix+name+\" binding should be null!\", binding);", "-\t\t\t\t\tassumeNotNull(this.prefix+name+\" binding at <\"+nameStart+\"> was not found!\", binding);", "+\t\t\t\t\tassumeNotNull(this.prefix+name+\" binding was not found!\", binding);", "-\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type at <\"+nameStart+\">\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\t\tassumeEquals(this.prefix+\"Wrong binding type!\", IBinding.PACKAGE, binding.getKind());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8a5546985c3f47c17e1d2adab29df4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "241d64f631bbf77014d4fbfc8f74f781b65e5c36", "commitAfterChange": "42e53b3c82f631cac5341438af4d88461f281652", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["+\t\tASTNode previousFragment = null;", "-\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference '\"+previousFragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference at <\"+fragmentStart+\"> in '\"+fragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference '\"+previousFragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding at <\"+fragmentStart+\"> was not found!\", methodRef.getName().resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding at <\"+fragmentStart+\"> was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\tpreviousFragment = fragment;", "-\t\tassumeTrue(this.prefix+\"Reference at <\"+tagElementStart+\"> in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassumeTrue(this.prefix+\"Reference '\"+(previousFragment==null?tagElement:previousFragment)+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}], "num": 27557}