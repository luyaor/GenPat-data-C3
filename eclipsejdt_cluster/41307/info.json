{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64b8419339de0353749059eff3881ca5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6651fe1b2cda98474f0ae3279200f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c2933480c6efd86534d66414d0baa0527f76ca45", "commitAfterChange": "723628e20cdcca3d7368991555fbb1e08f7222a1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["+\t\tString[] patterns = getExclusionPatterns();", "+\t\tif (patterns != null) {", "+\t\t\tbuffer.append(\"[excluding:\"); //$NON-NLS-1$", "+\t\t\tfor (int i = 0, length = patterns.length; i < length; i++) {", "+\t\t\t\tbuffer.append(patterns[i]);", "+\t\t\t\tif (i != length-1) {", "+\t\t\t\t\tbuffer.append('|');", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbuffer.append(']');", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356cace4e01e996bb669c24ddf29af87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "8d0a5299117e5fc84e729116ac52feef1385b968", "commitAfterChange": "527793c3501c0044ba7f65ec00ff957c7a149690", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected static Element getEntryAsXMLElement( \t\tDocument document, \t\tIClasspathEntry entry, \t\tIPath prefixPath) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected static Element getEntryAsXMLElement( \t\tDocument document, \t\tIClasspathEntry entry, \t\tIPath prefixPath) \t\tthrows JavaModelException", "diff": ["+\t\t}", "+\t\t", "+\t\tString[] exclusionPatterns;", "+\t\tif ((exclusionPatterns = entry.getExclusionPatterns()) != null) {", "+\t\t\tStringBuffer excludeRule = new StringBuffer(10);", "+\t\t\tfor (int i = 0, max = exclusionPatterns.length; i < max; i++){", "+\t\t\t\tif (i > 0) excludeRule.append('|');", "+\t\t\t\texcludeRule.append(exclusionPatterns[i]);", "+\t\t\t}", "+\t\t\telement.setAttribute(\"excluding\", excludeRule.toString());  //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91326034364f4e17e801061cbccc57bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "1711cd3c2a5b80208f9ca8c0106649ad2ac334e9", "commitAfterChange": "a1b95807b51dd3bce9c0bff1093436d199739dfa", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\tthis.key = buffer.toString();", "+\t\t\t\t\tITypeBinding[] typeArgs = this.getTypeArguments();", "+\t\t\t\t\tfinal int typeArgsLength = typeArgs.length;", "+\t\t\t\t\tif (typeArgsLength != 0) {", "+\t\t\t\t\t\tbuffer.append('<');", "+\t\t\t\t\t\tfor (int i = 0; i < typeArgsLength; i++) {", "+\t\t\t\t\t\t\tbuffer.append(typeArgs[i].getKey());", "+\t\t\t\t\t\t\tif (i != typeArgsLength - 1) {", "+\t\t\t\t\t\t\t\tbuffer.append(',');", "+\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbuffer.append('>');", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.key = String.valueOf(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4203f06ab42ef6d415ca25a21d3788", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "be247eb150a4ae64408d691fa5f52cc64cf01665", "commitAfterChange": "560772312173d5112198fae503105dd04e5536f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void assertDeltas(String message, String expected)", "signatureAfterChange": " protected void assertDeltas(String message, String expected)", "diff": ["+\t\tIResourceDelta[] nonJavaProjects = deltas[i].getResourceDeltas();", "+\t\tif (nonJavaProjects != null) {", "+\t\t\tfor (int j=0, nonJavaProjectsLength=nonJavaProjects.length; j<nonJavaProjectsLength; j++) {", "+\t\t\t\tif (j == 0 && buffer.length() != 0) {", "+\t\t\t\t\tbuffer.append(\"\\n\");", "+\t\t\t\t}", "+\t\t\t\tbuffer.append(nonJavaProjects[j]);", "+\t\t\t\tif (j != nonJavaProjectsLength-1) {", "+\t\t\t\t\tbuffer.append(\"\\n\");", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 41307}