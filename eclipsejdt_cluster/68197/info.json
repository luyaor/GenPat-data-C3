{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6625f4eb6afb5dbf79d49cd1ef46e5f2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4c20d710407d1290a762a0a392ce32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "6e6f51aebf98352a0ce0c363fefcb4659f1b5e8a", "commitAfterChange": "2a6dae5f036d3d2969c0b8ba36abf75c33e3e841", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void addSyntheticMethodAccessMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticMethodAccessMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\t// We know that we won't get more than 2 attribute: the code attribute + synthetic attribute", "-\t\tcontents[contentsOffset++] = 0;", "-\t\tcontents[contentsOffset++] = 2;", "+\t\tint methodAttributeOffset = this.contentsOffset;", "+\t\t// this will add exception attribute, synthetic attribute, deprecated attribute,...", "+\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tattributeNumber++; // add code attribute", "-\t\t// add the synthetic attribute", "-\t\tint syntheticAttributeNameIndex =", "-\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "-\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "-\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "-\t\t// the length of a synthetic attribute is equals to 0", "-\t\tcontents[contentsOffset++] = 0;", "-\t\tcontents[contentsOffset++] = 0;", "-\t\tcontents[contentsOffset++] = 0;", "-\t\tcontents[contentsOffset++] = 0;", "+\t\t// update the number of attributes", "+\t\tcontents[methodAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tcontents[methodAttributeOffset] = (byte) attributeNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac275b44efcf414bc5a4e58a6a402d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected boolean resumeAfterRecovery()", "signatureAfterChange": " protected boolean resumeAfterRecovery()", "diff": ["-", "-\tinitInMethodAndInFieldInitializationStack(currentElement);", "+\t", "+//\tif(currentElement instanceof RecoveredMethod", "+//\t\t&& !isInsideMethod()) {", "+//\t\tpushOnElementStack(K_METHOD_DELIMITER);", "+//\t} else if(currentElement instanceof RecoveredField", "+//\t\t&& !isInsideFieldInitialization()) {", "+//\t\tpushOnElementStack(K_FIELD_INITIALIZER_DELIMITER);", "+//\t} if(currentElement instanceof RecoveredType", "+//\t\t&& !isInsideType()) {", "+//\t\tpushOnElementStack(K_TYPE_DELIMITER);", "+//\t}", "-\t\t", "-\t\tif(inMethodStack[inMethodPtr] &&", "-\t\t\tinsideFieldInitialization() &&", "+\t\tif(isInsideMethod() &&", "+\t\t\tisIndirectlyInsideFieldInitialization() &&\t\t", "-\t\t\tnestedMethod[nestedType = 0] = 0;", "-\t\t\tvariablesCounter[nestedType] = 0;", "-\t\t\trealBlockStack[realBlockPtr = 0] = 0;", "+\t\t\tthis.prepareForHeaders();", "-\t\t\tnestedMethod[nestedType = 0] = 0;", "-\t\t\tvariablesCounter[nestedType] = 0;", "-\t\t\trealBlockStack[realBlockPtr = 0] = 0;", "+\t\t\tthis.prepareForHeaders();"]}], "num": 68197}