{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a83fd1753b9251795bf46c5f8ff92f8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613e5ada36f5777464801c30fe81ab70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void addSpecialMethods()", "signatureAfterChange": " \tpublic void addSpecialMethods()", "diff": ["-\t\tSyntheticAccessMethodBinding[] syntheticAccessMethods = this.referenceBinding.syntheticAccessMethods();", "-\t\tif (syntheticAccessMethods != null) {", "-\t\t\tfor (int i = 0, max = syntheticAccessMethods.length; i < max; i++) {", "-\t\t\t\tSyntheticAccessMethodBinding accessMethodBinding = syntheticAccessMethods[i];", "-\t\t\t\tswitch (accessMethodBinding.accessType) {", "-\t\t\t\t\tcase SyntheticAccessMethodBinding.FieldReadAccess :", "+\t\tSyntheticMethodBinding[] syntheticMethods = this.referenceBinding.syntheticMethods();", "+\t\tif (syntheticMethods != null) {", "+\t\t\tfor (int i = 0, max = syntheticMethods.length; i < max; i++) {", "+\t\t\t\tSyntheticMethodBinding syntheticMethod = syntheticMethods[i];", "+\t\t\t\tswitch (syntheticMethod.kind) {", "+\t\t\t\t\tcase SyntheticMethodBinding.FieldReadAccess :", "-\t\t\t\t\t\taddSyntheticFieldReadAccessMethod(accessMethodBinding);", "+\t\t\t\t\t\taddSyntheticFieldReadAccessMethod(syntheticMethod);", "-\t\t\t\t\tcase SyntheticAccessMethodBinding.FieldWriteAccess :", "+\t\t\t\t\tcase SyntheticMethodBinding.FieldWriteAccess :", "-\t\t\t\t\t\taddSyntheticFieldWriteAccessMethod(accessMethodBinding);", "+\t\t\t\t\t\taddSyntheticFieldWriteAccessMethod(syntheticMethod);", "-\t\t\t\t\tcase SyntheticAccessMethodBinding.MethodAccess :", "-\t\t\t\t\tcase SyntheticAccessMethodBinding.SuperMethodAccess :", "-\t\t\t\t\tcase SyntheticAccessMethodBinding.BridgeMethodAccess :", "+\t\t\t\t\tcase SyntheticMethodBinding.MethodAccess :", "+\t\t\t\t\tcase SyntheticMethodBinding.SuperMethodAccess :", "+\t\t\t\t\tcase SyntheticMethodBinding.BridgeMethod :", "-\t\t\t\t\t\taddSyntheticMethodAccessMethod(accessMethodBinding);", "+\t\t\t\t\t\taddSyntheticMethodAccessMethod(syntheticMethod);", "-\t\t\t\t\tcase SyntheticAccessMethodBinding.ConstructorAccess :", "+\t\t\t\t\tcase SyntheticMethodBinding.ConstructorAccess :", "-\t\t\t\t\t\taddSyntheticConstructorAccessMethod(accessMethodBinding);", "+\t\t\t\t\t\taddSyntheticConstructorAccessMethod(syntheticMethod);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase SyntheticMethodBinding.EnumValues :", "+\t\t\t\t\t\t// generate a method info to define <enum>#values()", "+\t\t\t\t\t\taddSyntheticEnumValuesMethod(syntheticMethod);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase SyntheticMethodBinding.EnumValueOf :", "+\t\t\t\t\t\t// generate a method info to define <enum>#valueOf(String)", "+\t\t\t\t\t\taddSyntheticEnumValueOfMethod(syntheticMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efecaa99a9bb126856b0e1e2739de7f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void addSpecialMethods()", "signatureAfterChange": " \tpublic void addSpecialMethods()", "diff": ["+\t    ", "-\t\tSourceTypeBinding currentBinding = referenceBinding;", "-\t\tMethodBinding[] defaultAbstractMethods =", "-\t\t\tcurrentBinding.getDefaultAbstractMethods();", "+\t\tgenerateMissingAbstractMethods(referenceBinding.scope.referenceType().missingAbstractMethods, referenceBinding.scope.referenceCompilationUnit().compilationResult);", "+", "+\t\tMethodBinding[] defaultAbstractMethods = this.referenceBinding.getDefaultAbstractMethods();", "-\t\tSyntheticAccessMethodBinding[] syntheticAccessMethods =", "-\t\t\tcurrentBinding.syntheticAccessMethods();", "+\t\tSyntheticAccessMethodBinding[] syntheticAccessMethods = this.referenceBinding.syntheticAccessMethods();", "-\t\t\t\t\t\taddSyntheticFieldReadAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\t\taddSyntheticFieldReadAccessMethod(accessMethodBinding);", "-\t\t\t\t\t\taddSyntheticFieldWriteAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\t\taddSyntheticFieldWriteAccessMethod(accessMethodBinding);", "-\t\t\t\t\t\t// generate a method info to emulate an access to a non-accessible method / super-method", "-\t\t\t\t\t\taddSyntheticMethodAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\tcase SyntheticAccessMethodBinding.BridgeMethodAccess :", "+\t\t\t\t\t\t// generate a method info to emulate an access to a non-accessible method / super-method or bridge method", "+\t\t\t\t\t\taddSyntheticMethodAccessMethod(accessMethodBinding);", "-\t\t\t\t\t\taddSyntheticConstructorAccessMethod(syntheticAccessMethods[i]);", "+\t\t\t\t\t\taddSyntheticConstructorAccessMethod(accessMethodBinding);", "+\t\t\t\t\t\tbreak;"]}], "num": 55401}