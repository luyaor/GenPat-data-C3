{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58377bca3f875caa41f2745ac660edc1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef8b74c66da137a08b6a3318e041e08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "82ebc709013252385fce65c14aa676e8e0d39c6f", "commitAfterChange": "e2360e075300bd271e5e3fd90537b7dce7bdaa00", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "signatureAfterChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "diff": ["-\t\t\t\t\tIClasspathEntry[] containerEntries = javaProject.getResolvedClasspathContainer(path);\r", "-\t\t\t\t\tif (containerEntries == null){\r", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundContainerPath\", path.toString())); //$NON-NLS-1$\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tfor (int i = 0, length = containerEntries.length; i < length; i++){\r", "-\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(javaProject, containerEntries[i], checkSourceAttachment);\r", "-\t\t\t\t\t\tif (!containerEntryStatus.isOK()){\r", "-\t\t\t\t\t\t\treturn containerEntryStatus;\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\tIClasspathEntry[] containerEntries = javaProject.getResolvedClasspathContainer(path);\r", "+\t\t\t\t\t\tif (containerEntries == null){\r", "+\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundContainerPath\", path.toString())); //$NON-NLS-1$\r", "+\t\t\t\t\t\tfor (int i = 0, length = containerEntries.length; i < length; i++){\r", "+\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(javaProject, containerEntries[i], checkSourceAttachment);\r", "+\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){\r", "+\t\t\t\t\t\t\t\treturn containerEntryStatus;\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t} catch(JavaModelException e){\r", "+\t\t\t\t\t\treturn new JavaModelStatus(e);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b0ae3d70162d463c04186484c0ce28f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "fee4992bc17cce3178e607ffe1ab2f5367cfcad9", "commitAfterChange": "6e946c59c9a84721a5b3560d54b2d44267b26323", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["-\tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers){", "+\tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer){", "-\t\t\t\t\t\t\t\tif (recurseInContainers) {", "-\t\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(project, containerEntry, checkSourceAttachment, recurseInContainers);", "-\t\t\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){", "-\t\t\t\t\t\t\t\t\t\treturn containerEntryStatus;", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(project, containerEntry, checkSourceAttachment, true/*referred by container*/);", "+\t\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){", "+\t\t\t\t\t\t\t\t\treturn containerEntryStatus;", "-\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, checkSourceAttachment, recurseInContainers);", "+\t\t\t\t\tIJavaModelStatus status = validateClasspathEntry(project, entry, checkSourceAttachment, false/*not referred by container*/);", "-\t\t\t\t\tif (!status.isOK())", "+\t\t\t\t\tif (!status.isOK()) {", "+\t\t\t\t\t\tif (referredByContainer && status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH)", "+\t\t\t\t\t\t\tcontinue; // ignore this entry (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=250946 )", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9452aa1d1a6ebd56d704d272226e81ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "2a762b85f858691a63d4547af177cc649d7b1329", "commitAfterChange": "7675c409a4b3b1e15b1cc476a0a66b988b5fb4a0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "signatureAfterChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "diff": ["+\t\t\t// container entry check\r", "+\t\t\tcase IClasspathEntry.CPE_CONTAINER :\r", "+\t\t\t\tif (path != null && path.segmentCount() >= 1){\r", "+\t\t\t\t\tIClasspathEntry[] containerEntries = javaProject.getResolvedClasspathContainer(path);\r", "+\t\t\t\t\tif (containerEntries == null){\r", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundContainerPath\", path.toString())); //$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tfor (int i = 0, length = containerEntries.length; i < length; i++){\r", "+\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(javaProject, containerEntries[i], checkSourceAttachment);\r", "+\t\t\t\t\t\tif (!containerEntryStatus.isOK()){\r", "+\t\t\t\t\t\t\treturn containerEntryStatus;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalContainerPath\", path.toString()));\t\t\t\t\t //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91c6775e969984505183631671b7c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "1317e9ebe26807b45d83a46701194241e6f648d5", "commitAfterChange": "3649f3f6d703fd53c9c12b41cdc037f657d98134", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "signatureAfterChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "diff": ["-\t\t\t\tif (path != null && path.segmentCount() >= 1){\r", "+\t\t\t\tif (path != null && path.segmentCount() == 2){\r", "-\t\t\t\t\t\tIClasspathEntry[] containerEntries = JavaCore.getResolvedClasspathContainer(path, javaProject);\r", "-\t\t\t\t\t\tif (containerEntries == null){\r", "+\t\t\t\t\t\tIClasspathContainer container = JavaCore.getClasspathContainer(path, javaProject);\r", "+\t\t\t\t\t\tif (container == null){\r", "-\t\t\t\t\t\tfor (int i = 0, length = containerEntries.length; i < length; i++){\r", "-\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(javaProject, containerEntries[i], checkSourceAttachment);\r", "-\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){\r", "-\t\t\t\t\t\t\t\treturn containerEntryStatus;\r", "+\t\t\t\t\t\tIClasspathEntry[] containerEntries = container.getClasspathEntries();\r", "+\t\t\t\t\t\tif (containerEntries != null){\r", "+\t\t\t\t\t\t\tfor (int i = 0, length = containerEntries.length; i < length; i++){\r", "+\t\t\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(javaProject, containerEntries[i], checkSourceAttachment);\r", "+\t\t\t\t\t\t\t\tif (!containerEntryStatus.isOK()){\r", "+\t\t\t\t\t\t\t\t\treturn containerEntryStatus;\r", "+\t\t\t\t\t\t\t\t}\r"]}], "num": 66075}