{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14ff884a05d068b27b950fc5ad696bf3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5749505710f54d26086ff9c7660a6c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public String toStringExpression()", "signatureAfterChange": "  public StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+public StringBuffer printExpression(int indent, StringBuffer output){", "+\t", "+\tif (!receiver.isImplicitThis()) receiver.printExpression(0, output).append('.');", "+\toutput.append(selector).append('(') ; //$NON-NLS-1$", "+\tif (arguments != null) {", "+\t\tfor (int i = 0; i < arguments.length ; i ++) {\t", "+\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\targuments[i].printExpression(0, output);", "+\t\t}", "+\t}", "+\treturn output.append(')');", "+}", "-", "-public String toStringExpression(){", "-\t", "-\tString s = \"\"; //$NON-NLS-1$", "-\tif (!receiver.isImplicitThis())", "-\t\ts = s + receiver.toStringExpression()+\".\"; //$NON-NLS-1$", "-\ts = s + new String(selector) + \"(\" ; //$NON-NLS-1$", "-\tif (arguments != null)", "-\t\tfor (int i = 0; i < arguments.length ; i ++)", "-\t\t{\ts = s + arguments[i].toStringExpression();", "-\t\t\tif ( i != arguments.length -1 ) s = s + \" , \" ;};; //$NON-NLS-1$", "-\ts =s + \")\" ; //$NON-NLS-1$", "-\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3ebf2bf934c92cf04f532c5b85d179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic String toStringExpression()", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\tpublic String toStringExpression() {", "+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "-\t\tString s = \"new \" + type.toString(0); //$NON-NLS-1$", "-\t\tif (arguments == null)", "-\t\t\ts = s + \"()\"; //$NON-NLS-1$", "-\t\telse {", "-\t\t\ts = s + \"(\"; //$NON-NLS-1$", "+\t\toutput.append(\"new \"); //$NON-NLS-1$", "+\t\ttype.printExpression(0, output); ", "+\t\toutput.append('(');", "+\t\tif (arguments != null) {", "-\t\t\t\ts = s + arguments[i].toStringExpression();", "-\t\t\t\tif (i == (arguments.length - 1))", "-\t\t\t\t\ts = s + \")\"; //$NON-NLS-1$", "-\t\t\t\telse", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "-\t\treturn s;", "+\t\treturn output.append(')');"]}], "num": 27166}