{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bd6f03149cf5b926c713e3a3f1aeed1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5e8e04a6108e515b02886f15c2ffe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "4cb58ab533c79220136a132032afc1404604a700", "commitAfterChange": "c6eb7c253f30ad97be4157d7b386bdebd6f05934", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic synchronized IFolder getGeneratedSourceFolder()", "signatureAfterChange": " \tpublic synchronized IFolder getGeneratedSourceFolder()", "diff": ["-\t\tif ( _generatedSourceFolder == null)", "-\t\t{", "+\t\t//", "+\t\t// don't set _generatedSourceFolder in here, let that happen in ", "+\t\t// ensureGeneratedSourceFolder. we use a non-null _generatedSourceFolder ", "+\t\t// as an indicator that as an indicator that the folder has been created", "+\t\t// and added to the project's source path.", "+\t\t//", "+\t\t\t", "+\t\tif ( _generatedSourceFolder != null)", "+\t\t\treturn _generatedSourceFolder;", "+\t\telse", "-\t\t\t_generatedSourceFolder = _project.getFolder( GENERATED_SOURCE_FOLDER_NAME );", "-\t\t}", "-", "-\t\treturn _generatedSourceFolder;", "+\t\t\treturn _project.getFolder( _generatedSourceFolderName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bef3fb70ba57da4fb593542ecb2711dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f2f45b09c61cdc4a3bb7702f92f8e4fdcb969052", "commitAfterChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic synchronized IFolder getGeneratedSourceFolder()", "signatureAfterChange": " \tpublic IFolder getGeneratedSourceFolder()", "diff": ["-\tpublic synchronized IFolder getGeneratedSourceFolder()", "-\t{", "-\t\t//", "-\t\t// don't set _generatedSourceFolder in here, let that happen in ", "-\t\t// ensureGeneratedSourceFolder. we use a non-null _generatedSourceFolder ", "-\t\t// as an indicator that as an indicator that the folder has been created", "-\t\t// and added to the project's source path.", "-\t\t//", "-\t\t\t", "-\t\tif ( _generatedSourceFolder != null)", "-\t\t\treturn _generatedSourceFolder;", "-\t\telse", "-\t\t\t// OK to call getFolder while holding a lock.  getFolder() doesn't take any locks - Mike K.", "-\t\t\treturn _project.getFolder( _generatedSourceFolderName );", "+\tpublic IFolder getGeneratedSourceFolder(){", "+\t\tIFolder srcFolder;", "+\t\tfinal String folderName;", "+\t\tsynchronized (this) {", "+\t\t\tsrcFolder = _generatedSourceFolder;", "+\t\t\tfolderName = getGeneratedSourceFolderName();", "+\t\t}", "+\t\tif(srcFolder != null)", "+\t\t\treturn srcFolder;", "+\t\t", "+\t\treturn _project.getFolder( folderName );"]}], "num": 17794}