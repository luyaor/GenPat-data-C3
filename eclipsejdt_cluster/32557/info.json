{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f42760c429dcddb04c1eb0449aa11de7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3023b6f6a7484d096087b59a5f6b24c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "0aa46ff32860f090b1c2b435d909e18926d63ea4", "commitAfterChange": "ce31321c0960eb5a31c3ae1b0d5c06abcf194347", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void evaluate( \tchar[] codeSnippet,  \tchar[][] localVariableTypeNames, \tchar[][] localVariableNames,  \tint[] localVariableModifiers, \tchar[] declaringTypeName, \tboolean isStatic, \tboolean isConstructorCall, \tINameEnvironment environment,  \tMap options,  \tfinal IRequestor requestor,  \tIProblemFactory problemFactory) throws InstallException", "signatureAfterChange": " public void evaluate( \tchar[] codeSnippet,  \tchar[][] contextLocalVariableTypeNames, \tchar[][] contextLocalVariableNames,  \tint[] contextLocalVariableModifiers, \tchar[] contextDeclaringTypeName, \tboolean contextIsStatic, \tboolean contextIsConstructorCall, \tINameEnvironment environment,  \tMap options,  \tfinal IRequestor requestor,  \tIProblemFactory problemFactory) throws InstallException", "diff": ["-\tchar[][] localVariableTypeNames,", "-\tchar[][] localVariableNames, ", "-\tint[] localVariableModifiers,", "-\tchar[] declaringTypeName,", "-\tboolean isStatic,", "-\tboolean isConstructorCall,", "+\tchar[][] contextLocalVariableTypeNames,", "+\tchar[][] contextLocalVariableNames, ", "+\tint[] contextLocalVariableModifiers,", "+\tchar[] contextDeclaringTypeName,", "+\tboolean contextIsStatic,", "+\tboolean contextIsConstructorCall,", "-\tthis.localVariableTypeNames = localVariableTypeNames;", "-\tthis.localVariableNames = localVariableNames;", "-\tthis.localVariableModifiers = localVariableModifiers;", "-\tthis.declaringTypeName = declaringTypeName;", "-\tthis.isStatic = isStatic;", "-\tthis.isConstructorCall = isConstructorCall;", "+\tthis.localVariableTypeNames = contextLocalVariableTypeNames;", "+\tthis.localVariableNames = contextLocalVariableNames;", "+\tthis.localVariableModifiers = contextLocalVariableModifiers;", "+\tthis.declaringTypeName = contextDeclaringTypeName;", "+\tthis.isStatic = contextIsStatic;", "+\tthis.isConstructorCall = contextIsConstructorCall;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f4fa0b1fb9cd6dff93573db3428c0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, IntBinding, AccDefault, false);", "+\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, IntBinding, ClassFileConstants.AccDefault, false);", "-\t\t\t\t\tthis.maxVariable = new LocalVariableBinding(SecretMaxVariableName, IntBinding, AccDefault, false);", "+\t\t\t\t\tthis.maxVariable = new LocalVariableBinding(SecretMaxVariableName, IntBinding, ClassFileConstants.AccDefault, false);", "-\t\t\t\t\tthis.collectionVariable = new LocalVariableBinding(SecretCollectionVariableName, collectionType, AccDefault, false);", "+\t\t\t\t\tthis.collectionVariable = new LocalVariableBinding(SecretCollectionVariableName, collectionType, ClassFileConstants.AccDefault, false);", "-\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, scope.getJavaUtilIterator(), AccDefault, false);", "+\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, scope.getJavaUtilIterator(), ClassFileConstants.AccDefault, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b12e7ba3180d142217a8167395d7cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "1af5a4c9db5050a646b966ef94445c5d7d6791d8", "commitAfterChange": "eb4338d8d760c2f9a3b3f7cdfcea612b9c1ab6ca", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tif (isStringSwitch) {", "+\t\t\t\t// the secret variable should be created before iterating over the switch's statements that could", "+\t\t\t\t// create more locals. This must be done to prevent overlapping of locals", "+\t\t\t\t// See https://bugs.eclipse.org/bugs/show_bug.cgi?id=356002", "+\t\t\t\tthis.dispatchStringCopy  = new LocalVariableBinding(SecretStringVariableName, upperScope.getJavaLangString(), ClassFileConstants.AccDefault, false);", "+\t\t\t\tupperScope.addLocalVariable(this.dispatchStringCopy);", "+\t\t\t\tthis.dispatchStringCopy.setConstant(Constant.NotAConstant);", "+\t\t\t\tthis.dispatchStringCopy.useFlag = LocalVariableBinding.USED;", "+\t\t\t}", "-\t\t\t}", "-\t\t\tif (isStringSwitch) {", "-\t\t\t\tthis.dispatchStringCopy  = new LocalVariableBinding(SecretStringVariableName, upperScope.getJavaLangString(), ClassFileConstants.AccDefault, false);", "-\t\t\t\tupperScope.addLocalVariable(this.dispatchStringCopy);", "-\t\t\t\tthis.dispatchStringCopy.setConstant(Constant.NotAConstant);", "-\t\t\t\tthis.dispatchStringCopy.useFlag = LocalVariableBinding.USED;"]}], "num": 32557}