{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91bb9830610cb4319c0a9aa18d566365", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b3eb08986c6a064655de09f9bba5839", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "0afc1a9b53aa0325da7fb144a7014b79087d1149", "commitAfterChange": "e88e1c1db2e99aa767474bc900a2ad3853961061", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void initializeKnownFileNames(String[] initialFileNames)", "signatureAfterChange": " private void initializeKnownFileNames(String[] initialFileNames)", "diff": ["-\t\tchar[] fileName = initialFileNames[i].toCharArray();", "+\t\tFile compilationUnitFile = new File(initialFileNames[i]);", "+\t\tchar[] fileName = null;", "+\t\ttry {", "+\t\t\tfileName = compilationUnitFile.getCanonicalPath().toCharArray();", "+\t\t} catch (IOException e) {", "+\t\t\t// this should not happen as the file exists", "+\t\t\tcontinue;", "+\t\t}", "-\t\tfor (int j = 0; j < this.classpaths.length; j++){", "+\t\tfor (int j = 0, max = this.classpaths.length; j < max; j++) {", "-\t\t\t\t\t\t\tmatchCandidate.length < matchingPathName.length))", "+\t\t\t\t\t\t\tmatchCandidate.length < matchingPathName.length)) {", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a27e3fbf823efefc8002d859d28619", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "02009b41ec945f5cfcf629234ac75cbc76ce6809", "commitAfterChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": " public CompilationUnit[] getCompilationUnits()", "signatureAfterChange": " public CompilationUnit[] getCompilationUnits()", "diff": ["-\t\tunits[i] = new CompilationUnit(null, this.filenames[i], encoding,", "-\t\t\t\tthis.destinationPaths[i]);", "+\t\tString fileName;", "+\t\ttry {", "+\t\t\tfileName = file.getCanonicalPath();", "+\t\t} catch (IOException e) {", "+\t\t\t// if we got exception during canonicalization, fall back to the name that was specified", "+\t\t\tfileName = this.filenames[i];", "+\t\t}", "+\t\tunits[i] = new CompilationUnit(null, fileName, encoding, this.destinationPaths[i],", "+\t\t\t\tshouldIgnoreOptionalProblems(this.ignoreOptionalProblemsFromFolders, fileName.toCharArray()));"]}], "num": 31576}