{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d29d117b67cca9d1e84ddabd1949cbce", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35564b17e2a7d57712a21b3316f6684f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "9522bc69a2e619eb0dbea360959801b21058eccb", "commitAfterChange": "be2237b06895bb2f911a826de7df01d9e9a9ec91", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printTrailingComment()", "signatureAfterChange": "  \tpublic void printTrailingComment()", "diff": ["+\t\t\tboolean hasWhitespaces = false;", "+\t\t\tboolean hasComment = false;", "+\t\t\t\t\t\t\tif (hasComment) {", "+\t\t\t\t\t\t\t\tthis.printNewLine(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\thasWhitespaces = true;", "-\t\t\t\t\t\tspace(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\tif (hasWhitespaces) {", "+\t\t\t\t\t\t\tspace(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tspace(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\tif (hasWhitespaces) {", "+\t\t\t\t\t\t\tspace(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\thasComment = true;", "-\t\t\t\t\t\tspace(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\tif (hasWhitespaces) {", "+\t\t\t\t\t\t\tspace(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\thasComment = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fb2d5891e3930b23f0388f176d2ee7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "b19786bd30a71d1dc58c189f93871794d62e10e4", "commitAfterChange": "f74920f9558494dedd70cfde05417633be38db79", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printTrailingComment()", "signatureAfterChange": "  \tpublic void printTrailingComment()", "diff": ["+\t\t\tboolean hasLineComment = false;", "-\t\t\t\t\t\tif (count >= 1) {", "+\t\t\t\t\t\tif (hasLineComment) {", "+\t\t\t\t\t\t\tif (count >= 1) {", "+\t\t\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\t\t\t\tthis.preserveEmptyLines(count, currentTokenStartPosition);", "+\t\t\t\t\t\t\t\taddDeleteEdit(currentTokenStartPosition, this.scanner.getCurrentTokenEndPosition());", "+\t\t\t\t\t\t\t\tthis.scanner.resetTo(this.scanner.currentPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (count >= 1) {", "-\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "-\t\t\t\t\t\treturn;", "+\t\t\t\t\t\thasLineComment = true;", "+\t\t\t\t\t\tbreak;"]}], "num": 64492}