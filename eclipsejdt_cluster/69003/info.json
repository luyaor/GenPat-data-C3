{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "648a597d6b2b64819f4e536ffdc4a314", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1665f449ba275d040693e9214e2ea0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "c96aeb71dd443bf627a83c227410f17017e1091f", "commitAfterChange": "51b5a3a2fd75c9aa227eb901c5d0dde418b20656", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void compile(String[] argv)", "signatureAfterChange": "\r protected void compile(String[] argv)", "diff": ["-\t\tif (showProgress) System.out.print(Main.bind(\"progress.compiling\"/*nonNLS*/));\r", "-\t\tfor (int i = 0; i < repetitions; i++){\r", "-\t\t\tglobalProblemsCount = 0;\r", "-\t\t\tglobalErrorsCount = 0;\r", "-\t\t\tglobalWarningsCount = 0;\t\t\r", "-\t\t\tlineCount = 0;\r", "-\t\t\tif (repetitions > 1){\r", "-\t\t\t\tout.flush();\r", "-\t\t\t\tout.println(Main.bind(\"compile.repetition\"/*nonNLS*/,String.valueOf(i+1),String.valueOf(repetitions)));\r", "-\t\t\t}\r", "-\t\t\tlong startTime = System.currentTimeMillis();\r", "-\r", "-\t\t\t// request compilation\r", "-\t\t\tperformCompilation();\r", "-\t\t\tif (timer) {\r", "-\t\t\t\ttime = System.currentTimeMillis() - startTime;\r", "-\t\t\t\tif (lineCount != 0){\r", "-\t\t\t\t\tout.println(Main.bind(\"compile.instantTime\"/*nonNLS*/,new String[]{String.valueOf(lineCount),String.valueOf(time),String.valueOf((((int)((lineCount*10000.0)/time))/10.0))}));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\"/*nonNLS*/,String.valueOf(time)));\r", "-\t\t\t\t\t\r", "+\t\tif(proceed){\r", "+\t\t\tif (showProgress) out.print(Main.bind(\"progress.compiling\"/*nonNLS*/));\r", "+\t\t\tfor (int i = 0; i < repetitions; i++){\r", "+\t\t\t\tglobalProblemsCount = 0;\r", "+\t\t\t\tglobalErrorsCount = 0;\r", "+\t\t\t\tglobalWarningsCount = 0;\t\t\r", "+\t\t\t\tlineCount = 0;\r", "+\t\r", "+\t\t\t\tif (repetitions > 1){\r", "+\t\t\t\t\tout.flush();\r", "+\t\t\t\t\tout.println(Main.bind(\"compile.repetition\"/*nonNLS*/,String.valueOf(i+1),String.valueOf(repetitions)));\r", "-\t\t\t}\r", "-\t\t\tif (globalProblemsCount > 0) {\r", "-\t\t\t\tif (globalProblemsCount == 1) {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\"/*nonNLS*/));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.severalProblems\"/*nonNLS*/,String.valueOf(globalProblemsCount)));\r", "-\t\t\t\t}\r", "-\t\t\t\tout.print(\" (\"/*nonNLS*/);\r", "-\t\t\t\tif (globalErrorsCount > 0) {\r", "-\t\t\t\t\tif (globalErrorsCount == 1) {\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\"/*nonNLS*/));\r", "+\t\t\t\tlong startTime = System.currentTimeMillis();\r", "+\t\t\t\t// request compilation\r", "+\t\t\t\tperformCompilation();\r", "+\t\t\t\tif (timer) {\r", "+\t\r", "+\t\t\t\t\ttime = System.currentTimeMillis() - startTime;\r", "+\t\t\t\t\tif (lineCount != 0){\r", "+\t\t\t\t\t\tout.println(Main.bind(\"compile.instantTime\"/*nonNLS*/,new String[]{String.valueOf(lineCount),String.valueOf(time),String.valueOf((((int)((lineCount*10000.0)/time))/10.0))}));\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.severalErrors\"/*nonNLS*/,String.valueOf(globalErrorsCount)));\r", "+\t\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\"/*nonNLS*/,String.valueOf(time)));\t\t\t\t\r", "-\t\t\t\tif (globalWarningsCount > 0) {\r", "+\t\t\t\tif (globalProblemsCount > 0) {\r", "+\t\t\t\t\tif (globalProblemsCount == 1) {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.oneProblem\"/*nonNLS*/));\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.severalProblems\"/*nonNLS*/,String.valueOf(globalProblemsCount)));\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tout.print(\" (\"/*nonNLS*/);\r", "-\t\t\t\t\t\tout.print(\", \"/*nonNLS*/);\r", "+\t\t\t\t\t\tif (globalErrorsCount == 1) {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneError\"/*nonNLS*/));\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.severalErrors\"/*nonNLS*/,String.valueOf(globalErrorsCount)));\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\t\tif (globalWarningsCount == 1) {\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\"/*nonNLS*/));\r", "+\t\t\t\t\tif (globalWarningsCount > 0) {\r", "+\t\t\t\t\t\tif (globalErrorsCount > 0) {\r", "+\t\t\t\t\t\t\tout.print(\", \"/*nonNLS*/);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (globalWarningsCount == 1) {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.oneWarning\"/*nonNLS*/));\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tout.print(Main.bind(\"compile.severalWarnings\"/*nonNLS*/,String.valueOf(globalWarningsCount)));\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tout.println(\")\"/*nonNLS*/);\r", "+\t\t\t\t}\r", "+\t\t\t\tif (exportedClassFilesCounter != 0 && (this.showProgress || this.timer || this.verbose)) {\r", "+\t\t\t\t\tif (exportedClassFilesCounter == 1) {\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\"/*nonNLS*/));\r", "-\t\t\t\t\t\tout.print(Main.bind(\"compile.severalWarnings\"/*nonNLS*/,String.valueOf(globalWarningsCount)));\r", "+\t\t\t\t\t\tout.print(Main.bind(\"compile.severalClassFilesGenerated\"/*nonNLS*/,String.valueOf(exportedClassFilesCounter)));\r", "-\t\t\t\tout.println(\")\"/*nonNLS*/);\r", "-\t\t\tif (exportedClassFilesCounter != 0 && (this.showProgress || this.timer || this.verbose)) {\r", "-\t\t\t\tif (exportedClassFilesCounter == 1) {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.oneClassFileGenerated\"/*nonNLS*/));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tout.print(Main.bind(\"compile.severalClassFilesGenerated\"/*nonNLS*/,String.valueOf(exportedClassFilesCounter)));\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\tif (showProgress) System.out.println();\r", "-\t\tif (showProgress) System.out.println();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19fe4a656167f55dfe1e564a36a7af7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean compile(String[] argv)", "signatureAfterChange": " \tpublic boolean compile(String[] argv)", "diff": ["-\t\t\tif (proceed) {", "-\t\t\t\tif (showProgress)", "-\t\t\t\t\tout.println(Main.bind(\"progress.compiling\")); //$NON-NLS-1$", "-\t\t\t\tfor (int i = 0; i < repetitions; i++) {", "-\t\t\t\t\tglobalProblemsCount = 0;", "-\t\t\t\t\tglobalErrorsCount = 0;", "-\t\t\t\t\tglobalWarningsCount = 0;", "-\t\t\t\t\tlineCount = 0;", "-\t\t\t\t\texportedClassFilesCounter = 0;", "+\t\t\tif (this.proceed) {", "+\t\t\t\tif (this.showProgress)", "+\t\t\t\t\tthis.out.println(Main.bind(\"progress.compiling\")); //$NON-NLS-1$", "+\t\t\t\tfor (int i = 0; i < this.repetitions; i++) {", "+\t\t\t\t\tthis.globalProblemsCount = 0;", "+\t\t\t\t\tthis.globalErrorsCount = 0;", "+\t\t\t\t\tthis.globalWarningsCount = 0;", "+\t\t\t\t\tthis.lineCount = 0;", "+\t\t\t\t\tthis.exportedClassFilesCounter = 0;", "-\t\t\t\t\tif (repetitions > 1) {", "-\t\t\t\t\t\tout.flush();", "-\t\t\t\t\t\tout.println(", "+\t\t\t\t\tif (this.repetitions > 1) {", "+\t\t\t\t\t\tthis.out.flush();", "+\t\t\t\t\t\tthis.out.println(", "-\t\t\t\t\t\t\t\tString.valueOf(repetitions)));", "+\t\t\t\t\t\t\t\tString.valueOf(this.repetitions)));", "-\t\t\t\t\tif (timer) {", "+\t\t\t\t\tif (this.timer) {", "-\t\t\t\t\t\ttime = System.currentTimeMillis() - startTime;", "-\t\t\t\t\t\tif (lineCount != 0) {", "-\t\t\t\t\t\t\tout.println(", "+\t\t\t\t\t\tthis.time = System.currentTimeMillis() - startTime;", "+\t\t\t\t\t\tif (this.lineCount != 0) {", "+\t\t\t\t\t\t\tthis.out.println(", "-\t\t\t\t\t\t\t\t\t\tString.valueOf(lineCount),", "-\t\t\t\t\t\t\t\t\t\tString.valueOf(time),", "-\t\t\t\t\t\t\t\t\t\tString.valueOf(((int)(lineCount * 10000.0 / time)) / 10.0)}));", "+\t\t\t\t\t\t\t\t\t\tString.valueOf(this.lineCount),", "+\t\t\t\t\t\t\t\t\t\tString.valueOf(this.time),", "+\t\t\t\t\t\t\t\t\t\tString.valueOf(((int)(this.lineCount * 10000.0 / this.time)) / 10.0)}));", "-\t\t\t\t\t\t\tout.println(Main.bind(\"compile.totalTime\", String.valueOf(time))); //$NON-NLS-1$", "+\t\t\t\t\t\t\tthis.out.println(Main.bind(\"compile.totalTime\", String.valueOf(this.time))); //$NON-NLS-1$", "-\t\t\t\t\tif (globalProblemsCount > 0) {", "-\t\t\t\t\t\tif (globalProblemsCount == 1) {", "-\t\t\t\t\t\t\terr.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "+\t\t\t\t\tif (this.globalProblemsCount > 0) {", "+\t\t\t\t\t\tif (this.globalProblemsCount == 1) {", "+\t\t\t\t\t\t\tthis.err.print(Main.bind(\"compile.oneProblem\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\terr.print(", "-\t\t\t\t\t\t\t\tMain.bind(\"compile.severalProblems\", String.valueOf(globalProblemsCount))); \t//$NON-NLS-1$", "+\t\t\t\t\t\t\tthis.err.print(", "+\t\t\t\t\t\t\t\tMain.bind(\"compile.severalProblems\", String.valueOf(this.globalProblemsCount))); \t//$NON-NLS-1$", "-\t\t\t\t\t\terr.print(\" (\"); //$NON-NLS-1$", "-\t\t\t\t\t\tif (globalErrorsCount > 0) {", "-\t\t\t\t\t\t\tif (globalErrorsCount == 1) {", "-\t\t\t\t\t\t\t\terr.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.err.print(\" (\"); //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.globalErrorsCount > 0) {", "+\t\t\t\t\t\t\tif (this.globalErrorsCount == 1) {", "+\t\t\t\t\t\t\t\tthis.err.print(Main.bind(\"compile.oneError\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\terr.print(", "-\t\t\t\t\t\t\t\t\tMain.bind(\"compile.severalErrors\", String.valueOf(globalErrorsCount))); \t//$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.err.print(", "+\t\t\t\t\t\t\t\t\tMain.bind(\"compile.severalErrors\", String.valueOf(this.globalErrorsCount))); \t//$NON-NLS-1$", "-\t\t\t\t\t\tif (globalWarningsCount > 0) {", "-\t\t\t\t\t\t\tif (globalErrorsCount > 0) {", "-\t\t\t\t\t\t\t\terr.print(\", \"); //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.globalWarningsCount > 0) {", "+\t\t\t\t\t\t\tif (this.globalErrorsCount > 0) {", "+\t\t\t\t\t\t\t\tthis.err.print(\", \"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tif (globalWarningsCount == 1) {", "-\t\t\t\t\t\t\t\terr.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\tif (this.globalWarningsCount == 1) {", "+\t\t\t\t\t\t\t\tthis.err.print(Main.bind(\"compile.oneWarning\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\terr.print(", "-\t\t\t\t\t\t\t\t\tMain.bind(\"compile.severalWarnings\", String.valueOf(globalWarningsCount))); \t//$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.err.print(", "+\t\t\t\t\t\t\t\t\tMain.bind(\"compile.severalWarnings\", String.valueOf(this.globalWarningsCount))); \t//$NON-NLS-1$", "-\t\t\t\t\t\terr.println(\")\"); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.err.println(\")\"); //$NON-NLS-1$", "-\t\t\t\t\tif (exportedClassFilesCounter != 0", "+\t\t\t\t\tif (this.exportedClassFilesCounter != 0", "-\t\t\t\t\t\tif (exportedClassFilesCounter == 1) {", "-\t\t\t\t\t\t\tout.println(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.exportedClassFilesCounter == 1) {", "+\t\t\t\t\t\t\tthis.out.println(Main.bind(\"compile.oneClassFileGenerated\")); //$NON-NLS-1$", "-\t\t\t\t\t\t\tout.println(", "+\t\t\t\t\t\t\tthis.out.println(", "-\t\t\t\t\t\t\t\t\tString.valueOf(exportedClassFilesCounter)));", "+\t\t\t\t\t\t\t\t\tString.valueOf(this.exportedClassFilesCounter)));", "-\t\t\t\tif (showProgress)", "-\t\t\t\t\tout.println();", "+\t\t\t\tif (this.showProgress)", "+\t\t\t\t\tthis.out.println();", "-\t\t\tif (systemExitWhenFinished) {", "-\t\t\t\tout.flush();", "-\t\t\t\terr.flush();", "-\t\t\t\tSystem.exit(globalErrorsCount > 0 ? -1 : 0);", "+\t\t\tif (this.systemExitWhenFinished) {", "+\t\t\t\tthis.out.flush();", "+\t\t\t\tthis.err.flush();", "+\t\t\t\tSystem.exit(this.globalErrorsCount > 0 ? -1 : 0);", "-\t\t\terr.println(e.getMessage());", "-\t\t\terr.println(\"------------------------\"); //$NON-NLS-1$", "+\t\t\tthis.err.println(e.getMessage());", "+\t\t\tthis.err.println(\"------------------------\"); //$NON-NLS-1$", "-\t\t\tif (systemExitWhenFinished) {", "+\t\t\tif (this.systemExitWhenFinished) {", "-\t\t\tif (systemExitWhenFinished) {", "-\t\t\t\tout.flush();", "-\t\t\t\terr.flush();", "+\t\t\tif (this.systemExitWhenFinished) {", "+\t\t\t\tthis.out.flush();", "+\t\t\t\tthis.err.flush();", "-\t\t\t\t\terr.close();", "+\t\t\t\t\tthis.err.close();", "-\t\t\tout.flush();", "-\t\t\terr.flush();", "+\t\t\tthis.out.flush();", "+\t\t\tthis.err.flush();", "-\t\t\t\terr.close();", "+\t\t\t\tthis.err.close();", "-\t\tif (globalErrorsCount == 0){", "+\t\tif (this.globalErrorsCount == 0){"]}], "num": 69003}