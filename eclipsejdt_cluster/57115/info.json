{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a647d1a16942f71ad7b043b889ac4f45", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8930e235295ec9e5b402add79d46187b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "-\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "-\t\t\t\t\t\t\t\t\tif(!typeBinding.isClass()) continue;", "-\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "-\t\t\t\t\t\t\t\t\tif(!typeBinding.isInterface() && !typeBinding.isAnnotationType()) continue;", "-\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "-\t\t\t\t\t\t\t\t\tif(!typeBinding.isAnnotationType()) continue;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\t\tif(!typeBinding.isClass()) continue;", "+\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t\t\t\tif(!typeBinding.isInterface() && !typeBinding.isAnnotationType()) continue;", "+\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\t\t\t\tif(!typeBinding.isAnnotationType()) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b50d57ae0d1d83867a79d91de532e5cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "-\t\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "-\t\t\t\t\t\t\t\t\t\tif(!localType.isClass()) continue next;", "-\t\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "-\t\t\t\t\t\t\t\t\t\tif(!localType.isInterface() && !localType.isAnnotationType()) continue next;", "-\t\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "-\t\t\t\t\t\t\t\t\t\tif(!localType.isAnnotationType()) continue next;", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\t\t\tif(!localType.isClass()) continue next;", "+\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t\t\t\t\tif(!localType.isInterface() && !localType.isAnnotationType()) continue next;", "+\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\t\t\t\t\tif(!localType.isAnnotationType()) continue next;"]}], "num": 57115}