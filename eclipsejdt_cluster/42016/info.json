{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a748a258bf91532467d6cde1c22d3690", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f686d7cf489322790ca40b2a31c3be2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "signatureAfterChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "diff": ["-\t\t\t\t\tint level = pattern.matchLevel(method);", "-\t\t\t\t\tif (level >= SearchPattern.POTENTIAL_MATCH) {", "+\t\t\t\t\tif (locator.patternLocator.resolveLevel(method) == PatternLocator.ACCURATE_MATCH) {", "-\t\t\t\t\t\tlocator.reportBinaryMatch(", "-\t\t\t\t\t\t\tmethodHandle, ", "-\t\t\t\t\t\t\tinfo, ", "-\t\t\t\t\t\t\tlevel == SearchPattern.ACCURATE_MATCH", "-\t\t\t\t\t\t\t\t? IJavaSearchResultCollector.EXACT_MATCH", "-\t\t\t\t\t\t\t\t: IJavaSearchResultCollector.POTENTIAL_MATCH);", "+\t\t\t\t\t\tlocator.reportBinaryMatch(methodHandle, info, IJavaSearchResultCollector.EXACT_MATCH);", "-\t\t\t\t\tint level = pattern.matchLevel(field);", "-\t\t\t\t\tif (level >= SearchPattern.POTENTIAL_MATCH) {", "+\t\t\t\t\tif (locator.patternLocator.resolveLevel(field) == PatternLocator.ACCURATE_MATCH) {", "-\t\t\t\t\t\tlocator.reportBinaryMatch(", "-\t\t\t\t\t\t\tfieldHandle, ", "-\t\t\t\t\t\t\tinfo, ", "-\t\t\t\t\t\t\tlevel == SearchPattern.ACCURATE_MATCH", "-\t\t\t\t\t\t\t\t? IJavaSearchResultCollector.EXACT_MATCH", "-\t\t\t\t\t\t\t\t: IJavaSearchResultCollector.POTENTIAL_MATCH);", "+\t\t\t\t\t\tlocator.reportBinaryMatch(fieldHandle, info, IJavaSearchResultCollector.EXACT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b9f1e7e62d89bf8a8fc9b29f5065b2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "ce7bef49e9ed96b08f61ac987775cd5b5704ee11", "commitAfterChange": "07a11e1e272139637f646eb5763c54327cd4bc46", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\tthis.streamEnd = this.categoryEnds.get(categoryName);", "-\t\tint readSize = this.streamEnd - offset;", "-\t\tthis.streamPos = stream.read(this.streamBuffer, 0, readSize < BUFFER_READ_SIZE ? readSize : BUFFER_READ_SIZE) + offset;", "+\t\tthis.bufferEnd = stream.read(this.streamBuffer, 0, this.streamBuffer.length);", "-\t\t\tint readSize = this.streamEnd - firstOffset;", "-\t\t\tthis.streamPos = stream.read(this.streamBuffer, 0, readSize < BUFFER_READ_SIZE ? readSize : BUFFER_READ_SIZE) + firstOffset;", "+\t\t\tthis.bufferEnd = stream.read(this.streamBuffer, 0, this.streamBuffer.length);"]}], "num": 42016}