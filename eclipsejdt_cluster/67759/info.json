{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "848bae5d4eb5654cbfe94e40c3d9f26f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a8f31c3be174349fc6b5a6ca92a518", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public CompletionEngine(\r \tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings)", "signatureAfterChange": "\r \r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tConfigurableOption[] settings)", "diff": ["+\tpublic CompletionEngine(\r", "+\t\tISearchableNameEnvironment nameEnvironment,\r", "+\t\tICompletionRequestor requestor,\r", "+\t\tConfigurableOption[] settings) {\r", "-public CompletionEngine(\r", "-\tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings) {\r", "+\t\tthis.requestor = requestor;\r", "+\t\tthis.nameEnvironment = nameEnvironment;\r", "-\tthis.requestor = requestor;\r", "-\tthis.nameEnvironment = nameEnvironment;\r", "-\r", "-\tCompilerOptions options = new CompilerOptions(settings);\r", "-\tProblemReporter problemReporter =\r", "-\t\tnew ProblemReporter(\r", "-\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\toptions,\r", "-\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "-\t\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "-\t\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "-\t\t\t\t\t\tunitResult.record(problem);\r", "-\t\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t\t\t}\r", "+\t\toptions = new CompletionOptions(settings);\r", "+\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "+\t\tProblemReporter problemReporter =\r", "+\t\t\tnew ProblemReporter(\r", "+\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\t\tcompilerOptions,\r", "+\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "+\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "+\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "+\t\t\t\t\tunitResult.record(problem);\r", "+\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t};\r", "-\r", "-\tthis.parser = new CompletionParser(problemReporter);\r", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-}\r", "+\t\t};\r", "+\r", "+\t\tthis.parser =\r", "+\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "+\t\tthis.lookupEnvironment =\r", "+\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5329f1f98b42a3402de29bd6cb38cb44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public CompletionEngine(\r \tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings)", "signatureAfterChange": "\r \r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tConfigurableOption[] settings)", "diff": ["+\tpublic CompletionEngine(\r", "+\t\tISearchableNameEnvironment nameEnvironment,\r", "+\t\tICompletionRequestor requestor,\r", "+\t\tConfigurableOption[] settings) {\r", "-public CompletionEngine(\r", "-\tISearchableNameEnvironment nameEnvironment, ICompletionRequestor requestor, ConfigurableOption[] settings) {\r", "+\t\tthis.requestor = requestor;\r", "+\t\tthis.nameEnvironment = nameEnvironment;\r", "-\tthis.requestor = requestor;\r", "-\tthis.nameEnvironment = nameEnvironment;\r", "-\r", "-\tCompilerOptions options = new CompilerOptions(settings);\r", "-\tProblemReporter problemReporter =\r", "-\t\tnew ProblemReporter(\r", "-\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\toptions,\r", "-\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "-\t\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "-\t\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "-\t\t\t\t\t\tunitResult.record(problem);\r", "-\t\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t\t\t}\r", "+\t\toptions = new CompletionOptions(settings);\r", "+\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "+\t\tProblemReporter problemReporter =\r", "+\t\t\tnew ProblemReporter(\r", "+\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\t\tcompilerOptions,\r", "+\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())) {\r", "+\t\t\tpublic void record(IProblem problem, CompilationResult unitResult) {\r", "+\t\t\t\tif (problem.getID() != ProblemIrritants.UnmatchedBracket) {\r", "+\t\t\t\t\tunitResult.record(problem);\r", "+\t\t\t\t\tCompletionEngine.this.requestor.acceptError(problem);\r", "-\t\t\t};\r", "-\r", "-\tthis.parser = new CompletionParser(problemReporter);\r", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-}\r", "+\t\t};\r", "+\r", "+\t\tthis.parser =\r", "+\t\t\tnew CompletionParser(problemReporter, compilerOptions.getAssertMode());\r", "+\t\tthis.lookupEnvironment =\r", "+\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t}\r"]}], "num": 67759}