{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81f2adac0010a80d76eca22a3f656799", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44750921b8d8cc11cc68fb0778990023", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tprivate String internalFormatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options, ConstructorDeclaration constructorDeclaration)", "signatureAfterChange": " \t \tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, int offset, int length)", "diff": ["-\tprivate String internalFormatStatements(String source, int indentationLevel, int[] positions, String lineSeparator, Map options, ConstructorDeclaration constructorDeclaration) {", "+\tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, int offset, int length) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length);", "-\t\tString result = this.newCodeFormatter.format(source, positions, constructorDeclaration);", "-\t\tif (positions != null) {", "-\t\t\tSystem.arraycopy(this.newCodeFormatter.scribe.mappedPositions, 0, positions, 0, positions.length);", "-\t\t}", "-\t\tthis.positionsMapping = positions;", "-\t\treturn result;", "+\t\treturn  this.newCodeFormatter.format(source, constructorDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a6f28211a4605caa026af69834a2204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate String internalFormatExpression(String source, int indentationLevel, int[] positions, String lineSeparator, Map options, Expression expression)", "signatureAfterChange": "  \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length)", "diff": ["-\tprivate String internalFormatExpression(String source, int indentationLevel, int[] positions, String lineSeparator, Map options, Expression expression) {", "+\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length);", "-\t\tString result = this.newCodeFormatter.format(source, positions, expression);", "-\t\tif (positions != null) {", "-\t\t\tSystem.arraycopy(this.newCodeFormatter.scribe.mappedPositions, 0, positions, 0, positions.length);", "-\t\t}", "-\t\tthis.positionsMapping = positions;", "-\t\treturn result;", "+\t\treturn this.newCodeFormatter.format(source, expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf001f0ebcc49ba4eee92d8ff22d3f62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate String internalFormatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator, Map options, AstNode[] bodyDeclarations)", "signatureAfterChange": "  \tprivate TextEdit internalFormatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, AstNode[] bodyDeclarations, int offset, int length)", "diff": ["-\tprivate String internalFormatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator, Map options, AstNode[] bodyDeclarations) {", "+\tprivate TextEdit internalFormatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, AstNode[] bodyDeclarations, int offset, int length) {", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options);", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, this.options, offset, length);", "-\t\tString result = this.newCodeFormatter.format(source, positions, bodyDeclarations);", "-\t\tif (positions != null) {", "-\t\t\tSystem.arraycopy(this.newCodeFormatter.scribe.mappedPositions, 0, positions, 0, positions.length);", "-\t\t}", "-\t\tthis.positionsMapping = positions;", "-\t\treturn result;", "+\t\treturn this.newCodeFormatter.format(source, bodyDeclarations);"]}], "num": 20519}