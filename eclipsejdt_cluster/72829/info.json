{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "affafcda1fc887e0f086e5048c250520", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06824fa5c210d7164864f2dc7ad8999c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tfinal private boolean isPotentiallyAssigned(int position)", "signatureAfterChange": " final private boolean isPotentiallyAssigned(int position)", "diff": ["+ */", "+final private boolean isPotentiallyAssigned(int position) {", "+\t// id is zero-based", "+\tif (position < BitCacheSize) {", "+\t\t// use bits", "+\t\treturn (this.potentialInits & (1L << position)) != 0;", "+\t}", "+\t// use extra vector", "+\tif (this.extra == null) {", "+\t\treturn false; // if vector not yet allocated, then not initialized", "+\t}", "+\tint vectorIndex;", "+\tif ((vectorIndex = (position / BitCacheSize) - 1) ", "+\t\t\t>= this.extra[0].length) {", "+\t\treturn false; // if not enough room in vector, then not initialized", "+\t}", "+\treturn ((this.extra[1][vectorIndex]) & ", "+\t\t\t(1L << (position % BitCacheSize))) != 0;", "+}", "-\t */", "-\tfinal private boolean isPotentiallyAssigned(int position) {", "-\t\t", "-\t\t// id is zero-based", "-\t\t\treturn (potentialInits & (1L << position)) != 0;", "-\t\t}", "-\t\t// use extra vector", "-\t\tif (extraPotentialInits == null)", "-\t\t\treturn false; // if vector not yet allocated, then not initialized", "-\t\tint vectorIndex;", "-\t\tif ((vectorIndex = (position / BitCacheSize) - 1) >= extraPotentialInits.length)", "-\t\t\treturn false; // if not enough room in vector, then not initialized ", "-\t\treturn ((extraPotentialInits[vectorIndex]) & (1L << (position % BitCacheSize))) != 0;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2334aebe2748a0d591cf6c324b98553f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tfinal private boolean isDefinitelyAssigned(int position)", "signatureAfterChange": " final private boolean isDefinitelyAssigned(int position)", "diff": ["+ */", "+final private boolean isDefinitelyAssigned(int position) {", "+\tif (position < BitCacheSize) {", "+\t\t// use bits", "+\t\treturn (this.definiteInits & (1L << position)) != 0; ", "+\t}", "+\t// use extra vector", "+\tif (this.extra == null)", "+\t\treturn false; // if vector not yet allocated, then not initialized", "+\tint vectorIndex;", "+\tif ((vectorIndex = (position / BitCacheSize) - 1) ", "+\t\t\t>= this.extra[0].length) {", "+\t\treturn false; // if not enough room in vector, then not initialized", "+\t}", "+\treturn ((this.extra[0][vectorIndex]) & ", "+\t\t\t\t(1L << (position % BitCacheSize))) != 0;", "+}", "-\t */", "-\tfinal private boolean isDefinitelyAssigned(int position) {", "-\t\t", "-\t\t// Dependant of CodeStream.isDefinitelyAssigned(..)", "-\t\t// id is zero-based", "-\t\tif (position < BitCacheSize) {", "-\t\t\treturn (definiteInits & (1L << position)) != 0; // use bits", "-\t\t// use extra vector", "-\t\tif (extraDefiniteInits == null)", "-\t\t\treturn false; // if vector not yet allocated, then not initialized", "-\t\tint vectorIndex;", "-\t\tif ((vectorIndex = (position / BitCacheSize) - 1) >= extraDefiniteInits.length)", "-\t\t\treturn false; // if not enough room in vector, then not initialized ", "-\t\treturn ((extraDefiniteInits[vectorIndex]) & (1L << (position % BitCacheSize))) != 0;"]}], "num": 72829}