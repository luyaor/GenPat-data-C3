{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a037a15170f708b158319d087754a8f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2526ced41fffb91582833a91b771ae69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "e75e459d2433b031258505e58fc5ac2021396b35", "commitAfterChange": "c859b9df56c083dbdae90b6caf0be3691b2a11a9", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \" Annotation processing options:\\n\" +", "-        \"   These options are meaningful only in a 1.6 environment.\\n\" +", "-        \"    -Akey[=value]        annotation processors options that are made to\\n\" +", "-        \"                         annotation processors. key are identifiers separated\\n\" +", "-        \"                         by ''.''.\\n\" +", "-        \"    -processorpath <directories and zip/jar files separated by \" + File.pathSeparator + \">\\n\" +", "-        \"                         specify locations where to find annotation processors\\n\" +", "-        \"                         If this option is not used, the classpath will be\\n\" +", "-        \"                         searched for processors.\\n\" +", "-        \"    -processor <class1[,class2,...]>\\n\" +", "-        \"                         Qualified names of the annotation processors to run.\\n\" +", "-        \"                         This bypasses the default annotation discovery process\\n\" +", "-        \"    -proc:only           run annotation processors, but do not compile\\n\" +", "-        \"    -proc:none           perform compilation but do not run annotation\\n\" +", "-        \"                         processors\\n\" +", "-        \"    -s <dir>             specify a directory where to put the generated source\\n\" +", "-        \"                         files\\n\" +", "-        \"    -XprintProcessorInfo print information about which annotations and which\\n\" +", "-        \"                         elements a processor is asked to process\\n\" +", "-        \"    -XprintRounds        print information about annotation processing rounds.\\n\" +", "+        \" Annotation processing options:\\n\" + ", "+        \"   These options are meaningful only in a 1.6 environment.\\n\" + ", "+        \"    -Akey[=value]        options that are passed to annotation processors\\n\" + ", "+        \"    -processorpath <directories and zip/jar files separated by \" + File.pathSeparator + \">\\n\" + ", "+        \"                         specify locations where to find annotation processors.\\n\" + ", "+        \"                         If this option is not used, the classpath will be\\n\" + ", "+        \"                         searched for processors\\n\" + ", "+        \"    -processor <class1[,class2,...]>\\n\" + ", "+        \"                         qualified names of the annotation processors to run.\\n\" + ", "+        \"                         This bypasses the default annotation discovery process\\n\" + ", "+        \"    -proc:only           run annotation processors, but do not compile\\n\" + ", "+        \"    -proc:none           perform compilation but do not run annotation\\n\" + ", "+        \"                         processors\\n\" + ", "+        \"    -s <dir>             destination directory for generated source files\\n\" + ", "+        \"    -XprintProcessorInfo print information about which annotations and elements\\n\" + ", "+        \"                         a processor is asked to process\\n\" + ", "+        \"    -XprintRounds        print information about annotation processing rounds\\n\" + ", "-        \"                         Qualified names of the classes that need\\n\" + ", "-        \"                         to be processed\\n\" + ", "+        \"                         qualified names of binary classes to process\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddd797758f9f3b935351be2931706ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptBuilderTests.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@SuppressWarnings(\"nls\") \tpublic void testCaching()", "signatureAfterChange": "  \t@SuppressWarnings(\"nls\") \tpublic void testCaching()", "diff": ["-\t\t\t+ \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\\n\"", "-\t\t\t+ \"import generatedfilepackage.GeneratedFileTest;\"", "+\t\t\t+ \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\"", "-\t\t\t+ \"        GeneratedFileTest.helloWorld();\"", "-\t\t\t+ \"\\n\" ", "-\t\t\t+ \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\\n\"", "-\t\t\t+ \"import generatedfilepackage.GeneratedFileTest;\"", "+\t\t\t+ \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\"", "-\t\t\t+ \"        GeneratedFileTest.helloWorld();\"", "+\t\t\t+ \"        \"", "-\t\t// Compilation count", "-\t\t// - A gets compiled by jdt", "-\t\t// - A get compiled by APT through DOM ast creation", "-\t\t// - GeneratedFileTest get compiled by jdt.core", "-\t\t//   (APT does nothing with it since it doesn't contain annotations", "-\t\t// - A get compiled by jdt because of dependencies on GeneratedFileTest.", "-\t\texpectingCompiledClasses(new String[] {\"p1.A\", \"p1.A\", \"p1.A\", \"generatedfilepackage.GeneratedFileTest\"}); //$NON-NLS-1 //$NON_NLS-2$", "+\t\texpectingCompiledClasses(new String[] {\"p1.A\", \"p1.A\", \"generatedfilepackage.GeneratedFileTest\"}); //$NON-NLS-1 //$NON_NLS-2$"]}], "num": 13482}