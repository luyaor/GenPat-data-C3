{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4663a4256c1f40ea07c65e2649716036", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92dbea218bd1446af612cb4d0f9ecde1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "06ef44690fe24d501e454225fb1826f5b17b1d04", "commitAfterChange": "dc7a7b6f40998ae205659756ab71c9e47db21b40", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration()", "diff": ["+\t\t} else if(fieldDeclaration.getKind() == AbstractVariableDeclaration.ENUM_CONSTANT) {", "+\t\t\t// fieldDeclaration is an enum constant", "+\t\t\tfor (int i = 0; i < this.anonymousTypeCount; i++){", "+\t\t\t\tif (anonymousTypes[i].preserveContent){", "+\t\t\t\t\tthis.anonymousTypes[i].updatedTypeDeclaration();", "+\t\t\t\t}", "+\t\t\t}", "-//\t\telse if(fieldDeclaration.type == null) {", "-//\t\t\t// fieldDeclaration is an enum constant", "-//\t\t\tfor (int i = 0; i < this.anonymousTypeCount; i++){", "-//\t\t\t\tif (anonymousTypes[i].preserveContent){", "-//\t\t\t\t\tthis.anonymousTypes[i].updatedTypeDeclaration();", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81f0ce73f6fbed27e28ab377a90513a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "commitAfterChange": "e43c8c0f67a0087e9b964d25afd6c8f6f400f425", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration()", "diff": ["-\tif (this.anonymousTypes != null && fieldDeclaration.initialization == null) {", "-\t\tfor (int i = 0; i < this.anonymousTypeCount; i++){", "-\t\t\tif (anonymousTypes[i].preserveContent){", "-\t\t\t\tfieldDeclaration.initialization = this.anonymousTypes[i].updatedTypeDeclaration().allocation;", "+\tif (this.anonymousTypes != null) {", "+\t\tif(fieldDeclaration.initialization == null) {", "+\t\t\tfor (int i = 0; i < this.anonymousTypeCount; i++){", "+\t\t\t\tif (anonymousTypes[i].preserveContent){", "+\t\t\t\t\tfieldDeclaration.initialization = this.anonymousTypes[i].updatedTypeDeclaration().allocation;", "+\t\t\t\t}", "+\t\t\tif (this.anonymousTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalTypeMASK;", "-\t\tif (this.anonymousTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalTypeMASK;", "+//\t\telse if(fieldDeclaration.type == null) {", "+//\t\t\t// fieldDeclaration is an enum constant", "+//\t\t\tfor (int i = 0; i < this.anonymousTypeCount; i++){", "+//\t\t\t\tif (anonymousTypes[i].preserveContent){", "+//\t\t\t\t\tthis.anonymousTypes[i].updatedTypeDeclaration();", "+//\t\t\t\t}", "+//\t\t\t}", "+//\t\t}"]}], "num": 41505}