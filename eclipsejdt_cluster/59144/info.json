{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb14002f4aeded59f4bb26aeb401b250", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188cb4294760c3d10b8356f162dca811", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t public CodeStream(ClassFile classFile, long targetLevel)", "signatureAfterChange": " public CodeStream(ClassFile classFile)", "diff": ["-public CodeStream(ClassFile classFile, long targetLevel) {", "-\tthis.targetLevel = targetLevel;", "+public boolean wideMode = false;", "+public CodeStream(ClassFile classFile) {", "+\tthis.targetLevel = classFile.targetJDK;", "+\tthis.manageLocalVariables = (classFile.produceDebugAttributes & CompilerOptions.Vars) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4a9774c1085b69940d3cddaa694df4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "82743b33822fbb1e8747641a56800f2dd66cbc54", "commitAfterChange": "ab734870d680bdde73d51371df0336cce36fb2b0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals, long sourceLevel)", "signatureAfterChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "diff": ["-public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals, long sourceLevel) {", "+public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals) {", "+\tthis.options = problemReporter.options;", "+\t// by default will treat empty statements according to compliance setting (can be toggled independantly, e.g. DOM)", "+\tthis.keepEmptyStatement = this.options.complianceLevel >= CompilerOptions.JDK1_4;", "-\tthis.sourceLevel = sourceLevel;"]}], "num": 59144}