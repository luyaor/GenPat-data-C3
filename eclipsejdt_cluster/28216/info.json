{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ff3e4d529de1e807179eb63aa1f1386", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05dbcb1e3a3c702b3f0e0ecfb03fb0f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "commitAfterChange": "836ae67c2add920e65fb3c96c91d70ef75edbb79", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treconcile(forceProblemDetection, null/*use primary owner*/, monitor);", "+\treconcile(false/*don't create AST*/, forceProblemDetection, null/*use primary owner*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0625e03362a66d8b5a157b45a8f097e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "20607cc9da90bd1294c224d1eff6327bec9954ac", "commitAfterChange": "11dd8a99a088c0f8f708fce4ca2ab2a6381f554a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tSyntheticArgumentBinding syntheticEnclosingInstanceArgument = nestedEnclosing.getSyntheticArgument(nestedEnclosing.enclosingType(), true);", "+\t\t\t\t\tSyntheticArgumentBinding syntheticEnclosingInstanceArgument = nestedEnclosing.getSyntheticArgument(nestedEnclosing.enclosingType(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ced9a1d9cbc461e2557bffdbf5ffea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void testBug408230h() throws CoreException", "signatureAfterChange": " public void testBug408230h() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d53f696e9d17ec60a9fe120bca899b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tvoid encodeAccessRules(XMLWriter writer, boolean indent, boolean newLine)", "signatureAfterChange": " \t \tvoid encodeAccessRules(XMLWriter writer, boolean indent, boolean newLine)", "diff": ["-\t\twriter.endTag(TAG_ACCESS_RULES, indent);", "+\t\twriter.endTag(TAG_ACCESS_RULES, indent, true/*insert new line*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dbd5dac91ae967931042bec3ed25baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "3df203dd14216a5a05c7609bcd2dd61cc345cbe4", "commitAfterChange": "220df3e54541b1d486d18b098bb99954035d7238", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t        folderChanges[i].updateExternalFoldersIfNecessary(null);", "+\t\t\t\t\t        folderChanges[i].updateExternalFoldersIfNecessary(false/*do not refresh since we are not in the thread that added the external folder to the classpath*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1516ccc8f00e12cb0afbcfd1513479f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tTypeBinding variableType = type.resolveType(scope);", "+\t\tTypeBinding variableType = type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162aad197f9f894fc01e1e402869e6dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/OutputFolderTests.java", "commitBeforeChange": "8e8e663712dd5d3efa5b3a52e06d79d66d0dbf06", "commitAfterChange": "eb5fe9a9319b819d64960c44d91e2995208510e4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void testInvalidOutput() throws JavaModelException", "signatureAfterChange": " \tpublic void testInvalidOutput() throws JavaModelException", "diff": ["-\t\tmanager.removePerProjectInfo(project);", "+\t\tmanager.removePerProjectInfo(project, true /* remove external jar files indexes and timestamps*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16fef16375a8331eadaaf97888628859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "074b3920fbbf6bc6abc175d15b77618012b39aae", "commitAfterChange": "4c2eb0154d00e6d430e37f1ab9bc6931c8defe10", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic Object toStringInfo(int tab, StringBuffer buffer)", "signatureAfterChange": " \tpublic Object toStringInfo(int tab, StringBuffer buffer)", "diff": ["-\t\tthis.toStringInfo(tab, buffer, info);", "+\t\tthis.toStringInfo(tab, buffer, info, true/*show resolved info*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a06a2dcd3981c11f0f544cb21bf56ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tif (isMethodUseDeprecated(this.binding, scope)) {", "+\t\tif (isMethodUseDeprecated(this.binding, scope, true)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c35f55e7b44b81e04eaccf4a48eacad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tmethodBinding = classScope.findMethod(receiverType, selector, argumentTypes, invocationSite);", "+\t\t\t\t\t\t\tmethodBinding = classScope.findMethod(receiverType, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c73e7836ff7403f7194ebad36aacd3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif ((this.codegenBinding = this.binding = scope.getBinding(tokens, bits & RestrictiveFlagMASK, this)).isValidBinding()) {", "+\t\tif ((this.codegenBinding = this.binding = scope.getBinding(tokens, bits & RestrictiveFlagMASK, this, true /*resolve*/)).isValidBinding()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d084d3d33c24b6f0be8e5b712c149d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public AnnotationBinding getNonNullAnnotation()", "signatureAfterChange": "  public AnnotationBinding getNonNullAnnotation()", "diff": ["-\treturn this.nonNullAnnotation = this.typeSystem.getAnnotationType(nonNull);", "+\treturn this.nonNullAnnotation = this.typeSystem.getAnnotationType(nonNull, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa4fd91246e3c90da29c82d0da14cbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic boolean isCompatibleWith(final TypeBinding left, final Scope someScope)", "signatureAfterChange": " \t \tpublic boolean isCompatibleWith(final TypeBinding left, final Scope someScope)", "diff": ["-\t\tfinal MethodBinding sam = left.getSingleAbstractMethod(this.enclosingScope);", "+\t\tfinal MethodBinding sam = left.getSingleAbstractMethod(this.enclosingScope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20271f4a0841ac1fbec336ba5a1eb1c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\tworkingCopy.openWhenClosed(workingCopy.createElementInfo(), this.progressMonitor);", "+\t\tworkingCopy.openWhenClosed(workingCopy.createElementInfo(), true, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233fc47df9ad65562c0e7c9f5583f3d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "commitAfterChange": "836ae67c2add920e65fb3c96c91d70ef75edbb79", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public IMarker[] reconcile() throws JavaModelException", "signatureAfterChange": " public IMarker[] reconcile() throws JavaModelException", "diff": ["-\treconcile(false/*don't force problem detection*/, null/*use primary owner*/, null/*no progress monitor*/);", "+\treconcile(false/*don't create AST*/, false/*don't force problem detection*/, null/*use primary owner*/, null/*no progress monitor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2549b6039eb209e42c2a37d400bc3151", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite);", "+\t\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255dbc94ed3928447044bd86949034dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a13ea647a4f4bc5437bbde0cf7788256ede6cc96", "commitAfterChange": "1ab17a7eba14d35875267cc7b416da000a14dc1e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic ITypeBinding getTypeDeclaration()", "signatureAfterChange": " \tpublic ITypeBinding getTypeDeclaration()", "diff": ["-\t\treturn this.resolver.getTypeBinding(this.binding.unannotated());", "+\t\treturn this.resolver.getTypeBinding(this.binding.unannotated(false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28e2b711f749c2c936148ff277a9c8a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\tthis.binding = scope.findMethod(receiverType, TypeConstants.INIT, pseudoArgs, this);", "+\t\t\t\t\tthis.binding = scope.findMethod(receiverType, TypeConstants.INIT, pseudoArgs, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294bb45265977f7c222a63d6672e5817", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "349c3b5a850fbdbf23ec6c6153a095f70d61338c", "commitAfterChange": "00a3f3c32948c64188954cac2f1e0a1305db911b", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tvoid reportUncheckedConversions(BoundSet solution)", "signatureAfterChange": " \t \tvoid reportUncheckedConversions(BoundSet solution)", "diff": ["-\t\t\tSubstitution substitution = getResultSubstitution(solution);", "+\t\t\tSubstitution substitution = getResultSubstitution(solution, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "296968ab8846de4bfb3961dfcc8b53d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "141285694dc186f382cdc5e23d991883a93f9f68", "commitAfterChange": "bea430fec612168745d91278c4d6f4fccc5c2fd4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " protected CompilationUnitDeclaration endParse(int act)", "signatureAfterChange": " protected CompilationUnitDeclaration endParse(int act)", "diff": ["-\t\t\t\tconsumeMethodDeclaration(true);", "+\t\t\t\tconsumeMethodDeclaration(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aafa9f2af4835148c69116558de67c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void parseCompilationUnit(ICompilationUnit unit)", "signatureAfterChange": " public void parseCompilationUnit(ICompilationUnit unit)", "diff": ["-\t\tinitialize();", "+\t\tinitialize(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b11c84056ecc6914145caa1a7df9558", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void testBug408230c() throws CoreException", "signatureAfterChange": " public void testBug408230c() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd53807d89bb067655470c90aa065e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f673a1d9c7172b796dd31cfa78dd0dad32318c9f", "commitAfterChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic FileGenerationResult generateFileDuringBuild(List<IFile> parentFiles, String typeName, String contents, \t\t\tboolean clearDuringReconcile, IProgressMonitor progressMonitor) throws CoreException", "signatureAfterChange": " \tpublic FileGenerationResult generateFileDuringBuild(List<IFile> parentFiles, String typeName, String contents, \t\t\tboolean clearDuringReconcile, IProgressMonitor progressMonitor) throws CoreException", "diff": ["-\t\t\t\t\taddBuiltFileToMaps(parentFile, file);", "+\t\t\t\t\taddBuiltFileToMaps(parentFile, file, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d405537ee5e1c9d5f73bb3e3f259ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "commitAfterChange": "0db36dd259a6320ea4c536f5dd076aa73d4d8836", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate ICompilationUnit getCachedWorkingCopy( ICompilationUnit parentCompilationUnit, String typeName ) \t\tthrows CoreException", "signatureAfterChange": " \tprivate ICompilationUnit getCachedWorkingCopy( ICompilationUnit parentCompilationUnit, String typeName ) \t\tthrows CoreException", "diff": ["-\t\tIFile derivedFile = getIFileForTypeName( typeName, parentCompilationUnit.getJavaProject(), null /*progressMonitor*/ );", "+\t\tIFile derivedFile = getIFileForTypeName( typeName, parentCompilationUnit.getJavaProject(), false, null /*progressMonitor*/ );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3222204345fcc42509ed6f45a1b01ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor.java", "commitBeforeChange": "c7acc8c3c53a2a553d77237c9dda5cf9d52f46e8", "commitAfterChange": "8ca1150fb7e309aea26ee7066805b8fa23096c4f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public String getResults()", "signatureAfterChange": "  public String getResults()", "diff": ["-\treturn getResults(true);", "+\treturn getResults(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326eb6beed05dedbb5839284f1880c00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tresolveAnnotations(scope, this.annotations, this.binding);", "+\t\tresolveAnnotations(scope, this.annotations, this.binding, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d4ab16c7e4788162914f4b50c37dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treturn openWhenClosed(createElementInfo(), monitor);", "+\treturn openWhenClosed(createElementInfo(), false, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c071a92a5ab09e730b3c1b84a0ebf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "cbfd067641796f6985a0e5364caf12dd4a6d8906", "commitAfterChange": "aeba2c4302e0eda57cf037e76e7dd42f94a39592", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void accept(ICompilationUnit sourceUnit)", "signatureAfterChange": " public void accept(ICompilationUnit sourceUnit)", "diff": ["-\t\tlookupEnvironment.completeTypeBindings(parsedUnit);", "+\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3ce14229b087e69cb7797a3d216384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": " \tpublic void test0190() throws CoreException, IOException", "signatureAfterChange": " \tpublic void test0190() throws CoreException, IOException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7d10bec659edf70be98dbf85c83191", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExceptionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic Object reduce(InferenceContext18 inferenceContext)", "signatureAfterChange": " \t \tpublic Object reduce(InferenceContext18 inferenceContext)", "diff": ["-\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(scope);", "+\t\t\tMethodBinding sam = this.right.getSingleAbstractMethod(scope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ffa719720f51b6285a870aec36a4684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "33ff4c39221515c361c048ca8d82ab0842128f68", "commitAfterChange": "52c3e11bebfd77bae8ba05a3cddf1245a594b7b7", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \r  public String[][] resolveType(String typeName) throws JavaModelException", "signatureAfterChange": "\r \r  public String[][] resolveType(String typeName) throws JavaModelException", "diff": ["-\tengine.selectType(info, typeName.toCharArray());\r", "+\tengine.selectType(info, typeName.toCharArray(), false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f2b668f14734edbfadf466d15f6e82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void test0426() throws JavaModelException", "signatureAfterChange": " \tpublic void test0426() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(sourceUnit, true);", "+\t\tASTNode result = runConversion(sourceUnit, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49b4b5b61daee7eaba99a63eea67ec9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "a7a4bb422b80975020031dc2489c1287582f5bac", "commitAfterChange": "a90f0807d0eec8879b31dc133746e8ac20dd17d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, this.progressMonitor);", "+\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, true/*isResolved*/, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb53999c193200a945e1691835d5ec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\t\tAnnotation [][] annotationsOnDimensions = argumentType.getAnnotationsOnDimensions();", "+\t\t\tAnnotation [][] annotationsOnDimensions = argumentType.getAnnotationsOnDimensions(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f2e10fc4603eeddcb05589c4b25cfdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public AnnotationBinding getNullableAnnotation()", "signatureAfterChange": "  public AnnotationBinding getNullableAnnotation()", "diff": ["-\treturn this.nullableAnnotation = this.typeSystem.getAnnotationType(nullable);", "+\treturn this.nullableAnnotation = this.typeSystem.getAnnotationType(nullable, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5163619cdaa23b1970227092dabf619b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  public boolean isFunctionalInterface(Scope scope)", "signatureAfterChange": "  public boolean isFunctionalInterface(Scope scope)", "diff": ["-\treturn isInterface() && (method = getSingleAbstractMethod(scope)) != null && method.isValidBinding();", "+\treturn isInterface() && (method = getSingleAbstractMethod(scope, true)) != null && method.isValidBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8e67cba65efe958415676cdf014394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tpublic boolean visit(EnumConstantDeclaration node)", "signatureAfterChange": "  \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["-\t\t\tformatTypeMembers(bodyDeclarations);", "+\t\t\tformatTypeMembers(bodyDeclarations, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d0c91a8a05a008c1dcdb6e3d131c766", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\tMethodBinding functionType = t.getSingleAbstractMethod(inferenceContext.scope);", "+\t\tMethodBinding functionType = t.getSingleAbstractMethod(inferenceContext.scope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d458475dde9124b86e30e82a09d5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " \tpublic void test0580() throws JavaModelException", "signatureAfterChange": " \tpublic void test0580() throws JavaModelException", "diff": ["-\t\t\tcheckSourceRange(fieldDeclaration, \"d String[][]\", source.toCharArray());", "+\t\t\tcheckSourceRange(fieldDeclaration, \"d String[][]\", source.toCharArray(), true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62eb647b86a4efa0f0981e67b7a3f324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " private FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\t\t: fieldDecl.type.resolveType(initializationScope);", "+\t\t\t\t\t\t: fieldDecl.type.resolveType(initializationScope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640a1a2eac052ad1535e8894f0f1be13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6411d8fa47934cb2e064a3075fe093a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " \tprotected void findMembers( \t\t\tchar[] token, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tboolean isInsideAnnotationAttribute, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprotected void findMembers( \t\t\tchar[] token, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tboolean isInsideAnnotationAttribute, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\tfindKeywords(token, new char[][]{Keywords.THIS}, false, true);", "+\t\t\t\tfindKeywords(token, new char[][]{Keywords.THIS}, false, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fb52f3f65f6b0c3cbd2919040d9a21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void _dload(int pc, int index)", "signatureAfterChange": " \tpublic void _dload(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6622ee202e8580699aba49632158398e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "commitAfterChange": "63231f253dc3aaae18caf57a7f77da85f8cefe96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic NonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, LookupEnvironment environment)", "signatureAfterChange": " \tpublic NonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, LookupEnvironment environment)", "diff": ["-\t\tthis(defaultNullness, getNonNullAnnotation(environment), false);", "+\t\tthis(defaultNullness, getNonNullAnnotation(environment), false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66d5bd843a201901320f601d69625d29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": " \tpublic void test0174() throws JavaModelException", "signatureAfterChange": " \tpublic void test0174() throws JavaModelException", "diff": ["-    \t\t\tthis.workingCopy);", "+    \t\t\tthis.workingCopy,", "+    \t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "670dcaca393b2cfeca5e3c53bbfac1c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tTypeBinding exceptionType = this.type.resolveType(scope);", "+\t\tTypeBinding exceptionType = this.type.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8a1b684b4d0939d47a707e508b83a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(DoStatement doStatement, BlockScope scope)", "diff": ["-\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block);", "+\t\t\t\tformatLeftCurlyBrace(line, this.preferences.brace_position_for_block, true /* print comment */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc8a03ef4345788951012cdf0ac45c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TextEdit format(String string, AbstractTypeDeclaration typeDeclaration)", "signatureAfterChange": " \tpublic TextEdit format(String string, AbstractTypeDeclaration typeDeclaration)", "diff": ["-\t\t\tformatTypeMembers(typeDeclaration.bodyDeclarations());", "+\t\t\tformatTypeMembers(typeDeclaration.bodyDeclarations(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dfe1034ae07853fad0da6c928f619db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected boolean parseIdentifierTag(boolean report)", "signatureAfterChange": " \tprotected boolean parseIdentifierTag(boolean report)", "diff": ["-\t\t\t\tpushIdentifier(true);", "+\t\t\t\tpushIdentifier(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e88d538f90c2205afe632aed63b0855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getImplicitMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tmethodBinding = findMethod(receiverType, selector, argumentTypes, invocationSite);", "+\t\tmethodBinding = findMethod(receiverType, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f785d99a6dd2255fff0a0b61213512a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "f97912416c5f4661289c43d63ee763608220be3f", "commitAfterChange": "e5efe07482ca39d7bb013c10359ef31d2cc33138", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected Object parseMember(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprotected Object parseMember(Object receiver) throws InvalidInputException", "diff": ["-\t\t\tpushIdentifier(true);", "+\t\t\tpushIdentifier(true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7258732b8b19740be4472f54e97231f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 183, "signatureBeforeChange": " \tpublic void _lstore(int pc, int index)", "signatureAfterChange": " \tpublic void _lstore(int pc, int index)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7393fbad33accae33d6271fb24871a07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\tMethodBinding functionType = t.getSingleAbstractMethod(scope);", "+\t\t\t\tMethodBinding functionType = t.getSingleAbstractMethod(scope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "752315f743ffa00773afa2dc15e45ef3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "signatureAfterChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "diff": ["-\t\t\t\t\t\tenumDeclaration.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\t\tenumDeclaration.bodyDeclarations().add(convert(false, nextMethodDeclaration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75e82e47f63d5d0f33fda87497aa5f8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "aa23b2a14c48eb2e68c0b76ca03ad3cd13f67188", "commitAfterChange": "97ecea4988b025b105080d33f2f05e43659a9d0a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes)", "signatureAfterChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes)", "diff": ["-\t\tif (scope.parameterCompatibilityLevel(this.binding, finalArgumentTypes, false) == Scope.NOT_COMPATIBLE)", "+\t\tif (scope.parameterCompatibilityLevel(this.binding, finalArgumentTypes, false, false) == Scope.NOT_COMPATIBLE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a5037d2ec2a21957c5149c6ee026a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "commitAfterChange": "72465f40b09586b7077dc16c43e2ab23727eff60", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": " \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["-\t\t\t\t\t\t\t\tfalse); // updating only - no validation", "+\t\t\t\t\t\t\t\tfalse, // updating only - no validation", "+\t\t\t\t\t\t\t\tfalse); // updating only - no need to save"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c97498b7ac69cc6388cdf21c8fc248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void resolveReference(Expression reference, Scope scope)", "signatureAfterChange": "  \tprivate void resolveReference(Expression reference, Scope scope)", "diff": ["-\t\t\t\t\t\tfieldRef.methodBinding = scope.findMethod(resolvedType, fieldRef.token, Binding.NO_TYPES, fieldRef);", "+\t\t\t\t\t\tfieldRef.methodBinding = scope.findMethod(resolvedType, fieldRef.token, Binding.NO_TYPES, fieldRef, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2537aefd0389415c6331eb95ae9227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding) this.resolvedType, TypeConstants.INIT, pseudoArgs, this);", "+\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding) this.resolvedType, TypeConstants.INIT, pseudoArgs, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f1a1f3b0afc13c45a484c6f0bc83fd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsBugsTest.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void testBug234336() throws JavaModelException", "signatureAfterChange": " public void testBug234336() throws JavaModelException", "diff": ["-\t\t1 /* indentation level */", "+\t\t1, /* indentation level */", "+\t\ttrue /* formatting twice */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859fe06ceca33305710799bd94d02f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "0df9f1687f9162f2dcdfeec3aed4b01b8d385a19", "commitAfterChange": "ce0f19288bc3747a9c0cb27b6996f5589afb99d1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "signatureAfterChange": " protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "diff": ["-\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, true/*consider secondary types*/);", "+\t\t\ttype= this.nameLookup.findType(new String(typeName), pkgs[i], false, acceptFlags, false, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8651d77e282ec0b3f0bdf831274c01b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "d7c990d50da3096d1d0c829cba02221aeda7589f", "commitAfterChange": "924bb53fdc2b8abef6daacf4b8eb0fd3e9ce7fd5", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 206, "signatureBeforeChange": " \tpublic void test0192() throws JavaModelException", "signatureAfterChange": " \tpublic void test0192() throws JavaModelException", "diff": ["-\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy);", "+\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy, false/*don't report errors*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c3921e116d4cb3a57c71bb405132d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs)", "signatureAfterChange": " public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs)", "diff": ["- */", "+*/", "-\treturn this.typeSystem.getAnnotationType(annotationType);", "+\treturn this.typeSystem.getAnnotationType(annotationType, true);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "873925ca56bc80f4e584db58177b61b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d57293f4f12e1bef48b48f8eb4effbb7e4554bd3", "commitAfterChange": "80133b35a6b0bcde494737060ceebe86e07b8204", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 260, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "diff": ["-\trejectIllegalTypeAnnotations(cla.type);", "+\trejectIllegalTypeAnnotations(cla.type, true /* tolerate annotations on dimensions for bug compatibility for now */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f2c587dc176af3491e264c81d4b1e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\t\tthis.nameEnvironment.findTypes(typeName, false, this);", "+\t\t\t\t\tthis.nameEnvironment.findTypes(typeName, false, false,this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5ee05e6b449165bb809b275f3462c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test0504() throws JavaModelException", "signatureAfterChange": " \tpublic void test0504() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(declaration, \"public method(final int parameter);\", source);", "+\t\tcheckSourceRange(declaration, \"public method(final int parameter);\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8babe2cb3fe092a6976c85fdf9b66dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tunits[i] = SourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);", "+\t\t\t\tunits[i] = ", "+\t\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\t\t\t\tnew ISourceType[]{topLevelType}, ", "+\t\t\t\t\t\tfalse, // no need for field and methods", "+\t\t\t\t\t\ttrue, // need member types", "+\t\t\t\t\t\tfalse, // no need for field initialization", "+\t\t\t\t\t\tlookupEnvironment.problemReporter, ", "+\t\t\t\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c902280c4a1832ee223ffadf69d2a14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "674abcbfdf2c43bf14e65ea6f159909a170aba7f", "commitAfterChange": "cc7978cf3a57be1b542037d3f952d1a752c687f8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["-\t\tcleanOutputFolders();", "+\t\tcleanOutputFolders(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cffabef2b5166f81428a19b530b91cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope)) == null) {", "+\t\t\tif ((this.genericTypeArguments[i] = this.typeArguments[i].resolveType(scope, true /* check bounds*/)) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90864add2de2d2846391ab4650ff516e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "f8e06af2d64912de617f742baa744d8cff14ca39", "commitAfterChange": "799bcf90c7e5ed6ce45339b7f5c6f4ecccd1d29c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic TypeBinding invocationTargetType()", "signatureAfterChange": "  \tpublic TypeBinding invocationTargetType()", "diff": ["-\t\tMethodBinding sam = this.expectedType.getSingleAbstractMethod(this.enclosingScope);", "+\t\tMethodBinding sam = this.expectedType.getSingleAbstractMethod(this.enclosingScope, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9213dacec7b3d6fe05b1050b259863a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "e37796f522b7bb4721626cf54f6fb6424b32950c", "commitAfterChange": "cb73a34d3fbf60bb435ba470954bcb213328d377", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected void expectingSpecificProblemFor(IPath root, Problem problem)", "signatureAfterChange": " \tprotected void expectingSpecificProblemFor(IPath root, Problem problem)", "diff": ["-\t\texpectingSpecificProblemsFor(root, new Problem[] { problem });", "+\t\texpectingSpecificProblemsFor(root, new Problem[] { problem }, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92dd971a9f1fffe083ea2c0792ccd178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void _iinc(int pc, int index, int _const)", "signatureAfterChange": " \tpublic void _iinc(int pc, int index, int _const)", "diff": ["-\t\t\tgetLocalVariableName(pc, index)", "+\t\t\tgetLocalVariableName(pc, index, false)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e28d465c281b3c319b92dae16de314", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\t \t \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "\t \t \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t    return internalResolveType(scope, enclosingType);", "+\t    return internalResolveType(scope, enclosingType, true/*check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a6f14242b3658220a4eb025fa09cf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "706d05b886f888f588421e058e652ee36abfc780", "commitAfterChange": "1e5960a8e1d6d5a1af8d629bddab71c46e5ed5a1", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, \t\t\tLinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager, \t\t\tMap oldChainedEntriesMap, boolean addAsChainedEntry)", "signatureAfterChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, \t\t\tLinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager, \t\t\tMap oldChainedEntriesMap, boolean addAsChainedEntry)", "diff": ["-\t\t\texternalFoldersManager.addFolder(resolvedPath); // no-op if not an external folder or if already registered", "+\t\t\texternalFoldersManager.addFolder(resolvedPath, true/*scheduleForCreation*/); // no-op if not an external folder or if already registered"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8d083804a1c8597c235a091597bc2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "commitAfterChange": "5663a1e0521003a6152962cf3fce8cc9ca6a4647", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void formatDimensions(TypeReference typeReference, int anchor, int count, boolean spaceBeforeAnnotation)", "signatureAfterChange": "  \tprivate void formatDimensions(TypeReference typeReference, int anchor, int count, boolean spaceBeforeAnnotation)", "diff": ["-\t\t\tAnnotation[][] annotationsOnDimensions = typeReference != null ? typeReference.getAnnotationsOnDimensions() : null;", "+\t\t\tAnnotation[][] annotationsOnDimensions = typeReference != null ? typeReference.getAnnotationsOnDimensions(true) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c74c12381d5ed04c1f99d0b01ddffb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic TypeBinding resolveType(ClassScope classScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(ClassScope classScope)", "diff": ["-\t\treturn internalResolveType(classScope);", "+\t\treturn internalResolveType(classScope, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbf72b30ca24a9b92479210d1df7d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.resolvedType = this.type.resolveType(scope); // will check for null after args are resolved", "+\tthis.resolvedType = this.type.resolveType(scope, true /* check bounds*/); // will check for null after args are resolved"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1aeebee3e5eef3bc194ce302fc73b44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testBug408230a() throws CoreException", "signatureAfterChange": " public void testBug408230a() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8053ccc39227f55e0176b5ac1a2a745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "13badd688be686ebb5ba17a06b5117d9f7db22e6", "commitAfterChange": "678bd63c535ed58308236db21b34dad57015766d", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 257, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "diff": ["-\trejectIllegalTypeAnnotations(cla.type);", "+\trejectIllegalTypeAnnotations(cla.type, true /* tolerate annotations on dimensions for bug compatibility for now */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d12c77f453d672193fab3c47443320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "d25d8e2aefb1fe7881a3b669cacd403afc528b1a", "commitAfterChange": "c768bb705d25a055607160ce11d239f196ca5653", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tkind = initializeBuilder(kind);", "+\t\tkind = initializeBuilder(kind, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaaa61070e6ea78d538e60c5d7864847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "aa23b2a14c48eb2e68c0b76ca03ad3cd13f67188", "commitAfterChange": "97ecea4988b025b105080d33f2f05e43659a9d0a", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "signatureAfterChange": "  \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "diff": ["-\t\treturn parameterCompatibilityLevel(method, arguments, false);", "+\t\treturn parameterCompatibilityLevel(method, arguments, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adca618bb75414cf72541a4c556791a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void resolve(IGenericType suppliedType)", "signatureAfterChange": "  public void resolve(IGenericType suppliedType)", "diff": ["-\t\t\t\tSourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);", "+\t\t\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\t\t\tnew ISourceType[]{topLevelType}, ", "+\t\t\t\t\tfalse, // no need for field and methods", "+\t\t\t\t\ttrue, // need member types", "+\t\t\t\t\tfalse, // no need for field initialization", "+\t\t\t\t\tlookupEnvironment.problemReporter, ", "+\t\t\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0be8ed91400ef3acfd07748862710e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " public void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\tSourceTypeConverter.buildCompilationUnit(sourceTypes, false, true, this.locator.lookupEnvironment.problemReporter, result);", "+\t\tSourceTypeConverter.buildCompilationUnit(", "+\t\t\tsourceTypes, ", "+\t\t\tfalse, // no need for field and methods", "+\t\t\ttrue, // need member types", "+\t\t\tfalse, // no need for field initialization", "+\t\t\tthis.locator.lookupEnvironment.problemReporter, ", "+\t\t\tresult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b86b232b1a23229becbf02c06f8027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this);", "+\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae952796d540812ee35e659e8a28343", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["-\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \"); //$NON-NLS-1$", "+\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \", true); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbead6c81ebb4633aa5f284e619214eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/TokenManager.java", "commitBeforeChange": "b2b8c809039544e3b7857112d3dba58d84cc4820", "commitAfterChange": "8f8bb370f097d2a34f004c1d0b29e00cd828b5b6", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic int findFirstTokenInLine(int startIndex)", "signatureAfterChange": "  \tpublic int findFirstTokenInLine(int startIndex)", "diff": ["-\t\treturn findFirstTokenInLine(startIndex, false);", "+\t\treturn findFirstTokenInLine(startIndex, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ad8617bc6e56747f2500448c3241eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SubTypeSearchJob.java", "commitBeforeChange": "8eff811a28d835d940585e1dd6e43b7e81d9c25c", "commitAfterChange": "ecd6b6b03e84e16fa2ef3316475695c9990930d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, IJavaElement focus, int detailLevel, IIndexSearchRequestor requestor, IndexManager indexManager)", "signatureAfterChange": " public SubTypeSearchJob(SearchPattern pattern, IJavaSearchScope scope, IJavaElement focus, int detailLevel, IIndexSearchRequestor requestor, IndexManager indexManager)", "diff": ["-\tsuper(pattern, scope, focus, detailLevel, requestor, indexManager);", "+\tsuper(", "+\t\tpattern, ", "+\t\tscope, ", "+\t\tfocus, ", "+\t\tfalse/*not a polymorphic search*/, ", "+\t\tdetailLevel, ", "+\t\trequestor, ", "+\t\tindexManager);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c204231f31a818e74c63ff62c4a4464a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " \tpublic void test0631() throws JavaModelException", "signatureAfterChange": " \tpublic void test0631() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(fragment, \"s =  {\\\"\\\",,,\", source);", "+\t\tcheckSourceRange(fragment, \"s =  {\\\"\\\",,,\", source, true/*expectMalformed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c310da0922b19549a089c103ae5f81c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes)", "signatureAfterChange": " \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes)", "diff": ["-\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(nextMethodDeclaration));", "+\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(false, nextMethodDeclaration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4cc2d8182c30242509a4a41b301d2ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 60, "signatureBeforeChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getMethod(TypeBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\tmethodBinding = findMethod(currentType, selector, argumentTypes, invocationSite);", "+\t\t\tmethodBinding = findMethod(currentType, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58e7ae4b3a2adfe5528dc8684dcc077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6eadab7b5e42085c2cd1ac3d075310c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "122aaead4e358f6ebb2c21aa961cc53294d2209d", "commitAfterChange": "dad14e26b600f99744a420507cc556dc0f0ff73b", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["+\t\t\ttrue, /* wait for indexes (only if consider secondary types)*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cacdcc2d71548d16a07a1c6494528cff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tsetUpJavaProject(\"Resolve\", \"1.8\");", "+\tsetUpJavaProject(\"Resolve\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafba4b6d75a7c3e3471cf54379787aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ddd808d168fb534eabceec59ee71a1ab6bb9aa2f", "commitAfterChange": "152c9f5bc26833df7f866102ab1cb2e2da100205", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " protected IType lookupType(ReferenceBinding typeBinding)", "signatureAfterChange": " protected IType lookupType(ReferenceBinding typeBinding)", "diff": ["-\t\tIType type = this.nameLookup.findType(typeName, pkgs[i],  false,  acceptFlag);", "+\t\tIType type = this.nameLookup.findType(typeName, pkgs[i],  false,  acceptFlag, true/*consider secondary types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0a06ab5b3c7f295ddc4f85b7c1aad2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic FieldBinding getField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic FieldBinding getField( \t\tTypeBinding receiverType, \t\tchar[] fieldName, \t\tInvocationSite invocationSite)", "diff": ["-\t\tFieldBinding field = findField(receiverType, fieldName, invocationSite);", "+\t\tFieldBinding field = findField(receiverType, fieldName, invocationSite, true /*resolve*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb911c736c62fd3ba963b4eac3364305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "d7c990d50da3096d1d0c829cba02221aeda7589f", "commitAfterChange": "924bb53fdc2b8abef6daacf4b8eb0fd3e9ce7fd5", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": " \tpublic void test0197() throws CoreException", "signatureAfterChange": " \tpublic void test0197() throws CoreException", "diff": ["-\t\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy);", "+\t\t   \tIBinding[] bindings = resolveBindings(contents, this.workingCopy, false/*don't report errors*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3702ced09654361b00f5edafedb9b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "13087273f518893bae9662fee0f01bf280448014", "commitAfterChange": "3dd2d61115a71847147cc1629ac7b4900ba8625e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\treturn openWhenClosed(createElementInfo(), monitor);", "+\t\treturn openWhenClosed(createElementInfo(), false, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dab87750fe912cbe61f5c6861886c3f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionNodeFound.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public SelectionNodeFound()", "signatureAfterChange": " public SelectionNodeFound()", "diff": ["-\tthis(null); // we found a problem in the selection node", "+\tthis(null, false); // we found a problem in the selection node"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db37a71c193718f8120f450ff5dd924f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "74d059b3fbdc00070c70bee76509a44ccad7fb4d", "commitAfterChange": "31d2b0bac7c9b032f1ad8765fd4577eaff8d79fd", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic boolean visit(EnhancedForStatement node)", "signatureAfterChange": "  \tpublic boolean visit(EnhancedForStatement node)", "diff": ["-\t\tformatAction(line, node.getBody());", "+\t\tformatAction(line, node.getBody(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc8bc768d9298264560eed12327b1129", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding)this.actualReceiverType, this.selector, new TypeBinding[]{}, this);", "+\t\t\t\tthis.binding = scope.findMethod((ReferenceBinding)this.actualReceiverType, this.selector, new TypeBinding[]{}, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcf2666878bc3e5635dea927b2fd8e45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "569ea51c58561efd4d8aa7df4dbd08c4ce6f4fbf", "commitAfterChange": "af652d9d40e3e30a14ccbd2056144782592afc53", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite);", "+\tmethodBinding = findMethod(object, selector, argumentTypes, invocationSite, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd452e47876626f3e890a26e53bfb53c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding type = this.resolvedType = this.qualification.resolveType(scope);", "+\t\tTypeBinding type = this.resolvedType = this.qualification.resolveType(scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de92dfcdc084be3c016aa366905354f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void test0002() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0002() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true);", "+\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed485f1f756db167e5c84e14d4d0df59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(ConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ConstructorInvocation node)", "diff": ["-\t\t\tpos= rewriteOptionalTypeParameters(node, ConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\"); //$NON-NLS-1$", "+\t\t\tpos= rewriteOptionalTypeParameters(node, ConstructorInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \"\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bd032d617c1a33a80cb51148ffc8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this);", "+\t\t", "+\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4694bf5c8daa1bdccfd96d94ce3a813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java", "commitBeforeChange": "eb5fe9a9319b819d64960c44d91e2995208510e4", "commitAfterChange": "f13fdcb2784e02f7feccade63189561cf467d9fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tmanager.removePerProjectInfo((JavaProject) javaProject);", "+\t\t\t\tmanager.removePerProjectInfo((JavaProject) javaProject, true /* remove external jar files indexes and timestamps*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70e8872b271a84395a16d6413e7c2a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ReferenceCollection.java", "commitBeforeChange": "4aa9bc6aa2cb666fb0721f9b95f7c7e969829a0c", "commitAfterChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r static char[][] internSimpleNames(ArrayList simpleStrings)", "signatureAfterChange": "\r \r static char[][] internSimpleNames(ArrayList simpleStrings)", "diff": ["-\treturn internSimpleNames(result);\r", "+\treturn internSimpleNames(result, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f732cfa4f015f71be2e9b367f4ca6362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testBug408230b() throws CoreException", "signatureAfterChange": " public void testBug408230b() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f978ef74a3f9851506f93e2d718f7fe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "47e88d0335bbb81b7bc00bc5460ee9a54afeb8fd", "commitAfterChange": "c61ba8a09dc9c83fb9681276880af852ba1fdf7c", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r \tprivate static void updateVariableValue(\r \t\tString variableName,\r \t\tIPath path,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tprivate static void updateVariableValue(\r \t\tString variableName,\r \t\tIPath path,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["+\t\t\t\t\t\t\ttrue,\r", "-\t\t\t\t\t// force build if in auto build mode\r", "-\t\t\t\t\t (IClasspathEntry[]) affectedProjects.get(project));\r", "+\t\t\t\t\t\t\t// force build if in auto build mode\r", "+\t\t\t\t\t\t\t(IClasspathEntry[]) affectedProjects.get(project));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c282d2f48b8e53c6275df825350974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void testBug408230j() throws CoreException", "signatureAfterChange": " public void testBug408230j() throws CoreException", "diff": ["-\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\");", "+\t\tcreateJavaProject(\"P\", new String[] {\"src\"}, new String[] {\"JCL18_LIB\"}, \"bin\", \"1.8\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb2082312c0a563e57a4e5d3bc3d670b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "  \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResources);", "+\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResources, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce79b5bc99312af47b0faa30b256086", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterRecoveryTest.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void test0001() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0001() throws JavaModelException", "diff": ["-\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true);", "+\t\tASTNode result = runConversion(AST.JLS3, this.workingCopies[0], true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf21e9df9b803b98da001a3b60cd69f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["-\t\t\t\t: getResolvedClasspath(ignoreUnresolvedVariable, generateMarkerOnError);", "+\t\t\t\t: getResolvedClasspath(ignoreUnresolvedVariable, generateMarkerOnError, false/*don't returnResolutionInProgress*/);"]}], "num": 28216}