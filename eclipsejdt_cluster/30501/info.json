{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d40d6423231de7d6f2224194483150c2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611fcdbf8649fb28dfdec3db4adde2bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tIClassFile classFile, \t\tNodeSearcher nodeSearcher, \t\tboolean cleanUp, \t\tchar[] source, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["+\t\tIClassFile classFile,", "+\t\tNodeSearcher nodeSearcher,", "+\t\tboolean cleanUp,", "+\t\tchar[] source,", "+\t\tWorkingCopyOwner owner,", "+\t\tIProgressMonitor monitor)", "+\t\tthrows JavaModelException {", "+", "+\t\tCompilationUnitDeclaration unit = null;", "+\t\ttry {", "+\t\t\t", "+\t\t\tStringBuffer buffer = new StringBuffer(SuffixConstants.SUFFIX_STRING_java);", "+\t\t\t", "+\t\t\tString classFileName = classFile.getElementName(); // this includes the trailing .class", "+\t\t\tbuffer.insert(0, classFileName.toCharArray(), 0, classFileName.indexOf('.'));", "+\t\t\tchar[] fileName = String.valueOf(buffer).toCharArray();", "+\t\t\tJavaProject project = (JavaProject) classFile.getJavaProject();", "+\t\t\tCompilationUnitResolver compilationUnitVisitor =", "+\t\t\t\tnew CompilationUnitResolver(", "+\t\t\t\t\tgetNameEnvironment(project, owner, monitor),", "+\t\t\t\t\tgetHandlingPolicy(),", "+\t\t\t\t\tproject.getOptions(true),", "+\t\t\t\t\tgetRequestor(),", "+\t\t\t\t\tgetProblemFactory(monitor));", "+\t", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);", "+\t", "+\t\t\tchar[][] expectedPackageName = CharOperation.splitOn('.', classFile.getType().getPackageFragment().getElementName().toCharArray());", "+\t\t", "+\t\t\tunit = compilationUnitVisitor.resolve(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tsource,", "+\t\t\t\t\texpectedPackageName,", "+\t\t\t\t\tnew String(fileName),", "+\t\t\t\t\tencoding),", "+\t\t\t\tnodeSearcher,", "+\t\t\t\ttrue, // method verification", "+\t\t\t\ttrue, // analyze code", "+\t\t\t\ttrue); // generate code", "+\t\t\treturn unit;", "+\t\t} finally {", "+\t\t\tif (cleanUp && unit != null) {", "+\t\t\t\tunit.cleanUp();", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee212fdabaaac63bab7af6124ef76525", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractVariableDeclaration.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic abstract String name();", "signatureAfterChange": "  \t \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["-\tpublic abstract String name();", "+\t", "+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output);", "+\t\tprintModifiers(this.modifiers, output);", "+\t\ttype.print(0, output).append(' ').append(this.name); ", "+\t\tif (initialization != null) {", "+\t\t\toutput.append(\" = \"); //$NON-NLS-1$", "+\t\t\tinitialization.printExpression(indent, output);", "+\t\t}", "+\t\treturn output.append(';');", "+\t}"]}], "num": 30501}