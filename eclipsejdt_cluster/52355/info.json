{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2d2e793053e43d066196b86c2f9db93", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113342238d66c0e7bd50a84dd31b950a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "01023454337af8ada2f5699e5de8fcd7a8d40840", "commitAfterChange": "b7bb9d2950572af77f85c2c708c3816367817930", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic boolean match(SimpleName node, Object other)", "signatureAfterChange": " \tpublic boolean match(SimpleName node, Object other)", "diff": ["-\t\tswitch(node.getAST().apiLevel) {", "-\t\t\tcase AST.JLS2_INTERNAL :", "-\t\t\tcase AST.JLS3_INTERNAL :", "-\t\t\tcase AST.JLS4:", "-\t\t\t\treturn node.getIdentifier().equals(o.getIdentifier());", "-\t\t\tdefault:", "-\t\t\t\treturn (node.getIdentifier().equals(o.getIdentifier())) &&", "-\t\t\t\t\t\tsafeSubtreeListMatch(node.annotations(), o.annotations());", "-\t\t}\t", "+\t\treturn node.getIdentifier().equals(o.getIdentifier());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc1f680fea0e51473f771285af3fc32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "82286041004c3a1c8b03ed85a8b5ba0c85e39f08", "commitAfterChange": "c3894f02481a65e7c5a6b2e211e3716b20cd9dd8", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic boolean match(SimpleName node, Object other)", "signatureAfterChange": " \tpublic boolean match(SimpleName node, Object other)", "diff": ["-\t\treturn node.getIdentifier().equals(o.getIdentifier());", "+\t\tswitch(node.getAST().apiLevel) {", "+\t\t\tcase AST.JLS2_INTERNAL :", "+\t\t\tcase AST.JLS3_INTERNAL :", "+\t\t\tcase AST.JLS4:", "+\t\t\t\treturn node.getIdentifier().equals(o.getIdentifier());", "+\t\t\tdefault:", "+\t\t\t\treturn (node.getIdentifier().equals(o.getIdentifier())) &&", "+\t\t\t\t\t\tsafeSubtreeListMatch(node.annotations(), o.annotations());", "+\t\t}\t"]}], "num": 52355}