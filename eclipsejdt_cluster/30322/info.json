{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e476f99cce775e26de76deaead7b8de", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665352fd8a962d9e4146267d8c839ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "28e589c8bd8ca480293dacfafca0e094a1d48845", "commitAfterChange": "1cb4702a587b6ba044cf9cf0c7f733e4ce72e71e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["+\t\tSimpleSetOfCharArray foundNames = new SimpleSetOfCharArray();", "-\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l],  k == 0, l == 0, internalPrefix.length - j, requestor);", "-\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\tif (!foundNames.includes(suffixName)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l],  k == 0, l == 0, internalPrefix.length - j, requestor);", "+\t\t\t\t\t\t\t\t\t\t\t\tfoundNames.add(suffixName);", "+\t\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l], k == 0, l == 0, internalPrefix.length - j, requestor);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif (!foundNames.includes(suffixName)) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceptName(suffixName, prefixes[k], suffixes[l], k == 0, l == 0, internalPrefix.length - j, requestor);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfoundNames.add(suffixName);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceptDefaultName = false;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab1a1eb3648ff5609ff1d4a14c48dde7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ccb3e5525c54dfe23c1e360c5b523dc7389a8449", "commitAfterChange": "d21bc313cdd8902b8761ed6e8db08c82a2b9b3d0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tconstructorCall);\r", "+\t\t\t\t\t\t\t\t\t\t\tconstructorCall,\r", "+\t\t\t\t\t\t\t\t\t\t\tfalse);\r", "-\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "+\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\tReferenceBinding ref = (ReferenceBinding) qualifiedBinding;\r", "+\t\t\t\t\t\t\t\t\t\t\tif(ref.isClass()) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\tif(!ref.isAbstract()) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tref,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tallocExpression,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\tif(!ref.isFinal()){\r", "+\t\t\t\t\t\t\t\t\t\t\t\tfindAnonymousType(\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tref,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "+\t\t\t\t\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e49b1490a74d3bafbe8f8ed09a22fa18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "20321ccdb02511c3b0dd625c650e9586643da814", "commitAfterChange": "3c339caa1e7b5ca6c56cf03ac002e58b4380b89e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tflowInfo = action.analyseCode(currentScope, loopingContext, flowInfo.copy());", "+\t\t\tFlowInfo actionInfo = action.analyseCode(currentScope, loopingContext, flowInfo.copy());", "-\t\t\tif (!flowInfo.isReachable()) {", "+\t\t\tif (!actionInfo.isReachable()) {", "+\t\t\t\t\tif (actionInfo != FlowInfo.DEAD_END) {", "+\t\t\t\t\t\tflowInfo = actionInfo;", "+\t\t\t\t\t\t//flowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t} // else leave flowInfo intact", "+", "+\t\t\t} else {", "+\t\t\t\tflowInfo = actionInfo;", "+\t\t\tif (!mergedInfo.isReachable()) mergedInfo.addPotentialInitializationsFrom(flowInfo.initsWhenFalse());"]}], "num": 30322}