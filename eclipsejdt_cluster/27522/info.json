{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bc646964fb87e89f0d8a0e250b924c7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225a09054933688d2bf176c938e494c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "ecd385ce2c6acd660d8fd4527c963683ed4e3124", "commitAfterChange": "3fd9ba7770cab33e59f381d90c14d9b1a2469d1c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic synchronized ClasspathChange addClasspathChange(IProject project, IClasspathEntry[] oldRawClasspath, IPath oldOutputLocation, IClasspathEntry[] oldResolvedClasspath)", "signatureAfterChange": "  \tpublic ClasspathChange addClasspathChange(IProject project, IClasspathEntry[] oldRawClasspath, IPath oldOutputLocation, IClasspathEntry[] oldResolvedClasspath)", "diff": ["-\tpublic synchronized ClasspathChange addClasspathChange(IProject project, IClasspathEntry[] oldRawClasspath, IPath oldOutputLocation, IClasspathEntry[] oldResolvedClasspath) {", "-\t\tClasspathChange change = (ClasspathChange) this.classpathChanges.get(project);", "-\t\tif (change == null) {", "-\t\t\tchange = new ClasspathChange((JavaProject) JavaModelManager.getJavaModelManager().getJavaModel().getJavaProject(project), oldRawClasspath, oldOutputLocation, oldResolvedClasspath);", "-\t\t\tthis.classpathChanges.put(project, change);", "-\t\t} else {", "-\t\t\tif (change.oldRawClasspath == null)", "-\t\t\t\tchange.oldRawClasspath = oldRawClasspath;", "-\t\t\tif (change.oldOutputLocation == null)", "-\t\t\t\tchange.oldOutputLocation = oldOutputLocation;", "-\t\t\tif (change.oldResolvedClasspath == null)", "-\t\t\t\tchange.oldResolvedClasspath = oldResolvedClasspath;", "+\tpublic ClasspathChange addClasspathChange(IProject project, IClasspathEntry[] oldRawClasspath, IPath oldOutputLocation, IClasspathEntry[] oldResolvedClasspath) {", "+\t\tsynchronized (this.classpathChanges) {", "+\t\t\tClasspathChange change = (ClasspathChange) this.classpathChanges.get(project);", "+\t\t\tif (change == null) {", "+\t\t\t\tchange = new ClasspathChange((JavaProject) JavaModelManager.getJavaModelManager().getJavaModel().getJavaProject(project), oldRawClasspath, oldOutputLocation, oldResolvedClasspath);", "+\t\t\t\tthis.classpathChanges.put(project, change);", "+\t\t\t} else {", "+\t\t\t\tif (change.oldRawClasspath == null)", "+\t\t\t\t\tchange.oldRawClasspath = oldRawClasspath;", "+\t\t\t\tif (change.oldOutputLocation == null)", "+\t\t\t\t\tchange.oldOutputLocation = oldOutputLocation;", "+\t\t\t\tif (change.oldResolvedClasspath == null)", "+\t\t\t\t\tchange.oldResolvedClasspath = oldResolvedClasspath;", "+\t\t\t}", "+\t\t\treturn change;", "-\t\treturn change;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e157e87c7189f833b224c98a06cdf30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean isClasspathEqualsTo(IClasspathEntry[] newClasspath, IPath newOutputLocation, IClasspathEntry[] otherClasspathWithOutput)", "signatureAfterChange": " \tprivate static boolean areClasspathsEqual(IClasspathEntry[] newClasspath, IPath newOutputLocation, IClasspathEntry[] otherClasspathWithOutput)", "diff": ["+\t */", "+\tprivate static boolean areClasspathsEqual(IClasspathEntry[] newClasspath, IPath newOutputLocation, IClasspathEntry[] otherClasspathWithOutput) {", "+", "+\t\tif (otherClasspathWithOutput == null || otherClasspathWithOutput.length == 0)", "+\t\t\treturn false;", "+", "+\t\tint length = otherClasspathWithOutput.length;", "+\t\tif (length != newClasspath.length + 1) ", "+\t\t\t\t// output is amongst file entries (last one)", "+\t\t\t\treturn false;", "+\t\t", "+\t\t", "+\t\t// compare classpath entries", "+\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\tif (!otherClasspathWithOutput[i].equals(newClasspath[i]))", "+\t\t\t\treturn false;", "+\t\t}", "+\t\t// compare binary outputs", "+\t\tIClasspathEntry output = otherClasspathWithOutput[length - 1];", "+\t\tif (output.getContentKind() != ClasspathEntry.K_OUTPUT", "+\t\t\t\t|| !output.getPath().equals(newOutputLocation))", "+\t\t\treturn false;", "+\t\treturn true;", "+\t}", "-\t */", "-\tpublic boolean isClasspathEqualsTo(IClasspathEntry[] newClasspath, IPath newOutputLocation, IClasspathEntry[] otherClasspathWithOutput) {", "-", "-\t\tif (otherClasspathWithOutput == null || otherClasspathWithOutput.length == 0)", "-\t\t\treturn false;", "-", "-\t\tint length = otherClasspathWithOutput.length;", "-\t\tif (length != newClasspath.length + 1) ", "-\t\t\t\t// output is amongst file entries (last one)", "-\t\t\t\treturn false;", "-\t\t", "-\t\t", "-\t\t// compare classpath entries", "-\t\tfor (int i = 0; i < length - 1; i++) {", "-\t\t\tif (!otherClasspathWithOutput[i].equals(newClasspath[i]))", "-\t\t\t\treturn false;", "-\t\t}", "-\t\t// compare binary outputs", "-\t\tIClasspathEntry output = otherClasspathWithOutput[length - 1];", "-\t\tif (output.getContentKind() != ClasspathEntry.K_OUTPUT", "-\t\t\t\t|| !output.getPath().equals(newOutputLocation))", "-\t\t\treturn false;", "-\t\treturn true;"]}], "num": 27522}