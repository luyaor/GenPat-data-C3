{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c260c5e14c8f54d79d567a047be7c821", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f4eb068d7a13c921ce41e1eee2c579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "commitAfterChange": "18c98a5a751096350077436fcf968eb63364ccb9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  ArrayBinding createArrayType(int dimensionCount, LookupEnvironment lookupEnvironment)", "signatureAfterChange": "  ArrayBinding createArrayType(int dimensionCount, LookupEnvironment lookupEnvironment)", "diff": ["-\tif (localArrayBindings == null) {", "-\t\tlocalArrayBindings = new ArrayBinding[] {new ArrayBinding(this, dimensionCount, lookupEnvironment)};", "-\t\treturn localArrayBindings[0];", "+\tif (this.localArrayBindings == null) {", "+\t\tthis.localArrayBindings = new ArrayBinding[] {new ArrayBinding(this, dimensionCount, lookupEnvironment)};", "+\t\treturn this.localArrayBindings[0];", "-", "-\tint length = localArrayBindings.length;", "+\tint length = this.localArrayBindings.length;", "-\t\tif (localArrayBindings[i].dimensions == dimensionCount)", "-\t\t\treturn localArrayBindings[i];", "+\t\tif (this.localArrayBindings[i].dimensions == dimensionCount)", "+\t\t\treturn this.localArrayBindings[i];", "-\tSystem.arraycopy(localArrayBindings, 0, localArrayBindings = new ArrayBinding[length + 1], 0, length); ", "-\treturn localArrayBindings[length] = new ArrayBinding(this, dimensionCount, lookupEnvironment);", "+\tSystem.arraycopy(this.localArrayBindings, 0, this.localArrayBindings = new ArrayBinding[length + 1], 0, length); ", "+\treturn this.localArrayBindings[length] = new ArrayBinding(this, dimensionCount, lookupEnvironment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5fe53cdc45c5a14ecd518a88c6e7a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tpublic FlowInfo analyseCode(", "-\t\tBlockScope currentScope,", "-\t\tFlowContext flowContext,", "-\t\tFlowInfo flowInfo) {", "-", "+\tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo) {", "-\t\t\tif (qualification != null) {", "+\t\t\tif (this.qualification != null) {", "-\t\t\t\t\tqualification", "+\t\t\t\t\tthis.qualification", "-\t\t\tif (arguments != null) {", "-\t\t\t\tfor (int i = 0, max = arguments.length; i < max; i++) {", "+\t\t\tif (this.arguments != null) {", "+\t\t\t\tfor (int i = 0, max = this.arguments.length; i < max; i++) {", "-\t\t\t\t\t\targuments[i]", "+\t\t\t\t\t\tthis.arguments[i]", "-\t\t\tif ((thrownExceptions = binding.thrownExceptions) != Binding.NO_EXCEPTIONS) {", "+\t\t\tif ((thrownExceptions = this.binding.thrownExceptions) != Binding.NO_EXCEPTIONS) {", "-\t\t\t\t\t(accessMode == ImplicitSuper)", "+\t\t\t\t\t(this.accessMode == ExplicitConstructorCall.ImplicitSuper)"]}], "num": 69448}