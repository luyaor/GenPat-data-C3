{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfb0ca13d935a9bcf5527d0fda1d0014", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1778f10034affb4475993554c9d72c82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void tearDownSuite() throws Exception", "signatureAfterChange": " public void tearDownSuite() throws Exception", "diff": ["+\t// Display time measures", "+\tStringBuffer buffer1 = new StringBuffer();", "+\tbuffer1.append(\"Time measures:\").append(LINE_SEPARATOR);", "+\tbuffer1.append(\"\t- first format:\").append(LINE_SEPARATOR);", "+\tbuffer1.append(\"\t\t+ elapsed = \"+timeString(TIME_MEASURES.formatting[0])).append(LINE_SEPARATOR);", "+\tbuffer1.append(\"\t\t+ occurrences = \"+TIME_MEASURES.occurences[0]).append(LINE_SEPARATOR);", "+\tbuffer1.append(\"\t\t+ null output = \"+TIME_MEASURES.null_output[0]).append(LINE_SEPARATOR);", "+\tbuffer1.append(\"\t- repeated format:\").append(LINE_SEPARATOR);", "+\tfor (int i=1; i<FORMAT_REPEAT; i++) {", "+\t\tbuffer1.append(\"\t   n\ufffd \"+(i+1)).append(LINE_SEPARATOR);", "+\t\tbuffer1.append(\"\t\t+ elapsed = \"+timeString(TIME_MEASURES.formatting[i])).append(LINE_SEPARATOR);", "+\t\tbuffer1.append(\"\t\t+ occurrences = \"+TIME_MEASURES.occurences[i]).append(LINE_SEPARATOR);", "+\t\tbuffer1.append(\"\t\t+ null output = \"+TIME_MEASURES.null_output[i]).append(LINE_SEPARATOR);", "+\t}", "+\tbuffer1.append(LINE_SEPARATOR);", "+", "-\tStringBuffer buffer = new StringBuffer(LINE_SEPARATOR);", "-\t\t\tbuffer.append(size);", "-\t\t\tbuffer.append(\" file\");", "+\t\t\tbuffer1.append(size);", "+\t\t\tbuffer1.append(\" file\");", "-\t\t\t\tbuffer.append(\" has \");", "+\t\t\t\tbuffer1.append(\" has \");", "-\t\t\t\tbuffer.append(\"s have \");", "+\t\t\t\tbuffer1.append(\"s have \");", "-\t\t\tbuffer.append(FAILURES[i]);", "-\t\t\tbuffer.append('!');", "-\t\t\tbuffer.append(LINE_SEPARATOR);", "+\t\t\tbuffer1.append(FAILURES[i]);", "+\t\t\tbuffer1.append('!');", "+\t\t\tbuffer1.append(LINE_SEPARATOR);", "-\tbuffer.append(LINE_SEPARATOR);", "+\tbuffer1.append(LINE_SEPARATOR);", "+\tStringBuffer buffer2 = new StringBuffer(LINE_SEPARATOR);", "-\t\t\tbuffer.append(\"List of file(s) with \");", "-\t\t\tbuffer.append(FAILURES[i]);", "-\t\t\tbuffer.append(':');", "-\t\t\tbuffer.append(LINE_SEPARATOR);", "+\t\t\tbuffer2.append(\"List of file(s) with \");", "+\t\t\tbuffer2.append(FAILURES[i]);", "+\t\t\tbuffer2.append(':');", "+\t\t\tbuffer2.append(LINE_SEPARATOR);", "-\t\t\t\tbuffer.append(\"\t- \");", "-\t\t\t\tbuffer.append(failures.get(j));", "-\t\t\t\tbuffer.append(LINE_SEPARATOR);", "+\t\t\t\tbuffer2.append(\"\t- \");", "+\t\t\t\tbuffer2.append(failures.get(j));", "+\t\t\t\tbuffer2.append(LINE_SEPARATOR);", "+\tSystem.out.println(buffer1.toString());", "-\t\tSystem.out.println(buffer.toString());", "+\t\tSystem.out.println(buffer2.toString());", "-\t\tLOG_STREAM.print(buffer.toString());", "+\t\tLOG_STREAM.print(buffer1.toString());", "+\t\tLOG_STREAM.print(buffer2.toString());", "+//\tLOG_BUFFER.append(buffer1.toString());", "+//\tLOG_BUFFER.append(buffer2.toString());", "+//\tInputStream stream= new InputStream() {", "+//\t\tprivate Reader reader= new StringReader(LOG_BUFFER.toString());", "+//\t\tpublic int read() throws IOException {", "+//\t\t\treturn this.reader.read();", "+//\t\t}", "+//\t};", "+//\tif (LOG_RESOURCE.exists()) {", "+//\t\tLOG_RESOURCE.setContents(", "+//\t\t\tstream,", "+//\t\t\tIResource.FORCE | IResource.KEEP_HISTORY,", "+//\t\t\tnull);", "+//\t} else {", "+//\t\tLOG_RESOURCE.create(stream, IResource.FORCE, null);", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21e6209039c723e398189b98eec8f81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "3995ce68a52c60c01c40bfcd8efe0de9a7393fef", "commitAfterChange": "dc9db9c22a51b01cfbe75b8acac7c7a000432f1b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void tearDownSuite() throws Exception", "signatureAfterChange": " public void tearDownSuite() throws Exception", "diff": ["-\tbuffer1.append(\"Time measures:\").append(LINE_SEPARATOR);", "-\tbuffer1.append(\"\t- first format:\").append(LINE_SEPARATOR);", "-\tbuffer1.append(\"\t\t+ elapsed = \"+timeString(TIME_MEASURES.formatting[0])).append(LINE_SEPARATOR);", "-\tbuffer1.append(\"\t\t+ occurrences = \"+TIME_MEASURES.occurences[0]).append(LINE_SEPARATOR);", "-\tbuffer1.append(\"\t\t+ null output = \"+TIME_MEASURES.null_output[0]).append(LINE_SEPARATOR);", "-\tbuffer1.append(\"\t- repeated format:\").append(LINE_SEPARATOR);", "-\tfor (int i=1; i<FORMAT_REPEAT; i++) {", "-\t\tbuffer1.append(\"\t   n\ufffd \"+(i+1)).append(LINE_SEPARATOR);", "-\t\tbuffer1.append(\"\t\t+ elapsed = \"+timeString(TIME_MEASURES.formatting[i])).append(LINE_SEPARATOR);", "-\t\tbuffer1.append(\"\t\t+ occurrences = \"+TIME_MEASURES.occurences[i]).append(LINE_SEPARATOR);", "-\t\tbuffer1.append(\"\t\t+ null output = \"+TIME_MEASURES.null_output[i]).append(LINE_SEPARATOR);", "+\tbuffer1.append(\"Time measures:\");", "+\tif (CLEAN) {", "+\t\tbuffer1.append(\" cannot be done as the directory was cleaned!\");", "+\t\tbuffer1.append(LINE_SEPARATOR);", "+\t} else {", "+\t\tbuffer1.append(LINE_SEPARATOR);", "+\t\tfor (int i=0; i<FORMAT_REPEAT; i++) {", "+\t\t\tbuffer1.append(\"\t- \"+counterToString(i+1)).append(\" format:\").append(LINE_SEPARATOR);", "+\t\t\tbuffer1.append(\"\t\t+ elapsed = \"+timeString(TIME_MEASURES.formatting[i])).append(LINE_SEPARATOR);", "+\t\t\tbuffer1.append(\"\t\t+ occurrences = \"+TIME_MEASURES.occurences[i]).append(LINE_SEPARATOR);", "+\t\t\tbuffer1.append(\"\t\t+ null output = \"+TIME_MEASURES.null_output[i]).append(LINE_SEPARATOR);", "+\t\t}"]}], "num": 22705}