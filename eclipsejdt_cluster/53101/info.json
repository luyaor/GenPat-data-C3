{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4c560d684af231eb7aa731826ed8e6a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c142956a5dcdb7b834274e093a49c7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference)", "diff": ["-\t", "-\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference) {", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.NameReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ThisReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ArrayReference) reference);", "-\t\t}", "-\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.FieldReference) reference);", "-\t\t}", "-\t\tthrow new IllegalArgumentException(\"Not yet implemented: convert(\" + reference.getClass() + \")\");//$NON-NLS-1$//$NON-NLS-2$", "-\t}", "+\t", "+\tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.Reference reference) {", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.NameReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.NameReference) reference);", "+\t\t}", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ThisReference) reference);", "+\t\t}", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.ArrayReference) reference);", "+\t\t}", "+\t\tif (reference instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.FieldReference) reference);", "+\t\t}", "+\t\treturn null; // cannot be reached", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bf5067964939795c3e55414edaf7c2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 91, "signatureBeforeChange": " \t \tpublic Expression convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": " \t \tpublic Expression convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t", "-\tpublic Expression convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement statement) {", "-\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.Expression) {", "-\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.Expression) statement);", "-\t\t}", "-\t\t// unsupported", "-\t\tthrow new IllegalArgumentException(\"Not yet implemented: convert(\" + statement.getClass() + \")\");//$NON-NLS-1$//$NON-NLS-2$", "-\t}", "+\t", "+\tpublic Expression convertToExpression(org.eclipse.jdt.internal.compiler.ast.Statement statement) {", "+\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.Expression) {", "+\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.Expression) statement);", "+\t\t} else {", "+\t\t\treturn null;", "+\t\t}", "+\t}"]}], "num": 53101}