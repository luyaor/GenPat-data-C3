{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbefbbeaea5986c1ffcc51eafb2ced8b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b58982666f4575198437c8943ef028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int matchLevel(Binding binding)", "signatureAfterChange": " public int matchLevel(Binding binding)", "diff": ["-\tTypeBinding type = (TypeBinding)binding;", "+\tTypeBinding type = (TypeBinding) binding;", "-\t// class or interface", "-\t\t\tif (type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\tif (type.isInterface()) return IMPOSSIBLE_MATCH;", "-\t\t\tif (!type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "+\t\t\tif (!type.isInterface()) return IMPOSSIBLE_MATCH;", "+\t\tcase TYPE_SUFFIX: // nothing", "-\treturn this.matchLevelForType(this.simpleName, this.qualification, type);", "+\treturn matchLevelForType(this.simpleName, this.qualification, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eb0b61c6f7148c06974c47410ec8622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int matchLevel(Binding binding)", "signatureAfterChange": " public int matchLevel(Binding binding)", "diff": ["+ */", "+public int matchLevel(Binding binding) {", "+\tif (binding == null) return INACCURATE_MATCH;", "+\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;", "+", "+\tTypeBinding type = (TypeBinding) binding;", "+", "+\tswitch (this.classOrInterface) {", "+\t\tcase CLASS_SUFFIX:", "+\t\t\tif (type.isInterface()) return IMPOSSIBLE_MATCH;", "+\t\t\tbreak;", "+\t\tcase INTERFACE_SUFFIX:", "+\t\t\tif (!type.isInterface()) return IMPOSSIBLE_MATCH;", "+\t\t\tbreak;", "+\t\tcase TYPE_SUFFIX : // nothing", "+\t}", "+", "+\t// fully qualified name", "+\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');", "+\treturn matchLevelForType(this.simpleName, this.pkg, enclosingTypeName, type);", "+}", "- */", "-public int matchLevel(Binding binding) {", "-\tif (binding == null) return INACCURATE_MATCH;", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;", "-", "-\tTypeBinding type = (TypeBinding)binding;", "-", "-\t// class or interface", "-\tswitch (this.classOrInterface) {", "-\t\tcase CLASS_SUFFIX:", "-\t\t\tif (type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\tbreak;", "-\t\tcase INTERFACE_SUFFIX:", "-\t\t\tif (!type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\tbreak;", "-\t}", "-", "-\t// fully qualified name", "-\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');", "-\treturn this.matchLevelForType(this.simpleName, this.pkg, enclosingTypeName, type);", "-}"]}], "num": 16128}