{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed8b8cfc438300357e58b076c4b193fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c1de3a9917c9b8b290824b5c7007742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "818dca3cf84fd118ea99497de1f8b977d4253551", "commitAfterChange": "52f6144c4e9af7092e9f26d44a5197a00c39427c", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  \tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate void printJavadocImmutableText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "+\tprivate void printJavadocImmutableText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "-\t\t\tfor (int idx=1, max=text.separatorsPtr; idx<max ; idx++) {", "+\t\t\tfor (int idx=0, max=text.separatorsPtr; idx<=max ; idx++) {", "-\t\t\t\tint lineStart = Util.getLineNumber(start, this.lineEnds, lineNumber, this.maxLines);", "-\t\t\t\tif (buffer == null) {", "-\t\t\t\t\tbuffer = new StringBuffer();", "-\t\t\t\t\tthis.column = 1;", "-\t\t\t\t\tprintIndentationIfNecessary(buffer);", "-\t\t\t\t\tbuffer.append(BLOCK_LINE_PREFIX);", "-\t\t\t\t\tthis.column += BLOCK_LINE_PREFIX_LENGTH;", "-\t\t\t\t}", "+\t\t\t\tint lineStart = Util.getLineNumber(start, this.lineEnds, lineNumber-1, this.maxLines);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (buffer == null) {", "+\t\t\t\t\t\tbuffer = new StringBuffer();", "+\t\t\t\t\t\tthis.column = 1;", "+\t\t\t\t\t\tprintIndentationIfNecessary(buffer);", "+\t\t\t\t\t\tbuffer.append(BLOCK_LINE_PREFIX);", "+\t\t\t\t\t\tthis.column += BLOCK_LINE_PREFIX_LENGTH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb99de466861e3f232872e33f48de85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "0a52fc66fb4db2fd9981d577d974e91228093601", "commitAfterChange": "76d395ddd90431ef7cb4486078cb51e978a5ad63", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["+", "-\t\tStringBuffer indentationBuffer = printJavadocIndentationBuffer(block, firstColumn);", "-\t\t\t\t\t\toverEndLine = (this.column + getTextLength(block, htmlTag)) > (this.formatter.preferences.comment_line_length+1);", "+\t\t\t\t\t\toverEndLine = (this.column + getTextLength(block, htmlTag, false)) > (this.formatter.preferences.comment_line_length+1);", "-\t\t\t\t\t\t\tthis.column += getTextLength(block, htmlTag);", "+\t\t\t\t\t\t\tint additionalLength = printJavadocHtmlImmutableTag(htmlTag, block, overEndLine);", "+\t\t\t\t\t\t\tthis.column += getTextLength(block, htmlTag, true) - additionalLength;", "-\t\t\t\t\t\t\tif (overEndLine) {", "-\t\t\t\t\t\t\t\t// need to indent", "-\t\t\t\t\t\t\t\tif (indentationBuffer != null) {", "-\t\t\t\t\t\t\t\t\taddInsertEdit(node.sourceStart, indentationBuffer.toString());", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}"]}], "num": 11522}