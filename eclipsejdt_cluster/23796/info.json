{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe6b68c4270e9a7dc4f2fd42cb878751", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f682e02f0c28cae419de446285b49f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "commitAfterChange": "495498c492866181dc63a6039b81ee18c37f454c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\t \t\tint nextToken()", "signatureAfterChange": " \t\t \t\tint nextToken()", "diff": ["-\t\t\t\t\tcase '^':", "-\t\t\t\t\t\tif (this.index == previousTokenEnd) {", "-\t\t\t\t\t\t\tthis.index++;", "-\t\t\t\t\t\t\tthis.start = this.index;", "-\t\t\t\t\t\t\twhile (this.index < length && Character.isDigit(this.source[this.index]))", "-\t\t\t\t\t\t\t\tthis.index++;", "-\t\t\t\t\t\t\tthis.token = FLAGS;", "-\t\t\t\t\t\t\treturn this.token;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tswitch (this.token) {", "-\t\t\t\t\t\t\t\tcase METHOD:", "-\t\t\t\t\t\t\t\tcase LOCAL_VAR:", "-\t\t\t\t\t\t\t\t\tthis.token = LOCAL_VAR;", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tcase TYPE:", "-\t\t\t\t\t\t\t\tcase BASE_TYPE:", "-\t\t\t\t\t\t\t\t\tif (this.index > this.start && this.source[this.start-1] == '.')", "-\t\t\t\t\t\t\t\t\t\tthis.token = FIELD;", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\treturn this.token;", "-\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af02e749dc93c63c6db73e121beb8b48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "7315a9946428ac17ed2f3c53c5f292f76322b904", "commitAfterChange": "62f8132aa6e66bc79d2cfcc69b7efa69d325d62b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\tif (currentPosition != this.scanner.startPosition) {", "-\t\t\tthis.tagSourceStart = previousPosition;", "-\t\t\tthis.tagSourceEnd = currentPosition;", "-\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\treturn false;", "-\t\t}", "-\t\tif (this.index >= this.scanner.eofPosition) {", "-\t\t\tthis.tagSourceStart = previousPosition;", "-\t\t\tthis.tagSourceEnd = this.tokenPreviousPosition;", "-\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\treturn false;", "-\t\t}", "-\t\tthis.tagSourceStart = this.scanner.getCurrentTokenStartPosition();", "-\t\tthis.tagSourceEnd = this.scanner.getCurrentTokenEndPosition();", "-\t\tchar[] tagName = this.scanner.getCurrentIdentifierSource();", "+\t\tchar[] tagName = getTagName(previousPosition, currentPosition);", "+\t\tif (tagName == null) return false;"]}], "num": 23796}