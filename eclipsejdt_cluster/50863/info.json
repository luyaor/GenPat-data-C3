{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1645fb5b3dd8dd7f2927bc3a0eace35", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c3fe26bd94b2a547b690d69ad2b9526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void formatSource(String source, String formattedOutput, int kind, int indentationLevel)", "signatureAfterChange": "  void formatSource(String source, String formattedOutput, boolean repeat)", "diff": ["-void formatSource(String source, String formattedOutput, int kind, int indentationLevel) {", "+void formatSource(String source, String formattedOutput, boolean repeat) {", "+\tformatSource(source, formattedOutput, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, repeat);", "+}", "-\t\t\tresult = runFormatter(codeFormatter(), newSource, kind, indentationLevel, regions[0].getOffset(), regions[0].getLength(), Util.LINE_SEPARATOR);", "-\t\tformatSource(source, formattedOutput, kind, indentationLevel, false, 0, -1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0bf8e54b73c54e45b1b74636e7d9039", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "3bdad1c2bee46cfc01e1c4253b1e77d41c06aec6", "commitAfterChange": "3c0e62d6a8d065878cb88244f456ac588504233b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void formatSource(String source, String formattedOutput, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator)", "signatureAfterChange": "  void formatSource(String source, String formattedOutput, int kind, int indentationLevel)", "diff": ["+", "+void formatSource(String source, String formattedOutput, int kind, int indentationLevel) {", "+\t\tString result;", "+\t\tif (idx == 1) {", "+\t\t\t// Use offset and length until bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=233967 is fixed", "+\t\t\tresult = runFormatter(codeFormatter(), newSource, kind, indentationLevel, regions[0].getOffset(), regions[0].getLength(), Util.LINE_SEPARATOR);", "+\t\t} else {", "+\t\t\tSystem.arraycopy(regions, 0, regions = new Region[idx], 0, idx);", "+\t\t\tresult = runFormatter(codeFormatter(), newSource, kind, indentationLevel, regions, Util.LINE_SEPARATOR);", "+\t\t}", "+\t\tformatSource(source, formattedOutput, kind, indentationLevel, false, 0, -1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b57c89567081cd166c95b71e5b2f3672", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void formatSource(String source, String formattedOutput, int kind, int indentationLevel)", "signatureAfterChange": "  void formatSource(String source, String formattedOutput, int kind, int indentationLevel, boolean repeat)", "diff": ["-void formatSource(String source, String formattedOutput, int kind, int indentationLevel) {", "+", "+void formatSource(String source, String formattedOutput, int kind, int indentationLevel, boolean repeat) {", "-\t\t\tresult = runFormatter(codeFormatter(), newSource, kind, indentationLevel, regions[0].getOffset(), regions[0].getLength(), Util.LINE_SEPARATOR);", "+\t\t\tresult = runFormatter(codeFormatter(), newSource, kind, indentationLevel, regions[0].getOffset(), regions[0].getLength(), Util.LINE_SEPARATOR, repeat);", "-\t\tformatSource(source, formattedOutput, kind, indentationLevel, false, 0, -1, null);", "+\t\tformatSource(source, formattedOutput, kind, indentationLevel, false, 0, -1, null, repeat);"]}], "num": 50863}