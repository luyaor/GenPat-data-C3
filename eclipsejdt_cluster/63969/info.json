{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83a5a50ab3f00f9ea337c818735cad85", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311bf0bcc95c67d3ed3dc55b8cfb8c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibraryManager.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tstatic Map getLibraryMap()", "signatureAfterChange": " \t \tstatic Map getLibraryMap()", "diff": ["-\t\t\tPreferences preferences = JavaCore.getPlugin().getPluginPreferences();", "-\t\t\tpreferences.addPropertyChangeListener(listener);", "+\t\t\tIEclipsePreferences instancePreferences = JavaCore.getInstancePreferences();", "+\t\t\tinstancePreferences.addPreferenceChangeListener(listener);", "-\t\t\tString[] propertyNames = preferences.propertyNames();", "-\t\t\tfor (int i = 0; i < propertyNames.length; i++) {", "-\t\t\t\tString propertyName = propertyNames[i];", "-\t\t\t\tif (propertyName.startsWith(CP_USERLIBRARY_PREFERENCES_PREFIX)) {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\trecreatePersistedUserLibraryEntry(propertyName, preferences.getString(propertyName), false, false);", "-\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t// won't happen: no rebinding", "+\t\t\ttry {", "+\t\t\t\tString[] propertyNames = instancePreferences.keys();", "+\t\t\t\tfor (int i = 0; i < propertyNames.length; i++) {", "+\t\t\t\t\tString propertyName = propertyNames[i];", "+\t\t\t\t\tif (propertyName.startsWith(CP_USERLIBRARY_PREFERENCES_PREFIX)) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tString propertyValue = instancePreferences.get(propertyName, null);", "+\t\t\t\t\t\t\tif (propertyValue != null)", "+\t\t\t\t\t\t\t\trecreatePersistedUserLibraryEntry(propertyName,propertyValue, false, false);", "+\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t// won't happen: no rebinding", "+\t\t\t\t\t\t}", "+\t\t\t} catch (BackingStoreException e) {", "+\t\t\t\t// TODO (frederic) see if it's necessary to report this exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3ad0d0cd611b3634aff4df4f548cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "signatureAfterChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "diff": ["-\t\tPreferences preferences = JavaCore.getPlugin().getPluginPreferences();", "+\t\tIEclipsePreferences preferences = JavaCore.getInstancePreferences();", "-\t\tString[] propertyNames = preferences.propertyNames();", "-\t\tint variablePrefixLength = CP_VARIABLE_PREFERENCES_PREFIX.length();", "-\t\tfor (int i = 0; i < propertyNames.length; i++){", "-\t\t\tString propertyName = propertyNames[i];", "-\t\t\tif (propertyName.startsWith(CP_VARIABLE_PREFERENCES_PREFIX)){", "-\t\t\t\tString varName = propertyName.substring(variablePrefixLength);", "-\t\t\t\tIPath varPath = new Path(preferences.getString(propertyName).trim());", "-\t\t\t\t", "-\t\t\t\tthis.variables.put(varName, varPath); ", "-\t\t\t\tthis.previousSessionVariables.put(varName, varPath);", "+\t\ttry {", "+\t\t\tString[] propertyNames = preferences.keys();", "+\t\t\tint variablePrefixLength = CP_VARIABLE_PREFERENCES_PREFIX.length();", "+\t\t\tfor (int i = 0; i < propertyNames.length; i++){", "+\t\t\t\tString propertyName = propertyNames[i];", "+\t\t\t\tif (propertyName.startsWith(CP_VARIABLE_PREFERENCES_PREFIX)){", "+\t\t\t\t\tString varName = propertyName.substring(variablePrefixLength);", "+\t\t\t\t\tString propertyValue = preferences.get(propertyName, null);", "+\t\t\t\t\tif (propertyValue != null) {", "+\t\t\t\t\t\tIPath varPath = new Path(propertyValue.trim());", "+\t\t\t\t\t\tthis.variables.put(varName, varPath); ", "+\t\t\t\t\t\tthis.previousSessionVariables.put(varName, varPath);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (propertyName.startsWith(CP_CONTAINER_PREFERENCES_PREFIX)){", "+\t\t\t\t\tString propertyValue = preferences.get(propertyName, null);", "+\t\t\t\t\tif (propertyValue != null)", "+\t\t\t\t\t\trecreatePersistedContainer(propertyName, propertyValue, true/*add to container values*/);", "+\t\t\t\t}", "-\t\t\tif (propertyName.startsWith(CP_CONTAINER_PREFERENCES_PREFIX)){", "-\t\t\t\trecreatePersistedContainer(propertyName, preferences.getString(propertyName), true/*add to container values*/);", "-\t\t\t}", "+\t\t} catch (BackingStoreException e1) {", "+\t\t\t// TODO (frederic) see if it's necessary to report this failure..."]}], "num": 63969}