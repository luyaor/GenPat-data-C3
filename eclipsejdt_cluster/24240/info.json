{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7051899bfb749066f31eb148c797d84", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77749ce3251a23b00be349356be41eeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " \tpublic void test366()", "signatureAfterChange": " \tpublic void test366()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid foo1(MX<Class<? extends Object>> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                                                 ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tvoid foo5(MX<? extends Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                       ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tvoid foo5(MX<? extends Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                                         ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tvoid foo6(MX<? super Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                     ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tvoid foo6(MX<? super Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                                       ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tvoid foo7(MX<Class<? extends Class>> target, MX<Class<Class>> value) {\\n\" + ", "+\t\t\t\"\t                             ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tvoid foo7(MX<Class<? extends Class>> target, MX<Class<Class>> value) {\\n\" + ", "+\t\t\t\"\t                                                      ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 25)\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tvoid foo8(MX<MX<? extends Class>> target, MX<MX<Class>> value) {\\n\" + ", "+\t\t\t\"\t                          ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"14. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tvoid foo8(MX<MX<? extends Class>> target, MX<MX<Class>> value) {\\n\" + ", "+\t\t\t\"\t                                                ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"15. ERROR in X.java (at line 25)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 31)\\n\" + ", "+\t\t\t\"16. ERROR in X.java (at line 31)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 34)\\n\" + ", "+\t\t\t\"17. ERROR in X.java (at line 34)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0da6f034a5af384c08ff83f77d6a7dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "7089fcfd703b096f125599a900905c00e15535fa", "commitAfterChange": "ef77db37669242a4bac152127ea8ae67d10be39c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void test028() throws Exception", "signatureAfterChange": " \tpublic void test028() throws Exception", "diff": ["-\tpublic void test028() throws Exception { // // WILL FAIL WHEN https://bugs.eclipse.org/bugs/show_bug.cgi?id=415397 IS FIXED.", "+\tpublic void test028() throws Exception {", "+\t\t// javac b100", "+\t\t// On the type declaration:", "+\t\t//  RuntimeInvisibleTypeAnnotations:", "+\t\t//   0: #9(): CLASS_TYPE_PARAMETER, param_index=0", "+\t\t// On the method:", "+\t    //  RuntimeInvisibleTypeAnnotations:", "+\t    //   0: #9(): METHOD_TYPE_PARAMETER, param_index=0", "+\t\t// On the field:", "+\t\t//  RuntimeInvisibleTypeAnnotations:", "+\t\t//   0: #9(): FIELD, location=[TYPE_ARGUMENT(0)]", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "+\t\t\t\t\"// Signature: <T:Ljava/lang/Object;>Ljava/lang/Object;\\n\" + ", "+\t\t\t\t\"class X {\\n\" + ", "+\t\t\t\t\"  Constant pool:\\n\" + ", "+\t\t\t\t\"    constant #1 class: #2 X\\n\" + ", "+\t\t\t\t\"    constant #2 utf8: \\\"X\\\"\\n\" + ", "+\t\t\t\t\"    constant #3 class: #4 java/lang/Object\\n\" + ", "+\t\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 utf8: \\\"l\\\"\\n\" + ", "+\t\t\t\t\"    constant #6 utf8: \\\"Ljava/util/List;\\\"\\n\" + ", "+\t\t\t\t\"    constant #7 utf8: \\\"Signature\\\"\\n\" + ", "+\t\t\t\t\"    constant #8 utf8: \\\"Ljava/util/List<*>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #9 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"LNonNull;\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"<init>\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"Code\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 method_ref: #3.#15 java/lang/Object.<init> ()V\\n\" + ", "+\t\t\t\t\"    constant #15 name_and_type: #11.#12 <init> ()V\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"LineNumberTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #18 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #19 utf8: \\\"LX;\\\"\\n\" + ", "+\t\t\t\t\"    constant #20 utf8: \\\"LocalVariableTypeTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #21 utf8: \\\"LX<TT;>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #22 utf8: \\\"foo\\\"\\n\" + ", "+\t\t\t\t\"    constant #23 utf8: \\\"<K:Ljava/lang/Object;>()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #24 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #25 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #26 utf8: \\\"<T:Ljava/lang/Object;>Ljava/lang/Object;\\\"\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Field descriptor #6 Ljava/util/List;\\n\" + ", "+\t\t\t\t\"  // Signature: Ljava/util/List<*>;\\n\" + ", "+\t\t\t\t\"  java.util.List l;\\n\" + ", "-\t\t\t\t\"      #23 @NonNull(\\n\" + ", "+\t\t\t\t\"      #10 @NonNull(\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  X();\\n\" + ", "+\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    1  invokespecial java.lang.Object() [14]\\n\" + ", "+\t\t\t\t\"    4  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 6]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\t\t\"  // Signature: <K:Ljava/lang/Object;>()V\\n\" + ", "+\t\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\t\t\"  void foo();\\n\" + ", "+\t\t\t\t\"    0  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 7]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"      Local variable type table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X<T>\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @NonNull(\\n\" + ", "-\t\t\t\t\"    #23 @NonNull(\\n\" + ", "+\t\t\t\t\"    #10 @NonNull(\\n\" + "]}], "num": 24240}