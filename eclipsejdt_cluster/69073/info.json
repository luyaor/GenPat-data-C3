{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "860ed93607c84c704b1dc4362080d4f4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f8327ec8b89ef76eb25d9fd45681b20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "f4a4e733ec9a6ee8e5480938f7f746aa2704ad0d", "commitAfterChange": "f775b73fdbd5c38023656e438f9ccb262941721f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void test0010()", "signatureAfterChange": " public void test0010()", "diff": ["+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tZ<Y1, Y2> var;\\n\" + ", "+\t\t\"\t  ^^\\n\" + ", "+\t\t\"Y1 cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tZ<Y1, Y2> var;\\n\" + ", "+\t\t\"\t      ^^\\n\" + ", "+\t\t\"Y2 cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tZ<Y1, Y2> var;\\n\" + ", "+\t\t\"\t  ^^\\n\" + ", "+\t\t\"Y1 cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\tZ<Y1, Y2> var;\\n\" + ", "+\t\t\"\t      ^^\\n\" + ", "+\t\t\"Y2 cannot be resolved to a type\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9274ba5ffdb3c521036e02ee2a086578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "ff1eb602a8aea39b1e15b206441aadf76bfaa984", "commitAfterChange": "dc5ee42cb3e5694c60c3a1f62c20766cb3cb2274", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void test0049()", "signatureAfterChange": " public void test0049()", "diff": ["+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "+\t\t\"\t              ^^\\n\" + ", "+\t\t\"The attribute value is undefined for the annotation type MyAnn\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "+\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\"The public type Test must be defined in its own file\\n\" + ", "+\t\t\"\t              ^^\\n\" + ", "+\t\t\"The attribute value is undefined for the annotation type MyAnn\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "-\t\t\"Syntax error on token \\\",\\\", / expected\\n\" + ", "+\t\t\"Syntax error on token \\\",\\\", < expected\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic @MyAnn(\\\"\\\",\\\"\\\") class Test {\t\t\\n\" + ", "+\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\"The public type Test must be defined in its own file\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b1b338b7807837375ee063d8d61fbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "867dd152ebfa0e20933236e2a9ac1203eb8cefb2", "commitAfterChange": "e760e456d0e96ba9bce504014e582b9dbdf7e542", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test_nonnull_list_elements_03()", "signatureAfterChange": " \tpublic void test_nonnull_list_elements_03()", "diff": ["+\t\t\t\t\"Dummy.java\",", "+\t\t\t\t  \"import static java.lang.annotation.ElementType.*;\\n\" +", "+\t\t\t\t  \"import java.lang.annotation.*;\\n\" +", "+\t\t\t\t  \"@Retention(RetentionPolicy.CLASS)\\n\" +", "+\t\t\t\t  \"@Target({METHOD,PARAMETER,LOCAL_VARIABLE,TYPE_USE})\\n\" +", "+\t\t\t\t  \"public @interface Dummy {\\n\" +", "+\t\t\t\t  \"}\\n\",", "-\t\t\t\t  \"    void bar(@Nullable List<@NonNull Object> l) {\\n\" +", "+\t\t\t\t  \"    void bar(@Nullable List<java.lang.@NonNull Object> l) {\\n\" +", "+\t\t\t\t  \"    }\\n\" +", "+\t\t\t\t  \"    void bar2(@Dummy java.util.@Nullable List<java.lang.@NonNull Object> l2) {\\n\" +", "+\t\t\t\t  \"        System.out.print(l2.get(0).toString()); // problem: l2 may be null\\n\" +", "+\t\t\t\t  \"        l2.add(0, null); // problem: cannot insert 'null' into this list\\n\" +", "+\t\t\t\"Null type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tSystem.out.print(l2.get(0).toString()); // problem: l2 may be null\\n\" + ", "+\t\t\t\"\t                 ^^\\n\" + ", "+\t\t\t\"Potential null pointer access: this expression has a '@Nullable' type\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tl2.add(0, null); // problem: cannot insert \\'null\\' into this list\\n\" + ", "+\t\t\t\"\t          ^^^^\\n\" + "]}], "num": 69073}