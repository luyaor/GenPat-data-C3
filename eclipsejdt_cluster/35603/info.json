{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9416a3024be3a13fa56eb9a83293c27", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f454bd8c4c2596feebe1201b1af8d32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\tchar[] typeSignature = null;", "-\t\tif (sourceLevel >= ClassFileConstants.JDK1_5) {", "-\t\t\ttypeSignature = binaryType.getGenericSignature();", "-\t\t\tthis.tagBits |= binaryType.getTagBits();", "-\t\t}", "+\t\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, even in a 1.4 project, we", "+\t\t   must internalize type variables and observe any parameterization of super class", "+\t\t   and/or super interfaces in order to be able to detect overriding in the presence", "+\t\t   of generics.", "+\t\t */", "+\t\tchar[] typeSignature = binaryType.getGenericSignature(); // use generic signature even in 1.4", "+\t\tthis.tagBits |= binaryType.getTagBits();", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4bd9bf233ca9207239f4f133bcb2e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\tchar[] typeSignature = null;", "-\t\tif (sourceLevel >= ClassFileConstants.JDK1_5) {", "-\t\t\ttypeSignature = binaryType.getGenericSignature();", "-\t\t\tthis.tagBits |= binaryType.getTagBits();", "-\t\t}", "+\t\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=324850, even in a 1.4 project, we", "+\t\t   must internalize type variables and observe any parameterization of super class", "+\t\t   and/or super interfaces in order to be able to detect overriding in the presence", "+\t\t   of generics.", "+\t\t */", "+\t\tchar[] typeSignature = binaryType.getGenericSignature(); // use generic signature even in 1.4", "+\t\tthis.tagBits |= binaryType.getTagBits();", "+\t\t"]}], "num": 35603}