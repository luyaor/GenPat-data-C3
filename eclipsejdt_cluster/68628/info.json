{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13546ea698b1aed8e70f543953e7375a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bda876c44e477dfc172d7f17369aacf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \t \tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \t \tpublic MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t    \tmethodBinding = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite);", "+\t\t\t    \tmethodBinding = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite, FULL_INFERENCE);", "-\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite);", "+\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite, APPLICABILITY);", "-\t\t\tif (visibleIndex == 1) return visible[0];", "+\t\t\tif (visibleIndex == 1) {", "+\t\t\t\t// 1.8: Give inference a chance to perform outstanding tasks (18.5.2):", "+\t\t\t\treturn inferInvocationType(invocationSite, visible[0], argumentTypes);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47bcc2d1e39c6c01ed418dc0dc0f5a50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 50, "signatureBeforeChange": "  \tpublic MethodBinding getConstructor0(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic MethodBinding getConstructor0(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t    \tmethodBinding = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite, FULL_INFERENCE);", "+\t\t\t    \tmethodBinding = computeCompatibleMethod(methodBinding, argumentTypes, invocationSite);", "-\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite, APPLICABILITY);", "+\t\t\t\tMethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite);", "-\t\t\t\t// 1.8: Give inference a chance to perform outstanding tasks (18.5.2):", "-\t\t\t\treturn inferInvocationType(invocationSite, visible[0], argumentTypes);", "+\t\t\t\treturn visible[0];"]}], "num": 68628}