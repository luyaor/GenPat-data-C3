{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2b9ac0d71f638f51651bef4677dbf6e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b11f97be21107e2264413c6592e8f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void remember(IType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private void remember(IType type, ReferenceBinding typeBinding)", "diff": ["-", "+\t\tboolean isAnonymous = false;", "+\t\ttry {", "+\t\t\tisAnonymous = type.isAnonymous();", "+\t\t} catch(JavaModelException jme) {", "+\t\t\t// Ignore", "+\t\t}", "-\t\t\t\t\tsuperInterfaceNames);", "+\t\t\t\t\tsuperInterfaceNames,", "+\t\t\t\t\tisAnonymous);", "-\t\t\t\t\tnew char [][] { typeBinding.superInterfaces()[0].sourceName() });", "+\t\t\t\t\tnew char [][] { typeBinding.superInterfaces()[0].sourceName() },", "+\t\t\t\t\tisAnonymous);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc0666f161b6bbb28a182515b2ab117", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t\tprivate void append(IType type) throws JavaModelException", "signatureAfterChange": " \t\tprivate void append(IType type) throws JavaModelException", "diff": ["-\t\t\tif (typeName.length() == 0) {", "+\t\t\tboolean anonymous = false;", "+\t\t\ttry {", "+\t\t\t\tanonymous = type.isAnonymous();", "+\t\t\t} catch(JavaModelException jme) {", "+\t\t\t}", "+\t\t\tif (anonymous) {", "+\t\t\t} else if (type.isLambda()) {", "+\t\t\t\t((LambdaExpression) type).toStringName(this.line);"]}], "num": 30673}