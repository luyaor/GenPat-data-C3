{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0aa1642cc980e30be951ca229eb29697", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31dbd7c6cefe4d18eabc5a933c0ff3b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "f51d6f5a0e9a386694d73d0c3aec5b18e2ce1002", "commitAfterChange": "4ec516fd83ba9f8d854c904c0afabe8bb5fc0412", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 64, "signatureBeforeChange": "    \tprivate void saveBuildState() throws CoreException", "signatureAfterChange": "  \tprivate void saveState(PerProjectInfo info, ISaveContext context) throws CoreException", "diff": ["+\tprivate void saveState(PerProjectInfo info, ISaveContext context) throws CoreException {", "-", "-\tprivate void saveBuildState() throws CoreException {", "-\t\tArrayList vStats= null; // lazy initialized", "-\t\tfor (Iterator iter =  perProjectInfo.values().iterator(); iter.hasNext();) {", "-\t\t\ttry {", "-\t\t\t\tPerProjectInfo info = (PerProjectInfo) iter.next();", "-\t\t\t\tif (info.triedRead)", "-\t\t\t\t\tsaveState(info);", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tif (vStats == null)", "-\t\t\t\t\tvStats= new ArrayList();", "-\t\t\t\tvStats.add(e.getStatus());", "-\t\t\t}", "-\t\t}", "-\t\tif (vStats != null) {", "-\t\t\tIStatus[] stats= new IStatus[vStats.size()];", "-\t\t\tvStats.toArray(stats);", "-\t\t\tthrow new CoreException(new MultiStatus(JavaCore.PLUGIN_ID, IStatus.ERROR, stats, Util.bind(\"build.cannotSaveStates\"), null)); //$NON-NLS-1$", "-\t\t}", "+\t\t// passed this point, save actions are non trivial", "+\t\tif (context.getKind() == ISaveContext.SNAPSHOT) return;", "+\t\t", "+\t\t// save built state", "+\t\tif (info.triedRead) saveBuiltState(info);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374c9c2df59721889cc2b9d8f0e55fbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "f51d6f5a0e9a386694d73d0c3aec5b18e2ce1002", "commitAfterChange": "4ec516fd83ba9f8d854c904c0afabe8bb5fc0412", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\r\t\tint k = context.getKind();", "-\t\tif (k == ISaveContext.FULL_SAVE){", "-\t\t\tthis.saveBuildState();\t// build state", "-\t\t} else if (k == ISaveContext.PROJECT_SAVE){", "-\t\t\tPerProjectInfo info = getPerProjectInfo(context.getProject());", "-\t\t\tif (info.triedRead)", "-\t\t\t\tsaveState(info);", "+\t", "+\t\tIProject savedProject = context.getProject();", "+\t\tif (savedProject != null) {", "+\t\t\tPerProjectInfo info = getPerProjectInfo(savedProject);", "+\t\t\tsaveState(info, context);", "+\t\t\treturn;", "+\t\t}", "+", "+\t\tArrayList vStats= null; // lazy initialized", "+\t\tfor (Iterator iter =  perProjectInfo.values().iterator(); iter.hasNext();) {", "+\t\t\ttry {", "+\t\t\t\tPerProjectInfo info = (PerProjectInfo) iter.next();", "+\t\t\t\tsaveState(info, context);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\tif (vStats == null)", "+\t\t\t\t\tvStats= new ArrayList();", "+\t\t\t\tvStats.add(e.getStatus());", "+\t\t\t}", "+\t\t}", "+\t\tif (vStats != null) {", "+\t\t\tIStatus[] stats= new IStatus[vStats.size()];", "+\t\t\tvStats.toArray(stats);", "+\t\t\tthrow new CoreException(new MultiStatus(JavaCore.PLUGIN_ID, IStatus.ERROR, stats, Util.bind(\"build.cannotSaveStates\"), null)); //$NON-NLS-1$"]}], "num": 1714}