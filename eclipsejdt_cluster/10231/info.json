{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1017cebd85f992e222efb093f1fcdcb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173f5fadba0a66f63c7ad2d93039ebc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 178, "signatureBeforeChange": "  \tprotected void updateInnerPositions(Type type, int dimensions)", "signatureAfterChange": "  \tprotected void updateInnerPositions(Type type, int dimensions)", "diff": ["-\t\t\tType currentComponentType = ((ArrayType) type).getComponentType();", "+\t\t\tType currentComponentType = componentType(((ArrayType) type));", "-\t\t\t\tcurrentComponentType = ((ArrayType) currentComponentType).getComponentType();", "+\t\t\t\tcurrentComponentType = componentType(((ArrayType) currentComponentType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3af205d1df962ec8dd622357801215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b60c1aaae3fe11d43d607ff3301c889050e228cc", "commitAfterChange": "0dab5b92938c7a7a005a5ebe5da911d162ac69ca", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "signatureAfterChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "diff": ["+\t\tremoveExtraBlanks(type);", "-\t\t\tcastExpression.setType(convertType((TypeReference)expression.type));", "+\t\t\tcastExpression.setType(convertType((TypeReference)type));", "-\t\t\tcastExpression.setType(convertToType((NameReference)expression.type));", "+\t\t\tcastExpression.setType(convertToType((NameReference)type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8103c0858a7f6fd67572fbbe275c82a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic Type getElementType()", "signatureAfterChange": " \tpublic Type getElementType()", "diff": ["-\t\tType t = getComponentType();", "-\t\twhile (t.isArrayType()) {", "-\t\t\tt = ((ArrayType) t).getComponentType();", "+\t\tif (this.ast.apiLevel() < AST.JLS8) {", "+\t\t\tType t = getComponentType();", "+\t\t\twhile (t.isArrayType()) {", "+\t\t\t\tt = ((ArrayType) t).getComponentType();", "+\t\t\t}", "+\t\t\treturn t;", "-\t\treturn t;", "+\t\treturn internalGetComponentType(ELEMENT_TYPE_PROPERTY);", "+\t}"]}], "num": 10231}