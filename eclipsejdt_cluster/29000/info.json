{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec12b8147901190e48b11be1222bba43", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5faeaffd7e26f9f493812451c7acac87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "ecc877f4a64f24702c10a0e0ed414c6dcc29fb27", "commitAfterChange": "7943e50059a500406b320bebd48d63683b77a8e7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void consumeLocalVar(char[] varName)", "signatureAfterChange": "  \tpublic void consumeLocalVar(char[] varName, int occurrenceCount)", "diff": ["-\tpublic void consumeLocalVar(char[] varName) {", "+\tpublic void consumeLocalVar(char[] varName, int occurrenceCount) {", "-\t\t\tif (CharOperation.equals(varName, local.name)) {", "+\t\t\tif (CharOperation.equals(local.name, varName)", "+\t\t\t\t\t&& occurrenceCount-- == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ccaf0531adde6fe1a96b8726647f86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "d185eab4c1939e466ec2dc39c6957f5f96655610", "commitAfterChange": "3dc1bc05d190d32f0485aff7f7ba0e75f5ac20a4", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element, int eventType)", "diff": ["-protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element) {", "+protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element, int eventType) {", "-\t\tif (cu.isWorkingCopy()) {", "+\t\tif (cu.isWorkingCopy() && eventType == ElementChangedEvent.POST_RECONCILE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ea329bb323b37d2e5c44159e43c611", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "04abb6d1e9cce4ccf64496ee5f7d45399d283bd2", "commitAfterChange": "e586991bacf22cb0c88410f0cd529579715fb06a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected static TestSuite createSuite(Class testClass)", "signatureAfterChange": " \tprotected static TestSuite createSuite(Class testClass, int classSince)", "diff": ["+\t */", "+\tprotected static TestSuite createSuite(Class testClass, int classSince) {", "-\t\t\t\t\t\t\tif (level >= since) {", "-\t\t\t\t\t\t\t\tsuite.addTest((Test) cons.newInstance(new Object[]{name,  new Integer(level)}));", "+\t\t\t\t\t\t\tif (level >= since && level >= classSince) {", "+\t\t\t\t\t\t\t\tsuite.addTest((Test) cons.newInstance(new Object[]{name, new Integer(level)}));"]}], "num": 29000}