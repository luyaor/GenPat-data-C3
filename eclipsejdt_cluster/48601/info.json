{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f90ca1059bf06a39709b0bd2782d112", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3129d9ecbfd27815eabe38d3033d1c72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "cd5ec8c17cdfceb4de927833e5a540f62cfa8d72", "commitAfterChange": "a4657a1df055a272f769463c9d20e50f1888cccd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \tpublic boolean couldBreak()", "signatureAfterChange": " \t\t \tpublic boolean couldBreak()", "diff": ["-", "-\t\t\t\t\t", "-\t\t\t\t\tif (this.fragmentCount > 1 && this.fragmentBreaks[1] == NONE) {", "-\t\t\t\t\t\tfor (i = 1; i < this.fragmentCount; i++){", "+\t\t\t\t\tif (this.fragmentCount > 1", "+\t\t\t\t\t\t\t&& this.fragmentBreaks[1] == NONE) {", "+\t\t\t\t\t\tif ((this.mode & M_INDENT_ON_COLUMN) != 0) {", "+\t\t\t\t\t\t\tthis.fragmentIndentations[0] = this.breakIndentationLevel;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tfor (i = 1; i < this.fragmentCount; i++) {", "-\t\t\t\t\t\t// first fragment is also broken if it would be beyond the subsequent fragments", "-\t\t\t\t\t\t// e.g.   foobar(#AAAAA,    foobar(", "-\t\t\t\t\t\t//          #BBBBB,     -->   #AAAAA,", "-\t\t\t\t\t\t//          #CCCCC)           #BBBBB,", "-\t\t\t\t\t\t//                            #CCCCC)", "-\t\t\t\t\t\tint firstFragmentIndentation = this.scribe.getIndentationLevel(this.location.outputColumn);", "-\t\t\t\t\t\tif (firstFragmentIndentation > this.breakIndentationLevel){", "-\t\t\t\t\t\t\tthis.fragmentBreaks[0] = BREAK;\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.fragmentIndentations[0] = this.breakIndentationLevel;\t\t\t\t\t\t", "-\t\t\t\t\t\t} else if (firstFragmentIndentation < this.breakIndentationLevel) {", "-\t\t\t\t\t\t\tif ((this.mode & M_INDENT_ON_COLUMN) == 0) { ", "-\t\t\t\t\t\t\t\tthis.fragmentBreaks[0] = BREAK;\t\t\t\t\t", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tthis.fragmentIndentations[0] = this.breakIndentationLevel;\t\t\t\t\t\t", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (this.fragmentIndentations[0] != this.breakIndentationLevel) {", "-\t\t\t\t\t\t\tthis.fragmentBreaks[0] = BREAK;\t\t\t\t\t", "-\t\t\t\t\t\t\tthis.fragmentIndentations[0] = this.breakIndentationLevel;\t\t\t\t\t\t", "-\t\t\t\t\t\t\treturn wasSplit = true;", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717b0f480e17b85d63e33bd180ed6139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "471b30fcd9175fdd69611c88984722b9e0b5e4ee", "commitAfterChange": "1a356ccfb3b5b00256393a405276ebc654766b8b", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate void printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["-\t\tint firstColumn = this.column;", "+\t\tint maxColumn = this.formatter.preferences.comment_line_length + 1;", "-\t\tthis.indentationLevel = getNextIndentationLevel(firstColumn);", "-\t\tthis.numberOfIndentations = this.indentationLevel % this.indentationSize;", "+\t\tthis.indentationLevel = (this.column / this.tabLength) * this.tabLength;", "+\t\tthis.column = this.indentationLevel + 1;", "+\t\tthis.numberOfIndentations = this.indentationLevel / this.indentationSize;", "-\t\tint maxColumn = this.formatter.preferences.comment_line_length + 1;", "-    \t\tboolean insertSpace = (previousToken == TerminalTokens.TokenNameWHITESPACE || newLine) && (!firstWord || !hasTokens);", "+    \t\tboolean insertSpace = (previousToken == TerminalTokens.TokenNameWHITESPACE || newLine || previousToken == -1) && (!firstWord || !hasTokens);", "+\t\t\t\tcase TerminalTokens.TokenNameMULTIPLY_EQUAL:", "+\t\t\t\t\tif (newLine) {", "+\t\t\t\t\t\tthis.scanner.resetTo(this.scanner.startPosition, currentTokenEndPosition-1);", "+\t\t\t\t\t\tthis.scanner.getNextChar(); // consume the multiply", "+\t\t\t\t\t\tpreviousToken = TerminalTokens.TokenNameMULTIPLY;", "+\t\t\t\t\t\tscannerLine = Util.getLineNumber(this.scanner.getCurrentTokenEndPosition(), this.lineEnds, scannerLine>1 ? scannerLine-2 : 0, this.maxLines);", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "-\t\t\t\tif ((firstColumn+tokensString.length()+tokenLength) > maxColumn) {", "+\t\t\t\tif ((this.indentationLevel+tokensString.length()+tokenLength) > maxColumn) {", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tif (buffer.charAt(0) != ' ') {", "-\t\t\t\t\treplacement.append(' ');", "-\t\t\t\t\tthis.column++;"]}], "num": 48601}