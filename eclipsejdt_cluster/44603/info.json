{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4a57c6cc7c839e36a86f19a08ea2d73", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3507316f3d24c7614ae4c03fcb0b72d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testAddImports_bug24804_5() throws Exception", "signatureAfterChange": " \tpublic void testImportGroupMatchingQualifiedName() throws Exception", "diff": ["+\t */", "+\tpublic void testImportGroupMatchingQualifiedName() throws Exception {", "+\t\tICompilationUnit cu = createCompilationUnit(\"pack1\", \"C\");", "+", "+\t\tString[] order = new String[] { \"#android.R.doFoo\", \"android.R\", \"java\", \"android\" };", "+", "+\t\tImportRewrite imports = newImportsRewrite(cu, order, 999, 999, false);", "+\t\timports.setUseContextToFilterImplicitImports(true);", "+\t\timports.addImport(\"android.R\");", "+\t\timports.addImport(\"java.util.List\");", "+\t\timports.addImport(\"android.Foo\");", "+\t\timports.addStaticImport(\"android.R\", \"doFoo\", false);", "+", "+\t\tapply(imports);", "+", "+\t\tStringBuffer expected = new StringBuffer();", "+\t\texpected.append(\"package pack1;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import static android.R.doFoo;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import android.R;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import java.util.List;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"import android.Foo;\\n\");", "+\t\texpected.append(\"\\n\");", "+\t\texpected.append(\"public class C {}\");", "+\t\tassertEqualString(cu.getSource(), expected.toString());", "+\t}", "-", "-\tpublic void testAddImports_bug24804_5() throws Exception {", "-", "-\t\tIPackageFragment pack1= this.sourceFolder.createPackageFragment(\"pack1\", false, null);", "-\t\tStringBuffer buf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.lang.AssertionError; //test\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"import java.lang.System;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tICompilationUnit cu= pack1.createCompilationUnit(\"C.java\", buf.toString(), false, null);", "-", "-\t\tString[] order= new String[] { \"java\" };", "-", "-\t\tImportRewrite imports= newImportsRewrite(cu, order, 1, 1, false);", "-\t\timports.addImport(\"java.io.Exception\");", "-", "-\t\tapply(imports);", "-", "-\t\tbuf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.io.*;\\n\");", "-\t\tbuf.append(\"//test\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tassertEqualString(cu.getSource(), buf.toString());", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ed301d079b78eda89b6b4db3aeb223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tpublic void testAddImports_bug24804_2() throws Exception", "signatureAfterChange": "  \tpublic void testAddImports_bug23078_usingContext() throws Exception", "diff": ["+", "+\tpublic void testAddImports_bug23078_usingContext() throws Exception {", "+\t\tIPackageFragment pack1= this.sourceFolder.createPackageFragment(\"pack1\", false, null);", "+\t\tStringBuffer buf= new StringBuffer();", "+\t\tbuf.append(\"package pack1;\\n\");", "+\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"import p.A.*;\\n\");", "+\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"public class C {\\n\");", "+\t\tbuf.append(\"}\\n\");", "+\t\tICompilationUnit cu= pack1.createCompilationUnit(\"C.java\", buf.toString(), false, null);", "+", "+\t\tString[] order= new String[] { };", "+", "+\t\tImportRewrite imports= newImportsRewrite(cu, order, 3, 3, true);", "+\t\timports.setUseContextToFilterImplicitImports(true);", "+\t\timports.addImport(\"p.A\");", "+\t\timports.addImport(\"p.Inner\");", "+\t\timports.addImport(\"p.Inner.*\");", "+", "+\t\tapply(imports);", "+", "+\t\t// Having set useContextToFilterImplicitImports to true, we get 3.6-and-later behavior,", "+\t\t// which sorts imports by containing package and then by qualified name.", "+\t\tbuf= new StringBuffer();", "+\t\tbuf.append(\"package pack1;\\n\");", "+\t\tbuf.append(\"\\n\");", "+\t\tbuf.append(\"import p.A;\\n\");", "+\t\tbuf.append(\"import p.A.*;\\n\");", "+\t\tbuf.append(\"import p.Inner;\\n\");", "+\t\tbuf.append(\"import p.Inner.*;\\n\");", "-\tpublic void testAddImports_bug24804_2() throws Exception {", "-", "-\t\tIPackageFragment pack1= this.sourceFolder.createPackageFragment(\"pack1\", false, null);", "-\t\tStringBuffer buf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.lang.AssertionError;//test\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"import java.lang.System;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tICompilationUnit cu= pack1.createCompilationUnit(\"C.java\", buf.toString(), false, null);", "-", "-\t\tString[] order= new String[] { \"java\" };", "-", "-\t\tImportRewrite imports= newImportsRewrite(cu, order, 99, 99, true);", "-\t\timports.addImport(\"java.io.Exception\");", "-", "-\t\tapply(imports);", "-", "-\t\tbuf= new StringBuffer();", "-\t\tbuf.append(\"package pack1;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"import java.io.Exception;\\n\");", "-\t\tbuf.append(\"import java.lang.AssertionError;//test\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment2 */\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"/** comment */\\n\");", "-\t\tbuf.append(\"import java.lang.System;\\n\");", "-\t\tbuf.append(\"\\n\");", "-\t\tbuf.append(\"public class C {\\n\");", "-\t\tbuf.append(\"}\\n\");", "-\t\tassertEqualString(cu.getSource(), buf.toString());", "-\t}"]}], "num": 44603}