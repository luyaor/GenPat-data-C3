{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c852b9768b1814a272439cf8c5e89f14", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8172d922d2eefeff267d50e7d69c4fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "198d94bedf8984594355707af3b11dd0e060bd78", "commitAfterChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic void testMethodDeclarationExtraDimensions() throws Exception", "signatureAfterChange": "  \tpublic void testMethodDeclarationExtraDimensions() throws Exception", "diff": ["-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(1), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);", "-\t\t\trewrite.set(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);", "+\t\t\trewrite.set(methodDecl, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, new Integer(4), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c7b9e140f062bf6d6e7777e55742eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testListInserts() throws Exception", "signatureAfterChange": " \t \tpublic void testListInserts() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\tListRewriter listRewrite = rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "+\t\t\tListRewrite listRewrite = rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "-\t\t\tListRewriter listRewrite = rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "+\t\t\tListRewrite listRewrite = rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "-\t\t\trewrite.markAsReplaced((ASTNode) thrownExceptions.get(1), newThrownException2, null);", "+\t\t\trewrite.replace((ASTNode) thrownExceptions.get(1), newThrownException2, null);", "-\t\t\tListRewriter listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "-\t\t\trewrite.markAsRemoved(lastException, null);", "+\t\t\trewrite.remove(lastException, null);", "-\t\t\tListRewriter listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.PARAMETERS_PROPERTY);", "-\t\t\trewrite.markAsRemoved(secondException, null);", "-\t\t\trewrite.markAsRemoved(lastException, null);", "+\t\t\trewrite.remove(secondException, null);", "+\t\t\trewrite.remove(lastException, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8ca72bcf2313c9fec5f826f7950a4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 77, "signatureBeforeChange": "   \tprivate void rewriteReturnType(MethodDeclaration node, boolean isConstructor, boolean isConstructorChange)", "signatureAfterChange": "  \tprivate void rewriteReturnType(MethodDeclaration node, boolean isConstructor, boolean isConstructorChange)", "diff": ["-", "-\t\t// weakness in the AST: return type always exists, even if missing in source", "-\t\tASTNode originalReturnType= (ASTNode) getOriginalValue(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\tChildPropertyDescriptor property= (node.getAST().apiLevel() == AST.JLS2) ? MethodDeclaration.RETURN_TYPE_PROPERTY : MethodDeclaration.RETURN_TYPE2_PROPERTY;", "+", "+\t\t// weakness in the AST: return type can exist, even if missing in source", "+\t\tASTNode originalReturnType= (ASTNode) getOriginalValue(node, property);", "-\t\t\trewriteRequiredNode(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\t\trewriteRequiredNode(node, property);", "-\t\tASTNode newReturnType= (ASTNode) getNewValue(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\tASTNode newReturnType= (ASTNode) getNewValue(node, property);", "-\t\t\t\tTextEditGroup editGroup= getEditGroup(node, MethodDeclaration.RETURN_TYPE_PROPERTY);", "+\t\t\t\tTextEditGroup editGroup= getEditGroup(node, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0104baa43963160745ce3ac4fe41be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "c67e828d3788591f96003d3b6db18c20724f7bf4", "commitAfterChange": "31085e35ec6546fd0ce14d2c37082b7385a37318", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void testExtraDimwithAnnotations_since_8() throws Exception", "signatureAfterChange": " \tpublic void testExtraDimwithAnnotations_since_8() throws Exception", "diff": ["-\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS2_PROPERTY);", "-\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS2_PROPERTY);", "-\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS2_PROPERTY);", "-\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(methodDecl, MethodDeclaration.EXTRA_DIMENSIONS2_PROPERTY);"]}], "num": 52429}