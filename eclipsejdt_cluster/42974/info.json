{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86081a137855bd435d5eafd5382267e9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9954d06662091b83d7aaea7c94ae02c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "f5186f4bb592c82c031d71e3ac997120db3572db", "commitAfterChange": "e5922a5706d1abdae05b12aa57fc816aa6feb6e1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 16, "signatureBeforeChange": "  boolean uses(TypeVariableBinding variable)", "signatureAfterChange": "  public boolean isReferencing(TypeVariableBinding variable)", "diff": ["+", "+public boolean isReferencing(TypeVariableBinding variable) {", "+\tif (this == variable) {", "+\t\treturn true;", "+\t}", "+\tif (this.firstBound.isReferencing(variable)) {", "+\t\treturn true;", "+\t}", "+\tfor (int i = 0, l = this.superInterfaces.length ; i < l ; i++) {", "+\t\tif (this.superInterfaces[i].isReferencing(variable)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}", "+\treturn false;", "+}", "-", "-boolean uses(TypeVariableBinding variable) {", "-\treturn CharOperation.equals(variable.sourceName, this.sourceName);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e0e8d6392e6419d22e039c7e6fb389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "f5186f4bb592c82c031d71e3ac997120db3572db", "commitAfterChange": "e5922a5706d1abdae05b12aa57fc816aa6feb6e1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 12, "signatureBeforeChange": "  boolean uses(TypeVariableBinding variable)", "signatureAfterChange": "  public boolean isReferencing(TypeVariableBinding variable)", "diff": ["+public boolean isReferencing(TypeVariableBinding variable) {", "+\tif (this.bound != null) {", "+\t\treturn this.bound.isReferencing(variable);", "+\t}", "+\treturn false;", "+}", "-", "-boolean uses(TypeVariableBinding variable) {", "-\tif (this.bound != null) {", "-\t\treturn this.bound.uses(variable);", "-\t}", "-\treturn false;", "-}"]}], "num": 42974}