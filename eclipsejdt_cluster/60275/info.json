{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33b6afb6d6238a86d439121c41f68931", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b0f633f166da3b2137a16552de8b89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 388, "methodNumberAfterChange": 388, "signatureBeforeChange": " \tpublic void test386()", "signatureAfterChange": " \tpublic void test386()", "diff": ["-\t\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\t\"\tpublic R getU() { return (R)u; } // Warning\\n\" + ", "-\t\t\t\t\"\t                         ^^^^\\n\" + ", "-\t\t\t\t\"Unnecessary cast from U to R\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic R getV() { return (R)v; } // Warning\\n\" + ", "-\t\t\t\t\"\t                         ^^^^\\n\" + ", "-\t\t\t\t\"Unnecessary cast from V to R\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\t\"\tpublic T getT() { return (T)o; } // Warning\\n\" + ", "-\t\t\t\t\"\t                         ^^^^\\n\" + ", "-\t\t\t\t\"Unnecessary cast from Object to T\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tpublic R getU() { return (R)u; } // Warning\\n\" + ", "+\t\t\t\"\t                         ^^^^\\n\" + ", "+\t\t\t\"Type safety: The cast from U to R is actually checking against the erased type Object\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic R getV() { return (R)v; } // Warning\\n\" + ", "+\t\t\t\"\t                         ^^^^\\n\" + ", "+\t\t\t\"Type safety: The cast from V to R is actually checking against the erased type Object\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tpublic T getT() { return (T)o; } // Warning\\n\" + ", "+\t\t\t\"\t                         ^^^^\\n\" + ", "+\t\t\t\"Type safety: The cast from Object to T is actually checking against the erased type Object\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e22d5027c72d1e20c58bf065dd5ff67b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1461, "methodNumberAfterChange": 1462, "signatureBeforeChange": " public void test1427()", "signatureAfterChange": " public void test1427()", "diff": ["-\tthis.runNegativeTest(", "+\tString xSource =", "+\t\t\t\"import java.util.List;\\n\" + ", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"    public <T> List<T> nil() { return null; }\\n\" + ", "+\t\t\t\"    public <T> T getHead(List<T> x) { return null; }\\n\" + ", "+\t\t\t\"    X() {\\n\" + ", "+\t\t\t\"\t   String s = getHead(nil());\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\txSource", "+\t\t\t\t},", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tString s = getHead(nil());\\n\" + ", "+\t\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from Object to String\\n\" + ", "+\t\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(", "-\t\t\t\t\"X.java\", //-----------------------------------------------------------------------", "-\t\t\t\t\"import java.util.List;\\n\" + ", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"    public <T> List<T> nil() { return null; }\\n\" + ", "-\t\t\t\t\"    public <T> T getHead(List<T> x) { return null; }\\n\" + ", "-\t\t\t\t\"    X() {\\n\" + ", "-\t\t\t\t\"\t   String s = getHead(nil());\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"}\\n\",//-----------------------------------------------------------------------", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tString s = getHead(nil());\\n\" + ", "-\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Object to String\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource", "+\t\t\t});", "+\t}"]}], "num": 60275}