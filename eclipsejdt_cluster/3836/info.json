{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe7ae5932107f165b47dee258f1dcaa1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb8ed1589fc4a6f388d5ea6624798ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "269987b22b1df921e21c67a56b711a3bfe74424a", "commitAfterChange": "5ccb7b97d272a881f0a05817c513091dfe86591d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testPackageFragmentRootRawEntry() throws CoreException", "signatureAfterChange": " public void testPackageFragmentRootRawEntry() throws CoreException, IOException", "diff": ["-public void testPackageFragmentRootRawEntry() throws CoreException {", "+public void testPackageFragmentRootRawEntry() throws CoreException, IOException {", "+\tFile libDir = null;", "-\t\tJavaCore.setClasspathVariable(\"MyVar\", new Path(\"/P/lib\"), null);", "+\t\tString libPath = EXTERNAL_JAR_DIR_PATH + File.separator + \"lib\";", "+\t\tJavaCore.setClasspathVariable(\"MyVar\", new Path(libPath), null);", "-\t\tthis.createFolder(\"/P/lib\");", "-\t\tfinal int length = 500;", "+\t\tlibDir = new File(libPath);", "+\t\tlibDir.mkdirs();", "+\t\tfinal int length = 200;", "-\t\t\tthis.createFile(\"/P/lib/lib\"+i+\".jar\", \"\");", "+\t\t\tFile libJar = new File(libDir, \"lib\"+i+\".jar\");", "+\t\t\tlibJar.createNewFile();", "+\t\tif (libDir != null) {", "+\t\t\tString[] libJars = libDir.list();", "+\t\t\tif (libJars != null) {", "+\t\t\t\tfor (int i = 0, length = libJars.length; i < length; i++) {", "+\t\t\t\t\tnew File(libDir, libJars[i]).delete();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tlibDir.delete();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b2e378fbde36f822e89f134802d609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "commitAfterChange": "e5768103d107f9b2dcb4a1b6e2eaa25ca6df9ded", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testExternalJarInternalExternalJar() throws CoreException", "signatureAfterChange": " public void testExternalJarInternalExternalJar() throws CoreException, IOException", "diff": ["-public void testExternalJarInternalExternalJar() throws CoreException {", "+public void testExternalJarInternalExternalJar() throws CoreException, IOException {", "-\t\tString libPath = getLibraryPath();", "-\t\tString p1Path = libPath+\"/p1.jar\";", "-\t\tString p2Path = libPath+\"/p2.jar\";", "-\t\tFile f1= new File(p1Path);", "-\t\tFile f2 = new File(p2Path);", "-\t\t", "-\t\tIFile fooIFile = this.createFile(internalFooPath, read(f1));", "+\t\tIFile fooIFile = this.createFile(internalFooPath, new byte[0]);", "-\t\tcopy(f2, f);", "+\t\tf.createNewFile();", "+\t\ttouch(f);", "-\t\tString deltaPath = externalFooPath.toString();", "+\t\tString deltaPath = externalFooPath.toOSString();", "-\t\t\t\"P[*]: {CHILDREN}\\n\"+", "+\t\t\t\"P[*]: {CHILDREN | CLASSPATH CHANGED}\\n\"+", "-\t\t\t\"\t\"+deltaPath.replace('/', File.separatorChar)+\"[*]: {ADDED TO CLASSPATH}\\n\"+", "+\t\t\t\"\t\"+deltaPath+\"[+]: {}\\n\"+", "-\t} catch (IOException e) {"]}], "num": 3836}