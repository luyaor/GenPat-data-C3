{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb5bc055554b34613cd5edca069b66e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1757bb48f3ee31c5da4d036048b1f4ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void testValidCompilationUnitName()", "signatureAfterChange": " \tpublic void testValidCompilationUnitName()", "diff": ["-\t\t\tassertTrue(\"compilation unit name not recognized as invalid: \" + invalidNames[i], !JavaConventions.validateCompilationUnitName(invalidNames[i]).isOK());", "+\t\t\tassertTrue(\"compilation unit name not recognized as invalid: \" + invalidNames[i], !JavaConventions.validateCompilationUnitName(invalidNames[i], sourceLevel, complianceLevel).isOK());", "-\t\t\tassertTrue(\"compilation unit name not recognized as valid: \" + validNames[i], JavaConventions.validateCompilationUnitName(validNames[i]).isOK());", "+\t\t\tassertTrue(\"compilation unit name not recognized as valid: \" + validNames[i], JavaConventions.validateCompilationUnitName(validNames[i], sourceLevel, complianceLevel).isOK());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3538b3ed614800a71269c5c2b84758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "38835101c5cb5aa877400915ae93db40feae72e1", "commitAfterChange": "4007ad30c270c1323bfebe340590d44f8586e167", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void testValidCompilationUnitName()", "signatureAfterChange": " \tpublic void testValidCompilationUnitName()", "diff": ["-\t\t\tassertTrue(\"compilation unit name not recognized as invalid: \" + invalidNames[i], !JavaConventions.validateCompilationUnitName(invalidNames[i], sourceLevel, complianceLevel).isOK());", "+\t\t\tassertEquals(\"compilation unit name not recognized as invalid: \" + invalidNames[i], IStatus.ERROR, validate(invalidNames[i], COMPILATION_UNIT_NAME));", "-\t\t\tassertTrue(\"compilation unit name not recognized as valid: \" + validNames[i], JavaConventions.validateCompilationUnitName(validNames[i], sourceLevel, complianceLevel).isOK());", "+\t\t\tassertEquals(\"compilation unit name not recognized as valid: \" + validNames[i], IStatus.OK, validate(validNames[i], COMPILATION_UNIT_NAME));"]}], "num": 8845}