{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c84d989718d1315d8bce923d61f5bfdd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7d264858e78833e62449d7916011d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void setOutputLocation(IPath outputLocation, IProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setOutputLocation(IPath path, boolean isCleaning, IProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\tpublic void setOutputLocation(IPath outputLocation, IProgressMonitor monitor)", "-\t\tif (outputLocation == null) {", "+\t */", "+\tpublic void setOutputLocation(IPath path, boolean isCleaning, IProgressMonitor monitor)", "+\t\tthrows JavaModelException {", "+", "+\t\tif (path == null) {", "-\t\tif (outputLocation.equals(getOutputLocation())) {", "+\t\tif (path.equals(getOutputLocation())) {", "-\t\tthis.setRawClasspath(SetClasspathOperation.ReuseClasspath, outputLocation, monitor);", "+\t\tthis.setRawClasspath(SetClasspathOperation.ReuseClasspath, path, isCleaning, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b205914996f38aa7e3cf8fbc7cc241d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "563d52051d17585100c8a026af647f623a05093f", "commitAfterChange": "3398b2df5bf1a1e6b089fc10223b0a2d2cdd9e96", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIPath outputLocation, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIPath output, \t\tboolean canModifyResources, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["+\t */", "+\tpublic void setRawClasspath(", "+\t\tIClasspathEntry[] entries,", "+\t\tIPath output,", "+\t\tboolean canModifyResources,", "+\t\tIProgressMonitor monitor)", "+\t\tthrows JavaModelException {", "+", "+\t\tsetRawClasspath(", "+\t\t\tentries, ", "+\t\t\toutput,", "+\t\t\tmonitor, ", "+\t\t\tcanModifyResources, ", "+\t\t\tgetResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/),", "+\t\t\ttrue, // needValidation", "+\t\t\tcanModifyResources); // save only if modifying resources is allowed", "+\t}"]}], "num": 66143}