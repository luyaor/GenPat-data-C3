{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a50eb65973f89522876e1291f49f7c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b0bb5998c0f7084e2dbd45bd9b4e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "ccc3f585223a02209d9fb1de4b1dae325e3fd665", "commitAfterChange": "9a356484adb65f7cc29bbc7281d74cb6498e9713", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "signatureAfterChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "diff": ["-\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null);\r", "+\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ab678267738775b0c6311a21abf6a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "commitAfterChange": "c0452100f2ed18d65cf0dd0efb6f9fc0ffa98156", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "signatureAfterChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "diff": ["-\t\t", "-\t\t\tnull /*no custom options*/,", "-\t\t\tnull /*no custom requestor*/);", "+\t\t\tnull /* no custom options*/,", "+\t\t\tnull /* no custom requestor*/,", "+\t\t  \tfalse /* do not skip javac for this peculiar test */); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d510095f35fe3b9456d2191c36ad4d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, int flags, IProgressMonitor monitor)", "signatureAfterChange": "  \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, int flags, IProgressMonitor monitor)", "diff": ["-\t\t\t\tCompilationUnit node = convert(compilationUnitDeclaration, parser.scanner.getSource(), apiLevel, options, false/*don't resolve binding*/, null/*no owner needed*/, null/*no binding table needed*/, flags /* flags */, monitor);", "+\t\t\t\tCompilationUnit node = convert(compilationUnitDeclaration, parser.scanner.getSource(), apiLevel, options, false/*don't resolve binding*/, null/*no owner needed*/, null/*no binding table needed*/, flags /* flags */, monitor, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71dac921c1142205df7967c788746a13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveElementsTests.java", "commitBeforeChange": "fda975d98b069f678ae89a663957463bb7bd4088", "commitAfterChange": "2e99c72cc03690dcb30e61cdafeb829a4f1ada2f", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " public void testMoveMethodsWithCancel() throws CoreException", "signatureAfterChange": " public void testMoveMethodsWithCancel() throws CoreException", "diff": ["-\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, monitor);", "+\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e976f7b79d40fd651546ea8d01e6ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "commitAfterChange": "d3da1d109c57a90a2bd8342736abf401463d58e5", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\t\tnull, null); ", "+\t\t\t\t\t\t\t\t\tnull, false, null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87350f8687b732e29710d944cdc838c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveElementsTests.java", "commitBeforeChange": "fda975d98b069f678ae89a663957463bb7bd4088", "commitAfterChange": "2e99c72cc03690dcb30e61cdafeb829a4f1ada2f", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testMoveMethodsWithCancelInDifferentProject() throws CoreException", "signatureAfterChange": " public void testMoveMethodsWithCancelInDifferentProject() throws CoreException", "diff": ["-\t\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, monitor);", "+\t\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, true, monitor);"]}], "num": 43704}