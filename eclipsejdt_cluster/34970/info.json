{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83599a99455f78b23440a7d0446c98f4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c849ca7d13fa1d924f6d689db8cd55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "6da1051d4f1d8e21b3b7542b130601f7eef250a3", "commitAfterChange": "a0bf175365121b2ce6109fd510a1295aae7ead4c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "signatureAfterChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\t\tif (valueRequired) {\r", "-\t\t\t\t\t\t\tcodeStream.iconst_0();\r", "-\t\t\t\t\t\t\tcodeStream.goto_(endifLabel = new Label(codeStream));\r", "-\t\t\t\t\t\t\tcodeStream.decrStackSize(1);\r", "-\t\t\t\t\t\t\tfalseLabel.place();\r", "-\t\t\t\t\t\t\tif (valueRequired)\r", "-\t\t\t\t\t\t\t\tcodeStream.iconst_1();\r", "-\t\t\t\t\t\t\tendifLabel.place();\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (falseLabel.hasForwardReferences()) {\r", "+\t\t\t\t\t\t\tif (valueRequired) {\r", "+\t\t\t\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\t\t\t\tcodeStream.goto_(endifLabel = new Label(codeStream));\r", "+\t\t\t\t\t\t\t\tcodeStream.decrStackSize(1);\r", "+\t\t\t\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\t\t\t\tif (valueRequired)\r", "+\t\t\t\t\t\t\t\t\tcodeStream.iconst_1();\r", "+\t\t\t\t\t\t\t\tendifLabel.place();\r", "+\t\t\t\t\t\t\t} else { // 6596: if (!(a && b)){} - must still place falseLabel\r", "+\t\t\t\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\t\t\t}\t\t\r", "+\t\t\t\t\t\t}\t\t\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a787cdc24ca09dac46e72c68e9fed377", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "6da1051d4f1d8e21b3b7542b130601f7eef250a3", "commitAfterChange": "a0bf175365121b2ce6109fd510a1295aae7ead4c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tLabel falseLabel = new Label(codeStream);\r", "-\tgenerateOptimizedBoolean(currentScope, codeStream, null, falseLabel, valueRequired);\r", "-\tif (valueRequired){\r", "-\t\t// comparison is TRUE \r", "-\t\tcodeStream.iconst_1();\r", "-\t\tif ((bits & ValueForReturnMASK) != 0){\r", "-\t\t\tcodeStream.ireturn();\r", "-\t\t\t// comparison is FALSE\r", "-\t\t\tfalseLabel.place();\r", "-\t\t\tcodeStream.iconst_0();\r", "+\tLabel falseLabel;\r", "+\tgenerateOptimizedBoolean(\r", "+\t\tcurrentScope, \r", "+\t\tcodeStream, \r", "+\t\tnull, \r", "+\t\tfalseLabel = new Label(codeStream), \r", "+\t\tvalueRequired);\r", "+\tif (falseLabel.hasForwardReferences()) {\r", "+\t\tif (valueRequired){\r", "+\t\t\t// comparison is TRUE \r", "+\t\t\tcodeStream.iconst_1();\r", "+\t\t\tif ((bits & ValueForReturnMASK) != 0){\r", "+\t\t\t\tcodeStream.ireturn();\r", "+\t\t\t\t// comparison is FALSE\r", "+\t\t\t\tfalseLabel.place();\r", "+\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t} else {\r", "+\t\t\t\tLabel endLabel = new Label(codeStream);\r", "+\t\t\t\tcodeStream.goto_(endLabel);\r", "+\t\t\t\tcodeStream.decrStackSize(1);\r", "+\t\t\t\t// comparison is FALSE\r", "+\t\t\t\tfalseLabel.place();\r", "+\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\tendLabel.place();\r", "+\t\t\t}\r", "-\t\t\tLabel endLabel = new Label(codeStream);\r", "-\t\t\tcodeStream.goto_(endLabel);\r", "-\t\t\tcodeStream.decrStackSize(1);\r", "-\t\t\t// comparison is FALSE\r", "-\t\t\tcodeStream.iconst_0();\r", "-\t\t\tendLabel.place();\r", "-\t\t}\r", "-\t}\r", "+\t\t}\t\r", "+\t}\t\r"]}], "num": 34970}