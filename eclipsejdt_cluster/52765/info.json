{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10b609f10de79e35b43123e295ca4275", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26ae0980c82b047ae5b450eb660c88d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2548efb91bb743c25fd3bab3833473b467f314a0", "commitAfterChange": "f4a6a4aada4b614e2acc0db0bdcfb1edac95da6d", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 137, "signatureBeforeChange": "  \tprivate void findInterfacesMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementssStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \t \tprivate void findInterfacesMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementssStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["+\t", "+\tprivate void findInterfacesMethods(", "+\t\tchar[] selector,", "+\t\tTypeBinding[] typeArgTypes,", "+\t\tTypeBinding[] argTypes,", "+\t\tReferenceBinding receiverType,", "+\t\tReferenceBinding[] itsInterfaces,", "+\t\tScope scope,", "+\t\tObjectVector methodsFound,", "+\t\tboolean onlyStaticMethods,", "+\t\tboolean exactMatch,", "+\t\tInvocationSite invocationSite,", "+\t\tScope invocationScope,", "+\t\tboolean implicitCall,", "+\t\tboolean superCall,", "+\t\tboolean canBePrefixed,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementssStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems,", "+\t\tchar[] castedReceiver,", "+\t\tint receiverStart,", "+\t\tint receiverEnd) {", "+", "+\t\tif (selector == null)", "+\t\t\treturn;", "+", "+\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\t\tReferenceBinding[] interfacesToVisit = itsInterfaces;", "+\t\t\tint nextPosition = interfacesToVisit.length;", "+", "+\t\t\tfor (int i = 0; i < nextPosition; i++) {", "+\t\t\t\tReferenceBinding currentType = interfacesToVisit[i];", "+\t\t\t\tMethodBinding[] methods = currentType.availableMethods();", "+\t\t\t\tif(methods != null) {", "+\t\t\t\t\tfindLocalMethods(", "+\t\t\t\t\t\tselector,", "+\t\t\t\t\t\ttypeArgTypes,", "+\t\t\t\t\t\targTypes,", "+\t\t\t\t\t\tmethods,", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tmethodsFound,", "+\t\t\t\t\t\tonlyStaticMethods,", "+\t\t\t\t\t\texactMatch,", "+\t\t\t\t\t\treceiverType,", "+\t\t\t\t\t\tinvocationSite,", "+\t\t\t\t\t\tinvocationScope,", "+\t\t\t\t\t\timplicitCall,", "+\t\t\t\t\t\tsuperCall,", "+\t\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\t\tmissingElements,", "+\t\t\t\t\t\tmissingElementssStarts,", "+\t\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\t\tmissingElementsHaveProblems,", "+\t\t\t\t\t\tcastedReceiver,", "+\t\t\t\t\t\treceiverStart,", "+\t\t\t\t\t\treceiverEnd);", "+\t\t\t\t}", "+", "+\t\t\t\titsInterfaces = currentType.superInterfaces();", "+\t\t\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\t\t\t\tint itsLength = itsInterfaces.length;", "+\t\t\t\t\tif (nextPosition + itsLength >= interfacesToVisit.length)", "+\t\t\t\t\t\tSystem.arraycopy(interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[nextPosition + itsLength + 5], 0, nextPosition);", "+\t\t\t\t\tnextInterface : for (int a = 0; a < itsLength; a++) {", "+\t\t\t\t\t\tReferenceBinding next = itsInterfaces[a];", "+\t\t\t\t\t\tfor (int b = 0; b < nextPosition; b++)", "+\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\tinterfacesToVisit[nextPosition++] = next;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "-", "-\tprivate void findInterfacesMethods(", "-\t\tchar[] selector,", "-\t\tTypeBinding[] typeArgTypes,", "-\t\tTypeBinding[] argTypes,", "-\t\tReferenceBinding receiverType,", "-\t\tReferenceBinding[] itsInterfaces,", "-\t\tScope scope,", "-\t\tObjectVector methodsFound,", "-\t\tboolean onlyStaticMethods,", "-\t\tboolean exactMatch,", "-\t\tboolean isCompletingDeclaration,", "-\t\tInvocationSite invocationSite,", "-\t\tScope invocationScope,", "-\t\tboolean implicitCall,", "-\t\tboolean superCall,", "-\t\tboolean canBePrefixed,", "-\t\tBinding[] missingElements,", "-\t\tint[] missingElementssStarts,", "-\t\tint[] missingElementsEnds,", "-\t\tboolean missingElementsHaveProblems,", "-\t\tchar[] castedReceiver,", "-\t\tint receiverStart,", "-\t\tint receiverEnd) {", "-", "-\t\tif (selector == null)", "-\t\t\treturn;", "-", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "-\t\t\tReferenceBinding[] interfacesToVisit = itsInterfaces;", "-\t\t\tint nextPosition = interfacesToVisit.length;", "-", "-\t\t\tfor (int i = 0; i < nextPosition; i++) {", "-\t\t\t\tReferenceBinding currentType = interfacesToVisit[i];", "-\t\t\t\tMethodBinding[] methods = currentType.availableMethods();", "-\t\t\t\tif(methods != null) {", "-\t\t\t\t\tif(isCompletingDeclaration) {", "-\t\t\t\t\t\tfindLocalMethodDeclarations(", "-\t\t\t\t\t\t\tselector,", "-\t\t\t\t\t\t\tmethods,", "-\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\t\treceiverType);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfindLocalMethods(", "-\t\t\t\t\t\t\tselector,", "-\t\t\t\t\t\t\ttypeArgTypes,", "-\t\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\t\tmethods,", "-\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\t\tonlyStaticMethods,", "-\t\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\t\timplicitCall,", "-\t\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\t\tcanBePrefixed,", "-\t\t\t\t\t\t\tmissingElements,", "-\t\t\t\t\t\t\tmissingElementssStarts,", "-\t\t\t\t\t\t\tmissingElementsEnds,", "-\t\t\t\t\t\t\tmissingElementsHaveProblems,", "-\t\t\t\t\t\t\tcastedReceiver,", "-\t\t\t\t\t\t\treceiverStart,", "-\t\t\t\t\t\t\treceiverEnd);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-", "-\t\t\t\titsInterfaces = currentType.superInterfaces();", "-\t\t\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) {", "-\t\t\t\t\tint itsLength = itsInterfaces.length;", "-\t\t\t\t\tif (nextPosition + itsLength >= interfacesToVisit.length)", "-\t\t\t\t\t\tSystem.arraycopy(interfacesToVisit, 0, interfacesToVisit = new ReferenceBinding[nextPosition + itsLength + 5], 0, nextPosition);", "-\t\t\t\t\tnextInterface : for (int a = 0; a < itsLength; a++) {", "-\t\t\t\t\t\tReferenceBinding next = itsInterfaces[a];", "-\t\t\t\t\t\tfor (int b = 0; b < nextPosition; b++)", "-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "-\t\t\t\t\t\tinterfacesToVisit[nextPosition++] = next;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa0c078a7fb05a1eeb84daf9d861a24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2548efb91bb743c25fd3bab3833473b467f314a0", "commitAfterChange": "f4a6a4aada4b614e2acc0db0bdcfb1edac95da6d", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 161, "signatureBeforeChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": "  \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-", "-\tprivate void findMethods(", "-\t\tTypeBinding[] typeArgTypes,", "-\t\tTypeBinding[] argTypes,", "-\t\tboolean onlyStaticMethods,", "-\t\tboolean exactMatch,", "-\t\tboolean isCompletingDeclaration,", "-\t\tInvocationSite invocationSite,", "-\t\tScope invocationScope,", "-\t\tboolean implicitCall,", "-\t\tboolean superCall,", "-\t\tboolean canBePrefixed,", "-\t\tboolean missingElementsHaveProblems,", "-\t\tchar[] castedReceiver,", "-\t\tint receiverStart,", "-\t\tint receiverEnd) {", "-\t\tboolean notInJavadoc = this.assistNodeInJavadoc == 0;", "-\t\tif (selector == null && notInJavadoc) {", "-\t\tif(isCompletingDeclaration) {", "-\t\t\tMethodBinding[] methods = receiverType.availableMethods();", "-\t\t\tif (methods != null){", "-\t\t\t\tfor (int i = 0; i < methods.length; i++) {", "-\t\t\t\t\tif(!methods[i].isDefaultAbstract()) {", "-\t\t\t\t\t\tmethodsFound.add(methods[i]);", "-\t\t\t\t\t}", "-\t\tif (notInJavadoc) {", "-\t\t\tif (receiverType.isInterface()) {", "-\t\t\t\tif (isCompletingDeclaration) {", "-\t\t\t\t\tfindInterfacesMethods(", "-\t\t\t\t\t\tselector,", "-\t\t\t\t\t\ttypeArgTypes,", "-\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\tcurrentType.superInterfaces(),", "-\t\t\t\t\t\tscope,", "-\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\tonlyStaticMethods,", "-\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\tisCompletingDeclaration,", "-\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\timplicitCall,", "-\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\tcanBePrefixed,", "-\t\t\t\t\t\tmissingElements,", "-\t\t\t\t\t\tmissingElementsStarts,", "-\t\t\t\t\t\tmissingElementsEnds,", "-\t\t\t\t\t\tmissingElementsHaveProblems,", "-\t\t\t\t\t\tcastedReceiver,", "-\t\t\t\t\t\treceiverStart,", "-\t\t\t\t\t\treceiverEnd);", "-\t\t\t\t} else {", "-\t\t\t\t\tfindInterfacesMethods(", "-\t\t\t\t\t\tselector,", "-\t\t\t\t\t\ttypeArgTypes,", "-\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\tnew ReferenceBinding[]{currentType},", "-\t\t\t\t\t\tscope,", "-\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\tonlyStaticMethods,", "-\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\tisCompletingDeclaration,", "-\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\timplicitCall,", "-\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\tcanBePrefixed,", "-\t\t\t\t\t\tmissingElements,", "-\t\t\t\t\t\tmissingElementsStarts,", "-\t\t\t\t\t\tmissingElementsEnds,", "-\t\t\t\t\t\tmissingElementsHaveProblems,", "-\t\t\t\t\t\tcastedReceiver,", "-\t\t\t\t\t\treceiverStart,", "-\t\t\t\t\t\treceiverEnd);", "-\t\t\t\t}", "-", "-\t\t\t\tcurrentType = scope.getJavaLangObject();", "-\t\t\t} else {", "-\t\t\t\tif (isCompletingDeclaration){", "-\t\t\t\t\tfindInterfacesMethods(", "-\t\t\t\t\t\tselector,", "-\t\t\t\t\t\ttypeArgTypes,", "-\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\tcurrentType.superInterfaces(),", "-\t\t\t\t\t\tscope,", "-\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\tonlyStaticMethods,", "-\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\tisCompletingDeclaration,", "-\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\timplicitCall,", "-\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\tcanBePrefixed,", "-\t\t\t\t\t\tmissingElements,", "-\t\t\t\t\t\tmissingElementsStarts,", "-\t\t\t\t\t\tmissingElementsEnds,", "-\t\t\t\t\t\tmissingElementsHaveProblems,", "-\t\t\t\t\t\tcastedReceiver,", "-\t\t\t\t\t\treceiverStart,", "-\t\t\t\t\t\treceiverEnd);", "-", "-\t\t\t\t\tcurrentType = receiverType.superclass();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t\tif (isCompletingDeclaration){", "-\t\t\t\t\tfindLocalMethodDeclarations(", "-\t\t\t\t\t\tselector,", "-\t\t\t\t\t\tmethods,", "-\t\t\t\t\t\tscope,", "-\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\treceiverType);", "-\t\t\t\t} else{", "-\t\t\t\t\tfindLocalMethods(", "-\t\t\t\t\t\tselector,", "-\t\t\t\t\t\ttypeArgTypes,", "-\t\t\t\t\t\targTypes,", "-\t\t\t\t\t\tmethods,", "-\t\t\t\t\t\tscope,", "-\t\t\t\t\t\tmethodsFound,", "-\t\t\t\t\t\tonlyStaticMethods,", "-\t\t\t\t\t\texactMatch,", "-\t\t\t\t\t\treceiverType,", "-\t\t\t\t\t\tinvocationSite,", "-\t\t\t\t\t\tinvocationScope,", "-\t\t\t\t\t\timplicitCall,", "-\t\t\t\t\t\tsuperCall,", "-\t\t\t\t\t\tcanBePrefixed,", "-\t\t\t\t\t\tmissingElements,", "-\t\t\t\t\t\tmissingElementsStarts,", "-\t\t\t\t\t\tmissingElementsEnds,", "-\t\t\t\t\t\tmissingElementsHaveProblems,", "-\t\t\t\t\t\tcastedReceiver,", "-\t\t\t\t\t\treceiverStart,", "-\t\t\t\t\t\treceiverEnd);", "-\t\t\t\t}", "-\t\t\t\tif (superInterfaces != null && currentType.isIntersectionType()) {", "-\t\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "-\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceEnd());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tfindInterfacesMethods(", "-\t\t\t\t\ttypeArgTypes,", "-\t\t\t\t\targTypes,", "-\t\t\t\t\tonlyStaticMethods,", "-\t\t\t\t\texactMatch,", "-\t\t\t\t\tisCompletingDeclaration,", "-\t\t\t\t\tinvocationSite,", "-\t\t\t\t\tinvocationScope,", "-\t\t\t\t\timplicitCall,", "-\t\t\t\t\tsuperCall,", "-\t\t\t\t\tcanBePrefixed,", "-\t\t\t\t\tmissingElementsHaveProblems,", "-\t\t\t\t\tcastedReceiver,", "-\t\t\t\t\treceiverStart,", "-\t\t\t\t\treceiverEnd);", "+\tprivate void findMethods(", "+\t\tchar[] selector,", "+\t\tTypeBinding[] typeArgTypes,", "+\t\tTypeBinding[] argTypes,", "+\t\tReferenceBinding receiverType,", "+\t\tScope scope,", "+\t\tObjectVector methodsFound,", "+\t\tboolean onlyStaticMethods,", "+\t\tboolean exactMatch,", "+\t\tInvocationSite invocationSite,", "+\t\tScope invocationScope,", "+\t\tboolean implicitCall,", "+\t\tboolean superCall,", "+\t\tboolean canBePrefixed,", "+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems,", "+\t\tchar[] castedReceiver,", "+\t\tint receiverStart,", "+\t\tint receiverEnd) {", "+", "+\t\tboolean notInJavadoc = this.assistNodeInJavadoc == 0;", "+\t\tif (selector == null && notInJavadoc) {", "+\t\t\treturn;", "+\t\t}", "+", "+\t\tReferenceBinding currentType = receiverType;", "+\t\tif (notInJavadoc) {", "+\t\t\tif (receiverType.isInterface()) {", "+\t\t\t\tfindInterfacesMethods(", "+\t\t\t\t\tselector,", "+\t\t\t\t\ttypeArgTypes,", "+\t\t\t\t\targTypes,", "+\t\t\t\t\treceiverType,", "+\t\t\t\t\tnew ReferenceBinding[]{currentType},", "+\t\t\t\t\tscope,", "+\t\t\t\t\tmethodsFound,", "+\t\t\t\t\tonlyStaticMethods,", "+\t\t\t\t\texactMatch,", "+\t\t\t\t\tinvocationSite,", "+\t\t\t\t\tinvocationScope,", "+\t\t\t\t\timplicitCall,", "+\t\t\t\t\tsuperCall,", "+\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\tmissingElementsHaveProblems,", "+\t\t\t\t\tcastedReceiver,", "+\t\t\t\t\treceiverStart,", "+\t\t\t\t\treceiverEnd);", "+", "+\t\t\t\tcurrentType = scope.getJavaLangObject();", "+\t\t\t}", "+\t\t}", "+\t\tboolean hasPotentialDefaultAbstractMethods = true;", "+\t\twhile (currentType != null) {", "+", "+\t\t\tMethodBinding[] methods = currentType.availableMethods();", "+\t\t\tif (methods != null) {", "+\t\t\t\tfindLocalMethods(", "+\t\t\t\t\tselector,", "+\t\t\t\t\ttypeArgTypes,", "+\t\t\t\t\targTypes,", "+\t\t\t\t\tmethods,", "+\t\t\t\t\tscope,", "+\t\t\t\t\tmethodsFound,", "+\t\t\t\t\tonlyStaticMethods,", "+\t\t\t\t\texactMatch,", "+\t\t\t\t\treceiverType,", "+\t\t\t\t\tinvocationSite,", "+\t\t\t\t\tinvocationScope,", "+\t\t\t\t\timplicitCall,", "+\t\t\t\t\tsuperCall,", "+\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\tmissingElementsHaveProblems,", "+\t\t\t\t\tcastedReceiver,", "+\t\t\t\t\treceiverStart,", "+\t\t\t\t\treceiverEnd);", "+\t\t\t}", "+", "+\t\t\tif (hasPotentialDefaultAbstractMethods &&", "+\t\t\t\t\t(currentType.isAbstract() ||", "+\t\t\t\t\t\t\tcurrentType.isTypeVariable() ||", "+\t\t\t\t\t\t\tcurrentType.isIntersectionType() ||", "+\t\t\t\t\t\t\tcurrentType.isEnum())){", "+", "+\t\t\t\tReferenceBinding[] superInterfaces = currentType.superInterfaces();", "+\t\t\t\tif (superInterfaces != null && currentType.isIntersectionType()) {", "+\t\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "+\t\t\t\t\t\tsuperInterfaces[i] = (ReferenceBinding)superInterfaces[i].capture(invocationScope, invocationSite.sourceEnd());", "+\t\t\t\t\t}", "+\t\t\t\t}", "+", "+\t\t\t\tfindInterfacesMethods(", "+\t\t\t\t\tselector,", "+\t\t\t\t\ttypeArgTypes,", "+\t\t\t\t\targTypes,", "+\t\t\t\t\treceiverType,", "+\t\t\t\t\tsuperInterfaces,", "+\t\t\t\t\tscope,", "+\t\t\t\t\tmethodsFound,", "+\t\t\t\t\tonlyStaticMethods,", "+\t\t\t\t\texactMatch,", "+\t\t\t\t\tinvocationSite,", "+\t\t\t\t\tinvocationScope,", "+\t\t\t\t\timplicitCall,", "+\t\t\t\t\tsuperCall,", "+\t\t\t\t\tcanBePrefixed,", "+\t\t\t\t\tmissingElements,", "+\t\t\t\t\tmissingElementsStarts,", "+\t\t\t\t\tmissingElementsEnds,", "+\t\t\t\t\tmissingElementsHaveProblems,", "+\t\t\t\t\tcastedReceiver,", "+\t\t\t\t\treceiverStart,", "+\t\t\t\t\treceiverEnd);", "+\t\t\t} else {", "+\t\t\t\thasPotentialDefaultAbstractMethods = false;", "+\t\t\t}", "+\t\t\tcurrentType = currentType.superclass();", "+\t\t}", "+\t}"]}], "num": 52765}