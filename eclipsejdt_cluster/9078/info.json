{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "983bfbb196219e50f26e08b438031e01", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3947aa98e8b20aa30df16fd365b1e875", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InitializerTests.java", "commitBeforeChange": "61f51d750bc87459698cf44affd30900774c376c", "commitAfterChange": "a2ca4d1dca2fbcc72eef5c4d5e1d2d9929abeff3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testVariableInitializer3() throws CoreException", "signatureAfterChange": " public void testVariableInitializer3() throws CoreException", "diff": ["-\t\t// simulate state on startup", "-\t\tVariablesInitializer.reset();", "+\t\t// simulate state on startup (flush variables, and preserve their previous values)", "+\t\tJavaModelManager.PreviousSessionVariables = JavaModelManager.Variables;", "+\t\tJavaModelManager.Variables = new HashMap(5);", "-\t\tVariablesInitializer.setInitializer(new DefaultVariableInitializer(new String[] {", "-\t\t\t\"TEST_LIB\", \"/P1/lib.jar\",", "-\t\t\t\"TEST_SRC\", \"/P1/src.zip\",", "-\t\t\t\"TEST_ROOT\", \"src\",", "-\t\t}));", "+\t\t//JavaModelManager.CP_RESOLVE_VERBOSE=true;\t\t", "-\t\t\t// TODO: Change to \"\" when startup behavior is fixed", "-\t\t\t\"P2[*]: {CHILDREN}\\n\" + ", "-\t\t\t\"\tlib.jar[*]: {ADDED TO CLASSPATH}\"", "+\t\t\t\"\"", "+\t\t//JavaModelManager.CP_RESOLVE_VERBOSE=false;\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4970850b07a399aea9a730277c85c9f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "4b460199498c48cda44ce10125aa5901a10bff62", "commitAfterChange": "ccd12469d7fc21a8e1a0a597451a059df56002ad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic EclipseCompiler(PrintWriter out, PrintWriter err, boolean systemExitWhenFinished)", "signatureAfterChange": "  \tpublic EclipseCompiler()", "diff": ["-", "-\tpublic EclipseCompiler(PrintWriter out, PrintWriter err, boolean systemExitWhenFinished) {", "-\t\tsuper(out, err, systemExitWhenFinished);", "-\t}", "+\t\tthis.threadCache = new WeakHashMap<Thread, EclipseCompilerImpl>();"]}], "num": 9078}