{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7146c65e4d385f560b1e89d246c50a2d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05034d272c88c81493b905c263fe86c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ReferenceCollection.java", "commitBeforeChange": "4aa9bc6aa2cb666fb0721f9b95f7c7e969829a0c", "commitAfterChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "signatureAfterChange": "\r \r boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "diff": ["-\tfor (int i = 0, a = simpleNames.length; i < a; i++) {\r", "-\t\tchar[] simpleName = simpleNames[i];\r", "-\t\tfor (int j = 0, b = simpleNameReferences.length; j < b; j++) {\r", "-\t\t\tif (simpleName == simpleNameReferences[j]) {\r", "-\t\t\t\tfor (int k = 0, c = qualifiedNames.length; k < c; k++) {\r", "-\t\t\t\t\tchar[][] qualifiedName = qualifiedNames[k];\r", "-\t\t\t\t\tfor (int l = 0, d = qualifiedReferences.length; l < d; l++) {\r", "-\t\t\t\t\t\tif (qualifiedName == qualifiedReferences[l]) {\r", "-\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\t\tSystem.out.println(\"  found match with \" //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\t+ new String(simpleName) + \" in \" + CharOperation.toString(qualifiedName)); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\treturn true;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\treturn false;\r", "+\t// if either collection of names is null, it means it contained a well known name so we know it already has a match\r", "+\tif (simpleNames == null) {\r", "+\t\tif (JavaBuilder.DEBUG) System.out.println(\"  found well known match\"); //$NON-NLS-1$\r", "+\t\treturn true;\r", "+\t}\r", "+\tfor (int i = 0, l = simpleNames.length; i < l; i++) {\r", "+\t\tif (includes(simpleNames[i])) {\r", "+\t\t\tif (qualifiedNames == null) {\r", "+\t\t\t\tif (JavaBuilder.DEBUG) System.out.println(\"  found match in well known package to \" + new String(simpleNames[i])); //$NON-NLS-1$\r", "+\t\t\t\treturn true;\r", "+\t\t\tfor (int j = 0, m = qualifiedNames.length; j < m; j++) {\r", "+\t\t\t\tchar[][] qualifiedName = qualifiedNames[j];\r", "+\t\t\t\tif (qualifiedName.length == 1 ? includes(qualifiedName[0]) : includes(qualifiedName)) {\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"  found match in \" + CharOperation.toString(qualifiedName) //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t+ \" to \" + new String(simpleNames[i])); //$NON-NLS-1$\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1379e3bfc32f41d2def570187decb11d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ReferenceCollection.java", "commitBeforeChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "commitAfterChange": "9ce2d699e0d21b200d57773c8cb35525d3ffa98d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "signatureAfterChange": "\r \r boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "diff": ["-\t}\r", "-\tfor (int i = 0, l = simpleNames.length; i < l; i++) {\r", "-\t\tif (includes(simpleNames[i])) {\r", "-\t\t\tif (qualifiedNames == null) {\r", "+\t} else if (qualifiedNames == null) {\r", "+\t\tfor (int i = 0, l = simpleNames.length; i < l; i++) {\r", "+\t\t\tif (includes(simpleNames[i])) {\r", "-\t\t\tfor (int j = 0, m = qualifiedNames.length; j < m; j++) {\r", "-\t\t\t\tchar[][] qualifiedName = qualifiedNames[j];\r", "-\t\t\t\tif (qualifiedName.length == 1 ? includes(qualifiedName[0]) : includes(qualifiedName)) {\r", "-\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\tSystem.out.println(\"  found match in \" + CharOperation.toString(qualifiedName) //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t+ \" to \" + new String(simpleNames[i])); //$NON-NLS-1$\r", "-\t\t\t\t\treturn true;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tfor (int i = 0, l = simpleNames.length; i < l; i++) {\r", "+\t\t\tif (includes(simpleNames[i])) {\r", "+\t\t\t\tfor (int j = 0, m = qualifiedNames.length; j < m; j++) {\r", "+\t\t\t\t\tchar[][] qualifiedName = qualifiedNames[j];\r", "+\t\t\t\t\tif (qualifiedName.length == 1 ? includes(qualifiedName[0]) : includes(qualifiedName)) {\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"  found match in \" + CharOperation.toString(qualifiedName) //$NON-NLS-1$\r", "+\t\t\t\t\t\t\t\t+ \" to \" + new String(simpleNames[i])); //$NON-NLS-1$\r", "+\t\t\t\t\t\treturn true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\treturn false;\r", "-\t\t\treturn false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2bf8991b22208e48627b01af636eaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ReferenceCollection.java", "commitBeforeChange": "b4c2326bdb14a7f730ed9986567b454f5f0cd0c5", "commitAfterChange": "7e1c1ec5b1f6c711f6c7308f04d5e852eb81c57a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "signatureAfterChange": "\r \r boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "diff": ["-\tif (simpleNames == null) {\r", "-\t\tif (JavaBuilder.DEBUG) System.out.println(\"  found well known match\"); //$NON-NLS-1$\r", "-\t\treturn true;\r", "-\t} else if (qualifiedNames == null) {\r", "-\t\tfor (int i = 0, l = simpleNames.length; i < l; i++) {\r", "-\t\t\tif (includes(simpleNames[i])) {\r", "-\t\t\t\tif (JavaBuilder.DEBUG) System.out.println(\"  found match in well known package to \" + new String(simpleNames[i])); //$NON-NLS-1$\r", "-\t\t\t\treturn true;\r", "+\tif (simpleNames == null || qualifiedNames == null) {\r", "+\t\tif (simpleNames == null && qualifiedNames == null) {\r", "+\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\tSystem.out.println(\"  found well known match\"); //$NON-NLS-1$\r", "+\t\t\treturn true;\r", "+\t\t} else if (qualifiedNames == null) {\r", "+\t\t\tfor (int i = 0, l = simpleNames.length; i < l; i++) {\r", "+\t\t\t\tif (includes(simpleNames[i])) {\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"  found match in well known package to \" + new String(simpleNames[i])); //$NON-NLS-1$\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tfor (int i = 0, l = qualifiedNames.length; i < l; i++) {\r", "+\t\t\t\tchar[][] qualifiedName = qualifiedNames[i];\r", "+\t\t\t\tif (qualifiedName.length == 1 ? includes(qualifiedName[0]) : includes(qualifiedName)) {\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"  found well known match in \" + CharOperation.toString(qualifiedName)); //$NON-NLS-1$\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4c01749b3a79e960ff33349d958025", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ReferenceCollection.java", "commitBeforeChange": "c4112ab397da10b85cbb2a3f081c4c91ed7c7975", "commitAfterChange": "2077df1da6fa132fd5beb7d042b102e760cf8cbf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public boolean includes(char[][][] qualifiedNames, char[][] simpleNames)", "signatureAfterChange": "  public boolean includes(char[][][] qualifiedNames, char[][] simpleNames, char[][] rootNames)", "diff": ["-public boolean includes(char[][][] qualifiedNames, char[][] simpleNames) {", "+public boolean includes(char[][][] qualifiedNames, char[][] simpleNames, char[][] rootNames) {", "+\tif (rootNames != null) {", "+\t\tboolean foundRoot = false;", "+\t\tfor (int i = 0, l = rootNames.length; !foundRoot && i < l; i++) {", "+\t\t\tfoundRoot = insideRoot(rootNames[i]);", "+\t\t\tif (JavaBuilder.DEBUG && foundRoot)", "+\t\t\t\tSystem.out.println(\"Found match in root \" + new String(rootNames[i])); //$NON-NLS-1$", "+\t\t}", "+\t\tif (!foundRoot)", "+\t\t\treturn false;", "+\t}", "-\t} else {", "-\t\tfor (int i = 0, l = simpleNames.length; i < l; i++) {", "+\t\treturn false;", "+\t}", "+", "+\tint sLength = simpleNames.length;", "+\tint qLength = qualifiedNames.length;", "+\tif (sLength <= qLength) {", "+\t\tfor (int i = 0; i < sLength; i++) {", "-\t\t\t\tfor (int j = 0, m = qualifiedNames.length; j < m; j++) {", "+\t\t\t\tfor (int j = 0; j < qLength; j++) {", "+\t} else {", "+\t\tfor (int i = 0; i < qLength; i++) {", "+\t\t\tchar[][] qualifiedName = qualifiedNames[i];", "+\t\t\tif (qualifiedName.length == 1 ? includes(qualifiedName[0]) : includes(qualifiedName)) {", "+\t\t\t\tfor (int j = 0; j < sLength; j++) {", "+\t\t\t\t\tif (includes(simpleNames[j])) {", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\t\tSystem.out.println(\"Found match in \" + CharOperation.toString(qualifiedName) //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t+ \" to \" + new String(simpleNames[j])); //$NON-NLS-1$", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\treturn false;", "+}"]}], "num": 72967}