{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4eaa824193ce298eedcffeb2ed5619c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a34870529400c172959044df244740f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "4ce47574d95f211bec6cf02737b4ec30e386f5b1", "commitAfterChange": "6c173db4ca33e9b5b355fdac19466f82485aafe6", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 294, "signatureBeforeChange": " \tpublic void test0293() throws JavaModelException", "signatureAfterChange": " \tpublic void test0293() throws JavaModelException", "diff": ["-\t\t\t\t\"{\\r\\n\" +", "-\t\t\t\t\"\t\t\tpublic void run() {\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t/*]*/foo();/*[*/\\r\\n\" +", "-\t\t\t\t\"\t\t\t}\\r\\n\" +", "+\t\t\t\t\"{\\n\" +", "+\t\t\t\t\"\t\t\tpublic void run() {\\n\" +", "+\t\t\t\t\"\t\t\t\t/*]*/foo();/*[*/\\n\" +", "+\t\t\t\t\"\t\t\t}\\n\" +", "-\t\t\t\t\"run= new Runnable() {\\r\\n\" +", "-\t\t\t\t\"\t\t\tpublic void run() {\\r\\n\" +", "-\t\t\t\t\"\t\t\t\t/*]*/foo();/*[*/\\r\\n\" +", "-\t\t\t\t\"\t\t\t}\\r\\n\" +", "+\t\t\t\t\"run= new Runnable() {\\n\" +", "+\t\t\t\t\"\t\t\tpublic void run() {\\n\" +", "+\t\t\t\t\"\t\t\t\t/*]*/foo();/*[*/\\n\" +", "+\t\t\t\t\"\t\t\t}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e370b1db4ceb10cf523cea9933de72aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OperatorExpression.java", "commitBeforeChange": "8e33f97ee39e8610c3480bf6c8dc09b52195779b", "commitAfterChange": "fe0ff13a85af207787c3e61a795f2b7238947d6c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static final String generateTableTestCase()", "signatureAfterChange": "  \tpublic static final String generateTableTestCase()", "diff": ["-\t\t\t\t\tcase T_boolean \t: return \"true\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_byte\t\t: return \"((byte) 3)\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_char\t\t: return \"'A'\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_double\t: return \"300.0d\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_float\t: return \"100.0f\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_int\t\t: return \"1\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_long\t\t: return \"7L\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_String\t: return \"\\\"hello-world\\\"\" ; //$NON-NLS-1$", "+\t\t\t\t\tcase T_boolean \t: return \"true\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_byte\t\t: return \"((byte) 3)\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_char\t\t: return \"'A'\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_double\t: return \"300.0d\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_float\t: return \"100.0f\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_int\t\t: return \"1\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_long\t\t: return \"7L\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_String\t: return \"\\\"hello-world\\\"\"; //$NON-NLS-1$", "-\t\t\t\t\tcase T_boolean \t: return \"z\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_byte\t\t: return \"b\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_char\t\t: return \"c\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_double\t: return \"d\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_float\t: return \"f\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_int\t\t: return \"i\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_long\t\t: return \"l\" ; //$NON-NLS-1$", "-\t\t\t\t\tcase T_String\t: return \"str\" ; //$NON-NLS-1$", "+\t\t\t\t\tcase T_boolean \t: return \"z\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_byte\t\t: return \"b\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_char\t\t: return \"c\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_double\t: return \"d\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_float\t: return \"f\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_int\t\t: return \"i\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_long\t\t: return \"l\"; //$NON-NLS-1$", "+\t\t\t\t\tcase T_String\t: return \"str\"; //$NON-NLS-1$", "-\t\t\t\t\tcase LESS :\t\t\treturn \"<\";\t}; //$NON-NLS-1$", "+\t\t\t\t\tcase LESS :\t\t\treturn \"<\";\t} //$NON-NLS-1$", "-\t\tString s ;", "+\t\tString s;", "-\t\t\t\"\\t\\tString str0 ;\\t String str\\t= \"+decode.constant(T_String)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"\\t\\tint i0 ;\\t int i\\t= \"+decode.constant(T_int)+\" ;\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tString str0;\\t String str\\t= \"+decode.constant(T_String)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tint i0;\\t int i\\t= \"+decode.constant(T_int)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"\\t\\tchar c0; \\t char  c\\t= \"+decode.constant(T_char)+\" ;\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"\\t\\tfloat f0; \\t float f\\t= \"+decode.constant(T_float)+\" ;\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"\\t\\tdouble d0;\\t double d\\t= \"+decode.constant(T_double)+\" ;\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tchar c0; \\t char  c\\t= \"+decode.constant(T_char)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tfloat f0; \\t float f\\t= \"+decode.constant(T_float)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tdouble d0;\\t double d\\t= \"+decode.constant(T_double)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"\\t\\tlong l0; \\t long l\\t= \"+decode.constant(T_long)+\" ;\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"\\t\\tObject obj0; \\t Object obj\\t= \"+decode.constant(T_Object)+\" ;\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tlong l0; \\t long l\\t= \"+decode.constant(T_long)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"\\t\\tObject obj0; \\t Object obj\\t= \"+decode.constant(T_Object)+\";\\n\"+ //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tfor (int i=0; i < operators.length ; i++)", "+\t\tfor (int i=0; i < operators.length; i++)", "-\t\t\t\t\tString test = result == T_String ? \".equals(\" : \" != (\" ; //$NON-NLS-2$ //$NON-NLS-1$", "+\t\t\t\t\tString test = result == T_String ? \".equals(\" : \" != (\"; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\treturn s += \"\\n\\t\\tSystem.out.println(\\\"binary tables test : done\\\");}\" ; //$NON-NLS-1$", "+\t\treturn s += \"\\n\\t\\tSystem.out.println(\\\"binary tables test : done\\\");}\"; //$NON-NLS-1$"]}], "num": 56946}