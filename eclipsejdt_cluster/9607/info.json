{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54285dbef4debc4561e5001f1ee6181f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2806757035b0aa01ab3bfb164e3de928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\tif ((field.bits & AstNode.HasLocalTypeMASK) != 0) {", "+\tif ((field.bits & ASTNode.HasLocalTypeMASK) != 0) {", "-\t\tAstNode[] nodes = nodeSet.matchingNodes(field.declarationSourceStart, field.declarationSourceEnd);", "+\t\tASTNode[] nodes = nodeSet.matchingNodes(field.declarationSourceStart, field.declarationSourceEnd);", "-\t\t\t\t\tAstNode node = nodes[i];", "+\t\t\t\t\tASTNode node = nodes[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d79f6e6b61cfad4f0b333b5db498420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\tif ((method.bits & AstNode.HasLocalTypeMASK) != 0) {", "+\tif ((method.bits & ASTNode.HasLocalTypeMASK) != 0) {", "-\t\tAstNode[] nodes = nodeSet.matchingNodes(method.declarationSourceStart, method.declarationSourceEnd);", "+\t\tASTNode[] nodes = nodeSet.matchingNodes(method.declarationSourceStart, method.declarationSourceEnd);", "-\t\t\t\t\t\tAstNode node = nodes[i];", "+\t\t\t\t\t\tASTNode node = nodes[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c86ce80e06e409b5ddb917f44ebd4db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "425360de9982cb851072283681a98ff148472fdd", "commitAfterChange": "da52556acc57ef6517941f460f831ee862406473", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\tASTNode[] nodes = nodeSet.matchingNodes(field.declarationSourceStart, field.declarationSourceEnd);", "+\t\t// limit scan to end part position for multiple fields declaration (see bug 73112)", "+\t\tint end = field.endPart2Position==0 ? field.declarationSourceEnd : field.endPart2Position;", "+\t\tASTNode[] nodes = nodeSet.matchingNodes(field.declarationSourceStart, end);"]}], "num": 9607}