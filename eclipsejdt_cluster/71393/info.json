{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ba85e190e02631a892cd58d5aa8c8ff", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4abc617614b19baade5d4f7574cc3220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "signatureAfterChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "diff": ["-\tif (this == targetType) return false;", "+\tif (this == targetType)", "+\t\treturn false;", "-\tif (!(targetType instanceof ReferenceBinding)) ", "+\tif (!(targetType instanceof ReferenceBinding))", "-\tif (!(currentType instanceof ReferenceBinding))", "+\tTypeBinding match = currentType.findSuperTypeWithSameErasure(targetType);", "+\tif (!(match instanceof ReferenceBinding))", "-\t", "-\tReferenceBinding compatible = ((ReferenceBinding)currentType).findSuperTypeWithSameErasure(targetType);", "-\tif (compatible == null) ", "-\t\treturn false;", "-", "+\tReferenceBinding compatible = (ReferenceBinding) match;", "-\t\tif (targetType.isBoundParameterizedType()) return true;", "-", "-\t\tif (compatible.isStatic()) break;", "-\t\tif ((compatible = compatible.enclosingType()) == null) break;", "-\t\tif ((targetType = targetType.enclosingType()) == null) break;", "+\t\tif (targetType.isBoundParameterizedType())", "+\t\t\treturn true;", "+\t\tif (compatible.isStatic())", "+\t\t\tbreak;", "+\t\tif ((compatible = compatible.enclosingType()) == null)", "+\t\t\tbreak;", "+\t\tif ((targetType = targetType.enclosingType()) == null)", "+\t\t\tbreak;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858ea87f4cef43adb34840000bec2813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (!areTypesCastCompatible(scope, checkType, expressionType)) {", "-\t\t\tscope.problemReporter().notCompatibleTypesError(this, expressionType, checkType);", "-\t\t\treturn null;", "+\t\tboolean necessary = checkCastTypesCompatibility(scope, checkType, expressionType);", "+\t\tif (!necessary) {", "+\t\t\tscope.problemReporter().unnecessaryInstanceof(this, checkType);", "-\t\tthis.resolvedType = BooleanBinding;", "-\t\treturn BooleanBinding;", "+\t\treturn this.resolvedType = BooleanBinding;"]}], "num": 71393}