{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e48383ab953815af678027e240e8890", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40980adea15e96242650b016ca306843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " \tpublic void test0183()", "signatureAfterChange": " \tpublic void test0183()", "diff": ["-\t\t\t\"3. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tObject a2 = (Hashtable) o;\\n\" + ", "+\t\t\t\"\t             ^^^^^^^^^\\n\" + ", "+\t\t\t\"Hashtable is a raw type. References to generic type Hashtable<K,V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 18)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 22)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 22)\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 24)\\n\" + ", "-\t\t\t\"10. WARNING in X.java (at line 27)\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 27)\\n\" + ", "-\t\t\t\"11. WARNING in X.java (at line 27)\\n\" + ", "+\t\t\t\"12. WARNING in X.java (at line 27)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3133ba20611970b34bc7be6745220e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void test022()", "signatureAfterChange": " \tpublic void test022()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return;", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"public class X<T extends Object> {\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"class Y<V extends String> extends X<V> {\\n\" +", "-\t\t\t\"  public <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "-\t\t\t\"    return new Y<W>();\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"  public <U extends Object> X<U> make(Class<U> clazz) {\\n\" +", "-\t\t\t\"    return new X<U>();\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"  public static void main(String[] args) throws Exception {\\n\" +", "-\t\t\t\"    Y y = new Y();\\n\" +", "-\t\t\t\"    y.make(String.class);\\n\" +", "-\t\t\t\"    y.make(getClazz());\\n\" +", "-\t\t\t\"    y.make(getClazz().newInstance().getClass());\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"  public static Class getClazz() {\\n\" +", "-\t\t\t\"    return String.class;\\n\" +", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"}\"", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tclass Y<V extends String> extends X<V> {\\n\" +", "-\t\t\"\t                  ^^^^^^\\n\" +", "-\t\t\"The type parameter V should not be bounded by the final type String. Final types cannot be further extended\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tpublic <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "-\t\t\"\t                  ^^^^^^\\n\" +", "-\t\t\"The type parameter W should not be bounded by the final type String. Final types cannot be further extended\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 11)\\n\" +", "-\t\t\"\tY y = new Y();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Y is a raw type. References to generic type Y<V> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 11)\\n\" +", "-\t\t\"\tY y = new Y();\\n\" +", "-\t\t\"\t          ^\\n\" +", "-\t\t\"Y is a raw type. References to generic type Y<V> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. ERROR in X.java (at line 12)\\n\" +", "-\t\t\"\ty.make(String.class);\\n\" +", "-\t\t\"\t  ^^^^\\n\" +", "-\t\t\"The method make(Class) is ambiguous for the type Y\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. ERROR in X.java (at line 13)\\n\" +", "-\t\t\"\ty.make(getClazz());\\n\" +", "-\t\t\"\t  ^^^^\\n\" +", "-\t\t\"The method make(Class) is ambiguous for the type Y\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. ERROR in X.java (at line 14)\\n\" +", "-\t\t\"\ty.make(getClazz().newInstance().getClass());\\n\" +", "-\t\t\"\t  ^^^^\\n\" +", "-\t\t\"The method make(Class) is ambiguous for the type Y\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"8. WARNING in X.java (at line 16)\\n\" +", "-\t\t\"\tpublic static Class getClazz() {\\n\" +", "-\t\t\"\t              ^^^^^\\n\" +", "-\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X<T extends Object> {\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y<V extends String> extends X<V> {\\n\" +", "+\t\t\t\t\"  public <W extends String> Y<W> make(Class<W> clazz) {\\n\" +", "+\t\t\t\t\"    return new Y<W>();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public <U extends Object> X<U> make(Class<U> clazz) {\\n\" +", "+\t\t\t\t\"    return new X<U>();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static void main(String[] args) throws Exception {\\n\" +", "+\t\t\t\t\"    Y y = new Y();\\n\" +", "+\t\t\t\t\"    y.make(String.class);\\n\" +", "+\t\t\t\t\"    y.make(getClazz());\\n\" +", "+\t\t\t\t\"    y.make(getClazz().newInstance().getClass());\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"  public static Class getClazz() {\\n\" +", "+\t\t\t\t\"    return String.class;\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass Y<V extends String> extends X<V> {\\n\" + ", "+\t\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\t\"The type parameter V should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic <W extends String> Y<W> make(Class<W> clazz) {\\n\" + ", "+\t\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\t\"The type parameter W should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tpublic <W extends String> Y<W> make(Class<W> clazz) {\\n\" + ", "+\t\t\t\"\t                               ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tpublic <U extends Object> X<U> make(Class<U> clazz) {\\n\" + ", "+\t\t\t\"\t                               ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tY y = new Y();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tY y = new Y();\\n\" + ", "+\t\t\t\"\t          ^\\n\" + ", "+\t\t\t\"Y is a raw type. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\ty.make(String.class);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method make(Class) belongs to the raw type Y. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\ty.make(getClazz());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method make(Class) belongs to the raw type Y. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\ty.make(getClazz().newInstance().getClass());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method make(Class) belongs to the raw type Y. References to generic type Y<V> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 16)\\n\" + ", "+\t\t\t\"\tpublic static Class getClazz() {\\n\" + ", "+\t\t\t\"\t              ^^^^^\\n\" + ", "+\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);", "+/* javac 7", "+X.java:7: name clash: <U>make(Class<U>) and <W>make(Class<W>) have the same erasure", "+  public <U extends Object> X<U> make(Class<U> clazz) {", "+                                 ^", "+  where U,W are type-variables:", "+    U extends Object declared in method <U>make(Class<U>)", "+    W extends String declared in method <W>make(Class<W>)", "+X.java:12: warning: [unchecked] unchecked call to <W>make(Class<W>) as a member of the raw type Y", "+    y.make(String.class);", "+          ^", "+  where W is a type-variable:", "+    W extends String declared in method <W>make(Class<W>)", "+X.java:13: warning: [unchecked] unchecked call to <W>make(Class<W>) as a member of the raw type Y", "+    y.make(getClazz());", "+          ^", "+  where W is a type-variable:", "+    W extends String declared in method <W>make(Class<W>)", "+X.java:14: warning: [unchecked] unchecked call to <W>make(Class<W>) as a member of the raw type Y", "+    y.make(getClazz().newInstance().getClass());", "+          ^", "+  where W is a type-variable:", "+    W extends String declared in method <W>make(Class<W>)", "+1 error", "+3 warnings", "+ */"]}], "num": 66024}