{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9806edccf91b3c0496bb8f60920cd9e1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f13daab31e1e4994c715fba82180447", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t((ReferenceBinding)this.recipient).tagBits |= tagBits;", "+\t\t\t\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) this.recipient;", "+\t\t\t\t\t\tsourceType.tagBits |= tagBits;", "+\t\t\t\t\t\tif ((tagBits & TagBits.AnnotationSuppressWarnings) != 0) {", "+\t\t\t\t\t\t\tClassScope recipientScope = sourceType.scope;", "+\t\t\t\t\t\t\t// construct custom compiler options with suppressed warnings", "+\t\t\t\t\t\t\tCompilerOptions customOptions = getCustomCompilerOptions(recipientScope);", "+\t\t\t\t\t\t\tif (customOptions != null) {", "+\t\t\t\t\t\t\t\tTypeDeclaration typeDeclaration = recipientScope.referenceContext;", "+\t\t\t\t\t\t\t\trecipientScope.options = customOptions;", "+\t\t\t\t\t\t\t\t// discard already generated warnings which got suppressed", "+\t\t\t\t\t\t\t\ttypeDeclaration.compilationResult().suppressRecordedWarnings(", "+\t\t\t\t\t\t\t\t\t\ttypeDeclaration.declarationSourceStart, ", "+\t\t\t\t\t\t\t\t\t\ttypeDeclaration.declarationSourceEnd, ", "+\t\t\t\t\t\t\t\t\t\trecipientScope.problemReporter());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t((MethodBinding)this.recipient).tagBits |= tagBits;", "+\t\t\t\t\t\tMethodBinding sourceMethod = (MethodBinding) this.recipient;", "+\t\t\t\t\t\tsourceMethod.tagBits |= tagBits;", "+\t\t\t\t\t\tif ((tagBits & TagBits.AnnotationSuppressWarnings) != 0) {", "+\t\t\t\t\t\t\tAbstractMethodDeclaration methodDeclaration = ((SourceTypeBinding)sourceMethod.declaringClass).scope.referenceContext.declarationOf(sourceMethod);", "+\t\t\t\t\t\t\tMethodScope recipientScope = methodDeclaration.scope;", "+\t\t\t\t\t\t\t// construct custom compiler options with suppressed warnings", "+\t\t\t\t\t\t\tCompilerOptions customOptions = getCustomCompilerOptions(recipientScope);", "+\t\t\t\t\t\t\tif (customOptions != null) {", "+\t\t\t\t\t\t\t\trecipientScope.options = customOptions;", "+\t\t\t\t\t\t\t\t// discard already generated warnings which got suppressed", "+\t\t\t\t\t\t\t\tmethodDeclaration.compilationResult().suppressRecordedWarnings(", "+\t\t\t\t\t\t\t\t\t\tmethodDeclaration.declarationSourceStart, ", "+\t\t\t\t\t\t\t\t\t\tmethodDeclaration.declarationSourceEnd, ", "+\t\t\t\t\t\t\t\t\t\trecipientScope.problemReporter());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b684559cf4e929ba320e9a650c9da92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "1924cfa5e4209a8742be0104afe1beaad86d0922", "commitAfterChange": "dfe897878a3115c90160783084107f96dcd301be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t\tClassScope recipientScope = sourceType.scope;", "-\t\t\t\t\t\t\t// construct custom compiler options with suppressed warnings", "-\t\t\t\t\t\t\tCompilerOptions customOptions = getCustomCompilerOptions(recipientScope);", "-\t\t\t\t\t\t\tif (customOptions != null) {", "-\t\t\t\t\t\t\t\tTypeDeclaration typeDeclaration = recipientScope.referenceContext;", "-\t\t\t\t\t\t\t\trecipientScope.options = customOptions;", "-\t\t\t\t\t\t\t\t// discard already generated warnings which got suppressed", "-\t\t\t\t\t\t\t\ttypeDeclaration.compilationResult().suppressRecordedWarnings(", "-\t\t\t\t\t\t\t\t\t\ttypeDeclaration.declarationSourceStart, ", "-\t\t\t\t\t\t\t\t\t\ttypeDeclaration.declarationSourceEnd, ", "-\t\t\t\t\t\t\t\t\t\trecipientScope.problemReporter());", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tTypeDeclaration typeDeclaration =  sourceType.scope.referenceContext;", "+\t\t\t\t\t\t\trecordSuppressWarnings(typeDeclaration.compilationResult(), typeDeclaration.declarationSourceStart, typeDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t}\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\tAbstractMethodDeclaration methodDeclaration = ((SourceTypeBinding)sourceMethod.declaringClass).scope.referenceContext.declarationOf(sourceMethod);", "-\t\t\t\t\t\t\tMethodScope recipientScope = methodDeclaration.scope;", "-\t\t\t\t\t\t\t// construct custom compiler options with suppressed warnings", "-\t\t\t\t\t\t\tCompilerOptions customOptions = getCustomCompilerOptions(recipientScope);", "-\t\t\t\t\t\t\tif (customOptions != null) {", "-\t\t\t\t\t\t\t\trecipientScope.options = customOptions;", "-\t\t\t\t\t\t\t\t// discard already generated warnings which got suppressed", "-\t\t\t\t\t\t\t\tmethodDeclaration.compilationResult().suppressRecordedWarnings(", "-\t\t\t\t\t\t\t\t\t\tmethodDeclaration.declarationSourceStart, ", "-\t\t\t\t\t\t\t\t\t\tmethodDeclaration.declarationSourceEnd, ", "-\t\t\t\t\t\t\t\t\t\trecipientScope.problemReporter());", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tsourceType = (SourceTypeBinding) sourceMethod.declaringClass;", "+\t\t\t\t\t\t\tAbstractMethodDeclaration methodDeclaration = sourceType.scope.referenceContext.declarationOf(sourceMethod);", "+\t\t\t\t\t\t\trecordSuppressWarnings(methodDeclaration.compilationResult(), methodDeclaration.declarationSourceStart, methodDeclaration.declarationSourceEnd);", "-\t\t\t\t\t\t((FieldBinding)this.recipient).tagBits |= tagBits;", "+\t\t\t\t\t\tFieldBinding sourceField = (FieldBinding) this.recipient;", "+\t\t\t\t\t\tsourceField.tagBits |= tagBits;", "+\t\t\t\t\t\tif ((tagBits & TagBits.AnnotationSuppressWarnings) != 0) {", "+\t\t\t\t\t\t\tsourceType = (SourceTypeBinding) sourceField.declaringClass;", "+\t\t\t\t\t\t\tFieldDeclaration fieldDeclaration = sourceType.scope.referenceContext.declarationOf(sourceField);", "+\t\t\t\t\t\t\trecordSuppressWarnings(sourceType.scope.referenceContext.compilationResult(), fieldDeclaration.declarationSourceStart, fieldDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t}\t\t\t\t\t\t", "-\t\t\t\t\t\t((LocalVariableBinding)this.recipient).tagBits |= tagBits;", "+\t\t\t\t\t\tLocalVariableBinding variable = (LocalVariableBinding) this.recipient;", "+\t\t\t\t\t\tvariable.tagBits |= tagBits;", "+\t\t\t\t\t\tif ((tagBits & TagBits.AnnotationSuppressWarnings) != 0) {", "+\t\t\t\t\t\t\t LocalDeclaration localDeclaration = variable.declaration;", "+\t\t\t\t\t\t\trecordSuppressWarnings(scope.referenceContext().compilationResult(), localDeclaration.declarationSourceStart, localDeclaration.declarationSourceEnd);", "+\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t"]}], "num": 29610}