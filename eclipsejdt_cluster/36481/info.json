{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ea1d869ee43aa448a46f366411103f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e23a63a4f5bb18c9bb17d9af37b88c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WhileStatement.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof WhileStatement)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tWhileStatement o = (WhileStatement) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getExpression(), o.getExpression())\r", "-\t\t\t&& ASTNode.equalNodes(getBody(), o.getBody()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2abb646c36794c9ca44cc3e226446437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Initializer.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof Initializer)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tInitializer o = (Initializer) other;\r", "-\t\treturn \r", "-\t\t\t((getModifiers() == o.getModifiers())\r", "-\t\t\t&& ASTNode.equalNodes(getJavadoc(), o.getJavadoc())\r", "-\t\t\t&& ASTNode.equalNodes(getBody(), o.getBody()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82608219f2c5f82a1f29cdef38d94a76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SynchronizedStatement.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof SynchronizedStatement)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tSynchronizedStatement o = (SynchronizedStatement) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getExpression(), o.getExpression())\r", "-\t\t\t&& ASTNode.equalNodes(getBody(), o.getBody()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}], "num": 36481}