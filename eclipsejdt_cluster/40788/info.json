{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c351f9b6e599b04a2ef8c778a4b96609", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479ba0572c67e42665c1f4cfa8595f4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void testTypeVariable() throws JavaModelException", "signatureAfterChange": "  \tpublic void testTypeVariable() throws JavaModelException", "diff": ["-\t\tenv.addClass(root, \"p1\", \"A\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath aPath = env.addClass(root, \"p1\", \"A\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlyProblemsFor(new IPath[] {bPath});", "+\t\texpectingOnlyProblemsFor(new IPath[] {aPath, bPath});", "+\t\texpectingSpecificProblemFor(aPath, new Problem(\"A\", \"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\", aPath, 37, 47, CategorizedProblem.CAT_UNCHECKED_RAW)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e43d5fefb20bf9a2bb0806026802fb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "7b7fe6801886e214074d77a03e3cf4a14671b80d", "commitAfterChange": "1a24bd2131567850c4f414b4f39899f2bfca478d", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic void test0460() throws JavaModelException", "signatureAfterChange": " \tpublic void test0460() throws JavaModelException", "diff": ["+\t\tASTNode node = getASTNode(compilationUnit, 0, 0, 0);", "+\t\tassertNotNull(\"No node\", node);", "+\t\tassertTrue(\"Malformed\", !isMalformed(node));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9445706482e27b8364c0b15380db4e82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "5ee2151c41af9ff855348a169dff9645033b3177", "commitAfterChange": "44dd3fd78d480cf979c77fad7d9bdc1e1fe0ad4d", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void test0100() throws JavaModelException", "signatureAfterChange": " \tpublic void test0100() throws JavaModelException", "diff": ["+\t\tIMethodBinding methodBinding = enumConstantDeclaration.resolveConstructorBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertTrue(\"Not a constructor\", methodBinding.isConstructor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c759b70017828b48f9cb48ea5cb56a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/GetSourceTests.java", "commitBeforeChange": "e9864a131b54828255a924bbf70ed7031ad409fb", "commitAfterChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testFieldConstant() throws CoreException", "signatureAfterChange": " \tpublic void testFieldConstant() throws CoreException", "diff": ["+\t\t\tassertTrue(\"Not a Long\", constant instanceof Long);", "+\t\t\tassertTrue(\"Not a Long\", constant instanceof Long);", "+\t\t\tassertTrue(\"Not a Long\", constant instanceof Long);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f2c9bde0ca6f5d75621f18324f309b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "969a253a48a814e7aea7ae13fcfd59fccadb423d", "commitAfterChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test0403() throws JavaModelException", "signatureAfterChange": " \tpublic void test0403() throws JavaModelException", "diff": ["+\t\tIMethodBinding methodBinding2 = methodInvocation.resolveMethodBinding();", "+\t\tassertNotNull(\"No method binding2\", methodBinding2);", "+\t\tassertTrue(\"Wrong binding\", methodBinding == methodBinding2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41b11ab9988bade979cf79b8de94027", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "commitAfterChange": "1e3f3c114e087407d3d1bbd6bb989206d5da48eb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test0448() throws JavaModelException", "signatureAfterChange": " \tpublic void test0448() throws JavaModelException", "diff": ["+\t\tBlock block = methodDeclaration.getBody();", "+\t\tassertNotNull(\"No method body\", block);", "+\t\tassertEquals(\"wrong size\", 0, block.statements().size()); "]}], "num": 40788}