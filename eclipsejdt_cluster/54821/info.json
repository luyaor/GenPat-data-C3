{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fb955a9d17c0c738e5cffa19340cbf1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093cdca7d4a6ad1bde2f787eca5a9bed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "3a52394f0d22844465ca678eae001b22da348629", "commitAfterChange": "204668dea8f27b8498b13996f1332d4610d869bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate HashSet containerInitializationInProgress(IJavaProject project)", "signatureAfterChange": "  \tprivate void containerAddInitializationInProgress(IJavaProject project, IPath containerPath)", "diff": ["-\t */", "-\tprivate HashSet containerInitializationInProgress(IJavaProject project) {", "-\t\tif (initializations == null) {", "-\t\t\tinitializations = new HashMap();", "-\t\t\tthis.containerInitializationInProgress.set(initializations);", "-\t\t}", "-\t\tHashSet projectInitializations = (HashSet)initializations.get(project);", "-\t\tif (projectInitializations == null) {", "-\t\t\tprojectInitializations = new HashSet();", "-\t\t\tinitializations.put(project, projectInitializations);", "-\t\t}", "-\t\treturn projectInitializations;", "+\tprivate void containerAddInitializationInProgress(IJavaProject project, IPath containerPath) {", "+\t\tMap initializations = (Map)this.containerInitializationInProgress.get();", "+\t\tif (initializations == null)", "+\t\t\tthis.containerInitializationInProgress.set(initializations = new HashMap());", "+\t\tHashSet projectInitializations = (HashSet) initializations.get(project);", "+\t\tif (projectInitializations == null)", "+\t\t\tinitializations.put(project, projectInitializations = new HashSet());", "+\t\tprojectInitializations.add(containerPath);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf6dafff45d512b132192d7e9c5937b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "161b33b1dd753a14c62dc5cb298555b7a8135f16", "commitAfterChange": "0af694b5a2455cea6ace262561a6329b05ee9c78", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean initializeFromLookupEnvironment(LookupEnvironment env)", "signatureAfterChange": "\r public void initializePolymorphicSearch(MatchLocator locator, IJavaProject project, IProgressMonitor progressMonitor)", "diff": ["-public boolean initializeFromLookupEnvironment(LookupEnvironment env) {\r", "+public void initializePolymorphicSearch(MatchLocator locator, IJavaProject project, IProgressMonitor progressMonitor) {\r", "-\t// need to perform both operand initialization due to side-effects.\r", "-\tboolean leftInit = this.leftPattern.initializeFromLookupEnvironment(env);\r", "-\tboolean rightInit = this.rightPattern.initializeFromLookupEnvironment(env);\r", "-\treturn leftInit || rightInit;\r", "+\tthis.leftPattern.initializePolymorphicSearch(locator, project, progressMonitor);\r", "+\tthis.rightPattern.initializePolymorphicSearch(locator, project, progressMonitor);\r"]}], "num": 54821}