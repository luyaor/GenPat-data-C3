{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93e4f9cee739428dd8867de182d6aae1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029fdb3235d9b1da5ecac18ee30a6908", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "5c431427591b98c4b72a2e5ac41ca63aaf6302ff", "commitAfterChange": "83daf1ab113f238722eb665057bf137828f4e697", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\t\t\"The annotation type I cannot override the method Object.hashCode()\\n\" + ", "+\t\t\t\"The annotation type I cannot override the method Annotation.hashCode()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "086f8ba25a5bb6a08b1f9e4798ce89b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test024() throws CoreException", "signatureAfterChange": " \tpublic void test024() throws CoreException", "diff": ["-\t\tassertBindingCreated(new String[0],\"int[][]\");", "+\t\tassertBindingCreated(new String[0],\"[[I\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f3d3d1b69e5c2b3dee2a2b8ad5294c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a50c4083a71af0eff105fdebb7dcafbed82f0539", "commitAfterChange": "cec94004e8f3bba01c2728fc85167cd398915ae1", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": " \tpublic void test383()", "signatureAfterChange": " \tpublic void test383()", "diff": ["-\t\t\t\"Class must implement the inherited abstract method I.foo(Class<T>)\\n\" + ", "+\t\t\t\"The type X must implement the inherited abstract method I.foo(Class<T>)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138e79a8e0139b7de9910373074a0893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test007() throws CoreException", "signatureAfterChange": " \tpublic void test007() throws CoreException", "diff": ["-\t\t\t\"p1/X$Member\");", "+\t\t\t\"Lp1/X$Member;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "152686086b832d959ad3a485212fb815", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void test030() throws CoreException", "signatureAfterChange": " \tpublic void test030() throws CoreException", "diff": ["-\t\t\t\"p1/X\");", "+\t\t\t\"Lp1/X;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17fcc6688d3bfcd8611969f71caa80d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "cec94004e8f3bba01c2728fc85167cd398915ae1", "commitAfterChange": "1e8407c421d57de44f31d65506c1b4aaba9e5875", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new FormatterRegressionTests(\"test527\"));  //$NON-NLS-1$", "+\t\tsuite.addTest(new FormatterRegressionTests(\"test528\"));  //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a661817069fe7e3f71b6f1455c7bed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test046()", "signatureAfterChange": " public void test046()", "diff": ["-\t\t\"Class must implement the inherited abstract method Y.foo()\\n\" + ", "+\t\t\"The type X must implement the inherited abstract method Y.foo()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ae4dfc68ab95a371c8d1683ed15e183", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "56fd729d2f45ec0b9c9fda262c4722902ccba4f8", "commitAfterChange": "880fcfdc9d3f451c53fbdd4300c71ec2c6ba2a25", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void test0502e() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502e() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V/1/j\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#1/j\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3da952935361473f693b7e0f68ab30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void test0502c() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502c() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A/foo()/i\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V/i\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210e85eb2af55c98551709b1b32dd6ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "79f6245f7175f48a0a4fb6eb92b32eb28e5108e3", "commitAfterChange": "27bc61fa0901f87dfdd227f4fb04df89057cc681", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": " \tpublic void test0577() throws JavaModelException", "signatureAfterChange": " \tpublic void test0577() throws JavaModelException", "diff": ["-\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\", \"src\", \"test0574\", \"X.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tICompilationUnit sourceUnit = getCompilationUnit(\"Converter\", \"src\", \"test0577\", \"X.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21274ce8bbbe2597f7f25923c74b4142", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "commitAfterChange": "c92d7fd949bb43d639ffe5ab43f47d34f0714b93", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test009()", "signatureAfterChange": " \tpublic void test009()", "diff": ["-\t\t\t\"Invalid type Runnable for the annotation method X.value(); only primitive, String, Class, enum or annotation types are permitted or an array of those types\\n\" + ", "+\t\t\t\"Invalid type Runnable for the annotation member X.value; only primitive, String, Class, enum or annotation types are permitted or an array of those types\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "256bf45c2a8968d2db8099ee2fc20d0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test013()", "signatureAfterChange": " public void test013()", "diff": ["-\t\t\"Class must implement the inherited abstract method A.B.C.anotherMethod(int)\\n\" + ", "+\t\t\"The type A.aClass must implement the inherited abstract method A.B.C.anotherMethod(int)\\n\" + ", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in p1\\\\A.java (at line 11)\\n\" +", "-\t\t\"\tpublic void anotherMethod(int A) {};\t\\n\" +", "-\t\t\"\t                               ^\\n\" +", "-\t\t\"Syntax error on token \\\")\\\", ; expected\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in p1\\\\A.java (at line 11)\\n\" + ", "+\t\t\"\tpublic void anotherMethod(int A) {};\t\\n\" + ", "+\t\t\"\t                               ^\\n\" + ", "+\t\t\"Syntax error on token \\\")\\\", ; expected\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b9de0832750c18fd1e9badbeae3be7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "31d3be0ab92dab378331be6840b8f198d91f8e2d", "commitAfterChange": "4043b8a88c35a2c1612858cff67743727f25247b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0083\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0084\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298c54c39bca19a4c03458bec546ee07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test012()", "signatureAfterChange": " \tpublic void test012()", "diff": ["-\t\t\t\"Class must implement the inherited abstract method Runnable.run()\\n\" + ", "+\t\t\t\"The type X must implement the inherited abstract method Runnable.run()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2515e6b1a0a230e476bed038112437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void test0502f() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502f() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A$1\", typeBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A$1;\", typeBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396817cd67d1b82d6882485598f8764f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test0502a() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502a() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A/0/i\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;/0/i\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bee2666cef51810f4647ea8d0a64085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "e9325d403afb7057e34332564d229e812fdc64cb", "commitAfterChange": "b06653aabe96c99d4e2ae2d1cfbb284b89a81675", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test0502a() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502a() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;#0/i\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;#0#i\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4162e58de29de674290f47a295e9a193", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void test298()", "signatureAfterChange": " \tpublic void test298()", "diff": ["-\t\t\t\"Class must implement the inherited abstract method Map<String,V>.putAll(Map<? extends String,? extends V>)\\n\" + ", "+\t\t\t\"The type X<V> must implement the inherited abstract method Map<String,V>.putAll(Map<? extends String,? extends V>)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4844d5988c70ec29c54022f8e431bfc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " \tpublic void test382()", "signatureAfterChange": " \tpublic void test382()", "diff": ["-\t\t\t\"Class must implement the inherited abstract method I.foo(Class<? extends String>)\\n\" + ", "+\t\t\t\"The type X must implement the inherited abstract method I.foo(Class<? extends String>)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499767c65a30efa4b8f2189e5ea32356", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void test018() throws CoreException", "signatureAfterChange": " \tpublic void test018() throws CoreException", "diff": ["-\t\t\t\"p1/X/foo()\");", "+\t\t\t\"Lp1/X;.foo()V\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de800582ec964565016c5219c8dc216", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void test027() throws CoreException", "signatureAfterChange": " \tpublic void test027() throws CoreException", "diff": ["-\t\t\t\"p1/X<T:p1/Y&p1/I,U:p1/Y,>\");", "+\t\t\t\"Lp1/X<TT;TU;>;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a4c4920db870831f98e494951ee6b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test046()", "signatureAfterChange": " public void test046()", "diff": ["-\t\t\"Class must implement the inherited abstract method Y.foo()\\n\" + ", "+\t\t\"The type X must implement the inherited abstract method Y.foo()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8aaf669eda442af3fd9d7090e18fa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test046()", "signatureAfterChange": " public void test046()", "diff": ["-\t\t\"Class must implement the inherited abstract method Y.foo()\\n\" + ", "+\t\t\"The type X must implement the inherited abstract method Y.foo()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee3cf4a5f7b1a63f6d80aa525dc7aa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "e9325d403afb7057e34332564d229e812fdc64cb", "commitAfterChange": "b06653aabe96c99d4e2ae2d1cfbb284b89a81675", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void test0502c() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502c() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V/i\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#i\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "762075ecd0711957ac3c11736325ce08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void test014() throws CoreException", "signatureAfterChange": " \tpublic void test014() throws CoreException", "diff": ["-\t\t\t\"p1/X$Member\");", "+\t\t\t\"Lp1/X$Member;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "894ec4247a0d0cfb41d90fce77365490", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test0030() throws JavaModelException", "signatureAfterChange": " public void test0030() throws JavaModelException", "diff": ["-\t\t\"Inner [in Test [in [Working copy] Test.java [in test0030 [in src2 [in Resolve]]]]]\",", "+\t\t\"Inner key=Ltest0030/Test$Inner; [in Test [in [Working copy] Test.java [in test0030 [in src2 [in Resolve]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e10fb3d511681a16c6b58795d3597b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 346, "methodNumberAfterChange": 346, "signatureBeforeChange": " \tpublic void test344()", "signatureAfterChange": " \tpublic void test344()", "diff": ["-\t\t\t\"Class must implement the inherited abstract method X<R>.bar(T)\\n\" + ", "+\t\t\t\"The type new X<R>(){} must implement the inherited abstract method X<R>.bar(T)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fba6dee3bea0c0cf906f8a75bc41c2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "d061380dab0a8284949c7137c9f618f956975bfb", "commitAfterChange": "f036902b8950e5adf2d4599a6d5e2299f4b9d8bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tTestSuite suite = new Suite(ASTConverter15Test.class.getName());\t\t", "-\t\tsuite.addTest(new ASTConverter15Test(\"test0075\"));", "+\t\tTestSuite suite = new Suite(ASTConverter15Test.class.getName());", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0077\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c1b7fdffdd4f0f0f68a437bc9e7908", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " \tpublic void test0547() throws JavaModelException", "signatureAfterChange": " \tpublic void test0547() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong key\", \"test0547/A/voidfoo()/Local\", typeBinding.getKey());", "+\t\tassertEquals(\"Wrong key\", \"test0547/A$1$Local\", typeBinding.getKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a748aee564970f9510ff6fa0526fbb0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "56fd729d2f45ec0b9c9fda262c4722902ccba4f8", "commitAfterChange": "880fcfdc9d3f451c53fbdd4300c71ec2c6ba2a25", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test0502b() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502b() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;/0/0/j\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;#0#0/j\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa963f7bfdbdc79bd4d6aa37dd9d9bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test017() throws CoreException", "signatureAfterChange": " \tpublic void test017() throws CoreException", "diff": ["-\t\t\t\"p1/X$1$Y\");", "+\t\t\t\"Lp1/X$1$Y;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae22b2e0396341b6410b07785820e9f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "e4262ef08c6f8e26e57ca0c6211e0fdea3f40578", "commitAfterChange": "6a7a52c96b7229ab86908d69ec0e914d08a5352f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test009()", "signatureAfterChange": " \tpublic void test009()", "diff": ["-\t\t\t\"Invalid type Runnable for the annotation member X.value; only primitive, String, Class, enum or annotation types are permitted or an array of those types\\n\" + ", "+\t\t\t\"Invalid type Runnable for the annotation attribute X.value; only primitive, String, Class, enum or annotation types are permitted or an array of those types\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6b1e4270f50f053b746449a1b778dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "56fd729d2f45ec0b9c9fda262c4722902ccba4f8", "commitAfterChange": "880fcfdc9d3f451c53fbdd4300c71ec2c6ba2a25", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void test0502d() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502d() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V/0/j\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#0/j\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "badb6f48ebc0194f2a251f004ef57393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test026() throws CoreException", "signatureAfterChange": " \tpublic void test026() throws CoreException", "diff": ["-\t\t\t\"p1/X<T:java.lang/Object,>\");", "+\t\t\t\"Lp1/X<TT;>;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0e84c2d576587c1e64eb707e6a1da0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void test0502h() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502h() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A$3\", typeBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A$2;\", typeBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd377703e45af4eeb033a4a555d4c31d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void test028() throws CoreException", "signatureAfterChange": " \tpublic void test028() throws CoreException", "diff": ["-\t\t\t\"p1/X<java.lang/String,>\");", "+\t\t\t\"Lp1/X<Ljava/lang/String;>;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be049737e7e503aa6012aee6fed9af86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "1d5c04230cca9a140ebc4f49f95b83507805fe55", "commitAfterChange": "1f031f330295aba2cec9a418d0396157b08b3955", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0071\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0081\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1eccd5bcf18919ec173a371ba92977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "7dd03532bcfb1c993a21c44294d5af3f093cd0ca", "commitAfterChange": "d2e4e219064ebbb29189c651c12fc0ce8b125e81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0085\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0086\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be2a267b955e9782c64d60d6142d5909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "78ed311ef72b443cc728f27421052257b683cc6b", "commitAfterChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0074\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0075\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61f3889a857ace70e0afcd25a70fac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test029() throws CoreException", "signatureAfterChange": " \tpublic void test029() throws CoreException", "diff": ["-\t\t\t\"p1/X<java.lang/Error,java.lang/Exception,>$Y<java.lang/String,>\");", "+\t\t\t\"Lp1/X<Ljava/lang/Error;Ljava/lang/Exception;>.Y<Ljava/lang/String;>;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6955f88131aa715700fed4f93cc729d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void test0502f() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502f() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A$1\", typeBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A$1;\", typeBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce026f71e476cbcdd7207d5a8b8d2f31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test011()", "signatureAfterChange": " public void test011()", "diff": ["-\t\t\"Class must implement the inherited abstract method A.C.sMethod()\\n\" + ", "+\t\t\"The type Aa.B must implement the inherited abstract method A.C.sMethod()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d337ee31985b3995381503bd7d33f334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "e4262ef08c6f8e26e57ca0c6211e0fdea3f40578", "commitAfterChange": "6a7a52c96b7229ab86908d69ec0e914d08a5352f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test004()", "signatureAfterChange": " \tpublic void test004()", "diff": ["-\t\t\t\"Cycle detected: the annotation type Foo cannot contain members of the annotation type itself\\n\" + ", "+\t\t\t\"Cycle detected: the annotation type Foo cannot contain attributes of the annotation type itself\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d770351978bd2fe798a2596f5174545d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "17b1cbd42bc737b47c9ebf5ceda98737740d0825", "commitAfterChange": "c184ff0d8868e4e4a23c45be667e27d2482aa33f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0084\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0085\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8953bd4ad8e2a7c036cca127d52e48c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void test013() throws CoreException", "signatureAfterChange": " \tpublic void test013() throws CoreException", "diff": ["-\t\t\t\"p1/Y\");", "+\t\t\t\"Lp1/Y;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d92afe0861aab29686fbcda2c669c622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void test021() throws CoreException", "signatureAfterChange": " \tpublic void test021() throws CoreException", "diff": ["-\t\t\t\"p1/X/field\");", "+\t\t\t\"Lp1/X;.field\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d6d974447fe387a2af78376b6dcd36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test025()", "signatureAfterChange": " public void test025()", "diff": ["-\t\t\"Class must implement the inherited abstract method I.init(String, int)\\n\" + ", "+\t\t\"The type X must implement the inherited abstract method I.init(String, int)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55552bdb6094dc0c1454fe500c82921", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "e9325d403afb7057e34332564d229e812fdc64cb", "commitAfterChange": "b06653aabe96c99d4e2ae2d1cfbb284b89a81675", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void test0502e() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502e() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#1/j\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#1#j\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6950b394cdcf57ad8346f8e5788b6f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "56fd729d2f45ec0b9c9fda262c4722902ccba4f8", "commitAfterChange": "880fcfdc9d3f451c53fbdd4300c71ec2c6ba2a25", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void test0502d() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502d() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V/0/j\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#0/j\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e940e36059cc28e2052f920d92066577", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "1b976600c434b11b3265b882431a4b1ae03c69f7", "commitAfterChange": "a50c4083a71af0eff105fdebb7dcafbed82f0539", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void test054()", "signatureAfterChange": " \tpublic void test054()", "diff": ["-\t\t\"The class new X(){} must implement the inherited abstract method X.foo()\\n\" + ", "+\t\t\"The type new X(){} must implement the inherited abstract method X.foo()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf0ec27f5252196bbf98e40a936a54b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void test024()", "signatureAfterChange": " \tpublic void test024()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"\tpublic final enum X {\\n\" + ", "-\t\t\t\"\t                  ^\\n\" + ", "-\t\t\t\"Illegal modifier for the enum X; only public & abstract are permitted\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tpublic final enum X {\\n\" + ", "+\t\t\"\t                  ^\\n\" + ", "+\t\t\"Illegal modifier for the enum X; only public is permitted\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda5f1e4bc445b4c16a0414866ee4122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test008() throws CoreException", "signatureAfterChange": " \tpublic void test008() throws CoreException", "diff": ["-\t\t\t\"p1/X$Member1$Member2\");", "+\t\t\t\"Lp1/X$Member1$Member2;\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7bc47c0bc4e58eeefa311e5b0aae6cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "e8444de194a7b4d8cf6bce3ab18728c7a0b782f1", "commitAfterChange": "e7b011901fc6eef632897635b0cd67d5882d7bea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0088\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0089\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9918eb1e0568898b02392277880d2b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "e9325d403afb7057e34332564d229e812fdc64cb", "commitAfterChange": "b06653aabe96c99d4e2ae2d1cfbb284b89a81675", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void test0502d() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502d() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#0/j\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;.foo()V#0#j\", localBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff48a2ebb748b62db2680aa98d1479fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "e9325d403afb7057e34332564d229e812fdc64cb", "commitAfterChange": "b06653aabe96c99d4e2ae2d1cfbb284b89a81675", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test0502a() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502a() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;#0/i\", localBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A;#0#i\", localBinding.getKey()); //$NON-NLS-1$"]}], "num": 62027}