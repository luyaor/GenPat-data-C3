{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e6d9b12b1c2fdff2940daaa812c9ffa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cb3b70c195c2093205a2afbffb3fbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "9506194ecd38aa227915d4452e8097fba7bd6231", "commitAfterChange": "27a13e874a8de3a8e74e5e1ab65479e9dace8b8c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tboolean addConstraintsFromTypeParamters(TypeBinding subCandidate, ParameterizedTypeBinding ca, List constraints)", "signatureAfterChange": "  \tboolean addConstraintsFromTypeParamters(TypeBinding subCandidate, ParameterizedTypeBinding ca, List constraints)", "diff": ["-\t\t\treturn InferenceContext18.SIMULATE_BUG_JDK_8026527 ? true : false; // FALSE would conform to the spec ", "+\t\t\treturn (this.isSoft && InferenceContext18.SIMULATE_BUG_JDK_8026527) ? true : false; // FALSE would conform to the spec ", "-\t\t\tconstraints.add(new ConstraintTypeFormula(bi[i], ai[i], TYPE_ARGUMENT_CONTAINED));", "+\t\t\tconstraints.add(new ConstraintTypeFormula(bi[i], ai[i], TYPE_ARGUMENT_CONTAINED, this.isSoft));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc532a3f8f170b0d474300181cc61510", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "b25ae5a7f576e7bd1b9d0730e14ef7742dcae3eb", "commitAfterChange": "dca0c800b618e06354348679c785dbf10c5f5a8f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "signatureAfterChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\taddBound(new TypeBound(alpha, context.substitute(ai), ReductionResult.SAME));", "+\t\t\t\t\t\taddBound(new TypeBound(alpha, ai, ReductionResult.SAME));"]}], "num": 26149}