{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce3580b371b1e229aad9ae0252f48473", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f7fa7b67b44802756c18e9dff93b8a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void consumeCastExpressionWithQualifiedGenericsArray()", "signatureAfterChange": " protected void consumeCastExpressionWithQualifiedGenericsArray()", "diff": ["-}", "-\tTypeReference rightSide = getUnannotatedTypeReference(0); // by design the type after . is not annotated.", "-", "-\tParameterizedQualifiedTypeReference qualifiedParameterizedTypeReference = computeQualifiedGenericsFromRightSide(rightSide, dim);", "+\tAnnotation [][] annotationsOnDimensions = dim == 0 ? null : getAnnotationsOnDimensions(dim);", "+\tTypeReference rightSide = getTypeReference(0);", "+    ParameterizedQualifiedTypeReference qualifiedParameterizedTypeReference = computeQualifiedGenericsFromRightSide(rightSide, dim, annotationsOnDimensions);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3eb209bb85b89df51e224964b8cf81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 83, "signatureBeforeChange": " protected void consumeInsideCastExpressionWithQualifiedGenerics()", "signatureAfterChange": " protected void consumeInsideCastExpressionWithQualifiedGenerics()", "diff": ["-}", "-\tTypeReference rightSide = getUnannotatedTypeReference(0); // by design the type after . is not annotated.", "+\tAnnotation[][] annotationsOnDimensions = dim == 0 ? null : getAnnotationsOnDimensions(dim);", "+\tTypeReference rightSide = getTypeReference(0);", "-\tcastType = computeQualifiedGenericsFromRightSide(rightSide, dim);", "+\tcastType = computeQualifiedGenericsFromRightSide(rightSide, dim, annotationsOnDimensions);"]}], "num": 61488}