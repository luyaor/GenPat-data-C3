{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d530fda032834130af76c8446d4bc724", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16292f74f81963faab7c639fe417b5a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "1dbf45ade1eaa8473579771e92825a7887776253", "commitAfterChange": "0fb8e6d8cd5771230b88c7189dc0d95f3a5da0e3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\t\tASTNode previousFragment = null;", "+//\t\tASTNode previousFragment = null;", "-\t\t\t\t\t\tassertTrue(\"Reference in '\"+previousFragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassertFalse(\"Unknown reference in'\"+previousFragment+\"' should NOT be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassertFalse(this.prefix+\"Unknown reference in '\"+tagElement+\"' should NOT be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t} else if (fragment.getNodeType() == ASTNode.SIMPLE_NAME || fragment.getNodeType() == ASTNode.QUALIFIED_NAME) {", "+\t\t\t\t} else if (fragment.getNodeType() == ASTNode.QUALIFIED_NAME) {", "-\t\t\t\t\tverifyNameBindings(name.getQualifier());", "+//\t\t\t\t\tverifyNameBindings(name.getQualifier());", "+\t\t\t\t\tverifyNameBindings(name);", "-\t\t\t\t\tpreviousFragment = fragment;", "+//\t\t\t\t\tpreviousFragment = fragment;", "-\t\t\t\t\t\tassertNotNull(memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "-\t\t\t\t\t\tassertNotNull(methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "+\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\t\tassertNotNull(param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassertNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "-\t\t\t\tpreviousFragment = fragment;", "+//\t\t\t\tpreviousFragment = fragment;", "-\t\tassertTrue(\"Reference in '\"+previousFragment+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassertTrue(this.prefix+\"Reference in '\"+tagElement+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9186d21a5601566d258ee1702a6046e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\t\t\t\t\t\tassumeTrue(this.prefix+\"Reference '\"+previousFragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(prefix+\"Reference '\"+previousFragment+\"' should be bound!\", text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassumeTrue(this.prefix+\"Unknown reference '\"+previousFragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "+\t\t\t\t\t\tassumeTrue(prefix+\"Unknown reference '\"+previousFragment+\"' should NOT be bound!\", !text.getText().trim().startsWith(\"Unknown\"));", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+name+\" binding was not found!\", name.resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(prefix+\"\"+name+\" binding was not found!\", name.resolveBinding());", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\tassumeNotNull(prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "-\t\t\t\t\t\t\t\t\tSystem.out.println(this.prefix+\"Binding for selector of  '\"+methodRef+\"' is null.\");", "+\t\t\t\t\t\t\t\t\tSystem.out.println(prefix+\"Binding for selector of  '\"+methodRef+\"' is null.\");", "-\t\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\t\t\t\tassumeNotNull(prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "-\t\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodName+\" binding should be null!\", methNameBinding);", "+\t\t\t\t\t\t\t\t\tassumeNull(prefix+\"\"+methodName+\" binding should be null!\", methNameBinding);", "-\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\t\t\tassumeNotNull(prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "-\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodName+\" binding should be null!\", methNameBinding);", "+\t\t\t\t\t\t\t\tassumeNull(prefix+\"\"+methodName+\" binding should be null!\", methNameBinding);", "-\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "+\t\t\t\t\t\t\tassumeNotNull(prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "-\t\tassumeTrue(this.prefix+\"Reference '\"+(previousFragment==null?tagElement:previousFragment)+\"' should be bound!\", (!resolvedBinding || previousBinding != null));", "+\t\tassumeTrue(prefix+\"Reference '\"+(previousFragment==null?tagElement:previousFragment)+\"' should be bound!\", (!resolvedBinding || previousBinding != null));"]}], "num": 68722}