{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7ba0daa97cafbc55938da59b1cc1172", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d205859d834f0b4d53755cd6fabbde0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "d25d8e2aefb1fe7881a3b669cacd403afc528b1a", "commitAfterChange": "c768bb705d25a055607160ce11d239f196ca5653", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected void resetCollections()", "signatureAfterChange": "  protected void resetCollections()", "diff": ["-\tpreviousSourceFiles = sourceFiles.isEmpty() ? null : (ArrayList) sourceFiles.clone();", "+\tif (this.sourceFiles == null) {", "+\t\tthis.sourceFiles = new ArrayList(33);", "+\t\tthis.previousSourceFiles = null;", "+\t\tthis.qualifiedStrings = new StringSet(3);", "+\t\tthis.simpleStrings = new StringSet(3);", "+\t\tthis.hasStructuralChanges = false;", "+\t\tthis.compileLoop = 0;", "+\t} else {", "+\t\tthis.previousSourceFiles = this.sourceFiles.isEmpty() ? null : (ArrayList) this.sourceFiles.clone();", "-\tsourceFiles.clear();", "-\tqualifiedStrings.clear();", "-\tsimpleStrings.clear();", "-\tworkQueue.clear();", "+\t\tthis.sourceFiles.clear();", "+\t\tthis.qualifiedStrings.clear();", "+\t\tthis.simpleStrings.clear();", "+\t\tthis.workQueue.clear();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "307630d80575b66b6390ca58490106ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "da1ed68bc4edf753a4c670a981fc3b101d0548b0", "commitAfterChange": "d60a521aebaf899095636d4081476cd72ef03126", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected void processAnnotationResults(CompilationParticipantResult[] results)", "signatureAfterChange": "  protected void processAnnotationResults(CompilationParticipantResult[] results)", "diff": ["-\t// called AFTER the build loop once all source files have been compiled", "-", "+\tif (this.incrementalBuilder == null)", "+\t\tthis.incrementalBuilder = new IncrementalImageBuilder(this);", "+\tthis.incrementalBuilder.processAnnotationResults(results);", "+}", "-\t// this is a copy of the incremental build loop", "-\tIncrementalImageBuilder incrementalBuilder = new IncrementalImageBuilder(this);", "-\ttry {", "-\t\tincrementalBuilder.resetCollections();", "-\t\tincrementalBuilder.processAnnotationResults(results);", "-\t\tincrementalBuilder.addAffectedSourceFiles(); // pick up any affected source files of the deleted generated files", "-", "-\t\twhile (incrementalBuilder.sourceFiles.size() > 0) {", "-\t\t\tSourceFile[] allSourceFiles = new SourceFile[incrementalBuilder.sourceFiles.size()];", "-\t\t\tincrementalBuilder.sourceFiles.toArray(allSourceFiles);", "-\t\t\tincrementalBuilder.resetCollections();", "-", "-\t\t\tincrementalBuilder.workQueue.addAll(allSourceFiles);", "-\t\t\tincrementalBuilder.compile(allSourceFiles);", "-\t\t\tincrementalBuilder.removeSecondaryTypes();", "-\t\t\tincrementalBuilder.addAffectedSourceFiles();", "-\t\t}", "-\t} catch (CoreException e) {", "-\t\tthrow internalException(e);", "-\t} finally {", "-\t\tincrementalBuilder.cleanUp();", "-\t}"]}], "num": 30026}