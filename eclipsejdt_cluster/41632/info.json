{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80516e4e0f235a3f1252012fdf53e02d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "346f65f6d22601d5c92f715cfa50df6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "576e848d928ff985089b0f6379553cd8a923a448", "commitAfterChange": "0bb31250e6dfa81e101547a2ec18bc13a11477d7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprotected CompilationUnitProblemFinder( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean creatingAST, \t\tboolean statementsRecovery)", "signatureAfterChange": " \tprotected CompilationUnitProblemFinder( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean creatingAST, \t\tboolean statementsRecovery)", "diff": ["-\t\t\tcreatingAST/*parse literal expressions as constants if creating ast*/,", "-\t\t\tcreatingAST/*store annotations in the bindings if creating ast*/,", "-\t\t\tstatementsRecovery/*perform statements recovery during parse if creating ast*/", "+\t\t\t!creatingAST/*parse literal expressions as constants only if not creating a DOM AST*/,", "+\t\t\tcreatingAST/*store annotations in the bindings if creating a DOM AST*/,", "+\t\t\tstatementsRecovery/*perform statements recovery during parse if creating a DOM AST*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c59213e15f0019512af9a85f85bf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "e7833768fe66677026c3206cf97ef9da94dbdab9", "commitAfterChange": "28e05cb71e0502b3238f266ab607f96954f41036", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static final int compareWith(char[] array, char[] prefix)", "signatureAfterChange": " \tpublic static final int compareWith(char[] array, char[] prefix)", "diff": ["-\t\treturn 1;\t", "+\t\treturn -1;\t// array is shorter than prefix (e.g. array:'ab' < prefix:'abc')."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0eca81bf9d78d7f6627faaa59424691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "87c97e046bfd0082db22afde07881f33a4558114", "commitAfterChange": "e4b09827d027ed061d351d89e374356347ebdf23", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate void complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\t\t\tif(isInsideAnnotationAttribute &&", "+\t\t\t\t\t\t\t\t\tif(!isInsideAnnotationAttribute &&"]}], "num": 41632}