{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e139871ee6c6fd8bfbcd56962f4275b4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50ecf11aec7a6468856ff0b60c64b418", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "7eb499e0531ac46b3d11960000ddd11e09bd5a0f", "commitAfterChange": "56a9175c699a97c4f5829633c2d7d19949853c53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "signatureAfterChange": "  \tprivate final void addOptimizedReplaceEdit(int offset, int length, String replacement)", "diff": ["-\t\t\t\t\t\t\t\tthis.edits[this.editsIndex - 1] = new OptimizedReplaceEdit(previousOffset, previousLength + length, previousReplacement);", "+\t\t\t\t\t\t\t\tthis.edits[this.editsIndex - 1] = new OptimizedReplaceEdit(previousOffset, previousReplacementLength, previousReplacement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98c9035d71e007b8e95b3b6aa8169c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "48774e458dcfc41c34b203c6488c7b9a8716e5cc", "commitAfterChange": "6224a5dcda094820e09b86e019ae927259ff3273", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tpublic TextEdit getRootEdit()", "signatureAfterChange": "  \tpublic TextEdit getRootEdit()", "diff": ["-", "-\t\t\tif (isValidEdit(currentEdit)) {", "-\t\t\t\ttry {", "-\t\t\t\t\tedit.addChild(new ReplaceEdit(currentEdit.offset, currentEdit.length, currentEdit.replacement));", "-\t\t\t\t}", "-\t\t\t\tcatch (MalformedTreeException ex) {", "-\t\t\t\t\t// log exception in case of error", "-\t\t\t\t\tCommentFormatterUtil.log(ex);", "- \t\t\t\t\tthrow ex;", "+\t\t\tif (currentEdit.offset >= 0 && currentEdit.offset <= this.scannerEndPosition) {", "+\t\t\t\tif (currentEdit.length == 0 || (currentEdit.offset != this.scannerEndPosition && isMeaningfulEdit(currentEdit))) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tedit.addChild(new ReplaceEdit(currentEdit.offset, currentEdit.length, currentEdit.replacement));", "+\t\t\t\t\t}", "+\t\t\t\t\tcatch (MalformedTreeException ex) {", "+\t\t\t\t\t\t// log exception in case of error", "+\t\t\t\t\t\tCommentFormatterUtil.log(ex);", "+\t \t\t\t\t\tthrow ex;", "+\t\t\t\t\t}"]}], "num": 63202}