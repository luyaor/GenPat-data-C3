{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5b9ebc518a59c9bcfb0ac4a38092fec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146154180352ee0ce58267671d73e51d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "d7b968f8074ad4e44b5a08309dcb414a4be941a4", "commitAfterChange": "b64275d5d6005c49a64e53460529203088ebb2bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["+\t\t\t}", "+\t\t}", "+\t\tfinal Object bracePositionForLambdaDeclarationOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_LAMBDA_BODY);", "+\t\tif (bracePositionForLambdaDeclarationOption != null) {", "+\t\t\ttry {", "+\t\t\t\tthis.brace_position_for_lambda_body = (String) bracePositionForLambdaDeclarationOption;", "+\t\t\t} catch(ClassCastException e) {", "+\t\t\t\tthis.brace_position_for_lambda_body = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tfinal Object insertSpaceAfterLambdaArrowOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_LAMBDA_ARROW);", "+\t\tif (insertSpaceAfterLambdaArrowOption != null) {", "+\t\t\tthis.insert_space_after_lambda_arrow = JavaCore.INSERT.equals(insertSpaceAfterLambdaArrowOption);", "+\t\t}", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeLambdaArrowOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_LAMBDA_ARROW);", "+\t\tif (insertSpaceBeforeLambdaArrowOption != null) {", "+\t\t\tthis.insert_space_before_lambda_arrow = JavaCore.INSERT.equals(insertSpaceBeforeLambdaArrowOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7e75bc8c1e65e311ae6ffc0c4b7bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/HookedJavaFileObject.java", "commitBeforeChange": "aba5db418de65ea21899bfdf893833cd0fc3f586", "commitAfterChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprotected void closed()", "signatureAfterChange": " \t \tprotected void closed()", "diff": ["-\t\t\tCompilationUnit unit = new CompilationUnit(null, _fileName, null /* encoding */);", "-\t\t\t_filer.addNewUnit(unit);", "+\t\t\tswitch(this.getKind()) {", "+\t\t\t\tcase SOURCE :", "+\t\t\t\t\tCompilationUnit unit = new CompilationUnit(null, _fileName, null /* encoding */);", "+\t\t\t\t\t_filer.addNewUnit(unit);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase CLASS :", "+\t\t\t\t\tIBinaryType binaryType = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tbinaryType = ClassFileReader.read(_fileName);", "+\t\t\t\t\t} catch (ClassFormatException e) {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t}", "+\t\t\t\t\tif (binaryType != null) {", "+\t\t\t\t\t\tchar[] name = binaryType.getName();", "+\t\t\t\t\t\tReferenceBinding type = this._filer._env._compiler.lookupEnvironment.getType(CharOperation.splitOn('/', name));", "+\t\t\t\t\t\tif (type != null && type.isValidBinding() && type.isBinaryBinding()) {", "+\t\t\t\t\t\t\t_filer.addNewClassFile(type);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t}"]}], "num": 3735}