{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1ffff766820f4804ccfd79b2ae863d1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d463ddf0df88de3009d94b7bb8b8495", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "e4adb79086f880599e097f61810ee53a81bdc035", "commitAfterChange": "8a45189b56dd53f49b522651eb6b3bd9d4419390", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static final Constant getConstantFor( \t\tFieldBinding binding, \t\tReference reference, \t\tboolean isImplicit, \t\tScope referenceScope)", "signatureAfterChange": " \tpublic static final Constant getConstantFor( \t\tFieldBinding binding, \t\tReference reference, \t\tboolean isImplicit, \t\tScope referenceScope)", "diff": ["+\t\tFieldBinding originalField = binding.original();", "+\t\tSourceTypeBinding sourceType = (SourceTypeBinding) originalField.declaringClass;", "+\t\tTypeDeclaration typeDecl = sourceType.scope.referenceContext;", "+\t\tFieldDeclaration fieldDecl = typeDecl.declarationOf(originalField);", "+", "+\t\tfieldDecl.resolve(originalField.isStatic() //side effect on binding ", "+\t\t\t\t? typeDecl.staticInitializerScope", "+\t\t\t\t: typeDecl.initializerScope); ", "+", "-\t\t\t", "-\t\t\tFieldBinding originalField = binding.original();", "-\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) originalField.declaringClass;", "-\t\t\tTypeDeclaration typeDecl = sourceType.scope.referenceContext;", "-\t\t\tFieldDeclaration fieldDecl = typeDecl.declarationOf(originalField);", "-\t", "-\t\t\tfieldDecl.resolve(originalField.isStatic() //side effect on binding ", "-\t\t\t\t\t? typeDecl.staticInitializerScope", "-\t\t\t\t\t: typeDecl.initializerScope); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b970ac7ecd7020f4df7abfb8c9ed728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "efd7cd38b35f875ede44936aed68717b93ca608e", "commitAfterChange": "e4adb79086f880599e097f61810ee53a81bdc035", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static final Constant getConstantFor( \t\tFieldBinding binding, \t\tReference reference, \t\tboolean isImplicit, \t\tScope referenceScope)", "signatureAfterChange": " \tpublic static final Constant getConstantFor( \t\tFieldBinding binding, \t\tReference reference, \t\tboolean isImplicit, \t\tScope referenceScope)", "diff": ["-\t\tFieldBinding originalField = binding.original();", "-\t\tSourceTypeBinding sourceType = (SourceTypeBinding) originalField.declaringClass;", "-\t\tTypeDeclaration typeDecl = sourceType.scope.referenceContext;", "-\t\tFieldDeclaration fieldDecl = typeDecl.declarationOf(originalField);", "-", "-\t\tfieldDecl.resolve(originalField.isStatic() //side effect on binding ", "-\t\t\t\t? typeDecl.staticInitializerScope", "-\t\t\t\t: typeDecl.initializerScope); ", "-", "+\t\t\t", "+\t\t\tFieldBinding originalField = binding.original();", "+\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) originalField.declaringClass;", "+\t\t\tTypeDeclaration typeDecl = sourceType.scope.referenceContext;", "+\t\t\tFieldDeclaration fieldDecl = typeDecl.declarationOf(originalField);", "+\t", "+\t\t\tfieldDecl.resolve(originalField.isStatic() //side effect on binding ", "+\t\t\t\t\t? typeDecl.staticInitializerScope", "+\t\t\t\t\t: typeDecl.initializerScope); "]}], "num": 71868}