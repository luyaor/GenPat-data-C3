{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "898fc611217397222f3659596d2663ef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "690cfb25331f3684e8ad8d9b976677e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2cfaf33b626413a70eea1530c77695e81ac081f", "commitAfterChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "methodNumberBeforeChange": 1095, "methodNumberAfterChange": 1095, "signatureBeforeChange": " public void test1083()", "signatureAfterChange": " public void test1083()", "diff": ["-\t\t\"Type safety: The cast from List<capture#1-of ? extends Serializable> to LinkedList<String> is actually checking against the erased type LinkedList\\n\" + ", "+\t\t\"Type safety: Unchecked cast from List<capture#1-of ? extends Serializable> to LinkedList<String>\\n\" + ", "-\t\t\"Type safety: The cast from List<capture#2-of ? extends Serializable> to LinkedList<Integer> is actually checking against the erased type LinkedList\\n\" + ", "+\t\t\"Type safety: Unchecked cast from List<capture#2-of ? extends Serializable> to LinkedList<Integer>\\n\" + ", "-\t\t\"Type safety: The cast from List<capture#3-of ? extends Serializable> to LinkedList<Runtime> is actually checking against the erased type LinkedList\\n\" + ", "+\t\t\"Type safety: Unchecked cast from List<capture#3-of ? extends Serializable> to LinkedList<Runtime>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfcd5aad6935c816c1c1b4f24eeed7bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 556, "methodNumberAfterChange": 556, "signatureBeforeChange": " \tpublic void test554()", "signatureAfterChange": " \tpublic void test554()", "diff": ["-\t\t\t\"Type safety: The cast from X<? extends Object> to X<String> is actually checking against the erased type X\\n\" + ", "+\t\t\t\"Type safety: The cast from X<capture-of ? extends Object> to X<String> is actually checking against the erased type X\\n\" + ", "-\t\t\t\"Type safety: The cast from X<? extends Object> to X2 is actually checking against the erased type X2\\n\" + ", "+\t\t\t\"Type safety: The cast from X<capture-of ? extends Object> to X2 is actually checking against the erased type X2\\n\" + ", "-\t\t\t\"Type safety: The cast from X<? extends Object> to X3<String> is actually checking against the erased type X3\\n\" + ", "+\t\t\t\"Type safety: The cast from X<capture-of ? extends Object> to X3<String> is actually checking against the erased type X3\\n\" + "]}], "num": 50247}