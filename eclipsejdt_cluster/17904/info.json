{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e8d328ce85949a310ee03ee91ab8c2d", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97475d3f1ca9e9fb759a340f62ba1b15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node)", "diff": ["+ */\r", "+public int matchLevel(AstNode node) {\r", "+\tif (node instanceof NameReference) {\r", "+\t\tif (this.matches((NameReference)node, false)) {\r", "+\t\t\treturn POSSIBLE_MATCH; // always need to resolve name reference\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else if (node instanceof ImportReference) {\r", "+\t\tif (this.matches((ImportReference)node, false)) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn super.matchLevel(node);\r", "+\t}\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof TypeReference) {\r", "-\t\treturn this.matchLevel((TypeReference)node, resolve);\r", "-\t} else if (node instanceof NameReference) {\r", "-\t\treturn this.matchLevel((NameReference)node, resolve);\r", "-\t} else if (node instanceof ImportReference) {\r", "-\t\treturn this.matchLevel((ImportReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff14f9ef098118743eac547583ed6be5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node)", "diff": ["+ */\r", "+public int matchLevel(AstNode node) {\r", "+\tif (node instanceof NameReference) {\r", "+\t\tif (this.matches((NameReference)node, false)) {\r", "+\t\t\treturn POSSIBLE_MATCH; // always need to resolve name reference\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else if (node instanceof ImportReference) {\r", "+\t\tif (this.matches((ImportReference)node, false)) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t}\r", "+\t} else {\r", "+\t\treturn super.matchLevel(node);\r", "+\t}\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof TypeReference) {\r", "-\t\treturn this.matchLevel((TypeReference)node, resolve);\r", "-\t} else if (node instanceof NameReference) {\r", "-\t\treturn this.matchLevel((NameReference)node, resolve);\r", "-\t} else if (node instanceof ImportReference) {\r", "-\t\treturn this.matchLevel((ImportReference)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}], "num": 17904}