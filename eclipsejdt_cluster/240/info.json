{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5c85d714cd6db90471228a60614c697", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78fc0d34c9185237bd21d4ba095b18ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "f783b4d85cf6e1edba28b5f6486feeffff5e14a1", "commitAfterChange": "7dd813995b0caeaa0042d2e2be11011cad983416", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate ASTNode internalCreateASTForKind()", "signatureAfterChange": " \tprivate ASTNode internalCreateASTForKind()", "diff": ["+\t\tast.setDefaultNodeFlag(ASTNode.ORIGINAL);", "+\t\t\t\t\tast.setDefaultNodeFlag(0);", "+\t\t\t\t\tast.setOriginalModificationCount(ast.modificationCount());", "+\t\t\t\t\tast.setDefaultNodeFlag(0);", "+\t\t\t\t\tast.setOriginalModificationCount(ast.modificationCount());", "+\t\t\t\t\tast.setDefaultNodeFlag(0);", "+\t\t\t\t\tast.setOriginalModificationCount(ast.modificationCount());", "+\t\t\t\t\tast.setDefaultNodeFlag(0);", "+\t\t\t\t\tast.setOriginalModificationCount(ast.modificationCount());", "+\t\t\t\t\tast.setDefaultNodeFlag(0);", "+\t\t\t\t\tast.setOriginalModificationCount(ast.modificationCount());", "+\t\t\t\t\tast.setDefaultNodeFlag(0);", "+\t\t\t\t\tast.setOriginalModificationCount(ast.modificationCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cef16fd0a5c51fc3a7c028f8c2bd93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "10f63341df199e970df278da3a8020c6446bceae", "commitAfterChange": "a828d1823cd677ba9f8607ef7a3ea568312cc671", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": "\t\t \t \tpublic void testMethodRefParameter()", "signatureAfterChange": "\t\t \t \tpublic void testMethodRefParameter()", "diff": ["+\t\tif (ast.apiLevel() >= AST.JLS3) {", "+\t\t\tassertTrue(x.isVarargs() == false);", "+\t\t}", "+\t\tif (ast.apiLevel() >= AST.JLS3) {", "+\t\t\tpreviousCount = ast.modificationCount();", "+\t\t\tx.setVarargs(true);", "+\t\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\t\tassertTrue(x.isVarargs() == true);", "+\t", "+\t\t\tpreviousCount = ast.modificationCount();", "+\t\t\tx.setVarargs(false);", "+\t\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\t\tassertTrue(x.isVarargs() == false);", "+\t\t}", "+"]}], "num": 240}