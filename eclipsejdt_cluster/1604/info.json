{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74cbcf36588fe2e7b0c79b7644604ffc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a93f8fb0a0d94f092517d52fc0e4df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "commitAfterChange": "24134b187b46ea16212a45107324227f46ba3e4a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic boolean isAssignmentCompatible(ITypeBinding variableType)", "signatureAfterChange": " \tpublic boolean isAssignmentCompatible(ITypeBinding typeBinding)", "diff": ["-\tpublic boolean isAssignmentCompatible(ITypeBinding variableType) {", "-\t\treturn false;", "+\tpublic boolean isAssignmentCompatible(ITypeBinding typeBinding) {", "+\t\tif (\"java.lang.Object\".equals(typeBinding.getQualifiedName())) { //$NON-NLS-1$", "+\t\t\treturn true;", "+\t\t}", "+\t\treturn this.isEqualTo(typeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68cc02cc627cefb7258c603c99902fbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_7.java", "commitBeforeChange": "f74beb57e62e872a608b1d99069f6ffa51720699", "commitAfterChange": "0bcd341ea781d3ca9f30d724e6161bfab2161b14", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void _test0021()", "signatureAfterChange": " public void test0021()", "diff": ["-public void _test0021() {", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "-\t\t\t\"import java.util.List;\\n\" +", "-\t\t\t\"import java.util.ArrayList;\\n\" +", "-\t\t\t\"class X<T> {\\n\" +", "-\t\t\t\"  public X(T t) {}\\n\" +", "-\t\t\t\"  int f(List<String> p) {return 0;}\\n\" +", "-\t\t\t\"  int x = f(new ArrayList<>());\\n\" +", "-\t\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\"\tint x = f(new ArrayList<>());\\n\" + ", "-\t\t\"\t        ^\\n\" + ", "-\t\t\"The method f(List<String>) in the type X<T> is not applicable for the arguments (ArrayList<Object>)\\n\" + ", "-\t\t\"----------\\n\");", "+public void test0021() {", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import java.util.List;\\n\" +", "+\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\"class X<T> {\\n\" +", "+\t\t\t\t\"  public X(T t) {}\\n\" +", "+\t\t\t\t\"  int f(List<String> p) {return 0;}\\n\" +", "+\t\t\t\t\"  int x = f(new ArrayList<>());\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tint x = f(new ArrayList<>());\\n\" + ", "+\t\t\t\"\t        ^\\n\" + ", "+\t\t\t\"The method f(List<String>) in the type X<T> is not applicable for the arguments (ArrayList<Object>)\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\tthis.runNegativeTest(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\t\"X.java\",", "+\t\t\t\t\t\"import java.util.List;\\n\" +", "+\t\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\t\"class X<T> {\\n\" +", "+\t\t\t\t\t\"  public X(T t) {}\\n\" +", "+\t\t\t\t\t\"  int f(List<String> p) {return 0;}\\n\" +", "+\t\t\t\t\t\"  int x = f(new ArrayList<>());\\n\" +", "+\t\t\t\t\t\"}\\n\",", "+\t\t\t\t},", "+\t\t\t\t\"\");", "+\t}"]}], "num": 1604}