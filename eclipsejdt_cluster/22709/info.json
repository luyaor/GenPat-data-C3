{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7140fb75289f0106e08209cd0611962a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b342d11e93317e2cbd13b12fe1fb7736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "be3c15b9323bfb13e7c2f0f44638bfa19d5abff2", "commitAfterChange": "43ba239664019dd489061a00645e975e2ecd1a6c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t// X.this is not a param/raw type as denoting enclosing instance", "-\t\tthis.resolvedType = type = type.erasure();", "-", "+\t\ttype = type.erasure();", "+\t\t", "+\t\t// resolvedType needs to be converted to parameterized", "+\t\tif (type instanceof ReferenceBinding) {", "+\t\t\tthis.resolvedType = scope.environment().convertToParameterizedType((ReferenceBinding) type);", "+\t\t} else {", "+\t\t\t// error case", "+\t\t\tthis.resolvedType = type;", "+\t\t}", "+\t\t", "-\t\twhile (this.currentCompatibleType != null", "-\t\t\t&& this.currentCompatibleType != type) {", "+\t\twhile (this.currentCompatibleType != null && this.currentCompatibleType != type) {", "-\t\t\treturn type;", "+\t\t\treturn this.resolvedType;", "-\t\treturn type;", "+\t\t", "+\t\treturn  this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3615a4a8ff284001eea62f9ee0563d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-", "-\t\treturn this.resolvedType = scope.getJavaLangClass();", "+\t\tReferenceBinding classType = scope.getJavaLangClass();", "+\t\tif (classType.isGenericType()) {", "+\t\t    // Integer.class is of type Class<Integer>", "+\t\t    this.resolvedType = scope.createParameterizedType(classType, new TypeBinding[]{ targetType }, null);", "+\t\t} else {", "+\t\t    this.resolvedType = classType;", "+\t\t}", "+\t\treturn this.resolvedType;"]}], "num": 22709}