{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d6d4d6f493b2f6a98727aed7db0923a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef972b8d341ab28642437184a48414c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "bcf05e1a23e85c2be26c967fe98fcd6135357ea5", "commitAfterChange": "bd19f394e99e7308ae085922e4bf1b95d3c9ebb7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void testCycle3() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle3() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});", "+\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));", "-\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));", "+\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ //$NON-NLS-6$//$NON-NLS-7$", "+\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\"});;", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));", "+\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "+\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)", "+\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));", "+\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b7591859a8c1687d51236fc6f8bee3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "f512a9071a69431983c5a97730f23f8ae82e0f5d", "commitAfterChange": "ebec254e498341be9350e02449a0dbae42c5870c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testCycle3() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle3() throws JavaModelException", "diff": ["-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419cc635f52d6eaa21f8f80ba0371f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "commitAfterChange": "b9f6281b56af6781d8bb8cc727077eb3dccaebba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testCycle3() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle3() throws JavaModelException", "diff": ["-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2, 106, 109, CategorizedProblem.CAT_MEMBER),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4850baba00aac6526fb33f30f51aa70e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "f512a9071a69431983c5a97730f23f8ae82e0f5d", "commitAfterChange": "ebec254e498341be9350e02449a0dbae42c5870c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testCycle4() throws JavaModelException", "signatureAfterChange": " \tpublic void testCycle4() throws JavaModelException", "diff": ["-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, -1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the build path of project: P3\", p3, -1, -1, CategorizedProblem.CAT_BUILDPATH));//$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 28096}