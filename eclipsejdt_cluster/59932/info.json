{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bc791cad9db465323a3454baeb695e7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99720f9bfa7ee8cec6e34c4b359821fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "9579e3add6a99053acfe6faec70c877feca5e8d3", "commitAfterChange": "542e863753b063e393ffd7f35e08fe8fe2f0bb63", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "signatureAfterChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "diff": ["-\t\tJavaModel javaModel= this.manager.getJavaModel(this.workspaceRoot.getWorkspace());\r", "-\t\tIResource jarFile= this.workspaceRoot.findMember(jarPath);\r", "+\t\tIResource jarFile= this.workspace.getRoot().findMember(jarPath);\r", "-\t\t\treturn javaModel.getJavaProject(jarFile).getPackageFragmentRoot(jarFile);\r", "+\t\t\treturn this.javaModel.getJavaProject(jarFile).getPackageFragmentRoot(jarFile);\r", "-\t\t\tIProject[] projects= this.workspaceRoot.getProjects();\r", "+\t\t\tIProject[] projects= this.workspace.getRoot().getProjects();\r", "-\t\t\t\t\tIJavaProject javaProject= javaModel.getJavaProject(project);\r", "+\t\t\t\t\tIJavaProject javaProject= this.javaModel.getJavaProject(project);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff697fee9c23067cd24540a869dc8c59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tsynchronized IVariableBinding resolveVariable(VariableDeclaration variable)", "signatureAfterChange": " \tsynchronized IVariableBinding resolveVariable(VariableDeclaration variable)", "diff": ["-\t\t\t\tthis.bindingTables.bindingsToAstNodes.put(variableBinding, variable);", "+\t\t\t\tthis.bindingsToAstNodes.put(variableBinding, variable);", "-\t\t\t\t\tthis.bindingTables.bindingKeysToAstNodes.put(key, variable);\t\t\t\t", "+\t\t\t\t\tthis.bindingTables.bindingKeysToBindings.put(key, variableBinding);\t\t\t\t", "-\t\t\tthis.bindingTables.bindingsToAstNodes.put(variableBinding, variable);", "+\t\t\tthis.bindingsToAstNodes.put(variableBinding, variable);", "-\t\t\t\tthis.bindingTables.bindingKeysToAstNodes.put(key, variable);\t\t\t\t", "+\t\t\t\tthis.bindingTables.bindingKeysToBindings.put(key, variableBinding);\t\t\t\t"]}], "num": 59932}