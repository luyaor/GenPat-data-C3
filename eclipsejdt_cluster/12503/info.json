{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b33409ff1dc5e221218e57b0dbc3e409", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015058ce06d7797753d383075dff333b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a64e2bfe34ce5cd9321a9c519897f6c11db5eddd", "commitAfterChange": "c270ff57e75841606a99505b6ccf3e93c595f397", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t} else if (options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)) {", "-\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t} else if (options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t  && options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_1)) {", "+\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget11\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e020f7f2aeb60a8be7ad92e91db4481b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "ae336908d63283be4362fa9c31b6c0130b37d725", "commitAfterChange": "4d39705e56e345b371d06b067e8bb925c4b0b300", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  protected Compiler newCompiler()", "signatureAfterChange": "  protected Compiler newCompiler()", "diff": ["-\t\t\tif (option == null || option.equals(JavaCore.IGNORE))", "-\t\t\t\tprojectOptions.put(JavaCore.COMPILER_DOC_COMMENT_SUPPORT, JavaCore.DISABLED);", "+\t\t\tif (option == null || option.equals(JavaCore.IGNORE)) {", "+\t\t\t\toption = (String) projectOptions.get(JavaCore.COMPILER_PB_UNUSED_IMPORT);", "+\t\t\t\tif (option == null || option.equals(JavaCore.IGNORE)) { // Unused import need also to look inside javadoc comment", "+\t\t\t\t\tprojectOptions.put(JavaCore.COMPILER_DOC_COMMENT_SUPPORT, JavaCore.DISABLED);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 12503}