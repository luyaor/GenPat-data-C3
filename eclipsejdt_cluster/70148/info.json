{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d696bdbdbd15ea0d2c1214fdb5f2559", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a3ef2f4ff82d141139aac5f56dc4303", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "116e2f749da165a5623c3cc3e6d763b07027f0ae", "commitAfterChange": "9f4083645d70a432f33ad4b76043e33c22dce66a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer, int flags)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["-\t\t\tif (i < length - 1) {", "-\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "-\t\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "-\t\t\t} else if (isVarargs) {", "-\t\t\t\t// remove array from signature", "-\t\t\t\tString parameter = parameters[i].substring(1);", "-\t\t\t\tbuffer.append(Signature.toString(parameter));", "-\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\ttry {", "+\t\t\t\tif (i < length - 1) {", "+\t\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t\t\t\t} else if (isVarargs) {", "+\t\t\t\t\t// remove array from signature", "+\t\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t\t} else {", "+\t\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\t}", "+\t\t\t} catch (IllegalArgumentException e) {", "+\t\t\t\t// parameter signature is malformed", "+\t\t\t\tbuffer.append(\"*** invalid signature: \"); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(parameters[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c716b2feb0a0d9ddf3c3091849155a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c0f9d8b84abc89ce64134386f4c44ab56579df25", "commitAfterChange": "9ba8652d2cebf2117416af5e39a70e172556117b", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " private static int appendTypeArgumentSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "signatureAfterChange": " private static int appendTypeArgumentSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "diff": ["-\tif (c == C_STAR) {", "-\t\tbuffer.append('?');", "-\t\treturn start;", "-\t}", "-\tif (c == '+') {", "-\t\tbuffer.append(\"? extends \"); //$NON-NLS-1$", "-\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "-\t} else if (c == '-') {", "-\t\tbuffer.append(\"? super \"); //$NON-NLS-1$", "-\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "-\t} else {", "-\t\treturn appendTypeSignature(string, start, fullyQualifyTypeNames, buffer);", "+\tswitch(c) {", "+\t\tcase C_STAR :", "+\t\t\tbuffer.append('?');", "+\t\t\treturn start;", "+\t\tcase '+' :", "+\t\t\tbuffer.append(\"? extends \"); //$NON-NLS-1$", "+\t\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "+\t\tcase '-' :", "+\t\t\tbuffer.append(\"? super \"); //$NON-NLS-1$", "+\t\t\treturn appendTypeSignature(string, start + 1, fullyQualifyTypeNames, buffer);", "+\t\tdefault :", "+\t\t\treturn appendTypeSignature(string, start, fullyQualifyTypeNames, buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6010f76c50192789214833a1f457cbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "116e2f749da165a5623c3cc3e6d763b07027f0ae", "commitAfterChange": "9f4083645d70a432f33ad4b76043e33c22dce66a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer, int flags)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["-\t\t\tif (i < length - 1) {", "-\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "-\t\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "-\t\t\t} else if (isVarargs) {", "-\t\t\t\t// remove array from signature", "-\t\t\t\tString parameter = parameters[i].substring(1);", "-\t\t\t\tbuffer.append(Signature.toString(parameter));", "-\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "-\t\t\t} else {", "-\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\ttry {", "+\t\t\t\tif (i < length - 1) {", "+\t\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t\t\t\t} else if (isVarargs) {", "+\t\t\t\t\t// remove array from signature", "+\t\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t\t} else {", "+\t\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\t}", "+\t\t\t} catch (IllegalArgumentException e) {", "+\t\t\t\t// parameter signature is malformed", "+\t\t\t\tbuffer.append(\"*** invalid signature: \"); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(parameters[i]);"]}], "num": 70148}