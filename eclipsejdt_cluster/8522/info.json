{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dc748eab9c3e61a1244c45f404794af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c13672fdc140d7c229060cbc508b13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateOptimizedLessThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLessThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3416a15c30eb0383a69f879aefab65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generateOptimizedLessThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLessThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1323f2288ef09564b59236c5899dbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateOptimizedGreaterThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedGreaterThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8034caef256f878e76fea67def70bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void generateOptimizedGreaterThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedGreaterThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\tif ((left.constant != NotAConstant) && (left.constant.intValue() == 0)) {", "+\t\t\tif ((left.constant != Constant.NotAConstant) && (left.constant.intValue() == 0)) {", "-\t\t\tif ((right.constant != NotAConstant) && (right.constant.intValue() == 0)) {", "+\t\t\tif ((right.constant != Constant.NotAConstant) && (right.constant.intValue() == 0)) {"]}], "num": 8522}