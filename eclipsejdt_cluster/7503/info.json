{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91ed0664b203aa8306250393fc23bc8a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407c0c9a0e0edfc3a57d98c5f08432fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "600e48f032b359e080127669aade9cc1c66a15b1", "commitAfterChange": "0e6d4fe5469565f21baa2fd0ec88d178818c619b", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " \tpublic void testEnumConstantDeclaration()", "signatureAfterChange": " \tpublic void testEnumConstantDeclaration()", "diff": ["+\t// TODO (jeem) - remove deprecation after 3.1 M4", "+\t\tx1.setAnonymousClassDeclaration(ACD1);", "-\t\tassertTrue(result.equals(\"[(ECD\"+JD1S+MOD1S+MOD2S+N1S+E1S+E2S+FD1S+FD2S+\"ECD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertTrue(result.equals(\"[(ECD\"+JD1S+MOD1S+MOD2S+N1S+E1S+E2S+FD1S+FD2S+ACD1S+\"ECD)]\")); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584d72b84396fe6701712c684b6d603d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "c6d868d8783a57da635a4ee823bfa99a77283712", "commitAfterChange": "eb94d4f8322ccc35580c2be98b06636564603ba3", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": "  \tpublic void testParameterizedType()", "signatureAfterChange": "  \tpublic void testParameterizedType()", "diff": ["-\t\tParameterizedType x1 = ast.newParameterizedType(N1);", "-\t\tx1.typeArguments().add(T1);", "+\t\tParameterizedType x1 = ast.newParameterizedType(T1);", "+\t\tx1.setName(N1);", "+\t\tx1.typeArguments().add(PT1);", "-\t\tassertTrue(result.equals(\"[(tM\"+N1S+T1S+T2S+\"tM)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tassertTrue(result.equals(\"[(tM\"+N1S+T1S+T2S+PT1S+\"tM)]\")); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 7503}