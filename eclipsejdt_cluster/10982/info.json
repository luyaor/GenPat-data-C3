{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3708f591362c2c18077cd4711a89c33f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49f33494494590efbb0956eaf59f1f79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "b2f2db5aca4b5592810cb876316dc430449c50f8", "commitAfterChange": "423363127bfe75baf23fa282b4893f61b836a936", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "diff": ["-\t\t\t\tTypeBinding currentArg = currentArgs[j];", "-\t\t\t\tTypeBinding inheritedArg = inheritedArgs[j];", "+\t\t\t\tTypeBinding currentArg = currentArgs[j].leafComponentType();", "+\t\t\t\tTypeBinding inheritedArg = inheritedArgs[j].leafComponentType();", "-\t\t\t\t\tif (inheritedArg.isArrayType()) {", "-\t\t\t\t\t\tinheritedArg = inheritedArg.leafComponentType();", "-\t\t\t\t\t\tcurrentArg = currentArg.leafComponentType();", "-\t\t\t\t\t}", "-\t\t\tTypeBinding inheritedReturnType = inheritedMethod.returnType;", "-\t\t\tTypeBinding returnType = currentMethod.returnType;", "-\t\t\tif (inheritedReturnType.isArrayType()) {", "-\t\t\t\tinheritedReturnType = inheritedReturnType.leafComponentType();", "-\t\t\t\treturnType = returnType.leafComponentType();", "-\t\t\t}", "+\t\t\tTypeBinding inheritedReturnType = inheritedMethod.returnType.leafComponentType();", "+\t\t\tTypeBinding returnType = currentMethod.returnType.leafComponentType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e6647b25a3ddb3793a58494ebeb1be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "607ff419d62fc0f91055d1c2d16685459d9fa667", "commitAfterChange": "0cad9a75d8029433899afbdf88cbb39e8dd0618a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "diff": ["+\t// methods includes the inherited methods that the currentMethod must comply with", "+\t// likely only 1 but could be more if mutiple declared supertypes define the method (1 superclass & 1 to many declared interfaces)", "-\t\tboolean addBridgeMethod = inheritedMethod.hasSubstitutedReturnType()", "-\t\t\t&& isTypeSubstituable(currentMethod.returnType, inheritedMethod.returnType);", "-\t\tif (!addBridgeMethod && !areTypesEqual(currentMethod.returnType, inheritedMethod.returnType)) {", "+\t\tboolean addBridgeMethod = inheritedMethod.hasSubstitutedReturnType();", "+\t\tif (!super.areTypesEqual(currentMethod.returnType, inheritedMethod.returnType)) {", "-\t\t\t\t// TODO (kent) work to do on this case", "-\t\t\t\tif (currentMethod.typeVariables.length == 0 && inheritedMethod.declaringClass.isRawType()) {", "-\t\t\t\t\t// bug 69626", "-\t\t\t\t\t// no error since the inheritedMethod's type variables are ignored in raw types... why does a raw type binding not remove the type variables?", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.problemReporter(currentMethod).incompatibleReturnType(currentMethod, inheritedMethod);", "-//\t\t\t\t\tthis.problemReporter(currentMethod).nameClash(currentMethod, inheritedMethod);", "-\t\t\t\t\tcontinue nextMethod;", "-\t\t\t\t}", "+\t\t\t\tthis.problemReporter(currentMethod).incompatibleReturnType(currentMethod, inheritedMethod);", "+//\t\t\t\tthis.problemReporter(currentMethod).nameClash(currentMethod, inheritedMethod);", "+\t\t\t\tcontinue nextMethod;", "+\t\t\taddBridgeMethod = true;", "-\t\t    if (!isReturnTypeSubstituable(original, currentMethod) || !areParametersEqual(original, currentMethod))", "+\t\t    if (!areReturnTypesEqual(original, currentMethod) || !areParametersEqual(original, currentMethod))"]}], "num": 10982}