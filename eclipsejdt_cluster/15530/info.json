{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26ccc899e14075bd7fce44e28dc01c2b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8be5e0bbae8d31776fb159e1b29a31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RepeatableAnnotationTest.java", "commitBeforeChange": "3c8b95412c50bb73a8372fbf9db9df68231cc311", "commitAfterChange": "618a6ff3d34de5a5e41db8b1f1893c42061e44cd", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void _test039()", "signatureAfterChange": " \tpublic void test039() throws Exception", "diff": ["-\t// Test that repeated annotations can appear at package targets - doesn't work due to VarifyClassLoader not defining packages.", "-\tpublic void _test039() {", "+\t// Test that repeated annotations can appear at package targets", "+\tpublic void test039() throws Exception {", "-\t\t\t\t\"          System.out.println(repeatable.Main.class.getClassLoader().getClass().getSimpleName());\\n\" + ", "-\t\t\t\t\"          System.out.println(\\\"Pacakage has \\\" + Main.class.getClassLoader().getClass().getName());\\n\" +", "-\t\t\t\t\"        System.out.println(\\\"The pacakage has \\\" + Main.class.getPackage().getAnnotationsByType(Foo.class).length + \\\" annotations\\\");\\n\" +", "-\t\trunConformTest(testFiles, \"The package has 2 annotations\");", "+\t\trunConformTest(testFiles, \"\");", "+\t\tString expectedOutout = ", "+\t\t\t\t\"  RuntimeVisibleAnnotations: \\n\" + ", "+\t\t\t\t\"    #8 @repeatable.FooContainer(\\n\" + ", "+\t\t\t\t\"      #9 value=[\\n\" + ", "+\t\t\t\t\"        annotation value =\\n\" + ", "+\t\t\t\t\"            #10 @repeatable.Foo(\\n\" + ", "+\t\t\t\t\"            )\\n\" + ", "+\t\t\t\t\"        annotation value =\\n\" + ", "+\t\t\t\t\"            #10 @repeatable.Foo(\\n\" + ", "+\t\t\t\t\"            )\\n\" + ", "+\t\t\t\t\"        ]\\n\" + ", "+\t\t\t\t\"    )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"repeatable\" + File.separator + \"package-info.class\", \"package-info\", expectedOutout, ClassFileBytesDisassembler.SYSTEM);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca860db374ed294e434a0eda631471b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void test020() throws Exception", "signatureAfterChange": " \t \tpublic void test030_methodTypeParameterBound() throws Exception", "diff": ["-\t// method type parameter bound", "-\tpublic void test020() throws Exception {", "+\t", "+\tpublic void test030_methodTypeParameterBound() throws Exception {", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.CLASS)\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface C {\\n\" + ", "+\t\t\t\t\"\tchar value() default '-';\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Z.java\",", "+\t\t\t\t\"public class Z {}\",", "+\t\t\t\t\"Y.java\",", "+\t\t\t\t\"public class Y<T> {}\",", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\t<T extends Y<Z [][]@B[]> & Cloneable> void foo(T t) {}\\n\" +", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" +  ", "+\t\t\t\"      #23 @B(\\n\" + ", "+\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "+\t\t\t\"        type parameter index = 0 type parameter bound index = 0\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY]\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}"]}], "num": 15530}