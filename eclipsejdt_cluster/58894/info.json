{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7907a664fc4ac4df0125624ea731c9e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "464dd3cba13a4c12c3f2ffed99250036", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "commitAfterChange": "d9cf56fd4fe99ad8dd0ba89cbfa9dcc246ef0b9c", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList visited,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet alreadyTraversed)", "signatureAfterChange": " \tpublic void updateCycleParticipants( \t\t\tIClasspathEntry[] preferredClasspath,  \t\t\tArrayList prereqChain,  \t\t\tHashSet cycleParticipants,  \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet alreadyTraversed)", "diff": ["-\t\t\tArrayList visited, ", "+\t\t\tArrayList prereqChain, ", "-\t\tvisited.add(this);", "+\t\tprereqChain.add(this);", "-\t\t\t\t\t\tint index = visited.indexOf(project);", "-\t\t\t\t\t\tif (index == -1 && cycleParticipants.contains(project))", "-\t\t\t\t\t\t\tindex = visited.indexOf(this); // another loop in the cycle exists", "-\t\t\t\t\t\tif (index >= 0) { // only consider direct participants inside the cycle", "-\t\t\t\t\t\t\tfor (int size = visited.size(); index < size; index++)", "-\t\t\t\t\t\t\t\tcycleParticipants.add(visited.get(index)); ", "+\t\t\t\t\t\tint index = cycleParticipants.contains(project) ? 0 : prereqChain.indexOf(project);", "+\t\t\t\t\t\tif (index >= 0) { // refer to cycle, or in cycle itself", "+\t\t\t\t\t\t\tfor (int size = prereqChain.size(); index < size; index++) {", "+\t\t\t\t\t\t\t\tcycleParticipants.add(prereqChain.get(index)); ", "+\t\t\t\t\t\t\t}", "-//\t\t\t\t\t\t\tif (!alreadyTraversed.contains(project)) {", "-\t\t\t\t\t\t\t\tproject.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot, alreadyTraversed);", "-//\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (!alreadyTraversed.contains(project)) {", "+\t\t\t\t\t\t\t\tproject.updateCycleParticipants(null, prereqChain, cycleParticipants, workspaceRoot, alreadyTraversed);", "+\t\t\t\t\t\t\t}", "-\t\tvisited.remove(this);", "-//\t\talreadyTraversed.add(this);", "+\t\tprereqChain.remove(this);", "+\t\talreadyTraversed.add(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39c53a1f616a7eeb31a1730b552be88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "signatureAfterChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "diff": ["-\t\tencodePatterns(this.accessibleFiles, TAG_ACCESSIBLE, parameters);", "-\t\tencodePatterns(this.nonAccessibleFiles, TAG_NONACCESSIBLE, parameters);", "-\t\tif (this.entryKind == CPE_PROJECT && !this.combineAccessRestrictions)", "-\t\t\tparameters.put(TAG_COMBINE_ACCESS_RESTRICTIONS, \"false\"); //$NON-NLS-1$", "+\t\tif (this.entryKind == CPE_PROJECT && !this.combineAccessRules)", "+\t\t\tparameters.put(TAG_COMBINE_ACCESS_RULES, \"false\"); //$NON-NLS-1$", "-\t\twriter.printTag(TAG_CLASSPATHENTRY, parameters, indent, newLine, !hasExtraAttributes /*close tag if no extra attributes*/);", "+\t\tboolean hasRestrictions = getAccessRuleSet() != null;", "+\t\twriter.printTag(TAG_CLASSPATHENTRY, parameters, indent, newLine, !hasExtraAttributes && !hasRestrictions /*close tag if no extra attributes and no restriction*/);", "-\t\tif (hasExtraAttributes) {", "+\t\tif (hasExtraAttributes)", "+\t", "+\t\tif (hasRestrictions)", "+\t\t\tencodeAccessRules(writer, indent, newLine);", "+", "+\t\tif (hasExtraAttributes || hasRestrictions)", "-\t\t\t", "-\t\t}"]}], "num": 58894}