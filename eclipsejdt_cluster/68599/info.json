{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92688dd6cb9ff17e798ab3e63841dcc3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "579c0a10db6ab669b934ed5a23e6cf95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "9b4643830ee06b9ae3b83a25e11220a2814a6ade", "commitAfterChange": "857474872b3b285c254583d672bce0e505994b35", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testBug404489a() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug404489a() throws JavaModelException", "diff": ["+\t\tSimpleType simpleType = (SimpleType) qualifiedType.getQualifier();", "+\t\tassertEquals(\"incorrect type\", \"@A X\", simpleType.toString());", "+\t\tbinding = simpleType.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong qualified name\", \"test404489.bug.X\", binding.getQualifiedName());", "-\t\tSimpleType simpleType = (SimpleType) qualifiedType.getQualifier();", "+\t\tsimpleType = (SimpleType) qualifiedType.getQualifier();", "-\t\tassertEquals(\"Wrong qualified name\", \"test404489.bug.X.Y\", binding.getQualifiedName());", "+\t\tassertEquals(\"Wrong qualified name\", \"test404489.bug.X\", binding.getQualifiedName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c77c43eddf93b5423729fe23d396ccda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void test0095() throws JavaModelException", "signatureAfterChange": " \tpublic void test0095() throws JavaModelException", "diff": ["-\t\tIBinding binding = ((MethodDeclaration) node).resolveBinding();", "-\t\tassertEquals(", "-\t\t\tnull,", "-\t\t\tbinding);", "+\t\tIMethodBinding methodBinding = ((MethodDeclaration) node).resolveBinding();", "+\t\tassertNotNull(\"No binding\", methodBinding);", "+\t\tassertEquals(\"LX;.foo<T:Ljava/lang/Object;>(LNonExisting;)V\", methodBinding.getKey());", "+\t\tassertFalse(\"Method should not be flagged as recovered\", methodBinding.isRecovered());", "+\t\tassertTrue(\"Method argument type should be flagged as recovered\", methodBinding.getParameterTypes()[0].isRecovered());\t\t\t\t"]}], "num": 68599}