{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "756bd49dada771311d1a38dbcb7295f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b55f79db79a1edfc15d21056274520", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tpublic void test109636_4()", "signatureAfterChange": "  \tpublic void test109636_4()", "diff": ["-\t\t\t\t\" * setLeadingComment(\\\"/&#42; traditional comment &#42;/\\\"); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(\\\"missing comment delimiters\\\"); // wrong\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(\\\"/&#42; unterminated traditional comment \\\"); // wrong\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(\\\"/&#42; broken\\\\n traditional comment &#42;/\\\"); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(\\\"// end-of-line comment\\\\n\\\"); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(\\\"// end-of-line comment without line terminator\\\"); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(\\\"// broken\\\\n end-of-line comment\\\\n\\\"); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;/* traditional comment &#42;/&quot;); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;missing comment delimiters&quot;); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;/* unterminated traditional comment &quot;); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;/* broken\\\\n traditional comment &#42;/&quot;); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;// end-of-line comment\\\\n&quot;); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;// end-of-line comment without line terminator&quot;); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(&quot;// broken\\\\n end-of-line comment\\\\n&quot;); // wrong\" + DELIMITER +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f962719fffc24a57225bbf0b4471d84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tpublic void test109636_4()", "signatureAfterChange": "  \tpublic void test109636_4()", "diff": ["-\t\t\t\t\" * setLeadingComment(&quot;/* traditional comment &#42;/&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;missing comment delimiters&quot;); // wrong\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;/* unterminated traditional comment &quot;); // wrong\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;/* broken\\\\n traditional comment &#42;/&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;// end-of-line comment\\\\n&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;// end-of-line comment without line terminator&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;// broken\\\\n end-of-line comment\\\\n&quot;); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"/&#42; traditional comment &#42;/\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"missing comment delimiters\\\"); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"/&#42; unterminated traditional comment \\\"); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"/&#42; broken\\\\n traditional comment &#42;/\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"// end-of-line comment\\\\n\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"// end-of-line comment without line terminator\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"// broken\\\\n end-of-line comment\\\\n\\\"); // wrong\" + DELIMITER +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd68862c6bff157966007f5109f7ac83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tpublic void test109636_4()", "signatureAfterChange": "  \tpublic void test109636_4()", "diff": ["-\t\t\t\t\" * setLeadingComment(&quot;/* traditional comment &#42;/&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;missing comment delimiters&quot;); // wrong\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;/* unterminated traditional comment &quot;); // wrong\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;/* broken\\\\n traditional comment &#42;/&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;// end-of-line comment\\\\n&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;// end-of-line comment without line terminator&quot;); // correct\" + DELIMITER +", "-\t\t\t\t\" * setLeadingComment(&quot;// broken\\\\n end-of-line comment\\\\n&quot;); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"/&#42; traditional comment &#42;/\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"missing comment delimiters\\\"); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"/&#42; unterminated traditional comment \\\"); // wrong\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"/&#42; broken\\\\n traditional comment &#42;/\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"// end-of-line comment\\\\n\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"// end-of-line comment without line terminator\\\"); // correct\" + DELIMITER +", "+\t\t\t\t\" * setLeadingComment(\\\"// broken\\\\n end-of-line comment\\\\n\\\"); // wrong\" + DELIMITER +"]}], "num": 135}