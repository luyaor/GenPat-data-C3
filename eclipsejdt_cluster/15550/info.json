{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5d5adc48ea03c3b0ff2be7f7ce3f1ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27d5b4302b16893247a2e164f210007", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tprivate void findImports(CompletionOnImportReference importReference)", "signatureAfterChange": "  \tprivate void findImports(CompletionOnImportReference importReference)", "diff": ["-\t\tresolvingImports = true;", "+\t\tthis.resolvingImports = true;", "-\t\tcompletionToken =  importName;", "+\t\tthis.completionToken =  importName;", "-\t\tnameEnvironment.findPackages(importName, this);", "-\t\tnameEnvironment.findTypes(importName, this);", "+\t\tthis.nameEnvironment.findPackages(importName, this);", "+\t\tthis.nameEnvironment.findTypes(importName, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca34b59a14ff61a3e6604f1eedd50c3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "15119daf817db1018e77a6fda243b1a0915bea1f", "commitAfterChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprivate void findImports(CompletionOnImportReference importReference)", "signatureAfterChange": "  \tprivate void findImports(CompletionOnImportReference importReference, boolean findMembers)", "diff": ["-\tprivate void findImports(CompletionOnImportReference importReference) {", "+\tprivate void findImports(CompletionOnImportReference importReference, boolean findMembers) {", "+\t\tthis.resolvingStaticImports = importReference.isStatic();", "-\t\t\tthis.nameEnvironment.findTypes(importName, PROPOSE_MEMBER_TYPES, this);", "+\t\t\tthis.nameEnvironment.findTypes(importName, findMembers && PROPOSE_MEMBER_TYPES, this);"]}], "num": 15550}