{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0099d30f64e2471a514c2bae1d60d08f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045fdd4e93379e03fb054d29ed9fee2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void test053()", "signatureAfterChange": " public void test053()", "diff": ["-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(e);\\n\" + ", "-\t\t\t\t\"\t                   ^\\n\" + ", "-\t\t\t\t\"Missing code implementation in the compiler\\n\" + ", "-\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c0a5d52555881aa974f70ac9bc8849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "dfd4f51ecdd2928f82bb07183b33c60122015348", "commitAfterChange": "2a851009aaa407c5e4c32cb132dfb84271f2e7fd", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tpublic void testForwardReference()", "signatureAfterChange": " \tpublic void testForwardReference()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in T.java (at line 5)\\n\" + ", "-\t\t\t\"\t@R(TC.class)\\n\" + ", "-\t\t\t\"\t   ^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<TC> to Class<? extends Annotation>\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1746f465c4deedd10a0a87effb0b7516", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void testBug433158()", "signatureAfterChange": " public void testBug433158()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in CollectorsMaps.java (at line 20)\\n\" + ", "-\t\t\"\tp -> p.lhs.stream().map(p::keepingRhs)).collect(\\n\" + ", "-\t\t\"\t                                        ^^^^^^^\\n\" + ", "-\t\t\"The method collect(Collector<? super Object,A,R>) in the type Stream<Object> is not applicable for the arguments (Collector<CollectorsMaps.Pair<String,String>,capture#3-of ?,Map<String,List<String>>>)\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d5eb79ac682f37cea46ff89f022cc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test0015_field_with_explicit_this_access()", "signatureAfterChange": " public void test0015_field_with_explicit_this_access()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\to.toString();\\n\" + ", "-\t\t\"\t^\\n\" + ", "-\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "-\t\t\"----------\\n\"", "+\t\t\"\"", "+//      \"----------\\n\" +", "+//      \"1. ERROR in X.java (at line 5)\\n\" +", "+//      \"\to.toString();\\n\" +", "+//      \"\t^\\n\" +", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "+//      \"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4637368b2185556ea8c98fb50b7c788c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void test060()", "signatureAfterChange": " public void test060()", "diff": ["-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(is);\\n\" + ", "-\t\t\t\t\"\t                   ^^\\n\" + ", "-\t\t\t\t\"Missing code implementation in the compiler\\n\" + // expected. ", "-\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae91ac4f4b1d92340d02dfc9a73ee0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "ee44380e8d52a97dffe90bb61e33a1e5ccfb30e8", "commitAfterChange": "6f17c126ff89ea2e3c03f832be8ed25d26113551", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " public void test384750z6()", "signatureAfterChange": " public void test384750z6()", "diff": ["-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\t\t\"\tI i = X::foo;\\n\" + ", "-\t\t\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\t\t\t\"----------\\n\");", "+\t\t\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527dc6f1a24ee62b6973a5c17d9295b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void test049()", "signatureAfterChange": " public void test049()", "diff": ["-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(args); // OK: args is not re-assignment since declaration/first assignment\\n\" + ", "-\t\t\t\t\"\t                   ^^^^\\n\" + ", "-\t\t\t\t\"Missing code implementation in the compiler\\n\" +  // expected since emulation path computation is not in place.", "-\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f3d3ec6e50b7c351caa9aef702dec8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "b3921c5eea6f0c6a7e0f7e9f7a3a4e8e611961a3", "commitAfterChange": "502bad8ce7c832154fb3a7a8f85a868d7d077253", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testBroadcastAST3() throws JavaModelException", "signatureAfterChange": " public void testBroadcastAST3() throws JavaModelException", "diff": ["-\t\t\"package p1;\\n\" +", "-\t\t\"import p2.*;\\n\" +", "-\t\t\"public class X {\\n\" +", "-\t\t\"  public void foo(){\\n\" +", "-\t\t\"  }\\n\" +", "-\t\t\"}\\n\",", "+\t\t\"null\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c06c5aad850108794015f365cdc96c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d96b4f2d2690a613d86ff8a25f7f4e62c3b517ac", "commitAfterChange": "341ead40b71a0bffec0f8325f6b29d2b567caf8a", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 301, "signatureBeforeChange": " public void test432759()", "signatureAfterChange": " public void test432759()", "diff": ["-\t\"----------\\n\" + ", "-\t\"1. ERROR in X.java (at line 16)\\n\" + ", "-\t\"\tBinaryOperator<Subsumer<? super T>> attempt_X_3 = Subsumer::andThe3;\\n\" + ", "-\t\"\t                                                  ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\"The type Subsumer does not define andThe3(Subsumer<capture#5-of ? super T>, Subsumer<capture#5-of ? super T>) that is applicable here\\n\" + ", "-\t\"----------\\n\");", "+\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "830d30c4aca304cb73186ed8c3d8be2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test0014_field_with_explicit_this_access()", "signatureAfterChange": " public void test0014_field_with_explicit_this_access()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tthis.o.toString();\\n\" + ", "-\t\t\"\t     ^\\n\" + ", "-\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "-\t\t\"----------\\n\"", "+\t\t\"\"", "+//      \"----------\\n\" +", "+//      \"1. ERROR in X.java (at line 5)\\n\" +", "+//      \"\tthis.o.toString();\\n\" +", "+//      \"\t^^^^^^\\n\" +", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "+//      \"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99733ec8bc7ba927b2ec80a41fc7843d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "44b2ae0b9ea2797846c8f36e5cf3be1acaab875d", "commitAfterChange": "0492d8e41c1aba4d81d43f5d644f4506ed10c8ab", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void testBug433158()", "signatureAfterChange": " public void testBug433158()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in CollectorsMaps.java (at line 20)\\n\" + ", "-\t\t\"\tp -> p.lhs.stream().map(p::keepingRhs)).collect(\\n\" + ", "-\t\t\"\t                                        ^^^^^^^\\n\" + ", "-\t\t\"The method collect(Collector<? super Object,A,R>) in the type Stream<Object> is not applicable for the arguments (Collector<CollectorsMaps.Pair<String,String>,capture#3-of ?,Map<String,List<String>>>)\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02f37bdd3fdc0fe18bf69b5f7fb163d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void test051()", "signatureAfterChange": " public void test051()", "diff": ["-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(s); // OK: args is not re-assignment since declaration/first assignment\\n\" + ", "-\t\t\t\t\"\t                   ^\\n\" + ", "-\t\t\t\t\"Missing code implementation in the compiler\\n\" + // expected since emulation path computation is not in place.", "-\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7071c5c6049fef4a59edf23ac563c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0002_simple_field()", "signatureAfterChange": " public void test0002_simple_field()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\to.toString();\\n\" + ", "-\t\t\"\t^\\n\" + ", "-\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "-\t\t\"----------\\n\"", "+\t\"\"", "+//      \"----------\\n\" +", "+//      \"1. ERROR in X.java (at line 5)\\n\" +", "+//      \"\to.toString();\\n\" +", "+//      \"\t^\\n\" +", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "+//      \"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9b849afbcc041ed2d45be6af5ecbe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "commitAfterChange": "07061c09a4baa11ac0a53e425e478493f3662bd4", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void test050()", "signatureAfterChange": " public void test050()", "diff": ["-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(ioe.getMessage()); // OK: args is not re-assignment since declaration/first assignment\\n\" + ", "-\t\t\t\t\"\t                   ^^^\\n\" + ", "-\t\t\t\t\"Missing code implementation in the compiler\\n\" + // expected since emulation path computation is not in place.", "-\t\t\t\t\"----------\\n\");", "+\t\t\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65d946a94352029f692681536e4e975", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test0019_field_synchronized()", "signatureAfterChange": " public void test0019_field_synchronized()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\to.toString();\\n\" + ", "-\t\t\"\t^\\n\" + ", "-\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "-\t\t\"----------\\n\"", "+\t\t\"\"", "+//      \"----------\\n\" +", "+//      \"1. ERROR in X.java (at line 5)\\n\" +", "+//      \"\to.toString();\\n\" +", "+//      \"\t^\\n\" +", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "+//      \"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db44058641d1f0f55fae6a25a6b54e80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void test0018_field_of_enclosing_object()", "signatureAfterChange": " public void test0018_field_of_enclosing_object()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\"\tX.this.o.toString();\\n\" + ", "-\t\t\"\t       ^\\n\" + ", "-\t\t\"Potential null pointer access: The field o may be null at this location\\n\" + ", "-\t\t\"----------\\n\"", "+\t\t\"\"", "+//      \"----------\\n\" +", "+//      \"1. ERROR in X.java (at line 6)\\n\" +", "+//      \"\tX.this.o.toString();\\n\" +", "+//      \"\t^^^^^^^^\\n\" +", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" +", "+//      \"----------\\n\""]}], "num": 71664}