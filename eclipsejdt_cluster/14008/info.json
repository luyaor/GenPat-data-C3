{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6d595cfb667bc93f111a72a563af7c6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0081674cc3a917b50184191d2ea9c021", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "3fa437321fe88b141d60a98c3b39cea46c7fbc44", "commitAfterChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["-\t// only perform resource copying if no source folders coincidates with the output location\r", "+\t// only perform resource copying if the output location does not match a source folder\r", "-\tthis.hasSeparateOutputFolder = true;\r", "-\tfor (int i = 0; i < this.sourceFolders.length; i++) {\r", "-\t\tIContainer sourceFolder = this.sourceFolders[i];\r", "-\t\tif (sourceFolder.getFullPath().equals(this.outputFolder.getFullPath())){\r", "-\t\t\tthis.hasSeparateOutputFolder = false;\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "+\tIPath outputPath = outputFolder.getFullPath();\r", "+\tthis.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());\r", "+\tfor (int i = 0, length = sourceFolders.length; hasSeparateOutputFolder && i < length; i++)\r", "+\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[i].getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de61bbb763ed38c2c2350dd78ab279c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "4a42ce44b4dbdac7dfa261ef1a39fce0de95d7be", "commitAfterChange": "51fbd8e4f6294604d20aa6227743a8c8abfdc166", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["-\tint index = sourceFolders.length;\r", "-\tthis.hasSeparateOutputFolder = index > 0; // skip it if it doesn't have any source folders\r", "-\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "-\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r", "+\tint index = sourceFolders.length;\r", "+\tif (index == 0) {\r", "+\t\t// handle case of the last source folder is removed... so no source folders exist but the output folder must still be scrubbed\r", "+\t\tthis.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());\r", "+\t} else {\r", "+\t\tthis.hasSeparateOutputFolder = true;\r", "+\t\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "+\t\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bd08a6fd372a4666a2b04264f3dd97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "54503993aac98c2e38062e5e25d7566a8b5f1389", "commitAfterChange": "7358239d6b862255b4b51fc6ef9f249d713405ea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["-\tthis.hasSeparateOutputFolder = !outputFolder.getFullPath().equals(javaBuilder.currentProject.getFullPath());\r", "+\t// only perform resource copying if no source folders coincidates with the output location\r", "+\t// corresponds to: project == src == bin, or several source folders are contributing resources,\r", "+\t// but one is the output location too (and would get populated with other source folder resources).\r", "+\tthis.hasSeparateOutputFolder = true;\r", "+\tfor (int i = 0; i < this.sourceFolders.length; i++) {\r", "+\t\tIContainer sourceFolder = this.sourceFolders[i];\r", "+\t\tif (sourceFolder.getFullPath().equals(this.outputFolder)){\r", "+\t\t\tthis.hasSeparateOutputFolder = false;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e314c96060a28960ab7f7aa08b3925", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "c1a4eec7badf25da1ca6cc1d039b5627888514b8", "commitAfterChange": "2d75cef028da9a8fe8c9804711f5a598b2019a3c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["+\tint index = sourceFolders.length;\r", "+\tthis.hasSeparateOutputFolder = index > 0; // skip it if it doesn't have any source folders\r", "-\tthis.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());\r", "-\tfor (int i = 0, length = sourceFolders.length; hasSeparateOutputFolder && i < length; i++)\r", "-\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[i].getFullPath());\r", "+\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "+\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r"]}], "num": 14008}