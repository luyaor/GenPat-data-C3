{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7f90c9159471e960e3470030b17f2b6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356cace4e01e996bb669c24ddf29af87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "8d0a5299117e5fc84e729116ac52feef1385b968", "commitAfterChange": "527793c3501c0044ba7f65ec00ff957c7a149690", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected static Element getEntryAsXMLElement( \t\tDocument document, \t\tIClasspathEntry entry, \t\tIPath prefixPath) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected static Element getEntryAsXMLElement( \t\tDocument document, \t\tIClasspathEntry entry, \t\tIPath prefixPath) \t\tthrows JavaModelException", "diff": ["+\t\t}", "+\t\t", "+\t\tString[] exclusionPatterns;", "+\t\tif ((exclusionPatterns = entry.getExclusionPatterns()) != null) {", "+\t\t\tStringBuffer excludeRule = new StringBuffer(10);", "+\t\t\tfor (int i = 0, max = exclusionPatterns.length; i < max; i++){", "+\t\t\t\tif (i > 0) excludeRule.append('|');", "+\t\t\t\texcludeRule.append(exclusionPatterns[i]);", "+\t\t\t}", "+\t\t\telement.setAttribute(\"excluding\", excludeRule.toString());  //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d5c66a01fd18ac6e168c0e3d3edaac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "signatureAfterChange": " \tpublic void elementEncode(XMLWriter writer, IPath projectPath, boolean indent, boolean newLine)", "diff": ["-\t\t", "-\t\tif (this.exclusionPatterns.length > 0) {", "+\t\tif (this.inclusionPatterns != null && this.inclusionPatterns.length > 0) {", "+\t\t\tStringBuffer includeRule = new StringBuffer(10);", "+\t\t\tfor (int i = 0, max = this.inclusionPatterns.length; i < max; i++){", "+\t\t\t\tif (i > 0) includeRule.append('|');", "+\t\t\t\tincludeRule.append(this.inclusionPatterns[i]);", "+\t\t\t}", "+\t\t\tparameters.put(\"including\", String.valueOf(includeRule));//$NON-NLS-1$", "+\t\t}", "+\t\tif (this.exclusionPatterns != null && this.exclusionPatterns.length > 0) {"]}], "num": 44997}