{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e1df6d5b5ea0011b26ca2266bf969f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0f24685171d2b958348330f944aa93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int sourceFolderSegmentCount) throws CoreException", "signatureAfterChange": "\r \r protected void findSourceFiles(IResourceDelta sourceDelta, int sourceFolderSegmentCount) throws CoreException", "diff": ["-\t\t\t\t\tif (hasSeparateOutputFolder) {\r", "-\t\t\t\t\t\tIFolder addedPackageFolder = outputFolder.getFolder(addedPackagePath);\r", "-\t\t\t\t\t\tif (!addedPackageFolder.exists())\r", "-\t\t\t\t\t\t\taddedPackageFolder.create(true, true, null);\r", "-\t\t\t\t\t}\r", "+\t\t\t\t\tIFolder addedPackageFolder = outputFolder.getFolder(addedPackagePath);\r", "+\t\t\t\t\tif (!addedPackageFolder.exists())\r", "+\t\t\t\t\t\taddedPackageFolder.create(true, true, null);\r", "+\t\t\t\t\t// add dependents even when the package thinks it exists to be on the safe side\r", "-\t\t\t\t\t// add dependents even when the package thinks it exists to be on the safe side\r", "-\t\t\t\t\tif (hasSeparateOutputFolder) {\r", "-\t\t\t\t\t\tIFolder removedPackageFolder = outputFolder.getFolder(removedPackagePath);\r", "-\t\t\t\t\t\tif (removedPackageFolder.exists() && canRemovePackage(removedPackagePath))\r", "-\t\t\t\t\t\t\tremovedPackageFolder.delete(true, null);\r", "+\t\t\t\t\tIFolder removedPackageFolder = outputFolder.getFolder(removedPackagePath);\r", "+\t\t\t\t\tfor (int i = 0, length = sourceFolders.length; i < length; i++) {\r", "+\t\t\t\t\t\tif (sourceFolders[i].findMember(removedPackagePath) != null) {\r", "+\t\t\t\t\t\t\t// only a package fragment was removed, same as removing multiple source files\r", "+\t\t\t\t\t\t\tif (!removedPackageFolder.exists())\r", "+\t\t\t\t\t\t\t\tremovedPackageFolder.create(true, true, null);\r", "+\t\t\t\t\t\t\tIResourceDelta[] removedChildren = sourceDelta.getAffectedChildren();\r", "+\t\t\t\t\t\t\tfor (int j = 0, rlength = removedChildren.length; j < rlength; j++)\r", "+\t\t\t\t\t\t\t\tfindSourceFiles(removedChildren[j], sourceFolderSegmentCount);\r", "+\t\t\t\t\t\t\treturn;\r", "+\t\t\t\t\t\t}\r", "-\t\t\t\t\tnewState.removePackage(sourceDelta);\r", "+\t\t\t\t\tif (removedPackageFolder.exists())\r", "+\t\t\t\t\t\tremovedPackageFolder.delete(true, null);\r", "+\t\t\t\t\tnewState.removePackage(sourceDelta);\r", "-\t\t\t\t\t\tIResource classFile = outputFolder.getFile(typePath.addFileExtension(JavaBuilder.CLASS_EXTENSION));\r", "-\t\t\t\t\t\tif (classFile.exists()) {\r", "-\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\t\tSystem.out.println(\"Deleting class file of removed file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\tclassFile.delete(true, null);\r", "+\t\t\t\t\t\tchar[][] definedTypeNames = newState.getDefinedTypeNamesFor(location.toString());\r", "+\t\t\t\t\t\tif (definedTypeNames == null) {\r", "+\t\t\t\t\t\t\tremoveClassFile(typePath);\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tIPath packagePath = typePath.removeLastSegments(1);\r", "+\t\t\t\t\t\t\tfor (int i = 0, length = definedTypeNames.length; i < length; i++)\r", "+\t\t\t\t\t\t\t\tremoveClassFile(packagePath.append(new String(definedTypeNames[i])));\r", "-\t\t\t\t\t\tchar[][] additionalTypeNames = newState.getAdditionalTypeNamesFor(location.toString());\r", "-\t\t\t\t\t\tif (additionalTypeNames != null) {\r", "-\t\t\t\t\t\t\tfor (int i = 0, length = additionalTypeNames.length; i < length; i++) {\r", "-\t\t\t\t\t\t\t\ttypePath = typePath.removeLastSegments(1).append(new String(additionalTypeNames[i]));\r", "-\t\t\t\t\t\t\t\tclassFile = outputFolder.getFile(typePath.addFileExtension(JavaBuilder.CLASS_EXTENSION));\r", "-\t\t\t\t\t\t\t\tif (classFile.exists()) {\r", "-\t\t\t\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\t\t\t\tSystem.out.println(\"Deleting class file of removed file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\t\t\t\t\t\tclassFile.delete(true, null);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\taddDependentsOf(typePath, true);\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t// add dependents even when the type thinks it does not exist to be on the safe side\r", "-\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed source file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\t\t\taddDependentsOf(typePath, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4973730d7d5e5ce3745ee12cdf7e00f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "3fa437321fe88b141d60a98c3b39cea46c7fbc44", "commitAfterChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int outputFolderSegmentCount)", "signatureAfterChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int outputFolderSegmentCount)", "diff": ["-\tIPath location = binaryDelta.getResource().getLocation();\r", "-\tString extension = location.getFileExtension();\r", "-\tif (extension == null) { // no extension indicates a folder\r", "-\t\tswitch (binaryDelta.getKind()) {\r", "-\t\t\tcase IResourceDelta.ADDED :\r", "-\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of added package \" + addedPackagePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(addedPackagePath, false);\r", "+\tIResource resource = binaryDelta.getResource();\r", "+\tIPath location = resource.getLocation();\r", "+\tswitch(resource.getType()) {\r", "+\t\tcase IResource.PROJECT :\r", "+\t\tcase IResource.FOLDER :\r", "+\t\t\tswitch (binaryDelta.getKind()) {\r", "+\t\t\t\tcase IResourceDelta.ADDED :\r", "+\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Add dependents of added package \" + addedPackagePath); //$NON-NLS-1$\r", "+\t\t\t\t\taddDependentsOf(addedPackagePath, false);\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\tcase IResourceDelta.REMOVED :\r", "+\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed package \" + removedPackagePath); //$NON-NLS-1$\r", "+\t\t\t\t\taddDependentsOf(removedPackagePath, false);\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\tcase IResourceDelta.CHANGED :\r", "+\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();\r", "+\t\t\t\t\tfor (int i = 0, length = children.length; i < length; ++i)\r", "+\t\t\t\t\t\tfindAffectedSourceFiles(children[i], outputFolderSegmentCount);\r", "+\t\t\t}\r", "+\t\t\treturn;\r", "+\t\tcase IResource.FILE :\r", "+\t\t\tif (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(location.getFileExtension())) {\r", "+\t\t\t\tIPath typePath = location.removeFirstSegments(outputFolderSegmentCount).removeFileExtension();\r", "+\t\t\t\tswitch (binaryDelta.getKind()) {\r", "+\t\t\t\t\tcase IResourceDelta.ADDED :\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase IResourceDelta.REMOVED :\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase IResourceDelta.CHANGED :\r", "+\t\t\t\t\t\tif ((binaryDelta.getFlags() & IResourceDelta.CONTENT) == 0)\r", "+\t\t\t\t\t\t\treturn; // skip it since it really isn't changed\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of changed class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "+\t\t\t\t}\r", "-\t\t\tcase IResourceDelta.REMOVED :\r", "-\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of removed package \" + removedPackagePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(removedPackagePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t\tcase IResourceDelta.CHANGED :\r", "-\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();\r", "-\t\t\t\tfor (int i = 0, length = children.length; i < length; ++i)\r", "-\t\t\t\t\tfindAffectedSourceFiles(children[i], outputFolderSegmentCount);\r", "-\t\t\t\treturn;\r", "-\t\t}\r", "-\t} else if (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(extension)) {\r", "-\t\tIPath typePath = location.removeFirstSegments(outputFolderSegmentCount).removeFileExtension();\r", "-\t\tswitch (binaryDelta.getKind()) {\r", "-\t\t\tcase IResourceDelta.ADDED :\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of added class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t\tcase IResourceDelta.REMOVED :\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of removed class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t\tcase IResourceDelta.CHANGED :\r", "-\t\t\t\tif ((binaryDelta.getFlags() & IResourceDelta.CONTENT) == 0)\r", "-\t\t\t\t\treturn; // skip it since it really isn't changed\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of changed class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t}\r", "+\t\t\t}\r"]}], "num": 13537}