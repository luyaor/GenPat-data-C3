{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1318d8ba832dc1bc9112e9c808b5c7fa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e838af6c8acad2ffa3ad1873e7f853d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f75c17944c4c71209b764f81c95e01660c006557", "commitAfterChange": "df0fa796190e96b7d9058439ec45269a2791bacf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void formatEmptyTypeDeclaration(boolean isFirst)", "signatureAfterChange": "  \tprivate void formatEmptyTypeDeclaration(boolean isFirst)", "diff": ["-\t\tif (this.preferences.remove_unnecessary_semicolon) {", "-\t\t\twhile(isSemiColon()) {", "-\t\t\t\tthis.scribe.consumeNextToken();", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t}", "-\t\t} else {", "-\t\t\twhile(isSemiColon()) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\t\tthis.scribe.printTrailingComment();", "-\t\t\t}", "-\t\t\tif (hasSemiColon && isFirst) {", "-\t\t\t\tthis.scribe.printNewLine();", "-\t\t\t}", "+\t\twhile(isSemiColon()) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printTrailingComment();", "+\t\t}", "+\t\tif (hasSemiColon && isFirst) {", "+\t\t\tthis.scribe.printNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76031155f08f2d3f7ccaa22e6755d9cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["+\t\tif (isSemiColon()) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tthis.scribe.printNewLine();", "+\t\t}", "+\t\t\t\tif (isSemiColon()) {", "+\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t}", "+\t\tif (isSemiColon()) {", "+\t\t\tthis.scribe.printNewLine();", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tthis.scribe.printNewLine();", "+\t\t}"]}], "num": 2251}