{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e03ad68891929e3e0f39aa2d11f6f6b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fa71a38dcb1760935ed33b903681235", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/CheckDebugAttributes.java", "commitBeforeChange": "94dcb6652f514256018e8c1f7dcc1acc7030201c", "commitAfterChange": "c1caadb3e97f0c5d02c6ad3748ed5e3373af3f00", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void execute() throws BuildException", "signatureAfterChange": " \t \tpublic void execute() throws BuildException", "diff": ["-\t\t\tthrow new BuildException(Util.getString(\"checkDebugAttributes.file.argument.cannot.be.null\")); //$NON-NLS-1$", "+\t\t\tthrow new BuildException(AntAdapterMessages.getString(\"checkDebugAttributes.file.argument.cannot.be.null\")); //$NON-NLS-1$", "-\t\t\tthrow new BuildException(Util.getString(\"checkDebugAttributes.property.argument.cannot.be.null\")); //$NON-NLS-1$", "+\t\t\tthrow new BuildException(AntAdapterMessages.getString(\"checkDebugAttributes.property.argument.cannot.be.null\")); //$NON-NLS-1$", "-\t\t\t\tthrow new BuildException(Util.getString(\"checkDebugAttributes.file.argument.must.be.a.classfile.or.a.jarfile\")); //$NON-NLS-1$", "+\t\t\t\tthrow new BuildException(AntAdapterMessages.getString(\"checkDebugAttributes.file.argument.must.be.a.classfile.or.a.jarfile\")); //$NON-NLS-1$", "-\t\t\tthrow new BuildException(Util.getString(\"checkDebugAttributes.ioexception.occured\") + this.file); //$NON-NLS-1$", "+\t\t\tthrow new BuildException(AntAdapterMessages.getString(\"checkDebugAttributes.ioexception.occured\") + this.file); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ba10f35a6b0818e6827f82dc6361af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/CheckDebugAttributes.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void execute() throws BuildException", "signatureAfterChange": " \t \tpublic void execute() throws BuildException", "diff": ["-\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(this.file)) {", "-\t\t\t\tZipFile jarFile = new ZipFile(this.file);", "+\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(this.file)) {", "+\t\t\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(this.file, IClassFileReader.ALL);", "+\t\t\t\thasDebugAttributes = checkClassFile(classFileReader);", "+\t\t\t} else {", "+\t\t\t\tZipFile jarFile = null;", "+\t\t\t\ttry {", "+\t\t\t\t\tjarFile = new ZipFile(this.file);", "+\t\t\t\t} catch (ZipException e) {", "+\t\t\t\t\tthrow new BuildException(AntAdapterMessages.getString(\"checkDebugAttributes.file.argument.must.be.a.classfile.or.a.jarfile\")); //$NON-NLS-1$", "+\t\t\t\t}", "-\t\t\t} else if (org.eclipse.jdt.internal.compiler.util.Util.isClassFileName(this.file)) {", "-\t\t\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(this.file, IClassFileReader.ALL);", "-\t\t\t\thasDebugAttributes = checkClassFile(classFileReader);", "-\t\t\t} else {", "-\t\t\t\tthrow new BuildException(AntAdapterMessages.getString(\"checkDebugAttributes.file.argument.must.be.a.classfile.or.a.jarfile\")); //$NON-NLS-1$"]}], "num": 7224}