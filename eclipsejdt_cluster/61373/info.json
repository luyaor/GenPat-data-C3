{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "780476b7fc67a5a782cb47835993be80", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9be4142a40d7fcc4ed3bd2ed4245f24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "1dc6df2cba1e3f21897002448cbe5ca7ad21d269", "commitAfterChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tboolean shouldInsertInScope = true;", "-\t\t\t\tshouldInsertInScope = false;", "-\t\tif (shouldInsertInScope) {", "-\t\t\tif ((modifiers & ClassFileConstants.AccFinal)!= 0 && this.initialization == null) {", "-\t\t\t\tmodifiers |= ExtraCompilerModifiers.AccBlankFinal;", "-\t\t\t}", "-\t\t\tthis.binding = new LocalVariableBinding(this, variableType, modifiers, false);", "-\t\t\tscope.addLocalVariable(binding);", "-\t\t\tthis.binding.setConstant(Constant.NotAConstant);", "-\t\t\t// allow to recursivelly target the binding....", "-\t\t\t// the correct constant is harmed if correctly computed at the end of this method", "+\t\tif ((modifiers & ClassFileConstants.AccFinal)!= 0 && this.initialization == null) {", "+\t\t\tmodifiers |= ExtraCompilerModifiers.AccBlankFinal;", "+\t\tthis.binding = new LocalVariableBinding(this, variableType, modifiers, false);", "+\t\tscope.addLocalVariable(binding);", "+\t\tthis.binding.setConstant(Constant.NotAConstant);", "+\t\t// allow to recursivelly target the binding....", "+\t\t// the correct constant is harmed if correctly computed at the end of this method", "-\t\t\tif (binding != null) {", "-\t\t\t\t// check for assignment with no effect", "-\t\t\t\tif (this.binding == Assignment.getDirectBinding(this.initialization)) {", "-\t\t\t\t\tscope.problemReporter().assignmentHasNoEffect(this, this.name);", "-\t\t\t\t}", "-\t\t\t\t// change the constant in the binding when it is final", "-\t\t\t\t// (the optimization of the constant propagation will be done later on)", "-\t\t\t\t// cast from constant actual type to variable type", "-\t\t\t\tbinding.setConstant(", "-\t\t\t\t\tbinding.isFinal()", "-\t\t\t\t\t\t? initialization.constant.castTo((variableType.id << 4) + initialization.constant.typeID())", "-\t\t\t\t\t\t: Constant.NotAConstant);", "+\t\t\t// check for assignment with no effect", "+\t\t\tif (this.binding == Assignment.getDirectBinding(this.initialization)) {", "+\t\t\t\tscope.problemReporter().assignmentHasNoEffect(this, this.name);", "+\t\t\t// change the constant in the binding when it is final", "+\t\t\t// (the optimization of the constant propagation will be done later on)", "+\t\t\t// cast from constant actual type to variable type", "+\t\t\tbinding.setConstant(", "+\t\t\t\tbinding.isFinal()", "+\t\t\t\t\t? initialization.constant.castTo((variableType.id << 4) + initialization.constant.typeID())", "+\t\t\t\t\t: Constant.NotAConstant);", "-\t\tif (this.binding != null)", "-\t\t\tresolveAnnotations(scope, this.annotations, this.binding);", "+\t\tresolveAnnotations(scope, this.annotations, this.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d8c40c084d49a6307fdce48242d52d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "e54d50080648af5488fa9c5b477fd11dcd157227", "commitAfterChange": "dbcb3792ecd2123b1ae06c35b045d6b44d7f2a00", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \t\tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \t\tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\tboolean resolvingHierarchy = false;", "-\t\t\t\t\t\t\t\tresolvingHierarchy = true;", "-\t\t\t\t\t\t\t\tif (resolvingHierarchy)", "-\t\t\t\t\t\t\t\t\t// class X <T> { class MX extends T {}}", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, IllegalSuperTypeVariable); // cannot bind to a type variable"]}], "num": 61373}