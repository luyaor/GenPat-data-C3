{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d97be3cdf0b385dccbb6f3939aaf2e0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5697831ec022a312be2886bf7be86943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CharacterLiteral.java", "commitBeforeChange": "801b41050572fefc84dbdd642dfdb273c04ef277", "commitAfterChange": "8b9ffaebfbfce6f9ff7096c3755e2efc7cdd96d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic char charValue()", "signatureAfterChange": "  \tpublic char charValue()", "diff": ["-\t\t\t\t\tif (Character.isDigit(nextChar)) {", "-\t\t\t\t\t\tint number = Character.getNumericValue(nextChar);", "-\t\t\t\t\t\tnextChar = (char) scanner.getNextChar();", "-\t\t\t\t\t\tif (nextChar == -1) {", "-\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"illegal character literal\");//$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (nextChar != '\\'') {", "-\t\t\t\t\t\t\tif (!Character.isDigit(nextChar)) {", "-\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"illegal character literal\");//$NON-NLS-1$", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tnumber = (number * 8) + Character.getNumericValue(nextChar);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tif (ScannerHelper.isDigit(nextChar)) {", "+\t\t\t\t\t\t\tint number = ScannerHelper.getNumericValue(nextChar);", "-\t\t\t\t\t\t\t\tif (!Character.isDigit(nextChar)) {", "+\t\t\t\t\t\t\t\tif (!ScannerHelper.isDigit(nextChar)) {", "-\t\t\t\t\t\t\t\tnumber = (number * 8) + Character.getNumericValue(nextChar);", "+\t\t\t\t\t\t\t\tnumber = (number * 8) + ScannerHelper.getNumericValue(nextChar);", "+\t\t\t\t\t\t\t\tnextChar = (char) scanner.getNextChar();", "+\t\t\t\t\t\t\t\tif (nextChar == -1) {", "+\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"illegal character literal\");//$NON-NLS-1$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (nextChar != '\\'') {", "+\t\t\t\t\t\t\t\t\tif (!ScannerHelper.isDigit(nextChar)) {", "+\t\t\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"illegal character literal\");//$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tnumber = (number * 8) + ScannerHelper.getNumericValue(nextChar);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn (char) number;\t\t\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"illegal character literal\");//$NON-NLS-1$", "-\t\t\t\t\t\treturn (char) number;\t\t\t", "-\t\t\t\t\t} else {", "+\t\t\t\t\t} catch (InvalidInputException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a86459a58667a8b39315c2ab017ce3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Util.java", "commitBeforeChange": "43f95446ac14a8fdfe95af27d5d4d3e72461218b", "commitAfterChange": "c2203522496b5a0818a75c7d49d2924bc1086f70", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static char[] getInputStreamAsCharArray(InputStream stream, int length, String encoding) \t\tthrows IOException", "signatureAfterChange": " \tpublic static char[] getInputStreamAsCharArray(InputStream stream, int length, String encoding) \t\tthrows IOException", "diff": ["-\t\treader = encoding == null", "-\t\t\t\t\t? new InputStreamReader(stream)", "-\t\t\t\t\t: new InputStreamReader(stream, encoding);", "+\t\ttry {", "+\t\t\treader = encoding == null", "+\t\t\t\t\t\t? new InputStreamReader(stream)", "+\t\t\t\t\t\t: new InputStreamReader(stream, encoding);", "+\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t// encoding is not supported", "+\t\t\treader =  new InputStreamReader(stream);", "+\t\t}"]}], "num": 32037}