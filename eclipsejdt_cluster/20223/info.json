{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb887c4b0d8244a7ef3df61cea9104c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06db6f4dcd38024ca34723483302b2e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 235, "signatureBeforeChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "signatureAfterChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "diff": ["-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t        typesAsString(false, invocationArguments, false),", "+\t\t\t\t        typesAsString(invocationArguments, false),", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t        typesAsString(false, invocationArguments, true),", "+\t\t\t\t        typesAsString(invocationArguments, true),", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t\t\t\ttypesAsString(false, shownConstructor.typeVariables, false),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t\t\t\ttypesAsString(shownConstructor.typeVariables, false),", "+\t\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t\t\t\ttypesAsString(false, shownConstructor.typeVariables, true),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\t\t\ttypesAsString(shownConstructor.typeVariables, true),", "+\t\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, false),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t\t\ttypesAsString(((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, false),", "+\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, true),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\t\ttypesAsString(((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, true),", "+\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false)},", "-\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), typesAsString(targetConstructor, false)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), typesAsString(targetConstructor, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec822daa1aba8ad57046909190dc3c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "signatureAfterChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "diff": ["-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t        typesAsString(false, invocationArguments, false),", "+\t\t\t\t        typesAsString(invocationArguments, false),", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t        typesAsString(false, invocationArguments, true),", "+\t\t\t\t        typesAsString(invocationArguments, true),", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t\t\t\ttypesAsString(false, shownConstructor.typeVariables, false),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t\t\t\ttypesAsString(shownConstructor.typeVariables, false),", "+\t\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t\t\t\ttypesAsString(false, shownConstructor.typeVariables, true),", "-\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\t\t\ttypesAsString(shownConstructor.typeVariables, true),", "+\t\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, false),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t\t\ttypesAsString(((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, false),", "+\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, true),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\t\ttypesAsString(((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, true),", "+\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false),", "+\t\t\t\t        typesAsString(shownConstructor, false),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "+\t\t\t\t        typesAsString(targetConstructor, false) },", "-\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true),", "+\t\t\t\t        typesAsString(shownConstructor, true),", "-\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t        typesAsString(targetConstructor, true) },", "-\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false)},", "-\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), typesAsString(shownConstructor, false)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), typesAsString(shownConstructor, true)},"]}], "num": 20223}