{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90f81b5aa804f37f35d56f8ede3e71bf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c135e9dc07dff61ede8a655a5dfd5363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "commitAfterChange": "41dd795c862e06f6f8c0a69203da8ac4a4f0da5d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "signatureAfterChange": " \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "diff": ["-\t\tif (assignment.expression != null) {", "-\t\t\tflowInfo =", "-\t\t\t\tassignment", "-\t\t\t\t\t.expression", "-\t\t\t\t\t.analyseCode(currentScope, flowContext, flowInfo)", "-\t\t\t\t\t.unconditionalInits();", "-\t\t}", "+\t\t", "+\t\tif (assignment.expression != null) {", "+\t\t\tflowInfo =", "+\t\t\t\tassignment", "+\t\t\t\t\t.expression", "+\t\t\t\t\t.analyseCode(currentScope, flowContext, flowInfo)", "+\t\t\t\t\t.unconditionalInits();", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62952cc6bf46a8eea946b1f603cc54a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean compoundAssignment)", "signatureAfterChange": "  \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean compoundAssignment)", "diff": ["-\t\t} else {", "-\t\t\treturn assignment", "-\t\t\t\t.expression", "-\t\t\t\t.analyseCode(", "-\t\t\t\t\tcurrentScope,", "-\t\t\t\t\tflowContext,", "-\t\t\t\t\tanalyseCode(currentScope, flowContext, flowInfo).unconditionalInits())", "-\t\t\t\t.unconditionalInits();", "+\t\treturn assignment", "+\t\t\t.expression", "+\t\t\t.analyseCode(", "+\t\t\t\tcurrentScope,", "+\t\t\t\tflowContext,", "+\t\t\t\tanalyseCode(currentScope, flowContext, flowInfo).unconditionalInits())", "+\t\t\t.unconditionalInits();"]}], "num": 66613}