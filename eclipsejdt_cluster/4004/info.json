{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc00ce73073ec708edc245b76b75e50b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "491deca8facb292e385b857ad8373cdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "signatureAfterChange": " public void locateMatches(MatchLocator locator, ClassFile classFile, IBinaryType info) throws CoreException", "diff": ["+\t\t\t\t\t\tchar[] methodSignature = method.genericSignature();", "+\t\t\t\t\t\tif (methodSignature == null) methodSignature = method.signature();", "-\t\t\t\t\t\t\tCharOperation.toStrings(Signature.getParameterTypes(convertClassFileFormat(method.signature()))));", "+\t\t\t\t\t\t\tCharOperation.toStrings(Signature.getParameterTypes(convertClassFileFormat(methodSignature))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1090747a71d91163874f5c332b2fab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "133637902ff6fb378bf39fc58702c75f6ada75f9", "commitAfterChange": "578bacf5897125d4f0c0b3fc7b65eea2b34abec3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private MethodBinding createMethod(IBinaryMethod method)", "signatureAfterChange": " private MethodBinding createMethod(IBinaryMethod method)", "diff": ["-\t\t\t\twhile ((nextChar = methodSignature[++index]) != ';');", "+\t\t\t\twhile ((nextChar = methodSignature[++index]) != ';'){/*empty*/}", "-\t\t\twhile ((nextChar = methodSignature[++end]) == '[');", "+\t\t\twhile ((nextChar = methodSignature[++end]) == '['){/*empty*/}", "-\t\t\t\twhile ((nextChar = methodSignature[++end]) != ';');", "+\t\t\t\twhile ((nextChar = methodSignature[++end]) != ';'){/*empty*/}"]}], "num": 4004}