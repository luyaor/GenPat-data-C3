{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30515a4103a80ca591e8793427e30a90", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86324a8eebaed5a5ccd0502afd0ad612", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "\t\t\t\r \tprivate void computeExpandedClasspath(\r \t\tJavaProject initialProject, \r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError,\r \t\tHashSet visitedProjects, \r \t\tObjectVector accumulatedEntries) throws JavaModelException", "signatureAfterChange": "\t\t\t\r \tprivate void computeExpandedClasspath(\r \t\tJavaProject initialProject, \r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError,\r \t\tHashSet visitedProjects, \r \t\tObjectVector accumulatedEntries) throws JavaModelException", "diff": ["-\t\tif (visitedProjects.contains(this)) return; // break cycles if any\r", "+\t\tif (visitedProjects.contains(this)){\r", "+\t\t\treturn; // break cycles if any\r", "+\t\t}\r", "-\t\tIClasspathEntry[] immediateClasspath = getResolvedClasspath(ignoreUnresolvedVariable, generateMarkerOnError);\r", "+\t\tif (generateMarkerOnError && !this.equals(initialProject)){\r", "+\t\t\tgenerateMarkerOnError = false;\r", "+\t\t}\r", "+\t\tIClasspathEntry[] immediateClasspath = \r", "+\t\t\tgetResolvedClasspath(ignoreUnresolvedVariable, generateMarkerOnError);\r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc06ef17ecc64c7e7783b5a54f8cd8d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/negative/NegativeModelProc.java", "commitBeforeChange": "347a15ddb09354fd82312f43e8a959f68c39e906", "commitAfterChange": "1203ec285e9510454e7eee6b9217d8d694a24e95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t\tif (enable > 4) {", "-\t\t\t\treportError(\"Option value must be an integer 1 to 4\");", "+\t\t\tif (enable > 5) {", "+\t\t\t\treportError(\"Option value must be an integer 1 to 5\");", "+\t\t\t\ttestNegative5 = enable == 5;", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\tif (testNegative5 && !checkNegative5()) {"]}], "num": 21268}