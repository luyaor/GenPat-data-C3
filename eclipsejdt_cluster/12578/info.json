{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60f3d45cdaa0a9e3818cc5a6d241d774", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1740702e8b61cee82866ef69fbf31584", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void testBug400905_0002() throws CoreException", "signatureAfterChange": " public void testBug400905_0002() throws CoreException", "diff": ["-\t\t\t\"src/b400905/X.java int void b400905.X.main(String[]):<lambda>#1.lambda$1() [() ->] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java int void b400905.X.main(String[]):<lambda>#2.lambda$2() [()  ->] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java int void b400905.X.main(String[]):<lambda>#3.lambda$3() [()->] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b400905/X.java int I b400905.X.bar():<lambda>#4.lambda$4() [() ->] EXACT_MATCH\");\t", "+\t\t\t\"src/b400905/X.java int void b400905.X.main(String[]):Lambda(I).foo() [() ->] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b400905/X.java int void b400905.X.main(String[]):Lambda(I).foo() [()  ->] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b400905/X.java int void b400905.X.main(String[]):Lambda(I).foo() [()->] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b400905/X.java int I b400905.X.bar():Lambda(I).foo() [() ->] EXACT_MATCH\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e4dae3611fd6976b768cf9530d92d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "a4c3ac4c4476b0535c9f4bcee41fc3bc1a1adef9", "commitAfterChange": "67766e5b27ea79987add5b8cee1657ec3cbfbedb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void test006()", "signatureAfterChange": "  \tpublic void test006()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tnew Y().test(1, 1);\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"\tnew Y().test(1, 1);\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "-\t\t\t\"\tnew Y().test((byte) 1, 1);\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"\tnew Y().test((byte) 1, 1);\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86bc1c6359d16da75f4a041170aebeb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "5059f9b5e9c30bd6d8a194de8a3beebb3b2393df", "commitAfterChange": "4606a25c8dcce8fd41e1af97ba46acd40c63e59b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["-\t\t\tbuffer.append(\"class\"); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"class \"); //$NON-NLS-1$", "-\t\t\tbuffer.append(\"interface\"); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"interface \"); //$NON-NLS-1$", "-\t\t\tbuffer.append(\"extends\"); //$NON-NLS-1$", "+\t\t\tbuffer.append(\" extends \"); //$NON-NLS-1$", "-\t\t\tbuffer.append(\"implements\"); //$NON-NLS-1$", "+\t\t\tbuffer.append(\" implements \"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e24377f61dd6e733d140c366d08933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "bce0dbd9dd489d3038652b337b4b76bb1f2246a4", "commitAfterChange": "f04ae71cc7d18b0e34f184a3124e4f7f58dafcf3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\t\t\"The field X.Test1.o is never read locally\\n\" +", "+\t\t\"The value of the field X.Test1.o is not used\\n\" +", "-\t\t\"The field X.Test2.o is never read locally\\n\" +", "+\t\t\"The value of the field X.Test2.o is not used\\n\" +", "-\t\t\"The field X.Test5.o is never read locally\\n\" +", "+\t\t\"The value of the field X.Test5.o is not used\\n\" +", "-\t\t\"The field X.Test6.o is never read locally\\n\" +", "+\t\t\"The value of the field X.Test6.o is not used\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86e2a0a3dd80a303ca5a78a4a88291c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void testStringParameterizedMultipleArguments02() throws CoreException", "signatureAfterChange": " \tpublic void testStringParameterizedMultipleArguments02() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.gen [Generic.Member] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.gen [Generic.Member] EQUIVALENT_RAW_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.qgen [Generic.Member] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R4.java g1.t.m.ref.R4.qgen [Generic.Member] EQUIVALENT_RAW_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen [Generic.Member] EQUIVALENT_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen [Generic.Member] EQUIVALENT_ERASURE_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.gen [Generic.Member] EQUIVALENT_RAW_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R4.java g1.t.s.ref.R4.qgen [Generic.Member] EQUIVALENT_RAW_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6d3e3f3613095e43eb655229a5250e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testBug405125a() throws JavaModelException", "signatureAfterChange": " public void testBug405125a() throws JavaModelException", "diff": ["-\t\t\t\t\"\tstatic Foo f = (int x5, int x2) -> tw\\n\" +", "+\t\t\t\t\"\tstatic Foo f = (int x5, int x2) -> bar\\n\" +", "-\t\t\t\t\"  \tstatic int two () { return 2; }\\n\" +", "+\t\t\t\t\"  \tstatic int bars () { return 2; }\\n\" +", "-\t    String completeBehind = \"(int x5, int x2) -> tw\";", "+\t    String completeBehind = \"(int x5, int x2) -> bar\";", "-\t    \t\"two[METHOD_REF]{two(), LB;, ()I, two, null, 27}\",", "+\t    \t\"bars[METHOD_REF]{bars(), LB;, ()I, bars, null, 27}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd911d6610c545da987c15a958ad986d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTestForMethod.java", "commitBeforeChange": "1dae9bed0f28b20df545c773f52fb80596048ada", "commitAfterChange": "73e6c55b6cebcb032c8128286708483f86167b64", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "  \tpublic void test127()", "signatureAfterChange": "  \tpublic void test127()", "diff": ["-\t\t\t\t+ \"\t               ^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                ^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t               ^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                ^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t               ^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                ^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t               ^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                ^^^^^^^^^\\n\""]}], "num": 12578}