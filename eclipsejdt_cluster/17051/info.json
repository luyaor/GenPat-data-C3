{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e230bf44ebf4691fc8ade6ecb02898ac", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ddf88da1303161a1e0208413c7502ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "9f8931bf92b7966fbd8c101a448f79f7965fbbf9", "commitAfterChange": "3bf5bab95449ec256a601c2551910573083178b4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["-protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end) {", "+protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {", "-\t\t\tif (methods[i].getElementName().equals(name) && methods[i].getParameterTypes().length == parameterTypeNames.length) {", "-\t\t\t\tif(isDeclaration) {", "-\t\t\t\t\tISourceRange range = methods[i].getNameRange();", "-\t\t\t\t\tif(range.getOffset() <= start && range.getOffset() + range.getLength() >= end) {", "-\t\t\t\t\t\taddElement(methods[i]);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\taddElement(methods[i]);", "-\t\t\t\t}", "+\t\t\tif (methods[i].getElementName().equals(name)", "+\t\t\t\t\t&& methods[i].getParameterTypes().length == parameterTypeNames.length) {", "+\t\t\t\taddElement(methods[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c385367dc9ef8be0ccb2a6ccfcbbbde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "828585e7463daa7907691134b9be6a40907a40c0", "commitAfterChange": "d22f2534ad71e981b8a20b49f3277de91c1c0a0c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": " protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end)", "diff": ["-protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {", "+protected void acceptSourceMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isDeclaration, int start, int end) {", "-\t\t\t\taddElement(methods[i]);", "+\t\t\t\tif(isDeclaration) {", "+\t\t\t\t\tISourceRange range = methods[i].getNameRange();", "+\t\t\t\t\tif(range.getOffset() <= start && range.getOffset() + range.getLength() >= end) {", "+\t\t\t\t\t\taddElement(methods[i]);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\taddElement(methods[i]);", "+\t\t\t\t}"]}], "num": 17051}