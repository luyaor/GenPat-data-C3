{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9767dfd79382f37a397e3fa2d43628b5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b87a526eb1ad03bd7ab8441a1ebb0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/IntersectionCastTypeBinding.java", "commitBeforeChange": "ddff16f6a6b8fee88d497b4653d14d58ccda81b4", "commitAfterChange": "128a99659b73df0d65c1b7965233f291b8bbcedc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope)", "signatureAfterChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope)", "diff": ["+\t\tif (this.singleAbstractMethod != null)", "+\t\t\treturn this.singleAbstractMethod;", "-\t\t\t\t\t\treturn new ProblemMethodBinding(TypeConstants.ANONYMOUS_METHOD, null, ProblemReasons.IntersectionHasMultipleFunctionalInterfaces);", "+\t\t\t\t\t\treturn this.singleAbstractMethod = new ProblemMethodBinding(TypeConstants.ANONYMOUS_METHOD, null, ProblemReasons.IntersectionHasMultipleFunctionalInterfaces);", "-\t\treturn sam; // I don't see a value in building the notional interface described in 9.8 - it appears just pedantic/normative - perhaps it plays a role in wildcard parameterized types ?", "+\t\treturn this.singleAbstractMethod = sam; // I don't see a value in building the notional interface described in 9.8 - it appears just pedantic/normative - perhaps it plays a role in wildcard parameterized types ?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5efe350ceb9b560123080958268cfe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "56484abf3afec06a3b2fe9a53e3d4859e1a90d5d", "commitAfterChange": "c98606727e89fdf50e483c7870bb4651b90d6014", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int hashCode()", "signatureAfterChange": " \tpublic int hashCode()", "diff": ["-\t\treturn this.left.hashCode() + this.right.hashCode() + this.relation;", "+\t\tif (this.haveHashCode) return this.hashCode;", "+\t\tthis.haveHashCode = true;", "+\t\treturn this.hashCode = this.left.hashCode() + this.right.hashCode() + this.relation;"]}], "num": 31135}