{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e3384d14b4a111705e89a5c88aec1be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b479921bb8b5e6edafb7ec11597b8b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "4f0e2d1dce5fad13089e3fb4fcd43ccba005c83c", "commitAfterChange": "698c26d613731d0111dbddcb370ca40364ac7e62", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 137, "signatureBeforeChange": "  \tprivate void findVariableNames(char[] name, TypeReference type , char[][] discouragedNames, char[][] forbiddenNames, int kind, int modifiers)", "signatureAfterChange": "  \tprivate void findVariableNames(char[] name, TypeReference type , char[][] discouragedNames, char[][] forbiddenNames, int kind, int modifiers)", "diff": ["+\t\t\t\t", "+\t\t\t\tif (tb.isParameterizedType() &&", "+\t\t\t\t\t\ttb.findSuperTypeOriginatingFrom(TypeIds.T_JavaUtilCollection, false) != null) {", "+\t\t\t\t\tParameterizedTypeBinding ptb = ((ParameterizedTypeBinding) tb);", "+\t\t\t\t\tTypeBinding[] arguments = ptb.arguments;", "+\t\t\t\t\tif (arguments != null && arguments.length == 1) {", "+\t\t\t\t\t\tTypeBinding argument = arguments[0];", "+\t\t\t\t\t\tfindVariableNameForCollection(", "+\t\t\t\t\t\t\tname,", "+\t\t\t\t\t\t\targument.leafComponentType().qualifiedPackageName(),", "+\t\t\t\t\t\t\targument.leafComponentType().qualifiedSourceName(),", "+\t\t\t\t\t\t\targument.leafComponentType().sourceName(),", "+\t\t\t\t\t\t\ttb,", "+\t\t\t\t\t\t\tdiscouragedNames,", "+\t\t\t\t\t\t\tforbiddenNames,", "+\t\t\t\t\t\t\tkind,", "+\t\t\t\t\t\t\tmodifiers);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11e00527be690352aca374e18dcbae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "238b301df7cb5125a4e6d087ba6269a3cf07b5f3", "commitAfterChange": "3aebcb4b2371750285802175f3c95756763f800e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "          public String toString()", "diff": ["-    \tif( binding.isRawType() || !binding.isParameterizedType() )", "-    \t\treturn getQualifiedName();", "-    \t", "-    \tfinal StringBuilder buffer = new StringBuilder();", "-    \tbuffer.append(getQualifiedName());", "-    \tfinal ITypeBinding[] typeArgs = binding.getTypeArguments();", "-    \tif(typeArgs != null){", "-    \t\tbuffer.append('<');    \t", "-\t    \tfor( int i=0; i<typeArgs.length; i++ ){", "-\t    \t\tif( i != 0 )", "-\t    \t\t\tbuffer.append(',');", "-\t    \t\tbuffer.append(typeArgs[i].getName());", "-\t    \t}", "-\t    \tbuffer.append('>');", "-    \t}", "-    \t", "-        return buffer.toString();\t\t", "+\t\treturn binding.getQualifiedName();    "]}], "num": 48290}