{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de04f24076a0f0f851bb99bf8afecbee", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9d56d90034e9c85bf7ad93110646ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\treturn one.typeVariables != NoTypeVariables && !(substituteTwo instanceof ParameterizedGenericMethodBinding);", "+\treturn one.typeVariables != Binding.NO_TYPE_VARIABLES && !(substituteTwo instanceof ParameterizedGenericMethodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f61ce7857ba1d09e1e05286fce9395e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e2422311047b85902980920dda1eeedf124d520c", "commitAfterChange": "c107fdebcaaafcbea0a28f68e9b229afba9f7c4f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " boolean isSubstituteParameterSubsignature(MethodBinding method, MethodBinding substituteMethod)", "signatureAfterChange": " boolean isSubstituteParameterSubsignature(MethodBinding method, MethodBinding substituteMethod)", "diff": ["+\t\tif (method.typeVariables != Binding.NO_TYPE_VARIABLES)", "+\t\t\treturn !((ParameterizedGenericMethodBinding) substituteMethod).isRaw;", "-\t\treturn ! (hasGenericParameter(method) && method.typeVariables == Binding.NO_TYPE_VARIABLES);", "+\t\treturn !hasGenericParameter(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f99fafa87e653bef0f0bd6916253ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "451a4290b08482db72c12f90b576f09a8da8fda2", "commitAfterChange": "68032f015aeece9b1e17b3f98b4f78c4d8098b12", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tif (exactMethod != null && exactMethod.typeVariables == Binding.NO_TYPE_VARIABLES) {", "+\t\tif (exactMethod != null && exactMethod.typeVariables == Binding.NO_TYPE_VARIABLES && !exactMethod.isBridge()) {", "+\t\t\t// or find an inherited method when the exact match is to a bridge method"]}], "num": 50456}