{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01715eaa978147351a3721200b26da78", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aecac93864a29b60be7cc1acbe06c3d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "42a9a4cb841336faccb205e658313c3d0fc8eea9", "commitAfterChange": "5f97e12f962e721b3d706fc12b2c5617a3adbc7d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t// if this TryStatement sits inside another TryStatement,", "-\t\t\t// report into the initsOnFinally of the outer try-block.", "-\t\t\tflowContext.initsOnFinally = ((FinallyFlowContext)flowContext).tryContext.initsOnFinally;", "+\t\t\t// if this TryStatement sits inside another TryStatement, establish the wiring so that", "+\t\t\t// FlowContext.markFinallyNullStatus can report into initsOnFinally of the outer try context:", "+\t\t\tFinallyFlowContext finallyContext = (FinallyFlowContext) flowContext;", "+\t\t\tfinallyContext.outerTryContext = finallyContext.tryContext;", "+\t\thandlingContext.conditionalLevel = 0; // start collection initsOnFinally", "+\t\t\t\tflowContext.conditionalLevel++;", "+\t\t\t\tflowContext.conditionalLevel--;", "-\t\tif (flowContext.initsOnFinally != null) {", "-\t\t\tflowContext.mergeFinallyNullInfo(handlingContext.initsOnFinally);", "-\t\t}", "+\t\tflowContext.mergeFinallyNullInfo(handlingContext.initsOnFinally);", "-\t\t\t// if this TryStatement sits inside another TryStatement,", "-\t\t\t// let the nested context report into the initsOnFinally of the outer try-block.", "-\t\t\tinsideSubContext.initsOnFinally = ((FinallyFlowContext)flowContext).tryContext.initsOnFinally;", "+\t\t\t// if this TryStatement sits inside another TryStatement, establish the wiring so that", "+\t\t\t// FlowContext.markFinallyNullStatus can report into initsOnFinally of the outer try context:", "+\t\t\tinsideSubContext.outerTryContext = ((FinallyFlowContext)flowContext).tryContext;", "+\t\tinsideSubContext.initsOnFinally = handlingContext.initsOnFinally; ", "+\t\thandlingContext.conditionalLevel = 0; // start collection initsOnFinally only after analysing the finally block", "+\t\t\t\tinsideSubContext.conditionalLevel = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60ee2d029173013a729f3050c5bd367", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "90e0c31f61fe8011c719b8c9263ccba647bab244", "commitAfterChange": "fa66834f9f4ec8541916655f7830d28cd8630692", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t// if this TryStatement sits inside another TryStatement,", "-\t\t\t// report into the initsOnFinally of the outer try-block.", "-\t\t\tflowContext.initsOnFinally = ((FinallyFlowContext)flowContext).tryContext.initsOnFinally;", "+\t\t\t// if this TryStatement sits inside another TryStatement, establish the wiring so that", "+\t\t\t// FlowContext.markFinallyNullStatus can report into initsOnFinally of the outer try context:", "+\t\t\tFinallyFlowContext finallyContext = (FinallyFlowContext) flowContext;", "+\t\t\tfinallyContext.outerTryContext = finallyContext.tryContext;", "+\t\thandlingContext.conditionalLevel = 0; // start collection initsOnFinally", "+\t\t\t\tflowContext.conditionalLevel++;", "+\t\t\t\tflowContext.conditionalLevel--;", "-\t\tif (flowContext.initsOnFinally != null) {", "-\t\t\tflowContext.mergeFinallyNullInfo(handlingContext.initsOnFinally);", "-\t\t}", "+\t\tflowContext.mergeFinallyNullInfo(handlingContext.initsOnFinally);", "-\t\t\t// if this TryStatement sits inside another TryStatement,", "-\t\t\t// let the nested context report into the initsOnFinally of the outer try-block.", "-\t\t\tinsideSubContext.initsOnFinally = ((FinallyFlowContext)flowContext).tryContext.initsOnFinally;", "+\t\t\t// if this TryStatement sits inside another TryStatement, establish the wiring so that", "+\t\t\t// FlowContext.markFinallyNullStatus can report into initsOnFinally of the outer try context:", "+\t\t\tinsideSubContext.outerTryContext = ((FinallyFlowContext)flowContext).tryContext;", "+\t\tinsideSubContext.initsOnFinally = handlingContext.initsOnFinally; ", "+\t\thandlingContext.conditionalLevel = 0; // start collection initsOnFinally only after analysing the finally block", "+\t\t\t\tinsideSubContext.conditionalLevel = 1;"]}], "num": 6515}