{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4166033571cf7f5f2588da99eb68da5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a104bb5e2a5c518f07c5e28b9f60abb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "commitAfterChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic Expression parseExpression(char[] source, Map settings)", "signatureAfterChange": "  \tpublic static Expression parseExpression(char[] source, Map settings, boolean recordParsingInformation)", "diff": ["-\tpublic Expression parseExpression(char[] source, Map settings) {", "-\t\treturn parseExpression(source, 0, source.length, settings);", "+\tpublic static Expression parseExpression(char[] source, Map settings, boolean recordParsingInformation) {", "+\t\treturn parseExpression(source, 0, source.length, settings, recordParsingInformation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a24feec9d4ee799d22f84cf12968e762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "8abe8838e4f5c3f829e8d4a716d1798a8812906f", "commitAfterChange": "4ec13193441f3db672067c7cfb76899f166d78f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethodElementInfo methodInfo, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethodElementInfo methodInfo, CompilationResult compilationResult)", "diff": ["-\t\t\t\t\t\t// TODO (jerome) handle Annotation and MemberValusArrayInitializer)", "-\t\t\t\t\t\tExpression expression =  this.parser.parseExpression(defaultValueSource, 0, defaultValueSource.length, this.unit);", "+\t\t\t\t\t\tExpression expression =  this.parser.parseMemberValue(defaultValueSource, 0, defaultValueSource.length, this.unit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4c71080e3ebadc126b81469bb77664", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ba388ee53170dee91fb2402f317f8b352855c459", "commitAfterChange": "d043ef6776b1e3fad1bb618496ee2a48a9410e4b", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 436, "signatureBeforeChange": "  public Expression parseLambdaExpression(char[] source, int offset, int length, CompilationUnitDeclaration unit, boolean recordLineSeparators)", "signatureAfterChange": "  public Expression parseLambdaExpression(char[] source, int offset, int length, CompilationUnitDeclaration unit, boolean recordLineSeparators)", "diff": ["-\tboolean resumptionStatus = this.dontResumeOnSyntaxError;", "-\tthis.dontResumeOnSyntaxError = true;", "-\ttry {", "-\t\treturn parseExpression(source, offset, length, unit, recordLineSeparators);", "-\t} finally {", "-\t\tthis.dontResumeOnSyntaxError = resumptionStatus;", "-\t}", "+\tthis.haltOnSyntaxError = true; // unexposed/unshared object, no threading concerns.", "+\treturn parseExpression(source, offset, length, unit, recordLineSeparators);"]}], "num": 31172}