{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d361577f57b8b72aaffd1ef493453782", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4507768e5d48f0562b5c87213dda0b67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "5b1c31ccfae0bfdb40434d9a104ce9cdaaaeb619", "commitAfterChange": "731929a06a8f05076b7a266e45ecc75a2b6ababa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testGetParameterCount()", "signatureAfterChange": " public void testGetParameterCount()", "diff": ["+\t", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct5\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct6\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+\t", "+\tmethodSig= \"foo(*)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct7\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+\t", "+\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct8\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(LA<-Ljava.lang.Comparable;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct9\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(LA<*>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct10\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;+Ljava.lang.Comparable;>;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct11\", 1,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;+Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct12\", 2,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\tmethodSig= \"foo(+Ljava.lang.Comparable;-Ljava.lang.Comparable;)\";", "+\tassertEquals(\"Signature#getParameterCount is not correct13\", 2,", "+\t\t\tSignature.getParameterCount(methodSig));", "+", "+\ttry {", "+\t\tSignature.getParameterCount(\"foo(LA<++Ljava.lang.Comparable;>;)\");", "+\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "+\t} catch (IllegalArgumentException iae) {", "+\t\t// do nothing", "+\t}", "+", "+\ttry {", "+\t\tSignature.getParameterCount(\"foo(LA<--Ljava.lang.Comparable;>;)\");", "+\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "+\t} catch (IllegalArgumentException iae) {", "+\t\t// do nothing", "+\t}", "+", "+\ttry {", "+\t\tSignature.getParameterCount(\"foo(LA<+-Ljava.lang.Comparable;>;)\");", "+\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "+\t} catch (IllegalArgumentException iae) {", "+\t\t// do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a776d484448f84dc5feaf0222882b4ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "5597c46654cd0a97c576a9b45078ed0c449aa7d1", "commitAfterChange": "f8fbd2ef937bb9a099dbb116efd7aa2bc746a321", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testGetParameterCount()", "signatureAfterChange": " public void testGetParameterCount()", "diff": ["-\t", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct5\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct6\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-\t", "-\tmethodSig= \"foo(*)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct7\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-\t", "-\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct8\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(LA<-Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct9\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(LA<*>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct10\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(LA<+Ljava.lang.Comparable;+Ljava.lang.Comparable;>;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct11\", 1,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;+Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct12\", 2,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\tmethodSig= \"foo(+Ljava.lang.Comparable;-Ljava.lang.Comparable;)\";", "-\tassertEquals(\"Signature#getParameterCount is not correct13\", 2,", "-\t\t\tSignature.getParameterCount(methodSig));", "-", "-\ttry {", "-\t\tSignature.getParameterCount(\"foo(LA<++Ljava.lang.Comparable;>;)\");", "-\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "-\t} catch (IllegalArgumentException iae) {", "-\t\t// do nothing", "-\t}", "-", "-\ttry {", "-\t\tSignature.getParameterCount(\"foo(LA<--Ljava.lang.Comparable;>;)\");", "-\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "-\t} catch (IllegalArgumentException iae) {", "-\t\t// do nothing", "-\t}", "-", "-\ttry {", "-\t\tSignature.getParameterCount(\"foo(LA<+-Ljava.lang.Comparable;>;)\");", "-\t\tassertTrue(\"Signature#getParameterCount is not correct: exception\", false);", "-\t} catch (IllegalArgumentException iae) {", "-\t\t// do nothing", "-\t}"]}], "num": 64926}