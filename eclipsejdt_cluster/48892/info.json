{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f5c9b9ad54fe8bb529472332716e3a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69602a0bd32e2afb65c08f603f8a0082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "9252f03474977360ba3ba4ad93fe71b877d8ccd9", "commitAfterChange": "c65657c3db5994a0f7c7d598e6c69a8e236f8125", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\t\t\t\t\t// ignore folders on the classpath or that correspond to an output location", "-\t\t\t\t\t\tif (srcIsProject || this.isClasspathEntryOrOutputLocation(resFullPath, classpath, projectOutput)) {", "+\t\t\t\t\t\t// ignore non-excluded folders on the classpath or that correspond to an output location", "+\t\t\t\t\t\tif ((srcIsProject && !Util.isExcluded(res, exclusionPatterns))", "+\t\t\t\t\t\t\t\t|| this.isClasspathEntryOrOutputLocation(resFullPath, classpath, projectOutput)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6300f40e254d8a43182d41e8aba3a39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "44a77f9585a2fe21c63a43e577956c81917b6209", "commitAfterChange": "4e8d97020f15e372444c696b471ffdb2c69a2521", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static Object[] computeFolderNonJavaResources(JavaProject project, IContainer folder, char[][] exclusionPatterns) throws JavaModelException", "signatureAfterChange": " static Object[] computeFolderNonJavaResources(JavaProject project, IContainer folder, char[][] exclusionPatterns) throws JavaModelException", "diff": ["-\t\t\t\t\t// ignore valid packages that are not excluded", "-\t\t\t\t\tif (Util.isValidFolderNameForPackage(member.getName()) && !Util.isExcluded(member, exclusionPatterns)) ", "+\t\t\t\t\t// ignore valid packages or excluded folders that correspond to a nested pkg fragment root", "+\t\t\t\t\tif (Util.isValidFolderNameForPackage(member.getName())", "+\t\t\t\t\t\t\t&& (!Util.isExcluded(member, exclusionPatterns) ", "+\t\t\t\t\t\t\t\t|| isClasspathEntry(member.getFullPath(), classpath)))"]}], "num": 48892}