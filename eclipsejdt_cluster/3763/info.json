{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63834cf42c70a5efd5ef1dc377561d35", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c83c84db9a9da3949009c4273690c9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t} else if (!fieldBinding.isStatic() && fieldBinding.isNonNull()) {", "-\t\t\t\tflowInfo.markAsDefinitelyAssigned(fieldBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0018b16e049a49bd1829f06ed5f832", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "10a7931aec1c8332a21c39057c6b5465506f45bd", "commitAfterChange": "ac67adfb696f3d698561eed93e542c7d574b5a91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=185682", "-\t\t\tif (!valueRequired && localBinding.useFlag == LocalVariableBinding.FAKE_USED) {", "-\t\t\t\t// postIncrement is the only usage of this local", "-\t\t\t\treportOnlyUselesslyReadLocal(currentScope, localBinding);", "-\t\t\t}", "-"]}], "num": 3763}