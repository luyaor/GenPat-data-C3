{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23d7dcc723c7bf7a2f0e3030e238c0ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f4e4b4fc22e5d0b8aa09ae68dd7b8cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "756e1981ccaf3561b93bab71937951ef14b72eb6", "commitAfterChange": "30210dace16fbfb20e6910ce9f1394f40ee548a8", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void _testBug54xxx() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug55221d() throws JavaModelException", "diff": ["-\tpublic void _testBug54xxx() throws JavaModelException {", "-\t\tthis.sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"javadoc.testBug54xxx\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t}", "+\tpublic void testBug55221d() throws JavaModelException {", "+\t\tthis.sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"javadoc.testBug55221.d\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tASTNode result = runConversion(this.sourceUnit, false);", "+\t\tfinal CompilationUnit compilUnit = (CompilationUnit) result;", "+\t\tassumeEquals(this.prefix+\"Wrong number of problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\tassumeEquals(this.prefix+\"Wrong number of comments\", 2, compilUnit.getCommentList().size());", "+\t\t// get first method", "+\t\tASTNode node = getASTNode(compilUnit, 0, 0);", "+\t\tassumeNotNull(\"We should get a non-null ast node\", node);", "+\t\tassumeTrue(\"Not a method declaration\", node.getNodeType() == ASTNode.METHOD_DECLARATION); //$NON-NLS-1$", "+\t\tMethodDeclaration method = (MethodDeclaration) node;", "+\t\t// verify that first method includes comment", "+\t\tint methodStart = compilUnit.getExtendedStartPosition(method);", "+\t\tassumeEquals(\"Method \"+method+\" does not start at the right position\", method.getStartPosition(), methodStart);", "+\t\tint methodLength = compilUnit.getExtendedLength(method);", "+\t\tassumeEquals(\"Method \"+method+\" does not have the right length\", methodLength, method.getLength());", "+\t\t// get return type", "+\t\tnode = method.getReturnType();", "+\t\tassumeNotNull(\"We should get a non-null ast node\", node);", "+\t\tassumeTrue(\"Not return type\", node.getNodeType() == ASTNode.PRIMITIVE_TYPE); //$NON-NLS-1$", "+\t\tPrimitiveType returnType = (PrimitiveType) node;", "+\t\t// verify that body includes following comment", "+\t\tint returnStart = compilUnit.getExtendedStartPosition(returnType);", "+\t\tassumeEquals(\"Return type \"+returnType+\" does not start at the right position\", returnType.getStartPosition(), returnStart);", "+\t\tint returnLength = compilUnit.getExtendedLength(returnType);", "+\t\tassumeEquals(\"Return type \"+returnType+\" does not have the right length\", returnType.getLength(), returnLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc3744a697b21ee524174cb3ce7652b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "807b2bf6b37b8c98063e0b73f3e9e111197c660a", "commitAfterChange": "3b4394afa293384076b51eeac920f3d24cc5f8bc", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void _testBug54xxx() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug55221d() throws JavaModelException", "diff": ["-\tpublic void _testBug54xxx() throws JavaModelException {", "-\t\tthis.sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"javadoc.testBug54xxx\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t}", "+\tpublic void testBug55221d() throws JavaModelException {", "+\t\tthis.sourceUnit = getCompilationUnit(\"Converter\" , \"src\", \"javadoc.testBug55221.d\", \"Test.java\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "+\t\tASTNode result = runConversion(this.sourceUnit, false);", "+\t\tfinal CompilationUnit compilUnit = (CompilationUnit) result;", "+\t\tassumeEquals(this.prefix+\"Wrong number of problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\tassumeEquals(this.prefix+\"Wrong number of comments\", 2, compilUnit.getCommentList().size());", "+\t\t// get first method", "+\t\tASTNode node = getASTNode(compilUnit, 0, 0);", "+\t\tassumeNotNull(\"We should get a non-null ast node\", node);", "+\t\tassumeTrue(\"Not a method declaration\", node.getNodeType() == ASTNode.METHOD_DECLARATION); //$NON-NLS-1$", "+\t\tMethodDeclaration method = (MethodDeclaration) node;", "+\t\t// verify that first method includes comment", "+\t\tint methodStart = compilUnit.getExtendedStartPosition(method);", "+\t\tassumeEquals(\"Method \"+method+\" does not start at the right position\", method.getStartPosition(), methodStart);", "+\t\tint methodLength = compilUnit.getExtendedLength(method);", "+\t\tassumeEquals(\"Method \"+method+\" does not have the right length\", methodLength, method.getLength());", "+\t\t// get return type", "+\t\tnode = method.getReturnType();", "+\t\tassumeNotNull(\"We should get a non-null ast node\", node);", "+\t\tassumeTrue(\"Not return type\", node.getNodeType() == ASTNode.PRIMITIVE_TYPE); //$NON-NLS-1$", "+\t\tPrimitiveType returnType = (PrimitiveType) node;", "+\t\t// verify that body includes following comment", "+\t\tint returnStart = compilUnit.getExtendedStartPosition(returnType);", "+\t\tassumeEquals(\"Return type \"+returnType+\" does not start at the right position\", returnType.getStartPosition(), returnStart);", "+\t\tint returnLength = compilUnit.getExtendedLength(returnType);", "+\t\tassumeEquals(\"Return type \"+returnType+\" does not have the right length\", returnType.getLength(), returnLength);"]}], "num": 54993}