{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c0055ed9b1b7f14ec513bea6d82ae9e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a90a816081ac32887e6ac06888e1a4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testTypeReferenceBug79860b() throws CoreException", "signatureAfterChange": " \tpublic void testBug79267() throws CoreException", "diff": ["+\t */", "+\tpublic void testBug79267() throws CoreException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79267/Test.java\",", "+\t\t\t\t\"package b79267;\\n\" + ", "+\t\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\t\"\tprivate static final X<String, String> BEFORE\t= new X<String, String>(4);\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\t\"\t\tBEFORE.put(\\\"key1\\\",\\\"value1\\\");\\n\" + ", "+\t\t\t\t\"\t\tBEFORE.put(\\\"key2\\\",\\\"value2\\\");\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\t\\n\" + ", "+\t\t\t\t\"\tprivate static final X<Y, Object>\tobjectToPrimitiveMap\t= new X<Y, Object>(8);\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\t\"\t\tobjectToPrimitiveMap.put(new Y<Object>(new Object()), new Object());\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"class X<T, U> {\\n\" + ", "+\t\t\t\t\"\tX(int x) {}\\n\" + ", "+\t\t\t\t\"\tvoid put(T t, U u) {}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"class Y<T> {\\n\" + ", "+\t\t\t\t\"\tY(T t) {}\\n\" + ", "+\t\t\t\t\"}\\n\");", "+\t\t\t// search field references", "+\t\t\tIType type = workingCopy.getType(\"Test\");", "+\t\t\tIField field = type.getField(\"BEFORE\");", "+\t\t\tsearch(field, REFERENCES);", "+\t\t\tfield = type.getField(\"objectToPrimitiveMap\");", "+\t\t\tsearch(field, REFERENCES);", "+\t\t\tassertSearchResults(", "+\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [objectToPrimitiveMap] EXACT_MATCH\",", "+\t\t\t\tresultCollector);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}", "-\t}", "-\tpublic void testTypeReferenceBug79860b() throws CoreException {", "-\t\tsearch(\"I?\", TYPE, REFERENCES, getJavaSearchScopeBugs(\"b79860\", false), resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b79860/Y.java b79860.Y [I1] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b79860/Y.java b79860.Y [I2] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b79860/Y.java b79860.Y [I3] EXACT_MATCH\",", "-\t\t\tresultCollector);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b7c41d7ff11485ea78f92303384f65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testBug79267() throws CoreException", "signatureAfterChange": " \tpublic void testBug79267() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79267/Test.java\",", "-\t\t\t\t\"package b79267;\\n\" + ", "-\t\t\t\t\"public class Test {\\n\" + ", "-\t\t\t\t\"\tprivate static final X<String, String> BEFORE\t= new X<String, String>(4);\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tstatic {\\n\" + ", "-\t\t\t\t\"\t\tBEFORE.put(\\\"key1\\\",\\\"value1\\\");\\n\" + ", "-\t\t\t\t\"\t\tBEFORE.put(\\\"key2\\\",\\\"value2\\\");\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\t\\n\" + ", "-\t\t\t\t\"\tprivate static final X<Y, Object>\tobjectToPrimitiveMap\t= new X<Y, Object>(8);\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tstatic {\\n\" + ", "-\t\t\t\t\"\t\tobjectToPrimitiveMap.put(new Y<Object>(new Object()), new Object());\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"class X<T, U> {\\n\" + ", "-\t\t\t\t\"\tX(int x) {}\\n\" + ", "-\t\t\t\t\"\tvoid put(T t, U u) {}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"class Y<T> {\\n\" + ", "-\t\t\t\t\"\tY(T t) {}\\n\" + ", "-\t\t\t\t\"}\\n\");", "-\t\t\t// search field references", "-\t\t\tIType type = workingCopy.getType(\"Test\");", "-\t\t\tIField field = type.getField(\"BEFORE\");", "-\t\t\tsearch(field, REFERENCES);", "-\t\t\tfield = type.getField(\"objectToPrimitiveMap\");", "-\t\t\tsearch(field, REFERENCES);", "-\t\t\tassertSearchResults(", "-\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [objectToPrimitiveMap] EXACT_MATCH\",", "-\t\t\t\tresultCollector);", "-\t\t}", "-\t\tfinally {", "-\t\t\tif (workingCopy != null)", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t}", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/b79267/Test.java\",", "+\t\t\t\"package b79267;\\n\" + ", "+\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\"\tprivate static final X<String, String> BEFORE\t= new X<String, String>(4);\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\"\t\tBEFORE.put(\\\"key1\\\",\\\"value1\\\");\\n\" + ", "+\t\t\t\"\t\tBEFORE.put(\\\"key2\\\",\\\"value2\\\");\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\t\\n\" + ", "+\t\t\t\"\tprivate static final X<Y, Object>\tobjectToPrimitiveMap\t= new X<Y, Object>(8);\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\"\t\tobjectToPrimitiveMap.put(new Y<Object>(new Object()), new Object());\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class X<T, U> {\\n\" + ", "+\t\t\t\"\tX(int x) {}\\n\" + ", "+\t\t\t\"\tvoid put(T t, U u) {}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class Y<T> {\\n\" + ", "+\t\t\t\"\tY(T t) {}\\n\" + ", "+\t\t\t\"}\\n\");", "+\t\t// search field references", "+\t\tIType type = workingCopies[0].getType(\"Test\");", "+\t\tIField field = type.getField(\"BEFORE\");", "+\t\tsearch(field, REFERENCES);", "+\t\tfield = type.getField(\"objectToPrimitiveMap\");", "+\t\tsearch(field, REFERENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b79267/Test.java b79267.Test.static {} [objectToPrimitiveMap] EXACT_MATCH\"", "+\t\t);"]}], "num": 6437}