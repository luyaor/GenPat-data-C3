{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa1fd424428d3641d605e65a5f0d9147", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a1a27e52709c15ee3c450a210d19f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 47, "signatureBeforeChange": " public static char[] getSimpleName(char[] name)", "signatureAfterChange": " public static char[] getSimpleName(char[] name)", "diff": ["-\tint lastDot = CharOperation.lastIndexOf(C_DOT, name);", "-\tif (lastDot == -1) {", "-\t\treturn name;", "+", "+\tint lastDot = -1, lastGenericStart = -1, lastGenericEnd = -1;", "+\tint depth = 0;", "+\tint length = name.length;", "+\tlastDotLookup: for (int i = length -1; i >= 0; i--) {", "+\t\tswitch (name[i]) {", "+\t\t\tcase '.':", "+\t\t\t\tif (depth == 0) {", "+\t\t\t\t\tlastDot = i;", "+\t\t\t\t\tbreak lastDotLookup;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase '<':", "+\t\t\t\tdepth--;", "+\t\t\t\tif (depth == 0) lastGenericStart = i;", "+\t\t\t\tbreak;", "+\t\t\tcase '>':", "+\t\t\t\tif (depth == 0) lastGenericEnd = i;", "+\t\t\t\tdepth++;", "+\t\t\t\tbreak;", "+\t\t}", "-\treturn CharOperation.subarray(name, lastDot + 1, name.length);", "+\tif (lastGenericStart < 0) {", "+\t\tif (lastDot < 0) {", "+\t\t\treturn name;", "+\t\t}", "+\t\treturn  CharOperation.subarray(name, lastDot + 1, length);", "+\t}", "+\tStringBuffer buffer = new StringBuffer(10);", "+\tint nameStart = lastDot < 0 ? 0 : lastDot+1;", "+\tbuffer.append(name, nameStart, lastGenericStart - nameStart);", "+\tappendArgumentSimpleNames(name, lastGenericStart, lastGenericEnd, buffer);", "+\tbuffer.append(name, lastGenericEnd+1, length-lastGenericEnd-1); // copy trailing portion, may contain dimensions\t", "+\tchar[] result = new char[length = buffer.length()];", "+\tbuffer.getChars(0, length, result, 0);", "+\treturn result;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c25b66a9124edac709baf0ef18da36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "d26bd96cc9e1c9e59f2c9d083b9a2725de90852a", "commitAfterChange": "8b048c313a1c6f07bac23f1c84c9ba7d1df315ac", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public static char[] getTypeErasure(char[] parameterizedTypeSignature) throws IllegalArgumentException", "signatureAfterChange": " public static char[] getTypeErasure(char[] parameterizedTypeSignature) throws IllegalArgumentException", "diff": ["-\tint genericStart = CharOperation.indexOf(C_GENERIC_START, parameterizedTypeSignature);", "-\tif (genericStart == -1) return parameterizedTypeSignature;", "-\tchar[] result = new char[genericStart+1];", "-\tSystem.arraycopy(parameterizedTypeSignature, 0, result, 0, genericStart);", "-\tresult[genericStart] = C_SEMICOLON;", "-\treturn result;", "+\tint end = CharOperation.indexOf(C_GENERIC_START, parameterizedTypeSignature);", "+\tif (end == -1) return parameterizedTypeSignature;", "+\tint length = parameterizedTypeSignature.length;", "+\tchar[] result = new char[length];", "+\tint pos = 0;", "+\tint start = 0;", "+\tint deep= 0;", "+\tfor (int idx=end; idx<length; idx++) {", "+\t\tswitch (parameterizedTypeSignature[idx]) {", "+\t\t\tcase C_GENERIC_START:", "+\t\t\t\tif (deep == 0) {", "+\t\t\t\t\tint size = idx-start;", "+\t\t\t\t\tSystem.arraycopy(parameterizedTypeSignature, start, result, pos, size);", "+\t\t\t\t\tend = idx;", "+\t\t\t\t\tpos += size;", "+\t\t\t\t}", "+\t\t\t\tdeep++;", "+\t\t\t\tbreak;", "+\t\t\tcase C_GENERIC_END:", "+\t\t\t\tdeep--;", "+\t\t\t\tif (deep < 0) throw new IllegalArgumentException();", "+\t\t\t\tif (deep == 0) start = idx+1;", "+\t\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (deep > 0) throw new IllegalArgumentException();", "+\tint size = pos+length-start;", "+\tchar[] resized = new char[size];", "+\tSystem.arraycopy(result, 0, resized, 0, pos);", "+\tSystem.arraycopy(parameterizedTypeSignature, start, resized, pos, length-start);", "+\treturn resized;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa6a2c5d87763bc027b11121f971337a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 48, "signatureBeforeChange": " public static String getSimpleName(String name)", "signatureAfterChange": " public static String getSimpleName(String name)", "diff": ["-\tint lastDot = name.lastIndexOf(C_DOT);", "-\tif (lastDot == -1) {", "-\t\treturn name;", "+\tint lastDot = -1, lastGenericStart = -1, lastGenericEnd = -1;", "+\tint depth = 0;", "+\tint length = name.length();", "+\tlastDotLookup: for (int i = length -1; i >= 0; i--) {", "+\t\tswitch (name.charAt(i)) {", "+\t\t\tcase '.':", "+\t\t\t\tif (depth == 0) {", "+\t\t\t\t\tlastDot = i;", "+\t\t\t\t\tbreak lastDotLookup;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase '<':", "+\t\t\t\tdepth--;", "+\t\t\t\tif (depth == 0) lastGenericStart = i;", "+\t\t\t\tbreak;", "+\t\t\tcase '>':", "+\t\t\t\tif (depth == 0) lastGenericEnd = i;", "+\t\t\t\tdepth++;", "+\t\t\t\tbreak;", "+\t\t}", "-\treturn name.substring(lastDot + 1, name.length());", "+\tif (lastGenericStart < 0) {", "+\t\tif (lastDot < 0) {", "+\t\t\treturn name;", "+\t\t}", "+\t\treturn name.substring(lastDot + 1, length);", "+\t}", "+\tStringBuffer buffer = new StringBuffer(10);", "+\tchar[] nameChars = name.toCharArray();", "+\tint nameStart = lastDot < 0 ? 0 : lastDot+1;", "+\tbuffer.append(nameChars, nameStart, lastGenericStart - nameStart);", "+\tappendArgumentSimpleNames(nameChars, lastGenericStart, lastGenericEnd, buffer);", "+\tbuffer.append(nameChars, lastGenericEnd+1, length-lastGenericEnd-1); // copy trailing portion, may contain dimensions\t", "+\treturn buffer.toString();", "+}"]}], "num": 13045}