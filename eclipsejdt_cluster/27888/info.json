{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c755eb31c0542ced2dd9150bca8e2b4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e5224e8e297b0e18cd7e22d03af9ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tIJavaProject javaProject, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap options, \t\t\tWorkingCopyOwner owner, \t\t\tint flags, \t\t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,", "-\t\tIJavaProject javaProject,", "-\t\tNodeSearcher nodeSearcher,", "-\t\tMap options,", "-\t\tWorkingCopyOwner owner,", "-\t\tboolean statementsRecovery,", "-\t\tIProgressMonitor monitor) throws JavaModelException {", "-\t", "+\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,", "+\t\t\tIJavaProject javaProject,", "+\t\t\tNodeSearcher nodeSearcher,", "+\t\t\tMap options,", "+\t\t\tWorkingCopyOwner owner,", "+\t\t\tint flags,", "+\t\t\tIProgressMonitor monitor) throws JavaModelException {", "+", "-\t\t\t\t\tgetCompilerOptions(options, statementsRecovery),", "+\t\t\t\t\tgetCompilerOptions(options, (flags & ICompilationUnit.ENABLE_STATEMENTS_RECOVERY) != 0),", "-\t\t\tunit = ", "+\t\t\tunit =", "-\t\t\t\tCompilationUnitDeclaration unitDeclaration = parse(sourceUnit, nodeSearcher, options, statementsRecovery);", "+\t\t\t\tCompilationUnitDeclaration unitDeclaration = parse(sourceUnit, nodeSearcher, options, flags);", "-\t\t\t}\t", "+\t\t\t}", "-//\t\t\t\t\tif (parsedUnit.scope != null) ", "+//\t\t\t\t\tif (parsedUnit.scope != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91b26709c43692bb851e362fe951ec8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tint reconcileFlags, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tboolean statementsRecovery,", "+\t\tint reconcileFlags,", "-\t\t\t\tgetCompilerOptions(project.getOptions(true), creatingAST, statementsRecovery),", "+\t\t\t\tgetCompilerOptions(project.getOptions(true), creatingAST, ((reconcileFlags & ICompilationUnit.ENABLE_STATEMENTS_RECOVERY) != 0)),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "defaad25d65f0e0952deb20f45def82c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic static void resolve( \t\tICompilationUnit[] compilationUnits, \t\tString[] bindingKeys, \t\tASTRequestor requestor, \t\tint apiLevel, \t\tMap options, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor)", "signatureAfterChange": "  \tpublic static void resolve( \t\tICompilationUnit[] compilationUnits, \t\tString[] bindingKeys, \t\tASTRequestor requestor, \t\tint apiLevel, \t\tMap options, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tint flags, \t\tIProgressMonitor monitor)", "diff": ["-\t\tboolean statementsRecovery,", "+\t\tint flags,", "-\t", "+", "-\t\t\t\t\tgetCompilerOptions(options, statementsRecovery),", "+\t\t\t\t\tgetCompilerOptions(options, (flags & ICompilationUnit.ENABLE_STATEMENTS_RECOVERY) != 0),", "-\t\t\t\t\tproblemFactory, ", "+\t\t\t\t\tproblemFactory,", "-\t\t\tresolver.resolve(compilationUnits, bindingKeys, requestor, apiLevel, options, owner);", "+\t\t\tresolver.resolve(compilationUnits, bindingKeys, requestor, apiLevel, options, owner, flags);", "-\t\t\tparse(compilationUnits, requestor, apiLevel, options, monitor);", "+\t\t\tparse(compilationUnits, requestor, apiLevel, options, flags, monitor);"]}], "num": 27888}