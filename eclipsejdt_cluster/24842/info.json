{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "389fce9d4e6a6552a43385b6e1aaa524", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "466fd5d21a93a5ad6997c4d0fa07d4ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprotected CompilationUnit createAST(ICompilationUnit cu)", "signatureAfterChange": "  \tprotected CompilationUnit createAST(ICompilationUnit cu)", "diff": ["-\t\tASTParser parser= ASTParser.newParser(AST_INTERNAL_JLS2);", "-\t\tparser.setSource(cu);", "-\t\tparser.setResolveBindings(false);", "-\t\treturn (CompilationUnit) parser.createAST(null);", "+\t\treturn createAST(AST_INTERNAL_JLS2, cu, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a159a21da7b2eb2875b15c00548b78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\tMatchingNodeSet matchingNodeSet = null;", "-\t\tmatchingNodeSet = this.currentPossibleMatch.matchingNodeSet;", "-\t\tgetMethodBodies(unit, matchingNodeSet);", "+\t\tgetMethodBodies(unit);", "-\t\t\treduceParseTree(unit, matchingNodeSet);", "+\t\t\treduceParseTree(unit);", "-\t\t\tmatchingNodeSet.reportMatching(unit, true);", "+\t\t\treportMatching(unit, true);", "-\t\t\tmatchingNodeSet.reportMatching(unit, this.pattern.mustResolve);", "+\t\t\treportMatching(unit, this.pattern.mustResolve);", "-\t\tif (matchingNodeSet != null)", "-\t\t\tmatchingNodeSet.reportMatching(unit, true); // was partially resolved", "+\t\treportMatching(unit, true); // was partially resolved", "+\t\tthis.currentPossibleMatch.cleanUp();"]}], "num": 24842}