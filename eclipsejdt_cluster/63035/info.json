{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7043e04398465a8d23346a64d0dcc3ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305d63772ff3ecd8d9c4b2485e5615ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "e46b33e3ec4773e86ecd50db1d6ae3ec644c0ac6", "commitAfterChange": "293a2feda0e1362ec063f3b01e3ad998fb23fb36", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test023() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test023() throws JavaModelException, CoreException", "diff": ["-", "-\t\t// Set file encoding", "-\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "-\t\tassertNotNull(\"Cannot find class file!\", zipFile);", "-\t\tzipFile.setCharset(encoding, null);", "+\t\ttry {", "+\t\t\t// Set file encoding", "+\t\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "+\t\t\tassertNotNull(\"Cannot find class file!\", zipFile);", "+\t\t\tzipFile.setCharset(vmEncoding, null);", "-\t\t// Get class file and compare source (should not be the same as modify charset on zip file has no effect...)", "-\t\tIPackageFragmentRoot root = getPackageFragmentRoot(\"Encoding\", \"testUTF8.jar\");", "-\t\tthis.utf8Source = root.getPackageFragment(\"testUTF8\").getClassFile(\"Test.class\");", "-\t\tassertNotNull(this.utf8Source);", "-\t\tString source = this.utf8Source.getSource();", "-\t\tassertNotNull(source);", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "-\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "-", "-\t\t// Reset zip file encoding", "-\t\tzipFile.setCharset(null, null);", "+\t\t\t// Get class file and compare source (should not be the same as modify charset on zip file has no effect...)", "+\t\t\tIPackageFragmentRoot root = getPackageFragmentRoot(\"Encoding\", \"testUTF8.jar\");", "+\t\t\tthis.utf8Source = root.getPackageFragment(\"testUTF8\").getClassFile(\"Test.class\");", "+\t\t\tassertNotNull(this.utf8Source);", "+\t\t\tString source = this.utf8Source.getSource();", "+\t\t\tassertNotNull(source);", "+\t\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "+\t\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+\t\t}", "+\t\tfinally {", "+\t\t\t// Reset zip file encoding", "+\t\t\tzipFile.setCharset(null, null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9647f5888851ee7fec0de3a0cbc4c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageFragmentOperation.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\tJavaElementDelta delta = null;", "-\tPackageFragmentRoot root = (PackageFragmentRoot) getParentElement();", "-\tbeginTask(Messages.operation_createPackageFragmentProgress, this.pkgName.length); ", "-\tIContainer parentFolder = (IContainer) root.getResource();", "-\tString[] sideEffectPackageName = CharOperation.NO_STRINGS; ", "-\tArrayList results = new ArrayList(this.pkgName.length);", "-\tchar[][] inclusionPatterns = root.fullInclusionPatternChars();", "-\tchar[][] exclusionPatterns = root.fullExclusionPatternChars();", "-\tint i;", "-\tfor (i = 0; i < this.pkgName.length; i++) {", "-\t\tString subFolderName = this.pkgName[i];", "-\t\tsideEffectPackageName = Util.arrayConcat(sideEffectPackageName, subFolderName);", "-\t\tIResource subFolder = parentFolder.findMember(subFolderName);", "-\t\tif (subFolder == null) {", "-\t\t\tcreateFolder(parentFolder, subFolderName, force);", "-\t\t\tparentFolder = parentFolder.getFolder(new Path(subFolderName));", "-\t\t\tIPackageFragment addedFrag = root.getPackageFragment(sideEffectPackageName);", "-\t\t\tif (!Util.isExcluded(parentFolder, inclusionPatterns, exclusionPatterns)) {", "-\t\t\t\tif (delta == null) {", "-\t\t\t\t\tdelta = newJavaElementDelta();", "+\ttry {", "+\t\tJavaElementDelta delta = null;", "+\t\tPackageFragmentRoot root = (PackageFragmentRoot) getParentElement();", "+\t\tbeginTask(Messages.operation_createPackageFragmentProgress, this.pkgName.length); ", "+\t\tIContainer parentFolder = (IContainer) root.getResource();", "+\t\tString[] sideEffectPackageName = CharOperation.NO_STRINGS; ", "+\t\tArrayList results = new ArrayList(this.pkgName.length);", "+\t\tchar[][] inclusionPatterns = root.fullInclusionPatternChars();", "+\t\tchar[][] exclusionPatterns = root.fullExclusionPatternChars();", "+\t\tint i;", "+\t\tfor (i = 0; i < this.pkgName.length; i++) {", "+\t\t\tString subFolderName = this.pkgName[i];", "+\t\t\tsideEffectPackageName = Util.arrayConcat(sideEffectPackageName, subFolderName);", "+\t\t\tIResource subFolder = parentFolder.findMember(subFolderName);", "+\t\t\tif (subFolder == null) {", "+\t\t\t\tcreateFolder(parentFolder, subFolderName, force);", "+\t\t\t\tparentFolder = parentFolder.getFolder(new Path(subFolderName));", "+\t\t\t\tIPackageFragment addedFrag = root.getPackageFragment(sideEffectPackageName);", "+\t\t\t\tif (!Util.isExcluded(parentFolder, inclusionPatterns, exclusionPatterns)) {", "+\t\t\t\t\tif (delta == null) {", "+\t\t\t\t\t\tdelta = newJavaElementDelta();", "+\t\t\t\t\t}", "+\t\t\t\t\tdelta.added(addedFrag);", "-\t\t\t\tdelta.added(addedFrag);", "+\t\t\t\tresults.add(addedFrag);", "+\t\t\t} else {", "+\t\t\t\tparentFolder = (IContainer) subFolder;", "-\t\t\tresults.add(addedFrag);", "-\t\t} else {", "-\t\t\tparentFolder = (IContainer) subFolder;", "+\t\t\tworked(1);", "-\t\tworked(1);", "-\t}", "-\tif (results.size() > 0) {", "-\t\tthis.resultElements = new IJavaElement[results.size()];", "-\t\tresults.toArray(this.resultElements);", "-\t\tif (delta != null) {", "-\t\t\taddDelta(delta);", "+\t\tif (results.size() > 0) {", "+\t\t\tthis.resultElements = new IJavaElement[results.size()];", "+\t\t\tresults.toArray(this.resultElements);", "+\t\t\tif (delta != null) {", "+\t\t\t\taddDelta(delta);", "+\t\t\t}", "+\t} finally {", "+\t\tdone();", "-\tdone();"]}], "num": 63035}