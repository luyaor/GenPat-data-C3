{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45fe80a9670db5a9eb1fdd82edf775b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f534b53254994e4988640d65fd32999c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a05f72a9389097f85d037088e479172e5f54b397", "commitAfterChange": "264e20b3b391e1bf2368fe3b934918be326e6ec2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif (this.binding.declaringClass.superclass().isMemberType() && !this.binding.declaringClass.superclass().isStatic()) {", "-\t\t\t\t// creating an anonymous type of a non-static member type without an enclosing instance of parent type", "-\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag(this.binding.declaringClass.superclass().enclosingType());", "+\t\t\tif (this.binding != null && this.binding.declaringClass != null) {", "+\t\t\t\tReferenceBinding superclass = this.binding.declaringClass.superclass();", "+\t\t\t\tif (superclass != null && superclass.isMemberType() && !superclass.isStatic()) {", "+\t\t\t\t\t// creating an anonymous type of a non-static member type without an enclosing instance of parent type", "+\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag(superclass.enclosingType());", "+\t\t\t\t}", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faead3d9dc78e177f5d544b73b2f3947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "21015b82216f26849246c88f0d976461789f5b12", "commitAfterChange": "7eca14ed24b47e1ca28872dfc7c7eceb8e4d7bff", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(CompilationUnitDeclaration compilationUnitDeclaration, CompilationUnitScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-", "-\t@Override", "-\tpublic boolean visit(CompilationUnitDeclaration compilationUnitDeclaration, CompilationUnitScope scope) {", "-\t\tthis.storeAnnotations = scope.compilerOptions().storeAnnotations;", "-\t\tscope.compilerOptions().storeAnnotations = true;", "-\t\treturn true;"]}], "num": 22469}