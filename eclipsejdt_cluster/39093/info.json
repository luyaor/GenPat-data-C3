{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5743f7e12cbe75ded8a0c5ec5c23980", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bef472b2ec8bbcb1ada9de7d125563a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "b8967fb259bc4122f2d9f6e6be8973482d84bd2f", "commitAfterChange": "e7c40dbc434529a8379a830b9ae4ab2c74d0fc13", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r protected IMethod[] findMethods(IMethod method, IMethod[] methods)", "signatureAfterChange": "\r protected IMethod[] findMethods(IMethod method, IMethod[] methods)", "diff": ["-\t\tif (existingMethod.getElementName().equals(elementName)) {\r", "-\t\t\tString[] existingParams = existingMethod.getParameterTypes();\r", "-\t\t\tint existingParamLength = existingParams.length;\r", "-\t\t\tif (existingParamLength == paramLength) {\r", "-\t\t\t\tfor (int j = 0; j < paramLength; j++) {\r", "-\t\t\t\t\tString simpleName = Signature.getSimpleName(Signature.toString(existingParams[j]));\r", "-\t\t\t\t\tif (!simpleNames[j].equals(simpleName)) {\r", "-\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\tlist.add(existingMethod);\r", "-\t\t\t}\r", "+\t\tif (this.areSimilarMethods(\r", "+\t\t\t\telementName,\r", "+\t\t\t\tparameters,\r", "+\t\t\t\texistingMethod.getElementName(),\r", "+\t\t\t\texistingMethod.getParameterTypes(),\r", "+\t\t\t\tsimpleNames)) {\r", "+\t\t\tlist.add(existingMethod);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57c82f5b85d82670681a3a7bf9e8491", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "d216bbf1af464941faf11b346674314a84379230", "commitAfterChange": "ce384dda3ca88a0c642fb27af8bd51d7f5e5bbea", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \tprotected void assertProblemsSize(CompilationUnit compilationUnit, int expectedSize)", "signatureAfterChange": " \t \tprotected void assertProblemsSize(CompilationUnit compilationUnit, int expectedSize)", "diff": ["+\t\tassertProblemsSize(compilationUnit, expectedSize, \"\");", "+\t}", "-\t\t\tSystem.err.println(\"Wrong number of problems for \" + compilationUnit);", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tSystem.err.println(problems[i]);", "-\t\t\t}"]}], "num": 39093}