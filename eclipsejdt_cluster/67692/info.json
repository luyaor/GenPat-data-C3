{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "582188295f4eefaea3aa8fdd89ed3d1d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b28e97f9b21b4dfb038060ed9a711f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "commitAfterChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["+}", "+public static Test suite() {", "+\treturn suite(ClasspathTests.class, null);", "-}", "-public static Test suite() {", "-", "-\tif (false){", "-\t\tTestSuite suite = new Suite(ClasspathTests.class.getName());", "-\t\tsuite.addTest(new ClasspathTests(\"testDuplicateEntries\"));", "-\t\treturn suite;", "-\t}", "-\treturn new Suite(ClasspathTests.class);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8b13452783c0a98f2bfc94363c329b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "524f4ffae49579e103a152caac281a0f346c952b", "commitAfterChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic static String format(\r \t\tString sourceString,\r \t\tint initialIndentationLevel,\r \t\tMap options)", "signatureAfterChange": "\r \tpublic String format(String string, int indentationLevel)", "diff": ["-\t */\r", "-\tpublic static String format(\r", "-\t\tString sourceString,\r", "-\t\tint initialIndentationLevel,\r", "-\t\tMap options) {\r", "-\t\tCodeFormatter formatter = new CodeFormatter(options);\r", "-\t\tformatter.setInitialIndentationLevel(initialIndentationLevel);\r", "-\t\treturn formatter.formatSourceString(sourceString);\r", "-\t}\r", "+\t */\r", "+\tpublic String format(String string, int indentationLevel) {\r", "+\t\treturn format(string, indentationLevel, null);\r", "+\t}\t\r"]}], "num": 67692}