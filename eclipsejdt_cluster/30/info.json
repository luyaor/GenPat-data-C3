{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7cd9247f10010ef2ee9bb298b1266e38", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c871850f47f1ddf2ee225edc9c46d59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " public void test207()", "signatureAfterChange": " public void test207()", "diff": ["-\t\t\"foo cannot be resolved\\n\" + ", "+\t\t\"Cannot reference a field before it is defined\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"\t@Ann(m=foo)\\n\" + ", "+\t\t\"\t       ^^^\\n\" + ", "+\t\t\"NonExisting cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 4)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ea62b2ed30dfc52b1a1c76047e9f87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "7630777cf7ef8a4120e715e810a80717f836592b", "commitAfterChange": "699f26e934e59aeb24a73287942d4b68645611a6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testBug45782a()", "signatureAfterChange": " \tpublic void testBug45782a()", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "-\t\t\t\t\"\t       ^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for return type\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "-\t\t\t\t\"\t                      ^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for parameter str\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "-\t\t\t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for declared exception IllegalArgumentException\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t* {@inheritDoc}\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Unexpected tag\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "+\t\t\t\"\t       ^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for return type\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "+\t\t\t\"\t                      ^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for parameter str\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(String str) throws IllegalArgumentException { return 0; }\\n\" + ", "+\t\t\t\"\t                                  ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for declared exception IllegalArgumentException\\n\" + ", "+\t\t\t\"----------\\n\""]}], "num": 30}