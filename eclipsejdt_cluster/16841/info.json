{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0990b285e78adc0840e12ad0a39eedd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2a7af2ddf5def70d206ae80757d8df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "38df8da524fe9a4447ec44507ebad1f9ece75a2f", "commitAfterChange": "908069783b3c679a7fb6f9224220f18c85e23565", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tif (currentArg.equals(\"-classpath\")) { //$NON-NLS-1$\r", "+\t\tif (currentArg.equals(\"-classpath\") || currentArg.equals(\"-cp\")) { //$NON-NLS-1$\r", "-\t\t\t} else if (currentArg.equals(\"1.3\")) { //$NON-NLS-1$\r", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_3);\r", "-\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$\r", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);\r", "-\t\tif (!file.exists())\r", "-\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incorrectClasspath\",classpaths[i])); //$NON-NLS-1$\r", "+\t\tif (!file.exists()) // signal missing classpath entry file\r", "+\t\t\tout.println(Main.bind(\"configure.incorrectClasspath\",classpaths[i])); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd66ce50ec720aa8f1baebd077995963", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "7e47f9acc3454f5babc44432d7650b471f5736c6", "commitAfterChange": "75c0ccb1e2c68587a8e2efbb2a478d71f7d635f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["+\tfinal int InsideJCK = 64;\r", "+\t\t\tcontinue;\r", "+\t\t}\r", "+\t\tif (currentArg.equals(\"-jck\")) { //$NON-NLS-1$\r", "+\t\t\tmode = InsideJCK;\r", "+\t\tif (mode == InsideJCK){\r", "+\t\t\tif (currentArg.equals(\"1.3\")) { //$NON-NLS-1$\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$\r", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);\r", "+\t\t\t} else {\r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.jck\",currentArg)); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\tmode = Default;\r", "+\t\t\tcontinue;\r", "+\t\t}\r"]}], "num": 16841}