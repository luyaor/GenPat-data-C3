{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8a323790ebd92d30e8813d9eda52671", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8682763ff3014f3fb48fda2a13edae08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testNonExistingCU() throws JavaModelException", "signatureAfterChange": " public void testNonExistingCU() throws JavaModelException", "diff": ["-\tIWorkingCopy workingCopy = null;", "+\tICompilationUnit workingCopy = null;", "-\t\tworkingCopy = (IWorkingCopy)nonExistingCU.getWorkingCopy();", "+\t\tworkingCopy = nonExistingCU.getWorkingCopy(null);", "-\t\t// getOriginalElement()", "-\t\tassertEquals(\"Unexpected orginal element\", nonExistingCU, workingCopy.getOriginalElement());", "+\t\t// getPrimaryElement()", "+\t\tassertEquals(\"Unexpected orginal element\", nonExistingCU, workingCopy.getPrimaryElement());", "-\t\tassertTrue(\"Should not be able to restore from original element\", exception);", "+\t\tassertTrue(\"Should not be able to restore from primary element\", exception);", "-\t\tassertTrue(\"Original cu should not exist\", !nonExistingCU.exists());", "+\t\tassertTrue(\"Primary cu should not exist\", !nonExistingCU.exists());", "-\t\t// commit()", "-\t\tworkingCopy.commit(false, null);", "-\t\tassertTrue(\"Original cu should exist\", nonExistingCU.exists());", "+\t\t// commitWorkingCopy()", "+\t\tworkingCopy.commitWorkingCopy(false, null);", "+\t\tassertTrue(\"Primary cu should exist\", nonExistingCU.exists());", "-\t\t// isBasedOn()", "-\t\tassertTrue(\"Working copy should now be based on original resource\", workingCopy.isBasedOn(nonExistingCU.getResource()));", "+\t\t// hasResourceChanged()", "+\t\tassertTrue(\"Working copy's resource should now not mark as changed\", !workingCopy.hasResourceChanged());", "-\t\t\tworkingCopy.destroy();", "+\t\t\tworkingCopy.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b832c190dcec2c48618977ff52de6df8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "commitAfterChange": "6917637e4d94d6b430f2f9b2341abe83418f5e26", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic boolean equals(Object o)", "signatureAfterChange": " \t \tpublic boolean equals(Object o)", "diff": ["-\t\t\tCompilationUnit thisCU = (CompilationUnit) this.getCompilationUnit();", "-\t\t\tCompilationUnit thatCU = (CompilationUnit) that.getCompilationUnit();", "-\t\t\treturn thisCU.getElementName().equals(thatCU.getElementName()) && thisCU.parent.equals(thatCU.parent);", "+\t\t\tITypeRoot thisTR = this.getTypeRoot();", "+\t\t\tITypeRoot thatTR = that.getTypeRoot();", "+\t\t\treturn thisTR.getElementName().equals(thatTR.getElementName()) && thisTR.getParent().equals(thatTR.getParent());"]}], "num": 46463}