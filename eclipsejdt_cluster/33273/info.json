{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "037fe5ccfbf610d2553f5340d5122359", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61309a1a3773e22dcf60bb076e1d2cfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["+\t\tIPath externalAnnotationPath = entry.getExternalAnnotationPath();", "-\t\t\t\t\t\tbLocation = ClasspathLocation.forLibrary((IFile) resource, accessRuleSet);", "+\t\t\t\t\t\tbLocation = ClasspathLocation.forLibrary((IFile) resource, accessRuleSet, externalAnnotationPath);", "-\t\t\t\t\tbLocations.add(ClasspathLocation.forLibrary(path.toString(), accessRuleSet));", "+\t\t\t\t\tbLocations.add(ClasspathLocation.forLibrary(path.toString(), accessRuleSet, externalAnnotationPath));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad015279919ed8c3136dca4330744700", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["+\t\tIPath externalAnnotationPath = ClasspathEntry.getExternalAnnotationPath(entry, javaProject.getProject(), true);", "-\t\t\t\t\t\tbLocation = ClasspathLocation.forLibrary((IFile) resource, accessRuleSet);", "+\t\t\t\t\t\tbLocation = ClasspathLocation.forLibrary((IFile) resource, accessRuleSet, externalAnnotationPath);", "-\t\t\t\t\tbLocations.add(ClasspathLocation.forLibrary(path.toString(), accessRuleSet));", "+\t\t\t\t\tbLocations.add(ClasspathLocation.forLibrary(path.toString(), accessRuleSet, externalAnnotationPath));"]}], "num": 33273}