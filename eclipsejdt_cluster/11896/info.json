{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "adae4264e04f50db6011e6e756f98dfa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027473a7b77cb79be5b0a21b98e66860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4b34ac952495406305286be091754126c6d25593", "commitAfterChange": "a3337f44ed6348a5f4f65ab1b2584cb8125066c6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "signatureAfterChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "diff": ["-\t\t\tthis.scribe.alignFragment(messageAlignment, 0);", "+\t\t\tif (messageAlignment.canAlign()) {", "+\t\t\t\tthis.scribe.alignFragment(messageAlignment, 0);", "+\t\t\t}", "-\t\t\tmessageAlignment.startingColumn = -1;", "+\t\t\t\tint alignmentMode = this.preferences.alignment_for_arguments_in_method_invocation;", "-\t\t\t\t\t\t\"messageArguments\", //$NON-NLS-1$", "-\t\t\t\t\t\tthis.preferences.alignment_for_arguments_in_method_invocation,", "+\t\t\t\t\t\tAlignment.MESSAGE_ARGUMENTS,", "+\t\t\t\t\t\talignmentMode,", "+\t\t\t\t\tswitch (alignmentMode & Alignment.SPLIT_MASK) {", "+\t\t\t\t\t\tcase Alignment.M_COMPACT_SPLIT:", "+\t\t\t\t\t\tcase Alignment.M_NEXT_PER_LINE_SPLIT:", "+\t\t\t\t\t\t\targumentsAlignment.startingColumn = this.scribe.column;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\t\t\tint fragmentIndentation = 0;", "+\t\t\t\t\t\t\tif (i == 0) {", "+\t\t\t\t\t\t\t\tint wrappedIndex = argumentsAlignment.wrappedIndex();", "+\t\t\t\t\t\t\t\tif (wrappedIndex >= 0) {", "+\t\t\t\t\t\t\t\t\tfragmentIndentation = argumentsAlignment.fragmentIndentations[wrappedIndex];", "+\t\t\t\t\t\t\t\t\tif ((argumentsAlignment.mode & Alignment.M_INDENT_ON_COLUMN) != 0 && fragmentIndentation > 0) {", "+\t\t\t\t\t\t\t\t\t\tthis.scribe.indentationLevel = fragmentIndentation;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\targumentsAlignment.startingColumn = -1;", "-\t\t\t\tfor (int i = 0; i < argumentsLength; i++) {", "-\t\t\t\t\tif (i > 0) {", "-\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_method_invocation_arguments);", "-\t\t\t\t\t\tthis.scribe.printComment(CodeFormatter.K_UNKNOWN, Scribe.BASIC_TRAILING_COMMENT);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (i > 0 && this.preferences.insert_space_after_comma_in_method_invocation_arguments) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}", "-\t\t\t\t\targuments[i].traverse(this, scope);", "-\t\t\t\t}", "+\t\t\t\targuments[0].traverse(this, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ff2c1c6aec188faa83f46f69fc3a555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "4b34ac952495406305286be091754126c6d25593", "commitAfterChange": "a3337f44ed6348a5f4f65ab1b2584cb8125066c6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "signatureAfterChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "diff": ["-\t\t\t\t\t\t\"messageArguments\", //$NON-NLS-1$", "+\t\t\t\t\t\tAlignment.MESSAGE_ARGUMENTS,", "+\t\tint tieBreakRule = size-startingPositionInCascade > 2 ? Alignment.R_OUTERMOST : Alignment.R_INNERMOST;", "-\t\t\t\t\"cascadingMessageSendAlignment\", //$NON-NLS-1$", "+\t\t\t\tAlignment.CASCADING_MESSAGE_SEND,", "-\t\t\t\tAlignment.R_INNERMOST,", "+\t\t\t\ttieBreakRule,", "-\t\tboolean setStartingColumn = startingPositionInCascade == 1;", "-\t\tswitch (this.preferences.alignment_for_arguments_in_method_invocation) {", "+\t\tboolean setStartingColumn = true;", "+\t\tswitch (this.preferences.alignment_for_arguments_in_method_invocation & Alignment.SPLIT_MASK) {", "+\t\t\t\t\t\tint alignmentMode = this.preferences.alignment_for_arguments_in_method_invocation;", "-\t\t\t\t\t\t\t\t\"messageArguments\", //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tthis.preferences.alignment_for_arguments_in_method_invocation,", "+\t\t\t\t\t\t\t\tAlignment.MESSAGE_ARGUMENTS,", "+\t\t\t\t\t\t\t\talignmentMode,", "+\t\t\t\t\t\t\tswitch (alignmentMode & Alignment.SPLIT_MASK) {", "+\t\t\t\t\t\t\t\tcase Alignment.M_COMPACT_SPLIT:", "+\t\t\t\t\t\t\t\tcase Alignment.M_NEXT_PER_LINE_SPLIT:", "+\t\t\t\t\t\t\t\t\targumentsAlignment.startingColumn = this.scribe.column;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif (j > 0 && this.preferences.insert_space_after_comma_in_method_invocation_arguments) {", "+\t\t\t\t\t\t\t\t\tif (j == 0) {", "+\t\t\t\t\t\t\t\t\t\tint fragmentIndentation = argumentsAlignment.fragmentIndentations[j];", "+\t\t\t\t\t\t\t\t\t\tif ((argumentsAlignment.mode & Alignment.M_INDENT_ON_COLUMN) != 0 && fragmentIndentation > 0) {", "+\t\t\t\t\t\t\t\t\t\t\tthis.scribe.indentationLevel = fragmentIndentation;", "+\t\t\t\t\t\t\t\t\t\t}\t", "+\t\t\t\t\t\t\t\t\t} else if (this.preferences.insert_space_after_comma_in_method_invocation_arguments) {", "+\t\t\t\t\t\t\t\t\targumentsAlignment.startingColumn = -1;"]}], "num": 11896}