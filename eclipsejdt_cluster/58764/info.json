{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8f6d3610ed9653c6ff9582ea17b5c1f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035b7cdad0fdb9371b1fb163f8b202db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "60507801da6a601cb9ccd1a6711dd6f2c042109a", "commitAfterChange": "ce85ea384272e2d2a973888e0c9a4872544d60c3", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 138, "signatureBeforeChange": " public void testSearchScope07() throws CoreException", "signatureAfterChange": " public void testSearchScope07() throws CoreException", "diff": ["-        IJavaSearchScope scope = SearchEngine.createHierarchyScope(null, type, true, true, null);", "+        IJavaSearchScope scope = SearchEngine.createStrictHierarchyScope(null, type, true, false, null);", "-        assertFalse(\"a10.C should be not included in hierarchy scope\", scope.encloses(type));", "-        assertFalse(\"a10/C.java should be included in hierarchy scope\", scope.encloses(cuC.getUnderlyingResource().getFullPath().toString()));       ", "+        assertFalse(\"a10.C should not be included in hierarchy scope\", scope.encloses(type));", "+        assertFalse(\"a10/C.java should not be included in hierarchy scope\", scope.encloses(cuC.getUnderlyingResource().getFullPath().toString()));       ", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91f03f61d046982dac40d023d3d1cea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testHierarchyScopeOnWorkingCopy() throws JavaModelException, CoreException", "signatureAfterChange": " public void testHierarchyScopeOnWorkingCopy() throws JavaModelException, CoreException", "diff": ["-\tICompilationUnit workingCopy = (ICompilationUnit)unit.getWorkingCopy();", "+\tICompilationUnit copy = (ICompilationUnit)unit.getWorkingCopy();", "-\t\tIType type = workingCopy.getType(\"A\");", "+\t\tIType type = copy.getType(\"A\");", "-\t\tassertTrue(\"a9.C should be included in hierarchy scope\", scope.encloses(workingCopy.getType(\"C\")));", "-\t\tassertTrue(\"a9.B should be included in hierarchy scope\", scope.encloses(workingCopy.getType(\"B\")));", "+\t\tassertTrue(\"a9.C should be included in hierarchy scope\", scope.encloses(copy.getType(\"C\")));", "+\t\tassertTrue(\"a9.B should be included in hierarchy scope\", scope.encloses(copy.getType(\"B\")));", "-\t\tworkingCopy.destroy();", "+\t\tcopy.destroy();"]}], "num": 58764}