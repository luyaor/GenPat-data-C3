{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9512233f21a586be293dd50e767d1867", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a7e61e6756c7fd3bb2730fc90c512a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\tIType type = lookup.findType(", "+\t\tNameLookup.Answer answer = lookup.findType(", "+\t\t\tfalse/*don't check restrictions*/,", "-\t\tif (type == null) {", "+\t\tif (answer == null) {", "-\t\t\ttype = findType(fullyQualifiedName.substring(0, lastDot), lookup, considerSecondaryTypes, progressMonitor);", "+\t\t\tIType type = findType(fullyQualifiedName.substring(0, lastDot), lookup, considerSecondaryTypes, progressMonitor);", "+\t\t\treturn type;", "-\t\treturn type;", "+\t\treturn answer.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b337b4bcfd2b0237cc44f7f6b449e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup) throws JavaModelException", "signatureAfterChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\tIType findType(String fullyQualifiedName, NameLookup lookup) throws JavaModelException {", "+\tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException {", "-\t\t\tNameLookup.ACCEPT_ALL);", "+\t\t\tNameLookup.ACCEPT_ALL,", "+\t\t\tconsiderSecondaryTypes,", "+\t\t\tprogressMonitor);", "-\t\t\ttype = findType(fullyQualifiedName.substring(0, lastDot), lookup);", "+\t\t\ttype = findType(fullyQualifiedName.substring(0, lastDot), lookup, considerSecondaryTypes, progressMonitor);"]}], "num": 12837}