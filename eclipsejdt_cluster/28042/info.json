{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7b312bdb2959507d04de6a938e5fbd2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74104181d937b0b93b874e5b1d621f4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "commitAfterChange": "92aee8d421610703027ca2a5b652beed8fbe4ac3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tString[] paths = index.queryDocumentNames(this.folderPath.toString());", "+\t\t\tString containerRelativePath = Util.relativePath(this.folderPath, this.containerPath.segmentCount());", "+\t\t\tString[] paths = index.queryDocumentNames(containerRelativePath);", "-\t\t\t\tfor (int i = 0, max = paths == null ? 0 : paths.length; i < max; i++)", "+\t\t\t\tfor (int i = 0, max = paths == null ? 0 : paths.length; i < max; i++) {", "+\t\t\t\t}", "-\t\t\t\t\tString documentPath = paths[i];", "+\t\t\t\t\tString documentPath =  this.containerPath.toString() + '/' + paths[i];", "-\t\t\t\t\t\tmanager.remove(documentPath, this.containerPath); // write lock will be acquired by the remove operation", "+\t\t\t\t\t\tmanager.remove(paths[i], this.containerPath); // write lock will be acquired by the remove operation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2d19021e529c605887b79998dd2698", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "6138f92fd5c7abeb22a4199219b18e2107d6edbc", "commitAfterChange": "7073418b816148d53c325cad45ff5b7e93774712", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t// all file names belonging to the folder or its subfolders", "-\t\t\tfor (int i = 0, max = results == null ? 0 : results.length; i < max; i++)", "-\t\t\t\tmanager.remove(results[i].getPath(), this.indexPath); // write lock will be acquired by the remove operation", "+\t\t\t// all file names belonging to the folder or its subfolders and that are not excluded (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=32607)", "+\t\t\tfor (int i = 0, max = results == null ? 0 : results.length; i < max; i++) {", "+\t\t\t\tString documentPath = results[i].getPath();", "+\t\t\t\tif (this.exclusionPatterns == null || !Util.isExcluded(new Path(documentPath), this.exclusionPatterns)) {", "+\t\t\t\t\tmanager.remove(documentPath, this.indexPath); // write lock will be acquired by the remove operation", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 28042}