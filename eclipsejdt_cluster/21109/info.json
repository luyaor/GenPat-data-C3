{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fa0d66562a71a9d55a33d294496a84b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c49cbf5abe58c50387dd16ae1e695f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "d3244b9b1f07dec23fc8a11bdb05cd710c7b96c6", "commitAfterChange": "ed58872582a38f521f8bc7cc18b9c76c2c6fa7a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate CompilationUnitDeclaration convert( \t\tISourceType[] sourceTypes, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tCompilationResult compilationResult)", "signatureAfterChange": " \tprivate CompilationUnitDeclaration convert( \t\tISourceType[] sourceTypes, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tCompilationResult compilationResult)", "diff": ["-\t\t\t\tcreateImportReference(sourceType.getPackageName(), start, end);", "-\t\tchar[][] importNames = sourceType.getImports();", "-\t\tint importCount = importNames == null ? 0 : importNames.length;", "+\t\t\t\tcreateImportReference(sourceType.getPackageName(), start, end, false, AccDefault);", "+\t\tISourceImport[]  sourceImports = sourceType.getImports();", "+\t\tint importCount = sourceImports == null ? 0 : sourceImports.length;", "-\t\tfor (int i = 0; i < importCount; i++)", "-\t\t\tthis.unit.imports[i] = createImportReference(importNames[i], start, end);", "+\t\tfor (int i = 0; i < importCount; i++) {", "+\t\t\tISourceImport sourceImport = sourceImports[i];", "+\t\t\tthis.unit.imports[i] = createImportReference(", "+\t\t\t\tsourceImport.getName(), ", "+\t\t\t\tsourceImport.getDeclarationSourceStart(),", "+\t\t\t\tsourceImport.getDeclarationSourceEnd(),", "+\t\t\t\tsourceImport.onDemand(),", "+\t\t\t\tsourceImport.getModifiers());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5a629653cbb8f59998906b092838bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "d3244b9b1f07dec23fc8a11bdb05cd710c7b96c6", "commitAfterChange": "ed58872582a38f521f8bc7cc18b9c76c2c6fa7a1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate ImportReference createImportReference( \t\tchar[] importName, \t\tint start, \t\tint end)", "signatureAfterChange": " \tprivate ImportReference createImportReference( \t\tchar[] importName, \t\tint start, \t\tint end,  \t\tboolean onDemand, \t\tint modifiers)", "diff": ["-\t\tint end) {", "-", "-\t\t/* count identifiers */", "-\t\tint max = importName.length;", "-\t\tint identCount = 0;", "-\t\tfor (int i = 0; i < max; i++) {", "-\t\t\tif (importName[i] == '.')", "-\t\t\t\tidentCount++;", "-\t\t}", "-\t\t/* import on demand? */", "-\t\tboolean onDemand = importName[max - 1] == '*';", "-\t\tif (!onDemand)", "-\t\t\tidentCount++; // one more ident than dots", "-", "-\t\tlong[] positions = new long[identCount];", "+\t\tint end, ", "+\t\tboolean onDemand,", "+\t\tint modifiers) {", "+\t", "+\t\tchar[][] qImportName = CharOperation.splitOn('.', importName);", "+\t\tlong[] positions = new long[qImportName.length];", "-\t\tfor (int i = 0; i < identCount; i++) {", "-\t\t\tpositions[i] = position;", "+\t\tfor (int i = 0; i < qImportName.length; i++) {", "+\t\t\tpositions[i] = position; // dummy positions", "-\t\t\tCharOperation.splitOn('.', importName, 0, max - (onDemand ? 2 : 0)),", "+\t\t\tqImportName,", "-\t\t\tonDemand);", "+\t\t\tonDemand,", "+\t\t\tmodifiers);"]}], "num": 21109}