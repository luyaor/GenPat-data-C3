{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "449bef561c303c8b498b69a4fc455624", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "055fdfcd79e4351d83526655ac317dc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "48d2e5271b9ec9e3f9d53b669ddceb5e8a4c0aff", "commitAfterChange": "a78da08c77ccead3814d2a0c0dfa686cde302733", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected IDocument getDocument(ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " \tprotected void applyTextEdit(ICompilationUnit cu, TextEdit edits) throws JavaModelException", "diff": ["+\t}", "+\tprotected void applyTextEdit(ICompilationUnit cu, TextEdit edits) throws JavaModelException {", "+\t\ttry {", "+\t\t\tcu.applyTextEdit(edits, this.progressMonitor);", "+\t\t} catch (JavaModelException e) {", "+\t\t\tif (e.getJavaModelStatus().getCode() == IJavaModelStatusConstants.BAD_TEXT_EDIT_LOCATION) {", "+\t\t\t\t// content changed under us", "+\t\t\t\tthrow new JavaModelException(e.getException(), IJavaModelStatusConstants.INVALID_CONTENTS);", "+\t\t\t} else {", "+\t\t\t\tthrow e;", "+\t\t\t}", "+\t\t}", "-\t */", "-\tprotected IDocument getDocument(ICompilationUnit cu) throws JavaModelException {", "-\t\tIBuffer buffer = cu.getBuffer();", "-\t\tif (buffer instanceof IDocument)", "-\t\t\treturn (IDocument) buffer;", "-\t\treturn new DocumentAdapter(buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941af9097192bbca4f8c2dad0b406c11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "57cf491b286e3d9f46551508630844a6df8590d1", "commitAfterChange": "2ea79cd27b58b7099f6b996d041a39e3044047e1", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void generateSyntheticBodyForEnumValues(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " public void generateSyntheticBodyForEnumValues(SyntheticMethodBinding methodBinding)", "diff": ["-// TODO (philippe) could rewrite to use System.arraycopy(...) instead of array#clone()", "+//}", "-\tReferenceBinding object = scope.getJavaLangObject();", "+\t", "-\tthis.invokevirtual(", "-\t\tnew UpdatedMethodBinding(", "-\t\t\tenumArray,", "-\t\t\tAccPublic,", "-\t\t\tCLONE,", "-\t\t\tobject,", "-\t\t\tNoParameters,", "-\t\t\tNoExceptions,", "-\t\t\tobject));", "-\tthis.checkcast(enumArray);", "+\tthis.dup();", "+\tthis.astore_0();", "+\tthis.iconst_0();", "+\tthis.aload_0();", "+\tthis.arraylength();", "+\tthis.dup();", "+\tthis.istore_1();", "+\tthis.newArray((ArrayBinding) enumArray);", "+\tthis.dup();", "+\tthis.astore_2();", "+\tthis.iconst_0();", "+\tthis.iload_1();", "+\tthis.invokeSystemArraycopy();", "+\tthis.aload_2();"]}], "num": 71835}