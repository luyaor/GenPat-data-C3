{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a0a653bfe4ed0b83ab7365823dafe08", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2844608de42fd7429ea65732a0c692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["+\t\t} else if(parent instanceof MemberValuePair) {", "+\t\t\tMemberValuePair memberValuePair = (MemberValuePair) parent;", "+\t\t\tif(memberValuePair.binding != null) {", "+\t\t\t\taddExpectedType(memberValuePair.binding.returnType);", "+\t\t\t}", "+\t\t} else if (parent instanceof NormalAnnotation) {", "+\t\t\tNormalAnnotation annotation = (NormalAnnotation) parent;", "+\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "+\t\t\tif(memberValuePairs == null || memberValuePairs.length == 0) {", "+\t\t\t\tif(annotation.resolvedType instanceof ReferenceBinding) {", "+\t\t\t\t\tMethodBinding[] methodBindings =", "+\t\t\t\t\t\t((ReferenceBinding)annotation.resolvedType).availableMethods();", "+\t\t\t\t\tif(methodBindings != null &&", "+\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "+\t\t\t\t\t\t\tCharOperation.equals(methodBindings[0].selector, VALUE)) {", "+\t\t\t\t\t\taddExpectedType(methodBindings[0].returnType);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897663423430b49be6615e0f7b61ed70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void attachOrphanCompletionNode()", "signatureAfterChange": " protected void attachOrphanCompletionNode()", "diff": ["+\t\t", "+\t\tif ((topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_CATCH_AND_RIGHT_PAREN)) {", "+\t\t\tif (this.assistNode instanceof CompletionOnSingleTypeReference &&", "+\t\t\t\t\t((CompletionOnSingleTypeReference)this.assistNode).isException()) {", "+\t\t\t\tbuildMoreTryStatementCompletionContext((TypeReference)this.assistNode);", "+\t\t\t\treturn;", "+\t\t\t} else if (this.assistNode instanceof CompletionOnQualifiedTypeReference &&", "+\t\t\t\t\t((CompletionOnQualifiedTypeReference)this.assistNode).isException()) {", "+\t\t\t\tbuildMoreTryStatementCompletionContext((TypeReference)this.assistNode);", "+\t\t\t\treturn;", "+\t\t\t} else if (this.assistNode instanceof CompletionOnParameterizedQualifiedTypeReference &&", "+\t\t\t\t\t((CompletionOnParameterizedQualifiedTypeReference)this.assistNode).isException()) {", "+\t\t\t\tbuildMoreTryStatementCompletionContext((TypeReference)this.assistNode);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t}", "+\t\t"]}], "num": 56495}