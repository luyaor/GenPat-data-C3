{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "640339f96c21f2d5bf56dbafeea7ef09", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d75ee7ab9862af825ba5b668dfcef7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "c0648c986bd8f9b4b5c031105639a6f9119992bf", "commitAfterChange": "98016f2ec4015d0dc1722d20dcbe6f3ffef66bb4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate boolean addConstraintsToC(Expression[] exprs, Set<ConstraintFormula> c, MethodBinding method)", "signatureAfterChange": "  \tprivate boolean addConstraintsToC(Expression[] exprs, Set<ConstraintFormula> c, MethodBinding method, int inferenceKindForMethod)", "diff": ["-\tprivate boolean addConstraintsToC(Expression[] exprs, Set<ConstraintFormula> c, MethodBinding method) {", "+\tprivate boolean addConstraintsToC(Expression[] exprs, Set<ConstraintFormula> c, MethodBinding method, int inferenceKindForMethod) {", "-\t\t\tswitch (this.inferenceKind) {", "+\t\t\tswitch (inferenceKindForMethod) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea24da23b71b7dd101300f9932bb514", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24eb072a7e8fa246f853df0748e7c66069f4ff20", "commitAfterChange": "cd140389e1d0cdca9f232f9b33d1b09e90034b22", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor)", "signatureAfterChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor, int annotationSourceKind)", "diff": ["-\tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor) {", "-\t\tprintModifiers(annotations, visitor, ICodeFormatterConstants.ANNOTATION_UNSPECIFIED);", "+\tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor, int annotationSourceKind) {", "+\t\tprintModifiers(annotations, visitor, annotationSourceKind, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c541eb6250d13b2ba7aaef2c9e9d0d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "71518664e9e1218e71985865bb98eb8e5168cd32", "commitAfterChange": "6165513415c99ad03f999b37c71bd02bae25f741", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project, Map options)", "signatureAfterChange": "  \tpublic ASTNode runConversion(int astLevel, char[] source, String unitName, IJavaProject project, Map options)", "diff": ["-\tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project, Map options) {", "-\t\tASTParser parser = ASTParser.newParser(AST.JLS2);", "+\tpublic ASTNode runConversion(int astLevel, char[] source, String unitName, IJavaProject project, Map options) {", "+\t\tASTParser parser = ASTParser.newParser(astLevel);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7568471467e7609681633feb4f48fa20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "919eea051fa68beab8d6a9472af076dfa5c6e911", "commitAfterChange": "b2c4ebbc2f8cac6aae79ed28b8148f90096919f6", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event, int eventType)", "diff": ["-\tpublic void resourceChanged(IResourceChangeEvent event) {", "+\tpublic void resourceChanged(IResourceChangeEvent event, int eventType) {", "-\t\t\tswitch(event.getType()){", "+\t\t\tswitch(eventType){"]}], "num": 36631}