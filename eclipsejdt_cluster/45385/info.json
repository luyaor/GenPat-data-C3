{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e92ca2eb19ce006dc9ad467a397a03c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "058425fa0edd4d92b84deb986f1947ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f5476e05b46ec9b70e1bb26b071f29e4868379b5", "commitAfterChange": "3907c5580e4b5fc2088d110e0990a0137b3282f9", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["+\t\t\t\tTypeBinding[] params = method.tiebreakMethod().parameters;", "-\t\t\t\t\tif (!method2.tiebreakMethod().areParametersCompatibleWith(method.tiebreakMethod().parameters)) {", "+\t\t\t\t\tif (!method2.tiebreakMethod().areParametersCompatibleWith(params)) {", "-\t\t\t\t\t\t\tint paramLength = method.parameters.length;", "-\t\t\t\t\t\t\tif (paramLength == method2.parameters.length && paramLength == argumentTypes.length + 1) {", "-\t\t\t\t\t\t\t\tTypeBinding elementsType = ((ArrayBinding) method2.parameters[paramLength - 1]).elementsType();", "-\t\t\t\t\t\t\t\tif (method.parameters[paramLength - 1].isCompatibleWith(elementsType))", "-\t\t\t\t\t\t\t\t\tcontinue; // special case to choose between 2 varargs methods when the last arg is missing", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// check the non-vararg parameters", "+\t\t\t\t\t\t\tint paramLength = params.length;", "+\t\t\t\t\t\t\tTypeBinding[] params2 = method2.tiebreakMethod().parameters;", "+\t\t\t\t\t\t\tif (paramLength != params2.length)", "+\t\t\t\t\t\t\t\tcontinue nextVisible;", "+\t\t\t\t\t\t\tfor (int p = paramLength - 2; p >= 0; p--)", "+\t\t\t\t\t\t\t\tif (params[p] != params2[p] && !params[p].isCompatibleWith(params2[p]))", "+\t\t\t\t\t\t\t\t\tcontinue nextVisible;", "+", "+\t\t\t\t\t\t\tTypeBinding elementsType = ((ArrayBinding) params2[paramLength - 1]).elementsType();", "+\t\t\t\t\t\t\tif (params[paramLength - 1].isCompatibleWith(elementsType))", "+\t\t\t\t\t\t\t\tcontinue; // special case to choose between 2 varargs methods when the last arg is missing or its Object[]"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "856e2a5770d5c6257979bbd3f70a7496", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "b2c3be7bd78bc61f04ab542749dc9420d42f47cb", "commitAfterChange": "bbf4c65896774d7094a1b0af184fa5e65fff430e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic IAnnotationBinding[] getParameterAnnotations(int index)", "signatureAfterChange": "  \tpublic IAnnotationBinding[] getParameterAnnotations(int index)", "diff": ["+\t\tif (getParameterTypes() == NO_TYPE_BINDINGS) {", "+\t\t\treturn AnnotationBinding.NoAnnotations;", "+\t\t}", "-\t\t\treturn this.parameterAnnotations;", "+\t\t\treturn this.parameterAnnotations[index];", "-\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] annots = this.binding.getParameterAnnotations(index);", "-\t\tint length = annots == null ? 0 : annots.length;", "-\t\tif (length == 0) {", "-\t\t\treturn this.parameterAnnotations = AnnotationBinding.NoAnnotations;", "-\t\t}", "-\t\tIAnnotationBinding[] domInstances =new AnnotationBinding[length];", "+\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[][] bindingAnnotations = this.binding.getParameterAnnotations();", "+\t\t// bindingAnnoatations is never null as the method has one or several parameters", "+\t\tint length = bindingAnnotations.length;", "+\t\tthis.parameterAnnotations = new AnnotationBinding[length][];", "-\t\t\tfinal IAnnotationBinding annotationInstance = this.resolver.getAnnotationInstance(annots[i]);", "-\t\t\tif (annotationInstance == null) {", "-\t\t\t\treturn this.parameterAnnotations = AnnotationBinding.NoAnnotations;", "+\t\t\torg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] paramBindingAnnotations = bindingAnnotations[i];", "+\t\t\tint pLength = paramBindingAnnotations.length;", "+\t\t\tthis.parameterAnnotations[i] = new AnnotationBinding[pLength];", "+\t\t\tfor (int j=0; j<pLength; j++) {", "+\t\t\t\tIAnnotationBinding domAnnotation = this.resolver.getAnnotationInstance(paramBindingAnnotations[j]);", "+\t\t\t\tif (domAnnotation == null) {", "+\t\t\t\t\tthis.parameterAnnotations[i] = AnnotationBinding.NoAnnotations;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tthis.parameterAnnotations[i][j] = domAnnotation;", "-\t\t\tdomInstances[i] = annotationInstance;", "-\t\treturn this.parameterAnnotations = domInstances;", "+\t\treturn this.parameterAnnotations[index];"]}], "num": 45385}