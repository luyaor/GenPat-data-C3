{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf5b61921689662ad96a8a1d411ab635", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b74a726df96dfa94acf8170d9fc379a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tprivate Hashtable secondaryTypesMerging(Hashtable secondaryTypes)", "signatureAfterChange": " \tprivate Hashtable secondaryTypesMerging(Hashtable secondaryTypes)", "diff": ["-\t\t\tIterator keys = secondaryTypes.keySet().iterator();", "-\t\t\twhile (keys.hasNext()) {", "-\t\t\t\tString packName = (String) keys.next();", "-\t\t\t\tUtil.verbose(\"\t\t+ \"+packName+':'+secondaryTypes.get(packName) ); //$NON-NLS-1$", "+\t\t\tIterator entries = secondaryTypes.entrySet().iterator();", "+\t\t\twhile (entries.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\tString packName = (String) entry.getKey();", "+\t\t\t\tUtil.verbose(\"\t\t+ \"+packName+':'+ entry.getValue() ); //$NON-NLS-1$", "-\t\tIterator files = indexedSecondaryTypes.keySet().iterator();", "-\t\twhile (files.hasNext()) {", "-\t\t\tIFile file = (IFile) files.next();", "+\t\tIterator entries = indexedSecondaryTypes.entrySet().iterator();", "+\t\twhile (entries.hasNext()) {", "+\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\tIFile file = (IFile) entry.getKey();", "-\t\t\tHashMap fileSecondaryTypes = (HashMap) indexedSecondaryTypes.get(file);", "-\t\t\tIterator packages = fileSecondaryTypes.keySet().iterator();", "-\t\t\twhile (packages.hasNext()) {", "-\t\t\t\tString packageName = (String) packages.next();", "+\t\t\tHashMap fileSecondaryTypes = (HashMap) entry.getValue();", "+\t\t\tIterator entries2 = fileSecondaryTypes.entrySet().iterator();", "+\t\t\twhile (entries2.hasNext()) {", "+\t\t\t\tMap.Entry entry2 = (Map.Entry) entries2.next();", "+\t\t\t\tString packageName = (String) entry2.getKey();", "-\t\t\t\t\tsecondaryTypes.put(packageName, fileSecondaryTypes.get(packageName));", "+\t\t\t\t\tsecondaryTypes.put(packageName, entry2.getValue());", "-\t\t\t\t\tHashMap types = (HashMap) fileSecondaryTypes.get(packageName);", "-\t\t\t\t\tIterator typeNames = types.keySet().iterator();", "-\t\t\t\t\twhile (typeNames.hasNext()) {", "-\t\t\t\t\t\tString typeName = (String) typeNames.next();", "-\t\t\t\t\t\tcachedTypes.put(typeName, types.get(typeName));", "+\t\t\t\t\tHashMap types = (HashMap) entry2.getValue();", "+\t\t\t\t\tIterator entries3 = types.entrySet().iterator();", "+\t\t\t\t\twhile (entries3.hasNext()) {", "+\t\t\t\t\t\tMap.Entry entry3 = (Map.Entry) entries3.next();", "+\t\t\t\t\t\tString typeName = (String) entry3.getKey();", "+\t\t\t\t\t\tcachedTypes.put(typeName, entry3.getValue());", "-\t\t\tIterator keys = secondaryTypes.keySet().iterator();", "-\t\t\twhile (keys.hasNext()) {", "-\t\t\t\tString packName = (String) keys.next();", "-\t\t\t\tUtil.verbose(\"\t\t+ \"+packName+':'+secondaryTypes.get(packName) ); //$NON-NLS-1$", "+\t\t\tentries = secondaryTypes.entrySet().iterator();", "+\t\t\twhile (entries.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\tString packName = (String) entry.getKey();", "+\t\t\t\tUtil.verbose(\"\t\t+ \"+packName+':'+ entry.getValue()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db80919b9d16d558d44c5a9b5722db6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tprivate void secondaryTypesRemoving(Hashtable secondaryTypesMap, IFile file)", "signatureAfterChange": " \tprivate void secondaryTypesRemoving(Hashtable secondaryTypesMap, IFile file)", "diff": ["-\t\t\tIterator keys = secondaryTypesMap.keySet().iterator();", "-\t\t\twhile (keys.hasNext()) {", "-\t\t\t\tString qualifiedName = (String) keys.next();", "-\t\t\t\tbuffer.append(qualifiedName+':'+secondaryTypesMap.get(qualifiedName));", "+\t\t\tIterator entries = secondaryTypesMap.entrySet().iterator();", "+\t\t\twhile (entries.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\tString qualifiedName = (String) entry.getKey();", "+\t\t\t\tbuffer.append(qualifiedName+':'+ entry.getValue());", "-\t\tSet packageKeys = secondaryTypesMap.keySet();", "-\t\tint packagesSize = packageKeys.size(), removedPackagesCount = 0;", "+\t\tSet packageEntries = secondaryTypesMap.entrySet();", "+\t\tint packagesSize = packageEntries.size(), removedPackagesCount = 0;", "-\t\tIterator packages = packageKeys.iterator();", "+\t\tIterator packages = packageEntries.iterator();", "-\t\t\tString packName = (String) packages.next();", "+\t\t\tMap.Entry entry = (Map.Entry) packages.next();", "+\t\t\tString packName = (String) entry.getKey();", "-\t\t\t\tHashMap types = (HashMap) secondaryTypesMap.get(packName);", "-\t\t\t\tSet nameKeys = types.keySet();", "-\t\t\t\tint namesSize = nameKeys.size(), removedNamesCount = 0;", "+\t\t\t\tHashMap types = (HashMap) entry.getValue();", "+\t\t\t\tSet nameEntries = types.entrySet();", "+\t\t\t\tint namesSize = nameEntries.size(), removedNamesCount = 0;", "-\t\t\t\tIterator names = nameKeys.iterator();", "+\t\t\t\tIterator names = nameEntries.iterator();", "-\t\t\t\t\tString typeName = (String) names.next();", "-\t\t\t\t\tIType type = (IType) types.get(typeName);", "+\t\t\t\t\tMap.Entry entry2 = (Map.Entry) names.next();", "+\t\t\t\t\tString typeName = (String) entry2.getKey();", "+\t\t\t\t\tIType type = (IType) entry2.getValue();", "-\t\t\tIterator keys = secondaryTypesMap.keySet().iterator();", "-\t\t\twhile (keys.hasNext()) {", "-\t\t\t\tString qualifiedName = (String) keys.next();", "-\t\t\t\tUtil.verbose(\"\t\t+ \"+qualifiedName+':'+secondaryTypesMap.get(qualifiedName) ); //$NON-NLS-1$", "+\t\t\tIterator entries = secondaryTypesMap.entrySet().iterator();", "+\t\t\twhile (entries.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\tString qualifiedName = (String) entry.getKey();", "+\t\t\t\tUtil.verbose(\"\t\t+ \"+qualifiedName+':'+ entry.getValue()); //$NON-NLS-1$"]}], "num": 17562}