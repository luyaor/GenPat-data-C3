{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d9b4e94a76d90cb8e2f8059e300265f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8d8b12ec9ae4718b6e5869372c004a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/OptionTests.java", "commitBeforeChange": "334a0b8fa7515e2748177404b9d69e6c4c1cde95", "commitAfterChange": "4ffdce0625a4ebd79f698c4122963c247b5d54e6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testBug72214() throws CoreException, BackingStoreException", "signatureAfterChange": " \tpublic void testBug72214() throws CoreException, BackingStoreException", "diff": ["-\t\t// Remove JavaCore instance prefs", "-\t\tIEclipsePreferences javacorePreferences = JavaCore.getInstancePreferences();", "-\t\tjavacorePreferences.removeNode();", "-", "-\t\t// verify that JavaCore preferences have been reset", "-\t\tassertFalse(\"JavaCore preferences should have been reset\", javacorePreferences == JavaCore.getInstancePreferences());", "-\t\tassertFalse(\"JavaCore preferences should be accessible!\", JavaCore.getOptions().isEmpty());", "+\t\ttry {", "+\t\t\t// Remove JavaCore instance prefs", "+\t\t\tIEclipsePreferences javacorePreferences = JavaCore.getInstancePreferences();", "+\t\t\tjavacorePreferences.removeNode();", "+\t", "+\t\t\t// verify that JavaCore preferences have been reset", "+\t\t\tassertFalse(\"JavaCore preferences should have been reset\", javacorePreferences == JavaCore.getInstancePreferences());", "+\t\t\tassertFalse(\"JavaCore preferences should be accessible!\", JavaCore.getOptions().isEmpty());", "+\t\t} finally {\t\t\t", "+\t\t\t// Put back default options", "+\t\t\tJavaCore.setOptions(JavaCore.getDefaultOptions());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990ebce203b2fcf08ad76dfd2e0a378c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["+\t\tsuite.addTest(ASTRewritingJavadocTest.allTests());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce380e4a5c357976f6b7accb2b50138b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t \tprivate void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \t \tprivate void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tif (VERBOSE) {", "-\t\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\ttry {", "+\t\t\t\t\trequestor.beginReporting();", "+\t\t\t\t\tif (VERBOSE) {", "+\t\t\t\t\t\tSystem.out.println(\"Searching for \" + pattern + \" in \" + resource.getFullPath()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t}", "+\t\t\t\t\tSearchParticipant participant = getDefaultSearchParticipant();", "+\t\t\t\t\tSearchDocument[] documents = MatchLocator.addWorkingCopies(", "+\t\t\t\t\t\tpattern,", "+\t\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)},", "+\t\t\t\t\t\tgetWorkingCopies(enclosingElement),", "+\t\t\t\t\t\tparticipant);", "+\t\t\t\t\tparticipant.locateMatches(", "+\t\t\t\t\t\tdocuments, ", "+\t\t\t\t\t\tpattern, ", "+\t\t\t\t\t\tscope, ", "+\t\t\t\t\t\trequestor, ", "+\t\t\t\t\t\tmonitor);", "+\t\t\t\t} finally {", "+\t\t\t\t\trequestor.endReporting();", "-\t\t\t\tSearchParticipant participant = getDefaultSearchParticipant();", "-\t\t\t\tSearchDocument[] documents = MatchLocator.addWorkingCopies(", "-\t\t\t\t\tpattern,", "-\t\t\t\t\tnew SearchDocument[] {new JavaSearchDocument(enclosingElement.getPath().toString(), participant)},", "-\t\t\t\t\tgetWorkingCopies(enclosingElement),", "-\t\t\t\t\tparticipant);", "-\t\t\t\tparticipant.locateMatches(", "-\t\t\t\t\tdocuments, ", "-\t\t\t\t\tpattern, ", "-\t\t\t\t\tscope, ", "-\t\t\t\t\trequestor, ", "-\t\t\t\t\tmonitor);"]}], "num": 6968}