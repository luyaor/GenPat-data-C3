{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a33bb19e4f80e581b6a7f4f85f8007d6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3310b80fe0e4f5ec06a0f8b944865dff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "af0e25a1d5ee864ea84d164d70f77532a60cf58e", "commitAfterChange": "f9abe0eae1be0e7103573798b92ccd764f2825ac", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 228, "signatureBeforeChange": " public void invalidType(ASTNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(ASTNode location, TypeBinding type)", "diff": ["+", "+\tint start = location.sourceStart;", "+\tif (location instanceof org.eclipse.jdt.internal.compiler.ast.SingleTypeReference) {", "+\t\torg.eclipse.jdt.internal.compiler.ast.SingleTypeReference ref =", "+\t\t\t\t(org.eclipse.jdt.internal.compiler.ast.SingleTypeReference) location;", "+\t\tif (ref.annotations != null)", "+\t\t\tstart = end - ref.token.length + 1;", "+\t} else if (location instanceof QualifiedTypeReference) {", "+\t\tQualifiedTypeReference ref = (QualifiedTypeReference) location;", "+\t\tif (ref.annotations != null)", "+\t\t\tstart = (int) (ref.sourcePositions[0] & 0x00000000FFFFFFFFL ) - ref.tokens[0].length + 1;", "+\t}", "+", "-\t\tlocation.sourceStart,", "+\t\tstart,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947a4cf3bfe7ad9d9d3e99a4773da7a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5ae7e6b78bc18a365a04a008c907250a535fa48a", "commitAfterChange": "e30351551cacd61d107b0f2c8e2d961ea6077c69", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " public void invalidType(ASTNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(ASTNode location, TypeBinding type)", "diff": ["+\t} else if (location instanceof ArrayQualifiedTypeReference) {", "+\t\tif (!(location instanceof ParameterizedQualifiedTypeReference)) {", "+\t\t\tArrayQualifiedTypeReference arrayQualifiedTypeReference = (ArrayQualifiedTypeReference) location;", "+\t\t\tlong[] positions = arrayQualifiedTypeReference.sourcePositions;", "+\t\t\tend = (int) positions[positions.length - 1];", "+\t\t}", "+\t} else if (location instanceof ArrayTypeReference) {", "+\t\tif (!(location instanceof ParameterizedSingleTypeReference)) {", "+\t\t\tArrayTypeReference arrayTypeReference = (ArrayTypeReference) location;", "+\t\t\tend = arrayTypeReference.originalSourceEnd;", "+\t\t}"]}], "num": 73021}