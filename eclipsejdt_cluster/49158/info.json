{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc66c2ee65f3ff03c65224bcbca3c0b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6cd8f77478398073a15e14f0ed21f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "995521865cfd6e568bdd12bfb7d4a59fc50611ab", "commitAfterChange": "3efbae02af9125c723d4c2de65767b20d72aaa7a", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void test074()", "signatureAfterChange": " public void test074()", "diff": ["-\t\t\t\"}\"", "+\t\t\t\"}\\n\" +", "+\t\t\t\"public class Y {}\\n\"", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "+\t\t: // no ambiguities in 1.8", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in Y.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid a(I x) {}\\n\" + ", "+\t\t\t\"\t       ^\\n\" + ", "+\t\t\t\"I is a raw type. References to generic type I<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in Y.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass C extends B implements I {\\n\" + ", "+\t\t\t\"\t                             ^\\n\" + ", "+\t\t\t\"I is a raw type. References to generic type I<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in Y.java (at line 28)\\n\" + ", "+\t\t\t\"\tvoid a(I x) {}\\n\" + ", "+\t\t\t\"\t       ^\\n\" + ", "+\t\t\t\"I is a raw type. References to generic type I<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in Y.java (at line 33)\\n\" + ", "+\t\t\t\"\tclass B2 extends A2 {}\\n\" + ", "+\t\t\t\"\t                 ^^\\n\" + ", "+\t\t\t\"A2 is a raw type. References to generic type A2<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in Y.java (at line 34)\\n\" + ", "+\t\t\t\"\tclass C2 extends B2 implements I {\\n\" + ", "+\t\t\t\"\t                               ^\\n\" + ", "+\t\t\t\"I is a raw type. References to generic type I<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0da4424753ba20d299ca43c2c892af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest_1_5.java", "commitBeforeChange": "dc4b7f29cbc081bf926da3e5bbe190211f71fab8", "commitAfterChange": "f7e6d1d2cfb98a7b4978211f1a2a14a589cab571", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test011() throws ClassFormatException, IOException", "signatureAfterChange": " \tpublic void test011() throws ClassFormatException, IOException", "diff": ["+\t\tif (this.complianceLevel.equals(COMPLIANCE_1_6)) {", "+\t\t\texpectedOutput =", "+\t\t\t\t\"// Compiled from X.java (version 1.6 : 50.0, no super bit)\\n\" + ", "+\t\t\t\t\"public abstract @interface X extends java.lang.annotation.Annotation {\\n\" + ", "+\t\t\t\t\"  Constant pool:\\n\" + ", "+\t\t\t\t\"    constant #1 class: #2 X\\n\" + ", "+\t\t\t\t\"    constant #2 utf8: \\\"X\\\"\\n\" + ", "+\t\t\t\t\"    constant #3 class: #4 java/lang/Object\\n\" + ", "+\t\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 class: #6 java/lang/annotation/Annotation\\n\" + ", "+\t\t\t\t\"    constant #6 utf8: \\\"java/lang/annotation/Annotation\\\"\\n\" + ", "+\t\t\t\t\"    constant #7 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #8 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #9 utf8: \\\"RuntimeVisibleAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"Ljava/lang/annotation/Target;\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"value\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"Ljava/lang/annotation/Retention;\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"Ljava/lang/annotation/RetentionPolicy;\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 utf8: \\\"RUNTIME\\\"\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"  RuntimeVisibleAnnotations: \\n\" + ", "+\t\t\t\t\"    #10 @java.lang.annotation.Target(\\n\" + ", "+\t\t\t\t\"      #11 value=[\\n\" + ", "+\t\t\t\t\"        ]\\n\" + ", "+\t\t\t\t\"    )\\n\" + ", "+\t\t\t\t\"    #12 @java.lang.annotation.Retention(\\n\" + ", "+\t\t\t\t\"      #11 value=java.lang.annotation.RetentionPolicy.RUNTIME(enum type #13.#14)\\n\" + ", "+\t\t\t\t\"    )\\n\" + ", "+\t\t\t\t\"}\";", "+\t\t}"]}], "num": 49158}