{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6391d91688aae9d627dd46288f2538bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711f82bfce26a622eb7c625892bb00f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e72c40632f386c18405c37cebd5b66e2533b6c7e", "commitAfterChange": "b5bb35e79825da02c69101a63b609493af9d01dc", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public SearchMatch newLocalVariableReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newLocalVariableReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "diff": ["+\tint bits = reference.bits;", "+\tboolean isCoupoundAssigned = (bits & ASTNode.IsCompoundAssignedMASK) != 0;", "+\tboolean isReadAccess = isCoupoundAssigned || (bits & ASTNode.IsStrictlyAssignedMASK) == 0;", "+\tboolean isWriteAccess = isCoupoundAssigned || (bits & ASTNode.IsStrictlyAssignedMASK) != 0;", "+\tboolean insideDocComment = (bits & ASTNode.InsideJavadoc) != 0;", "-\treturn new LocalVariableReferenceMatch(enclosingElement, accuracy, offset, length, participant, resource);", "+\treturn new LocalVariableReferenceMatch(enclosingElement, accuracy, offset, length, isReadAccess, isWriteAccess, insideDocComment, participant, resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d330e46b27ea0f164c009fddbd9e3444", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "994b7e2201a6044f122169d1a8922423e74571c5", "commitAfterChange": "8cef9873b63abd6271de2eb41584ebd6f6cb2fa0", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic boolean visit(TypeDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration node)", "diff": ["-\t\t\t\tgetScanner().readToToken(typeToken, node.getStartPosition());", "+\t\t\t\tint startPosition = node.getStartPosition();", "+\t\t\t\tif (apiLevel >= AST.JLS3) {", "+\t\t\t\t\tList modifiers = node.modifiers();", "+\t\t\t\t\tfinal int size = modifiers.size();", "+\t\t\t\t\tif (size != 0) {", "+\t\t\t\t\t\tASTNode modifierNode = (ASTNode) modifiers.get(size - 1);", "+\t\t\t\t\t\tstartPosition = modifierNode.getStartPosition() + modifierNode.getLength();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tgetScanner().readToToken(typeToken, startPosition);"]}], "num": 72918}