{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b06ae85baccf6ca1774f52a8ff8afecd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049b492040bc9530473d21deda21705f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "43c55ec0fd64bd306ef21c4d7e4780f0acc5640d", "commitAfterChange": "4ce45fe71444f9feef181a590f2dd1b839b0e917", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void _test059()", "signatureAfterChange": " public void test059()", "diff": ["-public void _test059(){", "+public void test059(){", "-\t    + \" -1.5 -g -preserveAllLocals\"", "+\t    + \" -1.5 -g -preserveAllLocals \"", "-\t\t\"\", ", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/foo.java\\n\" + ", "-\t\t\"Cannot read the source from ---OUTPUT_DIR_PLACEHOLDER---/foo.java due to internal exception java.io.FileNotFoundException: ---OUTPUT_DIR_PLACEHOLDER---/foo.java (Is a directory)\\n\" + ", "-\t\t\"\tat java.io.FileInputStream.open(Native Method)\\n\" + ", "-\t\t\"\tat java.io.FileInputStream.<init>(FileInputStream.java:106)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(Util.java:69)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.batch.CompilationUnit.getContents(CompilationUnit.java:58)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:9106)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:9078)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.parser.Parser.dietParse(Parser.java:7764)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:371)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:397)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:2872)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1269)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.runTest(BatchCompilerTest.java:188)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.runNegativeTest(BatchCompilerTest.java:116)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.core.tests.compiler.regression.BatchCompilerTest.testONLY_059(BatchCompilerTest.java:3073)\\n\" + ", "-\t\t\"\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\" + ", "-\t\t\"\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\\n\" + ", "-\t\t\"\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\\n\" + ", "-\t\t\"\tat java.lang.reflect.Method.invoke(Method.java:585)\\n\" + ", "-\t\t\"\tat junit.framework.TestCase.runTest(TestCase.java:154)\\n\" + ", "-\t\t\"\tat junit.framework.TestCase.runBare(TestCase.java:127)\\n\" + ", "-\t\t\"\tat junit.framework.TestResult$1.protect(TestResult.java:106)\\n\" + ", "-\t\t\"\tat junit.framework.TestResult.runProtected(TestResult.java:124)\\n\" + ", "-\t\t\"\tat junit.framework.TestResult.run(TestResult.java:109)\\n\" + ", "-\t\t\"\tat junit.framework.TestCase.run(TestCase.java:118)\\n\" + ", "-\t\t\"\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\\n\" + ", "-\t\t\"\tat junit.framework.TestSuite.run(TestSuite.java:203)\\n\" + ", "-\t\t\"\tat junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)\\n\" + ", "-\t\t\"\tat junit.extensions.TestDecorator.run(TestDecorator.java:28)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.core.tests.util.CompilerTestSetup.run(CompilerTestSetup.java:48)\\n\" + ", "-\t\t\"\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\\n\" + ", "-\t\t\"\tat junit.framework.TestSuite.run(TestSuite.java:203)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\\n\" + ", "-\t\t\"\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\\n\" + ", "-\t\t\"\tat org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:58)\\n\" + ", "-\t\t\"\tat org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:24)\\n\" + ", "-\t\t\"\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)\\n\" + ", "-\t\t\"\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)\\n\" + ", "-\t\t\"\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)\\n\" + ", "-\t\t\"\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)\\n\" + ", "-\t\t\"\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)\\n\" + ", "-\t\t\"\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\" + ", "-\t\t\"\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\\n\" + ", "-\t\t\"\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\\n\" + ", "-\t\t\"\tat java.lang.reflect.Method.invoke(Method.java:585)\\n\" + ", "-\t\t\"\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\\n\" + ", "-\t\t\"\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\\n\" + ", "-\t\t\"\tat org.eclipse.core.launcher.Main.run(Main.java:977)\\n\" + ", "-\t\t\"\tat org.eclipse.core.launcher.Main.main(Main.java:952)\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"1 problem (1 error)\",", "+\t    \"\",", "+\t    \"----------\\n\" + ", "+\t    \"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/foo.java\\n\" + ", "+\t    \"Cannot read the source from ---OUTPUT_DIR_PLACEHOLDER---/foo.java due to internal exception java.io.FileNotFoundException:---OUTPUT_DIR_PLACEHOLDER---/foo.java (Access is denied)\\n\" + ", "+\t    \"----------\\n\" + ", "+\t    \"1 problem (1 error)\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f64e247c8b73ebfe2e14ab4a6463de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 373, "signatureBeforeChange": " public void _test315_warn_options()", "signatureAfterChange": " public void test315_warn_options()", "diff": ["-// DISABLED due to dysfunctional global default after Bug 366063 - Compiler should not add synthetic @NonNull annotations", "-public void _test315_warn_options() {", "+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=372012", "+public void test315_warn_options() {", "+\t\t\t\t\"p/package-info.java\",", "+\t\t\t\t\"@org.eclipse.jdt.annotation.NonNullByDefault\\n\" +", "+\t\t\t\t\"package p;\\n\",", "-\t\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" +", "-\t\t\t\t\"@SuppressWarnings(\\\"unused\\\")\\n\" +", "-\t\t\t\t\"  Object foo(@Nullable Object o, Object o2) {\\n\" +", "-\t\t\t\t\"    if (o.toString() == \\\"\\\"){ return null;}\\n\" +", "-\t\t\t\t\"    if (o2 == null) {}\\n\" +", "-\t\t\t\t\"    goo(null).toString();\\n\" +", "-\t\t\t\t\"\t return null;\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  @Nullable Object goo(Object o2) {\\n\" +", "-\t\t\t\t\"    return new Object();\\n\" +", "-\t\t\t\t\"  }\\n\" +", "-\t\t\t\t\"  @NonNullByDefault Object hoo(Object o2) {\\n\" + // redundant", "-\t\t\t\t\"    if (o2 == null)\\n\" +", "-\t\t\t\t\"\t    return null;\\n\" +", "-\t\t\t\t\"    return this;\\n\" +", "-\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p1/X1.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X1 {\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p1/X1a.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X1a {\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"Default1.java\",", "+\t\t\t\t\"public class Default1 {\\n\" +", "-\t\t+ \" -warn:+nullAnnot -warn:+null -nonNullByDefault -proc:none -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+\t\t+ \" -warn:+nullAnnot -warn:+null -missingNullDefault -proc:none -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "+\t\t\"\",", "+\t\t\"\",", "+\t\ttrue);", "+}", "-\t\t\"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 6)\\n\" + ", "-\t\t\"\tif (o.toString() == \\\"\\\"){ return null;}\\n\" + ", "-\t\t\"\t    ^\\n\" + ", "-\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" + ", "-\t\t\"2. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 6)\\n\" + ", "-\t\t\"\tif (o.toString() == \\\"\\\"){ return null;}\\n\" + ", "-\t\t\"\t                                ^^^^\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"3. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 7)\\n\" + ", "-\t\t\"\tif (o2 == null) {}\\n\" + ", "-\t\t\"\t    ^^\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "-\t\t\"4. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 8)\\n\" + ", "-\t\t\"\tgoo(null).toString();\\n\" + ", "-\t\t\"\t^^^^^^^^^\\n\" + ", "-\t\t\"Potential null pointer access: The method goo(Object) may return null\\n\" + ", "-\t\t\"5. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 8)\\n\" + ", "-\t\t\"\tgoo(null).toString();\\n\" + ", "-\t\t\"\t    ^^^^\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"6. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 9)\\n\" + ", "-\t\t\"\treturn null;\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Type mismatch: required \\'@NonNull Object\\' but the provided value is null\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"7. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 14)\\n\" + ", "-\t\t\"\t@NonNullByDefault Object hoo(Object o2) {\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Nullness default is redundant with the global default\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"8. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/p/X.java (at line 15)\\n\" + ", "-\t\t\"\tif (o2 == null)\\n\" + ", "-\t\t\"\t    ^^\\n\" + ", "-\t\t\"Null comparison always yields false: The variable o2 cannot be null at this location\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"8 problems (8 warnings)\", "]}], "num": 18718}