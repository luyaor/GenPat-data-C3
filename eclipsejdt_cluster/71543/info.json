{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d5c32065187aa66e3fe9d7d2be739ad", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130b8dcdf72b7bdeeb519d531b3c7569", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "41d581d409dae5f0d748723af7ae4e2608bb1b15", "commitAfterChange": "8a6b6162ae3ffaa7b5448bfc27d1bab3854207d2", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " protected void updateMatch(ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, boolean patternHasTypeParameters, int depth, MatchLocator locator)", "signatureAfterChange": " protected void updateMatch(ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, boolean patternHasTypeParameters, int depth, MatchLocator locator)", "diff": ["-\t\t\tfor (int i=0, l=argumentsBindings.length; i<l; i++) {", "-\t\t\t\tif (argumentsBindings[i] != typeVariables[i]) {", "-\t\t\t\t\tneedUpdate = true;", "-\t\t\t\t\tbreak;", "+\t\t\tint length = argumentsBindings.length;", "+\t\t\tif (length == typeVariables.length) {", "+\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\tif (argumentsBindings[i] != typeVariables[i]) {", "+\t\t\t\t\t\tneedUpdate = true;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4c1ea7438ed0cdeaee02da21b961e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "4bbb4bdba42bb171f40eb249f5f0ad7982c2c1c4", "commitAfterChange": "b85f67ab41f4508f6f38ed4f6e25c5ae5aac2a6d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\tboolean allEqual = true;", "-\t    for (int i = 0; allEqual && i < argLength; i++)", "-\t\t\tallEqual = typeVariables[i] == argTypes[i];", "-\t    if (!allEqual) {", "+\t\tboolean isIdentical = this.resolvedType instanceof SourceTypeBinding;", "+\t\tif (isIdentical) {", "+\t\t    for (int i = 0; i < argLength; i++) {", "+\t\t\t\tif (typeVariables[i] != argTypes[i]) {", "+\t\t\t\t\tisIdentical = false;", "+\t\t\t\t    break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t", "+\t    if (!isIdentical) {"]}], "num": 71543}