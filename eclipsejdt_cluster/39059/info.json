{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd4196f655cd32ff1baa108e0214e128", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b2e378fbde36f822e89f134802d609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "commitAfterChange": "e5768103d107f9b2dcb4a1b6e2eaa25ca6df9ded", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testExternalJarInternalExternalJar() throws CoreException", "signatureAfterChange": " public void testExternalJarInternalExternalJar() throws CoreException, IOException", "diff": ["-public void testExternalJarInternalExternalJar() throws CoreException {", "+public void testExternalJarInternalExternalJar() throws CoreException, IOException {", "-\t\tString libPath = getLibraryPath();", "-\t\tString p1Path = libPath+\"/p1.jar\";", "-\t\tString p2Path = libPath+\"/p2.jar\";", "-\t\tFile f1= new File(p1Path);", "-\t\tFile f2 = new File(p2Path);", "-\t\t", "-\t\tIFile fooIFile = this.createFile(internalFooPath, read(f1));", "+\t\tIFile fooIFile = this.createFile(internalFooPath, new byte[0]);", "-\t\tcopy(f2, f);", "+\t\tf.createNewFile();", "+\t\ttouch(f);", "-\t\tString deltaPath = externalFooPath.toString();", "+\t\tString deltaPath = externalFooPath.toOSString();", "-\t\t\t\"P[*]: {CHILDREN}\\n\"+", "+\t\t\t\"P[*]: {CHILDREN | CLASSPATH CHANGED}\\n\"+", "-\t\t\t\"\t\"+deltaPath.replace('/', File.separatorChar)+\"[*]: {ADDED TO CLASSPATH}\\n\"+", "+\t\t\t\"\t\"+deltaPath+\"[+]: {}\\n\"+", "-\t} catch (IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b255d308f1b7b59f548b1a846afe9a5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "771b4c40cf73bcb30918b075488484b558fef59b", "commitAfterChange": "7eb7b6a9ea17140bb2b2b3238e96a41ca533c75e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testParseCompilationUnit3() throws CoreException, IOException", "signatureAfterChange": " \tpublic void testParseCompilationUnit3() throws CoreException, IOException", "diff": ["-\t\t\t// copy X.class in lib folder", "-\t\t\tString sourceWorkspacePath = getSourceWorkspacePath();", "-\t\t\tString targetWorkspacePath = getWorkspaceRoot().getLocation().toFile().getCanonicalPath();", "-\t\t\tcopyDirectory(new File(new File(sourceWorkspacePath, \"AttachSourceTests\"), \"lib\"), new File(new File(targetWorkspacePath, \"P1\"), \"lib\"));", "-\t\t\tgetProject(\"P1\").refreshLocal(IResource.DEPTH_INFINITE, null);", "-\t\t\t", "+\t\t\t// create X.class in lib folder", "+\t\t\t/* Evaluate the following in a scrapbook:", "+\t\t\t\torg.eclipse.jdt.core.tests.model.ModifyingResourceTests.generateClassFile(", "+\t\t\t\t\t\"X\",", "+\t\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\t\"}\")", "+\t\t\t*/", "+\t\t\tbyte[] bytes = new byte[] {", "+\t\t\t\t-54, -2, -70, -66, 0, 3, 0, 45, 0, 13, 1, 0, 1, 88, 7, 0, 1, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 7, 0, 3, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100, 101, 12, 0, 5, 0, 6, 10, 0, 4, 0, 8, 1, 0, 15, 76, 105, 110, 101, 78, 117, ", "+\t\t\t\t109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 6, 88, 46, 106, 97, 118, 97, 0, 33, 0, 2, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1, 0, 5, 0, 6, 0, 1, 0, 7, 0, 0, 0, 29, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 9, -79, 0, 0, 0, 1, 0, 10, 0, 0, 0, 6, ", "+\t\t\t\t0, 1, 0, 0, 0, 1, 0, 1, 0, 11, 0, 0, 0, 2, 0, 12, ", "+\t\t\t};", "+\t\t\tthis.createFile(\"P1/lib/X.class\", new String(bytes));", "+\t\t\t\t\t\t", "-\t\t\tcreateFolder(\"P1/libsrc/p\");", "+\t\t\tcreateFolder(\"P1/libsrc\");", "-\t\t\t\t\"P1/libsrc/p/X.java\",", "-\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\"P1/libsrc/X.java\",", "-\t\t\tcreateFolder(\"P1/src/p\");", "-\t\t\tcreateFile(\"P1/src/p/Y.java\", \"\");", "+\t\t\tcreateFile(\"P1/src/Y.java\", \"\");", "-\t\t\tworkingCopy = getCompilationUnit(\"P1/src/p/Y.java\").getWorkingCopy(owner, null, null);", "+\t\t\tworkingCopy = getCompilationUnit(\"P1/src/Y.java\").getWorkingCopy(owner, null, null);", "-\t\t\t\t\"package p;\\n\" +", "-\t\t\tIClassFile classFile = getClassFile(\"P1/lib/p/X.class\");", "+\t\t\tIClassFile classFile = getClassFile(\"P1/lib/X.class\");", "-\t\t\t\t\"p.Y\",", "+\t\t\t\t\"Y\","]}], "num": 39059}