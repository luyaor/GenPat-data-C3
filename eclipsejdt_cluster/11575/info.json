{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58afaad4c96b11be7d6f956d758e07bc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13432d4212580b3ed3b4123fb41efe58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "ad94e7c70968c32bc14232e983e71554b9e4e876", "commitAfterChange": "2a5005d0f0faf2e32a9545440516f869ce34bcdd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic Object[] getEmulationPath( \t\t\tReferenceBinding targetEnclosingType,  \t\t\tboolean onlyExactMatch, \t\t\tboolean ignoreEnclosingArgInConstructorCall)", "signatureAfterChange": " \tpublic Object[] getEmulationPath( \t\t\tReferenceBinding targetEnclosingType,  \t\t\tboolean onlyExactMatch, \t\t\tboolean ignoreEnclosingArgInConstructorCall)", "diff": ["-\t\t//TODO: (philippe) investigate why exactly test76 fails if ignoreEnclosingArgInConstructorCall is always false", "+\t\t\t\t", "-\t\t// identity check", "-\t\tif (!currentMethodScope.isStatic ", "-\t\t\t&& (!currentMethodScope.isConstructorCall || ignoreEnclosingArgInConstructorCall)", "-\t\t\t&& (sourceType == targetEnclosingType", "-\t\t\t\t|| (!onlyExactMatch && targetEnclosingType.isSuperclassOf(sourceType)))) {", "-\t\t\tif (currentMethodScope.isConstructorCall) {", "-\t\t\t\treturn NoEnclosingInstanceInConstructorCall;", "+\t\t// use 'this' if possible", "+\t\tif (!currentMethodScope.isConstructorCall && !currentMethodScope.isStatic) {", "+\t\t\tif (sourceType == targetEnclosingType || (!onlyExactMatch && targetEnclosingType.isSuperclassOf(sourceType))) {", "+\t\t\t\treturn EmulationPathToImplicitThis; // implicit this is good enough", "-\t\t\tif (currentMethodScope.isStatic){", "-\t\t\t\treturn NoEnclosingInstanceInStaticContext;", "-\t\t\t}", "-\t\t\treturn EmulationPathToImplicitThis; // implicit this is good enough", "+\t\t\t} else if (currentMethodScope.isStatic){", "+\t\t\t\treturn NoEnclosingInstanceInStaticContext;", "-\t\t\t\tif (currentMethodScope.isStatic){", "-\t\t\t\t\treturn NoEnclosingInstanceInStaticContext;", "-\t\t\t\t}", "+\t\t\t\t// reject allocation and super constructor call", "+\t\t\t\tif (ignoreEnclosingArgInConstructorCall ", "+\t\t\t\t\t\t&& currentMethodScope.isConstructorCall ", "+\t\t\t\t\t\t&& (sourceType == targetEnclosingType || (!onlyExactMatch && targetEnclosingType.isSuperclassOf(sourceType)))) {", "+\t\t\t\t\treturn NoEnclosingInstanceInConstructorCall;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c67871c9b39e5af8e46b57502885a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "89c02f523f65c89809fb264fe79e53a85533954d", "commitAfterChange": "56b6a38e6a1d1e5e3885772174f09cd30c719b47", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "signatureAfterChange": " \tpublic void _invokeinterface( \t\tint pc, \t\tint index, \t\tbyte nargs, \t\tIConstantPoolEntry constantInterfaceMethodref)", "diff": ["-\t\t\t.append('\\t')", "+\t\t\t.append(Util.bind(\"disassembler.tab\")) //$NON-NLS-1$", "-\t\t\t.append(' ')", "-\t\t\t.append(' ')", "+\t\t\t.append(Util.bind(\"disassembler.classmemberseparator\")) //$NON-NLS-1$"]}], "num": 11575}