{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "464a1a5629c2abea70845e3d62bcb5e6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ed7412a2e359c5623da2eecf9a335f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-public boolean isMatchingIndexRecord() {", "-\tTypeDeclarationPattern record = getTypeDeclarationRecord();", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\tTypeDeclarationPattern pattern = (TypeDeclarationPattern) decodedPattern;", "-\t\t\tif (this.classOrInterface != record.classOrInterface) return false;", "+\t\t\tif (this.classOrInterface != pattern.classOrInterface) return false;", "-\tif (this.pkg != null && !CharOperation.equals(this.pkg, record.pkg, isCaseSensitive()))", "+\tif (this.pkg != null && !CharOperation.equals(this.pkg, pattern.pkg, this.isCaseSensitive))", "-\t\t\tif (record.enclosingTypeNames != CharOperation.NO_CHAR_CHAR) return false;", "+\t\t\tif (pattern.enclosingTypeNames != CharOperation.NO_CHAR_CHAR) return false;", "-\t\t\tif (!CharOperation.equals(this.enclosingTypeNames, record.enclosingTypeNames, isCaseSensitive()))", "-\t\t\t\tif (!CharOperation.equals(record.enclosingTypeNames, ONE_ZERO_CHAR)) // if not a local or anonymous type", "+\t\t\tif (!CharOperation.equals(this.enclosingTypeNames, pattern.enclosingTypeNames, this.isCaseSensitive))", "+\t\t\t\tif (!CharOperation.equals(pattern.enclosingTypeNames, ONE_ZERO_CHAR)) // if not a local or anonymous type", "-\treturn matchesName(this.simpleName, record.simpleName);", "+\treturn matchesName(this.simpleName, pattern.simpleName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af96eaab83b7bf4d8024ef7a3232bfdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-public boolean isMatchingIndexRecord() {", "-\tQualifiedTypeDeclarationPattern record = getQualifiedTypeDeclarationRecord();", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\tQualifiedTypeDeclarationPattern pattern = (QualifiedTypeDeclarationPattern) decodedPattern;", "-\t\t\tif (this.classOrInterface != record.classOrInterface) return false;", "+\t\t\tif (this.classOrInterface != pattern.classOrInterface) return false;", "-\tif (!matchesName(this.pkg, record.qualification))", "-\t\treturn false;", "-\t", "-\treturn matchesName(this.simpleName, record.simpleName);", "+\treturn matchesName(this.simpleName, pattern.simpleName) && matchesName(this.pkg, pattern.qualification);"]}], "num": 29802}