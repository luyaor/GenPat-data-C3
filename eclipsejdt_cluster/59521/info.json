{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "299124ae61ff85f7aa6565f65afda85c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "503132fb09e11315ff4ce68863778d01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9033b38dbde8d5f7ad2f8e95220a29f0a229ea8f", "commitAfterChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "signatureAfterChange": "  \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "diff": ["+\t\t\tExtraDimension lastDimension = null;", "+\t\t\tif (this.ast.apiLevel() >= AST.JLS8) {", "+\t\t\t\tif (type.isArrayType()) { // should always be true", "+\t\t\t\t\tList dimensions = ((ArrayType) type).dimensions();", "+\t\t\t\t\tif (!dimensions.isEmpty()) {", "+\t\t\t\t\t\tlastDimension = (ExtraDimension) dimensions.get(dimensions.size() - 1);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\t\tList annotations  = null;", "-\t\t\t\tif (type.isAnnotatable()) {", "-\t\t\t\t\tannotations = ((AnnotatableType) type).annotations();", "-\t\t\t\t} else if (type.isArrayType()) {", "-\t\t\t\t\tArrayType arrayType = (ArrayType) type;", "-\t\t\t\t\tannotations = arrayType.dimensions().isEmpty() ? null : ((arrayType.getDimensionAt(0)).annotations());", "-\t\t\t\t}", "-\t\t\t\tif (annotations != null) {", "+\t\t\t\tif (lastDimension != null) { // should always be true", "+\t\t\t\t\tList annotations = lastDimension.annotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77cecc29e08675df7a1447190820469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "signatureAfterChange": "  \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "diff": ["-\t\t\tif (type.isAnnotatable()) {", "-\t\t\t\tAnnotatableType annotatableType = (AnnotatableType) type;", "-\t\t\t\tif (this.ast.apiLevel() >= AST.JLS8 && !annotatableType.annotations().isEmpty()) {", "-\t\t\t\t\tIterator annotations = annotatableType.annotations().iterator();", "-\t\t\t\t\twhile (annotations.hasNext()) {", "-\t\t\t\t\t\tAnnotation annotation = (Annotation) annotations.next();", "+\t\t\tif (this.ast.apiLevel() >= AST.JLS8) {", "+\t\t\t\tList annotations  = null;", "+\t\t\t\tif (type.isAnnotatable()) {", "+\t\t\t\t\tannotations = ((AnnotatableType) type).annotations();", "+\t\t\t\t} else if (type.isArrayType()) {", "+\t\t\t\t\tArrayType arrayType = (ArrayType) type;", "+\t\t\t\t\tannotations = arrayType.dimensions().isEmpty() ? null : ((arrayType.getDimensionAt(0)).annotations());", "+\t\t\t\t}", "+\t\t\t\tif (annotations != null) {", "+\t\t\t\t\tIterator iter = annotations.iterator();", "+\t\t\t\t\twhile (iter.hasNext()) {", "+\t\t\t\t\t\tAnnotation annotation = (Annotation) iter.next();"]}], "num": 59521}