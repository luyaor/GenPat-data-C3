{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82dd11066ed0b8b6ae5c9b8d692a9f8b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5fc15613a7facd29514b568a799699", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "ee8ad1e40e9b16f34ac6204dee3c91af5b27ff77", "commitAfterChange": "a6e44391963b63fa0c27651827313192cc7a80a0", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void test026() throws Exception", "signatureAfterChange": " \tpublic void test026() throws Exception", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = Y<String>.@Marker Z::foo;\\n\" + ", "+\t\t\t\t\"\t                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc926ff58afacd593d6d481e2295500", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "6e5d8fb1fa59c43c60c58828e1e292aaafa3465f", "commitAfterChange": "108910be72e713e6e104fafacd635988e5383096", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void test019() throws Exception", "signatureAfterChange": " \tpublic void test019() throws Exception", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\t\"\tpublic class X<T extends Object & Comparable<? super @Marker String>> {}\\n\" + ", "+\t\t\t\t\"\t                                                      ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d34287a12456d6e7a8a704c5cebbad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "25a0c02d6979e76d70832f78f8eb60bd371c0ad1", "commitAfterChange": "1b6413921860c74cfa469f859f6fc627d6400adf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tIX i = () -> 42;\\n\" + ", "+\t\t\t\"\t             ^^\\n\" + ", "+\t\t\t\"Void methods cannot return a value\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdffa2e61e2e7c513161e4d15497aac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "f00bbaa23fed1154a64cf4ed92a1441708756023", "commitAfterChange": "8d1d658761d5e634e1f9986cdb54c46ecd8cbc2e", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " public void test139()", "signatureAfterChange": " public void test139()", "diff": ["-\t\t\"1. WARNING in X.java (at line 9)\\n\" +", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "+\t\t\"\tpublic XX foo(Number n) { return null; }\\n\" +", "+\t\t\"\t       ^^\\n\" +", "+\t\t\"Type safety: The return type XX for foo(Number) from the type X needs unchecked conversion to conform to T from the type I\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. WARNING in X.java (at line 9)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8b352b06c34876616399059f34e453", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 279, "signatureBeforeChange": " \tpublic void test277()", "signatureAfterChange": " \tpublic void test277()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic void useList(List l) {\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method useList(List) of type Y should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02ff37de56c1de8e51a5acba0870b0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "38f73e89bd4606189d7e6d499593d5aa49ab247d", "commitAfterChange": "83b83ec335a27590393034d86f94208edbfcc45a", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test043()", "signatureAfterChange": " \tpublic void test043()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" + ", "-\t\t\t\"\tabstract class E<A, B> extends C<A> implements I<B> {}\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X { void test(E<Integer,Integer> e) { e.id(new Integer(1)); } }\\n\" + ", "+\t\t\t\"\t                                                     ^^\\n\" + ", "+\t\t\t\"The method id(Integer) is ambiguous for the type E<Integer,Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tabstract class E<A, B> extends C<A> implements I<B> {}\\n\" + "]}], "num": 64943}