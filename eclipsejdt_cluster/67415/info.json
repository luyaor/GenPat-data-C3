{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b6e8f1e42d78852925d46a4766024a4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65a816b6f77b55c39047a39a5896c273", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "1d27ab4a3d73ff8313e5972d7d4f96a23b370614", "commitAfterChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic Map properties()", "signatureAfterChange": " \tpublic Map properties()", "diff": ["-\t\tif (property1 == null) {", "+\t\tif (this.property1 == null) {", "-\t\tif (property1 instanceof String) {", "+\t\tif (this.property1 instanceof String) {", "-\t\t\treturn Collections.singletonMap(property1, property2);", "+\t\t\treturn Collections.singletonMap(this.property1, this.property2);", "-\t\tif (property2 == null) {", "-\t\t\tproperty2 = Collections.unmodifiableMap((Map) property1);", "+\t\tif (this.property2 == null) {", "+\t\t\tthis.property2 = Collections.unmodifiableMap((Map) this.property1);", "-\t\treturn (Map) property2;", "+\t\treturn (Map) this.property2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd0f690787a87d9a8f70152eee322c99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic TypeBinding reportError(BlockScope scope)", "signatureAfterChange": " public TypeBinding reportError(BlockScope scope)", "diff": ["+}", "+public TypeBinding reportError(BlockScope scope) {", "+\t//=====error cases=======", "+\tthis.constant = Constant.NotAConstant;", "+\tif (this.binding instanceof ProblemFieldBinding) {", "+\t\tscope.problemReporter().invalidField(this, (FieldBinding) this.binding);", "+\t} else if (this.binding instanceof ProblemReferenceBinding || this.binding instanceof MissingTypeBinding) {", "+\t\tscope.problemReporter().invalidType(this, (TypeBinding) this.binding);", "+\t} else {", "+\t\tscope.problemReporter().unresolvableReference(this, this.binding);", "-\tpublic TypeBinding reportError(BlockScope scope) {", "-\t\t", "-\t\t//=====error cases=======", "-\t\tconstant = Constant.NotAConstant;", "-\t\tif (binding instanceof ProblemFieldBinding) {", "-\t\t\tscope.problemReporter().invalidField(this, (FieldBinding) binding);", "-\t\t} else if (binding instanceof ProblemReferenceBinding) {", "-\t\t\tscope.problemReporter().invalidType(this, (TypeBinding) binding);", "-\t\t} else {", "-\t\t\tscope.problemReporter().unresolvableReference(this, binding);", "-\t\t}", "-\t\treturn null;", "-\t}", "+\treturn null;", "+}"]}], "num": 67415}