{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcb222d69aabe31af3d9ae4928552056", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f465623cd75880cab20da8e95047f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "0660a80b4f83507ec084149491c197acba246b67", "commitAfterChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test040()", "signatureAfterChange": " \tpublic void test040()", "diff": ["+\t\t\t\"\t                                                      ^\\n\" + ", "+\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X[] x(); }\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tabstract class Z implements X { public abstract X[] x(); }\\n\" + ", "+\t\t\t\"\t                                                ^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f79bf264916c2b8a9435bccb1f3f3e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "62a40ae820eb3f4d9fe13acbfcd6c17882e53721", "commitAfterChange": "6e5d8fb1fa59c43c60c58828e1e292aaafa3465f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test033() throws Exception", "signatureAfterChange": " \tpublic void test033() throws Exception", "diff": ["-\t\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tY y1 = new @Marker X().new @Marker Y();\\n\" + ", "+\t\t\t\t\"\t                            ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tY y2 = new @Marker X().new <String> @Marker Y();\\n\" + ", "+\t\t\t\t\"\t                                     ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + "]}], "num": 24566}