{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c28133ef8862bcc317c8dce27a99d3fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fa21593671711cf60f097edb4595aec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " private long findLastTypeArgumentInfo(TypeReference typeRef)", "signatureAfterChange": " private long findLastTypeArgumentInfo(TypeReference typeRef)", "diff": ["-\t\t\tfor (int i=lastTypeArguments.length-1; i>=0 && last==null; i++) {", "-\t\t\t\tlast = lastTypeArguments[i];", "+\t\t\tif (lastTypeArguments != null) {", "+\t\t\t\tfor (int i=lastTypeArguments.length-1; i>=0 && last==null; i++) {", "+\t\t\t\t\tlast = lastTypeArguments[i];", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa78deaac0eef02378328f890616623", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public void executeNestedOperation(JavaModelOperation operation, int subWorkAmount) throws JavaModelException", "signatureAfterChange": "\r public void executeNestedOperation(JavaModelOperation operation, int subWorkAmount) throws JavaModelException", "diff": ["-\t\tfor (int i = 0; i < operation.fDeltas.length; i++) {\r", "-\t\t\taddDelta(operation.fDeltas[i]);\r", "+\t\tif (operation.fDeltas != null) {\r", "+\t\t\tfor (int i = 0; i < operation.fDeltas.length; i++) {\r", "+\t\t\t\taddDelta(operation.fDeltas[i]);\r", "+\t\t\t}\r"]}], "num": 10578}