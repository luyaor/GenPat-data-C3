{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6df0d11c4f58ea145c13a355989f38d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65488796edbfcf98035aa105e01a28f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemTypeAndMethodTest.java", "commitBeforeChange": "65f890bbea90cd2421a6ab66f84aac632ed3ecc6", "commitAfterChange": "f30a18a2decb6f1fda736d299a391b81b93c8d2a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test008()", "signatureAfterChange": " public void test008()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\", //-----------------------------------------------------------------------", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\t\"\t\tq1.q2.Zork z;\\n\" +", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"}\t\\n\",", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tq1.q2.Zork z;\\n\" + ", "-\t\t\t\"\t^^\\n\" + ", "-\t\t\t\"q1 cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull,", "-\t\t\tfalse);", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tfalse /* do not flush output directory */,", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\", //-----------------------------------------------------------------------", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\"\t\tq1.q2.Zork z;\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\t\\n\",", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tnull /* no custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tq1.q2.Zork z;\\n\" + ", "+\t\t\"\t^^\\n\" + ", "+\t\t\"q1 cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.SKIP_UNTIL_FRAMEWORK_FIX /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af54467286eed7358e2c1f3edbe2271a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " public void test145()", "signatureAfterChange": " public void test145()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\t\"EnumA.java\",", "-\t\t\t\t\"public enum EnumA {\\r\\n\" + ", "-\t\t\t\t\"  B1,\\r\\n\" + ", "-\t\t\t\t\"  B2;\\r\\n\" + ", "-\t\t\t\t\"  public void foo(){}\\r\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"ClassC.java\",", "-\t\t\t\t\"public class ClassC {\\r\\n\" + ", "-\t\t\t\t\"  void bar() {\\r\\n\" + ", "-\t\t\t\t\"    EnumA.B1.B1.foo();\\r\\n\" + ", "-\t\t\t\t\"    EnumA.B1.B2.foo();\\r\\n\" + ", "-\t\t\t\t\"  }\\r\\n\" + ", "-\t\t\t\t\"}\"", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"EnumA.java\",", "+\t\t\t\"public enum EnumA {\\r\\n\" + ", "+\t\t\t\"  B1,\\r\\n\" + ", "+\t\t\t\"  B2;\\r\\n\" + ", "+\t\t\t\"  public void foo(){}\\r\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"ClassC.java\",", "+\t\t\t\"public class ClassC {\\r\\n\" + ", "+\t\t\t\"  void bar() {\\r\\n\" + ", "+\t\t\t\"    EnumA.B1.B1.foo();\\r\\n\" + ", "+\t\t\t\"    EnumA.B1.B2.foo();\\r\\n\" + ", "+\t\t\t\"  }\\r\\n\" + ", "+\t\t\t\"}\"", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}], "num": 39224}