{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b692894f873d99c9d89131131e66df40", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb74e4a89a264137a73425cbf9477bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic SourceMapper(IPath zipPath, String rootPath, Map options)", "signatureAfterChange": " \tpublic SourceMapper(IPath sourcePath, String rootPath, Map options)", "diff": ["-\tpublic SourceMapper(IPath zipPath, String rootPath, Map options) {", "-\t\tthis.fZipPath = zipPath;", "-\t\tthis.fRootPath = rootPath.replace('\\\\', '/');", "-\t\tif (this.fRootPath.endsWith(\"/\" )) { //$NON-NLS-1$", "-\t\t\tthis.fRootPath = this.fRootPath.substring(0, this.fRootPath.lastIndexOf('/'));", "+\tpublic SourceMapper(IPath sourcePath, String rootPath, Map options) {", "+\t\tthis.sourcePath = sourcePath;", "+\t\trootPath = rootPath.replace('\\\\', '/');", "+\t\tif (rootPath.endsWith(\"/\" )) { //$NON-NLS-1$", "+\t\t\trootPath =rootPath.substring(0, rootPath.lastIndexOf('/'));", "+\t\tthis.rootPath = rootPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8a040421f3fb1cb06a1828d6145b96b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b2a1a7d064fd5695fce4ad30f84d3e52d57db8d6", "commitAfterChange": "58d495f741112fe1313f49af60925198c18bb8e1", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \t\tpublic void printStats()", "signatureAfterChange": "  \t\tpublic void printStats()", "diff": ["-\t\t\tfinal boolean isTimed = this.main.timing;", "+\t\t\tfinal boolean isTimed = (this.main.timing & TIMING_ENABLED) != 0;", "-\t\t\t\tlong time = System.currentTimeMillis() - this.main.startTime;", "-\t\t\t\tthis.logTiming(time, this.main.lineCount);", "-\t\t\t\tif (this.main.times != null) {", "-\t\t\t\t\tthis.main.times[this.main.timesCounter++] = time;", "-\t\t\t\t}", "+\t\t\t\tCompilerStats compilerStats = this.main.batchCompiler.stats;", "+\t\t\t\tcompilerStats.startTime = this.main.startTime; // also include batch initialization times", "+\t\t\t\tcompilerStats.endTime = System.currentTimeMillis(); // also include batch output times", "+\t\t\t\tthis.logTiming(compilerStats);"]}], "num": 43472}