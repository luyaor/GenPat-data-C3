{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80cfad94fc6bcc1982a13784613ebef6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7763f7aae633df5c4f91b83e1eb6e1b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "cd183320c3c7103a7cac7c96f1ba42f087c13d49", "commitAfterChange": "9318beb1001c9d1a97d62cd25a1df5140d1d4221", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "signatureAfterChange": " \tpublic  FileGenerationResult generateFileDuringReconcile( \t\t\tICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents, WorkingCopyOwner workingCopyOwner, \t\t\tIProblemRequestor problemRequestor, IProgressMonitor progressMonitor )", "diff": ["-\t\t\tjme.printStackTrace();", "+\t\t\tAptPlugin.log(jme, \"Could not generate file for type: \" + typeName);", "-\t\t\tce.printStackTrace();", "+\t\t\tAptPlugin.log(ce, \"Could not generate file for type: \" + typeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6d622cd1cc449e0adb34da66efee04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "cd183320c3c7103a7cac7c96f1ba42f087c13d49", "commitAfterChange": "9318beb1001c9d1a97d62cd25a1df5140d1d4221", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate static AnnotationProcessorFactory loadFactoryFromClassLoader( String factoryName, ClassLoader cl )", "signatureAfterChange": "  \tprivate static AnnotationProcessorFactory loadFactoryFromClassLoader( String factoryName, ClassLoader cl )", "diff": ["-\t\t\t// TODO:  log this stack trace", "-\t\t\te.printStackTrace();", "+\t\t\tAptPlugin.log(e, \"Unexpected failure to load APF: \" + factoryName);", "-\t\t\t// TODO:  log this error", "-\t\t\tncdfe.printStackTrace();", "+\t\t\tAptPlugin.log(ncdfe, \"Could not find APF: \" + factoryName);"]}], "num": 61854}