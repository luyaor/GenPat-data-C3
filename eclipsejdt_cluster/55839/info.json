{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b68de317ccd33fae5b4f97e102e19eb7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c07cf2b163d24b562a95fb5e9448b66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t    MethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite);", "+\t    MethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite, Scope.APPLICABILITY);", "-\t\treturn visible[0];", "+\t\t// 1.8: Give inference a chance to perform outstanding tasks (18.5.2):", "+\t\treturn inferInvocationType(invocationSite, visible[0], argumentTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38920ba67eda9c7b34664684ade0659", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  public MethodBinding getConstructor(ReferenceBinding receiverType, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t    MethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite, Scope.APPLICABILITY);", "+\t    MethodBinding compatibleMethod = computeCompatibleMethod(methods[i], argumentTypes, invocationSite);", "-\t\t// 1.8: Give inference a chance to perform outstanding tasks (18.5.2):", "-\t\treturn inferInvocationType(invocationSite, visible[0], argumentTypes);", "+\t\treturn visible[0];"]}], "num": 55839}