{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4453e7cc9ebe1cef2bce103490337fc7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf61adf58c88aacd5aef30e0c112d529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " protected NameReference getUnspecifiedReference()", "signatureAfterChange": " protected NameReference getUnspecifiedReference(boolean rejectTypeAnnotations)", "diff": ["-protected NameReference getUnspecifiedReference() {", "+protected NameReference getUnspecifiedReference(boolean rejectTypeAnnotations) {", "-\t\treturn super.getUnspecifiedReference();", "+\t\treturn super.getUnspecifiedReference(rejectTypeAnnotations);", "+\tif (rejectTypeAnnotations) {", "+\t\tconsumeNonTypeUseName();", "+\t}", "+\t\t\t// There is some voodoo going on here in combination with SelectionScanne#scanIdentifierOrKeyword, do in Rome as Romans do and leave the stacks at the right depth.", "+\t\t\tfor (int i = 0; i < completionIndex; i++) {", "+\t\t\t\tpushOnTypeAnnotationLengthStack(0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6220032e4ebd197705fe4815dfcb994", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected NameReference getUnspecifiedReference()", "signatureAfterChange": " protected NameReference getUnspecifiedReference(boolean rejectTypeAnnotations)", "diff": ["-protected NameReference getUnspecifiedReference() {", "+protected NameReference getUnspecifiedReference(boolean rejectTypeAnnotations) {", "+\tif (rejectTypeAnnotations) {", "+\t\tconsumeNonTypeUseName();", "+\t}", "-\t\treturn super.getUnspecifiedReference();", "+\t\treturn super.getUnspecifiedReference(rejectTypeAnnotations);"]}], "num": 43181}