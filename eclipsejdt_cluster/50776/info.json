{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c7006469f132133964e80f9b7ca395e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e02a5de30b5840a9e3042bb4dd0861", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": " \tpublic void test325()", "signatureAfterChange": " \tpublic void test325()", "diff": ["-\t\t\t\"3. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX.Item k = new X.Item();\\n\" + ", "+\t\t\t\"\t^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX.Item k = new X.Item();\\n\" + ", "+\t\t\t\"\t               ^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX.Item k = new X.Item();\\n\" + ", "+\t\t\t\"\t^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX.Item k = new X.Item();\\n\" + ", "+\t\t\t\"\t               ^^^^^^\\n\" + ", "+\t\t\t\"Type safety: X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17793e0479e66ebe5e862cb1d6c59d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3f665dc08ffa02e27b74efb0940c16f2120a11f8", "commitAfterChange": "307e2de84d078daed3099015a7ac89d980746b6b", "methodNumberBeforeChange": 750, "methodNumberAfterChange": 750, "signatureBeforeChange": " public void test0730()", "signatureAfterChange": " public void test0730()", "diff": ["-\t\t\"----------\\n\"", "-\t\t//TODO should be", "-//\t\t\"----------\\n\" + ", "-//\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-//\t\t\"\tZork z;\\n\" + ", "-//\t\t\"\t^^^^\\n\" + ", "-//\t\t\"Zork cannot be resolved to a type\\n\" + ", "-//\t\t\"----------\\n\" + ", "-//\t\t\"2. WARNING in X.java (at line 11)\\n\" + ", "-//\t\t\"\tprivate SuperInterface< ? extends SuperInterface> x = null;\\n\" + ", "-//\t\t\"\t                                  ^^^^^^^^^^^^^^\\n\" + ", "-//\t\t\"X.SuperInterface is a raw type. References to generic type X.SuperInterface<A> should be parameterized\\n\" + ", "-//\t\t\"----------\\n\" + ", "-//\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "-//\t\t\"\t((SubInterface) this.x).getString();\\n\" + ", "-//\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-//\t\t\"Cannot cast from X.SuperInterface<capture#1-of ? extends X.SuperInterface> to X.SubInterface\\n\" + ", "-//\t\t\"----------\\n\"", "-\t\t);", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"\t((SubInterface) this.x).getString();\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Cannot cast from X.SuperInterface<capture#1-of ? extends X.SuperInterface> to X.SubInterface\\n\" + ", "+\t\t\"----------\\n\"\t);"]}], "num": 50776}