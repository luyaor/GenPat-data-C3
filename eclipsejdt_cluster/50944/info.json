{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "534fc7b2f3195d8a7422cb851821392e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034fe5278ed3b05f5618f70fae51b36f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "commitAfterChange": "0bbfe267fb7eaaa77628088e8cdbd841ddb40de5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic String getEncoding()", "signatureAfterChange": " \tpublic String getEncoding()", "diff": ["+\t\t// Return the encoding of the associated file", "-\t\tif (resource != null)", "-\t\t\treturn JavaCore.create(resource.getProject()).getOption(JavaCore.CORE_ENCODING, true);", "-\t\treturn JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\tif (resource != null) {", "+\t\t\ttry {", "+\t\t\t\treturn resource.getCharset();", "+\t\t\t}", "+\t\t\tcatch(CoreException ce) {", "+\t\t\t\ttry {", "+\t\t\t\t\treturn ResourcesPlugin.getWorkspace().getRoot().getDefaultCharset();", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t// use no encoding", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035c733069b070a16b0b147d6e3b5e66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "2aafd163940041eceef8b780ff91e2b7a2e51bfb", "commitAfterChange": "1748a55668f189f632b3b49793f54d9718d62af3", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  \tpublic void testArrayType()", "signatureAfterChange": "  \tpublic void testArrayType()", "diff": ["+\t\tfinal ArrayType x3 = this.ast.newArrayType(x, 2);", "+\t\tassertTrue(x3.getDimensions() == 7);", "+\t\t", "+\t\ttry {", "+\t\t\tthis.ast.newArrayType(null, 2);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// ignore - expected", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.ast.newArrayType(x, 0);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// ignore - expected", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.ast.newArrayType(x, 100000);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// ignore - expected", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355850c85dcb62791d1ac723b9aa65be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "commitAfterChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 242, "signatureBeforeChange": " \tpublic void testMethodDeclaration()", "signatureAfterChange": " \tpublic void testMethodDeclaration()", "diff": ["+\t\t\ttry {", "+\t\t\t\tx.typeParameters();", "+\t\t\t\tassertTrue(\"Should have failed\", false);", "+\t\t\t} catch(UnsupportedOperationException e) {", "+\t\t\t\t// pass", "+\t\t\t}", "+\t\t\ttry {", "+\t\t\t\tx.isVarargs();", "+\t\t\t\tassertTrue(\"Should have failed\", false);", "+\t\t\t} catch(UnsupportedOperationException e) {", "+\t\t\t\t// pass", "+\t\t\t}", "+\t\ttry {", "+\t\t\tx.setExtraDimensions(-1);", "+\t\t\tassertTrue(\"Should fail\", false);", "+\t\t} catch(IllegalArgumentException e) {", "+\t\t\t// pass", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439680e1bd5094ef3286f9c7324a4731", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  \tpublic Hashtable getOptions()", "signatureAfterChange": "  \tpublic Hashtable getOptions()", "diff": ["+\t\ttry {", "+\t\t\tfinal IEclipsePreferences eclipsePreferences = this.preferencesLookup[PREF_INSTANCE];", "+\t\t\tString[] instanceKeys = eclipsePreferences.keys();", "+\t\t\tfor (int i=0, length=instanceKeys.length; i<length; i++) {", "+\t\t\t\tString optionName = instanceKeys[i];", "+\t\t\t\tmigrateObsoleteOption(options, optionName, eclipsePreferences.get(optionName, null));", "+\t\t\t}", "+\t\t} catch (BackingStoreException e) {", "+\t\t\t// skip", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dff88d5e21532252df15941ddf0e827", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "07ee10ab5650bcb39d86bc9b77c1572a63409b02", "commitAfterChange": "15960429370eb59e63bf5b77d39c92b5c06c9f8e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "diff": ["+\t\tString encoding = null;", "+\t\ttry {", "+\t\t\tencoding = sourceResource.getCharset();", "+\t\t}", "+\t\tcatch (CoreException ce) {", "+\t\t\t// use no encoding", "+\t\t}", "-\t\t\t\t\tString encoding = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tencoding = destFile.getCharset();", "-\t\t\t\t\t}", "-\t\t\t\t\tcatch (CoreException ce) {", "-\t\t\t\t\t\t// use no encoding", "-\t\t\t\t\t}", "-\t\t\t\t\tString encoding = null;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tencoding = destFile.getCharset();", "-\t\t\t\t\t}", "-\t\t\t\t\tcatch (CoreException ce) {", "-\t\t\t\t\t\t// use no encoding", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea6332f2f932e3d102862a44351178b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "480bd4c12ce02b942d6c4f0771fb76bf589234f5", "commitAfterChange": "ce2c87f60c7bf0abdf832c7e10d53fc443b08819", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 230, "signatureBeforeChange": "  \tpublic void setOptions(Hashtable newOptions)", "signatureAfterChange": "  \tpublic void setOptions(Hashtable newOptions)", "diff": ["-\t\ttry {", "-\t\t\t\tinstancePreferences.clear();", "+\t\t\t\ttry {", "+\t\t\t\t\tinstancePreferences.clear();", "+\t\t\t\t} catch(BackingStoreException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t\ttry {", "+\t\t\t\t\t// persist options", "+\t\t\t\t\tinstancePreferences.flush();", "+\t\t\t\t} catch(BackingStoreException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "-", "-\t\t\t// persist options", "-\t\t\tinstancePreferences.flush();", "-", "-\t\t} catch (BackingStoreException e) {", "-\t\t\t// ignore", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e3f2da7e3784da272cf33da6bc4f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "4c8a3ba34c720dda98e8d56ba71f0361efbe740b", "commitAfterChange": "c06cfa4791f8eb98381a7dd55dd6950dbcddf37c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t@Override \tpublic void printElements(Writer w, Element... elements)", "signatureAfterChange": " \t@Override \tpublic void printElements(Writer w, Element... elements)", "diff": ["-\t\t// TODO Auto-generated method stub", "-", "+\t\tString lineSeparator = System.getProperty(\"line.separator\"); //$NON-NLS-1$", "+\t\tfor (Element element : elements) {", "+\t\t\ttry {", "+\t\t\t\tw.write(element.toString());", "+\t\t\t\tw.write(lineSeparator);", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// ignore", "+\t\t\t}", "+\t\t}", "+\t\ttry {", "+\t\t\tw.flush();", "+\t\t} catch (IOException e) {", "+\t\t\t// ignore", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d70d188c3103671e361072678edf96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "52b00369d469c7b24a63a3fde464411aba7b73af", "commitAfterChange": "2bfa11153ef154267e539d45f27351ed761ef0a2", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["+\t\t\tIMarker marker = null;", "-\t\t\t\t\tcreateClasspathProblemMarker(", "+\t\t\t\t\tmarker = createClasspathProblemMarker(", "+\t\t\t\t\t\tif (marker != null) {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tmarker.setAttribute(IJavaModelMarker.UNBOUND_VARIABLE, rawEntry.getPath().segment(0));", "+\t\t\t\t\t\t\t} catch(CoreException e) {", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (marker != null) {", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tmarker.setAttribute(IJavaModelMarker.UNBOUND_CONTAINER, rawEntry.getPath().makeRelative().toString());", "+\t\t\t\t\t\t\t} catch(CoreException e) {", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}], "num": 50944}