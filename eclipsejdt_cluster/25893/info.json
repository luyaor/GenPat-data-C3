{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cce252127a69b9206926e90b6e09113", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0168d9e1f1e56cfeec7146695bc7c14d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \tpublic boolean visit(JavadocArgumentExpression expression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tAllocationExpression allocationExpression, \t\t\tClassScope scope)", "diff": ["+\t}", "+\tpublic boolean visit(", "+\t\t\tAllocationExpression allocationExpression,", "+\t\t\tClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb20d33d67c04784efb3d8fae580382", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void endVisit(AND_AND_Expression and_and_Expression, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit( \t\t\tAllocationExpression allocationExpression, \t\t\tClassScope scope)", "diff": ["+\t}", "+\tpublic void endVisit(", "+\t\t\tAllocationExpression allocationExpression,", "+\t\t\tClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ec600852dba8cabc15087789e94b61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void endVisit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "signatureAfterChange": " \tpublic void endVisit( \t\t\tArrayAllocationExpression arrayAllocationExpression, \t\t\tClassScope scope)", "diff": ["+\t}", "+\tpublic void endVisit(", "+\t\t\tArrayAllocationExpression arrayAllocationExpression,", "+\t\t\tClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df37412138e29b9071bb5bbf4e7f464b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void endVisit( \t\t\tAllocationExpression allocationExpression, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic void endVisit(AND_AND_Expression and_and_Expression, BlockScope scope)", "diff": ["-\t}", "-\tpublic void endVisit(", "-\t\t\tAllocationExpression allocationExpression,", "-\t\t\tClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb526ec7832b61ec90d09eb1cb50307e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void endVisit(FieldReference fieldReference, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit( \t\t\tConditionalExpression conditionalExpression, \t\t\tClassScope scope)", "diff": ["+\t}", "+\tpublic void endVisit(", "+\t\t\tConditionalExpression conditionalExpression,", "+\t\t\tClassScope scope) {"]}], "num": 25893}