{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "558f867c03472a339b8a47554007d3e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f1cb14da9ed6f01ccddb4eb81682f20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "aa8f6fbf0e343000a37ce36c64e696c5aab0f7ab", "commitAfterChange": "4bcb18adef599eed2469d0c3af57b805220a0f02", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": " public void test189()", "signatureAfterChange": " public void test189()", "diff": ["-\t\t\t\"interface I {\\n\" +", "-\t\t\t\"    void m() throws CloneNotSupportedException, InterruptedException;\\n\" +", "+\t\t\t\"interface Interface {\\n\" + ", "+\t\t\t\"    void foo() throws CloneNotSupportedException, InterruptedException;\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class AbstractClass1 {\\n\" + ", "+\t\t\t\"    public abstract void foo() throws ClassNotFoundException, CloneNotSupportedException;\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class AbstractClass2 extends AbstractClass1  implements Interface {\\n\" + ", "+\t\t\t\"\tvoid bar() {\\n\" + ", "+\t\t\t\"        try {\\n\" + ", "+\t\t\t\"        \tfoo();\\n\" + ", "+\t\t\t\"        } catch (CloneNotSupportedException e) {\\n\" + ", "+\t\t\t\"        }\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class X extends AbstractClass2 {\\n\" + ", "+\t\t\t\"\t@Override\\n\" + ", "+\t\t\t\"\tpublic void foo() throws CloneNotSupportedException {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class Y extends AbstractClass2 {\\n\" +", "+\t\t\t\"\t@Override public void foo() throws ClassNotFoundException, CloneNotSupportedException {}\\n\" +", "-\t\t\t\"abstract class A {\\n\" +", "-\t\t\t\"    public abstract void m() throws ClassNotFoundException, CloneNotSupportedException;\\n\" +", "+\t\t\t\"class Z extends AbstractClass2 {\\n\" +", "+\t\t\t\"\t@Override public void foo() throws CloneNotSupportedException, InterruptedException {}\\n\" +", "-\t\t\t\"abstract class B extends A implements I {\\n\" +", "-\t\t\t\"\tvoid test() {\\n\" +", "-\t\t\t\"        try { m(); } catch (CloneNotSupportedException e) { }\\n\" +", "-\t\t\t\"    }\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"class X extends A implements I {\\n\" +", "-\t\t\t\"\t@Override public void m() throws CloneNotSupportedException {}\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"class Y extends A implements I {\\n\" +", "-\t\t\t\"\t@Override public void m() throws ClassNotFoundException, CloneNotSupportedException {}\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"class Z extends A implements I {\\n\" +", "-\t\t\t\"\t@Override public void m() throws CloneNotSupportedException, InterruptedException {}\\n\" +", "-\t\t\t\"}\\n\" +", "-\t\t\t\"class All extends A implements I {\\n\" +", "-\t\t\t\"\t@Override public void m() throws ClassNotFoundException, CloneNotSupportedException, InterruptedException {}\\n\" +", "+\t\t\t\"class All extends AbstractClass2 {\\n\" +", "+\t\t\t\"\t@Override public void foo() throws ClassNotFoundException, CloneNotSupportedException, InterruptedException {}\\n\" +", "-\t\t\"1. ERROR in X.java (at line 16)\\n\" + ", "-\t\t\"\t@Override public void m() throws ClassNotFoundException, CloneNotSupportedException {}\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\"\t@Override public void foo() throws ClassNotFoundException, CloneNotSupportedException {}\\n\" + ", "+\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Exception ClassNotFoundException is not compatible with throws clause in Interface.foo()\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 25)\\n\" + ", "+\t\t\"\t@Override public void foo() throws CloneNotSupportedException, InterruptedException {}\\n\" + ", "-\t\t\"Exception ClassNotFoundException is not compatible with throws clause in I.m()\\n\" + ", "+\t\t\"Exception InterruptedException is not compatible with throws clause in AbstractClass1.foo()\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 19)\\n\" + ", "-\t\t\"\t@Override public void m() throws CloneNotSupportedException, InterruptedException {}\\n\" + ", "-\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Exception InterruptedException is not compatible with throws clause in A.m()\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 28)\\n\" + ", "+\t\t\"\t@Override public void foo() throws ClassNotFoundException, CloneNotSupportedException, InterruptedException {}\\n\" + ", "+\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Exception ClassNotFoundException is not compatible with throws clause in Interface.foo()\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\"\t@Override public void m() throws ClassNotFoundException, CloneNotSupportedException, InterruptedException {}\\n\" + ", "-\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Exception ClassNotFoundException is not compatible with throws clause in I.m()\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\"\t@Override public void m() throws ClassNotFoundException, CloneNotSupportedException, InterruptedException {}\\n\" + ", "-\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Exception InterruptedException is not compatible with throws clause in A.m()\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 28)\\n\" + ", "+\t\t\"\t@Override public void foo() throws ClassNotFoundException, CloneNotSupportedException, InterruptedException {}\\n\" + ", "+\t\t\"\t                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Exception InterruptedException is not compatible with throws clause in AbstractClass1.foo()\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0701bf15524921874d7138c6c1f1b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "cc547ec5c074d17ff882a095dbec68dcad72a87a", "commitAfterChange": "99250bacae54994417cccb9e6d497671bd34c73a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void test016()", "signatureAfterChange": " \t \tpublic void test016()", "diff": ["-\t\t\t\"     7  astore 6\\n\" + ", "-\t\t\t\"     9  iconst_0\\n\" + ", "-\t\t\t\"    10  istore 4\\n\" + ", "-\t\t\t\"    12  aload 6\\n\" + ", "-\t\t\t\"    14  arraylength\\n\" + ", "-\t\t\t\"    15  istore 5\\n\" + ", "-\t\t\t\"    17  goto 49\\n\" + ", "-\t\t\t\"    20  aload 6\\n\" + ", "-\t\t\t\"    22  iload 4\\n\" + ", "-\t\t\t\"    24  aaload\\n\" + ", "-\t\t\t\"    25  astore_3 [e]\\n\" + ", "-\t\t\t\"    26  iload_2 [n]\\n\" + ", "-\t\t\t\"    27  iconst_1\\n\" + ", "-\t\t\t\"    28  if_icmpne 34\\n\" + ", "-\t\t\t\"    31  goto 46\\n\" + ", "-\t\t\t\"    34  aload_3 [e]\\n\" + ", "-\t\t\t\"    35  invokevirtual X.value() : int [50]\\n\" + ", "-\t\t\t\"    38  istore_0 [val]\\n\" + ", "-\t\t\t\"    39  getstatic java.lang.System.out : java.io.PrintStream [52]\\n\" + ", "-\t\t\t\"    42  iload_0 [val]\\n\" + ", "-\t\t\t\"    43  invokevirtual java.io.PrintStream.println(int) : void [58]\\n\" + ", "-\t\t\t\"    46  iinc 4 1\\n\" + ", "-\t\t\t\"    49  iload 4\\n\" + ", "-\t\t\t\"    51  iload 5\\n\" + ", "-\t\t\t\"    53  if_icmplt 20\\n\" + ", "-\t\t\t\"    56  iload_1 [res]\\n\" + ", "-\t\t\t\"    57  ireturn\\n\" + ", "+\t\t\t\"     7  dup\\n\" + ", "+\t\t\t\"     8  astore 6\\n\" + ", "+\t\t\t\"    10  arraylength\\n\" + ", "+\t\t\t\"    11  istore 5\\n\" + ", "+\t\t\t\"    13  iconst_0\\n\" + ", "+\t\t\t\"    14  istore 4\\n\" + ", "+\t\t\t\"    16  goto 48\\n\" + ", "+\t\t\t\"    19  aload 6\\n\" + ", "+\t\t\t\"    21  iload 4\\n\" + ", "+\t\t\t\"    23  aaload\\n\" + ", "+\t\t\t\"    24  astore_3 [e]\\n\" + ", "+\t\t\t\"    25  iload_2 [n]\\n\" + ", "+\t\t\t\"    26  iconst_1\\n\" + ", "+\t\t\t\"    27  if_icmpne 33\\n\" + ", "+\t\t\t\"    30  goto 45\\n\" + ", "+\t\t\t\"    33  aload_3 [e]\\n\" + ", "+\t\t\t\"    34  invokevirtual X.value() : int [50]\\n\" + ", "+\t\t\t\"    37  istore_0 [val]\\n\" + ", "+\t\t\t\"    38  getstatic java.lang.System.out : java.io.PrintStream [52]\\n\" + ", "+\t\t\t\"    41  iload_0 [val]\\n\" + ", "+\t\t\t\"    42  invokevirtual java.io.PrintStream.println(int) : void [58]\\n\" + ", "+\t\t\t\"    45  iinc 4 1\\n\" + ", "+\t\t\t\"    48  iload 4\\n\" + ", "+\t\t\t\"    50  iload 5\\n\" + ", "+\t\t\t\"    52  if_icmplt 19\\n\" + ", "+\t\t\t\"    55  iload_1 [res]\\n\" + ", "+\t\t\t\"    56  ireturn\\n\" + ", "-\t\t\t\"        [pc: 26, line: 17]\\n\" + ", "-\t\t\t\"        [pc: 31, line: 18]\\n\" + ", "-\t\t\t\"        [pc: 34, line: 20]\\n\" + ", "-\t\t\t\"        [pc: 39, line: 21]\\n\" + ", "-\t\t\t\"        [pc: 46, line: 16]\\n\" + ", "-\t\t\t\"        [pc: 56, line: 23]\\n\" + ", "+\t\t\t\"        [pc: 25, line: 17]\\n\" + ", "+\t\t\t\"        [pc: 30, line: 18]\\n\" + ", "+\t\t\t\"        [pc: 33, line: 20]\\n\" + ", "+\t\t\t\"        [pc: 38, line: 21]\\n\" + ", "+\t\t\t\"        [pc: 45, line: 16]\\n\" + ", "+\t\t\t\"        [pc: 55, line: 23]\\n\" + ", "-\t\t\t\"        [pc: 39, pc: 46] local: val index: 0 type: int\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 58] local: res index: 1 type: int\\n\" + ", "-\t\t\t\"        [pc: 4, pc: 58] local: n index: 2 type: int\\n\" + ", "-\t\t\t\"        [pc: 26, pc: 46] local: e index: 3 type: X\\n\" + ", "+\t\t\t\"        [pc: 38, pc: 45] local: val index: 0 type: int\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 57] local: res index: 1 type: int\\n\" + ", "+\t\t\t\"        [pc: 4, pc: 57] local: n index: 2 type: int\\n\" + ", "+\t\t\t\"        [pc: 25, pc: 45] local: e index: 3 type: X\\n\" + ", "-\t\t\t\"        [pc: 20, full, stack: {}, locals: {_, int, int, _, int, int, X[]}]\\n\" + ", "-\t\t\t\"        [pc: 34, full, stack: {}, locals: {_, int, int, X, int, int, X[]}]\\n\" + ", "-\t\t\t\"        [pc: 46, full, stack: {}, locals: {_, int, int, _, int, int, X[]}]\\n\" + ", "-\t\t\t\"        [pc: 49, same]\\n\";", "+\t\t\t\"        [pc: 19, full, stack: {}, locals: {_, int, int, _, int, int, X[]}]\\n\" + ", "+\t\t\t\"        [pc: 33, full, stack: {}, locals: {_, int, int, X, int, int, X[]}]\\n\" + ", "+\t\t\t\"        [pc: 45, full, stack: {}, locals: {_, int, int, _, int, int, X[]}]\\n\" + ", "+\t\t\t\"        [pc: 48, same]\\n\";"]}], "num": 2534}