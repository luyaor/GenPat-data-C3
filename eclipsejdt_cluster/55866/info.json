{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36f027911ed164881b985d568d5de02e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942bb9a6ac07d09803d80637007954c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "43e1a872f6aa500346aa424b28bb0fdd0f4213de", "commitAfterChange": "252ad74c503b99b6172e14b9ea5fbadb70b4062c", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 157, "signatureBeforeChange": " protected void consumeStatementFor()", "signatureAfterChange": " protected void consumeStatementFor()", "diff": ["-\tif (action instanceof Block) {", "-\t\tpushOnAstStack(", "-\t\t\tnew ForStatement(", "-\t\t\t\tinits, ", "-\t\t\t\tcond, ", "-\t\t\t\tupdates, ", "-\t\t\t\taction, ", "-\t\t\t\tscope, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendStatementPosition)); ", "-\t} else {", "-\t\tpushOnAstStack(", "-\t\t\tnew ForStatement(", "-\t\t\t\tinits, ", "-\t\t\t\tcond, ", "-\t\t\t\tupdates, ", "-\t\t\t\taction, ", "-\t\t\t\tscope, ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendPosition)); ", "-\t}", "+\tpushOnAstStack(", "+\t\tnew ForStatement(", "+\t\t\tinits, ", "+\t\t\tcond, ", "+\t\t\tupdates, ", "+\t\t\taction, ", "+\t\t\tscope, ", "+\t\t\tintStack[intPtr--], ", "+\t\t\tendStatementPosition)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66f499de94d39c223af61c922d51595", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d9946aa08d332f21913babd60933e773f1cec911", "commitAfterChange": "0ea299ebf767a99b8c60a0e465d456db5539b922", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "\r protected void consumeStatementFor()", "signatureAfterChange": "\r protected void consumeStatementFor()", "diff": ["-\r", "-\tpushOnAstStack(\r", "-\t\tnew ForStatement(\r", "-\t\t\tinits, \r", "-\t\t\tcond, \r", "-\t\t\tupdates, \r", "-\t\t\taction, \r", "-\t\t\tscope, \r", "-\t\t\tintStack[intPtr--], \r", "-\t\t\tendStatementPosition)); \r", "+\tif (action instanceof Block) {\r", "+\t\tpushOnAstStack(\r", "+\t\t\tnew ForStatement(\r", "+\t\t\t\tinits, \r", "+\t\t\t\tcond, \r", "+\t\t\t\tupdates, \r", "+\t\t\t\taction, \r", "+\t\t\t\tscope, \r", "+\t\t\t\tintStack[intPtr--], \r", "+\t\t\t\tendStatementPosition)); \r", "+\t} else {\r", "+\t\tpushOnAstStack(\r", "+\t\t\tnew ForStatement(\r", "+\t\t\t\tinits, \r", "+\t\t\t\tcond, \r", "+\t\t\t\tupdates, \r", "+\t\t\t\taction, \r", "+\t\t\t\tscope, \r", "+\t\t\t\tintStack[intPtr--], \r", "+\t\t\t\tendPosition)); \r", "+\t}\r"]}], "num": 55866}