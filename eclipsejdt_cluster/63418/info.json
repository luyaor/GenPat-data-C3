{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "840691e00ae3598006c5e29fad173ee4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87944e60b9c851c35ac72363b9f23dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "0b7ebcdf7595a3c6ccfb57308dc2b92df6bd1e76", "commitAfterChange": "b424f11798c06795279cf3972c2371a98a94da86", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "signatureAfterChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "diff": ["+\t\tfinal int segmentCount = sourceLocation.sourceFolder.getFullPath().segmentCount();", "+\t\tfinal IContainer outputFolder = sourceLocation.binaryFolder;", "+\t\tfinal boolean isOutputFolder = sourceLocation.sourceFolder.equals(outputFolder);", "-\t\t\t\t\t\t\tif (isAlsoProject && isExcludedFromProject(proxy.requestFullPath())) return false;", "+\t\t\t\t\t\t\tIPath folderPath = null;", "+\t\t\t\t\t\t\tif (isAlsoProject)", "+\t\t\t\t\t\t\t\tif (isExcludedFromProject(folderPath = proxy.requestFullPath())) return false;", "+\t\t\t\t\t\t\tif (!isOutputFolder) {", "+\t\t\t\t\t\t\t\tif (folderPath == null)", "+\t\t\t\t\t\t\t\t\tfolderPath = proxy.requestFullPath();", "+\t\t\t\t\t\t\t\tcreateFolder(folderPath.removeFirstSegments(segmentCount), outputFolder);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff2bdb091ae2afbbabbbad7c8f20b8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "89bd64197a8c81d9353ca25ee2694b070255ceb5", "commitAfterChange": "8cc33a88b7e04cb90905b591a01c27e56af27e07", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " final int findInImports(String qualifier, String name, int kind)", "signatureAfterChange": " final int findInImports(String qualifier, String name, int kind)", "diff": ["+\t\tif (this.filterImplicitImports && this.useContextToFilterImplicitImports) {", "+\t\t\tString fPackageName= this.compilationUnit.getParent().getElementName();", "+\t\t\tString mainTypeSimpleName= JavaCore.removeJavaLikeExtension(this.compilationUnit.getElementName());", "+\t\t\tString fMainTypeName= concatenateName(fPackageName, mainTypeSimpleName);", "+\t\t\tif (kind == ImportRewriteContext.KIND_TYPE", "+\t\t\t\t\t&& (qualifier.equals(fPackageName)", "+\t\t\t\t\t\t\t|| fMainTypeName.equals(concatenateName(qualifier, name))))", "+\t\t\t\treturn ImportRewriteContext.RES_NAME_FOUND;", "+\t\t}"]}], "num": 63418}