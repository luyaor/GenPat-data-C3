{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1c19475c573c61cb3cb876eff973d2d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e4df25d4620d206ddb0fc6bc195531d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "75ef57a93e4cb21ceda10f87f94dbbdb5e4d9d80", "commitAfterChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "methodNumberBeforeChange": 287, "methodNumberAfterChange": 287, "signatureBeforeChange": " \tpublic void test0279()", "signatureAfterChange": " \tpublic void test0279()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_6 ?", "-\t\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\t\"\tpublic Class getSomething() { return null; }\\n\" +", "+\t\t\t\t\"\t       ^^^^^\\n\" +", "+\t\t\t\t\"Class is a raw type. References to generic type Class<T> should be parameterized\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"2. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\t\"\tpublic Class getSomething() { return null; }\\n\" +", "+\t\t\t\t\"\t       ^^^^^\\n\" +", "+\t\t\t\t\"Type safety: The return type Class for getSomething() from the type X needs unchecked conversion to conform to Class<? extends Y> from the type ISomething\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"3. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\t\"\tpublic Class getSomething() { return null; }\\n\" +", "+\t\t\t\t\"\t             ^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"The method getSomething() of type X should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "+\t\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15bc4d96beadeecd656d775bb7e33de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "75ef57a93e4cb21ceda10f87f94dbbdb5e4d9d80", "commitAfterChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public void test103()", "signatureAfterChange": " public void test103()", "diff": ["+        this.complianceLevel < ClassFileConstants.JDK1_6 ?", "+        \"----------\\n\" :", "+        \"----------\\n\" +", "+        \"1. WARNING in BadEnum.java (at line 6)\\n\" +", "+        \"\tENUM1 { public String getMethod() { return \\\"ENUM1\\\";} },\\n\" +", "+        \"\t                      ^^^^^^^^^^^\\n\" +", "+        \"The method getMethod() of type new BadEnum.EnumClass(){} should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "+        \"----------\\n\" +", "+        \"2. WARNING in BadEnum.java (at line 7)\\n\" +", "+        \"\tENUM2 { public String getMethod() { return \\\"ENUM2\\\";} };\\n\" +", "+        \"\t                      ^^^^^^^^^^^\\n\" +", "+        \"The method getMethod() of type new BadEnum.EnumClass(){} should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "+        \"----------\\n\" +", "+        \"3. ERROR in BadEnum.java (at line 10)\\n\" +", "+        \"\t}\\n\" +", "+        \"\t^\\n\" +", "+        \"Syntax error on token \\\"}\\\", delete this token\\n\" +"]}], "num": 27511}