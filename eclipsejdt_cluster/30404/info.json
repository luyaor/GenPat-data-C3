{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3515e2b01e5d0a97aa842eb3d82d93d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2637948ec615b41854e7a2cc5d3d249a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "signatureAfterChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "diff": ["-\t\t\tint matchMode = matchRule - (isCaseSensitive ? SearchPattern.R_CASE_SENSITIVE : 0);", "+\t\t\tboolean isCamelCase = (matchRule & SearchPattern.R_CAMELCASE_MATCH) != 0;", "+\t\t\tint matchMode = matchRule & JavaSearchPattern.MATCH_MODE_MASK;", "+\t\t\tboolean matchFirstChar = !isCaseSensitive || patternTypeName[0] == typeName[0];", "+\t\t\tif (isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(patternTypeName, typeName)) {", "+\t\t\t\treturn true;", "+\t\t\t}", "-\t\t\t\t\treturn CharOperation.equals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\t\tif (isCamelCase) return false;", "+\t\t\t\t\treturn matchFirstChar && CharOperation.equals(patternTypeName, typeName, isCaseSensitive);", "-\t\t\t\t\treturn CharOperation.prefixEquals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\t\treturn matchFirstChar && CharOperation.prefixEquals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\tcase SearchPattern.R_REGEXP_MATCH :", "+\t\t\t\t\t// TODO (frederic) implement regular expression match", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb93d1cbb1e276a40e6f0ad888023ac5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "9170036b60b531a506b4ffe0efeda8e18d918bef", "commitAfterChange": "f8aee71b6b129d09f997301cd8500148a6feb325", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic boolean matchesName(char[] pattern, char[] name)", "signatureAfterChange": " \tpublic boolean matchesName(char[] pattern, char[] name)", "diff": ["-\t\t\tboolean isRawMatch = (this.matchRule & R_ERASURE_MATCH) != 0;", "-\t\t\tint matchMode = this.matchRule", "-\t\t\t\t\t\t- (isCaseSensitive ? R_CASE_SENSITIVE : 0)", "-\t\t\t\t\t\t- (isRawMatch ? R_ERASURE_MATCH : 0);", "+\t\t\tboolean isCamelCase = (this.matchRule & R_CAMELCASE_MATCH) != 0;", "+\t\t\tint matchMode = this.matchRule & MODE_MASK;", "+\t\t\tboolean matchFirstChar = !isCaseSensitive || pattern.length == 0 || (name.length > 0 &&  pattern[0] == name[0]);", "+\t\t\tif (isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "+\t\t\t\treturn true;", "+\t\t\t}", "-\t\t\t\t\treturn CharOperation.equals(pattern, name, isCaseSensitive);", "+\t\t\t\t\tif (isCamelCase) return false;", "+\t\t\t\t\treturn matchFirstChar && CharOperation.equals(pattern, name, isCaseSensitive);", "+", "-\t\t\t\t\treturn CharOperation.prefixEquals(pattern, name, isCaseSensitive);", "+\t\t\t\t\treturn matchFirstChar && CharOperation.prefixEquals(pattern, name, isCaseSensitive);", "+", "+"]}], "num": 30404}