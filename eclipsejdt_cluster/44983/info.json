{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2edad5b3dcbea04946d60bb79ea38138", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7666c9ad350fd058d2bad0d6f7ceafb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "be26f089c0f3f72db1f135f30599168ca702cc38", "commitAfterChange": "18117c19f72c2371b4731ee20c2330f8e794dc46", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \t\r \tpublic InfixExpression convert(InstanceOfExpression expression)", "signatureAfterChange": "\r \t\r \tpublic InfixExpression convert(InstanceOfExpression expression)", "diff": ["-\t\tinfixExpression.setSourceRange(expression.sourceStart, expression.sourceEnd - expression.sourceStart + 1);\r", "-\t\tinfixExpression.setLeftOperand(convert(expression.expression));\r", "+\t\tExpression leftExpression = convert(expression.expression);\r", "+\t\tinfixExpression.setLeftOperand(leftExpression);\r", "+\t\tint startPosition = leftExpression.getStartPosition();\r", "+\t\tinfixExpression.setSourceRange(startPosition, expression.sourceEnd - startPosition + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66d0511ac19660cf7bca836f7b765e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "63739b2368f2809d49b2ea10b6b3b2f6af96a94d", "commitAfterChange": "a08ab6c5a1a888fb837cc617f27fffac78616bdc", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tpublic ConditionalExpression convert(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression expression)", "signatureAfterChange": "  \tpublic ConditionalExpression convert(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression expression)", "diff": ["-\t\tconditionalExpression.setSourceRange(expression.sourceStart, expression.sourceEnd - expression.sourceStart + 1);", "-\t\tconditionalExpression.setElseExpression(convert(expression.valueIfFalse));", "+\t\tExpression elseExpression = convert(expression.valueIfFalse);", "+\t\tconditionalExpression.setElseExpression(elseExpression);", "+\t\tconditionalExpression.setSourceRange(expression.sourceStart, elseExpression.getStartPosition() + elseExpression.getLength() - expression.sourceStart);"]}], "num": 44983}