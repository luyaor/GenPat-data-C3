{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a66baf955dc3aa0bbb48e064752224e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e316f75dcdceb42d0c9312f2bdbbc7ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "31d25259b58c3c4c3c062013eb31d95cf4a9f389", "commitAfterChange": "09a76541b486383f4df376aea0572442ead3939f", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  private void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding, ITypeAnnotationWalker externalAnnotationWalker)", "signatureAfterChange": "  private void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding, ITypeAnnotationWalker externalAnnotationWalker)", "diff": ["+\tif (isEnum()) {", "+\t\tint purpose = 0;", "+\t\tif (CharOperation.equals(TypeConstants.VALUEOF, method.getSelector())", "+\t\t\t\t&& methodBinding.parameters.length == 1", "+\t\t\t\t&& methodBinding.parameters[0].id == TypeIds.T_JavaLangString)", "+\t\t{", "+\t\t\tpurpose = SyntheticMethodBinding.EnumValueOf;", "+\t\t} else if (CharOperation.equals(TypeConstants.VALUES, method.getSelector())", "+\t\t\t\t&& methodBinding.parameters == Binding.NO_PARAMETERS) {", "+\t\t\tpurpose = SyntheticMethodBinding.EnumValues;", "+\t\t}", "+\t\tif (purpose != 0) {", "+\t\t\tboolean needToDefer = this.environment.globalOptions.useNullTypeAnnotations == null;", "+\t\t\tif (needToDefer)", "+\t\t\t\tthis.environment.deferredEnumMethods.add(methodBinding);", "+\t\t\telse", "+\t\t\t\tSyntheticMethodBinding.markNonNull(methodBinding, purpose, this.environment);", "+\t\t\treturn;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7936a69c1272a2ff5931fd39dc0165a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "31d25259b58c3c4c3c062013eb31d95cf4a9f389", "commitAfterChange": "09a76541b486383f4df376aea0572442ead3939f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public boolean usesNullTypeAnnotations()", "signatureAfterChange": "  public boolean usesNullTypeAnnotations()", "diff": ["+\tinitializeUsesNullTypeAnnotation();", "+\tfor (MethodBinding enumMethod : this.deferredEnumMethods) {", "+\t\tint purpose = 0;", "+\t\tif (CharOperation.equals(enumMethod.selector, TypeConstants.VALUEOF)) {", "+\t\t\tpurpose = SyntheticMethodBinding.EnumValueOf;", "+\t\t} else if (CharOperation.equals(enumMethod.selector, TypeConstants.VALUES)) {", "+\t\t\tpurpose = SyntheticMethodBinding.EnumValues;", "+\t\t}", "+\t\tif (purpose != 0)", "+\t\t\tSyntheticMethodBinding.markNonNull(enumMethod, purpose, this);", "+\t}", "+\tthis.deferredEnumMethods.clear();", "+\treturn this.globalOptions.useNullTypeAnnotations;", "+}", "-\t\treturn false;", "-\t\treturn false;", "-\t\treturn false; // TODO should report an error about inconsistent setup", "-\t\treturn false; // TODO should report an error about inconsistent setup", "-\t\treturn false;", "-\treturn this.globalOptions.useNullTypeAnnotations = Boolean.TRUE;"]}], "num": 67023}