{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75acbf0213c2dd6fbdc934db8bf13868", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1360cb334e1b3d2244a44fa65535b9b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatExpression(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tif (USE_NEW_FORMATTER) {", "-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "-\t\t\tparser.setSource(source.toCharArray());", "-\t\t\tparser.setKind(ASTParser.K_EXPRESSION);", "-\t\t\tparser.setCompilerOptions(getDefaultCompilerOptions());", "-\t\t\tparser.setResolveBindings(false);", "-\t\t\tparser.setUnitName(\"\"); //$NON-NLS-1$", "-\t\t\torg.eclipse.jdt.core.dom.ASTNode node = parser.createAST(null);", "-\t\t\tif (node.getNodeType() == org.eclipse.jdt.core.dom.ASTNode.COMPILATION_UNIT) return null;", "-\t\t\tif (lineSeparator != null) {", "-\t\t\t\tthis.preferences.line_separator = lineSeparator;", "-\t\t\t} else {", "-\t\t\t\tthis.preferences.line_separator = Util.LINE_SEPARATOR;", "-\t\t\t}", "-\t\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\t\tthis.newCodeFormatter2 = new CodeFormatterVisitor2(this.preferences, this.options, offset, length, (CompilationUnit) node.getRoot());", "-\t\t\t", "-\t\t\treturn this.newCodeFormatter2.format(source, (org.eclipse.jdt.core.dom.Expression) node);", "-\t\t}", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fea811e227aa66069aa89bd0bbc6977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatClassBodyDeclarations(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tif (USE_NEW_FORMATTER) {", "-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "-\t\t\tparser.setSource(source.toCharArray());", "-\t\t\tparser.setKind(ASTParser.K_CLASS_BODY_DECLARATIONS);", "-\t\t\tparser.setCompilerOptions(getDefaultCompilerOptions());", "-\t\t\tparser.setResolveBindings(false);", "-\t\t\tparser.setUnitName(\"\"); //$NON-NLS-1$", "-\t\t\torg.eclipse.jdt.core.dom.ASTNode node = parser.createAST(null);", "-\t\t\tif (lineSeparator != null) {", "-\t\t\t\tthis.preferences.line_separator = lineSeparator;", "-\t\t\t} else {", "-\t\t\t\tthis.preferences.line_separator = Util.LINE_SEPARATOR;", "-\t\t\t}", "-\t\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\t\tthis.newCodeFormatter2 = new CodeFormatterVisitor2(this.preferences, this.options, offset, length, (CompilationUnit) node.getRoot());", "-\t\t\treturn this.newCodeFormatter2.format(source, (AbstractTypeDeclaration) node);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53f3e4025340183cff524fd9d75cc72d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit formatStatements(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tif (USE_NEW_FORMATTER) {", "-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "-\t\t\tparser.setSource(source.toCharArray());", "-\t\t\tparser.setKind(ASTParser.K_STATEMENTS);", "-\t\t\tparser.setCompilerOptions(getDefaultCompilerOptions());", "-\t\t\tparser.setResolveBindings(false);", "-\t\t\tparser.setUnitName(\"\"); //$NON-NLS-1$", "-\t\t\torg.eclipse.jdt.core.dom.ASTNode node = parser.createAST(null);", "-\t\t\tif (lineSeparator != null) {", "-\t\t\t\tthis.preferences.line_separator = lineSeparator;", "-\t\t\t} else {", "-\t\t\t\tthis.preferences.line_separator = Util.LINE_SEPARATOR;", "-\t\t\t}", "-\t\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\t\tthis.newCodeFormatter2 = new CodeFormatterVisitor2(this.preferences, this.options, offset, length, (CompilationUnit) node.getRoot());", "-\t\t\t", "-\t\t\treturn this.newCodeFormatter2.format(source, (Block) node);", "-\t\t}", "-\t\t"]}], "num": 20948}