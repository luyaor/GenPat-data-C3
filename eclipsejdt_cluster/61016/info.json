{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "957bd30f99c9430dd2d5078b0a72a082", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db00cd6236b3e6cd11d219b7728f715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "77696c12c04a72b5770d4ff9b4e0ed76e122c694", "commitAfterChange": "1b4139687eb1f106619d4bd812640411cf0f0528", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": "\r public void recoveryTokenCheck()", "signatureAfterChange": "\r public void recoveryTokenCheck()", "diff": ["-\r", "-\t\t\t/*\r", "-\t\t\t * Recovered anonymous types are tagged a bracket balance of -2 (incremented\r", "-\t\t\t * then since headerEnd != bodyStart. Given the opening brace was already taken\r", "-\t\t\t * into account, just fix up the bracket balance and take no further action for this token.\r", "-\t\t\t */\r", "-\t\t\tif (currentElement.bracketBalance == -1){\r", "-\t\t\t\tcurrentElement.bracketBalance = 1; \r", "-\t\t\t\tbreak;\r", "-\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f44c20d10958b386d5ab0b647da5b85c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e418a86ea68ac7ee09175e91ece0db3dcd81b05d", "commitAfterChange": "6d898d0dc8b1f25620aa98bef60507dd5c512289", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": "\r public void recoveryTokenCheck()", "signatureAfterChange": "\r public void recoveryTokenCheck()", "diff": ["+\r", "+\t\t\t/*\r", "+\t\t\t * Recovered anonymous types are tagged a bracket balance of -2 (incremented\r", "+\t\t\t * then since headerEnd != bodyStart. Given the opening brace was already taken\r", "+\t\t\t * into account, just fix up the bracket balance and take no further action for this token.\r", "+\t\t\t */\r", "+\t\t\tif (currentElement.bracketBalance == -1){\r", "+\t\t\t\tcurrentElement.bracketBalance = 1; \r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r"]}], "num": 61016}