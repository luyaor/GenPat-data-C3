{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f99dfb5607f834c0b77d6e144876d25f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224035bab4b0f9e702c801edac6a5767", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "b6c3ef88a42ce595faa4897ed3f3cb935e51c7fb", "commitAfterChange": "80d11a1b2e7fe69d0ca6c0214575c56a017a1140", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void testCycle5() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle5() throws JavaModelException", "diff": ["-\t\t\t\tnew Problem(\"p1\", \"A cycle was detected in the classpath of project: P1\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the classpath of project: P2\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p1\", \"A cycle was detected in the classpath of project: P1\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p1\", \"A cycle was detected in the build path of project: P1\", p1)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the classpath of project: P2\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the build path of project: P2\", p2)//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26abb1c6465c4b0875475fa13d549c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void testStringParameterizedMultipleArguments04() throws CoreException", "signatureAfterChange": " \tpublic void testStringParameterizedMultipleArguments04() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.gen [MemberGeneric] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.gen [MemberGeneric] EQUIVALENT_RAW_MATCH\\n\" +", "-\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.qgen [MemberGeneric] EQUIVALENT_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g1/t/m/ref/R3.java g1.t.m.ref.R3.qgen [MemberGeneric] EQUIVALENT_RAW_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen [MemberGeneric] EQUIVALENT_ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen [MemberGeneric] EQUIVALENT_ERASURE_MATCH\",", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.gen [MemberGeneric] EQUIVALENT_RAW_MATCH\\n\" +", "+\t\t\t\"src/g1/t/s/ref/R3.java g1.t.s.ref.R3.qgen [MemberGeneric] EQUIVALENT_RAW_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "345d18690ac162b6f59ce26a318dc5b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest_1_4.java", "commitBeforeChange": "a3663876ebeeba0873385de1d4baec07c1c9b5d8", "commitAfterChange": "d9c5650b5cbddab2c4722e719615cd4c4df0f60d", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void test069() throws ClassFormatException, IOException", "signatureAfterChange": " \tpublic void test069() throws ClassFormatException, IOException", "diff": ["-\t\t\t\"    constant #2 utf8: I\\n\" + ", "+\t\t\t\"    constant #2 utf8: \\\"I\\\"\\n\" + ", "-\t\t\t\"    constant #4 utf8: java/lang/Object\\n\" + ", "-\t\t\t\"    constant #5 utf8: SourceFile\\n\" + ", "-\t\t\t\"    constant #6 utf8: I.java\\n\" + ", "+\t\t\t\"    constant #4 utf8: \\\"java/lang/Object\\\"\\n\" + ", "+\t\t\t\"    constant #5 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\"    constant #6 utf8: \\\"I.java\\\"\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c39070dbbc533be009d71217827745d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericConstructorTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testConstructorReferencesElementPatternSingleParamArguments06() throws CoreException", "signatureAfterChange": " \tpublic void testConstructorReferencesElementPatternSingleParamArguments06() throws CoreException", "diff": ["-\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testSingle() [new Single(new Object(), gs)] EQUIVALENT_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g5/c/ref/RefSingle.java void g5.c.ref.RefSingle.testObject() [new <Exception>Single<Object>(new Exception(), gs)] EQUIVALENT_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g5/c/ref/RefSingle.java void g5.c.ref.RefSingle.testException() [new <Exception>Single<Exception>(new Exception(), gs)] EQUIVALENT_ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g5/c/ref/RefSingle.java void g5.c.ref.RefSingle.testRuntimeException() [new <RuntimeException>Single<RuntimeException>(new RuntimeException(), gs)] EQUIVALENT_ERASURE_MATCH\"", "+\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testSingle() [new Single(new Object(), gs)] EXACT_RAW_MATCH\\n\" + ", "+\t\t\t\"src/g5/c/ref/RefSingle.java void g5.c.ref.RefSingle.testObject() [new <Exception>Single<Object>(new Exception(), gs)] EQUIVALENT_MATCH\\n\" + ", "+\t\t\t\"src/g5/c/ref/RefSingle.java void g5.c.ref.RefSingle.testException() [new <Exception>Single<Exception>(new Exception(), gs)] EQUIVALENT_MATCH\\n\" + ", "+\t\t\t\"src/g5/c/ref/RefSingle.java void g5.c.ref.RefSingle.testRuntimeException() [new <RuntimeException>Single<RuntimeException>(new RuntimeException(), gs)] EQUIVALENT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af17fd8e464d4c53a4d58b407bcc956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "87ae141af8fce3aef7e67ba02676b958a112fef6", "commitAfterChange": "5a6216b5646e4800b580b6acc994e6adb1594c6f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test002a()", "signatureAfterChange": " \tpublic void test002a()", "diff": ["-\t\t\t\"1. ERROR in J.java (at line 1)\\r\\n\" +", "-\t\t\t\"\tpublic class J<T> implements I<A> { public void foo(T t) {} }\\r\\n\" +", "+\t\t\t\"1. ERROR in J.java (at line 1)\\n\" +", "+\t\t\t\"\tpublic class J<T> implements I<A> { public void foo(T t) {} }\\n\" +", "-\t\t\t\"2. ERROR in J.java (at line 1)\\r\\n\" +", "-\t\t\t\"\tpublic class J<T> implements I<A> { public void foo(T t) {} }\\r\\n\" +", "+\t\t\t\"2. ERROR in J.java (at line 1)\\n\" +", "+\t\t\t\"\tpublic class J<T> implements I<A> { public void foo(T t) {} }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18e419234bdb977e30fa609dc858fec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "b90d03d10edcf027d98e7722223f9b745793a6bb", "commitAfterChange": "e353428f475e976a008afa67ff7f1e16e03ec95c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void test001() throws JavaModelException", "signatureAfterChange": " public void test001() throws JavaModelException", "diff": ["-\t\t\"link[JAVADOC_INLINE_TAG]{{@link }, null, null, link, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"docRoot[JAVADOC_INLINE_TAG]{{@docRoot }, null, null, docRoot, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"linkplain[JAVADOC_INLINE_TAG]{{@linkplain }, null, null, linkplain, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"value[JAVADOC_INLINE_TAG]{{@value }, null, null, value, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"link[JAVADOC_INLINE_TAG]{{@link}, null, null, link, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"docRoot[JAVADOC_INLINE_TAG]{{@docRoot}, null, null, docRoot, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"linkplain[JAVADOC_INLINE_TAG]{{@linkplain}, null, null, linkplain, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"value[JAVADOC_INLINE_TAG]{{@value}, null, null, value, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef49dd283e09adf16b81bf76f9bb9aee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForMethod.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 100, "signatureBeforeChange": "  \tpublic void test138()", "signatureAfterChange": "  \tpublic void test138()", "diff": ["-\t\t\t\t+ \"\t                                            ^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                                           ^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                                            ^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                                           ^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\""]}], "num": 41414}