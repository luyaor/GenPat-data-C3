{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c03cfb16d6d64f3d44267958d92b478f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc9d1c2b78b57febb75edb502a43f87d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes, boolean polyExpressionSeen)", "signatureAfterChange": " protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes)", "diff": ["-protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes, boolean polyExpressionSeen) {", "+protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes) {", "-\tif (polyExpressionSeen)", "-\t\tresolvePolyExpressionArguments(site, ctorBinding, argumentTypes);", "+\tresolvePolyExpressionArguments(site, ctorBinding, argumentTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec81b757a02f01c23dcd61f92f6ebd36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes, boolean polyExpressionSeen)", "signatureAfterChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes)", "diff": ["-protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes, boolean polyExpressionSeen) {", "+protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes) {", "-\t", "-\tif (polyExpressionSeen)", "-\t\tresolvePolyExpressionArguments(this, this.binding, argumentTypes);", "+\tresolvePolyExpressionArguments(this, this.binding, argumentTypes);"]}], "num": 59044}