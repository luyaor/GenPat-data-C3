{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ebbda8f467834721f78ad8e20a5c141", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e76e3aaeda9066b7c2c6cd2464cd17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "ad99e8346223888eb2f8e2613d918829f95fd2b2", "commitAfterChange": "7c65ba31905e387e2902b13fe71f33b55f069273", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "signatureAfterChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "diff": ["-", "-\t\tboolean isCaseSensitive = (matchRule & SearchPattern.R_CASE_SENSITIVE) != 0;", "-\t\tif (patternPkg != null && !CharOperation.equals(patternPkg, pkg, isCaseSensitive))", "-\t\t\t\treturn false;", "-", "+\t\treturn match(patternPkg, matchRule, patternTypeName, matchRule, pkg, typeName);", "+\t}", "-\t\t\tboolean isCamelCase = (matchRule & (SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH)) != 0;", "-\t\t\tint matchMode = matchRule & JavaSearchPattern.MATCH_MODE_MASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3526c1b5b48c94eb91f3a845821db36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "37468b15b5c10767a0d1f5bcf745b5635724272d", "commitAfterChange": "269c8c1f587787c02ae256af1e14f83a052a8b35", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tpublic CategorizedProblem createProblem( \t\t\tchar[] originatingFileName, \t\t\tint problemId, \t\t\tString[] problemArguments, \t\t\tString[] messageArguments, \t\t\tint severity, \t\t\tint start, \t\t\tint end, \t\t\tint lineNumber, \t\t\tint columnNumber)", "signatureAfterChange": " \t\t \t\tpublic CategorizedProblem createProblem( \t\t\t\tchar[] originatingFileName, \t\t\t\tint problemId, \t\t\t\tString[] problemArguments, \t\t\t\tString[] messageArguments, \t\t\t\tint severity, \t\t\t\tint start, \t\t\t\tint end, \t\t\t\tint lineNumber, \t\t\t\tint columnNumber)", "diff": ["-\t\tpublic CategorizedProblem createProblem(", "-\t\t\tchar[] originatingFileName,", "-\t\t\tint problemId,", "-\t\t\tString[] problemArguments,", "-\t\t\tString[] messageArguments,", "-\t\t\tint severity,", "-\t\t\tint start,", "-\t\t\tint end,", "-\t\t\tint lineNumber,", "-\t\t\tint columnNumber) {", "-\t\t\t", "-\t\t\tCategorizedProblem pb = super.createProblem(", "-\t\t\t\toriginatingFileName,", "-\t\t\t\tproblemId,", "-\t\t\t\tproblemArguments,", "-\t\t\t\tmessageArguments,", "-\t\t\t\tseverity,", "-\t\t\t\tstart,", "-\t\t\t\tend,", "-\t\t\t\tlineNumber,", "-\t\t\t\tcolumnNumber);", "+\t\tpublic CategorizedProblem createProblem(", "+\t\t\t\tchar[] originatingFileName,", "+\t\t\t\tint problemId,", "+\t\t\t\tString[] problemArguments,", "+\t\t\t\tString[] messageArguments,", "+\t\t\t\tint severity,", "+\t\t\t\tint start,", "+\t\t\t\tint end,", "+\t\t\t\tint lineNumber,", "+\t\t\t\tint columnNumber) {", "+\t\t\t\treturn checkProblem(", "+\t\t\t\t\tsuper.createProblem(", "+\t\t\t\t\t\toriginatingFileName,", "+\t\t\t\t\t\tproblemId,", "+\t\t\t\t\t\tproblemArguments,", "+\t\t\t\t\t\tmessageArguments,", "+\t\t\t\t\t\tseverity,", "+\t\t\t\t\t\tstart,", "+\t\t\t\t\t\tend,", "+\t\t\t\t\t\tlineNumber,", "+\t\t\t\t\t\tcolumnNumber), originatingFileName, severity, start);", "+\t\t}"]}], "num": 59664}