{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a718c5ba4cc1bfbc3e5b4cc9e978829e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bdd36eafe30519e99af02098ed43d21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic boolean isClasspathEqualsTo(IClasspathEntry[] newClasspath, IPath newOutputLocation, IClasspathEntry[] otherClasspathWithOutput) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic boolean isClasspathEqualsTo(IClasspathEntry[] newClasspath, IPath newOutputLocation, boolean newIsCleaning, IClasspathEntry[] otherClasspathWithOutput) \t\tthrows JavaModelException", "diff": ["-\tpublic boolean isClasspathEqualsTo(IClasspathEntry[] newClasspath, IPath newOutputLocation, IClasspathEntry[] otherClasspathWithOutput)", "+\tpublic boolean isClasspathEqualsTo(IClasspathEntry[] newClasspath, IPath newOutputLocation, boolean newIsCleaning, IClasspathEntry[] otherClasspathWithOutput)", "-\t\t\t\tif (otherClasspathWithOutput[length - 1].getContentKind()", "-\t\t\t\t\t== ClasspathEntry.K_OUTPUT", "-\t\t\t\t\t&& otherClasspathWithOutput[length - 1].getPath().equals(newOutputLocation))", "+\t\t\t\tIClasspathEntry output = otherClasspathWithOutput[length - 1];", "+\t\t\t\tif (output.getContentKind() == ClasspathEntry.K_OUTPUT", "+\t\t\t\t\t\t&& output.getPath().equals(newOutputLocation)", "+\t\t\t\t\t\t&& output.isCleaningOutputLocation() == newIsCleaning)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa0814d8ebd38661005574fd770aa8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "c96ea754cbc1843e6373572c9a41527df8e971a2", "commitAfterChange": "b026aefdcbffec474ae6cafef5ea7136332c257c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["-\t\t\tif (resolvedImports[j].onDemand == importReference.onDemand) {", "-\t\t\t\tif (CharOperation.equals(compoundName, resolvedImports[j].compoundName)) {", "+\t\t\tImportBinding resolved = resolvedImports[j];", "+\t\t\tif (resolved.onDemand == importReference.onDemand && resolved.isStatic() == importReference.isStatic()) {", "+\t\t\t\tif (CharOperation.equals(compoundName, resolved.compoundName)) {", "-\t\t\tBinding importBinding = findOnDemandImport(compoundName, importReference.isStatic());", "+\t\t\tBinding importBinding = findImport(compoundName, compoundName.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d9af2baebdd1b055310141e2ddfefd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "6742a17d1caafc5993ac9b9729f35ed214601070", "commitAfterChange": "62e4b78bb9ee6e7ba05f701d984b5c8f51c919e3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected ITypeBinding getTypeBindingFromKey(final String key, final ICompilationUnit unit)", "signatureAfterChange": "     protected IBinding getBindingFromKey(final String key, final ICompilationUnit unit)", "diff": ["-    protected ITypeBinding getTypeBindingFromKey(final String key, final ICompilationUnit unit){", "+    protected IBinding getBindingFromKey(final String key, final ICompilationUnit unit){", "-\t\t\tprivate ITypeBinding _result = null;", "+\t\t\tprivate IBinding _result = null;", "+\t\t\tprivate int _kind;", "+\t\t\t", "-\t\t\t\tif( binding != null && binding.getKind() == IBinding.TYPE )", "-\t\t\t\t\t_result = (ITypeBinding)binding;", "+\t\t\t\tif( binding != null )", "+\t\t\t\t\t_result = binding;", "+\t\t\t\t\t_kind = binding.getKind();", "-\t\tfinal ITypeBinding result = requestor._result;", "+\t\tfinal IBinding result = requestor._result;", "-\t\t\t// make sure everything is lining up properly.", "-\t\t\tif( astUnit.findDeclaringNode(result) != null ){", "+\t\t\t// make sure everything is lining up properly.  Only cache real types, not package-infos.", "+\t\t\tif( requestor._kind == IBinding.TYPE && astUnit.findDeclaringNode(result) != null ){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27f44b60e4cee25045524b0a4de638b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "c96ea754cbc1843e6373572c9a41527df8e971a2", "commitAfterChange": "b026aefdcbffec474ae6cafef5ea7136332c257c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " void checkAndSetImports()", "signatureAfterChange": " void checkAndSetImports()", "diff": ["-\t\tfor (int j = 0; j < index; j++)", "-\t\t\tif (resolvedImports[j].onDemand == importReference.onDemand)", "+\t\tfor (int j = 0; j < index; j++) {", "+\t\t\tImportBinding resolved = resolvedImports[j];", "+\t\t\tif (resolved.onDemand == importReference.onDemand && resolved.isStatic() == importReference.isStatic())", "+\t\t}", "-\t\t\tBinding importBinding = findOnDemandImport(compoundName, importReference.isStatic());", "+\t\t\tBinding importBinding = findImport(compoundName, compoundName.length);"]}], "num": 7043}