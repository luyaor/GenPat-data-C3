{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01ca196e4261a7912570ebd46c0a7275", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23332d7de1ccbdf81d07fb3b6d4fd9b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "f5ff2046c1dd770af53f5817ae814fe5afa0b321", "commitAfterChange": "910ddfb0a69780d141bc1b44c0e8d3aabb813532", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate boolean addConstraintsToC_OneExpr(Expression expri, Set<ConstraintFormula> c, TypeBinding fsi, TypeBinding substF, MethodBinding method)", "signatureAfterChange": "  \tprivate boolean addConstraintsToC_OneExpr(Expression expri, Set<ConstraintFormula> c, TypeBinding fsi, TypeBinding substF, MethodBinding method)", "diff": ["-\t\t\t\tint innerKind = innerCtx != null ? innerCtx.inferenceKind : this.inferenceKind;", "-\t\t\t\treturn addConstraintsToC(invocation.arguments(), c, innerMethod.genericMethod(), innerKind);", "+\t\t\t\tif (innerCtx != null) { // otherwise innerMethod does not participate in inference", "+\t\t\t\t\treturn addConstraintsToC(invocation.arguments(), c, innerMethod.genericMethod(), innerCtx.inferenceKind);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db7d3818069fb1d939397f5442f33f7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "859f7f1e14bcaa807f32fbeee774c9ffd3512393", "commitAfterChange": "3ad1026b0827c10e02b527a5b1b393bd809b3628", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element)", "diff": ["-\t\tChangeCollector collector = this.changeCollector == null ? new ChangeCollector(this) : this.changeCollector;", "+\t\tChangeCollector collector = this.changeCollector;", "+\t\tif (collector == null) {", "+\t\t    collector = new ChangeCollector(this);", "+\t\t}"]}], "num": 38075}