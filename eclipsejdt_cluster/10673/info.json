{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d755ed46740c20338db5e617caeabfd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7571b9ad4095ac7c0c6b4dec1c9ab947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "signatureAfterChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "diff": ["-\t\t\t\t\t// if we are in source level < 1.5, we report an integer literal", "+\t\t\t\t\tif (end == start) {", "+\t\t\t\t\t\tthrow new InvalidInputException(INVALID_HEXA);", "+\t\t\t\t\t}", "-\t\t\t\t// hexadeciman floating point literal", "+\t\t\t\t// hexadecimal floating point literal"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe8b36780a72b7d22138157e31989c6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "signatureAfterChange": " public int scanNumber(boolean dotPrefix) throws InvalidInputException", "diff": ["-\t\t\t\t\t// if we are in source level < 1.5, we report an integer literal", "+\t\t\t\t\tif (end == start) {", "+\t\t\t\t\t\tthrow new InvalidInputException(INVALID_HEXA);", "+\t\t\t\t\t}", "-\t\t\t\t// hexadeciman floating point literal", "+\t\t\t\t// hexadecimal floating point literal"]}], "num": 10673}