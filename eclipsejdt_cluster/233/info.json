{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc8440769ed5a2e7fdf3a27396e040eb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5702a1bb4a595a846532b5b1eb534643", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "7202f04d884f744d3616b33c9684176acc5d242d", "commitAfterChange": "a5e82ba20d8203e21a0fe05e7c825167e940b15b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException", "signatureAfterChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath, IJavaProject projectOfRoot) throws JavaModelException", "diff": ["-\tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException {", "+\tprotected void updateReferringProjectClasspaths(IPath rootPath, IJavaProject projectOfRoot) throws JavaModelException {", "-\t\t\tIClasspathEntry[] classpath = project.getRawClasspath();", "-\t\t\tIClasspathEntry[] newClasspath = null;", "-\t\t\tint cpLength = classpath.length;", "-\t\t\tint newCPIndex = -1;", "-\t\t\tfor (int j = 0; j < cpLength; j++) {", "-\t\t\t\tIClasspathEntry entry = classpath[j];", "-\t\t\t\tif (rootPath.equals(entry.getPath())) {", "-\t\t\t\t\tif (newClasspath == null) {", "-\t\t\t\t\t\tnewClasspath = new IClasspathEntry[cpLength];", "-\t\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, j);", "-\t\t\t\t\t\tnewCPIndex = j;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (this.destination.segment(0).equals(project.getElementName())) continue;", "-\t\t\t\t\tif (entry.getEntryKind() != IClasspathEntry.CPE_SOURCE) { // library entry", "-\t\t\t\t\t\tnewClasspath[newCPIndex++] = copy(entry);", "-\t\t\t\t\t} // else source folder is moved to another project: deletes its classpath entry", "-\t\t\t\t} else if (newClasspath != null) {", "-\t\t\t\t\tnewClasspath[newCPIndex++] = entry;", "+\t\t\tif (project.equals(projectOfRoot)) continue;", "+\t\t\tupdateProjectClasspath(rootPath, project);", "+\t\t}", "+\t}", "-\t\t\tif (newClasspath != null) {", "-\t\t\t\tif (newCPIndex < newClasspath.length) {", "-\t\t\t\t\tSystem.arraycopy(newClasspath, 0, newClasspath = new IClasspathEntry[newCPIndex], 0, newCPIndex);", "-\t\t\t\t}", "-\t\t\t\tproject.setRawClasspath(newClasspath, fMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f86685c26c4bd9515b57d815efb66f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeletePackageFragmentRootOperation.java", "commitBeforeChange": "7202f04d884f744d3616b33c9684176acc5d242d", "commitAfterChange": "a5e82ba20d8203e21a0fe05e7c825167e940b15b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException", "signatureAfterChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath, IJavaProject projectOfRoot) throws JavaModelException", "diff": ["-\tprotected void updateReferringProjectClasspaths(IPath rootPath) throws JavaModelException {", "+\tprotected void updateReferringProjectClasspaths(IPath rootPath, IJavaProject projectOfRoot) throws JavaModelException {", "-\t\t\tIClasspathEntry[] classpath = project.getRawClasspath();", "-\t\t\tIClasspathEntry[] newClasspath = null;", "-\t\t\tint cpLength = classpath.length;", "-\t\t\tint newCPIndex = -1;", "-\t\t\tfor (int j = 0; j < cpLength; j++) {", "-\t\t\t\tIClasspathEntry entry = classpath[j];", "-\t\t\t\tif (rootPath.equals(entry.getPath())) {", "-\t\t\t\t\tif (newClasspath == null) {", "-\t\t\t\t\t\tnewClasspath = new IClasspathEntry[cpLength-1];", "-\t\t\t\t\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, j);", "-\t\t\t\t\t\tnewCPIndex = j;", "-\t\t\t\t\t}", "-\t\t\t\t} else if (newClasspath != null) {", "-\t\t\t\t\tnewClasspath[newCPIndex++] = entry;", "+\t\t\tif (project.equals(projectOfRoot)) continue;", "+\t\t\tupdateProjectClasspath(rootPath, project);", "+\t\t}", "+\t}", "-\t\t\tif (newClasspath != null) {", "-\t\t\t\tif (newCPIndex < newClasspath.length) {", "-\t\t\t\t\tSystem.arraycopy(newClasspath, 0, newClasspath = new IClasspathEntry[newCPIndex], 0, newCPIndex);", "-\t\t\t\t}", "-\t\t\t\tproject.setRawClasspath(newClasspath, fMonitor);"]}], "num": 233}