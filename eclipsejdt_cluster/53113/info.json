{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abe9f36afb6299183222235d1bc9ed8b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b57daa8cb46dc5846fb8373c81c9b4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "074f76ed30b280be335de3f9fa68939f9241cbe0", "commitAfterChange": "451a4290b08482db72c12f90b576f09a8da8fda2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "signatureAfterChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "diff": ["-\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), false, false,this);", "+\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), false, false, IJavaSearchConstants.TYPE, this);", "-\t\t\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, false, false,this);", "+\t\t\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, false, false, IJavaSearchConstants.TYPE, this);", "-\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, false, false,this);", "+\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, false, false, IJavaSearchConstants.TYPE, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b25a0cf931540861d7c4b6479ae2a070", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ClasspathEntry combineWith(IClasspathEntry referringEntry)", "signatureAfterChange": " \tpublic ClasspathEntry combineWith(IClasspathEntry referringEntry)", "diff": ["-\t\t\t\t|| referringEntry.getInclusionPatterns().length > 0 ", "-\t\t\t\t|| referringEntry.getExclusionPatterns().length > 0) {", "+\t\t\t\t|| referringEntry.getAccessibleFiles().length > 0 ", "+\t\t\t\t|| referringEntry.getNonAccessibleFiles().length > 0) {", "-\t\t\t\t\t\t\t\tClasspathEntry.concatPatterns(referringEntry.getInclusionPatterns(), this.getInclusionPatterns()), ", "-\t\t\t\t\t\t\t\tClasspathEntry.concatPatterns(referringEntry.getExclusionPatterns(), this.getExclusionPatterns()), ", "+\t\t\t\t\t\t\t\tthis.getInclusionPatterns(), ", "+\t\t\t\t\t\t\t\tthis.getExclusionPatterns(), ", "-\t\t\t\t\t\t\t\treferringEntry.isExported()|| this.isExported); // duplicate container entry for tagging it as exported", "+\t\t\t\t\t\t\t\treferringEntry.isExported()|| this.isExported, // duplicate container entry for tagging it as exported", "+\t\t\t\t\t\t\t\tClasspathEntry.concatPatterns(referringEntry.getAccessibleFiles(), this.getAccessibleFiles()), ", "+\t\t\t\t\t\t\t\tClasspathEntry.concatPatterns(referringEntry.getNonAccessibleFiles(), this.getNonAccessibleFiles()),", "+\t\t\t\t\t\t\t\tthis.extraAttributes); "]}], "num": 53113}