{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "631341765f2cfcb0b4b0df64bcf492a2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27faa95373f7407428e488f8bf942e83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "807b2bf6b37b8c98063e0b73f3e9e111197c660a", "commitAfterChange": "3b4394afa293384076b51eeac920f3d24cc5f8bc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner)", "signatureAfterChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner)", "diff": ["-\t\t\tint end = commentStart+comment.getLength();", "+\t\t\tint end = commentStart+comment.getLength()-1;", "-\t\t\t} else if (end < previousStart) { // may be equals => then no scan is necessary", "-\t\t\t\tscanner.resetTo(end, previousStart);", "+\t\t\t} else if ((end+1) < previousStart) { // may be equals => then no scan is necessary", "+\t\t\t\tscanner.resetTo(end+1, previousStart);", "-\t\t\t\tint startPosition = previousEnd;", "+\t\t\t\tint lastTokenEnd = previousEnd;", "-\t\t\t\t\t\t\tstartPosition =  scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\t\t\tlastTokenEnd =  scanner.getCurrentTokenEndPosition();", "-\t\t\t\tint lastTokenLine = scanner.getLineNumber(startPosition);", "+\t\t\t\tint lastTokenLine = scanner.getLineNumber(lastTokenEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c1814ebecb30b7204dc6f0806eef1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "756e1981ccaf3561b93bab71937951ef14b72eb6", "commitAfterChange": "30210dace16fbfb20e6910ce9f1394f40ee548a8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner)", "signatureAfterChange": " \tint storeLeadingComments(ASTNode node, int previousEnd, Scanner scanner)", "diff": ["-\t\t\tint end = commentStart+comment.getLength();", "+\t\t\tint end = commentStart+comment.getLength()-1;", "-\t\t\t} else if (end < previousStart) { // may be equals => then no scan is necessary", "-\t\t\t\tscanner.resetTo(end, previousStart);", "+\t\t\t} else if ((end+1) < previousStart) { // may be equals => then no scan is necessary", "+\t\t\t\tscanner.resetTo(end+1, previousStart);", "-\t\t\t\tint startPosition = previousEnd;", "+\t\t\t\tint lastTokenEnd = previousEnd;", "-\t\t\t\t\t\t\tstartPosition =  scanner.getCurrentTokenStartPosition();", "+\t\t\t\t\t\t\tlastTokenEnd =  scanner.getCurrentTokenEndPosition();", "-\t\t\t\tint lastTokenLine = scanner.getLineNumber(startPosition);", "+\t\t\t\tint lastTokenLine = scanner.getLineNumber(lastTokenEnd);"]}], "num": 30087}