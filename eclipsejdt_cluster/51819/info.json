{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "135073ca3855b2db2d0e6edf46df859e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7339548b279eab195ad3a544f736cdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t\t \tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \t\t \tpublic MethodDeclaration convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["-\tpublic MethodDeclaration convert(AbstractMethodDeclaration methodDeclaration) {", "+\tpublic MethodDeclaration convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration) {", "-\t\tTypeReference[] thrownExceptions = methodDeclaration.thrownExceptions;", "+\t\torg.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions = methodDeclaration.thrownExceptions;", "-\t\tArgument[] parameters = methodDeclaration.arguments;", "+\t\torg.eclipse.jdt.internal.compiler.ast.Argument[] parameters = methodDeclaration.arguments;", "-\t\tExplicitConstructorCall explicitConstructorCall = null;", "+\t\torg.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall explicitConstructorCall = null;", "-\t\t\tConstructorDeclaration constructorDeclaration = (ConstructorDeclaration) methodDeclaration;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration constructorDeclaration = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) methodDeclaration;", "-\t\t\tTypeReference typeReference = method.returnType;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeReference typeReference = method.returnType;", "-\t\t\t\t\tif (explicitConstructorCall != null && explicitConstructorCall.accessMode != ExplicitConstructorCall.ImplicitSuper) {", "+\t\t\t\t\tif (explicitConstructorCall != null && explicitConstructorCall.accessMode != org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.ImplicitSuper) {", "-\t\t\t\t\t\tif (statements[i] instanceof LocalDeclaration) {", "+\t\t\t\t\t\tif (statements[i] instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11ddfec653a19357b20f81462dcffc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t+ (Util.toString(affectedProjects, ", "-\t\t\t\t\t\tnew Util.Displayable(){ ", "+\t\t\t\t+ (org.eclipse.jdt.internal.compiler.util.Util.toString(affectedProjects, ", "+\t\t\t\t\t\tnew org.eclipse.jdt.internal.compiler.util.Util.Displayable(){ ", "-\t\t\t\t+ (Util.toString(respectiveContainers, ", "-\t\t\t\t\t\tnew Util.Displayable(){ ", "+\t\t\t\t+ (org.eclipse.jdt.internal.compiler.util.Util.toString(respectiveContainers, ", "+\t\t\t\t\t\tnew org.eclipse.jdt.internal.compiler.util.Util.Displayable(){ ", "-\t\t\t\t\t\t\t\tfalse, // updating - no validation", "+\t\t\t\t\t\t\t\tfalse, // updating - no need for early validation"]}], "num": 51819}