{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97418716736c27c5103498e77f18692d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "938f94350724510e53ab5a7fceca3b1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void cacheOriginalValues()", "signatureAfterChange": " \tprivate void cacheOriginalValues()", "diff": ["-\t\tfOriginalPath = FactoryPath.getAllContainers(fJProj);", "-\t\tfOriginallyProjectSpecific = FactoryPath.hasProjectSpecificFactoryPath(fJProj);", "+\t\tIFactoryPath ifp = AptConfig.getFactoryPath(fJProj);", "+\t\t// we'll risk this downcast because we're such good buddies with apt.core.", "+\t\tFactoryPath fp = (FactoryPath)ifp;", "+\t\tMap<FactoryContainer, FactoryPath.Attributes> path = fp.getAllContainers();", "+\t\tfOriginalPath = FactoryPathEntry.pathListFromMap(path);", "+\t\tfOriginallyProjectSpecific = AptConfig.hasProjectSpecificFactoryPath(fJProj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b450af1df3e389da90d5a832f31b7fb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void performDefaults()", "signatureAfterChange": " \tpublic void performDefaults()", "diff": ["-\t\tMap<FactoryContainer, Boolean> defaults = FactoryPath.getDefaultFactoryPath(fJProj);", "+\t\tIFactoryPath ifp = AptConfig.getDefaultFactoryPath(fJProj);", "+\t\t// we'll risk this downcast because we're such good buddies with apt.core.", "+\t\tFactoryPath fp = (FactoryPath)ifp;", "+\t\tMap<FactoryContainer, FactoryPath.Attributes> map = fp.getAllContainers();", "+\t\tList<FactoryPathEntry> defaults = FactoryPathEntry.pathListFromMap(map);", "-\t\tfor (Map.Entry<FactoryContainer, Boolean> e : defaults.entrySet()) {", "-\t\t\tFactoryContainer fc = e.getKey();", "-\t\t\tfFactoryPathList.addElement(fc);", "-\t\t\tfFactoryPathList.setChecked(fc, e.getValue());", "+\t\tfor (FactoryPathEntry fpe : defaults) {", "+\t\t\tfFactoryPathList.addElement(fpe);", "+\t\t\tfFactoryPathList.setChecked(fpe, fpe._attr.isEnabled());"]}], "num": 20815}