{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "717525148966e10c875a7952520c7b35", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437ca102bd38aa4cf53b8366a453bc32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ca551e9f50d120a7df024c143f37ec7681949c67", "commitAfterChange": "1b64b56ccf1417b4beca7bed7d97dae59a8cc803", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  \tpublic boolean validateNullAnnotation(long tagBits, TypeReference typeRef, Annotation[] annotations)", "signatureAfterChange": "  \tpublic boolean validateNullAnnotation(long tagBits, TypeReference typeRef, Annotation[] annotations)", "diff": ["-\t\t\tif (annotations != null && typeRef instanceof QualifiedTypeReference) {", "-\t\t\t\t// illegal @NonNull Outer.Inner:", "-\t\t\t\tfor (int i = 0; i < annotations.length; i++) {", "-\t\t\t\t\tint id = annotations[i].resolvedType.id;", "-\t\t\t\t\tif (id == TypeIds.T_ConfiguredAnnotationNonNull || id == TypeIds.T_ConfiguredAnnotationNullable) {", "-\t\t\t\t\t\tproblemReporter().nullAnnotationUnsupportedLocation(annotations[i]);", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\t// for type annotations, more problems are detected in Annotation.isTypeUseCompatible()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7818173db98b6aa84cc1c582238a7a9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "312137f2d1155a37d38bf0abe100828513472f15", "commitAfterChange": "991ec4c8f423745963538f12565fec49fd3f86fc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\tif (this.completionToken.length == 0) {", "-\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\tthis.setSourceRange(astNode.sourceStart, astNode.sourceStart - 1, false);", "-", "-\t\t\t\t\tfindAnnotationReference(annotation.type, scope);", "-\t\t\t\t}", "-\t\t\t} else {", "+\t\t\tReferenceBinding annotationType = (ReferenceBinding)annotation.resolvedType;", "+\t\t\t", "+\t\t\tif (annotationType != null && annotationType.isAnnotationType()) {", "-\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), (ReferenceBinding)annotation.resolvedType);", "+\t\t\t\t\tthis.findAnnotationAttributes(this.completionToken, annotation.memberValuePairs(), annotationType);"]}], "num": 38898}