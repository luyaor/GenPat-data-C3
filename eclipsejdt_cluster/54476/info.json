{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c368e83b4324a7ee30810a991d207b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e516729351dab623d4fa6226a1c6268", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\t\t\tscope.problemReporter().unsafeCast(this);", "+\t\t\t\tscope.problemReporter().unsafeCast(this, scope);", "-\t\t\t\t\tscope.problemReporter().unsafeCast(this);", "+\t\t\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t} else if (isNarrowing && castType.isTypeVariable()) {", "+\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11e546790c769763713c1517af11818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "058f4956c302999db0dab277cf91883f2d016e2b", "commitAfterChange": "27d9d524a3b624cfc1260a727d1dfb92d53ae22a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\t\t\treportIllegalCast(scope, castType, expressionType);", "-\t\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t\t\tthis.bits |= UnsafeCastMask;", "-\t\t\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t\t\t\tthis.bits |= UnsafeCastMask;", "-\t\t\tscope.problemReporter().unsafeCast(this, scope);", "+\t\t\tthis.bits |= UnsafeCastMask;"]}], "num": 54476}