{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ff075b3edc6b3d7b06137b794bb28e4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e6dae1875d7de1355687ed78084ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9651dd760925de2ad18a518e1aebff7786be226", "commitAfterChange": "473c73ddfee69cf3ff77433ec4aa07963775b0ee", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(this.compilationUnitSource, sourceStart, length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca5f427a9eec8ff3c2aa8f1c4338a565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.LongLiteral expression)", "signatureAfterChange": "  \tpublic NumberLiteral convert(org.eclipse.jdt.internal.compiler.ast.LongLiteral expression)", "diff": ["-\t\tchar[] tokens = new char[length];", "-\t\tSystem.arraycopy(this.compilationUnitSource, sourceStart, tokens, 0, length);", "-\t\tNumberLiteral literal = this.ast.newNumberLiteral(new String(tokens));", "+\t\tfinal NumberLiteral literal = new NumberLiteral(this.ast);", "+\t\tliteral.internalSetToken(new String(this.compilationUnitSource, sourceStart, length));"]}], "num": 19134}