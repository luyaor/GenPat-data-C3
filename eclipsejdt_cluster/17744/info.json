{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de275678e1d200d23fc032adce732064", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f9a466d459a9779364e74d7652bc62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.receiverType, argumentTypes, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.receiverType, argumentTypes, scope.getDeclarationModifiers());", "-\t\t\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.receiverType, argumentTypes, scope.getModifiers());", "+\t\t\t\t\tscope.problemReporter().javadocErrorNoMethodFor(this, this.receiverType, argumentTypes, scope.getDeclarationModifiers());", "-\t\t\tscope.problemReporter().javadocInvalidMethod(this, this.binding, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocInvalidMethod(this, this.binding, scope.getDeclarationModifiers());", "-\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getModifiers());", "+\t\t\tscope.problemReporter().javadocDeprecatedMethod(this.binding, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2ac5b2782721624d765056a2523887e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "-\t\t\treturn null;", "+\t\t\tif (this.receiverType instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding refBinding = (ReferenceBinding) this.receiverType;", "+\t\t\t\tMethodBinding[] bindings = refBinding.getMethods(this.token);", "+\t\t\t\tif (bindings == null) {", "+\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\t\treturn null;", "+\t\t\t\t} ", "+\t\t\t\tswitch (bindings.length) {", "+\t\t\t\t\tcase 0:", "+\t\t\t\t\t\tscope.problemReporter().javadocInvalidField(this, this.receiverType, scope.getDeclarationModifiers());", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\tcase 1:", "+\t\t\t\t\t\tthis.binding = null;", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tscope.problemReporter().javadocAmbiguousMethodReference(this, scope.getDeclarationModifiers());", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 17744}