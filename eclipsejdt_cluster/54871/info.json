{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be36fa7531155974a86d765954d154b4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f32aa33c4c4222de2b69e47dc1ffaa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f670a12d7a86101c01370f88073e79ca2cb2abf6", "commitAfterChange": "027433d18c80815de3076b7fd489422a48401f1a", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " public void fieldsOrThisBeforeConstructorInvocation(ThisReference reference)", "signatureAfterChange": " public void fieldsOrThisBeforeConstructorInvocation(ASTNode reference)", "diff": ["-public void fieldsOrThisBeforeConstructorInvocation(ThisReference reference) {", "+public void fieldsOrThisBeforeConstructorInvocation(ASTNode reference) {", "-\t\treference.sourceEnd);", "+\t\treference instanceof LambdaExpression ? ((LambdaExpression) reference).diagnosticsSourceEnd() : reference.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f120456ae4d754f89b6841946a14b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "9ad658e4b81eae9abfa3e58f2580823e2164411f", "commitAfterChange": "969b249d162e12d32e6ee4f7e1e7acc9260bb443", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprotected void assertExceptionEquals(String message, String expected, JavaModelException exception)", "signatureAfterChange": " \tprotected void assertExceptionEquals(String message, String expected, Exception exception)", "diff": ["-\tprotected void assertExceptionEquals(String message, String expected, JavaModelException exception) {", "-\t\tString actual = exception == null ? \"<null>\" : exception.getStatus().getMessage();", "+\tprotected void assertExceptionEquals(String message, String expected, Exception exception) {", "+\t\tString actual = ", "+\t\t\texception == null ? ", "+\t\t\t\t\"<null>\" : ", "+\t\t\t\t(exception instanceof CoreException) ? ", "+\t\t\t\t\t((CoreException) exception).getStatus().getMessage() : ", "+\t\t\t\t\texception.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e930cd77eca738a2e2270558f760588d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c9c1bc452cc86c18011e1d146fda7426c2ac0742", "commitAfterChange": "85430bbb6b230d87cb672b19d866f291f4cf633d", "methodNumberBeforeChange": 364, "methodNumberAfterChange": 364, "signatureBeforeChange": " public void noSuchEnclosingInstance(TypeBinding targetType, ASTNode location, boolean isConstructorCall)", "signatureAfterChange": " public void noSuchEnclosingInstance(TypeBinding targetType, ASTNode location, boolean isConstructorCall)", "diff": ["-\t\tlocation.sourceEnd);", "+\t\tlocation instanceof LambdaExpression ? ((LambdaExpression)location).diagnosticsSourceEnd() : location.sourceEnd);"]}], "num": 54871}