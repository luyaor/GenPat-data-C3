{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d78e8356138a3795250af3e179a1927f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae7cda1e07b58aa87386f8efc318b0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public ReferenceBinding convertToParameterizedType(ReferenceBinding originalType)", "signatureAfterChange": " public ReferenceBinding convertToParameterizedType(ReferenceBinding originalType)", "diff": ["-\t\t\t\t? (ReferenceBinding) convertToRawType(originalEnclosingType) ", "+\t\t\t\t? (ReferenceBinding) convertToRawType(originalEnclosingType, false /*do not force conversion of enclosing types*/) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6b9fe2bc9cf35b9958d6bb6e4b3b9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " public Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\tbinding = environment().convertToRawType(referenceBinding);", "+\tbinding = environment().convertToRawType(referenceBinding, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e7a49fb64fad89dd758138a001d14df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t\tmemberType = scope.environment().convertToRawType(memberType);", "+\t\tmemberType = scope.environment().convertToRawType(memberType, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e850876a1cef7b83c9d46ae5bd3d053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope scope)", "signatureAfterChange": " public TypeBinding resolveType(ClassScope scope)", "diff": ["-\ttype = scope.environment().convertToRawType(type);", "+\ttype = scope.environment().convertToRawType(type, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb3af5fea7377aab7cfbe3764aa71402", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "diff": ["-\ttype = scope.environment().convertToRawType(type);", "+\ttype = scope.environment().convertToRawType(type, false /*do not force conversion of enclosing types*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd8c4e07b8060c26ef9b6ee77838b0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findImport(char[][] compoundName, int length)", "signatureAfterChange": " private Binding findImport(char[][] compoundName, int length)", "diff": ["-\t\ttype = (ReferenceBinding)environment.convertToRawType(type); // type imports are necessarily raw for all except last", "+\t\ttype = (ReferenceBinding)environment.convertToRawType(type, false /*do not force conversion of enclosing types*/); // type imports are necessarily raw for all except last"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0240300f8adff9f8193639cb6372b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectEnumSuperclass()", "signatureAfterChange": " \tprivate boolean connectEnumSuperclass()", "diff": ["-\t\tParameterizedTypeBinding  superType = environment().createParameterizedType(rootEnumType, new TypeBinding[]{ environment().convertToRawType(sourceType) } , null);", "+\t\tParameterizedTypeBinding  superType = environment().createParameterizedType(rootEnumType, new TypeBinding[]{ environment().convertToRawType(sourceType, false /*do not force conversion of enclosing types*/) } , null);"]}], "num": 36078}