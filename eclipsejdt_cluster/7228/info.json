{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91c3ace248094a61afb368333bb04598", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea23596475361aa887c624f808a24c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c97a12fe797bc8f1a4e22eb2cfe11932a52f122", "commitAfterChange": "cb3bfb0879489be8fed32e037d62f37c21d37c6b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\tif (otherOriginal == otherInheritedMethod || doesMethodOverride(inheritedMethod, otherInheritedMethod)) continue;", "+\t\t\tif (otherOriginal == originalInherited || otherOriginal == otherInheritedMethod) continue;", "+", "+\t\t\tMethodBinding compareMethod = inheritedMethod instanceof ParameterizedGenericMethodBinding", "+\t\t\t\t? ((ParameterizedGenericMethodBinding) inheritedMethod).originalMethod", "+\t\t\t\t: inheritedMethod;", "+\t\t\tMethodBinding substitute = computeSubstituteMethod(otherInheritedMethod, compareMethod);", "+\t\t\tif (substitute == null || doesSubstituteMethodOverride(compareMethod, substitute))", "+\t\t\t\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bccc91cc397cff573238347eb847e123", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c97a12fe797bc8f1a4e22eb2cfe11932a52f122", "commitAfterChange": "cb3bfb0879489be8fed32e037d62f37c21d37c6b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": " public boolean doesMethodOverride(MethodBinding method, MethodBinding inheritedMethod)", "signatureAfterChange": " public boolean doesMethodOverride(MethodBinding method, MethodBinding inheritedMethod)", "diff": ["-\tif (doTypeVariablesClash(method, inheritedMethod)) return false;", "-\tif (areParametersEqual(method, inheritedMethod)) return true;", "-\tif (method.declaringClass == inheritedMethod.declaringClass) return false;", "+\tMethodBinding substitute = computeSubstituteMethod(inheritedMethod, method);", "+\treturn substitute != null && doesSubstituteMethodOverride(method, substitute);", "+}", "-\tTypeBinding[] inheritedParams = inheritedMethod.parameters;", "-\tif (method.typeVariables != NoTypeVariables || !inheritedMethod.hasSubstitutedParameters())", "-\tif (method.declaringClass.findSuperTypeWithSameErasure(inheritedMethod.declaringClass) == null)"]}], "num": 7228}