{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41860c1c3328f95e0d59be55e913de8f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf34b42631bf0749ab5913cd15c3284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 727, "methodNumberAfterChange": 727, "signatureBeforeChange": " public void test0706b()", "signatureAfterChange": " public void test0706b()", "diff": ["+\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tAA<CC> res = bb.test();\\n\" + ", "+\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tBB res2 = bb.test();\\n\" + ", "+\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tAA<CC> res = bb.test();\\n\" + ", "+\t\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tBB res2 = bb.test();\\n\" + ", "+\t\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\tAA<CC> res = bb.test();\\n\" + ", "-\t\t\"\t                ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tBB res2 = bb.test();\\n\" + ", "-\t\t\"\t             ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "-\t\t\"\t                                 ^^^^^^\\n\" + ", "-\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "-\t\t\"----------\\n\"", "+\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b55a6c9095ff9b5e2a66dff2b67c2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 726, "methodNumberAfterChange": 726, "signatureBeforeChange": " public void test0706a()", "signatureAfterChange": " public void test0706a()", "diff": ["+\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tAA<Object> res1 = bb.test();\\n\" + ", "+\t\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\"\t^^\\n\" + ", "+\t\t\t\"AA is a raw type. References to generic type AA<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tAA<Object> res1 = bb.test();\\n\" + ", "+\t\t\t\t\"\t                     ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\t\"\t^^\\n\" + ", "+\t\t\t\t\"AA is a raw type. References to generic type AA<T> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tAA res3 = bb.test();\\n\" + ", "+\t\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\tAA<Object> res1 = bb.test();\\n\" + ", "-\t\t\"\t                     ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\"\tAA res3 = bb.test();\\n\" + ", "-\t\t\"\t^^\\n\" + ", "-\t\t\"AA is a raw type. References to generic type AA<T> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tAA res3 = bb.test();\\n\" + ", "-\t\t\"\t             ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "-\t\t\"\t                                 ^^^^^^\\n\" + ", "-\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "-\t\t\"----------\\n\"", "+\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6227e682828223271ad1114aa62cae51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 724, "methodNumberAfterChange": 724, "signatureBeforeChange": " public void test0706()", "signatureAfterChange": " public void test0706()", "diff": ["-\tif (this.complianceLevel < ClassFileConstants.JDK1_7) {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tvoid foo() {\\n\" +", "-\t\t\t\t\"\t\tBB bb = new BB();\\n\" +", "-\t\t\t\t\"\t\tbb.<Object>test();\\n\" +", "-\t\t\t\t\"\t\t((AA<CC>) bb).test();\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class AA<T> { AA<Object> test() {return null;} }\\n\" +", "-\t\t\t\t\"class BB extends AA<CC> { <U> BB test() {return null;} }\\n\" +", "-\t\t\t\t\"class CC {}\\n\",", "-\t\t\t},", "-\t\t\t\"\");", "-\t\treturn;", "-\t}", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tvoid foo() {\\n\" +", "-\t\t\t\t\"\t\tBB bb = new BB();\\n\" +", "-\t\t\t\t\"\t\tbb.<Object>test();\\n\" +", "-\t\t\t\t\"\t\t((AA<CC>) bb).test();\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class AA<T> { AA<Object> test() {return null;} }\\n\" +", "-\t\t\t\t\"class BB extends AA<CC> { <U> BB test() {return null;} }\\n\" +", "-\t\t\t\t\"class CC {}\\n\",", "-\t\t\t},", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 4)\\r\\n\" +", "-\t\t\t\"\tbb.<Object>test();\\r\\n\" +", "-\t\t\t\"\t           ^^^^\\n\" +", "-\t\t\t\"The method test() is ambiguous for the type BB\\n\" +", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "-\t\t\t\"\t                                 ^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tvoid foo() {\\n\" +", "+\t\t\t\"\t\tBB bb = new BB();\\n\" +", "+\t\t\t\"\t\tbb.<Object>test();\\n\" +", "+\t\t\t\"\t\t((AA<CC>) bb).test();\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\" +", "+\t\t\t\"class AA<T> { AA<Object> test() {return null;} }\\n\" +", "+\t\t\t\"class BB extends AA<CC> { <U> BB test() {return null;} }\\n\" +", "+\t\t\t\"class CC {}\\n\",", "+\t\t},", "+\t\t(this.complianceLevel < ClassFileConstants.JDK1_7)", "+\t\t? \"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t: \"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tbb.<Object>test();\\n\" + ", "+\t\t\"\t           ^^^^\\n\" + ", "+\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\"----------\\n\"", "+\t);", "+/*", "+X.java:4: reference to test is ambiguous, both method test() in AA and method <U>test() in BB match", "+                bb.<Object>test();", "+                  ^", "+  where U is a type-variable:", "+    U extends Object declared in method <U>test()", "+X.java:9: name clash: <U>test() in BB and test() in AA have the same erasure, yet neither overrides the other", "+class BB extends AA<CC> { <U> BB test() {return null;} }", "+                                 ^", "+  where U is a type-variable:", "+    U extends Object declared in method <U>test()", "+2 errors", "+ */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ec5127808cd8839a32e8bd0e7df9b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic void test048()", "signatureAfterChange": " \tpublic void test048()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X1.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic class X1 extends LinkedHashMap<String, String> {\\n\" + ", "+\t\t\t\t\"\t             ^^\\n\" + ", "+\t\t\t\t\"The serializable class X1 does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X1.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tpublic Object putAll(Map<String,String> a) { return null; }\\n\" + ", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method putAll(Map<String,String>) of type X1 has the same erasure as putAll(Map<? extends K,? extends V>) of type HashMap<K,V> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. WARNING in X1.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic class X1 extends LinkedHashMap<String, String> {\\n\" + ", "+\t\t\t\t\t\"\t             ^^\\n\" + ", "+\t\t\t\t\t\"The serializable class X1 does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X1.java (at line 3)\\n\" + ", "+\t\t\t\t\t\"\tpublic Object putAll(Map<String,String> a) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method putAll(Map<String,String>) of type X1 has the same erasure as putAll(Map<? extends K,? extends V>) of type HashMap<K,V> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X1.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic class X1 extends LinkedHashMap<String, String> {\\n\" + ", "-\t\t\t\"\t             ^^\\n\" + ", "-\t\t\t\"The serializable class X1 does not declare a static final serialVersionUID field of type long\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X1.java (at line 3)\\n\" + ", "-\t\t\t\"\tpublic Object putAll(Map<String,String> a) { return null; }\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method putAll(Map<String,String>) of type X1 has the same erasure as putAll(Map<? extends K,? extends V>) of type HashMap<K,V> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}], "num": 58584}