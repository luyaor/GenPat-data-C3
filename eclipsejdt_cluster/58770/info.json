{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a96f57cb5ce6c098fe8267a3341dbbc8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18b0b0bbe3eaac22fc1adf428e5c02b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ScannerTest.java", "commitBeforeChange": "2a6ca90fc523a83e00c8a5d01ff80befa88aa849", "commitAfterChange": "25becec9f589a18c9ecc988d70e1a311446f4413", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test005()", "signatureAfterChange": " \tpublic void test005()", "diff": ["-\t\tString source =\t\"\\\"hello\\\"\";", "-\t\tIScanner scanner = ToolFactory.createScanner(true, true, true, true);", "-\t\tscanner.setSource(source.toCharArray());", "+\t\tStringBuffer buf= new StringBuffer();", "+\t\tbuf.append(\"\\\"Hello\\\"\");", "+\t\tString str = buf.toString();", "+\t\tIScanner scanner= ToolFactory.createScanner(false, false, false, false);", "+\t\tscanner.setSource(str.toCharArray());", "+\t\tscanner.resetTo(0, str.length() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef4086ecfc4b20a43d19eed74e97c55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ParameterDeclarationImpl.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "         public String toString()", "diff": ["-", "-    public String toString(){", "-        return getSimpleName();", "+    public String toString(){\t\t", "+        final StringBuilder builder = new StringBuilder();", "+        builder.append(getTypeBinding().getName());", "+        builder.append(' ');", "+        builder.append(getSimpleName());        ", "+        return builder.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de44a25c5e430a58c78001bba76cc305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "commitAfterChange": "709c0464f2b2104283b8df19cdcd96bebc63e551", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "\r public void inheritedMethodReducesVisibility(SourceTypeBinding type, MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": "\r public void inheritedMethodReducesVisibility(SourceTypeBinding type, MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["+\tStringBuffer concreteSignature = new StringBuffer();\r", "+\tconcreteSignature\r", "+\t\t.append(concreteMethod.declaringClass.readableName())\r", "+\t\t.append('.')\r", "+\t\t.append(concreteMethod.readableName());\r", "-\t\t// The method %1 cannot hide the public abstract method in %2\r", "+\t\t// The inherited method %1 cannot hide the public abstract method in %2\r", "-\t\t\tnew String(concreteMethod.readableName()),\r", "+\t\t\tnew String(concreteSignature.toString()),\r"]}], "num": 58770}