{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e12ec2a9d8017b0b352398321851790", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17292f1f8bc91a211de0c518a670cf59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "signatureAfterChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "diff": ["-\t\t    // do not allow type variables to match with erasures for free", "-\t\t    if (!otherType.isTypeVariable()) otherType = otherType.erasure();", "-\t\t    if (this == otherType || (!isTypeVariable() && erasure() == otherType)) return this;", "+\t\t    // do not allow type variables/intersection types to match with erasures for free", "+\t\t    if (!otherType.isTypeVariable() && !otherType.isIntersectionType()) otherType = otherType.erasure();", "+\t\t    if (this == otherType || (!isTypeVariable() && !isIntersectionType() && erasure() == otherType)) return this;", "-\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType)) return currentType;", "+\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType)) return currentType;", "-\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType))", "+\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbe1b1024b9383e9ad23110cddd102ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "signatureAfterChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "diff": ["-    if (this.id == wellKnownErasureID || (!isTypeVariable() && erasure().id == wellKnownErasureID)) return this;", "+    if (this.id == wellKnownErasureID || (!isTypeVariable() && !isIntersectionType()  && erasure().id == wellKnownErasureID)) return this;", "-\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))", "+\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\t// be resilient to unitialized interfaces (144976)", "+\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) { // null check for extra resilience (144976)", "-\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))", "+\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) {"]}], "num": 31386}