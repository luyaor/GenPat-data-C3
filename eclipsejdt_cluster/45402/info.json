{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "526699bef6ea2ce860f3a7bf8cf22082", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d08ffd6776dd228ee19acea91ebf43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "45a56425aa646e258743712b7b8dd871458d173e", "commitAfterChange": "53367e7594cd90802bb610558e9e1ffd148fd7db", "methodNumberBeforeChange": 313, "methodNumberAfterChange": 313, "signatureBeforeChange": " \tpublic void _test311()", "signatureAfterChange": " \tpublic void _test311()", "diff": ["-\t// TODO (kent) reenable once addressed", "+\t// TODO (kent) fixed with !inheritedArg.isEquivalentTo(currentArg) check in MethodVerifier", "-\t\t\t\"should report name clash and ambiguity\");\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid foo(List<X> lx) { }\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash : The method foo(List<X>) of type X has the same erasure as foo(List<Object>) of type X2 but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\t\"\tthis.foo((List)null);\\n\" + ", "+\t\t\t\"\t     ^^^\\n\" + ", "+\t\t\t\"The method foo(List<X>) is ambiguous for the type X\\n\" + ", "+\t\t\t\"----------\\n\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b008b6121d37e0d79de41099550a43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public void test079()", "signatureAfterChange": " public void test079()", "diff": ["+// See that this test case exhibits the bug 345947", "-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "-\t\t\"\"", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\t<T extends A> I<T> x() throws IllegalAccessError;\\n\" + ", "+\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Name clash: The method x() of type Two has the same erasure as x() of type One but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"\tI<B> y() throws IllegalAccessError;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Type safety: The return type I<B> for y() from the type Two needs unchecked conversion to conform to I<A> from the type One\\n\" + ", "+\t\t\"----------\\n\""]}], "num": 45402}