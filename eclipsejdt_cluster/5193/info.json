{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e7115b085fa74a70cba1f398997cbbe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d299c4364980d83c6b27276f3fa8d52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic boolean hasCaptureBound(Set variableSet)", "signatureAfterChange": " \tpublic boolean hasCaptureBound(Set<InferenceVariable> variableSet)", "diff": ["-\tpublic boolean hasCaptureBound(Set variableSet) {", "-\t\tIterator captureIter = this.captures.keySet().iterator();", "+\tpublic boolean hasCaptureBound(Set<InferenceVariable> variableSet) {", "+\t\tIterator<ParameterizedTypeBinding> captureIter = this.captures.keySet().iterator();", "-\t\t\tParameterizedTypeBinding g = (ParameterizedTypeBinding) captureIter.next();", "+\t\t\tParameterizedTypeBinding g = captureIter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b3438ba7ff075056c901dbc9127f5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tprivate boolean hasDependency(Set someBounds, InferenceVariable var)", "signatureAfterChange": " \t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var)", "diff": ["-\t\tprivate boolean hasDependency(Set someBounds, InferenceVariable var) {", "-\t\t\tIterator bIt = someBounds.iterator();", "+\t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var) {", "+\t\t\tIterator<TypeBound> bIt = someBounds.iterator();", "-\t\t\t\tTypeBound bound = (TypeBound) bIt.next();", "+\t\t\t\tTypeBound bound = bIt.next();"]}], "num": 5193}