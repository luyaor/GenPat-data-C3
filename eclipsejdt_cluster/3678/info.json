{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7cb5aa901cd01600cd12f4f3acb7e8a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5498b63df68c4a9f9960f2fba7de271", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "7a427b535373cc1f9194a5ea21753da0d79460d2", "commitAfterChange": "c9dd851a757195fe684b1a5b7f8f16cc8d3ff375", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": " public void _test0461_while_explicit_label()", "signatureAfterChange": " public void test0461_while_explicit_label()", "diff": ["-public void _test0461_while_explicit_label() {", "+public void test0461_while_explicit_label() {", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"  void foo(boolean b) {\\n\" + ", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"  boolean test() {\\n\" +", "+\t\t\t\"    return true;\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "-\t\t\t\"      if (b) {\\n\" + ", "+\t\t\t\"      if (test()) {\\n\" + ", "-\t\t\t\"      }\\n\" + ", "+\t\t\t\"      }\\n\" +", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    if (o == null) {\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b39886b47af7fd451e16a7b4e27580", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7ae58cbb90a0e72a8dd69c0cd98dc1505a8668bf", "commitAfterChange": "4a1a6051dae9d70af8f16177f47bcc456f4eca12", "methodNumberBeforeChange": 854, "methodNumberAfterChange": 854, "signatureBeforeChange": " public void test848()", "signatureAfterChange": " public void test0848()", "diff": ["-public void test848() {", "+public void test0848() {", "-\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tCollection<? extends Number> asList= Arrays.asList(1, 2.2);\\n\" + ", "+\t\t\"\t                                     ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety : A generic array of Number&Comparable<?> is created for a varargs parameter\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 7)\\n\" + "]}], "num": 3678}