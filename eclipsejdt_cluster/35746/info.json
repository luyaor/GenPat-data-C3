{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51f56ef092e6dc4dc6c87e346d916c92", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c4debe5e2d9b17bac6338374285c03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "86159c3022beffa95d7d57cb9f43b80d21471332", "commitAfterChange": "05e80a080ac1c390983f215b01043e8cb92e3fca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "\r public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\tthrow new ShouldNotImplement(\"Assignment variable should provide an implementation for flow analysis\");\r", "+\tthrow new ShouldNotImplement(Util.bind(\"ast.variableShouldProvide\"/*nonNLS*/));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "687cb3b30d0473d51d6d2d071ae1f850", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Reference.java", "commitBeforeChange": "86159c3022beffa95d7d57cb9f43b80d21471332", "commitAfterChange": "05e80a080ac1c390983f215b01043e8cb92e3fca", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "\r public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\tthrow new ShouldNotImplement(\"Post increment variable  should provide an implementation for code generation\");\r", "+\tthrow new ShouldNotImplement(Util.bind(\"ast.postIncrShouldProvide\"/*nonNLS*/));\r"]}], "num": 35746}