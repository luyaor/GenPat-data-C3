{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d152810c17ab205ede7629ed7810b30", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25702de7530ff1e5a0894ff77c009f59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c261b55dd469cac53e8234b731b15da962e95431", "commitAfterChange": "bb273d0d52e5563bf2352a9d52423a505e1675a8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \t\r \tpublic ImportDeclaration convertImport(ImportReference importReference)", "signatureAfterChange": "\r \t\r \tpublic ImportDeclaration convertImport(ImportReference importReference)", "diff": ["-\t\t// set the name (qualified or simple name is handled by newName(String[]))\r", "+\t\tboolean onDemand = importReference.onDemand;\r", "-\t\tString[] identifiers = new String[length];\r", "-\t\tfor (int index = 0; index < length; index++) {\r", "-\t\t\tidentifiers[index] = new String(tokens[index]);\r", "-\t\t} \r", "-\t\tName packageName = this.ast.newName(identifiers);\r", "-\t\tpackageName.setSourceRange((int)(positions[0]>>>32), (int)(positions[length - 1] & 0xFFFFFFFF) - (int)(positions[0]>>>32) + 1);\r", "-\t\t// create the actual package declaration\r", "-\t\timportDeclaration.setName(packageName);\r", "+\t\tName name = null;\r", "+\t\tif (length > 1) {\r", "+\t\t\tname = setQualifiedNameNameAndSourceRanges(tokens, positions, importReference);\r", "+\t\t} else {\r", "+\t\t\tname = this.ast.newSimpleName(new String(tokens[0]));\r", "+\t\t\tint start = (int)(positions[0]>>>32);\r", "+\t\t\tint end = (int)(positions[0] & 0xFFFFFFFF);\r", "+\t\t\tname.setSourceRange(start, end - start + 1);\r", "+\t\t}\r", "-\t\timportDeclaration.setOnDemand(importReference.onDemand);\r", "+\t\timportDeclaration.setName(name);\r", "+\t\timportDeclaration.setOnDemand(onDemand);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5c852d65b4f9bee2515e907f43f9b9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c261b55dd469cac53e8234b731b15da962e95431", "commitAfterChange": "bb273d0d52e5563bf2352a9d52423a505e1675a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic PackageDeclaration convertPackage(ImportReference importReference)", "signatureAfterChange": "\r \t\r \tpublic PackageDeclaration convertPackage(ImportReference importReference)", "diff": ["-\t\tthis.ast.getBindingResolver().store(packageDeclaration, importReference);\r", "-\t\t// set the name (qualified or simple name is handled by newName(String[]))\r", "-\t\tString[] identifiers = new String[length];\r", "-\t\tfor (int index = 0; index < length; index++) {\r", "-\t\t\tidentifiers[index] = new String(tokens[index]);\r", "-\t\t} \r", "-\t\tName packageName = this.ast.newName(identifiers);\r", "-\t\t\r", "-\t\t// set the positions of each name subpart\r", "-\t\tpackageName.setSourceRange((int)(positions[0]>>>32), (int)(positions[length - 1] & 0xFFFFFFFF) - (int)(positions[0]>>>32) + 1);\r", "-\t\t\t// create the actual package declaration\r", "-\t\tpackageDeclaration.setName(packageName);\r", "+\t\tint start = (int)(positions[0]>>>32);\r", "+\t\tint end = (int)(positions[length - 1] & 0xFFFFFFFF);\r", "+\t\tName name = null;\r", "+\t\tif (length > 1) {\r", "+\t\t\tname = setQualifiedNameNameAndSourceRanges(tokens, positions, importReference);\r", "+\t\t} else {\r", "+\t\t\tname = this.ast.newSimpleName(new String(tokens[0]));\r", "+\t\t\tname.setSourceRange(start, end - start + 1);\r", "+\t\t}\r", "+\t\tpackageDeclaration.setName(name);\r"]}], "num": 72018}