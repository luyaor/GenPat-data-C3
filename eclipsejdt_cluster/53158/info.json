{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1679f6d86431e7770a9c444000013df6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3027a6005afe42b9301c6f489d94f8e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "bf0bb24ad2aa11936f786fa3a21e4724052c7919", "commitAfterChange": "3f4c816813820db669d197557cb718b17b2bf721", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["-", "-\t\t\t// Verify that line end does not start with an open parenthese (which could be a constructor reference wrongly written...)", "-\t\t\t// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=47215", "-\t\t\tchar ch = peekChar();", "-\t\t\tif (ch == '(') {", "-\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocMissingHashCharacter(typeRefStartPosition, this.lineEnd, String.valueOf(this.source, typeRefStartPosition, this.lineEnd-typeRefStartPosition+1));", "-\t\t\t\treturn false;", "+\t\t\t", "+\t\t\tint currentIndex = this.index; // store current index", "+\t\t\tchar ch = readChar();", "+\t\t\tswitch (ch) {", "+\t\t\t\t// Verify that line end does not start with an open parenthese (which could be a constructor reference wrongly written...)", "+\t\t\t\t// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=47215\t", "+\t\t\t\tcase '(' :", "+\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocMissingHashCharacter(typeRefStartPosition, this.lineEnd, String.valueOf(this.source, typeRefStartPosition, this.lineEnd-typeRefStartPosition+1));", "+\t\t\t\t\treturn false;", "+\t\t\t\t// Search for the :// URL pattern", "+\t\t\t\t// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=168849", "+\t\t\t\tcase ':' :", "+\t\t\t\t\tch = readChar();\t\t\t\t\t", "+\t\t\t\t\tif (ch == '/' && ch == readChar()) {", "+\t\t\t\t\t\tif (this.reportProblems) {", "+\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocInvalidSeeUrlReference(typeRefStartPosition, this.lineEnd);", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-", "+\t\t\t// revert to last stored index", "+\t\t\tthis.index = currentIndex;", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303960a07ed9ed0f2d365449cdf79433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "3713e09eba9f685830154e0115a35b3f423e4800", "commitAfterChange": "b643998b38b3ce66cb5be62319a6d11497b1841e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.validValuePositions == -1) {", "-\t\t\t\t\t\t\t\tif (this.invalidValuePositions != -1) {", "-\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (valid) {", "-\t\t\t\t\t\t\t\t\tthis.validValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "-\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = -1;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t\tif (this.validValuePositions == -1) {", "+\t\t\t\t\t\t\t\t\tif (this.invalidValuePositions != -1) {", "+\t\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tif (valid) {", "+\t\t\t\t\t\t\t\t\t\tthis.validValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = -1;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6853cc96231c499c0c02e0dca44517", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "b70c37ecf76f05e7ae76a32ba47dec687904996c", "commitAfterChange": "991f76a3733441af275e22b3c172d2ee3c84bb0e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (this.sourceLevel >= ClassFileConstants.JDK1_5 && length == TAG_VALUE_LENGTH && CharOperation.equals(TAG_VALUE, tagName)) {", "+\t\t\t\t\t\tif (length == TAG_VALUE_LENGTH && CharOperation.equals(TAG_VALUE, tagName)) {", "-\t\t\t\t\t\t\tif (this.inlineTagStarted) {", "-\t\t\t\t\t\t\t\tvalid = parseReference();", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tvalid = false;", "-\t\t\t\t\t\t\t\tif (this.reportProblems) {", "-\t\t\t\t\t\t\t\t\tthis.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\tif (this.sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\t\t\t\t\tif (this.inlineTagStarted) {", "+\t\t\t\t\t\t\t\t\tvalid = parseReference();", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tvalid = false;", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (this.validValuePositions == -1) {", "+\t\t\t\t\t\t\t\tif (this.invalidValuePositions != -1) {", "+\t\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, (int) (this.invalidValuePositions>>>32), (int) this.invalidValuePositions);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (valid) {", "+\t\t\t\t\t\t\t\t\tthis.validValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = -1;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthis.invalidValuePositions = (((long) this.tagSourceStart) << 32) + this.tagSourceEnd;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocDuplicatedTag(tagName, this.tagSourceStart, this.tagSourceEnd);"]}], "num": 53158}