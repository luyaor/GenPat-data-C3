{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bffdbe3d9b15e06e93533562fb4455e0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c55e8523b4821e0988bafea8d4bfe00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 51, "signatureBeforeChange": "  private File[][] getLibrariesFiles(File[] files)", "signatureAfterChange": " \tpublic static File[][] getLibrariesFiles(File[] files)", "diff": ["+\t}", "+\tpublic static File[][] getLibrariesFiles(File[] files) {", "+\t\tFilenameFilter filter = new FilenameFilter() {", "+\t\t\tpublic boolean accept(File dir, String name) {", "+\t\t\t\tString lowerCaseName = name.toLowerCase();", "+\t\t\t\tif (lowerCaseName.endsWith(SuffixConstants.SUFFIX_STRING_jar) || lowerCaseName.endsWith(SuffixConstants.SUFFIX_STRING_zip)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t};", "+\t\tfinal int filesLength = files.length;", "+\t\tFile[][] result = new File[filesLength][];", "+\t\tfor (int i = 0; i < filesLength; i++) {", "+\t\t\tFile currentFile = files[i];", "+\t\t\tif (currentFile.exists() && currentFile.isDirectory()) {", "+\t\t\t\tresult[i] = currentFile.listFiles(filter);", "+\t\t\t}", "+\t\t}", "+\t\treturn result;", "+\t}", "-private File[][] getLibrariesFiles(File[] files) {", "-\tFilenameFilter filter = new FilenameFilter() {", "-\t\tpublic boolean accept(File dir, String name) {", "-\t\t\tString lowerCaseName = name.toLowerCase();", "-\t\t\tif (lowerCaseName.endsWith(SuffixConstants.SUFFIX_STRING_jar) || lowerCaseName.endsWith(SuffixConstants.SUFFIX_STRING_zip)) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\treturn false;", "-\t\t}", "-\t};", "-\tfinal int filesLength = files.length;", "-\tFile[][] result = new File[filesLength][];", "-\tfor (int i = 0; i < filesLength; i++) {", "-\t\tFile currentFile = files[i];", "-\t\tif (currentFile.exists() && currentFile.isDirectory()) {", "-\t\t\tresult[i] = currentFile.listFiles(filter);", "-\t\t}", "-\t}", "-\treturn result;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda92c6e980c1fe9c9ab959c8adae3ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "f4fc58ef48a6d9d6c398d56576d18d3e70e62c86", "commitAfterChange": "6537a24c88f25f9b49763273df663f64d4b48580", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding, int[] classpathDirectoryModes)", "signatureAfterChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding, int[] classpathDirectoryModes)", "diff": ["-\tclasspaths = new Classpath[classpathSize];", "+\tthis.classpaths = new Classpath[classpathSize];", "-\t\t\t\t\t\tclasspaths[i] = new ClasspathDirectory(file, encoding);", "+\t\t\t\t\t\tthis.classpaths[i] = new ClasspathDirectory(file, encoding);", "-\t\t\t\t\t\tclasspaths[i] = new ClasspathDirectory(file, encoding, classpathDirectoryModes[i]);", "+\t\t\t\t\t\tthis.classpaths[i] = new ClasspathDirectory(file, encoding, classpathDirectoryModes[i]);", "-\t\t\t\t\tpathNames[i] = ((ClasspathDirectory) classpaths[i]).path;", "+\t\t\t\t\tpathNames[i] = ((ClasspathDirectory) this.classpaths[i]).path;", "-\t\t\t\tclasspaths[i] = this.getClasspathJar(file); // will throw an IOException if file does not exist", "+\t\t\t\tthis.classpaths[i] = this.getClasspathJar(file); // will throw an IOException if file does not exist", "-\t\t\tclasspaths[i] = null;", "+\t\t\tthis.classpaths[i] = null;", "-\t\tif (classpaths[i] == null)", "+\t\tif (this.classpaths[i] == null)", "-\t\t\tif (classpaths[i] != null) {", "-\t\t\t\tnewPaths[current] = classpaths[i];", "+\t\t\tif (this.classpaths[i] != null) {", "+\t\t\t\tnewPaths[current] = this.classpaths[i];", "-\t\tclasspaths = newPaths;", "+\t\tthis.classpaths = newPaths;", "-\tknownFileNames = new String[initialFileNames.length];", "+\tthis.knownFileNames = new String[initialFileNames.length];", "-\t\t\tknownFileNames[i] = fileName; // leave as is...", "+\t\t\tthis.knownFileNames[i] = fileName; // leave as is...", "-\t\t\tknownFileNames[i] = fileName.substring(matchingPathName.length());", "+\t\t\tthis.knownFileNames[i] = fileName.substring(matchingPathName.length());"]}], "num": 55330}