{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3868167f1757663e42145441f6ba0be3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e7e188758ddfa370fa15a937b045ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "4b7347be32aba69e100f0a65557658cc00f4de32", "commitAfterChange": "2870aa14f88288f60383b8e3b2e39060da290126", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testLongConversion() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testLongConversion() throws Exception", "diff": ["-\t\texpectingSpecificProblemsFor(testPath, new Problem[]{", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to boolean\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to char\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to byte\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to short\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to int\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber z expected java.lang.Boolean but got java.lang.Long\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber s expected java.lang.Short but got java.lang.Long\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber i expected java.lang.Integer but got java.lang.Long\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber c expected java.lang.Character but got java.lang.Long\", testPath),", "-\t\t\t\tnew Problem(\"\", \"type mismatch for memeber b expected java.lang.Byte but got java.lang.Long\", testPath),", "+\t\texpectingSpecificProblemsFor(testPath, new ExpectedProblem[]{", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to boolean\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to char\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to byte\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to short\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to int\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber z expected java.lang.Boolean but got java.lang.Long\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber s expected java.lang.Short but got java.lang.Long\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber i expected java.lang.Integer but got java.lang.Long\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber c expected java.lang.Character but got java.lang.Long\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"type mismatch for memeber b expected java.lang.Byte but got java.lang.Long\", testPath),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c370f7c85c15cba8e03e3c7a2a9446", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "4b7347be32aba69e100f0a65557658cc00f4de32", "commitAfterChange": "2870aa14f88288f60383b8e3b2e39060da290126", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testLongConversion_Reflection() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testLongConversion_Reflection() throws Exception", "diff": ["-\t\texpectingSpecificProblemsFor(testPath, new Problem[]{", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to boolean\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to char\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to byte\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to short\", testPath),", "-\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from long to int\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber z expected true but got false\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber s expected 49 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber i expected 49 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber c expected 1 but got 0\", testPath),", "-\t\t\t\tnew Problem(\"\", \"value mismatch for memeber b expected 49 but got 0\", testPath),", "+\t\texpectingSpecificProblemsFor(testPath, new ExpectedProblem[]{", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to boolean\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to char\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to byte\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to short\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"Type mismatch: cannot convert from long to int\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber z expected true but got false\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber s expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber i expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber c expected 1 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber b expected 49 but got 0\", testPath),"]}], "num": 52045}