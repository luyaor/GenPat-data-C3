{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "789a273d8429bac6f39cffee48a69e3a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2309209af231a92b8fc3b1f7a24e5cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "abab907ca988de55db9659fc1161de10230e8bdf", "commitAfterChange": "5a0382cf8f4f31c0856d2c7bec7b6965767832d9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["-\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\treturn this.matchLevel(typeRef.binding);\r", "+\t}\r", "+}\r", "-\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef122f2c9fd7e5a23cfa41e07ab7f28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c273134bf110ff6a8ee2009bd261955b7caa4081", "commitAfterChange": "a15857c78be035e31c0bb57b42d7b9ffa74cef8c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "-\t\t\t\tif (memberValuePairs == null || memberValuePairs.length == 0) {", "-\t\t\t\t\tif (annotation.resolvedType instanceof ReferenceBinding) {", "-\t\t\t\t\t\tMethodBinding[] methodBindings =", "-\t\t\t\t\t\t\t((ReferenceBinding)annotation.resolvedType).availableMethods();", "-\t\t\t\t\t\tif (methodBindings != null &&", "-\t\t\t\t\t\t\t\tmethodBindings.length == 1 &&", "-\t\t\t\t\t\t\t\tCharOperation.equals(methodBindings[0].selector, VALUE)) {", "-\t\t\t\t\t\t\tif (this.expectedTypesPtr > -1 && this.expectedTypes[0].isAnnotationType()) {", "-\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tfindVariablesAndMethods(", "-\t\t\t\t\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\tFakeInvocationSite,", "-\t\t\t\t\t\t\t\t\tscope,", "-\t\t\t\t\t\t\t\t\tinsideTypeAnnotation,", "-\t\t\t\t\t\t\t\t\ttrue);", "-\t\t\t\t\t\t\t\t// can be the start of a qualified type name", "-\t\t\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "+\t\t\t\tif (this.assistNodeCanBeSingleMemberAnnotation) {", "+\t\t\t\t\tif (this.expectedTypesPtr > -1 && this.expectedTypes[0].isAnnotationType()) {", "+\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfindVariablesAndMethods(", "+\t\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tFakeInvocationSite,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tinsideTypeAnnotation,", "+\t\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\t// can be the start of a qualified type name", "+\t\t\t\t\t\tfindTypesAndPackages(this.completionToken, scope);"]}], "num": 42178}