{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8bc35137b6171d81e2c6b5d66adf060", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "576c4ad8df7c79b23a2e48045cb0060b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "16bbff04917b9cd9bd7cceaf4adfc1563daef0bc", "commitAfterChange": "898da07e1ab8f70e81db909fb2e1c38edc9b87c3", "methodNumberBeforeChange": 532, "methodNumberAfterChange": 531, "signatureBeforeChange": " public void parameterRequiresNonnull(ReferenceExpression location, MethodBinding descriptorMethod, int idx, \t\t\t\tchar[][] nonNullAnnotationName, TypeBinding requiredType)", "signatureAfterChange": " public void referenceExpressionArgumentNullityMismatch(ReferenceExpression location, TypeBinding requiredType, TypeBinding providedType, \t\tMethodBinding descriptorMethod, int idx, NullAnnotationMatching status)", "diff": ["+public void referenceExpressionArgumentNullityMismatch(ReferenceExpression location, TypeBinding requiredType, TypeBinding providedType,", "+\t\tMethodBinding descriptorMethod, int idx, NullAnnotationMatching status) {", "+\t\t\tstatus.isUnchecked() ? IProblem.ReferenceExpressionParameterNullityUnchecked : IProblem.ReferenceExpressionParameterNullityMismatch,", "+\t\t\t\t\t\t\tString.valueOf(requiredType.nullAnnotatedReadableName(this.options, false)),", "+\t\t\t\t\t\t\tString.valueOf(providedType.nullAnnotatedReadableName(this.options, false)),", "+\t\t\t\t\t\t\tString.valueOf(requiredType.nullAnnotatedReadableName(this.options, true)),", "+\t\t\t\t\t\t\tString.valueOf(providedType.nullAnnotatedReadableName(this.options, true)),", "-}", "-public void parameterRequiresNonnull(ReferenceExpression location, MethodBinding descriptorMethod, int idx,", "-\t\t\t\tchar[][] nonNullAnnotationName, TypeBinding requiredType) {", "-\tStringBuffer methodSignature = new StringBuffer();", "-\tmethodSignature", "-\t\t.append(descriptorMethod.declaringClass.readableName())", "-\t\t.append('.')", "-\t\t.append(descriptorMethod.readableName());", "-", "-\tStringBuffer shortSignature = new StringBuffer();", "-\tshortSignature", "-\t\t.append(descriptorMethod.declaringClass.shortReadableName())", "-\t\t.append('.')", "-\t\t.append(descriptorMethod.shortReadableName());", "-\tthis.handle(", "-\t\tIProblem.ReferenceExpressionParameterRequiredNonnullUnchecked, ", "-\t\tnew String[] { String.valueOf(idx+1),", "-\t\t\t\t\tmethodSignature.toString(),", "-\t\t\t\t\tCharOperation.toString(nonNullAnnotationName), String.valueOf(requiredType.readableName()) },", "-\t\tnew String[] { String.valueOf(idx+1),", "-\t\t\t\t\tshortSignature.toString(),", "-\t\t\t\t\tString.valueOf(nonNullAnnotationName[nonNullAnnotationName.length-1]), String.valueOf(requiredType.shortReadableName()) },", "-\t\tlocation.sourceStart,", "-\t\tlocation.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "902c625a86492eefcc90e124c289c13a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c67d112c20f07c2dcda11714ef23687a9781a753", "commitAfterChange": "af79dfe4ab6f88841082d7727b71d3b65b4f7778", "methodNumberBeforeChange": 545, "methodNumberAfterChange": 545, "signatureBeforeChange": " public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, int severity)", "signatureAfterChange": " public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, Statement.NullAnnotationStatus status)", "diff": ["-public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, int severity) ", "+public void nullityMismatchingTypeAnnotation(Expression expression, TypeBinding providedType, TypeBinding requiredType, Statement.NullAnnotationStatus status) ", "-\tString[] arguments = new String[] {", "-\t\tString.valueOf(requiredType.nullAnnotatedReadableName(this.options, false)),", "-\t\tString.valueOf(providedType.nullAnnotatedReadableName(this.options, false))", "-\t};", "-\tString[] shortArguments = new String[] {", "-\t\tString.valueOf(requiredType.nullAnnotatedReadableName(this.options, true)),", "-\t\tString.valueOf(providedType.nullAnnotatedReadableName(this.options, true))", "-\t};", "-\tint problemId = severity == 1 ? IProblem.NullityUncheckedTypeAnnotationDetail : IProblem.NullityMismatchingTypeAnnotation;\t\t\t", "-\tthis.handle(", "-\t\t\tproblemId,", "-\t\t\targuments, shortArguments, expression.sourceStart, expression.sourceEnd);", "+\tString[] arguments ;", "+\tString[] shortArguments;", "+\t\t", "+\tint problemId = 0;", "+\tif (status.superTypeHint != null) {", "+\t\tproblemId = (status.isUnchecked()", "+\t\t\t? IProblem.NullityUncheckedTypeAnnotationDetailSuperHint", "+\t\t\t: IProblem.NullityMismatchingTypeAnnotationSuperHint);", "+\t\targuments      = new String[] { null, null, status.superTypeHintName(this.options, false) };", "+\t\tshortArguments = new String[] { null, null, status.superTypeHintName(this.options, true) };", "+\t} else {", "+\t\tproblemId = (status.isUnchecked()", "+\t\t\t? IProblem.NullityUncheckedTypeAnnotationDetail", "+\t\t\t: IProblem.NullityMismatchingTypeAnnotation);", "+\t\targuments      = new String[2];", "+\t\tshortArguments = new String[2];", "+\t}", "+\targuments[0] = String.valueOf(requiredType.nullAnnotatedReadableName(this.options, false));", "+\targuments[1] = String.valueOf(providedType.nullAnnotatedReadableName(this.options, false));", "+\tshortArguments[0] = String.valueOf(requiredType.nullAnnotatedReadableName(this.options, true));", "+\tshortArguments[1] = String.valueOf(providedType.nullAnnotatedReadableName(this.options, true));", "+\tthis.handle(problemId, arguments, shortArguments, expression.sourceStart, expression.sourceEnd);"]}], "num": 15930}