{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5126c895a0bf34d407d7d7196e2931d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "708a96db5a09fce864b92a29747e18a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cf072eeff121940a541295553114f490c9a9bb69", "commitAfterChange": "9617178877607b049b1a7c4f92c93a8d11facd28", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tBlockScope scope)", "diff": ["+\t\tif (parameterizedSingleTypeReference.annotations != null) {", "+\t\t\tformatInlineAnnotations(parameterizedSingleTypeReference.annotations[0], false);", "+\t\t}", "-", "-\t\tint dimensions = getDimensions();", "-\t\tif (dimensions != 0 && dimensions <= parameterizedSingleTypeReference.dimensions()) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t}", "-\t\t}", "+\t\tformatLeadingDimensions(parameterizedSingleTypeReference, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f49df020f0003c3bd60fa27d3cbea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cf072eeff121940a541295553114f490c9a9bb69", "commitAfterChange": "9617178877607b049b1a7c4f92c93a8d11facd28", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedSingleTypeReference parameterizedSingleTypeReference, \t\t\tClassScope scope)", "diff": ["+\t\tif (parameterizedSingleTypeReference.annotations != null) {", "+\t\t\tformatInlineAnnotations(parameterizedSingleTypeReference.annotations[0], false);", "+\t\t}", "-\t\tint dimensions = getDimensions();", "-\t\tif (dimensions != 0 && dimensions <= parameterizedSingleTypeReference.dimensions()) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "-\t\t\t}", "-\t\t}", "+\t\tformatLeadingDimensions(parameterizedSingleTypeReference, true);"]}], "num": 66553}