{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "920220a6b9c825d13fcc768584bdf29f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7eacf2dd37411f5ec2f15c9c4c153f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tpublic void test043e()", "signatureAfterChange": " \tpublic void test043e()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"Type safety : A generic array of List<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"Type safety: A generic array of List<Object> is created for a varargs parameter\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in p\\\\X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tpublic X() { foo(data.l); }\\n\" + ", "+\t\t\t\t\"\t             ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: A generic array of List<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in p\\\\X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tpublic X() { foo(data.l); }\\n\" + ", "+\t\t\t\t\"\t             ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: Unchecked invocation foo(List) of the generic method foo(List<T>...) of type Y\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in p\\\\X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tpublic X() { foo(data.l); }\\n\" + ", "+\t\t\t\t\"\t                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in p\\\\Y.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tList l = null;\\n\" + ", "+\t\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in p\\\\Y.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tpublic static <T> void foo(T... e) {}\\n\" + ", "+\t\t\t\t\"\t                                ^\\n\" + ", "+\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter e\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in p\\\\Y.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tpublic static <T> void foo(List<T>... e) {}\\n\" + ", "+\t\t\t\t\"\t                                      ^\\n\" + ", "+\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter e\\n\" + ", "+\t\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b148ecdee3536d5dbe556d591d545f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " \tpublic void test043d()", "signatureAfterChange": " \tpublic void test043d()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"Type safety : A generic array of List<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\"Type safety: A generic array of List<Object> is created for a varargs parameter\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tpublic X() { foo(data.l); }\\n\" + ", "+\t\t\t\t\"\t             ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: A generic array of List<Object> is created for a varargs parameter\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tpublic X() { foo(data.l); }\\n\" + ", "+\t\t\t\t\"\t             ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: Unchecked invocation foo(List) of the generic method foo(List<T>...) of type Z\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tpublic X() { foo(data.l); }\\n\" + ", "+\t\t\t\t\"\t                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in p\\\\Y.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tList l = null;\\n\" + ", "+\t\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in p\\\\Y.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tpublic static <T> void foo(T... e) {}\\n\" + ", "+\t\t\t\t\"\t                                ^\\n\" + ", "+\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter e\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in p\\\\Z.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tpublic static <T> void foo(List<T>... e) {}\\n\" + ", "+\t\t\t\t\"\t                                      ^\\n\" + ", "+\t\t\t\t\"Type safety: Potential heap pollution via varargs parameter e\\n\" + ", "+\t\t\t\t\"----------\\n\""]}], "num": 49169}