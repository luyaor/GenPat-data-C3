{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c9c127b4cc2c642493ad58bfab9ffef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc8c2d7d205e46b41ffd679ecfd4757", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5b7577970cc1147a47fff02a981297149bac38c1", "commitAfterChange": "747a63a0a2a9b4e7029fd103555c522985364757", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 86, "signatureBeforeChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tObject existingInfo = manager.removeInfoAndChildren(this);", "+\t// working copy: remove info from cache, but keep buffer open", "+\tmanager.removeInfoAndChildren(this);", "-\tObject info;", "-\tif (existingInfo instanceof WorkingCopyElementInfo) {", "-\t\tWorkingCopyElementInfo workingCopyElementInfo = (WorkingCopyElementInfo)existingInfo;", "-\t\tint useCount = workingCopyElementInfo.useCount();", "-\t\tinfo = new WorkingCopyElementInfo(useCount, workingCopyElementInfo.problemRequestor);", "-\t} else {", "-\t\tinfo = new CompilationUnitElementInfo();", "-\t}", "-\topenWhenClosed(info, monitor);", "+\topenWhenClosed(createElementInfo(), monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e97327f691126f9859db529f44338dbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5b7577970cc1147a47fff02a981297149bac38c1", "commitAfterChange": "747a63a0a2a9b4e7029fd103555c522985364757", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void close() throws JavaModelException", "signatureAfterChange": " public void close() throws JavaModelException", "diff": ["-\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\tObject info = manager.peekAtInfo(this);", "-\tif (info == null) return;", "+\tif (isWorkingCopy()) return; // a working copy must remain opened until it is discarded", "-\tif (info instanceof WorkingCopyElementInfo) {", "-\t\tWorkingCopyElementInfo workingCopyElementInfo = (WorkingCopyElementInfo)info;", "-\t\tint useCount = workingCopyElementInfo.useCount();", "-\t\tHashMap newElements = new HashMap();", "-\t\tnewElements.put(this,  new WorkingCopyElementInfo(-useCount, workingCopyElementInfo.problemRequestor));", "-\t\t// note if working copy is reopen by another thread in the meantime", "-\t\t// then putInfos will not put the working copy info as it will be already in the cache", "-\t\tmanager.putInfos(this, newElements); ", "-\t}"]}], "num": 18621}