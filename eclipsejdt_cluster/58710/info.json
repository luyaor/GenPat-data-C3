{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d03ba31233feec5ea1b82bd19e8fdb8d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5980facddef70b36ebd898f415daa3b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["+ */\r", "+protected void executeOperation() throws JavaModelException {\r", "+\tbeginTask(Util.bind(\"classpath.settingProgress\"/*nonNLS*/), 2);\r", "+\tJavaProject project= ((JavaProject) getElementsToProcess()[0]);\r", "+\t\r", "+\tproject.setRawClasspath0(this.newRawPath);\r", "-\t */\r", "-\tprotected void executeOperation() throws JavaModelException {\r", "-\t\tbeginTask(\"Setting classpath...\", 2);\r", "-\t\tJavaProject project = ((JavaProject) getElementsToProcess()[0]);\r", "+\t// change builder specs to build in the order given by the new classpath\r", "+\tJavaModelManager manager = project.getJavaModelManager();\r", "+\tmanager.setBuildOrder(((JavaModel) project.getJavaModel()).computeBuildOrder(true));\r", "-\t\tproject.setRawClasspath0(this.newRawPath);\r", "+\t// flush markers\r", "+\tproject.flushClasspathProblemMarkers();\r", "-\t\t// change builder specs to build in the order given by the new classpath\r", "-\t\tJavaModelManager manager = project.getJavaModelManager();\r", "-\t\tmanager.setBuildOrder(\r", "-\t\t\t((JavaModel) project.getJavaModel()).computeBuildOrder(true));\r", "-\r", "-\t\tif (this.oldResolvedPath != null) {\r", "-\t\t\tgenerateClasspathChangeDeltas(\r", "-\t\t\t\tthis.oldResolvedPath,\r", "-\t\t\t\tproject.getResolvedClasspath(true),\r", "-\t\t\t\tmanager,\r", "-\t\t\t\tproject);\r", "-\t\t} else {\r", "-\t\t\tproject.saveClasspath(this.saveClasspath);\r", "-\t\t}\r", "-\r", "-\t\tdone();\r", "+\t// resolve new path (asking for marker creation if problems)\r", "+\tIClasspathEntry[] newResolvedPath = project.getResolvedClasspath(true, true);\r", "+\t\r", "+\tif (this.oldResolvedPath != null) {\r", "+\t\tgenerateClasspathChangeDeltas(this.oldResolvedPath, newResolvedPath, manager, project);\r", "+\t} else {\r", "+\t\tproject.saveClasspath(this.saveClasspath);\t\t\r", "+\tdone();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9e7ea8ec3bde52f75d433b32e8b28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r \tprotected void executeOperation() throws JavaModelException", "diff": ["- */\r", "-protected void executeOperation() throws JavaModelException {\r", "-\tbeginTask(Util.bind(\"classpath.settingProgress\"), 2); //$NON-NLS-1$\r", "-\tJavaProject project= ((JavaProject) getElementsToProcess()[0]);\r", "-\t\r", "-\tproject.setRawClasspath0(this.newRawPath);\r", "-\t// change builder specs to build in the order given by the new classpath\r", "-\tJavaModelManager manager = project.getJavaModelManager();\r", "-\tmanager.setBuildOrder(((JavaModel) project.getJavaModel()).computeBuildOrder(true));\r", "+\t */\r", "+\tprotected void executeOperation() throws JavaModelException {\r", "-\t// flush markers\r", "-\tproject.flushClasspathProblemMarkers();\r", "+\t\tbeginTask(Util.bind(\"classpath.settingProgress\"), 2); //$NON-NLS-1$\r", "+\t\tJavaProject project = ((JavaProject) getElementsToProcess()[0]);\r", "-\t// resolve new path (asking for marker creation if problems)\r", "-\tIClasspathEntry[] newResolvedPath = project.getResolvedClasspath(true, true);\r", "-\t\r", "-\tif (this.oldResolvedPath != null) {\r", "-\t\tgenerateClasspathChangeDeltas(this.oldResolvedPath, newResolvedPath, manager, project);\r", "-\t} else {\r", "-\t\tproject.saveClasspath(this.saveClasspath);\t\t\r", "+\t\tproject.setRawClasspath0(this.newRawPath);\r", "+\r", "+\t\t// change builder specs to build in the order given by the new classpath\r", "+\t\tJavaModelManager manager = project.getJavaModelManager();\r", "+\t\tmanager.setBuildOrder(\r", "+\t\t\t((JavaModel) project.getJavaModel()).computeBuildOrder(true));\r", "+\r", "+\t\t// flush markers\r", "+\t\tproject.flushClasspathProblemMarkers();\r", "+\r", "+\t\t// resolve new path (asking for marker creation if problems)\r", "+\t\tIClasspathEntry[] newExpandedPath = project.getExpandedClasspath(true, true);\r", "+\r", "+\t\tif (this.oldExpandedPath != null) {\r", "+\t\t\tgenerateClasspathChangeDeltas(\r", "+\t\t\t\tthis.oldExpandedPath,\r", "+\t\t\t\tnewExpandedPath,\r", "+\t\t\t\tmanager,\r", "+\t\t\t\tproject);\r", "+\t\t} else {\r", "+\t\t\tproject.saveClasspath(this.saveClasspath);\r", "+\t\t}\r", "+\r", "+\t\tdone();\r", "-\tdone();\r", "-}\r"]}], "num": 58710}