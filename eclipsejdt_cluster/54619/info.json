{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c06a057ae557253fd383ac5ff869d5c2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bccb01d4295b55e97f1737c08acec86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaIndexTests.java", "commitBeforeChange": "8e69d36fa08db2d61d2c40fecd2494cfd19819f5", "commitAfterChange": "3c9fcd486312b0a7ab40ed5ba3b6e46d9bce5dc9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void _testChangeClasspathForInternalJar() throws CoreException, IOException", "signatureAfterChange": " \tpublic void testChangeClasspathForInternalJar() throws CoreException, IOException", "diff": ["-\tpublic void _testChangeClasspathForInternalJar() throws CoreException, IOException {", "+\tpublic void testChangeClasspathForInternalJar() throws CoreException, IOException {", "+\t\tString fullJarPath = getWorkspacePath() + jarFilePath;", "-\t\t\t\t\t\"}\"}, jarFilePath);", "-\t\t\tJavaIndexer.generateIndexForJar(jarFilePath, indexFilePath);", "+\t\t\t\t\t\"}\"}, fullJarPath);", "+\t\t\tJavaIndexer.generateIndexForJar(fullJarPath, indexFilePath);", "-\t\t\t\t\t\"}\"}, jarFilePath);", "+\t\t\t\t\t\"}\"}, fullJarPath);", "+\t\t\tp.getProject().refreshLocal(1, null);", "-\t\t\tassertSearchResults(\"\\\\P\\\\Test.jar pkg.NewTest\");", "+\t\t\tassertSearchResults(\"Test.jar pkg.NewTest [No source]\");", "-\t\t\tassertSearchResults(\"\\\\P\\\\Test.jar pkg.NewTest\");", "-\t\t\t", "-\t\t\t", "+\t\t\tassertSearchResults(\"Test.jar pkg.NewTest [No source]\");\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f7441e2eaeb977abef29202fd53511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "9ee33691ed28522cbc2852e39f3c0e623d310200", "commitAfterChange": "6279337ba7a56fe0ba602068e82284092e08edd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t public void initializeConstructorAccessor(MethodBinding targetConstructor)", "signatureAfterChange": " \t public void initializeConstructorAccessor(MethodBinding accessedConstructor)", "diff": ["-\t public void initializeConstructorAccessor(MethodBinding targetConstructor) {", "+\t public void initializeConstructorAccessor(MethodBinding accessedConstructor) {", "-\t\tthis.targetMethod = targetConstructor;", "+\t\tthis.targetMethod = accessedConstructor;", "-\t\tSourceTypeBinding sourceType = (SourceTypeBinding) targetConstructor.declaringClass; ", "+\t\tSourceTypeBinding sourceType = (SourceTypeBinding) accessedConstructor.declaringClass; ", "-\t\tthis.selector = targetConstructor.selector;", "-\t\tthis.returnType = targetConstructor.returnType;", "+\t\tthis.selector = accessedConstructor.selector;", "+\t\tthis.returnType = accessedConstructor.returnType;", "-\t\tthis.parameters = new TypeBinding[targetConstructor.parameters.length + 1];", "+\t\tthis.parameters = new TypeBinding[accessedConstructor.parameters.length + 1];", "-\t\t\ttargetConstructor.parameters, ", "+\t\t\taccessedConstructor.parameters, ", "-\t\t\ttargetConstructor.parameters.length); ", "-\t\tparameters[targetConstructor.parameters.length] = ", "-\t\t\ttargetConstructor.declaringClass; ", "-\t\tthis.thrownExceptions = targetConstructor.thrownExceptions;", "+\t\t\taccessedConstructor.parameters.length); ", "+\t\tparameters[accessedConstructor.parameters.length] = ", "+\t\t\taccessedConstructor.declaringClass; ", "+\t\tthis.thrownExceptions = accessedConstructor.thrownExceptions;", "-\t\t\t\tif (methodDecls[i].binding == targetConstructor) {", "+\t\t\t\tif (methodDecls[i].binding == accessedConstructor) {"]}], "num": 54619}