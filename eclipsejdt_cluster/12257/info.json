{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6215c6fb3b881ede3a47c0898df23a13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b2a21971421421a42437f60abea1a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "b420bfdd4a859691c7aeac5921ac84f8a5db1f18", "commitAfterChange": "6cf1783794eb1a6e5e7c6e98927f2c861618e7ac", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic String getQualifiedName()", "signatureAfterChange": " \tpublic String getQualifiedName()", "diff": ["-\t\treturn this.getName();", "+\t\tReferenceBinding referenceBinding = getReferenceBinding();", "+\t\tif (referenceBinding != null) {", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tchar[] brackets = new char[this.dimensions * 2];", "+\t\t\tfor (int i = this.dimensions * 2 - 1; i >= 0; i -= 2) {", "+\t\t\t\tbrackets[i] = ']';", "+\t\t\t\tbrackets[i - 1] = '[';", "+\t\t\t}", "+\t\t\tbuffer.append(CharOperation.toString(referenceBinding.compoundName));", "+\t\t\tbuffer.append(brackets);", "+\t\t\treturn String.valueOf(buffer);", "+\t\t} else { ", "+\t\t\treturn getName();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc0bd455b43a56aef0ecd3d38b12034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "48b439005b4e27b9edf7ac75008df6663dca3609", "commitAfterChange": "db94ada762c25cbafb7604978ccc4fc3df281550", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private static void setLogDir(StringBuffer buffer)", "signatureAfterChange": "  private static void setLogDir(StringBuffer buffer) throws CoreException", "diff": ["-private static void setLogDir(StringBuffer buffer) {", "+private static void setLogDir(StringBuffer buffer) throws CoreException {", "+//\tIWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();", "+//\tIProject project = root.getProject(\"Bugs\");", "+//\tIFolder rootFolder = project.getFolder(\"Formatter\");", "+//\tIFolder folder = rootFolder.getFolder(ECLIPSE_VERSION);", "+//\tif (!folder.exists()) folder.create(true, true, null);", "+\t\tlogDir = new File(logDir, PATCH_VERSION);", "+//\t\tfolder = folder.getFolder(\"tests\");", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(PATCH_BUG);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(PATCH_VERSION);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(\"HEAD\");", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(ECLIPSE_MILESTONE);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(JDT_CORE_VERSION);", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\tfolder = folder.getFolder(\"profiles\");", "+//\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(\"join_lines\");", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(JOIN_LINES);", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(\"no_comments\");", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(\"braces\");", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "+//\t\t\tfolder = folder.getFolder(BRACES);", "+//\t\t\tif (!folder.exists()) folder.create(true, true, null);", "-\tString logFileName = INPUT_DIR.getName().replaceAll(\"\\\\.\", \"\")+\".txt\";", "+\tString filePrefix = INPUT_DIR.getName().replaceAll(\"\\\\.\", \"\");", "+\tString logFileName = filePrefix+\".txt\";", "+\tif (LOG_FILE.exists()) {", "+\t\tFile saveDir = new File(logDir, \"save\");", "+\t\tsaveDir.mkdir();", "+\t\tint i=0;", "+\t\twhile (true) {", "+\t\t\tString newFileName = filePrefix+\"_\";", "+\t\t\tif (i<10) newFileName += \"0\";", "+\t\t\tnewFileName += i+\".txt\";", "+\t\t\tFile renamedFile = new File(saveDir, newFileName);", "+\t\t\tif (LOG_FILE.renameTo(renamedFile)) break;", "+\t\t\ti++;", "+\t\t}", "+\t}", "+//\tLOG_RESOURCE = folder.getFile(logFileName);", "+//\tbuffer.append(LOG_RESOURCE.getFullPath());", "-\t\tif (LOG_FILE.exists()) {", "-\t\t\tUtil.delete(LOG_FILE);", "-\t\t}", "+\t\tLOG_STREAM.flush();", "+//\tif (LOG_RESOURCE.exists()) {", "+//\t\tUtil.delete(LOG_RESOURCE);", "+//\t}", "+//\tLOG_BUFFER = new StringBuffer();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f8a5d713dce6cd329ba45d42955e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "5978fb5add266a6b89021d9e3d0424d77fb0f8da", "commitAfterChange": "108542969a1d7f14803221b232d5a5fa98603735", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprivate void handleCoreException(CoreException e)", "signatureAfterChange": " \tprivate void handleCoreException(CoreException e)", "diff": ["+\t\tIStatus status = e.getStatus();", "+\t\tString message = e.getMessage();", "+\t\tif (status.isMultiStatus()) {", "+\t\t\tMultiStatus multiStatus = (MultiStatus) status;", "+\t\t\tIStatus[] children = multiStatus.getChildren();", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tfor (int i = 0, max = children.length; i < max; i++) {", "+\t\t\t\tIStatus child = children[i];", "+\t\t\t\tif (child != null) {", "+\t\t\t\t\tbuffer.append(child.getMessage());", "+\t\t\t\t\tbuffer.append(System.getProperty(\"line.separator\"));//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tmessage = String.valueOf(buffer);", "+\t\t}", "-\t\t\t\"Core exception in testing environment: \" + e.getMessage()); //$NON-NLS-1$", "+\t\t\t\"Core exception in testing environment: \" + message); //$NON-NLS-1$"]}], "num": 12257}