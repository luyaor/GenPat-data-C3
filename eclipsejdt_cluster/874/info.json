{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2fed56fefb392cc32382ffe578e67fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "475e75c10d8984401c9e92df687f72c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "daafb287dc48fb6dcee0d71671e3685e81e9b8c7", "commitAfterChange": "38626b9db6f4c23d6e28ba50c8dfcdc942780467", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tboolean returnResolutionInProgress) \t\tthrows JavaModelException", "diff": ["-\t\tboolean generateMarkerOnError)", "+\t\tboolean generateMarkerOnError,", "+\t\tboolean returnResolutionInProgress)", "-\t\t\t\tif (infoPath != null) return infoPath;", "+\t\t\t\tif (infoPath != null && (returnResolutionInProgress || infoPath != RESOLUTION_IN_PROGRESS)) {", "+\t\t\t\t\treturn infoPath;", "+\t\t\t\t}", "-\t\tIClasspathEntry[] resolvedPath = getResolvedClasspath(", "-\t\t\tgetRawClasspath(generateMarkerOnError, !generateMarkerOnError), ", "-\t\t\tgenerateMarkerOnError ? getOutputLocation() : null, ", "-\t\t\tignoreUnresolvedEntry, ", "-\t\t\tgenerateMarkerOnError,", "-\t\t\treverseMap);", "+\t\tIClasspathEntry[] resolvedPath = null;", "+\t\tboolean nullOldResolvedCP = perProjectInfo != null && perProjectInfo.resolvedClasspath == null;", "+\t\ttry {", "+\t\t\t// protect against misbehaving clients (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=61040)", "+\t\t\tif (nullOldResolvedCP) perProjectInfo.resolvedClasspath = RESOLUTION_IN_PROGRESS;", "+\t\t\tresolvedPath = getResolvedClasspath(", "+\t\t\t\tgetRawClasspath(generateMarkerOnError, !generateMarkerOnError), ", "+\t\t\t\tgenerateMarkerOnError ? getOutputLocation() : null, ", "+\t\t\t\tignoreUnresolvedEntry, ", "+\t\t\t\tgenerateMarkerOnError,", "+\t\t\t\treverseMap);", "+\t\t} finally {", "+\t\t\tif (nullOldResolvedCP) perProjectInfo.resolvedClasspath = null;", "+\t\t}", "-\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81778f5afdb5f6ed1217784079569d23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void attachSource(IPath sourcePath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void attachSource(IPath sourcePath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tif (!(storedSourcePath.equals(sourcePath) && rootPath.equals(storedRootPath))) {", "+\t\t\t\tif (!(storedSourcePath.equals(sourcePath) && (rootPath != null && rootPath.equals(storedRootPath)) || storedRootPath == null)) {", "-\t\t\t\trootPath.toOSString(), ", "+\t\t\t\trootPath == null ? null : rootPath.toOSString(), ", "+\t\t\tif (rootPath == null && mapper.rootPath != null) {", "+\t\t\t\t// as a side effect of calling the SourceMapper constructor, the root path was computed", "+\t\t\t\trootPath = new Path(mapper.rootPath);", "+\t\t\t}", "-\t\t\tsetSourceAttachmentProperty(sourcePath.toString() + ATTACHMENT_PROPERTY_DELIMITER + rootPath.toString());", "+\t\t\tsetSourceAttachmentProperty(", "+\t\t\t\tsourcePath.toString() ", "+\t\t\t\t+ (rootPath == null ? \"\" : (ATTACHMENT_PROPERTY_DELIMITER + rootPath.toString()))); //$NON-NLS-1$", "+}"]}], "num": 874}