{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "303002ea9cb9562ade8f3de553a1decf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c39443d42597b5d70ba4dcc4163bbdb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "6781b5445d9813f939573ded9d37ee82c9dbbd15", "commitAfterChange": "6989e5bb4ed8f3be37ea69298930332629e9b475", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType)", "signatureAfterChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "diff": ["-\tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType) {", "+\tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType) {", "-\t\tif (argumentType != parameterType) {", "-\t\t\tif (argumentType.needsUncheckedConversion(parameterType)) {", "-//\t\t\tif (argumentType.isRawType() && (parameterType.isBoundParameterizedType() || parameterType.isGenericType())) {", "-\t\t\t\tscope.problemReporter().unsafeTypeConversion(argument, argumentType, parameterType);", "+\t\tTypeBinding checkedParameterType = originalParameterType == null ? parameterType : originalParameterType;", "+\t\tif (argumentType != checkedParameterType) {", "+\t\t\tif (argumentType.needsUncheckedConversion(checkedParameterType)) {", "+\t\t\t\tscope.problemReporter().unsafeTypeConversion(argument, argumentType, checkedParameterType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d627d8fff46bf5f62588ad6d974be388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "b1909bb0c4bbb70fecea5345c2e954fa4204b1dd", "commitAfterChange": "1ef42230a28632657bfac5df1d197b6d35dcc83d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "signatureAfterChange": " \tprivate static int checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "diff": ["-\tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType) {", "+\tprivate static int checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType) {", "-\t\t    \treturn true; // unsafeWildcardInvocation", "+\t\t    \treturn INVOCATION_ARGUMENT_WILDCARD;", "-\t\tif (argumentType != checkedParameterType) {", "-\t\t\tif (argumentType.needsUncheckedConversion(checkedParameterType)) {", "-\t\t\t\tscope.problemReporter().unsafeTypeConversion(argument, argumentType, checkedParameterType);", "-\t\t\t}", "+\t\tif (argumentType != checkedParameterType && argumentType.needsUncheckedConversion(checkedParameterType)) {", "+\t\t\tscope.problemReporter().unsafeTypeConversion(argument, argumentType, checkedParameterType);", "+\t\t\treturn INVOCATION_ARGUMENT_UNCHECKED;", "-\t\treturn false;", "+\t\treturn INVOCATION_ARGUMENT_OK;"]}], "num": 46121}