{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d12b9a3cb6b63891c635ed2fc8322e4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c849ca7d13fa1d924f6d689db8cd55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "6da1051d4f1d8e21b3b7542b130601f7eef250a3", "commitAfterChange": "a0bf175365121b2ce6109fd510a1295aae7ead4c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "signatureAfterChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\t\tif (valueRequired) {\r", "-\t\t\t\t\t\t\tcodeStream.iconst_0();\r", "-\t\t\t\t\t\t\tcodeStream.goto_(endifLabel = new Label(codeStream));\r", "-\t\t\t\t\t\t\tcodeStream.decrStackSize(1);\r", "-\t\t\t\t\t\t\tfalseLabel.place();\r", "-\t\t\t\t\t\t\tif (valueRequired)\r", "-\t\t\t\t\t\t\t\tcodeStream.iconst_1();\r", "-\t\t\t\t\t\t\tendifLabel.place();\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (falseLabel.hasForwardReferences()) {\r", "+\t\t\t\t\t\t\tif (valueRequired) {\r", "+\t\t\t\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\t\t\t\tcodeStream.goto_(endifLabel = new Label(codeStream));\r", "+\t\t\t\t\t\t\t\tcodeStream.decrStackSize(1);\r", "+\t\t\t\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\t\t\t\tif (valueRequired)\r", "+\t\t\t\t\t\t\t\t\tcodeStream.iconst_1();\r", "+\t\t\t\t\t\t\t\tendifLabel.place();\r", "+\t\t\t\t\t\t\t} else { // 6596: if (!(a && b)){} - must still place falseLabel\r", "+\t\t\t\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\t\t\t}\t\t\r", "+\t\t\t\t\t\t}\t\t\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f06a31563713078695542de583ba0af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "f974621a419c66d8827ce49e878f1ca626c0f5c2", "commitAfterChange": "9954abd4d176567719d3b52f38fdec66f578f045", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "signatureAfterChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\t\tif (falseLabel.hasForwardReferences()) {\r", "-\t\t\t\t\t\t\tif (valueRequired) {\r", "-\t\t\t\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\t\tif (valueRequired) {\r", "+\t\t\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\t\t\tif (falseLabel.hasForwardReferences()) {\r", "-\t\t\t\t\t\t\t\tif (valueRequired)\r", "-\t\t\t\t\t\t\t\t\tcodeStream.iconst_1();\r", "+\t\t\t\t\t\t\t\tcodeStream.iconst_1();\r", "-\t\t\t\t\t\t\t} else { // 6596: if (!(a && b)){} - must still place falseLabel\r", "-\t\t\t\t\t\t\t\tfalseLabel.place();\r", "-\t\t\t\t\t\t\t}\t\t\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t} else { // 6596: if (!(a && b)){} - must still place falseLabel\r", "+\t\t\t\t\t\t\tfalseLabel.place();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99a3e84f63e3af760ab3af689bde559b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "f5467ccbf9d5f2241ae993b8f25a994e438951ed", "commitAfterChange": "f1505ea73a4c385cc68bb3efc775c9981bdc8375", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t// generate the appropriate switch table", "+\t\t// generate the appropriate switch table/lookup bytecode", "-\t\t\t\tcodeStream.tableswitch(", "-\t\t\t\t\tdefaultLabel,", "-\t\t\t\t\tmin,", "-\t\t\t\t\tmax,", "-\t\t\t\t\tconstants,", "-\t\t\t\t\tsortedIndexes,", "-\t\t\t\t\tcaseLabels);", "+\t\t\t\t", "+\t\t\t\t// work-around 1.3 VM bug, if max>0x7FFF0000, must use lookup bytecode", "+\t\t\t\t// see http://dev.eclipse.org/bugs/show_bug.cgi?id=21557", "+\t\t\t\tif (max > 0x7FFF0000 && currentScope.environment().options.complianceLevel < CompilerOptions.JDK1_4) {", "+\t\t\t\t\tcodeStream.lookupswitch(defaultLabel, constants, sortedIndexes, caseLabels);", "+", "+\t\t\t\t} else {", "+\t\t\t\t\tcodeStream.tableswitch(", "+\t\t\t\t\t\tdefaultLabel,", "+\t\t\t\t\t\tmin,", "+\t\t\t\t\t\tmax,", "+\t\t\t\t\t\tconstants,", "+\t\t\t\t\t\tsortedIndexes,", "+\t\t\t\t\t\tcaseLabels);", "+\t\t\t\t}", "+\t\t"]}], "num": 19639}