{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d151d2ef4669abb41101d6d563bf9be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da0530bf7d70b9e91eba3fb4aff3b2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "commitAfterChange": "8bbacffbe712e7ac5a5d22a44809b44ff8a5e616", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic static void setOptions(Hashtable newOptions)", "signatureAfterChange": " \tpublic static void setOptions(Hashtable newOptions)", "diff": ["-\t\t// Backward compatibility", "+\t\t/* Test OPTION_DocCommentSupport", "-\t\t\t// bug 45112", "-\t\t\tif (CompilerOptions.OPTION_ReportInvalidAnnotation.equals(propertyName)) {", "-\t\t\t\tpreferences.setToDefault(OLD_COMPILER_PB_INVALID_ANNOTATION);", "+\t\t\t// set same value than missing javadoc comments overriding", "+\t\t\tif (CompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding.equals(propertyName)) {", "+\t\t\t\tpreferences.setValue(COMPILER_DOC_COMMENT_SUPPORT, preferences.getString(propertyName));", "-\t\t\telse if (CompilerOptions.OPTION_ReportMissingAnnotation.equals(propertyName)) {", "-\t\t\t\tpreferences.setToDefault(OLD_COMPILER_PB_MISSING_ANNOTATION);", "-\t\t\t}", "-\t\t\t// end bug 45112", "-\t\t\t// bug 46854", "-\t\t\telse if (CompilerOptions.OPTION_ReportMissingJavadoc.equals(propertyName)) {", "-\t\t\t\tpreferences.setToDefault(OLD_COMPILER_PB_MISSING_JAVADOC);", "-\t\t\t}", "-\t\t\t// end bug 46854", "+\t\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7114b1bbfe12d45fee62025f8a986f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "commitAfterChange": "8bbacffbe712e7ac5a5d22a44809b44ff8a5e616", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t// Backward compatibility", "+\t\t/* Test OPTION_DocCommentSupport", "-\t\t\t// bug 45112", "-\t\t\tif (CompilerOptions.OPTION_ReportInvalidAnnotation.equals(propertyName)) {", "-\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION);", "+\t\t\t// set same value than missing javadoc comments overriding", "+\t\t\tif (CompilerOptions.OPTION_ReportMissingJavadocCommentsOverriding.equals(propertyName)) {", "+\t\t\t\tpreferences.setValue(JavaCore.COMPILER_DOC_COMMENT_SUPPORT, preferences.getString(propertyName));", "-\t\t\telse if (CompilerOptions.OPTION_ReportMissingAnnotation.equals(propertyName)) {", "-\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION);", "-\t\t\t}", "-\t\t\t// end bug 45112", "-\t\t\t// bug 46854", "-\t\t\telse if (CompilerOptions.OPTION_ReportMissingJavadoc.equals(propertyName)) {", "-\t\t\t\tpreferences.setToDefault(JavaCore.OLD_COMPILER_PB_MISSING_JAVADOC);", "-\t\t\t}", "-\t\t\t// end bug 46854", "+\t\t*/"]}], "num": 54651}