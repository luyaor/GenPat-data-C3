{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f2951f55cd05db2ce08d5a0182cf0d9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cfa21f21f0e9dfd30e19211da7c4d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "c775c1d0f23881553fb0e260a70314c10cea2026", "commitAfterChange": "05b6d0de9346f14e62c144050801c846baf33bc9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "diff": ["-\t\tReferenceBinding currentType = invocationType;", "-\t\tReferenceBinding declaringClass = enclosingType(); // protected types always have an enclosing one", "+\t\tTypeBinding currentType = invocationType.erasure();", "+\t\tTypeBinding declaringClass = enclosingType().erasure(); // protected types always have an enclosing one"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bda22b5192bfa8a19f2a218e53824fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "1fb602b75e740fee79145d5e2e5fdf04a9fb5ee8", "commitAfterChange": "e0c65d48fbfbc2b240962f72967bed335ff04a38", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "signatureAfterChange": " public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "diff": ["-\tReferenceBinding declaringClass = enclosingType() == null ? this : enclosingType();", "+\tTypeBinding originalDeclaringClass = (enclosingType() == null ? this : enclosingType()).original();", "-\t\tif (declaringClass == currentType) return true;", "+\t\tif (originalDeclaringClass == currentType.original()) return true;"]}], "num": 5964}