{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f8e74aa38eb765529cf63c633c1cb9a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4909bff806ff0b1e91826a052b8e5a84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b64d1790a5f1d194b864b70767eab7f336d609e0", "commitAfterChange": "13917151fd6e90489d7ba2ed9db47ea52955dbf3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addAffectedChild(JavaElementDelta child)", "signatureAfterChange": "\r protected void addAffectedChild(JavaElementDelta child)", "diff": ["-\tIJavaElementDelta sameChild = null;\r", "+\tIJavaElementDelta existingChild = null;\r", "+\tint existingChildIndex = -1;\r", "-\t\t\t\tsameChild = fAffectedChildren[i];\r", "+\t\t\t\texistingChild = fAffectedChildren[i];\r", "+\t\t\t\texistingChildIndex = i;\r", "-\tif (sameChild == null) { //new affected child\r", "-\r", "+\tif (existingChild == null) { //new affected child\r", "-\t\tIJavaElementDelta[] children = child.getAffectedChildren();\r", "-\t\tfor (int i = 0; i < children.length; i++) {\r", "-\t\t\tJavaElementDelta childsChild = (JavaElementDelta) children[i];\r", "-\t\t\t((JavaElementDelta) sameChild).addAffectedChild(childsChild);\r", "+\t\tswitch (existingChild.getKind()) {\r", "+\t\t\tcase ADDED:\r", "+\t\t\t\tswitch (child.getKind()) {\r", "+\t\t\t\t\tcase ADDED: // child was added then added -> it is added\r", "+\t\t\t\t\tcase CHANGED: // child was added then changed -> it is added\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase REMOVED: // child was added then removed -> noop\r", "+\t\t\t\t\t\tfAffectedChildren = this.removeAndShrinkArray(fAffectedChildren, existingChildIndex);\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase REMOVED:\r", "+\t\t\t\tswitch (child.getKind()) {\r", "+\t\t\t\t\tcase ADDED: // child was removed then added -> it is changed\r", "+\t\t\t\t\t\tchild.fKind = CHANGED;\r", "+\t\t\t\t\t\tfAffectedChildren[existingChildIndex] = child;\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase CHANGED: // child was removed then changed -> it is removed\r", "+\t\t\t\t\tcase REMOVED: // child was removed then removed -> it is removed\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase CHANGED:\r", "+\t\t\t\tswitch (child.getKind()) {\r", "+\t\t\t\t\tcase ADDED: // child was changed then added -> it is added\r", "+\t\t\t\t\tcase REMOVED: // child was changed then removed -> it is removed\r", "+\t\t\t\t\t\tfAffectedChildren[existingChildIndex] = child;\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase CHANGED: // child was changed then changed -> it is changed\r", "+\t\t\t\t\t\tIJavaElementDelta[] children = child.getAffectedChildren();\r", "+\t\t\t\t\t\tfor (int i = 0; i < children.length; i++) {\r", "+\t\t\t\t\t\t\tJavaElementDelta childsChild = (JavaElementDelta) children[i];\r", "+\t\t\t\t\t\t\t((JavaElementDelta) existingChild).addAffectedChild(childsChild);\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f61e2f82d9333976974bb9ab843178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "65444f6bbda189372ebbf90cb8f83272733c23ae", "commitAfterChange": "82197baae0367830baca5c640478373ab5a7a62f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems)", "signatureAfterChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems)", "diff": ["+\t\t\tint id = problem.getID();\r", "+\t\t\tswitch (id) {\r", "+\t\t\t\tcase ProblemIrritants.SuperclassMustBeAClass :\r", "+\t\t\t\tcase ProblemIrritants.SuperInterfaceMustBeAnInterface :\r", "+\t\t\t\tcase ProblemIrritants.HierarchyCircularitySelfReference :\r", "+\t\t\t\tcase ProblemIrritants.HierarchyCircularity :\r", "+\t\t\t\tcase ProblemIrritants.HierarchyHasProblems :\r", "+\t\t\t\tcase ProblemIrritants.InvalidSuperclassBase :\r", "+\t\t\t\tcase ProblemIrritants.InvalidSuperclassBase + 1 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidSuperclassBase + 2 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidSuperclassBase + 3 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidSuperclassBase + 4 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidInterfaceBase :\r", "+\t\t\t\tcase ProblemIrritants.InvalidInterfaceBase + 1 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidInterfaceBase + 2 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidInterfaceBase + 3 :\r", "+\t\t\t\tcase ProblemIrritants.InvalidInterfaceBase + 4 :\r", "+\t\t\t\t\t// ensure that this file is always retrieved from source for the rest of the build\r", "+\t\t\t\t\tString fileLocation = resource.getLocation().toString();\r", "+\t\t\t\t\tif (!problemTypeLocations.contains(fileLocation))\r", "+\t\t\t\t\t\tproblemTypeLocations.add(fileLocation);\r", "+\t\t\t}\r", "+\r", "-\t\t\t\t\tnew Integer(problem.getID()),\r", "+\t\t\t\t\tnew Integer(id),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1e72ae7772078077fafc24c7f0044b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "644852dd87f43f0af4108905e62d50729f9b044b", "commitAfterChange": "520c83ffe744bff7033f38d9dae19a34f622d060", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic static Constant fromValue(int value)", "signatureAfterChange": "  \tpublic static Constant fromValue(int value)", "diff": ["+\t\tswitch (value) {", "+\t\t\tcase -4 : return IntConstant.MINUS_FOUR;", "+\t\t\tcase -3 : return IntConstant.MINUS_THREE;", "+\t\t\tcase -2 : return IntConstant.MINUS_TWO;", "+\t\t\tcase -1 : return IntConstant.MINUS_ONE;", "+\t\t\tcase 0 : return IntConstant.ZERO;", "+\t\t\tcase 1 : return IntConstant.ONE;", "+\t\t\tcase 2 : return IntConstant.TWO;", "+\t\t\tcase 3 : return IntConstant.THREE;", "+\t\t\tcase 4 : return IntConstant.FOUR;", "+\t\t\tcase 5 : return IntConstant.FIVE;", "+\t\t\tcase 6 : return IntConstant.SIX;", "+\t\t\tcase 7 : return IntConstant.SEVEN;", "+\t\t\tcase 8 : return IntConstant.EIGHT;", "+\t\t\tcase 9 : return IntConstant.NINE;", "+\t\t\tcase 10 : return IntConstant.TEN;", "+\t\t}"]}], "num": 26076}