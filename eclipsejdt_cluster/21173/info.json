{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0bdcc33565e6b07434dbd668b48473c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd8e87c453c68aaa11923014ced1265", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "589528097d9e55f2c9b149940adf643197d6126d", "commitAfterChange": "f940793ad6a8d5d0b9d6787ffa3657f56433791f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate int generateBootstrapMethods(List functionalExpressionList)", "signatureAfterChange": "  \tprivate int generateBootstrapMethods(List functionalExpressionList)", "diff": ["-\t\t\t", "+\t\t\tMethodBinding [] bridges = functional.getRequiredBridges();", "-\t\t\t\t   \t((LambdaExpression)functional).isSerializable)) {", "+\t\t\t\t   \t((LambdaExpression)functional).isSerializable) ||", "+\t\t\t\t   \tbridges != null) {", "+\t\t\t\t}", "+\t\t\t\tif (bridges != null) {", "+\t\t\t\t\t// 2 for bridge count then 2 per bridge method type.", "+\t\t\t\t\textraSpace += (2 + 2 * bridges.length);", "-\t\t\t\tthis.contents[localContentsOffset++] = (byte) (4+(markerInterfaces==null?0:1+markerInterfaces.length));", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (4 + (markerInterfaces==null?0:1+markerInterfaces.length) + ", "+\t\t\t\t\t\t                                                   (bridges == null ? 0 : 1 + bridges.length));", "-\t\t\t\t// Does this block have to deal with FLAG_BRIDGE? When is it needed?", "+\t\t\t\t}", "+\t\t\t\tif (bridges != null) {", "+\t\t\t\t\tbitflags |= ClassFileConstants.FLAG_BRIDGES;", "+\t\t\t\tif (bridges != null) {", "+\t\t\t\t\tint bridgeCountIndex =  this.constantPool.literalIndex(bridges.length);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (bridgeCountIndex >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (bridgeCountIndex);", "+\t\t\t\t\tfor (int m = 0, maxm = bridges.length; m < maxm; m++) {", "+\t\t\t\t\t\tchar [] bridgeSignature = bridges[m].signature();", "+\t\t\t\t\t\tint bridgeMethodTypeIndex = this.constantPool.literalIndexForMethodType(bridgeSignature);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (bridgeMethodTypeIndex >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) bridgeMethodTypeIndex;", "+\t\t\t\t\t}\t\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f63324820208d7b066d07494a61eb4be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "b95e061ee40787fda0df77e85aee18cd53fbb401", "commitAfterChange": "b0470296808cbf41396e5dad6ff9310bac8441af", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding)", "signatureAfterChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding, AnnotationMethodDeclaration declaration)", "diff": ["-", "-\tpublic int generateMethodInfoAttribute(MethodBinding methodBinding) {", "-\t\treturn generateMethodInfoAttribute(methodBinding, false);", "-\t}"]}], "num": 21173}