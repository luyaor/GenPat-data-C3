{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c829976c8990303eb6b619002e34502b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c1fc5bdbb54594efcf7df66077a184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "e0e6245d2f5b446cd8eba278aee2ec57c56c32e6", "commitAfterChange": "b42787861f816a2d5e1ca0d96a18df1cf4233d07", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tchar[] source, \t\tchar[][] packageName, \t\tString unitName, \t\tIJavaProject javaProject, \t\tIAbstractSyntaxTreeVisitor visitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration resolve( \t\tICompilationUnit unitElement, \t\tNodeSearcher nodeSearcher) \t\tthrows JavaModelException", "diff": ["+", "+\tpublic static CompilationUnitDeclaration resolve(", "+\t\tICompilationUnit unitElement,", "+\t\tNodeSearcher nodeSearcher)", "+\t\tthrows JavaModelException {", "+", "+\t\tCompilationUnitDeclaration unit = null;", "+\t\ttry {", "+\t\t\tchar[] fileName = unitElement.getElementName().toCharArray();", "+\t\t\tIJavaProject project = unitElement.getJavaProject();", "+\t\t\tCompilationUnitResolver compilationUnitVisitor =", "+\t\t\t\tnew CompilationUnitResolver(", "+\t\t\t\t\tgetNameEnvironment(unitElement),", "+\t\t\t\t\tgetHandlingPolicy(),", "+\t\t\t\t\tproject.getOptions(true),", "+\t\t\t\t\tgetRequestor(),", "+\t\t\t\t\tnew DefaultProblemFactory());", "+\t", "+\t\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);", "+\t", "+\t\t\tIPackageFragment packageFragment = (IPackageFragment)unitElement.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "+\t\t\tchar[][] expectedPackageName = null;", "+\t\t\tif (packageFragment != null){", "+\t\t\t\texpectedPackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\t\t}", "+\t\t", "+\t\t\tunit = compilationUnitVisitor.resolve(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tunitElement.getSource().toCharArray(),", "+\t\t\t\t\texpectedPackageName,", "+\t\t\t\t\tnew String(fileName),", "+\t\t\t\t\tencoding),", "+\t\t\t\tnodeSearcher,", "+\t\t\t\ttrue, // method verification", "+\t\t\t\ttrue, // analyze code", "+\t\t\t\ttrue); // generate code", "-\t\tIJavaProject javaProject,", "-\t\tIAbstractSyntaxTreeVisitor visitor)", "-\t\t\t\t\ttrue); // generate code", "-\t\t\treportProblems(unit, visitor);\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f144dbde725c94f390f0f2313e43ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "9d28ff91378f9bfbe6756ae0331a10fbb52d3dba", "commitAfterChange": "9474d2cdea35a8b31f8fe2828fe199dbf7f1cf71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException", "signatureAfterChange": " \tprivate String processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException", "diff": ["-\tprivate void processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException {", "-\t\tsubTask(\"Sort \" + unit.getElementName()); //$NON-NLS-1$", "+\tprivate String processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) throws JavaModelException {", "-\t\tIPackageFragment packageFragment = (IPackageFragment)unit.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "-\t\tchar[][] expectedPackageName = null;", "-\t\tif (packageFragment != null){", "-\t\t\texpectedPackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\tif (unit.exists()) {", "+\t\t\tIPackageFragment packageFragment = (IPackageFragment)unit.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "+\t\t\tchar[][] expectedPackageName = null;", "+\t\t\tif (packageFragment != null){", "+\t\t\t\texpectedPackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\t\t}", "+\t\t\tparser.parseCompilationUnit(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tsource,", "+\t\t\t\t\texpectedPackageName,", "+\t\t\t\t\tunit.getElementName(),", "+\t\t\t\t\tnull),", "+\t\t\t\tfalse);", "+\t\t} else {", "+\t\t\tparser.parseCompilationUnit(", "+\t\t\t\tnew BasicCompilationUnit(", "+\t\t\t\t\tsource,", "+\t\t\t\t\tnull,", "+\t\t\t\t\t\"\",//$NON-NLS-1$", "+\t\t\t\t\tnull),", "+\t\t\t\tfalse);", "-\t\tparser.parseCompilationUnit(", "-\t\t\tnew BasicCompilationUnit(", "-\t\t\t\tsource,", "-\t\t\t\texpectedPackageName,", "-\t\t\t\tunit.getElementName(),", "-\t\t\t\tunit.getJavaProject().getOption(JavaCore.CORE_ENCODING, true)),", "-\t\t\tfalse);", "-\t\tString result = builder.getSource();", "-\t\tthis.hasChanged = !CharOperation.equals(result.toCharArray(), source);", "-\t\tif (this.hasChanged) {", "-\t\t\tunit.getBuffer().setContents(result);", "-\t\t}", "+\t\treturn builder.getSource();"]}], "num": 42291}