{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "169d940aeb3303c02c7dafa0b9528aca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5168e9710b25d9520438867e86c5679", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "3861d4cfff200f4a20f9b2846cf8819b2fe85539", "commitAfterChange": "1ab7b833f2e8fe1eaa17a4c72f8b9580f4ae1592", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tprotected void search(IJavaElement element, int limitTo, boolean rawMatch, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "signatureAfterChange": " \tprotected void search(IJavaElement element, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "diff": ["-\tprotected void search(IJavaElement element, int limitTo, boolean rawMatch, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException {", "-\t\tint matchRule = SearchPattern.R_EXACT_MATCH|SearchPattern.R_CASE_SENSITIVE;", "-\t\tif (rawMatch) matchRule |= SearchPattern.R_ERASURE_MATCH;", "+\tprotected void search(IJavaElement element, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef851ee14f09620bbb46ff08944a0bfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "460abf470b71772c6f8d4a0fe1b345129a0a6a80", "commitAfterChange": "f1ecb4b2d8ea593a495f1608bdd4d8fccb10a732", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, ASTNode node, CodeSnippetParsingUtil codeSnippetParsingUtil)", "signatureAfterChange": " \t \tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, CompilationUnit compilationUnit, ASTNode node, RecordedParsingInformation recordedParsingInformation)", "diff": ["-\t", "-\tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, ASTNode node, CodeSnippetParsingUtil codeSnippetParsingUtil) {", "-\t\t// TODO record the comments information", "-\t\tCompilationUnit compilationUnit = ast.newCompilationUnit();", "-\t\tRecordedParsingInformation recordedParsingInformation = codeSnippetParsingUtil.recordedParsingInformation;", "+\tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, CompilationUnit compilationUnit, ASTNode node, RecordedParsingInformation recordedParsingInformation) {", "-\t\tcompilationUnit.setLineEndTable(recordedParsingInformation.lineEnds);"]}], "num": 1495}