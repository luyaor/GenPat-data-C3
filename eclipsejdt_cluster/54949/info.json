{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bf70e67c713fb40a1a099e5104c384a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095c54510ea812d5ea3052c189e404c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 16, "signatureBeforeChange": " private int putInCache(final char[] key1, final char[] key2, final char[] key3, int index)", "signatureAfterChange": " private int putInCacheIfAbsent(final char[] key1, final char[] key2, final char[] key3, int value)", "diff": ["-private int putInCache(final char[] key1, final char[] key2, final char[] key3, int index) {", "-\tHashtableOfObject value = (HashtableOfObject) this.methodsAndFieldsCache.get(key1);", "-\tif (value == null) {", "-\t\tvalue = new HashtableOfObject();", "-\t\tthis.methodsAndFieldsCache.put(key1, value);", "+private int putInCacheIfAbsent(final char[] key1, final char[] key2, final char[] key3, int value) {", "+\tint index;", "+\tHashtableOfObject key1Value = (HashtableOfObject) this.methodsAndFieldsCache.get(key1);", "+\tif (key1Value == null) {", "+\t\tkey1Value = new HashtableOfObject();", "+\t\tthis.methodsAndFieldsCache.put(key1, key1Value);", "-\t\tcharArrayCache.put(key3, index);", "-\t\tvalue.put(key2, charArrayCache);", "+\t\tindex = charArrayCache.putIfAbsent(key3, value);", "+\t\tkey1Value.put(key2, charArrayCache);", "-\t\tCharArrayCache charArrayCache = (CharArrayCache) value.get(key2);", "+\t\tCharArrayCache charArrayCache = (CharArrayCache) key1Value.get(key2);", "-\t\t\tcharArrayCache.put(key3, index);", "-\t\t\tvalue.put(key2, charArrayCache);", "+\t\t\tindex = charArrayCache.putIfAbsent(key3, value);", "+\t\t\tkey1Value.put(key2, charArrayCache);", "-\t\t\tcharArrayCache.put(key3, index);\t\t\t", "+\t\t\tindex = charArrayCache.putIfAbsent(key3, value);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c3008df6b051e36fa28fe48e016dc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 15, "signatureBeforeChange": " private int putInNameAndTypeCache(final char[] key1, final char[] key2, int index)", "signatureAfterChange": " private int putInNameAndTypeCacheIfAbsent(final char[] key1, final char[] key2, int value)", "diff": ["-}", "-private int putInNameAndTypeCache(final char[] key1, final char[] key2, int index) {", "-\tCharArrayCache value = (CharArrayCache) this.nameAndTypeCacheForFieldsAndMethods.get(key1);", "-\tif (value == null) {", "+private int putInNameAndTypeCacheIfAbsent(final char[] key1, final char[] key2, int value) {", "+\tint index ;", "+\tCharArrayCache key1Value = (CharArrayCache) this.nameAndTypeCacheForFieldsAndMethods.get(key1);", "+\tif (key1Value == null) {", "-\t\tcharArrayCache.put(key2, index);", "+\t\tindex = charArrayCache.putIfAbsent(key2, value);", "-\t\tvalue.put(key2, index);", "+\t\tindex = key1Value.putIfAbsent(key2, value);"]}], "num": 54949}