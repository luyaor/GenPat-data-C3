{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c5a6e6ef9ad494a8d0e494f2fdbe671", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810ac5fb1d6b75567fadbdd118646701", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "073d778f58604c4e46ed93a6215b37e16c63307d", "commitAfterChange": "7a161d7f24784c6f26a3e04f2476eedb781db89c", "methodNumberBeforeChange": 1226, "methodNumberAfterChange": 1226, "signatureBeforeChange": " public void test1198()", "signatureAfterChange": " public void test1198()", "diff": ["-//https://bugs.eclipse.org/bugs/show_bug.cgi?id=121024", "+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=121024 - variation", "-\t\t\t\"    static <L extends ErrorListener & Listener> Object createParser(L l) {\\n\" + ", "+\t\t\t\"    static <L extends Object & Listener & ErrorListener> Object createParser(L l) {\\n\" + ", "+\t\t\t\"    \tSystem.out.println(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"      return null;\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    public static void main(String[] args) {\\n\" + ", "+\t\t\t\"      class A implements Listener, ErrorListener {\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"      createParser(new A()); // error here\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"}\\n\", // =================", "+\t\t},", "+\t\t\"SUCCESS\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a9176623ba443ae5a3642736cb265e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test010a()", "signatureAfterChange": " public void test010a()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\tstatic <L1 extends Listener & ErrorListener> Object createParser(L1 l) { return null; }\\n\" +", "-\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Method createParser(L1) has the same erasure createParser(X.Listener) as another method in type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 5)\\n\" +", "-\t\t\"\tstatic <L2 extends ErrorListener & Listener> Object createParser(L2 l) { return null; }\\n\" +", "-\t\t\"\t                                                    ^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Method createParser(L2) has the same erasure createParser(X.ErrorListener) as another method in type X\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tcreateParser(new A());\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^\\n\" + ", "+\t\t\"The method createParser(A) is ambiguous for the type X\\n\" + ", "+// javac 7 randomly picks which ever method is second"]}], "num": 26823}