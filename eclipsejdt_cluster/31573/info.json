{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e613051b914528546f44142a5e92e12d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e96b56a749525fc3af932a0bf3d528", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "06b4da04864008da88066d5a5e945f628c432313", "commitAfterChange": "6cb1a46319677820636b0fbe76d096b92fe1835a", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "   \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": "   \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-\t\tif (isAllInsert || isAllRemove) {", "+\t\tString keyword= Util.EMPTY_STRING;", "+\t\tif (property == SingleVariableDeclaration.VARARGS_ANNOTATIONS_PROPERTY) {", "+\t\t\tkeyword= \" \"; //$NON-NLS-1$", "+\t\t} else if (isAllInsert || isAllRemove) {", "-\t\tif (property == SingleVariableDeclaration.MODIFIERS2_PROPERTY)", "+\t\tif (property == SingleVariableDeclaration.MODIFIERS2_PROPERTY || property == SingleVariableDeclaration.VARARGS_ANNOTATIONS_PROPERTY)", "-\t\tint endPos= new ModifierRewriter(formatterPrefix).rewriteList(node, property, pos, Util.EMPTY_STRING, \" \"); //$NON-NLS-1$ ", "+\t\tint endPos= new ModifierRewriter(formatterPrefix).rewriteList(node, property, pos, keyword, \" \"); //$NON-NLS-1$ ", "-", "-\t\t\tboolean lastUnchanged= children[children.length - 1].getChangeKind() != RewriteEvent.UNCHANGED;", "+\t\t\tRewriteEvent lastChild = children[children.length - 1];", "+\t\t\tboolean lastUnchanged= lastChild.getChangeKind() != RewriteEvent.UNCHANGED;", "-\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(lastChild));", "-\t\t\t} else if (isAllInsert || (nextPos == endPos && lastUnchanged)) { // see bug 165654", "-\t\t\t\tRewriteEvent lastChild= children[children.length - 1];", "+\t\t\t} else if ((isAllInsert || (nextPos == endPos && lastUnchanged)) // see bug 165654", "+\t\t\t\t\t&& property != SingleVariableDeclaration.VARARGS_ANNOTATIONS_PROPERTY) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "467a3375f9c7c8cf2a88b96d33cf8d4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "06b4da04864008da88066d5a5e945f628c432313", "commitAfterChange": "6cb1a46319677820636b0fbe76d096b92fe1835a", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \t \tprivate int rewriteTypeAnnotations(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": " \t \tprivate int rewriteTypeAnnotations(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-\t\tRewriteEvent event = getEvent(node, property);", "-\t\tif (event == null || event.getChangeKind() == RewriteEvent.UNCHANGED) {", "-\t\t\treturn doVisit(node, property, pos);", "-\t\t}", "-\t\tRewriteEvent[] children = event.getChildren();", "-\t\tboolean isAllInsert = isAllOfKind(children, RewriteEvent.INSERTED);", "-\t\tboolean isAllRemove = isAllOfKind(children, RewriteEvent.REMOVED);", "-\t\tif (isAllInsert || isAllRemove) {", "-\t\t\ttry {", "-\t\t\t\tpos = getScanner().getNextStartOffset(pos, false);", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\thandleException(e);", "-\t\t\t}", "-\t\t}", "- ", "-\t\tPrefix formatterPrefix = this.formatter.ANNOTATION_SEPARATION;", "- ", "-\t\tint endPos = new ModifierRewriter(formatterPrefix).rewriteList(node, property, pos, Util.EMPTY_STRING, \" \"); //$NON-NLS-1$ ", "- ", "-\t\ttry {", "-\t\t\tint nextPos = getScanner().getNextStartOffset(endPos, false);", "-\t\t\tRewriteEvent lastChild = children[children.length - 1];", "-\t\t\tboolean lastUnchanged = lastChild.getChangeKind() != RewriteEvent.UNCHANGED;", "- ", "-\t\t\tif (isAllRemove) {", "-\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(lastChild));", "-\t\t\t\treturn nextPos;", "-\t\t\t} else if (isAllInsert || (nextPos == endPos && lastUnchanged)) {", "-\t\t\t\tdoTextInsert(endPos, formatterPrefix.getPrefix(getIndent(pos)), getEditGroup(lastChild));", "-\t\t\t}", "-\t\t} catch (CoreException e) {", "-\t\t\thandleException(e);", "-\t\t}", "-\t\treturn endPos;", "+\t\treturn rewriteModifiers2(node, property, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af39d796275b3ecec43903a8a527b593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "44799a4312de29adda0739b7526827290ad954be", "commitAfterChange": "b9cb873d4449d2f10b10f7985e564b1f6bad691b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \t \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": " \t \t \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-", "-\t\tif (isAllInsert) {", "-\t\t\tRewriteEvent lastChild= children[children.length - 1];", "-\t\t\tString separator;", "-\t\t\tif (lastChild.getNewValue() instanceof Annotation) {", "-\t\t\t\tseparator= this.formatter.ANNOTATION_SEPARATION.getPrefix(getIndent(pos));", "-\t\t\t} else {", "-\t\t\t\tseparator= String.valueOf(' ');", "-\t\t\t}", "-\t\t\tdoTextInsert(endPos, separator, getEditGroup(lastChild));", "-\t\t} else if (isAllRemove) {", "-\t\t\ttry {", "-\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false); // to the next token", "+\t\t", "+\t\ttry {", "+\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "+\t\t\t", "+\t\t\tboolean lastUnchanged= children[children.length - 1].getChangeKind() != RewriteEvent.UNCHANGED;", "+\t\t\t", "+\t\t\tif (isAllRemove) {", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\thandleException(e);", "+\t\t\t} else if (isAllInsert || (nextPos == endPos && lastUnchanged)) { // see bug 165654", "+\t\t\t\tRewriteEvent lastChild= children[children.length - 1];", "+\t\t\t\tString separator;", "+\t\t\t\tif (lastChild.getNewValue() instanceof Annotation) {", "+\t\t\t\t\tseparator= this.formatter.ANNOTATION_SEPARATION.getPrefix(getIndent(pos));", "+\t\t\t\t} else {", "+\t\t\t\t\tseparator= String.valueOf(' ');", "+\t\t\t\t}", "+\t\t\t\tdoTextInsert(endPos, separator, getEditGroup(lastChild));", "+\t\t} catch (CoreException e) {", "+\t\t\thandleException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd632cdec6bff0d710b28e4c4eca73b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "5c0f68ddd1527675afe0c57b85dbce4648406e27", "commitAfterChange": "6eb00f6ee457a8f73a0eac0bfee00e20c1d881ff", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tprivate void rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "signatureAfterChange": " \t \tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos)", "diff": ["-\tprivate void rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos) {", "+\tprivate int rewriteModifiers2(ASTNode node, ChildListPropertyDescriptor property, int pos) {", "-\t\t\tdoVisit(node, property, pos);", "-\t\t\treturn;", "+\t\t\treturn doVisit(node, property, pos);", "-", "-\t\tint endPos= rewriteNodeList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tif (isAllOfKind(children, RewriteEvent.INSERTED)) {", "-\t\t\tdoTextInsert(endPos, \" \", getEditGroup(children[children.length - 1])); //$NON-NLS-1$", "-\t\t} else if (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\tboolean isAllInsert= isAllOfKind(children, RewriteEvent.INSERTED);", "+\t\tboolean isAllRemove= isAllOfKind(children, RewriteEvent.REMOVED);", "+\t\tif (isAllInsert || isAllRemove) {", "+\t\t\t// update pos", "-\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "-\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\tpos= getScanner().getNextStartOffset(pos, false);", "+\t\tint endPos= rewriteNodeList(node, property, pos, \"\", \" \"); //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\t\tif (isAllInsert) {", "+\t\t\tdoTextInsert(endPos, \" \", getEditGroup(children[children.length - 1])); //$NON-NLS-1$", "+\t\t} else if (isAllRemove) {", "+\t\t\ttry {", "+\t\t\t\tint nextPos= getScanner().getNextStartOffset(endPos, false);", "+\t\t\t\tdoTextRemove(endPos, nextPos - endPos, getEditGroup(children[children.length - 1]));", "+\t\t\t\treturn nextPos;", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\thandleException(e);", "+\t\t\t}", "+\t\t}", "+\t\treturn endPos;"]}], "num": 31573}