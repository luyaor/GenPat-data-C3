{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "635f6d10b12cd367cafdc437bced9f40", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5f4ac43af1fded67e074e417920389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "8913fe5c78a14de5e97c4d6b801f5ed8424bf8a8", "commitAfterChange": "1a3b48d65ad279de125b447111e271aa71010c38", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void testWildcardCapture3()", "signatureAfterChange": " \tpublic void testWildcardCapture3()", "diff": ["-\t\t\t\"Contradictory null annotations: method was inferred as \\'void getAdd(List<@NonNull @Nullable capture#of @Nullable ? extends X>)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): required \\'List<@NonNull capture#of ? extends X>\\' but this expression has type \\'List<@Nullable capture#of ? extends X>\\'\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61145d741001ed02ea106bd46c2657c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "fb0020e27808c429f3f311a11ef0ea9ea04441aa", "commitAfterChange": "29bba5ec8d05a9cd1832ad934d2530b41087b676", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic void testWildcardCapture3()", "signatureAfterChange": " \tpublic void testWildcardCapture3()", "diff": ["-\t\t\t\"Contradictory null annotations: method was inferred as \\'void getAdd(List<@NonNull @Nullable capture#>)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + ", "+\t\t\t\"Contradictory null annotations: method was inferred as \\'void getAdd(List<@NonNull @Nullable capture#of @Nullable ? extends X>)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + "]}], "num": 67251}