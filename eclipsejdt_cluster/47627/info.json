{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08da0d69cd3dbece952a85de4b22582e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c0bc0b1014fb7ac355e6c370ba7cc9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.expressionType = type.resolveType(scope);", "+\t\tthis.resolvedType = type.resolveType(scope);", "-\t\t\t\treturn this.expressionType;", "+\t\t\t\treturn this.resolvedType;", "-\t\tif (this.expressionType == null)", "+\t\tif (this.resolvedType == null)", "-\t\tif (!this.expressionType.canBeInstantiated()) {", "-\t\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "-\t\t\treturn this.expressionType;", "+\t\tif (!this.resolvedType.canBeInstantiated()) {", "+\t\t\tscope.problemReporter().cannotInstantiate(type, this.resolvedType);", "+\t\t\treturn this.resolvedType;", "-\t\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "+\t\tReferenceBinding allocatedType = (ReferenceBinding) this.resolvedType;", "-\t\t\treturn this.expressionType;", "+\t\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf84ccbfe1bb8c6b4a033759c75a5f96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tTypeBinding typeBinding = type.resolveType(scope);", "+\t\tthis.expressionType = type.resolveType(scope);", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\tif (typeBinding == null)", "+\t\tif (this.expressionType == null)", "-\t\tif (!typeBinding.canBeInstantiated()) {", "-\t\t\tscope.problemReporter().cannotInstantiate(type, typeBinding);", "-\t\t\treturn typeBinding;", "+\t\tif (!this.expressionType.canBeInstantiated()) {", "+\t\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "+\t\t\treturn this.expressionType;", "-\t\tReferenceBinding allocatedType = (ReferenceBinding) typeBinding;", "+\t\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;"]}], "num": 47627}