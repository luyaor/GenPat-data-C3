{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4885e4ca107acb5eeae4905881738222", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19b9b89e16fd0e4e0dbe093d09997e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "424b9c711eb8f066b325841662effb171f3ae4ef", "commitAfterChange": "4d19416746402b8fbbfd02c13772658da70a345a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots()\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getPackageFragmentRoots()\r \t\tthrows JavaModelException", "diff": ["-\t\tIPackageFragmentRoot[] children = getAllPackageFragmentRoots();\r", "-\t\tObjectVector directChildren = new ObjectVector();\r", "+\t\tObject[] children;\r", "+\t\tint length;\r", "+\t\tIPackageFragmentRoot[] roots;\r", "-\t\tfor (int i = 0; i < children.length; i++) {\r", "-\t\t\tIPackageFragmentRoot root = children[i];\r", "-\t\t\tIJavaProject proj = root.getJavaProject();\r", "-\t\t\tif (proj != null && proj.equals(this)) {\r", "-\t\t\t\tdirectChildren.add(root);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tchildren = new IPackageFragmentRoot[directChildren.size()];\r", "-\t\tdirectChildren.copyInto(children);\r", "-\t\treturn children;\r", "+\t\tSystem.arraycopy(\r", "+\t\t\tchildren = getChildren(), \r", "+\t\t\t0, \r", "+\t\t\troots = new IPackageFragmentRoot[length = children.length], \r", "+\t\t\t0, \r", "+\t\t\tlength);\r", "+\t\t\t\r", "+\t\treturn roots;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a60554155d5dcfd164b7a1b8d07026d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "7fcda725e57776ddb850f6e0923a37be77d4220a", "commitAfterChange": "a6e6bfb150ee78b02c696c163d3f66a811019e6b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "signatureAfterChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "diff": ["-\t\t\tIPackageFragment[] fragments= (IPackageFragment[]) this.packageFragments.get(Signature.getSimpleNames(name));", "-\t\t\tif (fragments != null) {", "-\t\t\t\tIPackageFragment[] result = new IPackageFragment[fragments.length];", "-\t\t\t\tint resultLength = 0; ", "-\t\t\t\tfor (int i= 0; i < fragments.length; i++) {", "-\t\t\t\t\tIPackageFragment packageFragment= fragments[i];", "-\t\t\t\t\tresult[resultLength++] = packageFragment;", "+\t\t\tString[] pkgName = Signature.getSimpleNames(name);", "+\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.get(pkgName);", "+\t\t\tif (roots != null) {", "+\t\t\t\tIPackageFragment[] result = new IPackageFragment[roots.length];", "+\t\t\t\tfor (int i= 0; i < roots.length; i++) {", "+\t\t\t\t\tresult[i] = ((PackageFragmentRoot) roots[i]).getPackageFragment(pkgName);", "-\t\t\t\tif (resultLength > 0) {", "-\t\t\t\t\tSystem.arraycopy(result, 0, result = new IPackageFragment[resultLength], 0, resultLength);", "-\t\t\t\t\treturn result;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "+\t\t\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4ecd59de3ca1663018b068a924e8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected ICompilationUnit getCompilationUnit(String projectName, String packageName, String unitName) throws JavaModelException", "signatureAfterChange": " \tprotected ICompilationUnit getCompilationUnit(String projectName, String packageName, String unitName) throws JavaModelException", "diff": ["-\t\tIPackageFragmentRoot[] fragmentRoots = javaProject.getPackageFragmentRoots();", "-\t\tint length = fragmentRoots.length;", "-\t\tfor (int i=0; i<length; i++) {", "-\t\t\tif (fragmentRoots[i] instanceof JarPackageFragmentRoot) continue;", "-\t\t\tIJavaElement[] packages= fragmentRoots[i].getChildren();", "-\t\t\tfor (int k= 0; k < packages.length; k++) {", "-\t\t\t\tIPackageFragment pack = (IPackageFragment) packages[k];", "-\t\t\t\tif (pack.getElementName().equals(packageName)) {", "-\t\t\t\t\tICompilationUnit[] units = pack.getCompilationUnits();", "-\t\t\t\t\tfor (int u=0; u<units.length; u++) {", "-\t\t\t\t\t\tif (units[u].getElementName().equals(unitName))", "-\t\t\t\t\t\t\treturn units[u];", "-\t\t\t\t\t}", "+\t\tIType type = javaProject.findType(packageName, unitName);", "+\t\tif (type != null) {", "+\t\t\treturn type.getCompilationUnit();", "+\t\t}", "+\t\treturn null;", "+\t}"]}], "num": 72122}