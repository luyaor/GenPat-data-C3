{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8fe06c4aa79aa64953e377c6310943dc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "166c13cddb19db0b2e635de4a48ac64c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["+\t\tboolean proposeAllMemberTypes,", "+\t\tSourceTypeBinding nextTypeToIgnore = null;", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "+\t\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\t\t\t\tif(!localType.isClass()) continue next;", "+\t\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t\t\t\t\t\tif(!localType.isInterface() && !localType.isAnnotationType()) continue next;", "+\t\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\t\t\t\t\t\tif(!localType.isAnnotationType()) continue next;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\tfindMemberTypes(typeName, scope.enclosingSourceType(), scope, currentType, false, typesFound);", "+\t\t\t\t\tSourceTypeBinding enclosingSourceType = scope.enclosingSourceType();", "+\t\t\t\t\tfindMemberTypes(typeName, enclosingSourceType, scope, currentType, false, false, false, proposeAllMemberTypes, nextTypeToIgnore, typesFound);", "+\t\t\t\t\tnextTypeToIgnore = enclosingSourceType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ad36edf56b612ff7a2e118960467f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "diff": ["-\tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound) {", "+\tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound) {", "+\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t\t\tproposeAllMemberTypes,", "+\t\t\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "+\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\t\t\tif(!typeBinding.isClass()) continue;", "+\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t\t\t\t\tif(!typeBinding.isInterface() && !typeBinding.isAnnotationType()) continue;", "+\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\t\t\t\t\tif(!typeBinding.isAnnotationType()) continue;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\trelevance += computeRelevanceForQualification(false);"]}], "num": 50359}