{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "786f7c901a0951a15c2809c9d2113a51", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad5b09151f68681db51244242a888b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationMethodDeclaration.java", "commitBeforeChange": "eff66822782d106f03c0800c15129e6995eea01c", "commitAfterChange": "899768f2df905f3ba878d5719c34fb81d4ef08b5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t\tthis.defaultValue.resolveType(this.scope);", "+\t\t\tif (this.defaultValue instanceof ArrayInitializer) {", "+\t\t\t\tArrayInitializer initializer = (ArrayInitializer) defaultValue;", "+\t\t\t\tif ((initializer.resolveTypeExpecting(scope, this.binding.returnType)) != null) {", "+\t\t\t\t\tthis.defaultValue.resolvedType = initializer.binding = (ArrayBinding) this.binding.returnType;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tthis.defaultValue.resolveType(this.scope);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2afcf462c381789b8df209a25a9d553", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationMethodDeclaration.java", "commitBeforeChange": "de0f1812a2159827ab464df5cef59ee9edaa3ab7", "commitAfterChange": "52749e60066d0fcd4c1a6df86d6646106f09eae5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\tif (this.defaultValue != null) {", "-\t\t\tif (this.defaultValue instanceof ArrayInitializer) {", "-\t\t\t\tArrayInitializer initializer = (ArrayInitializer) defaultValue;", "-\t\t\t\tif ((initializer.resolveTypeExpecting(scope, this.binding.returnType)) != null) {", "-\t\t\t\t\tthis.defaultValue.resolvedType = initializer.binding = (ArrayBinding) this.binding.returnType;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tthis.defaultValue.resolveType(this.scope);", "-\t\t\t}", "-\t\t}", "-\t\t\tAnnotation.checkAnnotationValue(returnTypeBinding, scope.enclosingSourceType(), this.selector, this.defaultValue, scope);", "+\t\t\tif (this.defaultValue != null) {", "+\t\t\t\tMemberValuePair pair = new MemberValuePair(this.selector, this.sourceStart, this.sourceEnd, this.defaultValue);", "+\t\t\t\tpair.binding = this.binding;", "+\t\t\t\tpair.resolveTypeExpecting(scope, returnTypeBinding);", "+\t\t\t}"]}], "num": 66445}