{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "628a03313ce62edf746524e72c197b9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c4e99657ec6f3d6281946fff6bec73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "b408a62caccca74d44dff8a675af3f155c36a61f", "commitAfterChange": "77ddbbd21774b8734c478b3fa222a0fb696417c4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForType) != 0)", "+\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForType) != 0) {", "+\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForPackage) != 0) {", "+\t\t\t\t\t\t\tif (CharOperation.equals(((ReferenceBinding)this.recipient).sourceName, TypeConstants.PACKAGE_INFO_NAME))", "+\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89ee1ccf25b398243dae7450ad5bf61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\t\tif (targetType == this)", "+\t\tif (targetType == this) {", "+\t\t}", "+\t\t\t// report the missing class file first - only if not resolving a previously missing type", "+\t\t\tif ((this.tagBits & TagBits.HasMissingType) == 0) {", "+\t\t\t\tenvironment.problemReporter.isClassPathCorrect(", "+\t\t\t\t\tthis.compoundName, ", "+\t\t\t\t\tenvironment.unitBeingCompleted, ", "+\t\t\t\t\tenvironment.missingClassFileLocation);", "+\t\t\t}", "-\t\t\ttargetType = environment.cacheMissingBinaryType(this.compoundName, null);", "+\t\t\ttargetType = environment.createMissingType(null, this.compoundName);"]}], "num": 62412}