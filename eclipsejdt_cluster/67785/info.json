{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f601fcca6db84d72c87ef32aa36a77f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dd19c34852ee49e3a9c1fbd23981bf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ChangeClasspathOperation.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void classpathChanged(JavaProject project) throws JavaModelException", "signatureAfterChange": " \tprotected void classpathChanged(JavaProject project) throws JavaModelException", "diff": ["+\t\t\t// and ensure that external folders are updated as well", "+\t\t\tnew ExternalFolderChange(project, change.oldResolvedClasspath).updateExternalFoldersIfNecessary(null);", "+\t\t\t", "+\t\t\tif ((result & ClasspathChange.HAS_LIBRARY_CHANGE) != 0) {", "+\t\t\t\t// ensure external folders are updated on next build", "+\t\t\t\tstate.addExternalFolderChange(project, change.oldResolvedClasspath);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99458971b5bb8eebf1cecefc3657f4f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "signatureAfterChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "diff": ["-\t\t\t", "-\t\t\tinitCopyRangeChecks(parent, property);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);"]}], "num": 67785}