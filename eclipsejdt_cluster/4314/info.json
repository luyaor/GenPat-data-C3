{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3f8e3bba94c2e22bf6d6ac1ab183b60", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cfaa442b000afb86f2a66afaa4bd31e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ef0a598e8142fdc0982c3f62cf49d826edaa6505", "commitAfterChange": "89e5cfe6011c44c81db4c1b525146cb6d514af0e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic SourceRange getSourceRange(IJavaElement element)", "signatureAfterChange": " \tpublic SourceRange getSourceRange(IJavaElement element)", "diff": ["-\t\tif (element.getElementType() == IJavaElement.METHOD", "-\t\t\t&& ((IMember) element).isBinary()) {", "-\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle((IMethod) element, false);", "-\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {", "-\t\t\t\telement = getUnqualifiedMethodHandle((IMethod) element, true)[0];", "-\t\t\t} else {", "-\t\t\t\telement = el[0];", "-\t\t\t}", "+\t\tswitch(element.getElementType()) {", "+\t\t\tcase IJavaElement.METHOD :", "+\t\t\t\tif (((IMember) element).isBinary()) {", "+\t\t\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle((IMethod) element, false);", "+\t\t\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {", "+\t\t\t\t\t\telement = getUnqualifiedMethodHandle((IMethod) element, true)[0];", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\telement = el[0];", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaElement.TYPE_PARAMETER :", "+\t\t\t\tIJavaElement parent = element.getParent();", "+\t\t\t\tif (parent.getElementType() == IJavaElement.METHOD) {", "+\t\t\t\t\tIMethod method = (IMethod) parent;", "+\t\t\t\t\tif (method.isBinary()) {", "+\t\t\t\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle(method, false);", "+\t\t\t\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {", "+\t\t\t\t\t\t\tmethod = (IMethod) getUnqualifiedMethodHandle(method, true)[0];", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tmethod = (IMethod) el[0];", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\telement = method.getTypeParameter(element.getElementName());", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a040698cc023820537650a8114dbbff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ef0a598e8142fdc0982c3f62cf49d826edaa6505", "commitAfterChange": "89e5cfe6011c44c81db4c1b525146cb6d514af0e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic SourceRange getNameRange(IJavaElement element)", "signatureAfterChange": " \tpublic SourceRange getNameRange(IJavaElement element)", "diff": ["-\t\tif (element.getElementType() == IJavaElement.METHOD", "-\t\t\t&& ((IMember) element).isBinary()) {", "-\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle((IMethod) element, false);", "-\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {", "-\t\t\t\telement = getUnqualifiedMethodHandle((IMethod) element, true)[0];", "-\t\t\t} else {", "-\t\t\t\telement = el[0];", "-\t\t\t}", "+\t\tswitch(element.getElementType()) {", "+\t\t\tcase IJavaElement.METHOD :", "+\t\t\t\tif (((IMember) element).isBinary()) {", "+\t\t\t\t\tIJavaElement[] el = getUnqualifiedMethodHandle((IMethod) element, false);", "+\t\t\t\t\tif(el[1] != null && fSourceRanges.get(el[0]) == null) {", "+\t\t\t\t\t\telement = getUnqualifiedMethodHandle((IMethod) element, true)[0];", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\telement = el[0];", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaElement.TYPE_PARAMETER :", "+\t\t\t\tSystem.out.println(element);"]}], "num": 4314}