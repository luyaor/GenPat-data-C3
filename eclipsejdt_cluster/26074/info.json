{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abc0fc1efe03ba61a2cbf5d157c12044", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a77e296af42260d9b97c8fb1ac78f45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "881da43b7e0b2ca5798e9c55f57054ccdaa23c6e", "commitAfterChange": "be760997ffe69084a7c4bd4d1ab81289e2452d86", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected boolean commentParse()", "signatureAfterChange": " \tprotected boolean commentParse()", "diff": ["+\t\t\t\twhile (peekChar() == '*') {", "+\t\t\t\t\tnextCharacter = readChar(); // read all contiguous '*'", "+\t\t\t\t}", "-\t\t\t\t\t\tthis.starPosition = previousPosition;", "-\t\t\t\t\t\tif (isDomParser || isFormatterParser) {", "-\t\t\t\t\t\t\tif (lineHasStar && !this.lineStarted) {", "-\t\t\t\t\t\t\t\tthis.lineStarted = true;", "-\t\t\t\t\t\t\t\tthis.textStart = previousPosition;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (!this.lineStarted) {", "-\t\t\t\t\t\t\t\tlineHasStar = true;", "+\t\t\t\t\t\tif (previousChar != '*') {", "+\t\t\t\t\t\t\tthis.starPosition = previousPosition;", "+\t\t\t\t\t\t\tif (isDomParser || isFormatterParser) {", "+\t\t\t\t\t\t\t\tif (lineHasStar && !this.lineStarted) {", "+\t\t\t\t\t\t\t\t\tthis.lineStarted = true;", "+\t\t\t\t\t\t\t\t\tthis.textStart = previousPosition;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (!this.lineStarted) {", "+\t\t\t\t\t\t\t\t\tlineHasStar = true;", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd9f08541f1436c84b1f29bb166ddce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "c36806bf795aa69e23f027117b2ebc1cb99bee93", "commitAfterChange": "d627da8238aec48018bdf0d2b4bff905a4883256", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected boolean parseComment(int javadocStart, int javadocEnd)", "signatureAfterChange": " \tprotected boolean parseComment(int javadocStart, int javadocEnd)", "diff": ["-\t\t\tthis.lineEnd = (this.linePtr == this.lastLinePtr) ? this.endComment : javadocStart;", "+\t\t\tthis.lineEnd = (this.linePtr == this.lastLinePtr) ? this.endComment : getLineEnd(this.linePtr);", "-\t\t\t\t\tthis.lineStarted = false;", "-\t\t\t\t\t\tif ((!this.lineStarted || previousChar == '{') && Character.isJavaIdentifierStart(peekChar())) {", "+\t\t\t\t\t\tif ((!this.lineStarted || previousChar == '{')) {", "-\t\t\t\t\t\t\t\t\t\t// !, \", #, %, &, ', -, :, <, >", "-\t\t\t\t\t\t\t\t\t\tif (Character.isWhitespace(pc)) break;", "+\t\t\t\t\t\t\t\t\t\t// !, \", #, %, &, ', -, :, <, >, * chars and spaces are not allowed in tag names", "-\t\t\t\t\t\t\t\t\t\t\tcase '<' :", "+\t\t\t\t\t\t\t\t\t\t\tcase '<':", "+\t\t\t\t\t\t\t\t\t\t\tcase '*': // break for '*' as this is perhaps the end of comment (bug 65288)", "+\t\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\t\tif (pc == ' ' || Character.isWhitespace(pc)) break tagNameToken;"]}], "num": 26074}