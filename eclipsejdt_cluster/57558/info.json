{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dbc1b466f2c62e5c13bd7eb8cd4f4f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d98daf048fda2b47e40ac021d3fe4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "b8409b2c5761cb2e6dbcdfc3bef92e6e755d2aa7", "commitAfterChange": "e968b992e38be58d07a46d70f656322d8b2edb33", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "signatureAfterChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "diff": ["-\t\tMap<FactoryContainer, Boolean> containers = null;", "-\t\tif (jproj != null) {", "-\t\t\ttry {", "-\t\t\t\tcontainers = FactoryPathUtil.readFactoryPathFile(jproj);", "-\t\t\t}", "-\t\t\tcatch (CoreException ce) {", "-\t\t\t\tce.printStackTrace();", "-\t\t\t}", "-\t\t\tcatch (IOException ioe) {", "-\t\t\t\tioe.printStackTrace();", "-\t\t\t}", "-\t\t}", "-\t\t// Workspace if no project data was found", "-\t\tif (containers == null) {", "-\t\t\ttry {", "-\t\t\t\tcontainers = FactoryPathUtil.readFactoryPathFile(null);", "-\t\t\t}", "-\t\t\tcatch (CoreException ce) {", "-\t\t\t\tce.printStackTrace();", "-\t\t\t}", "-\t\t\tcatch (IOException ioe) {", "-\t\t\t\tioe.printStackTrace();", "-\t\t\t}", "-\t\t}", "-\t\t// if no project and no workspace data was found, we'll get the defaults", "-\t\tif (containers == null) {", "-\t\t\tcontainers = new LinkedHashMap<FactoryContainer, Boolean>();", "-\t\t}", "-\t\tboolean disableNewPlugins = jproj != null;", "-\t\tupdatePluginContainers(containers, disableNewPlugins);", "-\t\treturn new LinkedHashMap(containers);", "-\t}", "+\t\treturn FactoryPathUtil.getAllContainers(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec796021ebb08d48acada91ec2bb9d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "signatureAfterChange": " \tprivate static synchronized Map<FactoryContainer, FactoryPath.Attributes> calculatePath(IJavaProject jproj)", "diff": ["-\tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj) {", "-\t\tMap<FactoryContainer, Boolean> containers = null;", "+\tprivate static synchronized Map<FactoryContainer, FactoryPath.Attributes> calculatePath(IJavaProject jproj) {", "+\t\tMap<FactoryContainer, FactoryPath.Attributes> map = null;", "-\t\t\t\tcontainers = readFactoryPathFile(jproj);", "-\t\t\t\tfoundPerProjFile = (containers != null);", "+\t\t\t\tmap = readFactoryPathFile(jproj);", "+\t\t\t\tfoundPerProjFile = (map != null);", "-\t\tif (containers == null) {", "+\t\tif (map == null) {", "-\t\t\t\tcontainers = readFactoryPathFile(null);", "+\t\t\t\tmap = readFactoryPathFile(null);", "-\t\tif (containers == null) {", "-\t\t\tcontainers = new LinkedHashMap<FactoryContainer, Boolean>();", "+\t\tif (map == null) {", "+\t\t\tmap = new LinkedHashMap<FactoryContainer, FactoryPath.Attributes>();", "-\t\tupdatePluginContainers(containers, disableNewPlugins);", "-\t\treturn new LinkedHashMap(containers);", "+\t\tupdatePluginContainers(map, disableNewPlugins);", "+\t\treturn map;"]}], "num": 57558}