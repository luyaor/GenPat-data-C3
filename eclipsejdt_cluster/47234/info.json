{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b95c450f0a99e7183502b88e815081af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98672228ab9f7aa03cae8f2736b47fe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "ee7d00c6fce3f5ac075ad1ae838556503fe6ca33", "commitAfterChange": "42a20f90363fe2e676c07d56364d6cc6b90a9458", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tprivate Type createType(ITypeBinding binding, ITypeBinding bindingPoint, AST ast, Type qualifier, ImportRewriteContext context)", "signatureAfterChange": "  \tprivate Type annotateType(ITypeBinding binding, AST ast, ImportRewriteContext context, Type type)", "diff": ["+", "+\tprivate Type annotateType(ITypeBinding binding, AST ast, ImportRewriteContext context, Type type) {", "+\t\tIAnnotationBinding [] annotationBindings = binding.getTypeAnnotations();", "+\t\tif (annotationBindings != null && annotationBindings.length > 0 && type instanceof AnnotatableType) {", "+\t\t\tannotateList(((AnnotatableType) type).annotations(), annotationBindings, ast, context);", "+\t\t}", "+\t\treturn type;", "+\t}", "-\tprivate Type createType(ITypeBinding binding, ITypeBinding bindingPoint, AST ast, Type qualifier, ImportRewriteContext context) {", "-\t\tType type = null;", "-\t\tif (binding.equals(bindingPoint)) {", "-\t\t\ttype = createType(qualifier, binding, ast, context);", "-\t\t\tType currentType = binding.isMember() ? createType(binding.getDeclaringClass(), bindingPoint, ast, qualifier, context) : null;", "-\t\t\ttype = createType(currentType, binding, ast, context);", "-\t\t}", "-\t\tIAnnotationBinding [] annotationBindings = binding.getTypeAnnotations();", "-\t\tif (annotationBindings != null && annotationBindings.length > 0) {", "-\t\t\tAnnotatableType aType = type instanceof AnnotatableType ? (AnnotatableType) type : ", "-\t\t\t\ttype instanceof ParameterizedType ? (AnnotatableType) ((ParameterizedType) type).getType() : null;", "-\t\t\tif (aType != null)", "-\t\t\t\tannotateType(aType, annotationBindings, ast, context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a409c3d24f80b89b0ad266af0b411251", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "ee7d00c6fce3f5ac075ad1ae838556503fe6ca33", "commitAfterChange": "42a20f90363fe2e676c07d56364d6cc6b90a9458", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tprivate Type createType(ITypeBinding binding, ITypeBinding bindingPoint, AST ast, ImportRewriteContext context)", "signatureAfterChange": "  \tprivate Type createBaseType(AST ast, ImportRewriteContext context, ITypeBinding normalizedBinding)", "diff": ["-\tprivate Type createType(ITypeBinding binding, ITypeBinding bindingPoint, AST ast, ImportRewriteContext context) {", "-\t\tString str = addImport(bindingPoint, context);", "-\t\tint dotIndex = str != null ? str.lastIndexOf('.') : -1;", "-\t\tType qualifier = null;", "-\t\tif (dotIndex != -1) {", "-\t\t\tchar buf [] = new char [dotIndex];", "-\t\t\tfor (int i = 0; i < dotIndex; ++i)", "-\t\t\t\tbuf[i] = str.charAt(i);", "-\t\t\tstr = new String(buf);", "-\t\t\tqualifier = ast.newSimpleType(ast.newName(str));", "-\t\t}", "-\t\treturn createType(binding, bindingPoint, ast, qualifier, context);", "-\t}", "+\tprivate Type createBaseType(AST ast, ImportRewriteContext context, ITypeBinding normalizedBinding) {", "+\t\tType type;", "+\t\tIAnnotationBinding annotationBinding [] = normalizedBinding.getTypeAnnotations();", "+\t\tboolean annotsPresent = annotationBinding != null && annotationBinding.length > 0;", "+\t\tString qualifiedName= getRawQualifiedName(normalizedBinding);", "+\t\tString res = qualifiedName.length() > 0 ? internalAddImport(qualifiedName, context) : getRawName(normalizedBinding);", "+\t", "+\t\tif (annotsPresent) {", "+\t\t\tint dotIndex = res != null ? res.lastIndexOf('.') : -1;", "+\t\t\tif (dotIndex > 0) {", "+\t\t\t\tName nameQualifier = ast.newName(res.substring(0, dotIndex));", "+\t\t\t\tSimpleName simpleName = ast.newSimpleName(res.substring(dotIndex + 1));", "+\t\t\t\ttype = ast.newNameQualifiedType(nameQualifier, simpleName);", "+\t\t\t} else {", "+\t\t\t\ttype = ast.newSimpleType(ast.newName(res));", "+\t\t\t}", "+\t\t\tannotateList(((AnnotatableType) type).annotations(), annotationBinding, ast, context);", "+\t\t\ttype = ast.newSimpleType(ast.newName(res));"]}], "num": 47234}