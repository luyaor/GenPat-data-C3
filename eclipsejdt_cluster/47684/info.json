{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5ef5cffa880a93078fceb65ce954c90", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d81699be3d097a3af7c36d088b231a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void resolve()", "signatureAfterChange": "  \tpublic void resolve()", "diff": ["-\t\t\tsyntheticTypeDeclaration.javadoc = new Javadoc(syntheticTypeDeclaration.declarationSourceStart, syntheticTypeDeclaration.declarationSourceStart);", "+\t\t\tif (syntheticTypeDeclaration.javadoc == null) {", "+\t\t\t\tsyntheticTypeDeclaration.javadoc = new Javadoc(syntheticTypeDeclaration.declarationSourceStart, syntheticTypeDeclaration.declarationSourceStart);", "+\t\t\t}", "-\t\t\tif (this.currentPackage.annotations != null) {", "+\t\t\tif (this.currentPackage!= null && this.currentPackage.annotations != null) {", "-\t\t\t// resolve javadoc package if any", "+\t\t\t/*", "+\t\t\t * resolve javadoc package if any", "+\t\t\t * we do it now and the javadoc in the fake type won't be resolved", "+\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188e3da040d8bcc47894747cbc2ac3af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementNotifier.java", "commitBeforeChange": "b689dc0b8d593c356aa0b50afc3c813224da93dd", "commitAfterChange": "38ed44b7ef2a77384101fb5c9ce482c4a95c065a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "signatureAfterChange": " protected void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "diff": ["-\t\t\ttypeInfo.declarationStart = typeDeclaration.allocation == null ? typeDeclaration.declarationSourceStart : typeDeclaration.allocation.sourceStart;", "+\t\t\tif (typeDeclaration.allocation == null) {", "+\t\t\t\ttypeInfo.declarationStart = typeDeclaration.declarationSourceStart;", "+\t\t\t} else if (isEnumInit) {", "+\t\t\t\ttypeInfo.declarationStart = typeDeclaration.allocation.enumConstant.sourceStart;", "+\t\t\t} else {", "+\t\t\t\ttypeInfo.declarationStart = typeDeclaration.allocation.sourceStart;", "+\t\t\t}", "-\t\t\ttypeInfo.nameSourceStart = typeDeclaration.sourceStart;", "+\t\t\ttypeInfo.nameSourceStart = isEnumInit ? typeDeclaration.allocation.enumConstant.sourceStart : typeDeclaration.sourceStart;"]}], "num": 47684}