{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "377e1f6c0ab55076e7c14f694c7c72fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06409243df5edc522287b490031f2fe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "39f1f31087ae36f09c69d342ba90d4c2023a9fbb", "commitAfterChange": "431e7408b1f322cc72b90589fe7c96489b23e8aa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\tif (isCompatibleWithInLooseInvocationContext(exprType, this.right, inferenceContext))", "+\t\t\tif (isCompatibleWithInLooseInvocationContext(exprType, this.right, inferenceContext)) {", "+\t\t\t} else if (this.left instanceof AllocationExpression && this.left.isPolyExpression()) {", "+\t\t\t\t// half-resolved diamond has a resolvedType, but that may not be the final word, try one more step of resolution:", "+            \tMethodBinding binding = ((AllocationExpression) this.left).binding(this.right);", "+            \treturn (binding != null && binding.declaringClass.isCompatibleWith(this.right)) ? TRUE : FALSE;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce9d469918d28bded30002a1a6a6607", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c4e062ebcfc48b14b7c36c591e88d44ce5b3b5c0", "commitAfterChange": "7dd940af8bfbaf46f5a69ec7b85437ba951f7d8e", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " \tprivate void findKeywordsForMember(char[] token, int modifiers)", "signatureAfterChange": " \tprivate void findKeywordsForMember(char[] token, int modifiers, ASTNode astNode)", "diff": ["-\tprivate void findKeywordsForMember(char[] token, int modifiers) {", "+\tprivate void findKeywordsForMember(char[] token, int modifiers, ASTNode astNode) {", "+\t\tif (astNode instanceof CompletionOnFieldType && ", "+\t        this.compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8) {", "+\t        FieldBinding astNodeBinding = ((CompletionOnFieldType) astNode).binding;", "+\t        ReferenceBinding declaringClass = astNodeBinding != null ? astNodeBinding.declaringClass : null;", "+\t        if (declaringClass != null && declaringClass.isInterface() && !declaringClass.isAnnotationType())", "+\t            keywords[count++] = Keywords.DEFAULT;", "+\t    }"]}], "num": 26611}