{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "200916220317707dabe0b14acd70dc86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506c049fb32a0b24714644e4a7c706c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "a2ca4d1dca2fbcc72eef5c4d5e1d2d9929abeff3", "commitAfterChange": "f51d6f5a0e9a386694d73d0c3aec5b18e2ce1002", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "  \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] newResolvedPath = ", "-\t\t\tproject.getResolvedClasspath(", "-\t\t\t\ttrue, // ignoreUnresolvedEntry", "-\t\t\t\tthis.canChangeResource);// also update cp markers", "-", "+\t\tif (this.newResolvedPath == null) {", "+\t\t\tthis.newResolvedPath = ", "+\t\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResource);", "+\t\t}", "-\t\t\t\tnewResolvedPath,", "+\t\t\t\tthis.newResolvedPath,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7296bc1c0069c48adbe59a18ad5d2e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate IFile getFile()", "signatureAfterChange": " \tprivate IFile getFile()", "diff": ["-\t\tIPath path = new Path(this.documentPath);", "-\t\treturn (IFile)ResourcesPlugin.getWorkspace().getRoot().findMember(path);", "+\t\tif (this.file == null)", "+\t\t\tthis.file = (IFile) ResourcesPlugin.getWorkspace().getRoot().findMember(new Path(this.documentPath));", "+\t\treturn this.file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1cb88a03b23d0d4399ac27f85b3b79a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "161b33b1dd753a14c62dc5cb298555b7a8135f16", "commitAfterChange": "0af694b5a2455cea6ace262561a6329b05ee9c78", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void locateMatches(String[] filePaths, IWorkspace workspace)\r \t\tthrows JavaModelException", "diff": ["-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "-\t\tHandleFactory factory = new HandleFactory(workspace.getRoot(), manager);\r", "+\t\tif (this.handleFactory == null) {\r", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "+\t\t\tthis.handleFactory = new HandleFactory(workspace.getRoot(), manager);\r", "+\t\t}\r", "-\t\tboolean couldInitializePattern = false;\r", "-\t\t\tOpenable openable = factory.createOpenable(pathString);\r", "+\t\t\tOpenable openable = this.handleFactory.createOpenable(pathString);\r", "-\t\t\t\t\tcouldInitializePattern = this.createParser(javaProject);\r", "+\t\t\t\t\tthis.createParser(javaProject);\r", "-\t\t\t\tif (!couldInitializePattern)\r", "-\t\t\t\t\tcontinue;\r", "-\t\t\t\t// the pattern could not be initialized: the match cannot be in this project\r"]}], "num": 31405}