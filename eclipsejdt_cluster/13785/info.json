{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be867defef773b92af02eb4427ca3dd5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025da3aaf94c17a2f4ee7071807e8dee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "12f67d7a75389e2a993321c57a8e613bfbfd0a38", "commitAfterChange": "de69fdc9c7b24bcb364875a8afb893a3bd7c1df3", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications, \t\tfinal char[][] typeNames, \t\tint matchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications, \t\tfinal char[][] typeNames, \t\tint matchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\tUtil.verbose(\"\t- match rule: \"+matchRule); //$NON-NLS-1$", "-\t\t\tif (validatedMatchRule != matchRule) {", "-\t\t\t\tUtil.verbose(\"\t- validated match rule: \"+getMatchRuleString(validatedMatchRule)); //$NON-NLS-1$", "-\t\t\t}", "+\t\t\tUtil.verbose(\"\t- match rule: \"+getMatchRuleString(matchRule)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9776c1ff94fefedcc92d81cea9c92ea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/textui/TestRunner.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected void pause(boolean wait)", "signatureAfterChange": "  \tprotected void pause(boolean wait)", "diff": ["-", "-\tprotected void pause(boolean wait) {", "-\t\tif (wait) {", "-\t\t\twriter().println(\"<RETURN> to continue\");", "-\t\t\ttry {", "-\t\t\t\tSystem.in.read();", "-\t\t\t}", "-\t\t\tcatch(Exception e) {", "-\t\t\t}", "-\t\t}", "-\t}", "+", "+\tprotected void pause(boolean wait) {", "+\t\tif (!wait) return;", "+\t\tfPrinter.printWaitPrompt();", "+\t\ttry {", "+\t\t\tSystem.in.read();", "+\t\t}", "+\t\tcatch(Exception e) {", "+\t\t}", "+\t}"]}], "num": 13785}