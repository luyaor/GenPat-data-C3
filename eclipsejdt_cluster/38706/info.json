{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61b0b2b91b18bae773b5ff6d0863bbc5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0714def1813c9db83a0aa0270415a721", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException", "signatureAfterChange": " protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, IJavaElement[] otherElements, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException", "diff": ["-protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException {", "+protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, IJavaElement[] otherElements, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException {", "+\t\tIJavaElement localElement = null;", "-\t\t\tthis.patternLocator.matchReportReference(typeRef, enclosingElement, elementBinding, level.intValue(), this);", "+\t\t\tlocalElement = createHandle(annotationType, (IAnnotatable) enclosingElement);", "+\t\t\tthis.patternLocator.matchReportReference(typeRef, enclosingElement, localElement, otherElements, elementBinding, level.intValue(), this);", "-\t\t\t\tthis.patternLocator.matchReportReference(reference, enclosingElement, pair.binding, level.intValue(), this);", "+\t\t\t\tif (localElement == null) {", "+\t\t\t\t\tlocalElement = createHandle(annotationType, (IAnnotatable) enclosingElement);", "+\t\t\t\t}", "+\t\t\t\tthis.patternLocator.matchReportReference(reference, enclosingElement, localElement, otherElements, pair.binding, level.intValue(), this);", "-\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, elementBinding, level.intValue(), this);", "+\t\t\t\t\t\tif (localElement == null) {", "+\t\t\t\t\t\t\tlocalElement = createHandle(annotationType, (IAnnotatable) enclosingElement);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, localElement, otherElements, elementBinding, level.intValue(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1349294d11442b5940908d27db6511c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e3beff3ddcf0f1da8ef71b6358fa3af7711e703f", "commitAfterChange": "6b8881c9416240b1f58c929f9746f01644e60deb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "-\t\t\t\t\t\t\t\tif (level != null) {", "-\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "-\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "-\t\t\t\t\t\t\t\t}", "+\t                            if (wildcardBound != null) {", "+\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "+\t\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t\t}", "+\t                            }", "-\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "-\t\t\t\t\t\t\t\t\tif (level != null) {", "-\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "-\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t                            if (wildcardBound != null) {", "+\t\t\t\t\t\t\t\t\t\tlevel = (Integer) nodeSet.matchingNodes.removeKey(wildcardBound);", "+\t\t\t\t\t\t\t\t\t\tif (level != null) {", "+\t\t\t\t\t\t\t\t\t\t\tIJavaElement localElement = createHandle(typeParameter, enclosingElement);", "+\t\t\t\t\t\t\t\t\t\t\tthis.patternLocator.matchReportReference(wildcardBound, enclosingElement, localElement, null, binding, level.intValue(), this);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t                            }"]}], "num": 38706}