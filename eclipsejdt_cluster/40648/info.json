{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "033c61702cf7ef8115f015eaca915a66", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0006317241f7512771abe6d78b660c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "commitAfterChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "signatureAfterChange": " public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "diff": ["+ */", "+public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo) {", "+\tif (!(binaryInfo instanceof IBinaryType)) return false;", "+\tIBinaryType type = (IBinaryType) binaryInfo;", "+\tif (!this.checkOnlySuperinterfaces) {", "+\t\tchar[] vmName = type.getSuperclassName();", "+\t\tif (vmName != null) {", "+\t\t\tchar[] superclassName = (char[]) vmName.clone();", "+\t\t\tCharOperation.replace(vmName, '/', '.');", "+\t\t\tif (matchesType(this.superSimpleName, this.superQualification, superclassName))", "+\t\t\t\treturn true;", "+\t\t}", "+\t}", "+", "+\tchar[][] superInterfaces = type.getInterfaceNames();", "+\tif (superInterfaces != null) {", "+\t\tfor (int i = 0, max = superInterfaces.length; i < max; i++) {", "+\t\t\tchar[] superInterfaceName = (char[]) superInterfaces[i].clone();", "+\t\t\tCharOperation.replace(superInterfaceName, '/', '.');", "+\t\t\tif (matchesType(this.superSimpleName, this.superQualification, superInterfaceName))", "+\t\t\t\treturn true;", "+\t\t}", "+\t}", "+\treturn false;", "+}", "- */", "-public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo) {", "-\tif (!(binaryInfo instanceof IBinaryType)) return false;", "-\tIBinaryType type = (IBinaryType)binaryInfo;", "-", "-\tchar[] vmName = type.getSuperclassName();", "-\tif (vmName != null) {", "-\t\tchar[] superclassName = (char[])vmName.clone();", "-\t\tCharOperation.replace(vmName, '/', '.');", "-\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superclassName)){", "-\t\t\treturn true;", "-\t\t}", "-\t}", "-\t", "-\tchar[][] superInterfaces = type.getInterfaceNames();", "-\tif (superInterfaces != null) {", "-\t\tfor (int i = 0, max = superInterfaces.length; i < max; i++) {", "-\t\t\tchar[] superInterfaceName = (char[])superInterfaces[i].clone();", "-\t\t\tCharOperation.replace(superInterfaceName, '/', '.');", "-\t\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaceName)){", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn false;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb94a1dedae2d6c04f7bb7cc71a65b80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "a82d28ad3c4f97d6c4b28c5439c23028fcc38c73", "commitAfterChange": "65fa5c3060e4327551c38497dd416e8e9a64be21", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["+\t\tfinal boolean isAnnotation = (accessFlags & IModifierConstants.ACC_ANNOTATION) != 0;", "-\t\t\tif ((accessFlags & IModifierConstants.ACC_ANNOTATION) != 0) {", "+\t\t\tif (isAnnotation) {", "-\t\tchar[][] superclassInterfaces = classFileReader.getInterfaceNames();", "-\t\tint length = superclassInterfaces.length;", "-\t\tif (length != 0) {", "-\t\t\tbuffer.append(\" implements \"); //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < length - 1; i++) {", "-\t\t\t\tchar[] superinterface = superclassInterfaces[i];", "+\t\tif (!isAnnotation || !checkMode(mode, WORKING_COPY)) {", "+\t\t\tchar[][] superclassInterfaces = classFileReader.getInterfaceNames();", "+\t\t\tint length = superclassInterfaces.length;", "+\t\t\tif (length != 0) {", "+\t\t\t\tbuffer.append(\" implements \"); //$NON-NLS-1$", "+\t\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\t\t\tchar[] superinterface = superclassInterfaces[i];", "+\t\t\t\t\tCharOperation.replace(superinterface, '/', '.');", "+\t\t\t\t\tbuffer", "+\t\t\t\t\t\t.append(returnClassName(superinterface, '.', mode))", "+\t\t\t\t\t\t.append(Messages.disassembler_comma)", "+\t\t\t\t\t\t.append(Messages.disassembler_space); ", "+\t\t\t\t}", "+\t\t\t\tchar[] superinterface = superclassInterfaces[length - 1];", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(returnClassName(superinterface, '.', mode))", "-\t\t\t\t\t.append(Messages.disassembler_comma)", "-\t\t\t\t\t.append(Messages.disassembler_space); ", "+\t\t\t\tbuffer.append(returnClassName(superinterface, '.', mode));", "-\t\t\tchar[] superinterface = superclassInterfaces[length - 1];", "-\t\t\tCharOperation.replace(superinterface, '/', '.');", "-\t\t\tbuffer.append(returnClassName(superinterface, '.', mode));", "-\t\t\tlength = attributes.length;", "+\t\t\tint length = attributes.length;"]}], "num": 40648}