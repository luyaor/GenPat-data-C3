{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1f671f423736e04bec1389ee1314c83", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f99e8753589ce707579dbf8e23f8729", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "454c09645419e42e424c8ed7d147ba861f3f0f93", "commitAfterChange": "9d8ef2fe9a94d29d41ecb29dff07f3d9ede1a855", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath)", "signatureAfterChange": " \tprotected void updateCycleMarkersIfNecessary(IClasspathEntry[] newResolvedPath)", "diff": ["-\tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath) {", "-\t\t", "+\tprotected void updateCycleMarkersIfNecessary(IClasspathEntry[] newResolvedPath) {", "+", "+\t\tif (!this.needCycleCheck) return;", "-\t\t\tJavaProject.updateAllCycleMarkers();", "+\t\t\tpostAction(", "+\t\t\t\tnew IPostAction() {", "+\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\treturn \"updateCycleMarkers\";  //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\tJavaProject.updateAllCycleMarkers();", "+\t\t\t\t\t}", "+\t\t\t\t},", "+\t\t\t\tREMOVEALL_APPEND);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206060c672e63cfa1c6f5141a0d6fa41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "8726985690d5211d83787440cfdc69960f688cd3", "commitAfterChange": "b2bac1f114347c5119b74b76ba91158e0de76647", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 95, "signatureBeforeChange": "\r \t\r \tpublic void updateCycleMarkers(IClasspathEntry[] resolvedClasspath)", "signatureAfterChange": "\r \tpublic static void updateAllCycleMarkers() throws JavaModelException", "diff": ["-\t\r", "-\tpublic void updateCycleMarkers(IClasspathEntry[] resolvedClasspath) {\r", "-\t\tthis.flushClasspathProblemMarkers(true);\r", "-\t\tif (this.hasClasspathCycle(resolvedClasspath)){\r", "-\t\t\tthis.createClasspathProblemMarker(\r", "-\t\t\t\tUtil.bind(\"classpath.cycle\"), //$NON-NLS-1$\r", "-\t\t\t\tIMarker.SEVERITY_ERROR,\r", "-\t\t\t\ttrue); \r", "+\t */\r", "+\tpublic static void updateAllCycleMarkers() throws JavaModelException {\r", "+\t\t\r", "+\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();\r", "+\t\tIJavaProject[] projects = manager.getJavaModel().getJavaProjects();\r", "+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();\r", "+\r", "+\t\tHashSet cycleParticipants = new HashSet();\r", "+\t\tHashSet visited = new HashSet();\r", "+\t\tint length = projects.length;\r", "+\t\tfor (int i = 0; i < length; i++){\r", "+\t\t\tJavaProject project = (JavaProject)projects[i];\r", "+\t\t\tif (!cycleParticipants.contains(project)){\r", "+\t\t\t\tvisited.clear();\r", "+\t\t\t\tproject.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot);\r", "+\t\t\t}\r", "+\t\t}\r", "+\r", "+\t\tfor (int i = 0; i < length; i++){\r", "+\t\t\tJavaProject project = (JavaProject)projects[i];\r", "+\t\t\t\r", "+\t\t\tif (cycleParticipants.contains(project)){\r", "+\t\t\t\t\r", "+\t\t\t\tproject.createClasspathProblemMarker(\r", "+\t\t\t\t\tUtil.bind(\"classpath.cycle\"), //$NON-NLS-1$\r", "+\t\t\t\t\tIMarker.SEVERITY_ERROR,\r", "+\t\t\t\t\ttrue); \r", "+\t\t\t} else {\r", "+\t\t\t\tproject.flushClasspathProblemMarkers(true);\r", "+\t\t\t}\t\t\t\r"]}], "num": 2357}