{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c4e56a5851f12ed57459ea9f8660e2b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53508afda4fb5bd9dea6963ae0ac1132", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "e4cb11ce5006b834ab688f1f8723b617c88080a9", "commitAfterChange": "11f1358e49c275ae76b9b676e7f3fef7eb5220cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tNestedTypeBinding nestedType = null;", "-\t\t\t\t\tif (this.receiverType instanceof ParameterizedTypeBinding) {", "-\t\t\t\t\t\tnestedType = (NestedTypeBinding)((ParameterizedTypeBinding) this.receiverType).genericType();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tnestedType = (NestedTypeBinding) this.receiverType;", "-\t\t\t\t\t}", "+\t\t\t\t\tReferenceBinding nestedType = (ReferenceBinding) this.receiverType;", "-\t\t\t\t\t\tcurrentScope.problemReporter().noSuchEnclosingInstance(nestedType.enclosingType, this, false);", "+\t\t\t\t\t\tcurrentScope.problemReporter().noSuchEnclosingInstance(nestedType.enclosingType(), this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739b36c0783131666562672d02db7a5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "e749248b2d171474b4cec0b274f15c474b2172fa", "commitAfterChange": "49bbfb9368cdcf7ee010de91440ff4d54ad31533", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected boolean checkAccess( \t\tMethodScope methodScope, \t\tTypeBinding targetType)", "signatureAfterChange": "  \tprotected boolean checkAccess( \t\tMethodScope methodScope, \t\tTypeBinding targetType)", "diff": ["-", "+//TODO: access check will occur during path emulation...", "-\t\tif (methodScope.isConstructorCall) {", "-\t\t\tmethodScope.problemReporter().fieldsOrThisBeforeConstructorInvocation(this);", "+\t\tif (methodScope.isConstructorCall) { ", "+\t\t\tif (targetType == methodScope.enclosingSourceType()) {", "+\t\t\t\tmethodScope.problemReporter().fieldsOrThisBeforeConstructorInvocation(this);", "+\t\t\t}", "-\t\t\tmethodScope.problemReporter().incorrectEnclosingInstanceReference(", "-\t\t\t\tthis,", "-\t\t\t\ttargetType);", "+\t\t\tmethodScope.problemReporter().noSuchEnclosingInstance(targetType, this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900c0b8aae87ac4a39cbb6e54405c20f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "c45031a708344453f01f911278a63ebae41b9cba", "commitAfterChange": "c49a7bd34f8c2781dba76984d24d83335183205f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected int findNullTypeAnnotationMismatch(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "signatureAfterChange": " protected int findNullTypeAnnotationMismatch(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "diff": ["-\t} else if (requiredType instanceof ParameterizedTypeBinding) {", "+\t} else if (requiredType.hasNullTypeAnnotations() || providedType.hasNullTypeAnnotations()) {", "-\t\tif (severity < 3) {", "-\t\t\tif (providedType.isParameterizedType()) { // TODO(stephan): handle providedType.isRaw()", "+\t\tif (severity < 2) {", "+\t\t\tif (requiredType.isParameterizedType()  && providedType.isParameterizedType()) { // TODO(stephan): handle providedType.isRaw()", "+\t\t\t} else \tif (requiredType instanceof WildcardBinding) {", "+\t\t\t\tseverity = Math.max(severity, findNullTypeAnnotationMismatch(((WildcardBinding) requiredType).bound, providedType, nullStatus));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01d596395b86572cb7bb5fadc522743", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "b2f2db5aca4b5592810cb876316dc430449c50f8", "commitAfterChange": "423363127bfe75baf23fa282b4893f61b836a936", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void checkBounds(Scope scope)", "signatureAfterChange": " \tpublic void checkBounds(Scope scope)", "diff": ["-\t\tParameterizedTypeBinding parameterizedType = null;", "-\t\tif (this.resolvedType instanceof ParameterizedTypeBinding)", "-\t\t\tparameterizedType = (ParameterizedTypeBinding) this.resolvedType;", "-\t\telse if (this.resolvedType.isArrayType() && this.resolvedType.leafComponentType() instanceof ParameterizedTypeBinding)", "-\t\t\tparameterizedType = (ParameterizedTypeBinding) this.resolvedType.leafComponentType();", "-", "-\t\tif (parameterizedType != null) {", "+\t\tif (this.resolvedType.leafComponentType() instanceof ParameterizedTypeBinding) {", "+\t\t\tParameterizedTypeBinding parameterizedType = (ParameterizedTypeBinding) this.resolvedType.leafComponentType();"]}], "num": 7323}