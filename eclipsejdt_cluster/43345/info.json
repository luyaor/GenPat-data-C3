{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da00cf9176363da30414df9dd16ebf21", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1981771712b34734dacd4ed7adf7818a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["-", "-\t// javadoc", "+\t// report annotations", "+\tif (type.annotations != null) {", "+\t\tfor (int i=0, al=type.annotations.length; i<al; i++) {", "+\t\t\tTypeReference typeRef = type.annotations[i].type;", "+\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeRef);", "+\t\t\tif (level != null && matchedClassContainer) {", "+\t\t\t\tthis.patternLocator.matchReportReference(typeRef, enclosingElement, level.intValue(), this);", "+\t\t\t}", "+\t\t}", "+\t}", "+", "+\t// report references in javadoc"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663084fa49b2fec8b85425a685408978", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["+\t// report annotations", "+\tif (method.annotations != null) {", "+\t\tfor (int i=0, al=method.annotations.length; i<al; i++) {", "+\t\t\tTypeReference typeRef = method.annotations[i].type;", "+\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeRef);", "+\t\t\tif (level != null) {", "+\t\t\t\tif (enclosingElement == null)", "+\t\t\t\t\tenclosingElement = createHandle(method, parent);", "+\t\t\t\tthis.patternLocator.matchReportReference(typeRef, enclosingElement, level.intValue(), this);", "+\t\t\t}", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be552aae00398b22e1859c62cccaca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["+\t// report annotations", "+\tif (field.annotations != null) {", "+\t\tfor (int i=0, al=field.annotations.length; i<al; i++) {", "+\t\t\tTypeReference typeRef = field.annotations[i].type;", "+\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeRef);", "+\t\t\tif (level != null) {", "+\t\t\t\tif (enclosingElement == null)", "+\t\t\t\t\tenclosingElement = createHandle(field, type, parent);", "+\t\t\t\tthis.patternLocator.matchReportReference(typeRef, enclosingElement, level.intValue(), this);", "+\t\t\t}", "+\t\t}", "+\t}", "+"]}], "num": 43345}