{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9141a717c8d48535ece5e2370d93e33a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2602036b3c965bbf494c47971d668399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\tif (((this.bits & OperatorMASK) >> OperatorSHIFT) != AND) {", "+\t\t\t\tflowContext.expireNullCheckedFieldInfo();", "+\t\t\t}", "-\t\t\treturn this.right.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "+\t\t\tflowInfo = this.right.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "+\t\t\tif (((this.bits & OperatorMASK) >> OperatorSHIFT) != AND) {", "+\t\t\t\tflowContext.expireNullCheckedFieldInfo();", "+\t\t\t}", "+\t\t\treturn flowInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e56132824bb5d174712a3767c46b3ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "b14a6c4d09a9bece1bab75937908ff44df19fa09", "commitAfterChange": "a846071c58f9098177eef02be0134294158f9c4f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\tif (((this.bits & OperatorMASK) >> OperatorSHIFT) != AND) {", "+\t\t\t\tflowContext.expireNullCheckedFieldInfo();", "+\t\t\t}", "-\t\t\treturn this.right.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "+\t\t\tflowInfo = this.right.analyseCode(currentScope, flowContext, flowInfo).unconditionalInits();", "+\t\t\tif (((this.bits & OperatorMASK) >> OperatorSHIFT) != AND) {", "+\t\t\t\tflowContext.expireNullCheckedFieldInfo();", "+\t\t\t}", "+\t\t\treturn flowInfo;"]}], "num": 40057}