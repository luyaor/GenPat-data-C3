{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8776101e34e97f176fe6c6141019806d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f43194ee940428c467cd9d605d721c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "741931b5ca85aa073f4fdd97bb1854b708311060", "commitAfterChange": "5280e1e8db473b5a94d57033a6d3cab2e44e385d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \t@Override \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "signatureAfterChange": " \t \t@Override \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "diff": ["-\t\tif (this.fileManager instanceof StandardJavaFileManager) {", "-\t\t\tStandardJavaFileManager javaFileManager = (StandardJavaFileManager) this.fileManager;", "+\t\tif (this.fileManager instanceof EclipseFileManager) {", "+\t\t\tEclipseFileManager javaFileManager = (EclipseFileManager) this.fileManager;", "+\t\t\tif ((javaFileManager.flags & EclipseFileManager.HAS_ENDORSED_DIRS) == 0", "+\t\t\t\t\t&& (javaFileManager.flags & EclipseFileManager.HAS_BOOTCLASSPATH) != 0) {", "+\t\t\t\tfileSystemClasspaths.addAll((ArrayList<? extends FileSystem.Classpath>) this.handleEndorseddirs(null));", "+\t\t\t}", "+\t\t\tif ((javaFileManager.flags & EclipseFileManager.HAS_EXT_DIRS) == 0", "+\t\t\t\t\t&& (javaFileManager.flags & EclipseFileManager.HAS_BOOTCLASSPATH) != 0) {", "+\t\t\t\tfileSystemClasspaths.addAll((ArrayList<? extends FileSystem.Classpath>) this.handleExtdirs(null));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba39770ad8a0d0f4126e035002984056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/EclipseCompilerTool.java", "commitBeforeChange": "741931b5ca85aa073f4fdd97bb1854b708311060", "commitAfterChange": "5280e1e8db473b5a94d57033a6d3cab2e44e385d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \t@Override \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "signatureAfterChange": " \t \t@Override \tprotected void setPaths(ArrayList bootclasspaths, \t\t\tString sourcepathClasspathArg, \t\t\tArrayList sourcepathClasspaths, \t\t\tArrayList classpaths, \t\t\tArrayList extdirsClasspaths, \t\t\tArrayList endorsedDirClasspaths, \t\t\tString customEncoding) throws InvalidInputException", "diff": ["-\t\tif (this.fileManager instanceof StandardJavaFileManager) {", "-\t\t\tStandardJavaFileManager javaFileManager = (StandardJavaFileManager) this.fileManager;", "+\t\tif (this.fileManager instanceof EclipseFileManager) {", "+\t\t\tEclipseFileManager javaFileManager = (EclipseFileManager) this.fileManager;", "+\t\t\tif ((javaFileManager.flags & EclipseFileManager.HAS_ENDORSED_DIRS) == 0", "+\t\t\t\t\t&& (javaFileManager.flags & EclipseFileManager.HAS_BOOTCLASSPATH) != 0) {", "+\t\t\t\tfileSystemClasspaths.addAll((ArrayList<? extends FileSystem.Classpath>) this.handleEndorseddirs(null));", "+\t\t\t}", "+\t\t\tif ((javaFileManager.flags & EclipseFileManager.HAS_EXT_DIRS) == 0", "+\t\t\t\t\t&& (javaFileManager.flags & EclipseFileManager.HAS_BOOTCLASSPATH) != 0) {", "+\t\t\t\tfileSystemClasspaths.addAll((ArrayList<? extends FileSystem.Classpath>) this.handleExtdirs(null));", "+\t\t\t}"]}], "num": 28538}