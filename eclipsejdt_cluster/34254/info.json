{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7aa45d508a4275fd300aff465218f115", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33edb810e1944c7f8ed3a871656a4a1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "9f862b0117f6b8af0086901bf4a77604f22ed115", "commitAfterChange": "866dce73531faf0bfbfbe21c857272fbb389e5f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tint count = initializations.length, i = 0;", "-\t\t\twhile (i < count) {", "-\t\t\t\tflowInfo = initializations[i++].analyseCode(scope, flowContext, flowInfo);", "+\t\t\tfor (int i = 0, count = initializations.length; i < count; i++) {", "+\t\t\t\tflowInfo = initializations[i].analyseCode(scope, flowContext, flowInfo);", "-\t\t\tint i = 0, count = increments.length;", "-\t\t\twhile (i < count)", "-\t\t\t\tactionInfo = increments[i++].analyseCode(scope, loopContext, actionInfo);", "+\t\t\tfor (int i = 0, count = increments.length; i < count; i++) {", "+\t\t\t\tactionInfo = increments[i].analyseCode(scope, loopContext, actionInfo);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8978ab3d6b1b42e74cd893947fb9edce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/ResourceChangedListener.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "diff": ["-\t\t\t//printDeltaInfo( delta );", "-\t\t\t", "-\t\t\t\tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager();", "-\t\t\t\tIFile f = (IFile)r;", "-\t\t\t\tif ( gfm.isParentFile( f ) )", "-\t\t\t\t{", "-\t\t\t\t\tgfm.parentFileDeleted( (IFile) r, null /* progress monitor */ );", "-\t\t\t\t}", "-\t\t\t\telse if ( gfm.isGeneratedFile( f ) )", "-\t\t\t\t{", "-\t\t\t\t\tgfm.generatedFileDeleted( f, null /*progress monitor */ );", "+\t\t\t\tfor (GeneratedFileManager gfm : GeneratedFileManager.getGeneratedFileManagers()) {", "+\t\t\t\t\tIFile f = (IFile)r;", "+\t\t\t\t\tif ( gfm.isParentFile( f ) )", "+\t\t\t\t\t{", "+\t\t\t\t\t\tgfm.parentFileDeleted( (IFile) r, null /* progress monitor */ );", "+\t\t\t\t\t}", "+\t\t\t\t\telse if ( gfm.isGeneratedFile( f ) )", "+\t\t\t\t\t{", "+\t\t\t\t\t\tgfm.generatedFileDeleted( f, null /*progress monitor */ );", "+\t\t\t\t\t}"]}], "num": 34254}