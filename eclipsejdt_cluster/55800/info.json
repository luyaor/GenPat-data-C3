{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4523e669b366f2147865cb793c3d41c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02aacc676f3d74bc8a9f25c52076dbf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "commitAfterChange": "e734477cf19ee0bbdf44ea8e0b55e663163c306b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprotected void updateDocComment()", "signatureAfterChange": " \tprotected void updateDocComment()", "diff": ["+\t\t// Signal tag missing description if necessary", "+\t\tswitch (this.tagWaitingForDescription) {", "+\t\t\tcase TAG_PARAM_VALUE:", "+\t\t\tcase TAG_THROWS_VALUE:", "+\t\t\t\tint start = (int) (this.identifierPositionStack[0] >>> 32);", "+\t\t\t\tint end = (int) this.identifierPositionStack[this.identifierPtr];", "+\t\t\t\tthis.sourceParser.problemReporter().javadocMissingTagDescriptionAfterReference(start, end, this.sourceParser.modifiers);", "+\t\t\t\tbreak;", "+\t\t\tcase NO_TAG_VALUE:", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tthis.sourceParser.problemReporter().javadocMissingTagDescription(TAG_NAMES[this.tagWaitingForDescription], this.tagSourceStart, this.tagSourceEnd, this.sourceParser.modifiers);", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tthis.tagWaitingForDescription = NO_TAG_VALUE;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca74ebb210cba28875e8898ecfd7790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "signatureAfterChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "diff": ["-\t\t\t// TODO (david) - Missing implementation", "+\t\t\t", "+\t\t\tswitch(this.completionKind) {", "+\t\t\t\tcase ANONYMOUS_CLASS_DECLARATION:", "+\t\t\t\tcase METHOD_REF:", "+\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "+\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\tthis.parameterPackageNames,", "+\t\t\t\t\t\t\tthis.parameterTypeNames);", "+\t\t\t\t\t//this.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t//\t\tthis.declarationSignature,", "+\t\t\t\t\t//\t\tthis.name,", "+\t\t\t\t\t//\t\tSignature.getParameterTypes(this.getSignature()));", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase METHOD_DECLARATION:", "+\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "+\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\tthis.parameterPackageNames,", "+\t\t\t\t\t\t\tthis.parameterTypeNames);", "+\t\t\t\t\t//char[][] parameterTypes = Signature.getParameterTypes(this.getSignature();", "+\t\t\t\t\t///this.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t//\t\tthis.declarationSignature,", "+\t\t\t\t\t//\t\tthis.name,", "+\t\t\t\t\t//\t\tparameterTypes);", "+\t\t\t\t\tif(this.parameterNames != null) {", "+\t\t\t\t\t\tthis.updateCompletion = true;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t"]}], "num": 55800}