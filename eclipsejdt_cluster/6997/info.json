{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae7b02d59a8bb9930043f30195ef2527", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7437cf9da5cf9ded3d03b64fb18f556d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "4facfcdf4a36f611ae455f345faa2a13f779251b", "commitAfterChange": "9b4626a240c7fe9f3a95f4bc274592915f73c7ef", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "diff": ["+\t\tmethodInfo.isAnnotation = methodDeclaration instanceof AnnotationMethodDeclaration;", "-\tif (isInRange){\t", "-\t\trequestor.exitMethod(methodDeclaration.declarationSourceEnd);", "+\tif (isInRange) {", "+\t\tif (methodDeclaration instanceof AnnotationMethodDeclaration) {", "+\t\t\tAnnotationMethodDeclaration annotationMethodDeclaration = (AnnotationMethodDeclaration) methodDeclaration;", "+\t\t\tExpression expression = annotationMethodDeclaration.defaultValue;", "+\t\t\tif (expression != null) {", "+\t\t\t\trequestor.exitMethod(methodDeclaration.declarationSourceEnd, expression.sourceStart, expression.sourceEnd);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} ", "+\t\trequestor.exitMethod(methodDeclaration.declarationSourceEnd, -1, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9082c820f3758ceab6dfcbf83d7389e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "94d47e986d9039a78cf3884e937a3af1f33fdf7a", "commitAfterChange": "50ebd5fafa3697bcc83ff6864ef26a8b932adc3c", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tprotected void setModifiers(FieldDeclaration fieldDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "signatureAfterChange": " \t \tprotected void setModifiers(EnumConstantDeclaration enumConstantDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "diff": ["+\t", "+\tprotected void setModifiers(EnumConstantDeclaration enumConstantDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration) {", "+\t\tswitch(this.ast.apiLevel) {", "+\t\t\tcase AST.JLS2_INTERNAL :", "+\t\t\t\tenumConstantDeclaration.internalSetModifiers(fieldDeclaration.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\t\tif (fieldDeclaration.annotations != null) {", "+\t\t\t\t\tenumConstantDeclaration.setFlags(enumConstantDeclaration.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS3 :", "+\t\t\t\tthis.scanner.resetTo(fieldDeclaration.declarationSourceStart, fieldDeclaration.sourceStart);", "+\t\t\t\tthis.setModifiers(enumConstantDeclaration, fieldDeclaration.annotations);", "+\t\t}"]}], "num": 6997}