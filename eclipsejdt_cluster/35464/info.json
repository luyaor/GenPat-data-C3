{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "387bf92fbc788aabd030b3b411e206af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fe6dbe4655c40546d2d6d477f8d5e5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1fb602b75e740fee79145d5e2e5fdf04a9fb5ee8", "commitAfterChange": "e0c65d48fbfbc2b240962f72967bed335ff04a38", "methodNumberBeforeChange": 805, "methodNumberAfterChange": 805, "signatureBeforeChange": " public void test0785()", "signatureAfterChange": " public void test0785()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tgetLonger(list, set);\\n\" +", "-\t\t\"\t^^^^^^^^^\\n\" +", "-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (HashSet<capture#1-of ?>, ArrayList<capture#2-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tgetLonger(list, set);\\n\" + ", "+\t\t\"\t^^^^^^^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (HashSet<capture#3-of ?>, ArrayList<capture#4-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de51a80085aae3264586c2cfe9c02f3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1fb602b75e740fee79145d5e2e5fdf04a9fb5ee8", "commitAfterChange": "e0c65d48fbfbc2b240962f72967bed335ff04a38", "methodNumberBeforeChange": 807, "methodNumberAfterChange": 807, "signatureBeforeChange": " public void test0787()", "signatureAfterChange": " public void test0787()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tgetLonger(list, set);\\n\" +", "-\t\t\"\t^^^^^^^^^\\n\" +", "-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X<U> is not applicable for the arguments (HashSet<capture#1-of ?>, ArrayList<capture#2-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends U>>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\tgetLonger(list, set);\\n\" + ", "+\t\t\"\t^^^^^^^^^\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X<U> is not applicable for the arguments (HashSet<capture#3-of ?>, ArrayList<capture#4-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends U>>\\n\" + "]}], "num": 35464}