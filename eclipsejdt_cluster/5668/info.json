{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8872a8c7f4c72b470ba47873e035fb19", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d1b2719938d6e98d64607f337019fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "8cf1dcdf2235b54b4116fb6f086a0d218e6b26f7", "commitAfterChange": "45fa88428d5d04389be0956547a1793c4e66bac3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void traverse(ASTVisitor visitor, BlockScope blockScope)", "signatureAfterChange": "  public void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["-\t\treceiver.traverse(visitor, blockScope);", "+\t\tthis.receiver.traverse(visitor, blockScope);", "-\t\tif (arguments != null) {", "-\t\t\tint argumentsLength = arguments.length;", "+\t\tif (this.arguments != null) {", "+\t\t\tint argumentsLength = this.arguments.length;", "-\t\t\t\targuments[i].traverse(visitor, blockScope);", "+\t\t\t\tthis.arguments[i].traverse(visitor, blockScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca082c50b5b0f93fb2d7811ad3e102f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  public String toString(int tab)", "diff": ["-\tpublic String toString(int tab) {", "-", "-\t\tString s = basicToString(tab);", "-\t\tfor (int i = 0; i < subscopeCount; i++)", "-\t\t\tif (subscopes[i] instanceof BlockScope)", "-\t\t\t\ts += ((BlockScope) subscopes[i]).toString(tab + 1) + \"\\n\"; //$NON-NLS-1$", "-\t\treturn s;", "-\t}", "+public String toString(int tab) {", "+\tString s = basicToString(tab);", "+\tfor (int i = 0; i < this.subscopeCount; i++)", "+\t\tif (this.subscopes[i] instanceof BlockScope)", "+\t\t\ts += ((BlockScope) this.subscopes[i]).toString(tab + 1) + \"\\n\"; //$NON-NLS-1$", "+\treturn s;", "+}"]}], "num": 5668}