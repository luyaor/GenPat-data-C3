{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc992c45876ec701dcf9848fd635337c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd04aa1677b4006b9ca1e4483ff9d10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "commitAfterChange": "fba755dc35e762320b95c7a5ecdbba6b88028f12", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void checkClassFileUsingInputStream(String compliance, String directoryName, String className, String source, String expectedOutput, int mode)", "signatureAfterChange": " \tprivate void checkClassFileUsingInputStream(String compliance, String directoryName, String className, String source, String expectedOutput, int mode) throws IOException", "diff": ["-\tprivate void checkClassFileUsingInputStream(String compliance, String directoryName, String className, String source, String expectedOutput, int mode) {", "+\tprivate void checkClassFileUsingInputStream(String compliance, String directoryName, String className, String source, String expectedOutput, int mode) throws IOException {", "+\t\tif (compliance.compareTo(this.complianceLevel) > 0) return; // don't run if compliance is more than running VM compliance", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2264f73c01743aab3b763befc35bd15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "142c1803cd69a49b32423044506cd57c4ca51a87", "commitAfterChange": "fba755dc35e762320b95c7a5ecdbba6b88028f12", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void checkClassFile(String compliance, String directoryName, String className, String source, String expectedOutput, int mode)", "signatureAfterChange": " \tprivate void checkClassFile(String compliance, String directoryName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException", "diff": ["-\tprivate void checkClassFile(String compliance, String directoryName, String className, String source, String expectedOutput, int mode) {", "+\tprivate void checkClassFile(String compliance, String directoryName, String className, String source, String expectedOutput, int mode) throws ClassFormatException, IOException {", "+\t\tif (compliance.compareTo(this.complianceLevel) > 0) return; // don't run if compliance is more than running VM compliance", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);"]}], "num": 69220}