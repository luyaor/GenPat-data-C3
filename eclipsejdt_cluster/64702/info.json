{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f995c130efe168e6b8fb7b6ef4ad2b1a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "617d4c79a741a7f51b2ad397b311159e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "f36c718beb8bf08713390b2fd835e572041478ae", "commitAfterChange": "de0ec0255833f27449d5f59da580e82b41fe6f0d", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 75, "signatureBeforeChange": " protected void consumeCastExpressionWithNameArray()", "signatureAfterChange": " protected void consumeCastExpressionWithNameArray()", "diff": ["-\t// CastExpression ::= PushLPAREN Name Dims PushRPAREN InsideCastExpression UnaryExpressionNotPlusMinus", "+\t// CastExpression ::= PushLPAREN Name Dims AdditionalBoundsListOpt PushRPAREN InsideCastExpression UnaryExpressionNotPlusMinus", "+\tTypeReference[] bounds = null;", "+\tint additionalBoundsLength = this.genericsLengthStack[this.genericsLengthPtr--];", "+\tif (additionalBoundsLength > 0) {", "+\t\tbounds = new TypeReference[additionalBoundsLength + 1];", "+\t\tthis.genericsPtr -= additionalBoundsLength;", "+\t\tSystem.arraycopy(this.genericsStack, this.genericsPtr + 1, bounds, 1, additionalBoundsLength);", "+\t}", "-", "-\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr], castType = getTypeReference(this.intStack[this.intPtr--]));", "+\t", "+\tif (additionalBoundsLength > 0) {", "+\t\tbounds[0] = getTypeReference(this.intStack[this.intPtr--]);", "+\t\tcastType = new IntersectionCastTypeReference(bounds);", "+\t} else {", "+\t\tcastType = getTypeReference(this.intStack[this.intPtr--]);", "+\t}", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr], castType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8454273ca16eadffac13c87889117ef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "f36c718beb8bf08713390b2fd835e572041478ae", "commitAfterChange": "de0ec0255833f27449d5f59da580e82b41fe6f0d", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void consumeCastExpressionWithPrimitiveType()", "signatureAfterChange": " protected void consumeCastExpressionWithPrimitiveType()", "diff": ["-\t// CastExpression ::= PushLPAREN PrimitiveType Dimsopt PushRPAREN InsideCastExpression UnaryExpression", "+\t// CastExpression ::= PushLPAREN PrimitiveType Dimsopt AdditionalBoundsListOpt PushRPAREN InsideCastExpression UnaryExpression", "+\tTypeReference[] bounds = null;", "+\tint additionalBoundsLength = this.genericsLengthStack[this.genericsLengthPtr--];", "+\tif (additionalBoundsLength > 0) {", "+\t\tbounds = new TypeReference[additionalBoundsLength + 1];", "+\t\tthis.genericsPtr -= additionalBoundsLength;", "+\t\tSystem.arraycopy(this.genericsStack, this.genericsPtr + 1, bounds, 1, additionalBoundsLength);", "+\t}", "+\t", "-", "-\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr], castType = getTypeReference(this.intStack[this.intPtr--]));", "+\tif (additionalBoundsLength > 0) {", "+\t\tbounds[0] = getTypeReference(this.intStack[this.intPtr--]);", "+\t\tcastType = new IntersectionCastTypeReference(bounds); ", "+\t} else {", "+\t\tcastType = getTypeReference(this.intStack[this.intPtr--]);", "+\t}", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr], castType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62660ccae1abad5ac2dbf8ce80c22d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "f36c718beb8bf08713390b2fd835e572041478ae", "commitAfterChange": "de0ec0255833f27449d5f59da580e82b41fe6f0d", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " protected void consumeInsideCastExpression()", "signatureAfterChange": " protected void consumeInsideCastExpression()", "diff": ["+\tTypeReference[] bounds = null;", "+\tint additionalBoundsLength = this.genericsLengthStack[this.genericsLengthPtr--];", "+\tif (additionalBoundsLength > 0) {", "+\t\tbounds = new TypeReference[additionalBoundsLength + 1];", "+\t\tthis.genericsPtr -= additionalBoundsLength;", "+\t\tSystem.arraycopy(this.genericsStack, this.genericsPtr + 1, bounds, 1, additionalBoundsLength);", "+\t}", "+\t", "+\tif (additionalBoundsLength > 0) {", "+\t\tbounds[0] = getTypeReference(this.intStack[this.intPtr--]);", "+\t\tcastType = new IntersectionCastTypeReference(bounds); ", "+\t}"]}], "num": 64702}