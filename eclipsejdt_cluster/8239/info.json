{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49ae49695ff1267ad856e988f639c121", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f6fe0da151294d1b79007102e7facd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "f463f267bd3e26fe15afb712785b8045bca4918d", "commitAfterChange": "127c5aac940d6a1c5a28540905b27ce397eeca14", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public int nullStatus(FlowInfo flowInfo)", "signatureAfterChange": "  public int nullStatus(FlowInfo flowInfo)", "diff": ["+\t\t\t\tif (flowInfo.isPotentiallyNull(local))", "+\t\t\t\t\treturn FlowInfo.POTENTIALLY_NULL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71c8f65620e514ba43e577c5b0a67dc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "7b0bea69584248f2e93748bb180ed48f6c7ea0f8", "commitAfterChange": "8144f6bdc1d7b4c0f8568d1825064d1e42353926", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles)", "signatureAfterChange": " private void generateMethodInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles)", "diff": ["-\t\tIMethod method = new BinaryMethod((JavaElement)type, selector, pNames);", "+\t\tBinaryMethod method = new BinaryMethod((JavaElement)type, selector, pNames);", "+\t\t", "+\t\t// ensure that 2 binary methods with the same signature but with different return types have different occurence counts.", "+\t\t// (case of bridge methods in 1.5)", "+\t\twhile (newElements.containsKey(method))", "+\t\t\tmethod.occurrenceCount++;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d762e54e81a1e791b802e9e752ac9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "f463f267bd3e26fe15afb712785b8045bca4918d", "commitAfterChange": "127c5aac940d6a1c5a28540905b27ce397eeca14", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic int nullStatus(FlowInfo flowInfo)", "signatureAfterChange": "  public int nullStatus(FlowInfo flowInfo)", "diff": ["-\tpublic int nullStatus(FlowInfo flowInfo) {", "+public int nullStatus(FlowInfo flowInfo) {", "-\t\tif (/* (this.bits & IsNonNull) != 0 || */", "-\t\t\tthis.constant != null && this.constant != Constant.NotAConstant)", "-\t\treturn FlowInfo.NON_NULL; // constant expression cannot be null", "+\tif (/* (this.bits & IsNonNull) != 0 || */", "+\t\tthis.constant != null && this.constant != Constant.NotAConstant)", "+\treturn FlowInfo.NON_NULL; // constant expression cannot be null", "+\t\tif (flowInfo.isPotentiallyNull(local))", "+\t\t\treturn FlowInfo.POTENTIALLY_NULL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4216849a0bb227b4d632aa2da62d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "82ebc709013252385fce65c14aa676e8e0d39c6f", "commitAfterChange": "e2360e075300bd271e5e3fd90537b7dce7bdaa00", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "\r \tstatic int kindFromString(String kindStr)", "signatureAfterChange": "\r \tstatic int kindFromString(String kindStr)", "diff": ["+\t\tif (kindStr.equalsIgnoreCase(\"container\")) //$NON-NLS-1$\r", "+\t\t\treturn IClasspathEntry.CPE_CONTAINER;\r"]}], "num": 8239}