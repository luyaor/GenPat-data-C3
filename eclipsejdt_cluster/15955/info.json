{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "660b0d1221fd6316199d944572987d7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6feec432bbbd8812a50e3bd401e21175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "e977c09c74ff39253b490f38737af69c92876b28", "commitAfterChange": "a06af0c2394d442a3929ed39e37be327e9141456", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t\t\t\tthrow new BuildException(Messages.getString(\"ant.jdtadapter.error.noBootclasspath\"));  //$NON-NLS-1$", "+\t\t\t\tthrow new BuildException(Util.getString(\"ant.jdtadapter.error.noBootclasspath\"));  //$NON-NLS-1$", "-\t\t\t\t\tthrow new BuildException(Messages.getString(\"ant.jdtadapter.error.cannotInfereBootclasspath\", JavaEnvUtils.getJavaVersion()));  //$NON-NLS-1$", "+\t\t\t\t\tthrow new BuildException(Util.getString(\"ant.jdtadapter.error.cannotInfereBootclasspath\", JavaEnvUtils.getJavaVersion()));  //$NON-NLS-1$", "-\t\t\t\tthrow new BuildException(Messages.getString(\"ant.jdtadapter.error.cannotInfereBootclasspath\", JavaEnvUtils.getJavaVersion()));  //$NON-NLS-1$", "+\t\t\t\tthrow new BuildException(Util.getString(\"ant.jdtadapter.error.cannotInfereBootclasspath\", JavaEnvUtils.getJavaVersion()));  //$NON-NLS-1$", "-                attributes.log(Messages.getString(\"ant.jdtadapter.info.ignoringMemoryInitialSize\"), Project.MSG_WARN); //$NON-NLS-1$", "+                attributes.log(Util.getString(\"ant.jdtadapter.info.ignoringMemoryInitialSize\"), Project.MSG_WARN); //$NON-NLS-1$", "-                attributes.log(Messages.getString(\"ant.jdtadapter.info.ignoringMemoryMaximumSize\"), Project.MSG_WARN); //$NON-NLS-1$", "+                attributes.log(Util.getString(\"ant.jdtadapter.info.ignoringMemoryMaximumSize\"), Project.MSG_WARN); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b0c49e459b3b8314b932470edf5ffe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "c15944a64474c58cb165efb5a910837b6b05f5d1", "commitAfterChange": "cacb7563d725ef0efc34d3135fd8634df300fab4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t\t\tIPath jre_lib = JavaCore.getClasspathVariable(\"JRE_LIB\"); //$NON-NLS-1$", "-\t\t\tif (jre_lib == null) {", "-\t\t\t\tthrow new BuildException(Util.bind(\"ant.jdtadapter.error.missingJRELIB\")); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tcmd.createArgument().setPath(new Path(null, jre_lib.toOSString()));        \t", "+            String javaHome = System.getProperty(\"java.home\");//$NON-NLS-1$", "+            if (javaHome == null) {", "+\t\t\t\tthrow new BuildException(Messages.getString(\"ant.jdtadapter.error.noBootclasspath\"));  //$NON-NLS-1$", "+            } else if (JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_4)", "+            \t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_3)", "+            \t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_2)) {", "+            \tFile f = new File(javaHome, \"/lib/rt.jar\");//$NON-NLS-1$", "+\t        \tif (f.exists()) {", "+\t\t\t\t\tcmd.createArgument().setPath(new Path(null, f.getAbsolutePath()));        \t", "+        \t\t} else {", "+\t\t\t\t\tthrow new BuildException(Messages.getString(\"ant.jdtadapter.error.cannotInfereBootclasspath\", JavaEnvUtils.getJavaVersion()));  //$NON-NLS-1$", "+\t        \t}", "+           \t} else {", "+\t\t\t\tthrow new BuildException(Messages.getString(\"ant.jdtadapter.error.cannotInfereBootclasspath\", JavaEnvUtils.getJavaVersion()));  //$NON-NLS-1$", "+           \t}", "-                attributes.log(Util.bind(\"ant.jdtadapter.error.ignoringMemoryInitialSize\"), Project.MSG_WARN);//$NON-NLS-1$", "+                attributes.log(Messages.getString(\"ant.jdtadapter.info.ignoringMemoryInitialSize\"), Project.MSG_WARN); //$NON-NLS-1$", "-                attributes.log(Util.bind(\"ant.jdtadapter.error.ignoringMemoryMaximumSize\"), Project.MSG_WARN);//$NON-NLS-1$", "+                attributes.log(Messages.getString(\"ant.jdtadapter.info.ignoringMemoryMaximumSize\"), Project.MSG_WARN); //$NON-NLS-1$"]}], "num": 15955}