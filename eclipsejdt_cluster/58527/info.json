{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "421347b2188d7c9e7a737a494ebcf1b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89474352d1768d997dd0082cc3737ba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "commitAfterChange": "898edf38bab911ee6304102b5db4bd2760122695", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": " \t  \t  Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit)", "diff": ["-\t  */", "-\t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit) {", "+\t  Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit) {", "- \t\t\t\tTypeBinding typeBinding = null;", "- \t\t\t\tif (this.scanner.isAtParametersStart()) {", "+\t\t\t\tTypeBinding typeBinding = null;", "+\t\t\t\tif (this.scanner.isAtParametersStart()) {", "- \t\t\t\t\t\t// parameterized type binding", "+\t\t\t\t\t\t// parameterized type binding", "- \t\t\t\t} else if (binding.typeVariables().length > 0)", "- \t\t\t\t\t// raw type binding", "- \t\t\t\t\ttypeBinding = this.environment.createRawType((ReferenceBinding) binding, null/*no enclosing type*/);", "- \t\t\t\telse", "+\t\t\t\t} else if (binding.typeVariables().length > 0)", "+\t\t\t\t\t// raw type binding", "+\t\t\t\t\ttypeBinding = this.environment.createRawType((ReferenceBinding) binding, null/*no enclosing type*/);", "+\t\t\t\telse", "+\t \t\t\t} else if (this.scanner.isAtTypeVariableStart()) {", "+\t \t\t\t\treturn getTypeVariableBinding((SourceTypeBinding) binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2755fe7db952bd584d2613432bea674", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "a1fa0960e8bf8c2d86b0b4556cf5470457cb514c", "commitAfterChange": "0ea38f06cd1227fc139bddac2eec897cb8fbed35", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit, CompilationUnitResolver resolver)", "signatureAfterChange": " \t Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit, CompilationUnitResolver resolver)", "diff": ["-\t \t\t\tSourceTypeBinding binding = getTypeBinding(parsedUnit, parsedUnit.types, typeName);", "+\t \t\t\tTypeBinding binding = getTypeBinding(parsedUnit, parsedUnit.types, typeName, resolver);", "-\t \t\t\t\t\treturn binding;", "+\t \t\t\t\t\tif (this.scanner.isAtTypeParameterStart())", "+\t \t\t\t\t\t\t// parameterized type binding", "+\t\t \t\t\t\t\treturn getParameterizedTypeBinding((ReferenceBinding) binding, null/*no enclosing type*/, resolver);", "+\t \t\t\t\t\telse if (binding.typeVariables().length > 0)", "+\t \t\t\t\t\t\t// raw type binding", "+\t \t\t\t\t\t\treturn resolver.lookupEnvironment.createRawType((ReferenceBinding) binding, null/*no enclosing type*/);", "+\t \t\t\t\t\telse", "+\t \t\t\t\t\t\t// non-generic type binding", "+\t \t\t\t\t\t\treturn binding;", "-\t \t\t\t\t\treturn getFieldBinding(binding.fields);", "+\t \t\t\t\t\treturn getFieldBinding(((SourceTypeBinding) binding).fields);", "-\t \t\t\t\t\treturn getMethodBinding(binding.methods, resolver);", "+\t \t\t\t\t\treturn getMethodBinding(((SourceTypeBinding) binding).methods, resolver);", "+\t \t\t\t\tcase BindingKeyScanner.TYPE_PARAMETER:", "+\t \t\t\t\t\tif (this.scanner.isAtTypeParameterStart())", "+\t\t \t\t\t\t\treturn getGenericTypeBinding((SourceTypeBinding) binding, resolver);", "+\t \t\t\t\t\telse", "+\t \t\t\t\t\t\treturn binding;"]}], "num": 58527}