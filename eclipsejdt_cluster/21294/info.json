{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eecf997d8ecb2ba2d4af4bc3c849fdc1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea13f5bafa737c0b23e0e192cfda3bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "97f3eec8c4b51a2e96520e6a724a68ec7b14f566", "commitAfterChange": "92fb97a4f173da2e3d9573a5ca62b4b017b1023c", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 348, "signatureBeforeChange": " public final void memberValueArrayInitializer(int length)", "signatureAfterChange": " public final void memberValueArrayInitializer(int length)", "diff": ["-\tMemberValueArrayInitializer memberValueArrayInitializer = new MemberValueArrayInitializer();", "+\tArrayInitializer memberValueArrayInitializer = new ArrayInitializer();", "-\t\tSystem.arraycopy(this.expressionStack, this.expressionPtr + 1, memberValueArrayInitializer.memberValues = new Expression[length], 0, length);", "+\t\tSystem.arraycopy(this.expressionStack, this.expressionPtr + 1, memberValueArrayInitializer.expressions = new Expression[length], 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4471fc1fa57e0b68ea09e6e48643ee62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "1f258635fb49ca32f9def120a3d2f7561eca1435", "commitAfterChange": "f3cbbf9c2974017737d02d4ae4c1412f1a96ce0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void updateFromParserState()", "signatureAfterChange": " public void updateFromParserState()", "diff": ["+\t\t\t\tMemberValuePair[] memberValuePairs = null;", "+\t\t\t\t\tSystem.arraycopy(parser.astStack, argStart, memberValuePairs = new MemberValuePair[argLength], 0, argLength);", "+\t\t\t\t", "+\t\t\t\tif(memberValuePairs != null) {", "+\t\t\t\t\tSystem.arraycopy(memberValuePairs, 0, parser.astStack, parser.astPtr + 1, memberValuePairs.length);", "+\t\t\t\t\tparser.astPtr += memberValuePairs.length;", "+\t\t\t\t\tparser.astLengthStack[++parser.astLengthPtr] = memberValuePairs.length;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81c88f73a5e6eaa37d7a40322e4ed1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "24242f27a56569515f3a766b79af5b4f6c52fffe", "commitAfterChange": "270b2d0dc66fd2f8c8012264ce82bca4953b85cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  boolean isValueProvidedUsingAnnotation(FieldDeclaration fieldDecl)", "signatureAfterChange": "  boolean isValueProvidedUsingAnnotation(FieldDeclaration fieldDecl)", "diff": ["+\t\t\t} else if (annotation.resolvedType.id == TypeIds.T_OrgSpringframeworkBeansFactoryAnnotationAutowired) {", "+\t\t\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs();", "+\t\t\t\tif (memberValuePairs == Annotation.NoValuePairs)", "+\t\t\t\t\treturn true;", "+\t\t\t\tfor (int j = 0; j < memberValuePairs.length; j++) {", "+\t\t\t\t\tif (CharOperation.equals(memberValuePairs[j].name, TypeConstants.REQUIRED))", "+\t\t\t\t\t\treturn memberValuePairs[j].value instanceof TrueLiteral;", "+\t\t\t\t}"]}], "num": 21294}