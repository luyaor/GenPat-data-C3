{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "112d50703360aa03113ceb31d648bac7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c469c39e1bc56186d46e02a17fb108f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTypeHierarchyTests.java", "commitBeforeChange": "7882956f959d3c6393e0d8829373f1d0522732ab", "commitAfterChange": "5147f5a5f17d6e4dce9e06801af75e51b27b5773", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\t}", "-\t\t", "-\t\t// Print statistics", "-\t\tif (TESTS_COUNT == 0) {", "-\t\t\t// Print statistics", "-\t\t\tSystem.out.println(\"-------------------------------------\");", "-\t\t\tSystem.out.println(\"Type Hierarchy test statistics:\");", "-\t\t\tNumberFormat intFormat = NumberFormat.getIntegerInstance();", "-\t\t\tSystem.out.println(\"  - \"+intFormat.format(COUNTERS[0])+\" all types found.\");", "-\t\t\tSystem.out.println(\"-------------------------------------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f812845c4fa2437a1b890a1acfecddb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceCompletionTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate void complete( \t\t\tString testName, \t\t\tString projectName, \t\t\tString packageName, \t\t\tString unitName, \t\t\tString completeAt, \t\t\tString completeBehind, \t\t\tint[] ignoredKinds, \t\t\tint warmupCount, \t\t\tint iterationCount) throws JavaModelException", "signatureAfterChange": " \tprivate void complete( \t\t\tString testName, \t\t\tString projectName, \t\t\tString packageName, \t\t\tString unitName, \t\t\tString completeAt, \t\t\tString completeBehind, \t\t\tint[] ignoredKinds, \t\t\tint warmupCount, \t\t\tint iterationCount) throws JavaModelException", "diff": ["-\t\ttagAsSummary(testName, Dimension.CPU_TIME, false/* do NOT put in fingerprint*/);", "+\t\ttagAsSummary(testName, false); // do NOT put in fingerprint", "-\t\t", "-\t\t// Measure loops", "+", "+\t\t// Clean memory", "+\t\trunGc();", "+", "+\t\t// Measures", "-\t\t// Commit measure", "+\t\t// Commit", "-\t\t", "-\t\t// Print statistics", "-\t\tSystem.out.println(\"-------------------------------------\");", "-\t\tSystem.out.println(\"Completion performance test statistics:\");", "-\t\tNumberFormat intFormat = NumberFormat.getIntegerInstance();", "-\t\tSystem.out.println(\"  - \"+intFormat.format(iterationCount)+\" completions have been performed\");", "-\t\tSystem.out.println(\"  - \"+intFormat.format(requestor.proposalCount)+\" proposals have been proposed\");", "-\t\tSystem.out.println(\"-------------------------------------\\n\");"]}], "num": 71657}