{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "732dd93745674152f5c7a43f2706d0b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bfd013b5481832c8a6ed370cffd1624", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "5e37111f16a5b67ba28515808a13a4062d45b23e", "commitAfterChange": "45a31ddc243181df16e6406f1b70f955ef191113", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tJavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["-\t\tJavaProject project) {", "+\t\tfinal JavaProject project) {", "-\t\tIndexManager indexManager = manager.getIndexManager();", "+\t\tfinal IndexManager indexManager = manager.getIndexManager();", "-\t\t\t\t\tindexManager.removeSourceFolderFromIndex(project, oldResolvedPath[i].getPath());", "+\t\t\t\t\tfinal IPath path = oldResolvedPath[i].getPath();", "+\t\t\t\t\tpostAction(new IPostAction() {", "+\t\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\t\treturn path.toString();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\t\tindexManager.removeSourceFolderFromIndex(project, path);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}, ", "+\t\t\t\t\tREMOVEALL_APPEND);", "-\t\t\t\t\t\t\tIPath newPath = newResolvedPath[i].getPath();", "+\t\t\t\t\t\t\tfinal IPath newPath = newResolvedPath[i].getPath();", "-\t\t\t\t\t\t\t\tindexManager.indexLibrary(newPath, project.getProject());", "+\t\t\t\t\t\t\t\tpostAction(new IPostAction() {", "+\t\t\t\t\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\t\t\t\t\treturn newPath.toString();", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\t\t\t\t\tindexManager.indexLibrary(newPath, project.getProject());", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}, ", "+\t\t\t\t\t\t\t\tREMOVEALL_APPEND);", "-\t\t\t\t\t\t\tindexManager.indexSourceFolder(project, newResolvedPath[i].getPath());", "+\t\t\t\t\t\t\tfinal IPath path = newResolvedPath[i].getPath();", "+\t\t\t\t\t\t\tpostAction(new IPostAction() {", "+\t\t\t\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\t\t\t\treturn path.toString();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\t\t\t\tindexManager.indexSourceFolder(project, path);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}, ", "+\t\t\t\t\t\t\tREMOVEALL_APPEND);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82254d86df89a8cf61c43b0a98cf325e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "6e3659bcc81a697d6dd17eb7b12230c5c5e2e02e", "commitAfterChange": "84c253c6de5d6b04e227efb942ee9828a865cfbe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tfinal JavaProject project)", "diff": ["-", "+\t\t\t\t", "-\t\t\t\t// Remove the .java files from the index.", "-\t\t\t\t// Note that .class files belong to binary folders which can be shared, ", "-\t\t\t\t// so leave the index for .class files.", "-\t\t\t\tif (indexManager != null && changeKind == IClasspathEntry.CPE_SOURCE) {", "+\t\t\t\t// Remove the .java files from the index for a source folder", "+\t\t\t\t// For a lib folder or a .jar file, remove the corresponding index if not shared.", "+\t\t\t\tif (indexManager != null) {", "-\t\t\t\t\tfinal char[][] exclusionPatterns = ((ClasspathEntry)oldEntry).fullExclusionPatternChars();", "-\t\t\t\t\tpostAction(new IPostAction() {", "-\t\t\t\t\t\tpublic String getID() {", "-\t\t\t\t\t\t\treturn path.toString();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tpublic void run() throws JavaModelException {", "-\t\t\t\t\t\t\tindexManager.removeSourceFolderFromIndex(project, path, exclusionPatterns);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}, ", "-\t\t\t\t\tREMOVEALL_APPEND);", "+\t\t\t\t\tswitch (changeKind) {", "+\t\t\t\t\t\tcase IClasspathEntry.CPE_SOURCE:", "+\t\t\t\t\t\t\tfinal char[][] exclusionPatterns = ((ClasspathEntry)oldEntry).fullExclusionPatternChars();", "+\t\t\t\t\t\t\tpostAction(new IPostAction() {", "+\t\t\t\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\t\t\t\treturn path.toString();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\t\t\t\tindexManager.removeSourceFolderFromIndex(project, path, exclusionPatterns);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}, ", "+\t\t\t\t\t\t\tREMOVEALL_APPEND);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:", "+\t\t\t\t\t\t\tfinal DeltaProcessor deltaProcessor = manager.deltaProcessor;", "+\t\t\t\t\t\t\tpostAction(new IPostAction() {", "+\t\t\t\t\t\t\t\tpublic String getID() {", "+\t\t\t\t\t\t\t\t\treturn path.toString();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\t\t\t\t\tif (deltaProcessor.otherRoots.get(path) == null) { // if root was not shared", "+\t\t\t\t\t\t\t\t\t\tindexManager.removeIndex(path);", "+\t\t\t\t\t\t\t\t\t\t// TODO: (kent) we could just remove the in-memory index and have the indexing check for timestamps", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}, ", "+\t\t\t\t\t\t\tREMOVEALL_APPEND);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}\t\t"]}], "num": 57842}