{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfd1ed4df11ce0932cbeccd9fd95f22a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be444c1770d7e473407b518f065dc03d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "08c130b51e222d1dc818f74430195d7cc0d9ba9c", "commitAfterChange": "f44833f9e9c6c61508713666b8c272384401715c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate static TypeReference createTypeReference(char[] type, HashSetOfCharArrayArray typeNames)", "signatureAfterChange": " \t \tprivate TypeReference createTypeReference(String typeSignature)", "diff": ["-\tprivate static TypeReference createTypeReference(char[] type, HashSetOfCharArrayArray typeNames) {", "-\t\t/* count identifiers and dimensions */", "-\t\tint max = type.length;", "-\t\tint dimStart = max;", "-\t\tint dim = 0;", "-\t\tint identCount = 1;", "-\t\tfor (int i = 0; i < max; i++) {", "-\t\t\tswitch (type[i]) {", "-\t\t\t\tcase '<' :", "-\t\t\t\t\treturn null;", "-\t\t\t\tcase '[' :", "-\t\t\t\t\tif (dim == 0)", "-\t\t\t\t\t\tdimStart = i;", "-\t\t\t\t\tdim++;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '.' :", "-\t\t\t\t\tidentCount++;", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t/* rebuild identifiers and dimensions */", "-\t\tif (identCount == 1) { // simple type reference", "-\t\t\tif (dim == 0) {", "-\t\t\t\treturn new SingleTypeReference(type, 0);", "-\t\t\t} else {", "-\t\t\t\tchar[] identifier = new char[dimStart];", "-\t\t\t\tSystem.arraycopy(type, 0, identifier, 0, dimStart);", "-\t\t\t\treturn new ArrayTypeReference(identifier, dim, 0);", "-\t\t\t}", "-\t\t} else { // qualified type reference", "-\t\t\tchar[][] identifiers =\tCharOperation.splitOn('.', type, 0, dimStart);", "-\t\t\tif (typeNames != null)", "-\t\t\t\ttypeNames.add(identifiers);", "-\t\t\tif (dim == 0) {", "-\t\t\t\treturn new QualifiedTypeReference(identifiers, new long[identifiers.length]);", "-\t\t\t} else {", "-\t\t\t\treturn new ArrayQualifiedTypeReference(identifiers, dim, new long[identifiers.length]);", "-\t\t\t}", "+\t", "+\tprivate TypeReference createTypeReference(String typeSignature) {", "+\t\tTypeReference result = createTypeReference(typeSignature, 0, 0);", "+\t\tif (typeNames != null && result instanceof QualifiedTypeReference) {", "+\t\t\ttypeNames.add(((QualifiedTypeReference)result).tokens);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d859995edbbc408cc617128f7da5a49b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate TypeReference createTypeReference( \t\tchar[] typeSignature, \t\tint start, \t\tint end)", "signatureAfterChange": " \tprivate TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "diff": ["-\t\tchar[] typeSignature,", "+\t\tchar[] typeName,", "-\t\t/* count identifiers and dimensions */", "-\t\tint max = typeSignature.length;", "-\t\tint dimStart = max;", "-\t\tint dim = 0;", "+\t\tint length = typeName.length;", "+\t\tthis.namePos = 0;", "+\t\tTypeReference type = decodeType(typeName, length, start, end);", "+\t\treturn type;", "+\t}", "-\t\tfor (int i = 0; i < max; i++) {", "-\t\t\tswitch (typeSignature[i]) {", "-\t\t\t\t\tif (dim == 0)", "-\t\t\t\t\t\tdimStart = i;", "-\t\t\t\tcase '.' :", "-\t\t\t\t\tidentCount++;", "-\t\t/* rebuild identifiers and dimensions */", "-\t\tif (identCount == 1) { // simple type reference", "-\t\t\tif (dim == 0) {", "-\t\t\t\treturn new SingleTypeReference(typeSignature, (((long) start )<< 32) + end);", "-\t\t\t} else {", "-\t\t\t\tchar[] identifier = new char[dimStart];", "-\t\t\t\tSystem.arraycopy(typeSignature, 0, identifier, 0, dimStart);", "-\t\t\t\treturn new ArrayTypeReference(identifier, dim, (((long) start) << 32) + end);", "-\t\t} else { // qualified type reference", "-\t\t\tchar[][] identifiers =", "-\t\t\t\tCharOperation.splitOn('.', typeSignature, 0, dimStart);", "-\t\t\tif (dim == 0) {", "-\t\t\t\treturn new QualifiedTypeReference(identifiers, positions);", "-\t\t\t} else {", "-\t\t\t\treturn new ArrayQualifiedTypeReference(identifiers, dim, positions);", "-\t\t\t}"]}], "num": 40531}