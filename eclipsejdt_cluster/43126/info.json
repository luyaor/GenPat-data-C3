{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5eef3d3abb4f6efc09936e872d0e1651", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4884e73ce5614a730a16cb4136ae03e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "signatureAfterChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "diff": ["-\tbuildFileOfIntFor(prefix + (++i) + \".rsc\", \"terminal_index\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tchar[] newTerminalIndex = buildFileOfIntFor(prefix + (++i) + \".rsc\", \"terminal_index\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "-\tst = new java.util.StringTokenizer(new String(contents), \"\\t\\n\\r=#\");  //$NON-NLS-1$", "+\tst = new java.util.StringTokenizer(new String(contents), \"\\t\\n\\r#\");  //$NON-NLS-1$", "+\t", "+\tbuildFilesForRecoveryTemplates(", "+\t\t\tprefix + (++i) + \".rsc\", //$NON-NLS-1$", "+\t\t\tprefix + (++i) + \".rsc\", //$NON-NLS-1$", "+\t\t\tnewTerminalIndex,", "+\t\t\tnewNonTerminalIndex,", "+\t\t\tnewName,", "+\t\t\tnewLhs,", "+\t\t\ttokens);", "+\t", "+\tbuildFilesForStatementsRecoveryFilter(", "+\t\t\tprefix + (++i) + \".rsc\", //$NON-NLS-1$", "+\t\t\tnewNonTerminalIndex,", "+\t\t\tnewLhs,", "+\t\t\ttokens);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963b7f536c177bcbd9e55cf13f124b61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "signatureAfterChange": " public final static void buildFilesFromLPG(String dataFilename, String dataFilename2)\tthrows java.io.IOException", "diff": ["-\tint i = 0;", "+\tint j = 0;", "-\t\ttokens[i++] = st.nextToken();", "+\t\ttokens[j++] = st.nextToken();", "-\ti = 0;", "+\tint i = 0;", "-\tbuildFileOfByteFor(prefix + (++i) + \".rsc\", \"rhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "+\tbyte[] newRhs = buildFileOfByteFor(prefix + (++i) + \".rsc\", \"rhs\", tokens); //$NON-NLS-2$ //$NON-NLS-1$", "-\tst = new java.util.StringTokenizer(new String(contents), \"\\t\\n\\r=\");  //$NON-NLS-1$", "+\tst = new java.util.StringTokenizer(new String(contents), \"\\t\\n\\r=#\");  //$NON-NLS-1$", "-\ti = 0;", "+\tj = 0;", "-\t\ttokens[i++] = st.nextToken();", "+\t\ttokens[j++] = st.nextToken();", "+\t", "+\tbuildFileForCompliance(prefix + (++i) + \".rsc\", newRhs.length, tokens);//$NON-NLS-1$", "+}"]}], "num": 43126}