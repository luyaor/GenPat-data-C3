{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e6e36eca11bb45a5145a113d7878a0a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1be2f02dcd0528b7fa8534b62b8c32e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "8d01bdf14ca1578a6e5cf005bcc2d8a196fd2354", "commitAfterChange": "626629ce58a6dc508d0b223f570ad72c46ee3dd0", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test0443() throws JavaModelException", "signatureAfterChange": " \tpublic void test0443() throws JavaModelException", "diff": ["-\t\tList modifiers = methodDeclaration.modifiers();", "-\t\tassertEquals(\"Wrong size\", 2, modifiers.size());", "-\t\tModifier modifier1 = (Modifier) modifiers.get(0);", "-\t\tassertTrue(\"Not a public modifier\", modifier1.isPublic());", "-\t\tModifier modifier2 = (Modifier) modifiers.get(1);", "-\t\tassertTrue(\"Not an abstract modifier\", modifier2.isAbstract());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da4cb90f594cb462fd54450b5a75bf4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 324, "signatureBeforeChange": " \tpublic void test0321() throws JavaModelException", "signatureAfterChange": " \tpublic void test0321() throws JavaModelException", "diff": ["-\t\tType elementType = arrayType.getComponentType();", "-\t\tITypeBinding typeBinding2 = elementType.resolveBinding();", "-\t\tassertNotNull(\"No type binding2\", typeBinding2); //$NON-NLS-1$", "-\t\tassertEquals(\"wrong dimension\", 1, typeBinding2.getDimensions()); //$NON-NLS-1$", "-\t\tassertEquals(\"wrong name\", \"Object[]\", typeBinding2.getName());\t\t //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tassertTrue(\"Not an array type\", elementType.isArrayType()); //$NON-NLS-1$", "-\t\tType elementType2 = ((ArrayType) elementType).getComponentType();", "-\t\tassertTrue(\"Not a simple type\", elementType2.isSimpleType()); //$NON-NLS-1$", "-\t\tITypeBinding typeBinding3 = elementType2.resolveBinding();", "+\t\tType elementType = arrayType.getElementType();", "+\t\tassertTrue(\"Not a simple type\", elementType.isSimpleType()); //$NON-NLS-1$", "+\t\tITypeBinding typeBinding3 = elementType.resolveBinding();"]}], "num": 9612}