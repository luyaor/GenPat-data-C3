{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfcc714097b8688c071ead97418d2283", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cfc98dcc97546f20b7350297e5663f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static char[] createIndexKey(char[] packageName, char[][] enclosingTypeNames, char[] typeName, boolean isClass)", "signatureAfterChange": "   public static char[] createIndexKey(char[] packageName, char[][] enclosingTypeNames, char[] typeName, boolean isClass)", "diff": ["-\tTypeDeclarationPattern record = getTypeDeclarationRecord();", "-\trecord.pkg = packageName;", "-\trecord.enclosingTypeNames = enclosingTypeNames;", "-\trecord.simpleName = typeName;", "-\trecord.classOrInterface = isClass ? CLASS_SUFFIX : INTERFACE_SUFFIX;", "-\treturn record.encodeIndexKey();", "+\tTypeDeclarationPattern pattern = new TypeDeclarationPattern(R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\tpattern.pkg = packageName;", "+\tpattern.enclosingTypeNames = enclosingTypeNames;", "+\tpattern.simpleName = typeName;", "+\tpattern.classOrInterface = isClass ? CLASS_SUFFIX : INTERFACE_SUFFIX;", "+\treturn pattern.encodeIndexKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b62577c539eb90bb98158daa7ee6ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "signatureAfterChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "diff": ["-\tSuperTypeReferencePattern record = getSuperTypeReferenceRecord();", "-\trecord.modifiers = modifiers;", "-\trecord.pkgName = packageName;", "-\trecord.classOrInterface = classOrInterface;", "-\trecord.superClassOrInterface = superClassOrInterface;", "+\tSuperTypeReferencePattern pattern = new SuperTypeReferencePattern(R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\tpattern.modifiers = modifiers;", "+\tpattern.pkgName = packageName;", "+\tpattern.classOrInterface = classOrInterface;", "+\tpattern.superClassOrInterface = superClassOrInterface;", "-\trecord.enclosingTypeName = CharOperation.concatWith(enclosingTypeNames, '$');", "-\trecord.simpleName = CharOperation.lastSegment(typeName, '.');", "-\trecord.superSimpleName = CharOperation.lastSegment(superTypeName, '.');", "-\trecord.superQualification = null;", "-\tif (record.superSimpleName != superTypeName) {", "-\t\tint length = superTypeName.length - record.superSimpleName.length - 1;", "-\t\trecord.superQualification = new char[length];", "-\t\tSystem.arraycopy(superTypeName, 0, record.superQualification, 0, length);", "+\tpattern.enclosingTypeName = CharOperation.concatWith(enclosingTypeNames, '$');", "+\tpattern.simpleName = CharOperation.lastSegment(typeName, '.');", "+\tpattern.superSimpleName = CharOperation.lastSegment(superTypeName, '.');", "+\tpattern.superQualification = null;", "+\tif (pattern.superSimpleName != superTypeName) {", "+\t\tint length = superTypeName.length - pattern.superSimpleName.length - 1;", "+\t\tpattern.superQualification = new char[length];", "+\t\tSystem.arraycopy(superTypeName, 0, pattern.superQualification, 0, length);", "-\tchar[] superTypeSourceName = CharOperation.lastSegment(record.superSimpleName, '$');", "-\tif (superTypeSourceName != record.superSimpleName) {", "-\t\tint start = record.superQualification == null ? 0 : record.superQualification.length + 1;", "-\t\tint prefixLength = record.superSimpleName.length - superTypeSourceName.length;", "+\tchar[] superTypeSourceName = CharOperation.lastSegment(pattern.superSimpleName, '$');", "+\tif (superTypeSourceName != pattern.superSimpleName) {", "+\t\tint start = pattern.superQualification == null ? 0 : pattern.superQualification.length + 1;", "+\t\tint prefixLength = pattern.superSimpleName.length - superTypeSourceName.length;", "-\t\tif (record.superQualification != null) {", "-\t\t\tSystem.arraycopy(record.superQualification, 0, mangledQualification, 0, start-1);", "+\t\tif (pattern.superQualification != null) {", "+\t\t\tSystem.arraycopy(pattern.superQualification, 0, mangledQualification, 0, start-1);", "-\t\tSystem.arraycopy(record.superSimpleName, 0, mangledQualification, start, prefixLength);", "-\t\trecord.superQualification = mangledQualification;", "-\t\trecord.superSimpleName = superTypeSourceName;", "+\t\tSystem.arraycopy(pattern.superSimpleName, 0, mangledQualification, start, prefixLength);", "+\t\tpattern.superQualification = mangledQualification;", "+\t\tpattern.superSimpleName = superTypeSourceName;", "-\treturn record.encodeIndexKey();", "+\treturn pattern.encodeIndexKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca323e21d1ecb9050ee876dd1e72ed29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey(char[] selector, int argCount)", "signatureAfterChange": "  public static char[] createIndexKey(char[] selector, int argCount)", "diff": ["-\tMethodPattern record = getMethodRecord();", "-\trecord.selector = selector;", "-\trecord.parameterCount = argCount;", "-\treturn record.encodeIndexKey();", "+\tMethodPattern pattern = new MethodPattern(R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\tpattern.selector = selector;", "+\tpattern.parameterCount = argCount;", "+\treturn pattern.encodeIndexKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7aa08fc203f2d279fabf8c8d2971a39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey(char[] typeName, int argCount)", "signatureAfterChange": "  public static char[] createIndexKey(char[] typeName, int argCount)", "diff": ["-\tConstructorPattern record = getConstructorRecord();", "-\trecord.declaringSimpleName = typeName;", "-\trecord.parameterCount = argCount;", "-\treturn record.encodeIndexKey();", "+\tConstructorPattern pattern = new ConstructorPattern(R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\tpattern.declaringSimpleName = typeName;", "+\tpattern.parameterCount = argCount;", "+\treturn pattern.encodeIndexKey();"]}], "num": 47186}