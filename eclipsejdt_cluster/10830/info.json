{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eae759c6c363c826e6c04c0b784ebf84", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0009ca2c701e6bd21771776755a922c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Type getRightOperand()", "signatureAfterChange": "  \tpublic Type getRightOperand()", "diff": ["-\t\tif (rightOperand  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetRightOperand(new SimpleType(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.rightOperand  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.rightOperand= new SimpleType(this.ast);", "+\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "-\t\treturn rightOperand;", "+\t\treturn this.rightOperand;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1011fb8bc2737e5bd0dd8aca69e87c4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Expression getElseExpression()", "signatureAfterChange": "  \tpublic Expression getElseExpression()", "diff": ["-\t\tif (elseExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetElseExpression(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.elseExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.elseExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.elseExpression, ELSE_EXPRESSION_PROPERTY);", "-\t\treturn elseExpression;", "+\t\treturn this.elseExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c585503af0af9292e25909f4a1b267", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic Expression getRightHandSide()", "signatureAfterChange": "  \tpublic Expression getRightHandSide()", "diff": ["-\t\tif (rightHandSide  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetRightHandSide(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.rightHandSide  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.rightHandSide= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.rightHandSide, RIGHT_HAND_SIDE_PROPERTY);", "-\t\treturn rightHandSide;", "+\t\treturn this.rightHandSide;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ae372d0b2f5662d8aea5a65b766304", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic Expression getRightOperand()", "signatureAfterChange": "  \tpublic Expression getRightOperand()", "diff": ["-\t\tif (rightOperand  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetRightOperand(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.rightOperand  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.rightOperand= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.rightOperand, RIGHT_OPERAND_PROPERTY);", "-\t\treturn rightOperand;", "+\t\treturn this.rightOperand;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e31d1f62fa4f3b76157bbe9a4a814f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Type getComponentType()", "signatureAfterChange": "  \tpublic Type getComponentType()", "diff": ["-\t\tif (componentType == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetComponentType(new SimpleType(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.componentType == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.componentType = new SimpleType(this.ast);", "+\t\t\tpostLazyInit(this.componentType, COMPONENT_TYPE_PROPERTY);", "-\t\treturn componentType;", "+\t\treturn this.componentType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb485c2e78bdddca7541cf742f869835", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Assignment.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic Expression getLeftHandSide()", "signatureAfterChange": "  \tpublic Expression getLeftHandSide()", "diff": ["-\t\tif (leftHandSide  == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetLeftHandSide(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.leftHandSide  == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.leftHandSide= new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.leftHandSide, LEFT_HAND_SIDE_PROPERTY);", "-\t\treturn leftHandSide;", "+\t\treturn this.leftHandSide;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d537048e5e242a10de27c90a2f77eccf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement getThenStatement()", "signatureAfterChange": "  \tpublic Statement getThenStatement()", "diff": ["-\t\tif (thenStatement == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetThenStatement(new Block(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.thenStatement == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.thenStatement = new Block(this.ast);", "+\t\t\tpostLazyInit(this.thenStatement, THEN_STATEMENT_PROPERTY);", "-\t\treturn thenStatement;", "+\t\treturn this.thenStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7417f7a9ef7eb9d72a6be570be10051", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConditionalExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getThenExpression()", "signatureAfterChange": "  \tpublic Expression getThenExpression()", "diff": ["-\t\tif (thenExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetThenExpression(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.thenExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.thenExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.thenExpression, THEN_EXPRESSION_PROPERTY);", "-\t\treturn thenExpression;", "+\t\treturn this.thenExpression;"]}], "num": 10830}