{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a57a5d224c116424c090b0adc95815f6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "216f92472261542ca3f841eefc95f2e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b1289825b1d85858e43a8d7cb146ae5cf4375ba5", "commitAfterChange": "968dabd0ec3dcd97fcc7fea5e184cd16cad5b076", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test001()", "signatureAfterChange": " \tpublic void test001()", "diff": ["-\t\ttry {", "-\t\t\tString sourceA001 =", "-\t\t\t\t\"public class A001 {\\n\" +", "-\t\t\t\t\"\tprivate int i = 6;\\n\" +", "-\t\t\t\t\"\tpublic int foo() {\\n\" +", "-\t\t\t\t\"\t\tclass A {\\n\" +", "-\t\t\t\t\"\t\t\tint get() {\\n\" +", "-\t\t\t\t\"\t\t\t\treturn i;\\n\" +", "-\t\t\t\t\"\t\t\t}\\n\" +", "-\t\t\t\t\"\t\t}\\n\" +", "-\t\t\t\t\"\t\treturn new A().get();\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"};\";", "-\t\t\tcompileAndDeploy(sourceA001, \"A001\");", "-\t\t\ttry {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.classfmt.ClassFileReader classFileReader = org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(EVAL_DIRECTORY + File.separator + \"A001.class\");", "-\t\t\t\tIBinaryMethod[] methods = classFileReader.getMethods();", "-\t\t\t\tassertEquals(\"wrong size\", 3, methods.length);", "-\t\t\t\tMethodInfo methodInfo = (MethodInfo) methods[2];", "-\t\t\t\tassertEquals(\"wrong name\", \"access$0\", new String(methodInfo.getSelector()));", "-\t\t\t\tassertTrue(\"Not synthetic\", methodInfo.isSynthetic());", "-\t\t\t} catch (ClassFormatException e) {", "-\t\t\t\tassertTrue(false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(false);", "-\t\t\t}", "-\t\t} finally {", "-\t\t\tremoveTempClass(\"A001\");", "-\t\t}", "+\t\tString source =", "+\t\t\t\"public class A001 {\\n\" +", "+\t\t\t\"\tprivate int i = 6;\\n\" +", "+\t\t\t\"\tpublic int foo() {\\n\" +", "+\t\t\t\"\t\tclass A {\\n\" +", "+\t\t\t\"\t\t\tint get() {\\n\" +", "+\t\t\t\"\t\t\t\treturn i;\\n\" +", "+\t\t\t\"\t\t\t}\\n\" +", "+\t\t\t\"\t\t}\\n\" +", "+\t\t\t\"\t\treturn new A().get();\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"};\";", "+\t\tString expectedOutput = ", "+\t\t\t\"/* \\n\" + ", "+\t\t\t\" * Version (target 1.2) \\n\" + ", "+\t\t\t\" * - magic: CAFEBABE\\n\" + ", "+\t\t\t\" * - minor: 0\\n\" + ", "+\t\t\t\" * - major: 46\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"// Compiled from A001.java\\n\" + ", "+\t\t\t\"class A001 extends java.lang.Object {\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  private int i;\\n\" + ", "+\t\t\t\"  /*  Field descriptor #6 I */\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #8 ()V */\\n\" + ", "+\t\t\t\"  public A001();\\n\" + ", "+\t\t\t\"    /* Stack: 2, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"       0  aload_0\\n\" + ", "+\t\t\t\"       1  invokespecial #11 <Constructor java.lang.Object()>\\n\" + ", "+\t\t\t\"       4  aload_0\\n\" + ", "+\t\t\t\"       5  bipush 6\\n\" + ", "+\t\t\t\"       7  putfield #13 <Field A001#i int>\\n\" + ", "+\t\t\t\"      10  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"      [pc: 4, line: 2]\\n\" + ", "+\t\t\t\"      [pc: 10, line: 1]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 11] local: this index: 0 type: A001\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #19 ()I */\\n\" + ", "+\t\t\t\"  public int foo();\\n\" + ", "+\t\t\t\"    /* Stack: 3, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"       0  new #21 A001$1$A\\n\" + ", "+\t\t\t\"       3  dup\\n\" + ", "+\t\t\t\"       4  aload_0\\n\" + ", "+\t\t\t\"       5  invokespecial #24 <Constructor A001$1$A(A001 arg)>\\n\" + ", "+\t\t\t\"       8  invokevirtual #27 <Method A001$1$A#get() int>\\n\" + ", "+\t\t\t\"      11  ireturn\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 9]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 12] local: this index: 0 type: A001\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #29 (LA001;)I */\\n\" + ", "+\t\t\t\"  static int access$0(A001 arg);\\n\" + ", "+\t\t\t\"    \\n\" + ", "+\t\t\t\"    Attribute:\\n\" + ", "+\t\t\t\"      Name: Synthetic Length: 0\\n\" + ", "+\t\t\t\"  /* Stack: 1, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"      0  aload_0\\n\" + ", "+\t\t\t\"      1  getfield #13 <Field A001#i int>\\n\" + ", "+\t\t\t\"      4  ireturn\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 2]\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  Inner classes attributes:\\n\" + ", "+\t\t\t\"    [\\n\" + ", "+\t\t\t\"      inner class info name: #21 A001$1$A\\n\" + ", "+\t\t\t\"      outer class info name: #0\\n\" + ", "+\t\t\t\"      inner name: #34 A\\n\" + ", "+\t\t\t\"      accessflags: 2 private ]\\n\" + ", "+\t\t\t\"}\";", "+\t\tcheckClassFile(\"A001\", source, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8087b970fc19f436ca3ecc5079e112f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b1289825b1d85858e43a8d7cb146ae5cf4375ba5", "commitAfterChange": "968dabd0ec3dcd97fcc7fea5e184cd16cad5b076", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test003()", "signatureAfterChange": " \tpublic void test003()", "diff": ["-\t\ttry {", "-\t\t\tString sourceA003 =", "-\t\t\t\t\"public class A003 {\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"\tpublic int bar() {\\n\" +", "-\t\t\t\t\"\t\treturn 0;\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\t\\n\" +", "-\t\t\t\t\"\tpublic void foo() {\\n\" +", "-\t\t\t\t\"\t\tSystem.out.println(bar());\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\";", "-\t\t\tcompileAndDeploy(sourceA003, \"A003\");", "-\t\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + \"A003.class\", IClassFileReader.ALL);", "-\t\t\tIMethodInfo[] methodInfos = classFileReader.getMethodInfos();", "-\t\t\tassertEquals(\"wrong size\", 3, methodInfos.length);", "-\t\t\tIMethodInfo methodInfo = methodInfos[2];", "-\t\t\tassertEquals(\"wrong name\", \"foo\", new String(methodInfo.getName()));", "-\t\t\tICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "-\t\t\tassertNotNull(\"No code attribute\", codeAttribute);", "-\t\t\tILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "-\t\t\tassertNotNull(\"No code line number attribute\", lineNumberAttribute);", "-\t\t\tint[][] lineNumberTable = lineNumberAttribute.getLineNumberTable();", "-\t\t\tassertEquals(\"wrong size\", 2, lineNumberTable.length);", "-\t\t\tassertEquals(\"wrong pc[0]\", 0, lineNumberTable[0][0]);", "-\t\t\tassertEquals(\"wrong line[0]\", 8, lineNumberTable[0][1]);", "-\t\t\tassertEquals(\"wrong pc[1]\", 10, lineNumberTable[1][0]);", "-\t\t\tassertEquals(\"wrong line[1]\", 9, lineNumberTable[1][1]);", "-\t\t} finally {", "-\t\t\tremoveTempClass(\"A003\");", "-\t\t}", "+\t\tString source =", "+\t\t\t\"public class A003 {\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"\tpublic int bar() {\\n\" +", "+\t\t\t\"\t\treturn 0;\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\t\\n\" +", "+\t\t\t\"\tpublic void foo() {\\n\" +", "+\t\t\t\"\t\tSystem.out.println(bar());\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\";", "+\t\tString expectedOutput = ", "+\t\t\t\"/* \\n\" + ", "+\t\t\t\" * Version (target 1.2) \\n\" + ", "+\t\t\t\" * - magic: CAFEBABE\\n\" + ", "+\t\t\t\" * - minor: 0\\n\" + ", "+\t\t\t\" * - major: 46\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"// Compiled from A003.java\\n\" + ", "+\t\t\t\"public class A003 extends java.lang.Object {\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #6 ()V */\\n\" + ", "+\t\t\t\"  public A003();\\n\" + ", "+\t\t\t\"    /* Stack: 1, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"      0  aload_0\\n\" + ", "+\t\t\t\"      1  invokespecial #9 <Constructor java.lang.Object()>\\n\" + ", "+\t\t\t\"      4  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 5] local: this index: 0 type: A003\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #15 ()I */\\n\" + ", "+\t\t\t\"  public int bar();\\n\" + ", "+\t\t\t\"    /* Stack: 1, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"      0  iconst_0\\n\" + ", "+\t\t\t\"      1  ireturn\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 4]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 2] local: this index: 0 type: A003\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #6 ()V */\\n\" + ", "+\t\t\t\"  public void foo();\\n\" + ", "+\t\t\t\"    /* Stack: 2, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"       0  getstatic #22 <Field java.lang.System#out java.io.PrintStream>\\n\" + ", "+\t\t\t\"       3  aload_0\\n\" + ", "+\t\t\t\"       4  invokevirtual #24 <Method A003#bar() int>\\n\" + ", "+\t\t\t\"       7  invokevirtual #30 <Method java.io.PrintStream#println(int arg) void>\\n\" + ", "+\t\t\t\"      10  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 8]\\n\" + ", "+\t\t\t\"      [pc: 10, line: 9]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 11] local: this index: 0 type: A003\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"}\";", "+\t\tcheckClassFile(\"A003\", source, expectedOutput);"]}], "num": 3066}