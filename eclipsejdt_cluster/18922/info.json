{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbb131fa98434f4a701b41b307afdfba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae804aa60c4faf5467c4571ccb15d03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "commitAfterChange": "0768a01c46bf55c1ad1aefdbfa14c12019b43872", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t \tprotected ASTNode findNode(CompilationUnit unit, final MarkerInfo markerInfo)", "signatureAfterChange": " \t \tprotected ASTNode findNode(CompilationUnit unit, final MarkerInfo markerInfo)", "diff": ["-\t\tclass EndVisit extends RuntimeException {", "-\t\t\tprivate static final long serialVersionUID = 6009335074727417445L;", "-\t\t}", "+\t\tASTNode[] nodes = findNodes(unit, markerInfo);", "+\t\tif (nodes.length == 0)", "+\t\t\treturn unit;", "+\t\treturn nodes[0];", "+\t}", "-\t\t\tASTNode found;", "-\t\t\t\tif (node.getStartPosition() == markerInfo.astStart && node.getStartPosition() + node.getLength() == markerInfo.astEnd) {", "-\t\t\t\t\tthis.found = node;", "-\t\t\t\t\tthrow new EndVisit();", "-\t\ttry {", "-\t\t\tunit.accept(visitor);", "-\t\t} catch (EndVisit e) {", "-\t\t\treturn visitor.found;", "-\t\t}", "-\t\treturn unit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70f0e1a70f74dc0d914b02fe4b1691b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Comment getComment(int position)", "signatureAfterChange": " \tComment getComment(int position)", "diff": ["-\tpublic Comment getComment(int position) {", "+\tComment getComment(int position) {", "-\t\tint bottom = 0, top = size - 1;", "+\t\tint index = getCommentIndex(0, position, 0);", "+\t\tif (index<0) {", "+\t\t\treturn null;", "+\t\t}", "+\t\treturn this.comments[index];", "+\t}", "-\t\t\tint start = comment.getStartPosition();", "-\t\t\tif (position < start) {", "-\t\t\t} else if (position >=(start+comment.getLength())) {", "-\t\tif (index<0) {", "-\t\t\t/*", "-\t\t\t\tindex = i;", "-\t\t\t\tindex = i+1;", "-\t\t\t*/", "-\t\t\treturn null;", "-\t\treturn this.comments[index];"]}], "num": 18922}