{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecebf382709a8cfc5d2b72b7b9c8b9a6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d97385caba7190fa7b6c452ada9a9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "be2d908534b2ca03085e6060fd14147dab7ff63c", "commitAfterChange": "8494797ba855fec4ee2bbc6396bac52c13992e9d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void recordSuppressWarnings(IrritantSet irritants, Annotation annotation, int scopeStart, int scopeEnd)", "signatureAfterChange": "  public void recordSuppressWarnings(IrritantSet irritants, Annotation annotation, int scopeStart, int scopeEnd)", "diff": ["+\tfinal long scopePositions = ((long)scopeStart<<32) + scopeEnd;", "+\tfor (int i = 0, max = this.suppressWarningsCount; i < max; i++) {", "+\t\tif (this.suppressWarningAnnotations[i] == annotation", "+\t\t\t\t&& this.suppressWarningScopePositions[i] == scopePositions", "+\t\t\t\t&& this.suppressWarningIrritants[i].hasSameIrritants(irritants)) {", "+\t\t\t// annotation data already recorded", "+\t\t\treturn;", "+\t\t}", "+\t}", "-\tthis.suppressWarningScopePositions[this.suppressWarningsCount++] = ((long)scopeStart<<32) + scopeEnd;", "+\tthis.suppressWarningScopePositions[this.suppressWarningsCount++] = scopePositions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "163e6dd24b7ba5d6b52d3d6e0237d9a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["-\t\t} else if (this.bound == unresolvedType) {", "+\t\t} ", "+\t\tif (this.bound == unresolvedType) {", "+\t\t} ", "+\t\tif (this.otherBounds != null) {", "+\t\t\tfor (int i = 0, length = this.otherBounds.length; i < length; i++) {", "+\t\t\t\tif (this.otherBounds[i] == unresolvedType) {", "+\t\t\t\t\tthis.otherBounds[i] = env.convertUnresolvedBinaryToRawType(resolvedType);", "+\t\t\t\t\taffected = true;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef13e78f85d3cf072dfd9d341e862593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tif (this.annotationsOnDimensions != null) {", "+\t\t\tfor (int i = 0, max = this.annotationsOnDimensions.length; i < max; i++) {", "+\t\t\t\tAnnotation[] annotations = this.annotationsOnDimensions[i];", "+\t\t\t\tresolveAnnotations(scope, annotations, new Annotation.TypeUseBinding(Binding.TYPE_USE));", "+\t\t\t}", "+\t\t}"]}], "num": 38930}