{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3535d902244ca8b76c89e23a9baa41e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ee2accaf9ceb628f483239f80e9a829", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "71a2279542d7f81c81ac185c946009de95de9746", "commitAfterChange": "a8db9d6e29539ad424b2aeb72ada09e6eab41c24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  SimpleLookupTable directoryTable(String qualifiedPackageName)", "signatureAfterChange": "  SimpleLookupTable directoryTable(String qualifiedPackageName)", "diff": ["+\t\t\t// look for secondary types, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=382778", "+\t\t\tIJavaProject project = JavaCore.create(container.getProject());", "+\t\t\tMap secondaryTypePaths = JavaModelManager.getJavaModelManager().secondaryTypes(project, false, null);", "+\t\t\tif (secondaryTypePaths.size() > 0) {", "+\t\t\t\tMap typesInPackage = (Map) secondaryTypePaths.get(qualifiedPackageName);", "+\t\t\t\tif (typesInPackage != null && typesInPackage.size() > 0) {", "+\t\t\t\t\tfor (Iterator j = typesInPackage.keySet().iterator(); j.hasNext();) {", "+\t\t\t\t\t\tString secondaryTypeName = (String) j.next();", "+\t\t\t\t\t\tIType secondaryType = (IType) typesInPackage.get(secondaryTypeName);", "+\t\t\t\t\t\tIJavaElement parent = secondaryType.getParent();", "+\t\t\t\t\t\tString fullPath = parent.getResource().getFullPath().toString();", "+\t\t\t\t\t\tif (!org.eclipse.jdt.internal.compiler.util.Util.isExcluded(fullPath.toCharArray(), this.fulInclusionPatternChars, this.fullExclusionPatternChars, false/*not a folder path*/)) {", "+\t\t\t\t\t\t\tdirTable.put(secondaryTypeName, parent.getResource());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ae3fc1a256a2d5d7ab7fdc1295e4cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "8c9f236498368a5c4b97ae0ebfef0c4abc8dc11a", "commitAfterChange": "ae52a28648d52b5eafe0fdcc634d32123f7b745b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  SimpleLookupTable directoryTable(String qualifiedPackageName)", "signatureAfterChange": "  SimpleLookupTable directoryTable(String qualifiedPackageName)", "diff": ["+\t\t\t// look for secondary types, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=382778", "+\t\t\tIJavaProject project = JavaCore.create(container.getProject());", "+\t\t\tMap secondaryTypePaths = JavaModelManager.getJavaModelManager().secondaryTypes(project, false, null);", "+\t\t\tif (secondaryTypePaths.size() > 0) {", "+\t\t\t\tMap typesInPackage = (Map) secondaryTypePaths.get(qualifiedPackageName);", "+\t\t\t\tif (typesInPackage != null && typesInPackage.size() > 0) {", "+\t\t\t\t\tfor (Iterator j = typesInPackage.keySet().iterator(); j.hasNext();) {", "+\t\t\t\t\t\tString secondaryTypeName = (String) j.next();", "+\t\t\t\t\t\tIType secondaryType = (IType) typesInPackage.get(secondaryTypeName);", "+\t\t\t\t\t\tIJavaElement parent = secondaryType.getParent();", "+\t\t\t\t\t\tString fullPath = parent.getResource().getFullPath().toString();", "+\t\t\t\t\t\tif (!org.eclipse.jdt.internal.compiler.util.Util.isExcluded(fullPath.toCharArray(), this.fulInclusionPatternChars, this.fullExclusionPatternChars, false/*not a folder path*/)) {", "+\t\t\t\t\t\t\tdirTable.put(secondaryTypeName, parent.getResource());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 30489}