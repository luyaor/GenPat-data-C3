{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35703194e54c328a760ef1d3c6129b72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c611223ca2eddaf522e56f250afb1f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e497289bc003a7408d142ab6e19e1ca9f528eed2", "commitAfterChange": "64adb94de0734c7d5adfd2cb11839ed3d3641dfc", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " \tpublic boolean visit(TagElement node)", "signatureAfterChange": " \tpublic boolean visit(TagElement node)", "diff": ["-\t\t\t    String newTagName= '@' + (String) getNewValue(node, TagElement.TAG_NAME_PROPERTY);", "+\t\t\t    String newTagName= (String) getNewValue(node, TagElement.TAG_NAME_PROPERTY);", "-\t\t\t    String oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "-\t\t\t    int tagEnd= findTagNameStart(node)  + oldTag.length();", "-\t\t\t    doTextRemove(node.getStartPosition(), tagEnd - node.getStartPosition(), getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t\t    doTextRemove(node.getStartPosition(), findTagNameEnd(node) - node.getStartPosition(), getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "-\t\t    \tString oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "-\t\t    \tint tagStart= findTagNameStart(node);", "-\t\t    \tdoTextReplace(tagStart, oldTag.length(), newTagName, getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "+\t\t    \tdoTextReplace(node.getStartPosition(), findTagNameEnd(node) - node.getStartPosition(), newTagName, getEditGroup(node, TagElement.TAG_NAME_PROPERTY));", "-\t\t\tint startOffset= node.getStartPosition();", "-            String oldTag= (String) getOriginalValue(node, TagElement.TAG_NAME_PROPERTY);", "-            if (oldTag != null) {", "-                startOffset= findTagNameStart(node) + oldTag.length();", "-            }", "-            ", "-            rewriteNodeList(node, TagElement.FRAGMENTS_PROPERTY, startOffset, \" \", \" \");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\tint endOffset= findTagNameEnd(node);", "+            rewriteNodeList(node, TagElement.FRAGMENTS_PROPERTY, endOffset, \" \", \" \");  //$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c22b7da4fa83d54e7a387d00f0edbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarFactoryContainer.java", "commitBeforeChange": "a08b4c389632f0f20a50182ded68880addc0de18", "commitAfterChange": "5cb40e1ad24651b50221770b935dfa647cb41f4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private List<String> getServiceClassnamesFromJar(File jar)", "signatureAfterChange": "     protected static List<String> getServiceClassnamesFromJar(File jar)", "diff": ["-    private List<String> getServiceClassnamesFromJar(File jar)", "+    protected static List<String> getServiceClassnamesFromJar(File jar)", "+            \t// Get the service provider def file out of the jar.", "-                // Extract classnames from this text file.", "+                // Extract classnames from the service provider def file.", "-                BufferedReader rd;", "-                rd = new BufferedReader(new InputStreamReader(is, \"UTF-8\")); //$NON-NLS-1$", "-                for (String line = rd.readLine(); line != null; line = rd.readLine()) {", "-                    // hack off any comments", "-                    int iComment = line.indexOf('#');", "-                    if (iComment >= 0) {", "-                        line = line.substring(0, iComment);", "-                    }", "-                    // add the first non-whitespace token to the list", "-                    final String[] tokens = line.split(\"\\\\s\", 2); //$NON-NLS-1$", "-                    if (tokens[0].length() > 0) {", "-                        classNames.add(tokens[0]);", "-                    }", "-                }", "-                rd.close();", "+                readServiceProvider(is, classNames);", "-        \tAptPlugin.log(e, \"Could not get service names from jar: \" + jar); //$NON-NLS-1$", "+        \tAptPlugin.log(e, \"Unable to read annotation processor service names from jar file \" + jar); //$NON-NLS-1$"]}], "num": 48817}