{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2408dd85d1ea87b92518ce09bea0a1a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d34fa8d54f694b8744ccbaecaf296a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "commitAfterChange": "014eef8cad2ee5584b28815ec4238bd578f1c1b0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void addPreResourceChangedListener(IResourceChangeListener listener)", "signatureAfterChange": "  \tpublic void addPreResourceChangedListener(IResourceChangeListener listener, int eventMask)", "diff": ["-\tpublic void addPreResourceChangedListener(IResourceChangeListener listener) {", "+\tpublic void addPreResourceChangedListener(IResourceChangeListener listener, int eventMask) {", "+\t\t\t\tthis.preResourceChangeEventMasks[i] |= eventMask;", "-\t\tif ((length = this.preResourceChangeListeners.length) == this.preResourceChangeListenerCount){", "+\t\tif ((length = this.preResourceChangeListeners.length) == this.preResourceChangeListenerCount) {", "+\t\t\tSystem.arraycopy(this.preResourceChangeEventMasks, 0, this.preResourceChangeEventMasks = new int[length*2], 0, length);", "+\t\tthis.preResourceChangeEventMasks[this.preResourceChangeListenerCount] = eventMask;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa5f7ad325fbc26617817df15bf3331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": " protected void pushOnElementStack(int kind, int info)", "signatureAfterChange": " protected void pushOnElementStack(int kind, int info, Object objectInfo)", "diff": ["+}", "+protected void pushOnElementStack(int kind, int info, Object objectInfo){", "+\tthis.previousObjectInfo = null;", "+\t\tSystem.arraycopy(", "+\t\t\tthis.elementObjectInfoStack, 0,", "+\t\t\tthis.elementObjectInfoStack = new Object[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.elementObjectInfoStack[this.elementPtr] = objectInfo;"]}], "num": 14072}