{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ac41f18297bafac91cb23461b14179d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ffd43274b292e7ef0231991d15f6b8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "commitAfterChange": "c103de7652c81626d78eadd07a0763ab5a5a3287", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic void test0026() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0026() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong number of modifiers\", 2, modifiers.size());", "+\t\tassertEquals(\"Wrong number of modifiers\", 1, modifiers.size());", "-\t\textendedModifier = (IExtendedModifier) modifiers.get(1);", "-\t\tassertTrue(\"Not a modifier\", extendedModifier instanceof Modifier);", "-\t\tmodifier = (Modifier) extendedModifier;", "-\t\tcheckSourceRange(modifier, \"abstract\", source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1be2f02dcd0528b7fa8534b62b8c32e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "8d01bdf14ca1578a6e5cf005bcc2d8a196fd2354", "commitAfterChange": "626629ce58a6dc508d0b223f570ad72c46ee3dd0", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test0443() throws JavaModelException", "signatureAfterChange": " \tpublic void test0443() throws JavaModelException", "diff": ["-\t\tList modifiers = methodDeclaration.modifiers();", "-\t\tassertEquals(\"Wrong size\", 2, modifiers.size());", "-\t\tModifier modifier1 = (Modifier) modifiers.get(0);", "-\t\tassertTrue(\"Not a public modifier\", modifier1.isPublic());", "-\t\tModifier modifier2 = (Modifier) modifiers.get(1);", "-\t\tassertTrue(\"Not an abstract modifier\", modifier2.isAbstract());"]}], "num": 20335}