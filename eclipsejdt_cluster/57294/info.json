{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "840469a68c40224095bd443547d4a1bd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b840d47e07497ecbebb14c6bc684a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ReferenceExpressionSyntaxTest.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void test385374a() throws IOException", "signatureAfterChange": " \tpublic void test385374a() throws IOException", "diff": ["-\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385374, Support for 308 style type annotations on 335 constructs - make sure illegal modifiers are rejected", "+\t*/", "-\t\tString source = ", "-\t\t\t\t\"interface I {\\n\" +", "-\t\t\t\t\"\tvoid foo();\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"@interface TypeAnnotation {\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"\\n\" +", "-\t\t\t\t\"class X<T> {\\n\" +", "-\t\t\t\t\"\t // Primitive array form\\n\" +", "-\t\t\t\t\"\t I x1 = public @TypeAnnotation int []::clone;\\n\" +", "-\t\t\t\t\"\t // Primitive array form with dimension annotations.\\n\" +", "-\t\t\t\t\"\t I x2 = @TypeAnnotation public int @ArrayAnnotation[]@ArrayAnnotation[]::clone; \\n\" +", "-\t\t\t\t\"\t // Primitive array form with dimension annotations and type parameter annotations.\\n\" +", "-\t\t\t\t\"\t I x3 = public @TypeAnnotation int @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t // Reference type name form\\n\" +", "-\t\t\t\t\"\t I x4 = @TypeAnnotation public X::clone;\\n\" +", "-\t\t\t\t\"\t // Reference type name array form\\n\" +", "-\t\t\t\t\"\t I x5 = public @TypeAnnotation X []::clone;\\n\" +", "-\t\t\t\t\"\t // Reference type name array form with dimension annotations.\\n\" +", "-\t\t\t\t\"\t I x6 = @TypeAnnotation public X @ArrayAnnotation[]@ArrayAnnotation[]::clone; \\n\" +", "-\t\t\t\t\"\t // Reference type name array form with dimension annotations and type parameter annotations.\\n\" +", "-\t\t\t\t\"\t I x7 = public @TypeAnnotation X @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t // Generic type array form with dimension annotations and type parameter annotations.\\n\" +", "-\t\t\t\t\"\t I x8 = public @TypeAnnotation X<@TypeParameterAnnotation String> @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t // Qualified generic type array form with dimension annotations and type parameter annotations.\\n\" +", "-\t\t\t\t\"\t I x9 = public @TypeAnnotation X<@TypeParameterAnnotation String>.Y<@TypeParameterAnnotation String> @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"}\\n\";", "-\t\t", "-\t\tString expectedErrorString = ", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"1. ERROR in test385374a (at line 9)\\n\" +", "-\t\t\t\t\"\tI x1 = public @TypeAnnotation int []::clone;\\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"2. ERROR in test385374a (at line 11)\\n\" +", "-\t\t\t\t\"\tI x2 = @TypeAnnotation public int @ArrayAnnotation[]@ArrayAnnotation[]::clone; \\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"3. ERROR in test385374a (at line 13)\\n\" +", "-\t\t\t\t\"\tI x3 = public @TypeAnnotation int @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"4. ERROR in test385374a (at line 15)\\n\" +", "-\t\t\t\t\"\tI x4 = @TypeAnnotation public X::clone;\\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"5. ERROR in test385374a (at line 17)\\n\" +", "-\t\t\t\t\"\tI x5 = public @TypeAnnotation X []::clone;\\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"6. ERROR in test385374a (at line 19)\\n\" +", "-\t\t\t\t\"\tI x6 = @TypeAnnotation public X @ArrayAnnotation[]@ArrayAnnotation[]::clone; \\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"7. ERROR in test385374a (at line 21)\\n\" +", "-\t\t\t\t\"\tI x7 = public @TypeAnnotation X @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"8. ERROR in test385374a (at line 23)\\n\" +", "-\t\t\t\t\"\tI x8 = public @TypeAnnotation X<@TypeParameterAnnotation String> @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"9. ERROR in test385374a (at line 25)\\n\" +", "-\t\t\t\t\"\tI x9 = public @TypeAnnotation X<@TypeParameterAnnotation String>.Y<@TypeParameterAnnotation String> @ArrayAnnotation[]@ArrayAnnotation[]::<@TypeParameterAnnotation String>clone; \\n\" +", "-\t\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\t\"Syntax error, modifiers are illegal here\\n\" +", "-\t\t\t\t\"----------\\n\";", "-\t\tcheckParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), expectedErrorString, \"test385374a\", null);", "+\t\t// Nop."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd76a9e77ca84dfc8a7d257bb8377d50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\t\t\"public class X extends java.lang.Object {\\n\" + ", "-\t\t\t\"  Constant pool:\\n\" + ", "-\t\t\t\"    constant #1 utf8: X\\n\" + ", "-\t\t\t\"    constant #2 class: #1 X\\n\" + ", "-\t\t\t\"    constant #3 utf8: java/lang/Object\\n\" + ", "-\t\t\t\"    constant #4 class: #3 java/lang/Object\\n\" + ", "-\t\t\t\"    constant #5 utf8: <init>\\n\" + ", "-\t\t\t\"    constant #6 utf8: ()V\\n\" + ", "-\t\t\t\"    constant #7 utf8: Code\\n\" + ", "-\t\t\t\"    constant #8 name_and_type: #5.#6 <init> ()V\\n\" + ", "-\t\t\t\"    constant #9 method_ref: #4.#8 java/lang/Object.<init> ()V\\n\" + ", "-\t\t\t\"    constant #10 utf8: LineNumberTable\\n\" + ", "-\t\t\t\"    constant #11 utf8: LocalVariableTable\\n\" + ", "-\t\t\t\"    constant #12 utf8: this\\n\" + ", "-\t\t\t\"    constant #13 utf8: LX;\\n\" + ", "-\t\t\t\"    constant #14 utf8: main\\n\" + ", "-\t\t\t\"    constant #15 utf8: ([Ljava/lang/String;)V\\n\" + ", "-\t\t\t\"    constant #16 utf8: java/lang/System\\n\" + ", "-\t\t\t\"    constant #17 class: #16 java/lang/System\\n\" + ", "-\t\t\t\"    constant #18 utf8: out\\n\" + ", "-\t\t\t\"    constant #19 utf8: Ljava/io/PrintStream;\\n\" + ", "-\t\t\t\"    constant #20 name_and_type: #18.#19 out Ljava/io/PrintStream;\\n\" + ", "-\t\t\t\"    constant #21 field_ref: #17.#20 java/lang/System.out Ljava/io/PrintStream;\\n\" + ", "-\t\t\t\"    constant #22 utf8: [J\\n\" + ", "-\t\t\t\"    constant #23 class: #22 [J\\n\" + ", "-\t\t\t\"    constant #24 utf8: clone\\n\" + ", "-\t\t\t\"    constant #25 utf8: ()Ljava/lang/Object;\\n\" + ", "-\t\t\t\"    constant #26 name_and_type: #24.#25 clone ()Ljava/lang/Object;\\n\" + ", "-\t\t\t\"    constant #27 method_ref: #23.#26 [J.clone ()Ljava/lang/Object;\\n\" + ", "-\t\t\t\"    constant #28 utf8: java/io/PrintStream\\n\" + ", "-\t\t\t\"    constant #29 class: #28 java/io/PrintStream\\n\" + ", "-\t\t\t\"    constant #30 utf8: println\\n\" + ", "-\t\t\t\"    constant #31 utf8: (Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #32 name_and_type: #30.#31 println (Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #33 method_ref: #29.#32 java/io/PrintStream.println (Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #34 utf8: args\\n\" + ", "-\t\t\t\"    constant #35 utf8: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"    constant #36 utf8: tab\\n\" + ", "-\t\t\t\"    constant #37 utf8: SourceFile\\n\" + ", "-\t\t\t\"    constant #38 utf8: X.java\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\"  public X();\\n\" + ", "-\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\"    1  invokespecial java/lang/Object.<init>()V [9]\\n\" + ", "-\t\t\t\"    4  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 1]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX;\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"     4  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     4  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"     8  invokevirtual [J.clone()Ljava/lang/Object; [27]\\n\" + ", "-\t\t\t\"    11  invokevirtual java/io/PrintStream.println(Ljava/lang/Object;)V [33]\\n\" + ", "-\t\t\t\"    14  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     8  invokevirtual long[].clone() : java.lang.Object  [27]\\n\" + ", "+\t\t\t\"    11  invokevirtual java.io.PrintStream.println(java.lang.Object) : void  [33]\\n\" + ", "+\t\t\t\"    14  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    18  invokevirtual [J.clone()Ljava/lang/Object; [27]\\n\" + ", "-\t\t\t\"    21  invokevirtual java/io/PrintStream.println(Ljava/lang/Object;)V [33]\\n\" + ", "-\t\t\t\"    24  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 3]\\n\" + ", "-\t\t\t\"        [pc: 4, line: 4]\\n\" + ", "-\t\t\t\"        [pc: 14, line: 5]\\n\" + ", "-\t\t\t\"        [pc: 24, line: 6]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 25] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 4, pc: 25] local: tab index: 1 type: [J\\n\" + ", "-\t\t\t\"}\";", "+\t\t\t\"    18  invokevirtual long[].clone() : java.lang.Object  [27]\\n\" + ", "+\t\t\t\"    21  invokevirtual java.io.PrintStream.println(java.lang.Object) : void  [33]\\n\" + ", "+\t\t\t\"    24  return\\n\";"]}], "num": 57294}