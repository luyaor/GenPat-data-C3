{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67dc860d175cc3b68f3e4b76e266357f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92770cbe9ddd2edd7da54f6ac70b14c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6ab8a052a7d8ac7a830c6733e19e9b30c380dad7", "commitAfterChange": "ec64763fa4e57b4943311ee555e5ddce81854cf2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) throws InferenceFailureException", "diff": ["-\tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method)", "-\t\t\tthrows InferenceFailureException ", "+\tpublic BoundSet inferInvocationType(TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) throws InferenceFailureException ", "-\t\t//", "-\t\tBoundSet previous = this.currentBounds.copy();", "-\t\tthis.currentBounds = b1;", "+\t\t", "+\t\tthis.currentBounds = this.b2.copy();", "-\t\t\t\tthis.currentBounds = previous; // don't let bounds from unsuccessful attempt leak into subsequent attempts", "+\t\t\t\tthis.currentBounds = this.b2; // don't let bounds from unsuccessful attempt leak into subsequent attempts"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e03a5edb5835e902a8c15fe02fe33148", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "09f42f58bcdf2fa84ccd2b8b65f28ab3036222ca", "commitAfterChange": "57e8dd41219d846363c918d62edb5007994c5c79", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method, int checkKind) \t\t\tthrows InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method) \t\t\tthrows InferenceFailureException", "diff": ["-\tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method, int checkKind)", "+\tpublic BoundSet inferInvocationType(BoundSet b1, TypeBinding expectedType, InvocationSite invocationSite, MethodBinding method)", "-\t\tBoundSet previous = this.currentBounds;", "-\t\t\t\tswitch (checkKind) {", "+\t\t\t\tif (k < (method.isVarargs() ? p-1 : p))", "+\t\t\t\t\treturn null; // insufficient arguments for parameters!", "+\t\t\t\tswitch (this.inferenceKind) {", "-\t\t\t\t\t\tthrow new IllegalStateException(\"Unexpected checkKind \"+checkKind); //$NON-NLS-1$", "+\t\t\t\t\t\tthrow new IllegalStateException(\"Unexpected checkKind \"+this.inferenceKind); //$NON-NLS-1$", "-\t\t\treturn solution;", "+\t\t\treturn this.currentBounds = solution; // this is final, keep the result:", "-\t\t\tthis.currentBounds = previous;", "+\t\t\tthis.hasFinished = true;"]}], "num": 26647}