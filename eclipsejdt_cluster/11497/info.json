{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f9047787ca3ef562f59cb9d0a5e9745", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73093e22f499105b6e7a2cbc6806e7fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\tSearchableEnvironment environment = null;", "-\tNameLookup nameLookup = null;", "-\ttry {", "-\t\t// set unit to skip", "-\t\tenvironment = (SearchableEnvironment) project.getSearchableNameEnvironment();", "-\t\tenvironment.unitToSkip = unitToSkip;", "-\t", "-\t\t// set the units to look inside", "-\t\tnameLookup = project.getNameLookup();", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "-\t\tnameLookup.setUnitsToLookInside(workingCopies);", "+\tSearchableEnvironment environment = (SearchableEnvironment) project.newSearchableNameEnvironment(owner);", "-\t\t// code complete", "-\t\tCompletionRequestorWrapper requestorWrapper = new CompletionRequestorWrapper(requestor,nameLookup);", "-\t\tCompletionEngine engine = new CompletionEngine(environment, requestorWrapper, project.getOptions(true), project);", "-\t\trequestorWrapper.completionEngine = engine;", "-\t\tengine.complete(cu, position, 0);", "-\t} finally {", "-\t\tif (environment != null) {", "-\t\t\tenvironment.unitToSkip = null;", "-\t\t}", "-\t\tif (nameLookup != null) {", "-\t\t\tnameLookup.setUnitsToLookInside(null);", "-\t\t}", "-\t}", "+\t// set unit to skip", "+\tenvironment.unitToSkip = unitToSkip;", "+", "+\t// code complete", "+\tCompletionRequestorWrapper requestorWrapper = new CompletionRequestorWrapper(requestor, environment.nameLookup);", "+\tCompletionEngine engine = new CompletionEngine(environment, requestorWrapper, project.getOptions(true), project);", "+\trequestorWrapper.completionEngine = engine;", "+\tengine.complete(cu, position, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c1d68f50c5ae2a78a83055e4aaa4dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "581702d71a138ac97fe73cfd2b06cc855f39a496", "commitAfterChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprotected void openHierarchy() throws JavaModelException", "signatureAfterChange": " \tprotected abstract Object openWhenClosed(HashMap newElements, IProgressMonitor pm) throws JavaModelException;", "diff": ["-\tprotected void openHierarchy() throws JavaModelException {", "-\t\tif (this instanceof IOpenable) {", "-\t\t\t((Openable) this).openWhenClosed(null);", "-\t\t} else {", "-\t\t\tOpenable openableParent = (Openable)getOpenableParent();", "-\t\t\tif (openableParent != null) {", "-\t\t\t\tJavaElementInfo openableParentInfo = (JavaElementInfo) JavaModelManager.getJavaModelManager().getInfo((IJavaElement) openableParent);", "-\t\t\t\tif (openableParentInfo == null) {", "-\t\t\t\t\topenableParent.openWhenClosed(null);", "-\t\t\t\t} else {", "-\t\t\t\t\tthrow newNotPresentException();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "+\tprotected abstract Object openWhenClosed(HashMap newElements, IProgressMonitor pm) throws JavaModelException;"]}], "num": 11497}