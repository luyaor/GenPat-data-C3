{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47109799fef2435838fb254e61190240", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6f56389b396ce900aed2213cd5d27d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "ebfabad4a1917d75b16b05ab15520fe9fae0850b", "commitAfterChange": "93d86f0655c98ed807648682de6277090af4d041", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testBug50695()", "signatureAfterChange": " public void testBug50695()", "diff": ["-\trunNegativeTest(", "+\trunConformTest(", "-\t\t },", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\"\t* @see java\\n\" + ", "-\t\t\"\t       ^^^^\\n\" + ", "-\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\t* @see java.util\\n\" + ", "-\t\t\"\t       ^^^^^^^^^\\n\" + ", "-\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "+\t\t });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ff9ec24ad92005fa4ba0a7e59b5946", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 124, "signatureBeforeChange": " public void testBug435767()", "signatureAfterChange": " public void testBug435767()", "diff": ["-\trunNegativeTest(", "+\trunConformTest(", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in DummyClass.java (at line 18)\\n\" + ", "-\t\t\"\t.collect(Collectors.toMap(path -> this.getKey(path), path -> this.getValue(path))));\\n\" + ", "-\t\t\"\t                                       ^^^^^^\\n\" + ", "-\t\t\"The method getKey(String) in the type DummyClass is not applicable for the arguments (Object)\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in DummyClass.java (at line 18)\\n\" + ", "-\t\t\"\t.collect(Collectors.toMap(path -> this.getKey(path), path -> this.getValue(path))));\\n\" + ", "-\t\t\"\t                                                                  ^^^^^^^^\\n\" + ", "-\t\t\"The method getValue(String) in the type DummyClass is not applicable for the arguments (Object)\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2aed2bedfd9d715f9cefe20b0bd1249", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "dc892c0e1acc8f29aa208cac93db1f34ba940595", "commitAfterChange": "e0224da700606ee4894293f10b71bd4b6b9d30f5", "methodNumberBeforeChange": 566, "methodNumberAfterChange": 566, "signatureBeforeChange": " \tpublic void test564()", "signatureAfterChange": " \tpublic void test564()", "diff": ["-\t\tthis.runNegativeTest(", "+\t\tthis.runConformTest(", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tpublic class X<T, U, V extends X<T, U, V>> extends ArrayList<V> implements Inter<T, U> {\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"The serializable class X does not declare a static final serialVersionUID field of type long\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\"\tX.bar(this, u);\\n\" + ", "-\t\t\t\"\t  ^^^\\n\" + ", "-\t\t\t\"The method bar(Collection<? extends Inter<P,Q>>, Q) in the type X is not applicable for the arguments (X<T,U,V>, U)\\n\" + ", "-\t\t\t\"----------\\n\");\t", "+\t\t\t\"\");\t"]}], "num": 63311}