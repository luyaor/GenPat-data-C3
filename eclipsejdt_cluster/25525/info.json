{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fb8985de7bbd05a39587a1b3aef6d3a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460eedbcc005bd48884f8b08ac7a3b4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b418235473d69146fcb35be10bf158bb2b040cf7", "commitAfterChange": "eadf5ba6d44f28f071965cf829d67590b0a71974", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "signatureAfterChange": " \tprivate void findEnumConstant(char[] enumConstantName, SwitchStatement switchStatement)", "diff": ["-\t\t\t\tif(cases[i].isEnumConstant && cases[i].constantExpression instanceof SingleNameReference) {", "+\t\t\t\tExpression caseExpression = cases[i].constantExpression;", "+\t\t\t\tif((caseExpression instanceof SingleNameReference)", "+\t\t\t\t\t\t&& (caseExpression.resolvedType != null && caseExpression.resolvedType.isEnum())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98452b395f499bd0283522539a8f974f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c4c5d1f7cea2c5dfe27a67808f94917c3f90af5b", "commitAfterChange": "fb92cfb822669ddb00db1cf41e3bdb1057d4d00d", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["+\t\t} else if (parent instanceof SwitchStatement) {", "+\t\t\tSwitchStatement switchStatement = (SwitchStatement) parent;", "+\t\t\tif (switchStatement.expression != null &&", "+\t\t\t\t\tswitchStatement.expression.resolvedType != null) {", "+\t\t\t\taddExpectedType(switchStatement.expression.resolvedType, scope);", "+\t\t\t}"]}], "num": 25525}