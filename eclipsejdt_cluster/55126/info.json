{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd1a8f6ca9245b321fe63619ec1348df", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112331b7dd3ea7ca68694b8f1bb9ff6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "signatureAfterChange": "\r private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "diff": ["-private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverType == null || binding == null) return INACCURATE_MATCH;\r", "-\tint level;\r", "-\t\r", "+private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverBinding == null) {\r", "-\t\treturn INACCURATE_MATCH;\r", "-\t} else {\r", "-\t\tlevel = this.matchLevelAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverBinding);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "+\tif (receiverBinding != null \r", "+\t\t&& !this.matchesAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification)\r", "+\t\t&& !this.matchesType(this.allSuperDeclaringTypeNames, receiverBinding)) {\r", "+\t\t\treturn false;\r", "-\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, binding.type);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "-\t}\r", "+\tif (!this.matchesType(this.typeSimpleName, this.typeQualification, binding.type))\r", "+\t\treturn false;\r", "-\treturn level;\r", "+\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413adeb409823879c5b5203f9506fcdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "signatureAfterChange": "\r private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "diff": ["-private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverType == null || binding == null) return INACCURATE_MATCH;\r", "-\tint level;\r", "-\t\r", "+private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverBinding == null) {\r", "-\t\treturn INACCURATE_MATCH;\r", "-\t} else {\r", "-\t\tlevel = this.matchLevelAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverBinding);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "+\tif (receiverBinding != null \r", "+\t\t&& !this.matchesAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification)\r", "+\t\t&& !this.matchesType(this.allSuperDeclaringTypeNames, receiverBinding)) {\r", "+\t\t\treturn false;\r", "-\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, binding.type);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "-\t}\r", "+\tif (!this.matchesType(this.typeSimpleName, this.typeQualification, binding.type))\r", "+\t\treturn false;\r", "-\treturn level;\r", "+\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff0b22550c42b9f4ada7e2587e6fa45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "signatureAfterChange": "\r private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "diff": ["-private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverType == null || binding == null) return INACCURATE_MATCH;\r", "-\tint level;\r", "-\t\r", "+private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverBinding == null) {\r", "-\t\treturn INACCURATE_MATCH;\r", "-\t} else {\r", "-\t\tlevel = this.matchLevelAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverBinding);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "+\tif (receiverBinding != null \r", "+\t\t&& !this.matchesAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification)\r", "+\t\t&& !this.matchesType(this.allSuperDeclaringTypeNames, receiverBinding)) {\r", "+\t\t\treturn false;\r", "-\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, binding.type);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "-\t}\r", "+\tif (!this.matchesType(this.typeSimpleName, this.typeQualification, binding.type))\r", "+\t\treturn false;\r", "-\treturn level;\r", "+\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada9c3dab8554fe7e51af153c7454b79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "signatureAfterChange": "\r private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding)", "diff": ["-private int matchLevel(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverType == null || binding == null) return INACCURATE_MATCH;\r", "-\tint level;\r", "-\t\r", "+private boolean matches(TypeBinding receiverType, boolean isSuperAccess, FieldBinding binding) {\r", "-\tif (receiverBinding == null) {\r", "-\t\treturn INACCURATE_MATCH;\r", "-\t} else {\r", "-\t\tlevel = this.matchLevelAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification);\r", "-\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\tlevel = this.matchLevelForType(this.allSuperDeclaringTypeNames, receiverBinding);\r", "-\t\t\tif (level == IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "+\tif (receiverBinding != null \r", "+\t\t&& !this.matchesAsSubtype(receiverBinding, this.declaringSimpleName, this.declaringQualification)\r", "+\t\t&& !this.matchesType(this.allSuperDeclaringTypeNames, receiverBinding)) {\r", "+\t\t\treturn false;\r", "-\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, binding.type);\r", "-\tswitch (newLevel) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\tcase ACCURATE_MATCH: // keep previous level\r", "-\t\t\tbreak;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tlevel = newLevel;\r", "-\t\t\tbreak;\r", "-\t}\r", "+\tif (!this.matchesType(this.typeSimpleName, this.typeQualification, binding.type))\r", "+\t\treturn false;\r", "-\treturn level;\r", "+\treturn true;\r"]}], "num": 55126}