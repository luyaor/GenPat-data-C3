{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9580a2a7984627569770f961dab80991", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b73d721ed1b2a21eef31880259979d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "7086675b9016b36eb3327ff794af3728a774a189", "commitAfterChange": "08be90368f9af9d6750464056e901efd458851a8", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void testRegion4() throws CoreException", "signatureAfterChange": " public void testRegion4() throws CoreException", "diff": ["+\t\t\t\"Super types of root classes:\\n\" + ", "+\t\t\t\"  Object [in Object.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"  Class [in Class.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"    Y [in Y.java [in <default> [in <project root> [in P2]]]]\\n\" + ", "-\t\t\t\"    Z [in Z.java [in <default> [in <project root> [in P3]]]]\\n\" + ", "-\t\t\t\"  String [in String.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"    Error [in Error.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"      CloneNotSupportedException [in CloneNotSupportedException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"        IllegalMonitorStateException [in IllegalMonitorStateException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"      InterruptedException [in InterruptedException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"      RuntimeException [in RuntimeException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"    Exception [in Exception.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"  Throwable [in Throwable.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "-\t\t\t\"  X [in X.java [in <default> [in <project root> [in P1]]]]\\n\",", "+\t\t\t\"  Object [in Object.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"    Class [in Class.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"    String [in String.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"    Throwable [in Throwable.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"      Error [in Error.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"      Exception [in Exception.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"        CloneNotSupportedException [in CloneNotSupportedException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"        InterruptedException [in InterruptedException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"        RuntimeException [in RuntimeException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"          IllegalMonitorStateException [in IllegalMonitorStateException.class [in java.lang [in \"+ getExternalJCLPathString() + \"]]]\\n\" + ", "+\t\t\t\"    X [in X.java [in <default> [in <project root> [in P1]]]]\\n\" + ", "+\t\t\t\"      Y [in Y.java [in <default> [in <project root> [in P2]]]]\\n\" + ", "+\t\t\t\"      Z [in Z.java [in <default> [in <project root> [in P3]]]]\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee26bf9d2f4c0339eeb4ac03612e379", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "9f0a7de232b0429aaff702bf9a19a07638ecc8fd", "commitAfterChange": "7d8affce339a3277ba7bbb97e6b1e8cd9e2dfecb", "methodNumberBeforeChange": 419, "methodNumberAfterChange": 419, "signatureBeforeChange": " public void testBug167190() throws CoreException, JavaModelException", "signatureAfterChange": " public void testBug167190() throws CoreException, JavaModelException", "diff": ["-\tTypeNameMatchCollector requestor = new TypeNameMatchCollector();", "+\t// Search all type names with TypeNameMatchRequestor", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector() {", "+\t\tpublic String toString(){", "+\t\t\treturn toFullyQualifiedNamesString();", "+\t\t}", "+\t};", "+\tnew SearchEngine().searchAllTypeNames(", "+\t\tnull,", "+\t\tSearchPattern.R_EXACT_MATCH,", "+\t\t\"C\".toCharArray(), // need a prefix which returns most of different types (class file, CU, member,...)", "+\t\tSearchPattern.R_PREFIX_MATCH,", "+\t\tIJavaSearchConstants.TYPE,", "+\t\tscope,", "+\t\tcollector,", "+\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,", "+\t\tnull);", "+\t// Search all type names with old API", "+\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();", "-\tassertSearchResults(", "-\t\t\"C (not open) [in C.class [in test [in lib/b124469.jar [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"C (not open) [in C.java [in b137984 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"C (not open) [in C.java [in b137984 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"C (not open) [in C.java [in b163984 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"C2 (not open) [in C [in C.java [in b137984 [in src [in JavaSearchBugs]]]]]\\n\" + ", "-\t\t\"C86293 (not open) [in C86293.class [in <default> [in lib/b86293.jar [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CJ (not open) [in CJ.class [in <default> [in lib/b137984.jar [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CJ2 (not open) [in CJ$CJ2.class [in <default> [in lib/b137984.jar [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CJ3 (not open) [in CJ$CJ2$CJ3.class [in <default> [in lib/b137984.jar [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"C_124645 (not open) [in T_124645.java [in b124645 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CharSequence (not open) [in CharSequence.class [in java.lang [in \"+ getExternalJCLPathString(\"1.5\") + \"]]]\\n\" + ", "-\t\t\"Class (not open) [in Class.class [in java.lang [in \"+ getExternalJCLPathString(\"1.5\") + \"]]]\\n\" + ", "-\t\t\"CloneNotSupportedException (not open) [in CloneNotSupportedException.class [in java.lang [in \"+ getExternalJCLPathString(\"1.5\") + \"]]]\\n\" + ", "-\t\t\"Collection (not open) [in Collection.class [in b87627 [in lib/b87627.jar [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"Comparable (not open) [in Comparable.class [in java.lang [in \"+ getExternalJCLPathString(\"1.5\") + \"]]]\\n\" + ", "-\t\t\"Test (not open) [in Test.java [in b95794 [in src [in JavaSearchBugs]]]]\",", "-\t\trequestor", "-\t);", "+\t// Should have same types with these 2 searches", "+\tassertEquals(\"Found types sounds not to be correct\", requestor.toString(), collector.toString());"]}], "num": 63704}