{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bafd991e864317f4724eb111ff8fdd58", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "290ded3e1d83f4cab40db6466b362ca4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "be82097c498d6f583ba790eee925eb3971286a23", "commitAfterChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(ISourceMethod sourceMethod, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(ISourceMethod sourceMethod, CompilationResult compilationResult)", "diff": ["+\t\t\tTypeReference typeReference = createTypeReference(argumentTypeNames[i], start, end);", "+\t\t\tif (isVarargs && i == argumentCount-1) {", "+\t\t\t\ttypeReference.bits |= ASTNode.IsVarArgs;", "+\t\t\t}", "-\t\t\t\t\tcreateTypeReference(argumentTypeNames[i], start, end),", "-\t\t\t\t\tAccDefault,", "-\t\t\t\t\tisVarargs && i == argumentCount-1);", "+\t\t\t\t\ttypeReference,", "+\t\t\t\t\tAccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "872f06c98f7e4d44118518a299262c6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "be82097c498d6f583ba790eee925eb3971286a23", "commitAfterChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate static AbstractMethodDeclaration convert(IMethod method, IType type, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static AbstractMethodDeclaration convert(IMethod method, IType type, CompilationResult compilationResult) throws JavaModelException", "diff": ["+\t\t\tTypeReference typeReference = createTypeReference(Signature.toString(argumentTypeName).toCharArray());", "+\t\t\tif (isVarargs && i == argumentCount-1) {", "+\t\t\t\ttypeReference.bits |= ASTNode.IsVarArgs;", "+\t\t\t}", "-\t\t\t\tcreateTypeReference(Signature.toString(argumentTypeName).toCharArray()),", "-\t\t\t\tCompilerModifiers.AccDefault,", "-\t\t\t\tisVarargs && i == argumentCount-1);", "+\t\t\t\ttypeReference,", "+\t\t\t\tCompilerModifiers.AccDefault);"]}], "num": 52190}