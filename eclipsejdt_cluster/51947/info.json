{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a43ef12fcf7d8f5af5d8a9a5f559c0a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5989f8a1205f60b460787ccc4551dc7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "db7093da2cf6f358a18d285a7e0e1a5ce941d97d", "commitAfterChange": "3656343b586266f36b536ed83d5f852f6a94c86f", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " \tpublic void updateClasspathMarkers(Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": " \tpublic void updateClasspathMarkers(Map preferredClasspaths, Map preferredOutputs)", "diff": ["-\t\t\t\tif (!status.isOK()) this.createClasspathProblemMarker(status);\t\t\t\t\t ", "+\t\t\t\tif (!status.isOK()) {", "+\t\t\t\t\tif (status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH && ((ClasspathEntry) classpath[i]).isOptional())", "+\t\t\t\t\t\tcontinue; // ignore this entry", "+\t\t\t\t\tthis.createClasspathProblemMarker(status);\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95eae36209573025c8d766494ba9a4e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "db7093da2cf6f358a18d285a7e0e1a5ce941d97d", "commitAfterChange": "3656343b586266f36b536ed83d5f852f6a94c86f", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap rawReverseMap) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tIClasspathEntry[] classpathEntries, \t\tIPath projectOutputLocation, \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError, \t\tMap rawReverseMap) \t\tthrows JavaModelException", "diff": ["-\t\t\t\tif (generateMarkerOnError && !status.isOK()) createClasspathProblemMarker(status);", "+\t\t\t\tif (generateMarkerOnError && !status.isOK()) {", "+\t\t\t\t\tif (status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH && ((ClasspathEntry) rawEntry).isOptional())", "+\t\t\t\t\t\tcontinue; // ignore this entry", "+\t\t\t\t\tcreateClasspathProblemMarker(status);", "+\t\t\t\t}"]}], "num": 51947}