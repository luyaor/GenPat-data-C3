{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56182f97b195d7a2cec4ddf8b2adcc45", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f008b972c40efd6a17f86baf1fe0c25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 256, "signatureBeforeChange": " \tpublic void testJavadoc()", "signatureAfterChange": " \tpublic void testJavadoc()", "diff": ["-\t\tassertTrue(x.getComment().startsWith(\"/**\")); //$NON-NLS-1$", "-\t\tassertTrue(x.getComment().endsWith(\"*/\")); //$NON-NLS-1$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(x.getComment().startsWith(\"/**\")); //$NON-NLS-1$", "+\t\t\tassertTrue(x.getComment().endsWith(\"*/\")); //$NON-NLS-1$", "+\t\t}", "-\t\tfinal String[] samples =", "-\t\t\t{ ", "-\t\t\t  \"/** Hello there */\", //$NON-NLS-1$", "-\t\t\t  \"/**\\n * Line 1\\n * Line 2\\n */\", //$NON-NLS-1$", "-\t\t\t  \"/***/\", //$NON-NLS-1$", "-\t\t\t};", "-\t\tfor (int i = 0; i < samples.length; i++) {\t\t\t", "-\t\t\tpreviousCount = ast.modificationCount();", "-\t\t\tx.setComment(samples[i]);", "-\t\t\tassertTrue(ast.modificationCount() > previousCount);", "-\t\t\tassertTrue(samples[i].equals(x.getComment()));", "-\t\t}", "-", "-\t\tfinal String[] badSamples =", "-\t\t\t{ ", "-\t\t\t  null,", "-\t\t\t  \"\", //$NON-NLS-1$", "-\t\t\t  \"/* */\", //$NON-NLS-1$", "-\t\t\t  \"/**\", //$NON-NLS-1$", "-\t\t\t  \"*/\", //$NON-NLS-1$", "-\t\t\t};", "-", "-\t\t// check that property cannot be set to clearly illegal things", "-\t\tfor (int i = 0; i < badSamples.length; i++) {\t\t\t", "-\t\t\ttry {", "-\t\t\t\tx.setComment(badSamples[i]);", "-\t\t\t\tassertTrue(false);", "-\t\t\t} catch (RuntimeException e) {", "-\t\t\t\t// pass", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tfinal String[] samples =", "+\t\t\t\t{ ", "+\t\t\t\t  \"/** Hello there */\", //$NON-NLS-1$", "+\t\t\t\t  \"/**\\n * Line 1\\n * Line 2\\n */\", //$NON-NLS-1$", "+\t\t\t\t  \"/***/\", //$NON-NLS-1$", "+\t\t\t\t};", "+\t\t\tfor (int i = 0; i < samples.length; i++) {\t\t\t", "+\t\t\t\tpreviousCount = ast.modificationCount();", "+\t\t\t\tx.setComment(samples[i]);", "+\t\t\t\tassertTrue(ast.modificationCount() > previousCount);", "+\t\t\t\tassertTrue(samples[i].equals(x.getComment()));", "+\t\t\t}", "+\t", "+\t\t\tfinal String[] badSamples =", "+\t\t\t\t{ ", "+\t\t\t\t  null,", "+\t\t\t\t  \"\", //$NON-NLS-1$", "+\t\t\t\t  \"/* */\", //$NON-NLS-1$", "+\t\t\t\t  \"/**\", //$NON-NLS-1$", "+\t\t\t\t  \"*/\", //$NON-NLS-1$", "+\t\t\t\t};", "+\t", "+\t\t\t// check that property cannot be set to clearly illegal things", "+\t\t\tfor (int i = 0; i < badSamples.length; i++) {\t\t\t", "+\t\t\t\ttry {", "+\t\t\t\t\tx.setComment(badSamples[i]);", "+\t\t\t\t\tassertTrue(false);", "+\t\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t\t// pass", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb212f9a76100c08735f7e1d9169fbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BuildNotifier.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "signatureAfterChange": " protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "diff": ["+\t\t\tif (newProblem.getID() == IProblem.Task) continue; // skip task", "+\t\t\t\t\tif (pb.getID() == IProblem.Task) continue; // skip task"]}], "num": 42905}