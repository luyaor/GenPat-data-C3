{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "285cc1d5c392b4f66c16e7bb16c0e19b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0c3e0d77faba65ec48a0ffd246876f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f8e9cc8d760d40e7aca97ebb627c5ab02392d804", "commitAfterChange": "78ca28be54dd37f4936afd7f9f84bc9cf69d2754", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tfinal int InsideClasspath = 1;", "-\t\tfinal int InsideDestinationPath = 2;", "-\t\tfinal int TargetSetting = 4;", "-\t\tfinal int InsideLog = 8;", "-\t\tfinal int InsideRepetition = 16;", "-\t\tfinal int InsideSource = 32;", "-\t\tfinal int InsideDefaultEncoding = 64;", "-\t\tfinal int InsideBootClasspath = 128;", "-\t\tfinal int InsideMaxProblems = 256;", "-\t\tfinal int InsideExtdirs = 512;", "-\t\tfinal int InsideSourcepath = 1024;", "+\t\tfinal int INSIDE_CLASSPATH = 1;", "+\t\tfinal int INSIDE_DESTINATION_PATH = 2;", "+\t\tfinal int INSIDE_TARGET = 3;", "+\t\tfinal int INSIDE_LOG = 4;", "+\t\tfinal int INSIDE_REPETITION = 5;", "+\t\tfinal int INSIDE_SOURCE = 6;", "+\t\tfinal int INSIDE_DEFAULT_ENCODING = 7;", "+\t\tfinal int INSIDE_BOOTCLASSPATH = 8;", "+\t\tfinal int INSIDE_MAX_PROBLEMS = 9;", "+\t\tfinal int INSIDE_EXT_DIRS = 10;", "+\t\tfinal int INSIDE_SOURCE_PATH = 11;", "-\t\tfinal int Default = 0;", "+\t\tfinal int DEFAULT = 0;", "-\t\tint mode = Default;", "+\t\tint mode = DEFAULT;", "-\t\tboolean didSpecifySource = false;", "-\t\tboolean didSpecifyCompliance = false;", "-\t\tboolean didSpecifyTarget = false;", "+\t\tboolean didSpecifyCompliance = false;\t", "-\t\t\tcustomEncoding = null;", "-\t\t\tif (currentArg.endsWith(\"]\") && !(mode == InsideBootClasspath || mode == InsideClasspath || //$NON-NLS-1$ ", "-\t\t\t\t\tmode == InsideSourcepath) ) {", "-\t\t\t\t// look for encoding specification", "-\t\t\t\tint encodingStart = currentArg.indexOf('[') + 1;", "-\t\t\t\tint encodingEnd = currentArg.length() - 1;", "-\t\t\t\tif (encodingStart >= 1) {", "-\t\t\t\t\tif (encodingStart < encodingEnd) {", "-\t\t\t\t\t\tcustomEncoding = currentArg.substring(encodingStart, encodingEnd);", "-\t\t\t\t\t\ttry { // ensure encoding is supported", "-\t\t\t\t\t\t\tnew InputStreamReader(new ByteArrayInputStream(new byte[0]), customEncoding);", "-\t\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\t\t\tMain.bind(\"configure.unsupportedEncoding\", customEncoding)); //$NON-NLS-1$", "+\t\t\tswitch(mode) {", "+\t\t\t\tcase DEFAULT :", "+\t\t\t\t\tcustomEncoding = null;", "+\t\t\t\t\tif (currentArg.endsWith(\"]\") && !(mode == INSIDE_BOOTCLASSPATH || mode == INSIDE_CLASSPATH || //$NON-NLS-1$ ", "+\t\t\t\t\t\t\tmode == INSIDE_SOURCE_PATH) ) {", "+\t\t\t\t\t\t// look for encoding specification", "+\t\t\t\t\t\tint encodingStart = currentArg.indexOf('[') + 1;", "+\t\t\t\t\t\tint encodingEnd = currentArg.length() - 1;", "+\t\t\t\t\t\tif (encodingStart >= 1) {", "+\t\t\t\t\t\t\tif (encodingStart < encodingEnd) {", "+\t\t\t\t\t\t\t\tcustomEncoding = currentArg.substring(encodingStart, encodingEnd);", "+\t\t\t\t\t\t\t\ttry { // ensure encoding is supported", "+\t\t\t\t\t\t\t\t\tnew InputStreamReader(new ByteArrayInputStream(new byte[0]), customEncoding);", "+\t\t\t\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\t\t\tMain.bind(\"configure.unsupportedEncoding\", customEncoding)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tcurrentArg = currentArg.substring(0, encodingStart - 1);", "-\t\t\t\t\tcurrentArg = currentArg.substring(0, encodingStart - 1);", "-\t\t\t\t}", "-\t\t\t}", "-", "-\t\t\tif (currentArg.endsWith(SUFFIX_STRING_java)) {", "-\t\t\t\tif (this.filenames == null) {", "-\t\t\t\t\tthis.filenames = new String[argCount - index];", "-\t\t\t\t\tthis.encodings = new String[argCount - index];", "-\t\t\t\t} else if (filesCount == this.filenames.length) {", "-\t\t\t\t\tint length = this.filenames.length;", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tthis.filenames,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(this.filenames = new String[length + argCount - index]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tlength);", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tthis.encodings,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(this.encodings = new String[length + argCount - index]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tlength);", "-\t\t\t\t}", "-\t\t\t\tthis.filenames[filesCount] = currentArg;", "-\t\t\t\tthis.encodings[filesCount++] = customEncoding;", "-\t\t\t\tcustomEncoding = null;", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-log\")) { //$NON-NLS-1$", "-\t\t\t\tif (this.log != null)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateLog\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideLog;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-repeat\")) { //$NON-NLS-1$", "-\t\t\t\tif (this.repetitions > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateRepeat\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideRepetition;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-maxProblems\")) { //$NON-NLS-1$", "-\t\t\t\tif (this.maxProblems > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateMaxProblems\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideMaxProblems;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-source\")) { //$NON-NLS-1$", "-\t\t\t\tmode = InsideSource;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-encoding\")) { //$NON-NLS-1$", "-\t\t\t\tmode = InsideDefaultEncoding;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-1.3\")) { //$NON-NLS-1$", "-\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg));//$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tdidSpecifyCompliance = true;", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-1.4\")) { //$NON-NLS-1$", "-\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tdidSpecifyCompliance = true;", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-1.5\") || currentArg.equals(\"-5\") || currentArg.equals(\"-5.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tdidSpecifyCompliance = true;", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-1.6\") || currentArg.equals(\"-6\") || currentArg.equals(\"-6.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tdidSpecifyCompliance = true;", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-d\")) { //$NON-NLS-1$", "-\t\t\t\tif (this.destinationPath != null)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateOutputPath\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideDestinationPath;", "-\t\t\t\tthis.generatePackagesStructure = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-classpath\") //$NON-NLS-1$", "-\t\t\t\t|| currentArg.equals(\"-cp\")) { //$NON-NLS-1$", "-\t\t\t\tmode = InsideClasspath;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-bootclasspath\")) {//$NON-NLS-1$", "-\t\t\t\tif (bootclasspaths.size() > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateBootClasspath\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideBootClasspath;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-sourcepath\")) {//$NON-NLS-1$", "-\t\t\t\tif (sourcepathClasspaths.size() > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideSourcepath;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-extdirs\")) {//$NON-NLS-1$", "-\t\t\t\tif (extdirsNames.size() > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideExtdirs;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-progress\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.showProgress = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-proceedOnError\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.proceedOnError = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-time\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.timing = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-version\") //$NON-NLS-1$", "-\t\t\t\t\t|| currentArg.equals(\"-v\")) { //$NON-NLS-1$", "-\t\t\t\tthis.logger.logVersion(true);", "-\t\t\t\tthis.proceed = false;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-showversion\")) { //$NON-NLS-1$", "-\t\t\t\tprintVersionRequired = true;", "-\t\t\t\tcontinue;", "-\t\t\t}\t\t\t", "-\t\t\tif (\"-deprecation\".equals(currentArg)) { //$NON-NLS-1$", "-\t\t\t\tdidSpecifyDeprecation = true;", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-help\") || currentArg.equals(\"-?\")) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tprintUsageRequired = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-noExit\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.systemExitWhenFinished = false;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-verbose\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.verbose = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-referenceInfo\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.produceRefInfo = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-inlineJSR\")) { //$NON-NLS-1$", "-\t\t\t    mode = Default;", "-\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_InlineJsr,", "-\t\t\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\t    continue;", "-\t\t\t}", "-\t\t\tif (currentArg.startsWith(\"-g\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tString debugOption = currentArg;", "-\t\t\t\tint length = currentArg.length();", "-\t\t\t\tif (length == 2) {", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_LocalVariableAttribute,", "-\t\t\t\t\t\tCompilerOptions.GENERATE);", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_LineNumberAttribute,", "-\t\t\t\t\t\tCompilerOptions.GENERATE);", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_SourceFileAttribute,", "-\t\t\t\t\t\tCompilerOptions.GENERATE);", "-\t\t\t\t\tcontinue;", "-\t\t\t\t}", "-\t\t\t\tif (length > 3) {", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_LocalVariableAttribute,", "-\t\t\t\t\t\tCompilerOptions.DO_NOT_GENERATE);", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_LineNumberAttribute,", "-\t\t\t\t\t\tCompilerOptions.DO_NOT_GENERATE);", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_SourceFileAttribute,", "-\t\t\t\t\t\tCompilerOptions.DO_NOT_GENERATE);", "-\t\t\t\t\tif (length == 7 && debugOption.equals(\"-g:none\")) //$NON-NLS-1$", "+\t\t", "+\t\t\t\t\tif (currentArg.endsWith(SUFFIX_STRING_java)) {", "+\t\t\t\t\t\tif (this.filenames == null) {", "+\t\t\t\t\t\t\tthis.filenames = new String[argCount - index];", "+\t\t\t\t\t\t\tthis.encodings = new String[argCount - index];", "+\t\t\t\t\t\t} else if (filesCount == this.filenames.length) {", "+\t\t\t\t\t\t\tint length = this.filenames.length;", "+\t\t\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\t\t\tthis.filenames,", "+\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\t(this.filenames = new String[length + argCount - index]),", "+\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\tlength);", "+\t\t\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\t\t\tthis.encodings,", "+\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\t(this.encodings = new String[length + argCount - index]),", "+\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\tlength);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.filenames[filesCount] = currentArg;", "+\t\t\t\t\t\tthis.encodings[filesCount++] = customEncoding;", "+\t\t\t\t\t\tcustomEncoding = null;", "+\t\t\t\t\t\tmode = DEFAULT;", "-\t\t\t\t\tStringTokenizer tokenizer =", "-\t\t\t\t\t\tnew StringTokenizer(debugOption.substring(3, debugOption.length()), \",\"); //$NON-NLS-1$", "-\t\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "-\t\t\t\t\t\tString token = tokenizer.nextToken();", "-\t\t\t\t\t\tif (token.equals(\"vars\")) { //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-log\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.log != null)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateLog\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_LOG;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-repeat\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.repetitions > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateRepeat\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_REPETITION;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-maxProblems\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.maxProblems > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateMaxProblems\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_MAX_PROBLEMS;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-source\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_SOURCE;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-encoding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_DEFAULT_ENCODING;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-1.3\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg));//$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdidSpecifyCompliance = true;", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-1.4\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdidSpecifyCompliance = true;", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-1.5\") || currentArg.equals(\"-5\") || currentArg.equals(\"-5.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdidSpecifyCompliance = true;", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-1.6\") || currentArg.equals(\"-6\") || currentArg.equals(\"-6.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdidSpecifyCompliance = true;", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-d\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tif (this.destinationPath != null)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateOutputPath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_DESTINATION_PATH;", "+\t\t\t\t\t\tthis.generatePackagesStructure = true;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-classpath\") //$NON-NLS-1$", "+\t\t\t\t\t\t|| currentArg.equals(\"-cp\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_CLASSPATH;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-bootclasspath\")) {//$NON-NLS-1$", "+\t\t\t\t\t\tif (bootclasspaths.size() > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateBootClasspath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_BOOTCLASSPATH;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-sourcepath\")) {//$NON-NLS-1$", "+\t\t\t\t\t\tif (sourcepathClasspaths.size() > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_SOURCE_PATH;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-extdirs\")) {//$NON-NLS-1$", "+\t\t\t\t\t\tif (extdirsNames.size() > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_EXT_DIRS;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-progress\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tthis.showProgress = true;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-proceedOnError\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tthis.proceedOnError = true;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-time\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tthis.timing = true;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-version\") //$NON-NLS-1$", "+\t\t\t\t\t\t\t|| currentArg.equals(\"-v\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.logger.logVersion(true);", "+\t\t\t\t\t\tthis.proceed = false;", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-showversion\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tprintVersionRequired = true;", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}\t\t\t", "+\t\t\t\t\tif (\"-deprecation\".equals(currentArg)) { //$NON-NLS-1$", "+\t\t\t\t\t\tdidSpecifyDeprecation = true;", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-help\") || currentArg.equals(\"-?\")) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\tprintUsageRequired = true;", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-noExit\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.systemExitWhenFinished = false;", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-verbose\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.verbose = true;", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-referenceInfo\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.produceRefInfo = true;", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-inlineJSR\")) { //$NON-NLS-1$", "+\t\t\t\t\t    mode = DEFAULT;", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\tCompilerOptions.OPTION_InlineJsr,", "+\t\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\t    continue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.startsWith(\"-g\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tString debugOption = currentArg;", "+\t\t\t\t\t\tint length = currentArg.length();", "+\t\t\t\t\t\tif (length == 2) {", "-\t\t\t\t\t\t} else if (token.equals(\"lines\")) { //$NON-NLS-1$", "-\t\t\t\t\t\t} else if (token.equals(\"source\")) { //$NON-NLS-1$", "-\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (length > 3) {", "+\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\tCompilerOptions.OPTION_LocalVariableAttribute,", "+\t\t\t\t\t\t\t\tCompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\tCompilerOptions.OPTION_LineNumberAttribute,", "+\t\t\t\t\t\t\t\tCompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\tCompilerOptions.OPTION_SourceFileAttribute,", "+\t\t\t\t\t\t\t\tCompilerOptions.DO_NOT_GENERATE);", "+\t\t\t\t\t\t\tif (length == 7 && debugOption.equals(\"-g:none\")) //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t\tStringTokenizer tokenizer =", "+\t\t\t\t\t\t\t\tnew StringTokenizer(debugOption.substring(3, debugOption.length()), \",\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\t\t\t\tString token = tokenizer.nextToken();", "+\t\t\t\t\t\t\t\tif (token.equals(\"vars\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_LocalVariableAttribute,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.GENERATE);", "+\t\t\t\t\t\t\t\t} else if (token.equals(\"lines\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_LineNumberAttribute,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.GENERATE);", "+\t\t\t\t\t\t\t\t} else if (token.equals(\"source\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_SourceFileAttribute,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.GENERATE);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\t\t\tMain.bind(\"configure.invalidDebugOption\", debugOption)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tMain.bind(\"configure.invalidDebugOption\", debugOption)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.startsWith(\"-nowarn\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tdisableWarnings();", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.startsWith(\"-warn\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tString warningOption = currentArg;", "+\t\t\t\t\t\tint length = currentArg.length();", "+\t\t\t\t\t\tif (length == 10 && warningOption.equals(\"-warn:none\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tdisableWarnings();", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (length <= 6) {", "-\t\t\t\t\t\t\t\tMain.bind(\"configure.invalidDebugOption\", debugOption)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.invalidWarningConfiguration\", warningOption)); //$NON-NLS-1$", "+\t\t\t\t\t\tint warnTokenStart;", "+\t\t\t\t\t\tboolean isEnabling;", "+\t\t\t\t\t\tswitch (warningOption.charAt(6)) {", "+\t\t\t\t\t\t\tcase '+' : ", "+\t\t\t\t\t\t\t\twarnTokenStart = 7;", "+\t\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase '-' :", "+\t\t\t\t\t\t\t\twarnTokenStart = 7;", "+\t\t\t\t\t\t\t\tisEnabling = false; // mentionned warnings are disabled", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\twarnTokenStart = 6;", "+\t\t\t\t\t\t\t\t// clear default warning level", "+\t\t\t\t\t\t\t\t// but allow multiple warning option on the command line", "+\t\t\t\t\t\t\t\tif (!didSpecifyWarnings) disableWarnings();", "+\t\t\t\t\t\t\t\tisEnabling = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t\tStringTokenizer tokenizer =", "+\t\t\t\t\t\t\tnew StringTokenizer(warningOption.substring(warnTokenStart, warningOption.length()), \",\"); //$NON-NLS-1$", "+\t\t\t\t\t\tint tokenCounter = 0;", "+\t\t", "+\t\t\t\t\t\tif (didSpecifyDeprecation) {  // deprecation could have also been set through -deprecation option", "+\t\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t", "+\t\t\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\t\t\tString token = tokenizer.nextToken();", "+\t\t\t\t\t\t\ttokenCounter++;", "+\t\t\t\t\t\t\tif (token.equals(\"constructorName\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMethodWithConstructorName,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"pkgDefaultMethod\") || token.equals(\"packageDefaultMethod\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportOverridingPackageDefaultMethod,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"maskedCatchBlock\") || token.equals(\"maskedCatchBlocks\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportHiddenCatchBlock,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"deprecation\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecation, ", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, ", "+\t\t\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, ", "+\t\t\t\t\t\t\t\t\tCompilerOptions.DISABLED);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"allDeprecation\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecation, ", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, ", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, ", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unusedLocal\") || token.equals(\"unusedLocals\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unusedArgument\") || token.equals(\"unusedArguments\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unusedImport\") || token.equals(\"unusedImports\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedImport,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unusedPrivate\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unusedLabel\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLabel,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"localHiding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"fieldHiding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"specialParamHiding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSpecialParameterHidingField,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t} else if (token.equals(\"conditionAssign\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t   \t\t\t\t\t} else if (token.equals(\"syntheticAccess\") //$NON-NLS-1$", "+\t\t   \t\t\t\t\t\t\t|| token.equals(\"synthetic-access\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSyntheticAccessEmulation,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"nls\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonExternalizedStringLiteral,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"staticReceiver\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonStaticAccessToStatic,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"indirectStatic\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIndirectStaticAccess,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"noEffectAssign\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"intfNonInherited\") || token.equals(\"interfaceNonInherited\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"charConcat\") || token.equals(\"noImplicitStringConversion\")/*backward compatible*/) {//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoImplicitStringConversion,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"semicolon\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportEmptyStatement,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"serial\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingSerialVersion,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"emptyBlock\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUndocumentedEmptyBlock,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"uselessTypeCheck\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnnecessaryTypeCheck,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unchecked\") || token.equals(\"unsafe\")) {//$NON-NLS-1$ //$NON-NLS-2$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUncheckedTypeOperation,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"raw\")) {//$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportRawTypeReference,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"finalBound\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFinalParameterBound,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"suppress\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_SuppressWarnings,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t} else if (token.equals(\"warningToken\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnhandledWarningToken,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unnecessaryElse\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnnecessaryElse,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"javadoc\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\t\t\tif (!useEnableJavadoc) {", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED: CompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// if disabling then it's not necessary to set other javadoc options", "+\t\t\t\t\t\t\t\tif (isEnabling) {", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else if (token.equals(\"allJavadoc\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tif (!useEnableJavadoc) {", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED: CompilerOptions.DISABLED);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// if disabling then it's not necessary to set other javadoc options", "+\t\t\t\t\t\t\t\tif (isEnabling) {", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "+\t\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "+\t\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else if (token.startsWith(\"tasks\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tString taskTags = \"\"; //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tint start = token.indexOf('(');", "+\t\t\t\t\t\t\t\tint end = token.indexOf(')');", "+\t\t\t\t\t\t\t\tif (start >= 0 && end >= 0 && start < end){", "+\t\t\t\t\t\t\t\t\ttaskTags = token.substring(start+1, end).trim();", "+\t\t\t\t\t\t\t\t\ttaskTags = taskTags.replace('|',',');", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (taskTags.length() == 0){", "+\t\t\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.invalidTaskTag\", token)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_TaskTags,", "+\t\t\t\t\t\t\t\t\tisEnabling ? taskTags : \"\");  //$NON-NLS-1$", "+\t\t\t\t\t\t\t} else if (token.equals(\"assertIdentifier\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportAssertIdentifier,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"enumIdentifier\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportEnumIdentifier,", "+\t\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"finally\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFinallyBlockNotCompletingNormally,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unusedThrown\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unqualifiedField\") //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnqualifiedFieldAccess,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"typeHiding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportTypeParameterHiding,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"varargsCast\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportVarargsArgumentNeedCast,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"null\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNullReference,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"boxing\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportAutoboxing,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"over-ann\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingOverrideAnnotation,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"dep-ann\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingDeprecatedAnnotation,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"intfAnnotation\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportAnnotationSuperInterface,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"enumSwitch\") //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIncompleteEnumSwitch,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "+\t\t\t\t\t\t\t} else if (token.equals(\"hiding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportHiddenCatchBlock,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportTypeParameterHiding,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"static-access\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonStaticAccessToStatic,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIndirectStaticAccess,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"unused\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedImport,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLabel,", "+\t\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"paramAssign\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportParameterAssignment,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"discouraged\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDiscouragedReference,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"forbidden\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportForbiddenReference,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else if (token.equals(\"fallthrough\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFallthroughCase,", "+\t\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.invalidWarning\", token)); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (tokenCounter == 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.invalidWarningOption\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tdidSpecifyWarnings = true;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\tif (currentArg.equals(\"-target\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_TARGET;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-preserveAllLocals\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_PreserveUnusedLocal,", "+\t\t\t\t\t\t\tCompilerOptions.PRESERVE);", "+\t\t\t\t\t    mode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-enableJavadoc\")) {//$NON-NLS-1$", "+\t\t\t\t\t    mode = DEFAULT;", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "+\t\t\t\t\t\tuseEnableJavadoc = true;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-Xemacs\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tthis.logger.setEmacs();", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\t// tolerated javac options - quietly filtered out", "+\t\t\t\t\tif (currentArg.startsWith(\"-X\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.startsWith(\"-J\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-O\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tif (currentArg.equals(\"-sourcepath\")) {//$NON-NLS-1$", "+\t\t\t\t\t\tif (sourcepathClasspaths.size() > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_SOURCE_PATH;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (currentArg.equals(\"-extdirs\")) {//$NON-NLS-1$", "+\t\t\t\t\t\tif (extdirsNames.size() > 0)", "+\t\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\tmode = INSIDE_EXT_DIRS;", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase INSIDE_TARGET :", "+\t\t\t\t\tif (this.didSpecifyTarget) {", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateTarget\", currentArg));//$NON-NLS-1$", "+\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\tthis.didSpecifyTarget = true;", "+\t\t\t\t\tif (currentArg.equals(\"1.1\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.2\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.3\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_3);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.6\") || currentArg.equals(\"6\") || currentArg.equals(\"6.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.targetJDK\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tmode = DEFAULT;", "-\t\t\t\t}", "-\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\tMain.bind(\"configure.invalidDebugOption\", debugOption)); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tif (currentArg.startsWith(\"-nowarn\")) { //$NON-NLS-1$", "-\t\t\t\tdisableWarnings();", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.startsWith(\"-warn\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tString warningOption = currentArg;", "-\t\t\t\tint length = currentArg.length();", "-\t\t\t\tif (length == 10 && warningOption.equals(\"-warn:none\")) { //$NON-NLS-1$", "-\t\t\t\t\tdisableWarnings();", "+\t\t\t\tcase INSIDE_LOG :", "+\t\t\t\t\tthis.log = currentArg;", "+\t\t\t\t\tmode = DEFAULT;", "-\t\t\t\t}", "-\t\t\t\tif (length <= 6) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.invalidWarningConfiguration\", warningOption)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tint warnTokenStart;", "-\t\t\t\tboolean isEnabling;", "-\t\t\t\tswitch (warningOption.charAt(6)) {", "-\t\t\t\t\tcase '+' : ", "-\t\t\t\t\t\twarnTokenStart = 7;", "-\t\t\t\t\t\tisEnabling = true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase '-' :", "-\t\t\t\t\t\twarnTokenStart = 7;", "-\t\t\t\t\t\tisEnabling = false; // mentionned warnings are disabled", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\twarnTokenStart = 6;", "-\t\t\t\t\t\t// clear default warning level", "-\t\t\t\t\t\t// but allow multiple warning option on the command line", "-\t\t\t\t\t\tif (!didSpecifyWarnings) disableWarnings();", "-\t\t\t\t\t\tisEnabling = true;", "-\t\t\t\t}", "-\t\t\t", "-\t\t\t\tStringTokenizer tokenizer =", "-\t\t\t\t\tnew StringTokenizer(warningOption.substring(warnTokenStart, warningOption.length()), \",\"); //$NON-NLS-1$", "-\t\t\t\tint tokenCounter = 0;", "-", "-\t\t\t\tif (didSpecifyDeprecation) {  // deprecation could have also been set through -deprecation option", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);", "-\t\t\t\t}", "-\t\t\t\t", "-\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "-\t\t\t\t\tString token = tokenizer.nextToken();", "-\t\t\t\t\ttokenCounter++;", "-\t\t\t\t\tif (token.equals(\"constructorName\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMethodWithConstructorName,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"pkgDefaultMethod\") || token.equals(\"packageDefaultMethod\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportOverridingPackageDefaultMethod,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"maskedCatchBlock\") || token.equals(\"maskedCatchBlocks\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportHiddenCatchBlock,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"deprecation\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecation, ", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, ", "-\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, ", "-\t\t\t\t\t\t\tCompilerOptions.DISABLED);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"allDeprecation\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecation, ", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, ", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, ", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "-\t\t\t\t\t} else if (token.equals(\"unusedLocal\") || token.equals(\"unusedLocals\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unusedArgument\") || token.equals(\"unusedArguments\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unusedImport\") || token.equals(\"unusedImports\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedImport,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unusedPrivate\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unusedLabel\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLabel,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"localHiding\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"fieldHiding\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"specialParamHiding\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSpecialParameterHidingField,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "-\t\t\t\t\t} else if (token.equals(\"conditionAssign\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-   \t\t\t\t\t} else if (token.equals(\"syntheticAccess\") //$NON-NLS-1$", "-   \t\t\t\t\t\t\t|| token.equals(\"synthetic-access\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSyntheticAccessEmulation,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"nls\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonExternalizedStringLiteral,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"staticReceiver\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonStaticAccessToStatic,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"indirectStatic\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIndirectStaticAccess,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"noEffectAssign\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"intfNonInherited\") || token.equals(\"interfaceNonInherited\")/*backward compatible*/) { //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"charConcat\") || token.equals(\"noImplicitStringConversion\")/*backward compatible*/) {//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoImplicitStringConversion,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"semicolon\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportEmptyStatement,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"serial\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingSerialVersion,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"emptyBlock\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUndocumentedEmptyBlock,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"uselessTypeCheck\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnnecessaryTypeCheck,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unchecked\") || token.equals(\"unsafe\")) {//$NON-NLS-1$ //$NON-NLS-2$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUncheckedTypeOperation,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"raw\")) {//$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportRawTypeReference,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"finalBound\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFinalParameterBound,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"suppress\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_SuppressWarnings,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED : CompilerOptions.DISABLED);", "-\t\t\t\t\t} else if (token.equals(\"warningToken\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnhandledWarningToken,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unnecessaryElse\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnnecessaryElse,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"javadoc\")) {//$NON-NLS-1$ ", "-\t\t\t\t\t\tif (!useEnableJavadoc) {", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED: CompilerOptions.DISABLED);", "+\t\t\t\tcase INSIDE_REPETITION :", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.repetitions = Integer.parseInt(currentArg);", "+\t\t\t\t\t\tif (this.repetitions <= 0) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.repetition\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t\t\t// if disabling then it's not necessary to set other javadoc options", "-\t\t\t\t\t\tif (isEnabling) {", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "-\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "-\t\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "-\t\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "-\t\t\t\t\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "-\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "-\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "-\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (token.equals(\"allJavadoc\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tif (!useEnableJavadoc) {", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.ENABLED: CompilerOptions.DISABLED);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\t// if disabling then it's not necessary to set other javadoc options", "-\t\t\t\t\t\tif (isEnabling) {", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "-\t\t\t\t\t\t\tCompilerOptions.WARNING);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "-\t\t\t\t\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "-\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "-\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "-\t\t\t\t\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "-\t\t\t\t\t\t\t\tCompilerOptions.WARNING);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (token.startsWith(\"tasks\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tString taskTags = \"\"; //$NON-NLS-1$", "-\t\t\t\t\t\tint start = token.indexOf('(');", "-\t\t\t\t\t\tint end = token.indexOf(')');", "-\t\t\t\t\t\tif (start >= 0 && end >= 0 && start < end){", "-\t\t\t\t\t\t\ttaskTags = token.substring(start+1, end).trim();", "-\t\t\t\t\t\t\ttaskTags = taskTags.replace('|',',');", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (taskTags.length() == 0){", "-\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.invalidTaskTag\", token)); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_TaskTags,", "-\t\t\t\t\t\t\tisEnabling ? taskTags : \"\");  //$NON-NLS-1$", "-\t\t\t\t\t} else if (token.equals(\"assertIdentifier\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportAssertIdentifier,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"enumIdentifier\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportEnumIdentifier,", "-\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"finally\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFinallyBlockNotCompletingNormally,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unusedThrown\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unqualifiedField\") //$NON-NLS-1$", "-\t\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnqualifiedFieldAccess,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"typeHiding\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportTypeParameterHiding,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"varargsCast\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportVarargsArgumentNeedCast,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"null\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNullReference,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"boxing\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportAutoboxing,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"over-ann\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingOverrideAnnotation,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"dep-ann\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportMissingDeprecatedAnnotation,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"intfAnnotation\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportAnnotationSuperInterface,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"enumSwitch\") //$NON-NLS-1$", "-\t\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIncompleteEnumSwitch,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);\t\t\t\t\t\t", "-\t\t\t\t\t} else if (token.equals(\"hiding\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportHiddenCatchBlock,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportTypeParameterHiding,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"static-access\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonStaticAccessToStatic,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIndirectStaticAccess,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"unused\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedImport,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLabel,", "-\t\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"paramAssign\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportParameterAssignment,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"discouraged\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportDiscouragedReference,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"forbidden\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportForbiddenReference,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else if (token.equals(\"fallthrough\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFallthroughCase,", "-\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.invalidWarning\", token)); //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (tokenCounter == 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.invalidWarningOption\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tdidSpecifyWarnings = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-target\")) { //$NON-NLS-1$", "-\t\t\t\tmode = TargetSetting;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-preserveAllLocals\")) { //$NON-NLS-1$", "-\t\t\t\tthis.options.put(", "-\t\t\t\t\tCompilerOptions.OPTION_PreserveUnusedLocal,", "-\t\t\t\t\tCompilerOptions.PRESERVE);", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-enableJavadoc\")) {//$NON-NLS-1$", "-\t\t\t\tthis.options.put(", "-\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\t\tuseEnableJavadoc = true;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-Xemacs\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tthis.logger.setEmacs();", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\t// tolerated javac options - quietly filtered out", "-\t\t\tif (currentArg.startsWith(\"-X\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.startsWith(\"-J\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-O\")) { //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (currentArg.equals(\"-sourcepath\")) {//$NON-NLS-1$", "-\t\t\t\tif (sourcepathClasspaths.size() > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateSourcepath\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideSourcepath;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (currentArg.equals(\"-extdirs\")) {//$NON-NLS-1$", "-\t\t\t\tif (extdirsNames.size() > 0)", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateExtdirs\", currentArg)); //$NON-NLS-1$", "-\t\t\t\tmode = InsideExtdirs;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-", "-\t\t\tif (mode == TargetSetting) {", "-\t\t\t\tif (didSpecifyTarget) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateTarget\", currentArg));//$NON-NLS-1$", "-\t\t\t\t}\t\t\t\t", "-\t\t\t\tdidSpecifyTarget = true;", "-\t\t\t\tif (currentArg.equals(\"1.1\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "-\t\t\t\t} else if (currentArg.equals(\"1.2\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t\t} else if (currentArg.equals(\"1.3\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_3);", "-\t\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4) {", "-\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\t\t\t}", "-\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "-\t\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_5) {", "-\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\t\t\t\t\t}", "-\t\t\t\t} else if (currentArg.equals(\"1.6\") || currentArg.equals(\"6\") || currentArg.equals(\"6.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "-\t\t\t\t\tif (didSpecifyCompliance) {", "-\t\t\t\t\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_6) {", "-\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.targetJDK\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideLog) {", "-\t\t\t\tthis.log = currentArg;", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideRepetition) {", "-\t\t\t\ttry {", "-\t\t\t\t\tthis.repetitions = Integer.parseInt(currentArg);", "-\t\t\t\t\tif (this.repetitions <= 0) {", "+\t\t\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.repetition\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideMaxProblems) {", "-\t\t\t\ttry {", "-\t\t\t\t\tthis.maxProblems = Integer.parseInt(currentArg);", "-\t\t\t\t\tif (this.maxProblems <= 0) {", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\tcase INSIDE_MAX_PROBLEMS :", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tthis.maxProblems = Integer.parseInt(currentArg);", "+\t\t\t\t\t\tif (this.maxProblems <= 0) {", "+\t\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.maxProblems\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_MaxProblemPerUnit, currentArg);", "+\t\t\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_MaxProblemPerUnit, currentArg);", "-\t\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.maxProblems\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideSource) {", "-\t\t\t\tif (didSpecifySource) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateSource\", currentArg));//$NON-NLS-1$", "-\t\t\t\t}\t\t\t\t", "-\t\t\t\tdidSpecifySource = true;", "-\t\t\t\tif (currentArg.equals(\"1.3\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);", "-\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "-\t\t\t\t} else if (currentArg.equals(\"1.6\") || currentArg.equals(\"6\") || currentArg.equals(\"6.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "-\t\t\t\t} else {", "-\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.source\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideDefaultEncoding) {", "-\t\t\t\tif (didSpecifyDefaultEncoding) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.duplicateDefaultEncoding\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\ttry { // ensure encoding is supported", "-\t\t\t\t\tnew InputStreamReader(new ByteArrayInputStream(new byte[0]), currentArg);", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tthrow new InvalidInputException(", "-\t\t\t\t\t\tMain.bind(\"configure.unsupportedEncoding\", currentArg)); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_Encoding, currentArg);", "-\t\t\t\tdidSpecifyDefaultEncoding = true;", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideDestinationPath) {", "-\t\t\t\tthis.destinationPath = currentArg;", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideClasspath || mode == InsideBootClasspath || mode == InsideSourcepath) {", "-\t\t\t\tStringTokenizer tokenizer = new StringTokenizer(currentArg,", "-\t\t\t\t\t\tFile.pathSeparator + \"[]\", true); //$NON-NLS-1$", "-\t\t\t\t// state machine", "-\t\t\t\tfinal int start = 0; ", "-\t\t\t\tfinal int readyToClose = 1;", "-\t\t\t\t// 'path' 'path1[rule];path2'", "-\t\t\t\tfinal int readyToCloseEndingWithRules = 2;", "-\t\t\t\t// 'path[rule]' 'path1;path2[rule]'", "-\t\t\t\tfinal int readyToCloseOrOtherEntry = 3;", "-\t\t\t\t// 'path[rule];' 'path;' 'path1;path2;'", "-\t\t\t\tfinal int rulesNeedAnotherRule = 4;", "-\t\t\t\t// 'path[rule1;'", "-\t\t\t\tfinal int rulesStart = 5;", "-\t\t\t\t// 'path[' 'path1;path2['", "-\t\t\t\tfinal int rulesReadyToClose = 6;", "-\t\t\t\t// 'path[rule' 'path[rule1;rule2'", "-\t\t\t\tfinal int error = 99;", "-\t\t\t\tint state = start;", "-\t\t\t\tString token = null;", "-\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "-\t\t\t\t\ttoken = tokenizer.nextToken();", "-\t\t\t\t\tif (token.equals(File.pathSeparator)) {", "-\t\t\t\t\t\tswitch (state) {", "-\t\t\t\t\t\tcase start:", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase readyToClose:", "-\t\t\t\t\t\tcase readyToCloseEndingWithRules:", "-\t\t\t\t\t\tcase readyToCloseOrOtherEntry:", "-\t\t\t\t\t\t\tstate = readyToCloseOrOtherEntry;", "-\t\t\t\t\t\t\taddNewEntry(InsideClasspath, InsideSourcepath, bootclasspaths, classpaths, sourcepathClasspaths, currentClasspathName, currentRuleSpecs, mode, customEncoding);", "-\t\t\t\t\t\t\tcurrentRuleSpecs.clear();", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase rulesReadyToClose:", "-\t\t\t\t\t\t\tstate = rulesNeedAnotherRule;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tstate = error;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (token.equals(\"[\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tswitch (state) {", "-\t\t\t\t\t\tcase readyToClose:", "-\t\t\t\t\t\t\tstate = rulesStart;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tstate = error;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (token.equals(\"]\")) { //$NON-NLS-1$", "-\t\t\t\t\t\tswitch (state) {", "-\t\t\t\t\t\tcase rulesReadyToClose:", "-\t\t\t\t\t\t\tstate = readyToCloseEndingWithRules;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tstate = error;", "-\t\t\t\t\t\t}", "-", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\tcase INSIDE_SOURCE :", "+\t\t\t\t\tif (this.didSpecifySource) {", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateSource\", currentArg));//$NON-NLS-1$", "+\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\tthis.didSpecifySource = true;", "+\t\t\t\t\tif (currentArg.equals(\"1.3\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "+\t\t\t\t\t} else if (currentArg.equals(\"1.6\") || currentArg.equals(\"6\") || currentArg.equals(\"6.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "-\t\t\t\t\t\t// regular word", "-\t\t\t\t\t\tswitch (state) {", "-\t\t\t\t\t\tcase start:", "-\t\t\t\t\t\tcase readyToCloseOrOtherEntry:", "-\t\t\t\t\t\t\tstate = readyToClose;", "-\t\t\t\t\t\t\tcurrentClasspathName = token;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase rulesNeedAnotherRule:", "-\t\t\t\t\t\tcase rulesStart:", "-\t\t\t\t\t\t\tstate = rulesReadyToClose;", "-\t\t\t\t\t\t\tcurrentRuleSpecs.add(token);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tstate = error;", "+\t\t\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.source\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\tcase INSIDE_DEFAULT_ENCODING :", "+\t\t\t\t\tif (didSpecifyDefaultEncoding) {", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tMain.bind(\"configure.duplicateDefaultEncoding\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\ttry { // ensure encoding is supported", "+\t\t\t\t\t\tnew InputStreamReader(new ByteArrayInputStream(new byte[0]), currentArg);", "+\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tMain.bind(\"configure.unsupportedEncoding\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Encoding, currentArg);", "+\t\t\t\t\tdidSpecifyDefaultEncoding = true;", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\tcase INSIDE_DESTINATION_PATH :", "+\t\t\t\t\tthis.destinationPath = currentArg;", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\tcase INSIDE_CLASSPATH:", "+\t\t\t\tcase INSIDE_BOOTCLASSPATH:", "+\t\t\t\tcase INSIDE_SOURCE_PATH :", "+\t\t\t\t\tStringTokenizer tokenizer = new StringTokenizer(currentArg,", "+\t\t\t\t\t\t\tFile.pathSeparator + \"[]\", true); //$NON-NLS-1$", "+\t\t\t\t\t// state machine", "+\t\t\t\t\tfinal int start = 0; ", "+\t\t\t\t\tfinal int readyToClose = 1;", "+\t\t\t\t\t// 'path' 'path1[rule];path2'", "+\t\t\t\t\tfinal int readyToCloseEndingWithRules = 2;", "+\t\t\t\t\t// 'path[rule]' 'path1;path2[rule]'", "+\t\t\t\t\tfinal int readyToCloseOrOtherEntry = 3;", "+\t\t\t\t\t// 'path[rule];' 'path;' 'path1;path2;'", "+\t\t\t\t\tfinal int rulesNeedAnotherRule = 4;", "+\t\t\t\t\t// 'path[rule1;'", "+\t\t\t\t\tfinal int rulesStart = 5;", "+\t\t\t\t\t// 'path[' 'path1;path2['", "+\t\t\t\t\tfinal int rulesReadyToClose = 6;", "+\t\t\t\t\t// 'path[rule' 'path[rule1;rule2'", "+\t\t\t\t\tfinal int error = 99;", "+\t\t\t\t\tint state = start;", "+\t\t\t\t\tString token = null;", "+\t\t\t\t\twhile (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\t\ttoken = tokenizer.nextToken();", "+\t\t\t\t\t\tif (token.equals(File.pathSeparator)) {", "+\t\t\t\t\t\t\tswitch (state) {", "+\t\t\t\t\t\t\tcase start:", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase readyToClose:", "+\t\t\t\t\t\t\tcase readyToCloseEndingWithRules:", "+\t\t\t\t\t\t\tcase readyToCloseOrOtherEntry:", "+\t\t\t\t\t\t\t\tstate = readyToCloseOrOtherEntry;", "+\t\t\t\t\t\t\t\taddNewEntry(INSIDE_CLASSPATH, INSIDE_SOURCE_PATH, bootclasspaths, classpaths, sourcepathClasspaths, currentClasspathName, currentRuleSpecs, mode, customEncoding);", "+\t\t\t\t\t\t\t\tcurrentRuleSpecs.clear();", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase rulesReadyToClose:", "+\t\t\t\t\t\t\t\tstate = rulesNeedAnotherRule;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\tstate = error;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (token.equals(\"[\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tswitch (state) {", "+\t\t\t\t\t\t\tcase readyToClose:", "+\t\t\t\t\t\t\t\tstate = rulesStart;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\tstate = error;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (token.equals(\"]\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tswitch (state) {", "+\t\t\t\t\t\t\tcase rulesReadyToClose:", "+\t\t\t\t\t\t\t\tstate = readyToCloseEndingWithRules;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\tstate = error;", "+\t\t\t\t\t\t\t}", "+\t", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// regular word", "+\t\t\t\t\t\t\tswitch (state) {", "+\t\t\t\t\t\t\tcase start:", "+\t\t\t\t\t\t\tcase readyToCloseOrOtherEntry:", "+\t\t\t\t\t\t\t\tstate = readyToClose;", "+\t\t\t\t\t\t\t\tcurrentClasspathName = token;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase rulesNeedAnotherRule:", "+\t\t\t\t\t\t\tcase rulesStart:", "+\t\t\t\t\t\t\t\tstate = rulesReadyToClose;", "+\t\t\t\t\t\t\t\tcurrentRuleSpecs.add(token);", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\tstate = error;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tswitch(state) {", "-\t\t\t\t\tcase readyToClose :", "-\t\t\t\t\tcase readyToCloseEndingWithRules :", "-\t\t\t\t\tcase readyToCloseOrOtherEntry :", "-\t\t\t\t\t\taddNewEntry(InsideClasspath, InsideSourcepath, bootclasspaths, classpaths, sourcepathClasspaths, currentClasspathName, currentRuleSpecs, mode, customEncoding);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\t// we go on anyway", "-\t\t\t\t\t\tthis.logger.logIncorrectClasspath(currentArg);", "-\t\t\t\t}", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "-\t\t\t}", "-\t\t\tif (mode == InsideExtdirs) {", "-\t\t\t\tStringTokenizer tokenizer = new StringTokenizer(currentArg,\tFile.pathSeparator, false);", "-\t\t\t\twhile (tokenizer.hasMoreTokens())", "-\t\t\t\t\textdirsNames.add(tokenizer.nextToken());", "-\t\t\t\tif (extdirsNames.size() == 0) // empty entry", "-\t\t\t\t\textdirsNames.add(\"\"); //$NON-NLS-1$", "-\t\t\t\tmode = Default;", "-\t\t\t\tcontinue;", "+\t\t\t\t\tswitch(state) {", "+\t\t\t\t\t\tcase readyToClose :", "+\t\t\t\t\t\tcase readyToCloseEndingWithRules :", "+\t\t\t\t\t\tcase readyToCloseOrOtherEntry :", "+\t\t\t\t\t\t\taddNewEntry(INSIDE_CLASSPATH, INSIDE_SOURCE_PATH, bootclasspaths, classpaths, sourcepathClasspaths, currentClasspathName, currentRuleSpecs, mode, customEncoding);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t// we go on anyway", "+\t\t\t\t\t\t\tthis.logger.logIncorrectClasspath(currentArg);", "+\t\t\t\t\t}", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\tcase INSIDE_EXT_DIRS :", "+\t\t\t\t\ttokenizer = new StringTokenizer(currentArg,\tFile.pathSeparator, false);", "+\t\t\t\t\twhile (tokenizer.hasMoreTokens())", "+\t\t\t\t\t\textdirsNames.add(tokenizer.nextToken());", "+\t\t\t\t\tif (extdirsNames.size() == 0) // empty entry", "+\t\t\t\t\t\textdirsNames.add(\"\"); //$NON-NLS-1$", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "-\t\t\tmode = Default;", "+\t\t\tmode = DEFAULT;", "-\t\t\t\tif (!didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "+\t\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "-\t\t\t\tif (!didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "+\t\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t\tif (!didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "-\t\t\t\tif (!didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t\tif (!this.didSpecifySource) this.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "-\t\tif (didSpecifySource) {", "+\t\tif (this.didSpecifySource) {", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "-\t\t\t\tif (!didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t\tif (!this.didSpecifyTarget) this.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "-\t\t// check and set compliance/source/target compatibilities", "-\t\tif (didSpecifyTarget) {", "+\t\tif (sourceVersion.equals(CompilerOptions.VERSION_1_6)", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(compliance) < ClassFileConstants.JDK1_6) {", "+\t\t\t// compliance must be 1.6 if source is 1.6", "+\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_5)", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(compliance) < ClassFileConstants.JDK1_5) {", "+\t\t\t// compliance must be 1.5 if source is 1.5", "+\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(compliance) < ClassFileConstants.JDK1_4) {", "+\t\t\t// compliance must be 1.4 if source is 1.4", "+\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\t}", "+", "+\t\t// check and set compliance/source/target compatibilities", "+\t\tif (this.didSpecifyTarget) {", "-\t\t}", "-", "-\t\tif (sourceVersion.equals(CompilerOptions.VERSION_1_6)", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel(compliance) < ClassFileConstants.JDK1_6) {", "-\t\t\t// compliance must be 1.6 if source is 1.6", "-\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "-\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_5)", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel(compliance) < ClassFileConstants.JDK1_5) {", "-\t\t\t// compliance must be 1.5 if source is 1.5", "-\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "-\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel(compliance) < ClassFileConstants.JDK1_4) {", "-\t\t\t// compliance must be 1.4 if source is 1.4", "-\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "-\t\t}", "-\t\t// set default target according to compliance & sourcelevel.", "-\t\tif (!didSpecifyTarget) {", "+\t\t} else {", "-\t\t\t} else if (compliance.equals(CompilerOptions.VERSION_1_4)) {", "+\t\t\t} else if (compliance.equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t\t|| compliance.equals(CompilerOptions.VERSION_1_5)", "+\t\t\t\t\t|| compliance.equals(CompilerOptions.VERSION_1_6)) {", "-\t\t\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_4)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t\t}", "-\t\t\t} else if (compliance.equals(CompilerOptions.VERSION_1_5)) {", "-\t\t\t\tif (sourceVersion.equals(CompilerOptions.VERSION_1_3)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_4)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_5)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "-\t\t\t\t}", "-\t\t\t} else if (compliance.equals(CompilerOptions.VERSION_1_6)) {", "-\t\t\t\tif (sourceVersion.equals(CompilerOptions.VERSION_1_3)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_4)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_5)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "-\t\t\t\t} else if (sourceVersion.equals(CompilerOptions.VERSION_1_6)) {", "-\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "+\t\t\t\t} else {", "+\t\t\t\t\t// for JDK >= 1.4, target == source", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, sourceVersion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7871e0035238d473484ab51023c000", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "a8073c80a69f6c184e71b3ada3faf15faa3ff3ae", "commitAfterChange": "33e49b6e14282ee69dc2c2cf0c73bec5e674cdf2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t// check (meta)target compatibility", "-\t\t\tcheckTargetCompatibility: {", "-\t\t\t\tif (!annotationType.isValidBinding()) {", "-\t\t\t\t\t// no need to check annotation usage if missing", "-\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t}", "-", "-\t\t\t\tlong metaTagBits = annotationType.getAnnotationTagBits(); // could be forward reference", "-\t\t\t\tif ((metaTagBits & TagBits.AnnotationTargetMASK) == 0) {", "-\t\t\t\t\t// does not specify any target restriction - all locations supported in Java 7 and before are possible", "-\t\t\t\t\tif (kind == Binding.TYPE_PARAMETER || kind == Binding.TYPE_USE) {", "-\t\t\t\t\t\tscope.problemReporter().explitAnnotationTargetRequired(this);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t}", "-", "-\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=391201", "-\t\t\t\tif ((metaTagBits & TagBits.SE7AnnotationTargetMASK) == 0", "-\t\t\t\t\t\t&& (metaTagBits & (TagBits.AnnotationForTypeUse | TagBits.AnnotationForTypeParameter)) != 0) {", "-\t\t\t\t\tif (scope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_8) {", "-\t\t\t\t\t\tswitch (kind) {", "-\t\t\t\t\t\t\tcase Binding.PACKAGE :", "-\t\t\t\t\t\t\tcase Binding.TYPE :", "-\t\t\t\t\t\t\tcase Binding.GENERIC_TYPE :", "-\t\t\t\t\t\t\tcase Binding.METHOD :", "-\t\t\t\t\t\t\tcase Binding.FIELD :", "-\t\t\t\t\t\t\tcase Binding.LOCAL :", "-\t\t\t\t\t\t\t\tscope.problemReporter().invalidUsageOfTypeAnnotations(this);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tswitch (kind) {", "-\t\t\t\t\tcase Binding.PACKAGE :", "-\t\t\t\t\t\tif ((metaTagBits & TagBits.AnnotationForPackage) != 0)", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Binding.TYPE_USE :", "-\t\t\t\t\t\tif ((metaTagBits & TagBits.AnnotationForTypeUse) != 0) {", "-\t\t\t\t\t\t\t// jsr 308", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Binding.TYPE :", "-\t\t\t\t\tcase Binding.GENERIC_TYPE :", "-\t\t\t\t\t\tif (((ReferenceBinding)this.recipient).isAnnotationType()) {", "-\t\t\t\t\t\t\tif ((metaTagBits & (TagBits.AnnotationForAnnotationType | TagBits.AnnotationForType)) != 0)", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t} else if ((metaTagBits & (TagBits.AnnotationForType | TagBits.AnnotationForTypeUse)) != 0) {", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForPackage) != 0) {", "-\t\t\t\t\t\t\tif (CharOperation.equals(((ReferenceBinding)this.recipient).sourceName, TypeConstants.PACKAGE_INFO_NAME))", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Binding.METHOD :", "-\t\t\t\t\t\tMethodBinding methodBinding = (MethodBinding) this.recipient;", "-\t\t\t\t\t\tif (methodBinding.isConstructor()) {", "-\t\t\t\t\t\t\tif ((metaTagBits & (TagBits.AnnotationForConstructor | TagBits.AnnotationForTypeUse)) != 0)", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForMethod) != 0) {", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForTypeUse) != 0) {", "-\t\t\t\t\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) methodBinding.declaringClass;", "-\t\t\t\t\t\t\tMethodDeclaration methodDecl = (MethodDeclaration) sourceType.scope.referenceContext.declarationOf(methodBinding);", "-\t\t\t\t\t\t\tif (isTypeUseCompatible(methodDecl.returnType, scope)) {", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Binding.FIELD :", "-\t\t\t\t\t\tif ((metaTagBits & TagBits.AnnotationForField) != 0) {", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForTypeUse) != 0) {", "-\t\t\t\t\t\t\tFieldBinding sourceField = (FieldBinding) this.recipient;", "-\t\t\t\t\t\t\tSourceTypeBinding sourceType = (SourceTypeBinding) sourceField.declaringClass;", "-\t\t\t\t\t\t\tFieldDeclaration fieldDeclaration = sourceType.scope.referenceContext.declarationOf(sourceField);", "-\t\t\t\t\t\t\tif (isTypeUseCompatible(fieldDeclaration.type, scope)) {", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Binding.LOCAL :", "-\t\t\t\t\t\tLocalVariableBinding localVariableBinding = (LocalVariableBinding)this.recipient;", "-\t\t\t\t\t\tif ((localVariableBinding.tagBits & TagBits.IsArgument) != 0) {", "-\t\t\t\t\t\t\tif ((metaTagBits & TagBits.AnnotationForParameter) != 0) {", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForTypeUse) != 0) {", "-\t\t\t\t\t\t\t\tif (isTypeUseCompatible(localVariableBinding.declaration.type, scope)) {", "-\t\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else if ((annotationType.tagBits & TagBits.AnnotationForLocalVariable) != 0) {", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t} else if ((metaTagBits & TagBits.AnnotationForTypeUse) != 0) {", "-\t\t\t\t\t\t\tif (isTypeUseCompatible(localVariableBinding.declaration.type, scope)) {", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase Binding.TYPE_PARAMETER : // jsr308", "-\t\t\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=391196", "-\t\t\t\t\t\tif ((metaTagBits & (TagBits.AnnotationForTypeParameter | TagBits.AnnotationForTypeUse)) != 0) {", "-\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\tscope.problemReporter().disallowedTargetForAnnotation(this);", "-\t\t\t}", "+\t\t\tcheckAnnotationTarget(this, scope, annotationType, kind);"]}], "num": 29141}