{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "087943185ea26747f8d41f61ffa41ab5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c676fe8d8c3163da36e897dc87b600b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ac184a82eec2774ea709d467355e4ac84de0c7be", "commitAfterChange": "38e8034dd54c8ecc2dd76934beb4729edff6d0e3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\t\t\t\t\t\tassumeNotNull(prefix+\"\"+name+\" binding was not found!\", name.resolveBinding());", "+\t\t\t\t\t\tassumeNotNull(prefix+\"\"+name+\" binding was not foundfound in \"+fragment, name.resolveBinding());", "-\t\t\t\t\t\tassumeNotNull(prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\tassumeNotNull(prefix+\"\"+methodName+\" binding was not found in \"+fragment, methNameBinding);", "-\t\t\t\t\t\t\tassumeNotNull(prefix+\"\"+param.getType()+\" binding was not found!\", param.getType().resolveBinding());", "-\t\t\t\t\t\t\tif (param.getType().isSimpleType()) {", "-\t\t\t\t\t\t\t\tverifyNameBindings(((SimpleType)param.getType()).getName());", "+\t\t\t\t\t\t\tType type = param.getType();", "+\t\t\t\t\t\t\tassumeNotNull(prefix+\"\"+type+\" binding was not found in \"+fragment, type.resolveBinding());", "+\t\t\t\t\t\t\tif (type.isSimpleType()) {", "+\t\t\t\t\t\t\t\tverifyNameBindings(((SimpleType)type).getName());", "+\t\t\t\t\t\t\t} else if (type.isArrayType()) {", "+\t\t\t\t\t\t\t\tType elementType = ((ArrayType) param.getType()).getElementType();", "+\t\t\t\t\t\t\t\tassumeNotNull(prefix+\"\"+elementType+\" binding was not found in \"+fragment, elementType.resolveBinding());", "+\t\t\t\t\t\t\t\tif (elementType.isSimpleType()) {", "+\t\t\t\t\t\t\t\t\tverifyNameBindings(((SimpleType)elementType).getName());", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c43b821048753f7bdba99f6a9dc92d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "039fe9e46951f3ae4fb135033e62de597c68c2d9", "commitAfterChange": "9a2f6070469e990d6a98dbcb9b47ac6f4413a2cc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected void assertMatchBindings(TagElement tagElement)", "signatureAfterChange": " \t \tvoid verifyName(Name name)", "diff": ["-\tprotected void assertMatchBindings(TagElement tagElement) {", "-\t\t\t\tassertMatchBindings((TagElement) fragment);", "-\t\t\t} else if (fragment.getNodeType() == ASTNode.SIMPLE_NAME || fragment.getNodeType() == ASTNode.QUALIFIED_NAME) {", "-\t\t\t\tpreviousBinding = ((Name)fragment).resolveBinding();", "-\t\t\t} else if (fragment.getNodeType() == ASTNode.MEMBER_REF) {", "-\t\t\t\tpreviousBinding = ((MemberRef)fragment).resolveBinding();", "-\t\t\t\tresolvedBinding = true;", "-\t\t\t} else if (fragment.getNodeType() == ASTNode.METHOD_REF) {", "-\t\t\t\tpreviousBinding = ((MethodRef) fragment).resolveBinding();", "-\t\t\t\tresolvedBinding = true;", "-\t\t\tpreviousFragment = fragment;", "+\t", "+\tvoid verifyName(Name name) {", "+\t\tif (name != null) {", "+\t\t\tassertNotNull(name+\" binding was not found!\", name.resolveBinding());", "+\t\t\tSimpleName simpleName = null;", "+\t\t\twhile (name.isQualifiedName()) {", "+\t\t\t\tsimpleName = ((QualifiedName) name).getName();", "+\t\t\t\tassertNotNull(simpleName+\" binding was not found!\", simpleName.resolveBinding());", "+\t\t\t\tname = ((QualifiedName) name).getQualifier();", "+\t\t\t\tassertNotNull(name+\" binding was not found!\", name.resolveBinding());", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 43553}