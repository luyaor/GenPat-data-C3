{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e13c4838ed7517e3c6d7daa96258234", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb0793af7d71e96931a4523630a92dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public char[] shortReadableName()", "signatureAfterChange": "  public char[] shortReadableName()", "diff": ["-\tif (isMemberType())", "-\t\treturn CharOperation.concat(enclosingType().shortReadableName(), sourceName, '.');", "-\treturn sourceName;", "+    char[] shortReadableName;", "+\tif (isMemberType()) {", "+\t\tshortReadableName = CharOperation.concat(enclosingType().shortReadableName(), sourceName, '.');", "+\t} else {", "+\t\tshortReadableName = this.sourceName;", "+\t}", "+\tTypeVariableBinding[] typeVars;", "+\tif ((typeVars = this.typeVariables()) != NoTypeVariables) {", "+\t    StringBuffer nameBuffer = new StringBuffer(10);", "+\t    nameBuffer.append(shortReadableName).append('<');", "+\t    for (int i = 0, length = typeVars.length; i < length; i++) {", "+\t        if (i > 0) nameBuffer.append(',');", "+\t        nameBuffer.append(typeVars[i].shortReadableName());", "+\t    }", "+\t    nameBuffer.append('>');", "+\t\tint nameLength = nameBuffer.length();", "+\t\tshortReadableName = new char[nameLength];", "+\t\tnameBuffer.getChars(0, nameLength, shortReadableName, 0);\t    ", "+\t}", "+\treturn shortReadableName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b580ecf364de0e1b442aab8585c78b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public char[] readableName()", "signatureAfterChange": "  public char[] readableName()", "diff": ["-public char[] readableName() /*java.lang.Object*/ {", "-\tif (isMemberType())", "-\t\treturn CharOperation.concat(enclosingType().readableName(), sourceName, '.');", "-\treturn CharOperation.concatWith(compoundName, '.');", "+public char[] readableName() /*java.lang.Object,  p.X<T> */ {", "+    char[] readableName;", "+\tif (isMemberType()) {", "+\t\treadableName = CharOperation.concat(enclosingType().readableName(), sourceName, '.');", "+\t} else {", "+\t\treadableName = CharOperation.concatWith(compoundName, '.');", "+\t}", "+\tTypeVariableBinding[] typeVars;", "+\tif ((typeVars = this.typeVariables()) != NoTypeVariables) {", "+\t    StringBuffer nameBuffer = new StringBuffer(10);", "+\t    nameBuffer.append(readableName).append('<');", "+\t    for (int i = 0, length = typeVars.length; i < length; i++) {", "+\t        if (i > 0) nameBuffer.append(',');", "+\t        nameBuffer.append(typeVars[i].readableName());", "+\t    }", "+\t    nameBuffer.append('>');", "+\t\tint nameLength = nameBuffer.length();", "+\t\treadableName = new char[nameLength];", "+\t\tnameBuffer.getChars(0, nameLength, readableName, 0);  ", "+\t}", "+\treturn readableName;"]}], "num": 50922}