{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ef4129b8a775ecd7de02d2d80ac8e89", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bef1ae2c3b9487ed85222bceeed9ac7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "e2801c340924b0987ea52e37626abf6035ced667", "commitAfterChange": "3b2052c623130c252652dbc4ea1f3e9fec2cb90c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public void setUnitsToLookInside(IWorkingCopy[] unitsToLookInside)", "signatureAfterChange": "\r public void setUnitsToLookInside(IWorkingCopy[] unitsToLookInside)", "diff": ["-\tThread currentThread = Thread.currentThread();\r", "-\tif (unitsToLookInside == null) {\r", "-\t\tthis.unitsToLookInside.put(currentThread, null);\r", "+\tif (unitsToLookInside == null) { \r", "+\t\tthis.unitsToLookInside.setCurrent(null); \r", "-\t\tMap workingCopies = (Map)this.unitsToLookInside.get(currentThread);\r", "-\t\tif (workingCopies == null){\r", "-\t\t\tthis.unitsToLookInside.put(currentThread, workingCopies = new HashMap());\r", "-\t\t}\r", "+\t\tHashMap workingCopies = new HashMap();\r", "+\t\tthis.unitsToLookInside.setCurrent(workingCopies);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f9277553ecc2cfb51bf0f3fc94ba26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "08504ba476b411d63330d4820dcef9b3032013d3", "commitAfterChange": "c2c9899514741103674136b061d37380904756e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public void setUnitsToLookInside(IWorkingCopy[] unitsToLookInside)", "signatureAfterChange": "\r public void setUnitsToLookInside(IWorkingCopy[] unitsToLookInside)", "diff": ["+\t\r", "+\tThread currentThread = Thread.currentThread();\r", "-\t\tthis.unitsToLookInside = null;\r", "+\t\tthis.unitsToLookInside.put(currentThread, null);\r", "-\t\tthis.unitsToLookInside = new HashMap();\r", "+\t\tMap workingCopies = (Map)this.unitsToLookInside.get(currentThread);\r", "+\t\tif (workingCopies == null){\r", "+\t\t\tthis.unitsToLookInside.put(currentThread, workingCopies = new HashMap());\r", "+\t\t}\r", "-\t\t\t\tthis.unitsToLookInside.put(original, unitToLookInside);\r", "+\t\t\t\tworkingCopies.put(original, unitToLookInside);\r", "-\t\t\t\tthis.unitsToLookInside.put(unitToLookInside, unitToLookInside);\r", "+\t\t\t\tworkingCopies.put(unitToLookInside, unitToLookInside);\r"]}], "num": 60041}