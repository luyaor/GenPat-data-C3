{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd4b72d43b2a03d0b6e1561abcfd705d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03d01f860be4d8a46b2fc615c78ebce9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate AstNode[] computeMergedMemberDeclarations(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate ASTNode[] computeMergedMemberDeclarations(TypeDeclaration typeDeclaration)", "diff": ["-\tprivate AstNode[] computeMergedMemberDeclarations(TypeDeclaration typeDeclaration){", "+\tprivate ASTNode[] computeMergedMemberDeclarations(TypeDeclaration typeDeclaration){", "-\t\tMemberTypeDeclaration type = typeCount == 0 ? null : typeDeclaration.memberTypes[typeIndex];", "+\t\tTypeDeclaration type = typeCount == 0 ? null : typeDeclaration.memberTypes[typeIndex];", "-\t\tAstNode[] members = new AstNode[memberLength];", "+\t\tASTNode[] members = new ASTNode[memberLength];", "-\t\t\t\t\t\tAstNode previousMember = members[index - 1];", "+\t\t\t\t\t\tASTNode previousMember = members[index - 1];", "-\t\t\t\tSystem.arraycopy(members, 0, members=new AstNode[index], 0, index);", "+\t\t\t\tSystem.arraycopy(members, 0, members=new ASTNode[index], 0, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ef47e025af9cec41323446e3571066", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["-\t\tTypeDeclaration type;", "-\t\tif (sourceType.getEnclosingType() == null) {", "-\t\t\ttype = new TypeDeclaration(compilationResult);", "-\t\t} else {", "-\t\t\ttype = new MemberTypeDeclaration(compilationResult);", "+\t\tTypeDeclaration type = type = new TypeDeclaration(compilationResult);", "+\t\tif (sourceType.getEnclosingType() != null) {", "+\t\t\ttype.bits |= ASTNode.IsMemberTypeMASK;", "-\t\t\ttype.memberTypes = new MemberTypeDeclaration[sourceMemberTypeCount];", "+\t\t\ttype.memberTypes = new TypeDeclaration[sourceMemberTypeCount];", "-\t\t\t\ttype.memberTypes[i] =", "-\t\t\t\t\t(MemberTypeDeclaration) convert(sourceMemberTypes[i], compilationResult);", "+\t\t\t\ttype.memberTypes[i] = convert(sourceMemberTypes[i], compilationResult);"]}], "num": 53809}