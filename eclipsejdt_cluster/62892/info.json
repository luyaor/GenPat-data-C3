{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44d914e675526eed2cc45e189818645e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75088f455013e85aed46d7626b27c8a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification)", "diff": ["-\t\tboolean staticOnly) {", "+\t\tboolean staticOnly,", "+\t\tboolean fromStaticImport,", "+\t\tboolean checkQualification) {", "+\t\t\tif(!this.insideQualifiedReference && PROPOSE_MEMBER_TYPES) {", "+\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\tif(!memberType.isClass()) continue next;", "+\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\tif(!memberType.isInterface() && !memberType.isAnnotationType()) continue next;", "+\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\tif(!memberType.isAnnotationType()) continue next;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tchar[] completionName = memberType.sourceName();", "+\t\t\t", "+\t\t\tboolean isQualified = false;", "+\t\t\tif(checkQualification && !fromStaticImport) {", "+\t\t\t\tchar[] memberPackageName = memberType.qualifiedPackageName();", "+\t\t\t\tchar[] memberTypeName = memberType.sourceName();", "+\t\t\t\tchar[] memberEnclosingTypeNames = memberType.enclosingType().qualifiedSourceName();", "+\t\t\t\tif (mustQualifyType(memberPackageName, memberTypeName, memberEnclosingTypeNames, memberType.modifiers)) {", "+\t\t\t\t\tif (memberPackageName == null || memberPackageName.length == 0)", "+\t\t\t\t\t\tif (this.unitScope != null && this.unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "+\t\t\t\t\t\t\tbreak next; // ignore types from the default package from outside it", "+\t\t\t\t\tisQualified = true;", "+\t\t\t\t\tcompletionName =", "+\t\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\t\t\tmemberPackageName,", "+\t\t\t\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\t\t\t\t\tmemberEnclosingTypeNames,", "+\t\t\t\t\t\t\t\t\t\tmemberTypeName,", "+\t\t\t\t\t\t\t\t\t\t'.'),", "+\t\t\t\t\t\t\t\t'.');", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(!insideQualifiedReference) {", "+\t\t\t\trelevance += computeRelevanceForQualification(isQualified);", "+\t\t\t}", "-\t\t\t\tproposal.setCompletion(memberType.sourceName());", "+\t\t\t\tproposal.setCompletion(completionName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a9ae1f372fa954c155e81147854ced", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "19198639bc25484a459cb1c53c953f761d4a6a3d", "commitAfterChange": "f495bb04967a33ceb30ace84eb082a0e7e182ce6", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\tboolean proposeAllMemberTypes = !this.assistNodeIsConstructor && PROPOSE_MEMBER_TYPES;", "+\t\tboolean proposeAllMemberTypes = !this.assistNodeIsConstructor;", "-\t\t\t\t\tsourceType != outerInvocationType &&", "-\t\t\t\t\tPROPOSE_MEMBER_TYPES) {", "+\t\t\t\t\tsourceType != outerInvocationType) {", "-\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "-\t\t\t\t\tif(this.assistNodeIsClass) {", "-\t\t\t\t\t\tif(!sourceType.isClass()) continue;", "-\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "-\t\t\t\t\t\tif(!sourceType.isInterface() && !sourceType.isAnnotationType()) continue;", "-\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "-\t\t\t\t\t\tif(!sourceType.isAnnotationType()) continue;", "-\t\t\t\t\t}", "+\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\tif(!sourceType.isClass()) continue;", "+\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\tif(!sourceType.isInterface() && !sourceType.isAnnotationType()) continue;", "+\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\tif(!sourceType.isAnnotationType()) continue;", "-\t\t\t\t\t\t\tif(PROPOSE_MEMBER_TYPES) {", "-\t\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "-\t\t\t\t\t\t\t\t\tif(!refBinding.isClass()) continue next;", "-\t\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "-\t\t\t\t\t\t\t\t\tif(!refBinding.isInterface() && !refBinding.isAnnotationType()) continue next;", "-\t\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "-\t\t\t\t\t\t\t\t\tif(!refBinding.isAnnotationType()) continue next;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif(this.assistNodeIsClass) {", "+\t\t\t\t\t\t\t\tif(!refBinding.isClass()) continue next;", "+\t\t\t\t\t\t\t} else if(this.assistNodeIsInterface) {", "+\t\t\t\t\t\t\t\tif(!refBinding.isInterface() && !refBinding.isAnnotationType()) continue next;", "+\t\t\t\t\t\t\t} else if (this.assistNodeIsAnnotation) {", "+\t\t\t\t\t\t\t\tif(!refBinding.isAnnotationType()) continue next;"]}], "num": 62892}