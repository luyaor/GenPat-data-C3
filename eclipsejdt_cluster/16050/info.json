{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fed8fdf51ee29eabfdde942a6d1614d1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244216ab865e8f1535ce3179ecaea75b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "8e09a020c985a5c59c2f77650ea0c690b64e1566", "commitAfterChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void initLineEnd()", "signatureAfterChange": " \tprotected boolean parseReturn()", "diff": ["-\tprotected void initLineEnd() {", "-\t\tthis.linePtr = this.sourceParser.scanner.getLineNumber(this.javadoc.sourceStart);", "-\t\tthis.lastLinePtr = this.sourceParser.scanner.getLineNumber(this.javadoc.sourceEnd);", "-\t\tthis.lineEnd = (this.linePtr == this.lastLinePtr) ? this.endComment : this.javadoc.sourceStart + 3;", "-\t}", "+\t */", "+\tprotected boolean parseReturn() {", "+\t\tif (this.returnStatement == null) {", "+\t\t\tthis.returnStatement = createReturnStatement();", "+\t\t\treturn true;", "+\t\t} else {", "+\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocDuplicatedReturnTag(", "+\t\t\t\t\tthis.scanner.getCurrentTokenStartPosition(),", "+\t\t\t\t\tthis.scanner.getCurrentTokenEndPosition());", "+\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a9d12b7d3c00335e284f95eb417dce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "07f2a3d76611d11852367ea136a6272990449122", "commitAfterChange": "b51487a3e769c1faf54930e906289a243b81936a", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void mergeDeltas()", "signatureAfterChange": " \tpublic IJavaElementDelta mergeDeltas(Collection deltas)", "diff": ["-\tpublic void mergeDeltas() {", "-\t\tif (this.javaModelDeltas.size() <= 1) return;", "+\tpublic IJavaElementDelta mergeDeltas(Collection deltas) {", "+\t\tif (deltas.size() == 0) return null;", "+\t\tif (deltas.size() == 1) return (IJavaElementDelta)deltas.iterator().next();", "-\t\t\tSystem.out.println(\"MERGING \" + this.javaModelDeltas.size() + \" DELTAS [\"+Thread.currentThread()+\"]\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\tSystem.out.println(\"MERGING \" + deltas.size() + \" DELTAS [\"+Thread.currentThread()+\"]\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tIterator deltas = this.javaModelDeltas.iterator();", "+\t\tIterator iterator = deltas.iterator();", "-\t\twhile (deltas.hasNext()) {", "-\t\t\tJavaElementDelta delta = (JavaElementDelta)deltas.next();", "+\t\twhile (iterator.hasNext()) {", "+\t\t\tJavaElementDelta delta = (JavaElementDelta)iterator.next();", "-\t\tif (insertedTree){", "-\t\t\tthis.javaModelDeltas = new ArrayList(1);", "-\t\t\tthis.javaModelDeltas.add(rootDelta);", "+\t\tif (insertedTree) {", "+\t\t\treturn rootDelta;", "-\t\t\tthis.javaModelDeltas = new ArrayList(0);", "+\t\t\treturn null;"]}], "num": 16050}