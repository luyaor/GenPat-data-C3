{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8d100740614aab175733d5d0e2639ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3efdadfcf97d4ac3e29e7da07d347240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a2cfaf33b626413a70eea1530c77695e81ac081f", "commitAfterChange": "89847a0c1a06590b3bbeee9528d77f57e2f8453c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void test032()", "signatureAfterChange": " public void test032()", "diff": ["-\t        \"Type safety: The cast from TT to X.XX<?,X.XY> is actually checking against the erased type X<T,U,V>.XX\\n\" + ", "+\t        \"Type safety: Unchecked cast from TT to X.XX<?,X.XY>\\n\" + ", "-\t        \"Type safety: The cast from X.XX<capture#22-of ?,capture#23-of ?> to X.XX<?,X.XY> is actually checking against the erased type X<T,U,V>.XX\\n\" + ", "+\t        \"Type safety: Unchecked cast from X.XX<capture#22-of ?,capture#23-of ?> to X.XX<?,X.XY>\\n\" + ", "-        \"Type safety: The cast from TT to X.XX<?,X.XY> is actually checking against the erased type X<T,U,V>.XX\\n\" + ", "+        \"Type safety: Unchecked cast from TT to X.XX<?,X.XY>\\n\" + ", "-        \"Type safety: The cast from X.XX<capture#22-of ?,capture#23-of ?> to X.XX<?,X.XY> is actually checking against the erased type X<T,U,V>.XX\\n\" + ", "+        \"Type safety: Unchecked cast from X.XX<capture#22-of ?,capture#23-of ?> to X.XX<?,X.XY>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd931a6c798c902c9cc51910ccdc7175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test005()", "signatureAfterChange": " \tpublic void test005()", "diff": ["-\t\t\t\"     9  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    13  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    13  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 17] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 17] local: i index: 1 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 17] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 3, pc: 17] local: i index: 1 type: int\\n\";"]}], "num": 57857}