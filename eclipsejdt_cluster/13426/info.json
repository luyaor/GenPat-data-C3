{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3585ba1888b31eb2de55b27b8cde6fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58370b0fce4df616de1fc18b93422df6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic void test0224() throws JavaModelException", "signatureAfterChange": " \tpublic void test0224() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, annotations.length);", "+\t\tassertEquals(\"Wrong size\", 1, annotations.length);", "+\t\tassertNotNull(\"No binding\", annotations[0]);", "+\t\tassertEquals(\"LX;@LZork;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9068b11e2549e7e68c6e13e2ca80376b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 232, "methodNumberAfterChange": 232, "signatureBeforeChange": " \tpublic void test0218() throws JavaModelException", "signatureAfterChange": " \tpublic void test0218() throws JavaModelException", "diff": ["-\t\tassertNull(\"Got a binding\", annotationBinding);", "+\t\tassertNotNull(\"No binding\", annotationBinding);", "+\t\tassertEquals(\"LX;.fXoo)I@LTest;\", annotationBinding.getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotationBinding.isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotationBinding.getAnnotationType().isRecovered());\t\t"]}], "num": 13426}