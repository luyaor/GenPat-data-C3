{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c548f1fd34db326e51d171cba8060cfc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130fcf99fc053a2a73fe51679e50d9c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "789eeb90ee0e4a5b167be3db70baae047d8e7b39", "commitAfterChange": "b604f90cdbfce3d0c990b100eefed2eb9778e66a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "diff": ["+\tif (inheritedConstructorBinding.parameterNonNullness != null) { // this implies that annotation based null analysis is enabled", "+\t\t// copy nullness info from inherited constructor to the new constructor:", "+\t\tint len = inheritedConstructorBinding.parameterNonNullness.length;", "+\t\tSystem.arraycopy(inheritedConstructorBinding.parameterNonNullness, 0, ", "+\t\t\t\tconstructor.binding.parameterNonNullness = new Boolean[len], 0, len);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b822359ef017daccd6565188fc2f94f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "7df383b00e8453025afa0d0c65533607ef343fe1", "commitAfterChange": "92e572400d76e87cd8a411b61ccd6995a99fb8ae", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "signatureAfterChange": " public MethodBinding createDefaultConstructorWithBinding(MethodBinding inheritedConstructorBinding, boolean eraseThrownExceptions)", "diff": ["+\tif (inheritedConstructorBinding.parameterNonNullness != null) { // this implies that annotation based null analysis is enabled", "+\t\t// copy nullness info from inherited constructor to the new constructor:", "+\t\tint len = inheritedConstructorBinding.parameterNonNullness.length;", "+\t\tSystem.arraycopy(inheritedConstructorBinding.parameterNonNullness, 0, ", "+\t\t\t\tconstructor.binding.parameterNonNullness = new Boolean[len], 0, len);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d4c6c7c30e3ef3549ca28953554d63d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkNullSpecInheritance(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": "  void checkNullSpecInheritance(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["+\t// precondition: caller has checked whether annotation-based null analysis is enabled.", "-\t\tfor (int i = 0; i < inheritedMethod.parameterNonNullness.length; i++) {", "+\t\tint length = inheritedMethod.parameterNonNullness.length;", "+\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\t\tthis.type.scope.problemReporter().parameterLackingNonNullAnnotation(", "+\t\t\t\t\t\tthis.type.scope.problemReporter().parameterLackingNullAnnotation("]}], "num": 42125}