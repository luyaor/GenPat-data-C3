{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19cf4ce2d28033db8dc8347546bd53c6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09957963198cec0b09ee98910e2aacc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RuntimeTests.java", "commitBeforeChange": "672f952a5c7fefb7ba4540c6cb39cc7954700f81", "commitAfterChange": "3f5952c4f9eaef7ff0de7abe696d01c069cfbfb9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void _test0600_reflection()", "signatureAfterChange": " public void test0600_reflection()", "diff": ["-public void _test0600_reflection() {", "+public void test0600_reflection() {", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"  catch (Throwable t) {\\n\" +", "-\t\t\t\"    System.out.println(\\\"FAILURE: \\\" + t.getMessage());\\n\" +", "-\t\t\t\"    t.printStackTrace(System.out);\\n\" +", "+\t\t\t\"  } catch (NoSuchMethodException e) {\\n\" +", "+\t\t\t\"      //ignore\\n\" +", "+\t\t\t\"  } catch (InvocationTargetException e) {\\n\" +", "+\t\t\t\"      //ignore\\n\" +", "+\t\t\t\"  } catch (IllegalAccessException e) {\\n\" +", "+\t\t\t\"    System.out.print(\\\"FAILURE: IllegalAccessException\\\");\\n\" +", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"}\\n\",", "+\t\t\t\"}\\n\" +", "+\t\t\t\"}\",", "-\t\t\"SUCCESS\\nSUCCESS\"", "+\t\t\"SUCCESS\\n\" + ", "+\t\t\"FAILURE: IllegalAccessException\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41fed171919728fd0b0063da8e3dbc7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void testArrayMultiple03() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedArrayTypeMultipleArguments03() throws CoreException", "diff": ["-\tpublic void testArrayMultiple03() throws CoreException {", "+\tpublic void testParameterizedArrayTypeMultipleArguments03() throws CoreException {", "-\t\t// selected text is: \"Table<String, Exception>.Entry<String, Exception>\". Difference with previous test is that this is an array in the code", "-\t\tSourceType type = selectSourceType(unit,  \"s3\"); //$NON-NLS-1$", "+\t\tSourceType type = selectSourceType(unit,  \"Table<String, Exception>.Entry<String, Exception>\", 2); //$NON-NLS-1$", "-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entry [Table./**s1*/Entry] EXACT_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryException [Table<String, Exception>./**s2*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryExceptionArray [Table<String, Exception>./**s3*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entry [Table.Entry] COMPATIBLE_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryException [Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryExceptionArray [Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.tableOfEntryExceptionArray [Table<String, Table<String, Exception>.Entry<String, Exception>[]>.Entry<String, Table<String, Exception>.Entry<String, Exception>[]>] ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryException [g6.t.def.Table<String, Exception>./**s1*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryExceptionArray [g6.t.def.Table<String, Exception>./**s2*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryException [g6.t.def.Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryExceptionArray [g6.t.def.Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.tableOfEntryExceptionArray [g6.t.def.Table<String, g6.t.def.Table<String, Exception>.Entry<String, Exception>[]>.Entry<String, g6.t.def.Table<String, Exception>.Entry<String, Exception>[]>] ERASURE_MATCH\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862fda0db586f35e7e6c4a74e90c5f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void testArrayMultiple02() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedArrayTypeMultipleArguments02() throws CoreException", "diff": ["-\tpublic void testArrayMultiple02() throws CoreException {", "-\t\tICompilationUnit unit = getCompilationUnit(\"JavaSearch15/src/g6/t/ref/Multiple.java\");", "-\t\t// selected text is: \"Table<String, Exception>.Entry<String, Exception>\"", "-\t\tSourceType type = selectSourceType(unit,  \"s2\"); //$NON-NLS-1$", "+\tpublic void testParameterizedArrayTypeMultipleArguments02() throws CoreException {", "+\t\tICompilationUnit unit = getCompilationUnit(\"JavaSearch15/src/g6/t/ref/QualifMultiple.java\");", "+\t\tSourceType type = selectSourceType(unit,  \"Table<String, Exception>.Entry<String, Exception>\"); //$NON-NLS-1$", "-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entry [Table./**s1*/Entry] EXACT_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryException [Table<String, Exception>./**s2*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryExceptionArray [Table<String, Exception>./**s3*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entry [Table.Entry] COMPATIBLE_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryException [Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entryExceptionArray [Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.tableOfEntryExceptionArray [Table<String, Table<String, Exception>.Entry<String, Exception>[]>.Entry<String, Table<String, Exception>.Entry<String, Exception>[]>] ERASURE_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryException [g6.t.def.Table<String, Exception>./**s1*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "-\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryExceptionArray [g6.t.def.Table<String, Exception>./**s2*/Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryException [g6.t.def.Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.entryExceptionArray [g6.t.def.Table<String, Exception>.Entry<String, Exception>] EXACT_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/QualifMultiple.java g6.t.ref.QualifMultiple.tableOfEntryExceptionArray [g6.t.def.Table<String, g6.t.def.Table<String, Exception>.Entry<String, Exception>[]>.Entry<String, g6.t.def.Table<String, Exception>.Entry<String, Exception>[]>] ERASURE_MATCH\\n\" +"]}], "num": 31332}