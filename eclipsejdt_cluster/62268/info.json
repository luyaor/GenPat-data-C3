{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "581fe116188c0166fdb1b57aadf0b001", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be28418bac2113258fb9222399462852", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 10, "signatureBeforeChange": " public int literalIndexForType(final char[] constantPoolName)", "signatureAfterChange": " public int literalIndexForType(final char[] constantPoolName)", "diff": ["-\tif ((index = classCache.get(constantPoolName)) < 0) {", "+\tif ((index = classCache.putIfAbsent(constantPoolName, this.currentIndex)) < 0) {", "-\t\tint nameIndex = literalIndex(constantPoolName);", "-\t\tindex = classCache.put(constantPoolName, currentIndex++);", "-\t\tif (index > 0xFFFF){", "+\t\tthis.currentIndex++;", "+\t\tif ((index = -index) > 0xFFFF){", "-\t\t// Then add the 8 bytes representing the long", "-\t\twriteU2(nameIndex);", "+", "+\t\t// Then the name index", "+\t\tint nameIndexOffset = this.currentOffset;", "+\t\tif (currentOffset + 2 >= poolContent.length) {", "+\t\t\tresizePoolContents(2);", "+\t\t}", "+\t\tcurrentOffset+=2;", "+\t\tfinal int nameIndex = literalIndex(constantPoolName);", "+\t\tpoolContent[nameIndexOffset++] = (byte) (nameIndex >> 8);", "+\t\tpoolContent[nameIndexOffset] = (byte) nameIndex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee451c2287e0612bfacd8a773cc849d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "45e574c9370a9e1fe1175a8641ff2dc7a4b4a6e7", "commitAfterChange": "c17970bb54810597f5d28802d36bfac65d844634", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int literalIndex(char[] stringCharArray, byte[] utf8encoding)", "signatureAfterChange": " public int literalIndex(char[] stringCharArray, byte[] utf8encoding)", "diff": ["-\tint stringIndex;", "-\tif ((index = stringCache.get(stringCharArray)) < 0) {", "+\tif ((index = stringCache.putIfAbsent(stringCharArray, this.currentIndex)) < 0) {", "-\t\tstringIndex = literalIndex(utf8encoding, stringCharArray);", "-\t\tindex = stringCache.put(stringCharArray, currentIndex++);", "-\t\tif (index > 0xFFFF){", "+\t\tthis.currentIndex++;", "+\t\tif ((index = -index) > 0xFFFF){", "-\t\twriteU2(stringIndex);", "+\t\tint stringIndexOffset = this.currentOffset;", "+\t\tif (currentOffset + 2 >= poolContent.length) {", "+\t\t\tresizePoolContents(2);", "+\t\t}", "+\t\tcurrentOffset+=2;", "+", "+\t\tfinal int stringIndex = literalIndex(utf8encoding, stringCharArray);", "+\t\tpoolContent[stringIndexOffset++] = (byte) (stringIndex >> 8);", "+\t\tpoolContent[stringIndexOffset] = (byte) stringIndex;"]}], "num": 62268}