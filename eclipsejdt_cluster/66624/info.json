{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36a9f914bfe809291941f815bf01583e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1855941107b28b5d19660702eb864ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f9a4225018848764cfc1723dc3aa2afabd642ddb", "commitAfterChange": "5b71fd258ccc5692becf5de077dfd1b633e668c5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate void processChanges(Set<IJavaProject> affected)", "signatureAfterChange": " \tprivate void processChanges(Set<IJavaProject> affected, Map<IJavaProject,LoadFailureHandler> handlers)", "diff": ["-\tprivate void processChanges(Set<IJavaProject> affected) {", "+\tprivate void processChanges(Set<IJavaProject> affected, Map<IJavaProject,LoadFailureHandler> handlers) {", "-\t\t// all resource changes until the next build.  Is that a problem?   ", "+\t\t// all resource changes until the next build.  Is that a problem?", "-\t\t\t\t\treportMissingFactoryContainers(badContainers, jproj);", "+\t\t\t\t\tLoadFailureHandler handler = handlers.get(jproj);", "+\t\t\t\t\tif (handler == null) {", "+\t\t\t\t\t\thandler = new LoadFailureHandler(jproj);", "+\t\t\t\t\t\thandlers.put(jproj, handler);", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (FactoryContainer container : badContainers) {", "+\t\t\t\t\t\thandler.addMissingLibrary(container.getId());", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea3c4af27d433267f86b83f5203e494", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "f9a4225018848764cfc1723dc3aa2afabd642ddb", "commitAfterChange": "5b71fd258ccc5692becf5de077dfd1b633e668c5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate void loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "signatureAfterChange": " \tprivate void loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers,  \t\t\tIJavaProject project, \t\t\tLoadFailureHandler failureHandler)", "diff": ["-\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "+\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, ", "+\t\t\tIJavaProject project,", "+\t\t\tLoadFailureHandler failureHandler)", "-\t\t\treportMissingFactoryContainers(badContainers, project);", "+\t\t\t\tfailureHandler.addFailedFactory(badFC.getId());", "-\t\t\t\tjava5FactoriesInContainer = loadJava5FactoryClasses(fc, cl, project);", "+\t\t\t\tjava5FactoriesInContainer = loadJava5FactoryClasses(fc, cl, project, failureHandler);", "-\t\t\t\t\tjava6FactoriesInContainer = loadJava6FactoryClasses(fc, cl, project);", "+\t\t\t\t\tjava6FactoriesInContainer = loadJava6FactoryClasses(fc, cl, project, failureHandler);"]}], "num": 66624}