{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60527e31477b8d8633f3678e50c2c61b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "037c38375069eb2be15d439f7d37e4bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1249, "methodNumberAfterChange": 1250, "signatureBeforeChange": " public void test1219()", "signatureAfterChange": " public void test1219()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"[ClassCastException2]test1test21000test1test2[ClassCastException4]\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"[ClassCastException2]test1test21000test1test2[ClassCastException4]\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6500701 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06913d32fd1bd4aa970399130614604b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 1059, "methodNumberAfterChange": 1059, "signatureBeforeChange": " public void test1032()", "signatureAfterChange": " public void test1032()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e3c39ba21a809a7ddda67ec4177437", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " public void test107()", "signatureAfterChange": " public void test107()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"1\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"1\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "133e1649bea693357a69bd9921825546", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 1051, "methodNumberAfterChange": 1051, "signatureBeforeChange": " public void test1024()", "signatureAfterChange": " public void test1024()", "diff": ["-\tthis.runConformTest(", "+\trunConformTest(", "+\t\ttrue,", "-\t\t\"\");", "+\t\tnull,", "+\t\t\"\",", "+\t\tnull,", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug151275);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16ed1ce6cebe355b9be5cd89e36ee959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 995, "methodNumberAfterChange": 995, "signatureBeforeChange": " public void test0972()", "signatureAfterChange": " public void test0972()", "diff": ["-\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"Outer.java\", //================================", "-\t\t\t\t\"//Outer.java\\n\" + ", "-\t\t\t\t\"public class Outer<O> {\\n\" + ", "-\t\t\t\t\"  public class Inner {}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"  public static void method(Outer<?>.Inner x) {\\n\" + ", "-\t\t\t\t\"    System.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"  public static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"    Outer<?>.Inner x = null;\\n\" +", "-\t\t\t\t\"    method(x);\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\",", "-\t\t\t\t\"ExtendedOuter.java\", //================================", "-\t\t\t\t\"public class ExtendedOuter<E> extends Outer<E> {\\n\" + ", "-\t\t\t\t\"  class ExtendedInner extends Inner {\\n\" + ", "-\t\t\t\t\"    {\\n\" + ", "-\t\t\t\t\"      Outer.method(this);\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t},", "-\t\t\t\"SUCCESS\");", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"Outer.java\", //================================", "+\t\t\t\"//Outer.java\\n\" + ", "+\t\t\t\"public class Outer<O> {\\n\" + ", "+\t\t\t\"  public class Inner {}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"  public static void method(Outer<?>.Inner x) {\\n\" + ", "+\t\t\t\"    System.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\"    Outer<?>.Inner x = null;\\n\" +", "+\t\t\t\"    method(x);\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\",", "+\t\t\t\"ExtendedOuter.java\", //================================", "+\t\t\t\"public class ExtendedOuter<E> extends Outer<E> {\\n\" + ", "+\t\t\t\"  class ExtendedInner extends Inner {\\n\" + ", "+\t\t\t\"    {\\n\" + ", "+\t\t\t\"      Outer.method(this);\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"", "+\t\t},", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1829850c2e442ee280d06b245f8c7c1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1127, "methodNumberAfterChange": 1127, "signatureBeforeChange": " public void test1099()", "signatureAfterChange": " public void test1099()", "diff": ["-// **", "-\tthis.runConformTest(new String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b50ae25d80005977bd7f8550c3f53e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 1043, "methodNumberAfterChange": 1043, "signatureBeforeChange": " public void test1018a()", "signatureAfterChange": " public void test1018a()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cea0905b4b190620ba2ab3d7c0c88ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 651, "methodNumberAfterChange": 651, "signatureBeforeChange": " \tpublic void test0633()", "signatureAfterChange": " \tpublic void test0633()", "diff": ["-\t    this.runConformTest(", "-            new String[] {", "+\t    runConformTest(", "+    \t\t// test directory preparation", "+    \t\ttrue /* flush output directory */, ", "+    \t\tnew String[] { /* test files */", "-\t\t\t\"\");", "+\t\t\t// compiler results", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime results", "+\t\t\t\"\" /* expected output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ea43afa7062819fe2a82dcf14b19b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test061()", "signatureAfterChange": " \tpublic void test061()", "diff": ["-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "+\t\trunConformTest(", "+\t\t\t// test directory preparation", "+\t\t\ttrue /* flush output directory */, ", "+\t\t\tnew String[] { /* test files */", "-\t\t\t\"\");\t\t", "-\t\t}\t", "+\t\t\t// compiler results", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime results", "+\t\t\t\"\" /* expected output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.EclipseJustification.EclipseBug183211 /* javac test options */);", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b162fd4db44c5d7f062818f68d24483", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "commitAfterChange": "ef6edb688893cd6d22d31cfac59fd0a029f9056b", "methodNumberBeforeChange": 947, "methodNumberAfterChange": 947, "signatureBeforeChange": " public void test0924()", "signatureAfterChange": " public void test0924()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\"ExtendedOuter.java\",", "-\t\t\"class Outer<O> {\\n\" + ", "-\t\t\"\tclass Inner {\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tstatic void method(Outer<?>.Inner x) {\\n\" + ", "-\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"public class ExtendedOuter<E> extends Outer<E> {\\n\" + ", "-\t\t\"\tclass ExtendedInner extends Inner {\\n\" + ", "-\t\t\"\t\t{\\n\" + ", "-\t\t\"\t\t\tOuter.method(this);\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tpublic static void main(String[] args) {\\n\" +", "-\t\t\"\t\tnew ExtendedOuter<String>().new ExtendedInner();\\n\" +", "-\t\t\"\t}\\n\" +", "-\t\t\"}\\n\"\t\t", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"ExtendedOuter.java\",", "+\t\t\t\"class Outer<O> {\\n\" + ", "+\t\t\t\"\tclass Inner {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tstatic void method(Outer<?>.Inner x) {\\n\" + ", "+\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"public class ExtendedOuter<E> extends Outer<E> {\\n\" + ", "+\t\t\t\"\tclass ExtendedInner extends Inner {\\n\" + ", "+\t\t\t\"\t\t{\\n\" + ", "+\t\t\t\"\t\t\tOuter.method(this);\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tnew ExtendedOuter<String>().new ExtendedInner();\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\"\t\t", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f23a6c921c90a494a3cce4ae300eb6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void test111()", "signatureAfterChange": " public void test111()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c35ba9c1f10170f9de03de7614dead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1244, "methodNumberAfterChange": 1245, "signatureBeforeChange": " public void test1214()", "signatureAfterChange": " public void test1214()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug5042462 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "371611ac384c1fc510e53b320b076e50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 969, "methodNumberAfterChange": 969, "signatureBeforeChange": " public void test0946()", "signatureAfterChange": " public void test0946()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\"X.java\", //================================", "-\t\t\"public class X {\\n\" + ", "-\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\"\t\toperate(Operations.create());\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tstatic <O extends Num<O>> void operate(Operators<O> operators) {\\n\" + ", "-\t\t\"\t\tSystem.out.println(operators.spawn());\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"class Operations {\\n\" + ", "-\t\t\"\tstatic Operators<?> create() {\\n\" + ", "-\t\t\"\t\treturn new IntOperators();\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"interface Num<O> {\\n\" + ", "-\t\t\"\tpublic O spawn();\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"class Int implements Num<Int> {\\n\" + ", "-\t\t\"\tpublic Int spawn() {\\n\" + ", "-\t\t\"\t\treturn new Int();\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"  public String toString() {\\n\" +", "-\t\t\"    return \\\"Int\\\";\\n\" +", "-\t\t\"  }\\n\" +", "-\t\t\"}\\n\" + ", "-\t\t\"interface Operators<O extends Num<O>> {\\n\" + ", "-\t\t\"\tO spawn();\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"class IntOperators implements Operators<Int> {\\n\" + ", "-\t\t\"\tpublic Int spawn() {\\n\" + ", "-\t\t\"\t\treturn new Int();\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\",", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\", //================================", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\"\t\toperate(Operations.create());\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tstatic <O extends Num<O>> void operate(Operators<O> operators) {\\n\" + ", "+\t\t\t\"\t\tSystem.out.println(operators.spawn());\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class Operations {\\n\" + ", "+\t\t\t\"\tstatic Operators<?> create() {\\n\" + ", "+\t\t\t\"\t\treturn new IntOperators();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Num<O> {\\n\" + ", "+\t\t\t\"\tpublic O spawn();\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class Int implements Num<Int> {\\n\" + ", "+\t\t\t\"\tpublic Int spawn() {\\n\" + ", "+\t\t\t\"\t\treturn new Int();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"  public String toString() {\\n\" +", "+\t\t\t\"    return \\\"Int\\\";\\n\" +", "+\t\t\t\"  }\\n\" +", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Operators<O extends Num<O>> {\\n\" + ", "+\t\t\t\"\tO spawn();\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class IntOperators implements Operators<Int> {\\n\" + ", "+\t\t\t\"\tpublic Int spawn() {\\n\" + ", "+\t\t\t\"\t\treturn new Int();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\",", "-\t\t\"Int\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"Int\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b363062989522835be7aebb11fd2090", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "commitAfterChange": "ef6edb688893cd6d22d31cfac59fd0a029f9056b", "methodNumberBeforeChange": 916, "methodNumberAfterChange": 916, "signatureBeforeChange": " public void test0896()", "signatureAfterChange": " public void test0896()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"[A#f()][A#g()][B#f()][B#g()]\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"[A#f()][A#g()][B#f()][B#g()]\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42845d1c54072a645cb736c8e2dc26d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "commitAfterChange": "5570f0e247bd18a17332042e143b22a635cf26df", "methodNumberBeforeChange": 876, "methodNumberAfterChange": 876, "signatureBeforeChange": " public void test0856()", "signatureAfterChange": " public void test0856()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");\t", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4285060c8c70506f236da5f408af5dd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 589, "methodNumberAfterChange": 589, "signatureBeforeChange": " \tpublic void test0571()", "signatureAfterChange": " \tpublic void test0571()", "diff": ["-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "+\t\trunConformTest(", "+\t\t\t// test directory preparation", "+\t\t\ttrue /* flush output directory */, ", "+\t\t\tnew String[] { /* test files */", "-\t\t\t\"SUCCESS\");\t", "+\t\t\t// compiler options", "+\t\t\tnull /* no class libraries */,", "+\t\t\tnull /* no custom options */,", "+\t\t\t// compiler results", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime results", "+\t\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a4d6630227dff4825270c73ba53c81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 1028, "methodNumberAfterChange": 1028, "signatureBeforeChange": " public void test1005()", "signatureAfterChange": " public void test1005()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"\");", "+\t// compiler results", "+\tnull /* do not check compiler log */,", "+\t// runtime results", "+\t\"\" /* expected output string */,", "+\t\"\" /* expected error string */,", "+\t// javac options", "+\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5040f386e15c6695990533784bc45f09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void test036()", "signatureAfterChange": " public void test036()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\t\"}\\n\",", "+\t\t\t\"}\\n\"", "-\t\t\"no base\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"no base\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacGeneratesByteCodeUponWhichJavaThrowsAnException /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5368ba96da66fed27f558c6d38d39d4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 796, "methodNumberAfterChange": 796, "signatureBeforeChange": " public void test0776()", "signatureAfterChange": " public void test0776()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\tnull /* do not check error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b00bd604cdad552dd6368ce96241389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 688, "methodNumberAfterChange": 688, "signatureBeforeChange": " public void test0670()", "signatureAfterChange": " public void test0670()", "diff": ["-// **", "-\tthis.runConformTest(", "+\trunConformTest(", "+\t\ttrue,", "-\t\t\"\");", "+\t\t\"\",", "+\t\tnull,", "+\t\tnull,", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug95021);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5edc116428ca5f22aed52e10969eed61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "commitAfterChange": "5570f0e247bd18a17332042e143b22a635cf26df", "methodNumberBeforeChange": 875, "methodNumberAfterChange": 875, "signatureBeforeChange": " public void test0855()", "signatureAfterChange": " public void test0855()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"true\");\t", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"true\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c20703d0b65000afbbc491a7e95bd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test102()", "signatureAfterChange": " \tpublic void test102()", "diff": ["-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "+\t\trunConformTest(", "+\t\t\t// test directory preparation", "+\t\t\ttrue /* flush output directory */, ", "+\t\t\tnew String[] { /* test files */", "-\t\t\t\"001122\");", "+\t\t\t// compiler results", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime results", "+\t\t\t\"001122\" /* expected output string */,", "+\t\t\t\"\" /* expected error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c24c631f23af00003285003d11176f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "commitAfterChange": "ef6edb688893cd6d22d31cfac59fd0a029f9056b", "methodNumberBeforeChange": 914, "methodNumberAfterChange": 914, "signatureBeforeChange": " public void test0894()", "signatureAfterChange": " public void test0894()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"[c1m1][c1m1][c1m1]\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"[c1m1][c1m1][c1m1]\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "650af05cce55407a6119c4e0a24cae00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public void test105()", "signatureAfterChange": " public void test105()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"-2\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"-2\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66421fe2303e4e156b59e53dd8419036", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1163, "methodNumberAfterChange": 1163, "signatureBeforeChange": " public void test1135()", "signatureAfterChange": " public void test1135()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"Baz\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"Baz\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug185422 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "673084963e048c3944a40503807271f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "commitAfterChange": "ea9b3c75a1ccab739b2bea3a45cffc49cfff1439", "methodNumberBeforeChange": 843, "methodNumberAfterChange": 843, "signatureBeforeChange": " public void test0823() throws Exception", "signatureAfterChange": " public void test0823() throws Exception", "diff": ["-\tthis.runConformTest(", "+\trunConformTest(", "+\t\ttrue,", "-\t\t\"AAAA\");", "+\t\tnull,", "+\t\t\"AAAA\",", "+\t\tnull,", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6531075);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee0ab3a14e626ed6f65a218e40774f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/XLargeTest.java", "commitBeforeChange": "6318d5042e88d12986a8da2fab134e2d56373cd0", "commitAfterChange": "fb504d47330627768068ab4717462737a8421e8f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test009()", "signatureAfterChange": " public void test009()", "diff": ["-// **", "-\tthis.runConformTest(", "+\trunConformTest(", "+\t\ttrue,", "-\t\t\"true\");", "+\t\tnull,", "+\t\t\"true\",", "+\t\tnull,", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug126744);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85dccc54c38d0107d3815de4009f8463", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void test106()", "signatureAfterChange": " public void test106()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"1\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"1\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac4e3c46dc791e2c46167c4c0c6e434", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 1016, "methodNumberAfterChange": 1016, "signatureBeforeChange": " public void test0993()", "signatureAfterChange": " public void test0993()", "diff": ["-\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",//===================", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"  public class Inner {\\n\" + ", "-\t\t\t\t\"    Inner() {\\n\" +", "-\t\t\t\t\"      System.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"  public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"    new ATest<X>();\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"class ATest<T extends X> {\\n\" + ", "-\t\t\t\t\"   public ATest() {\\n\" + ", "-\t\t\t\t\"      T instance = makeInstance();\\n\" + ", "-\t\t\t\t\"      X.Inner peq = instance.new Inner(); //**\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"   private T makeInstance() {\\n\" + ", "-\t\t\t\t\"      return (T) new X();\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"SUCCESS\");", "+\trunConformTest(", "+\t\ttrue,", "+\t\tnew String[] {", "+\t\t\t\"X.java\",//===================", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public class Inner {\\n\" + ", "+\t\t\t\"    Inner() {\\n\" +", "+\t\t\t\"      System.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  public static void main(String[] args) {\\n\" +", "+\t\t\t\"    new ATest<X>();\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class ATest<T extends X> {\\n\" + ", "+\t\t\t\"   public ATest() {\\n\" + ", "+\t\t\t\"      T instance = makeInstance();\\n\" + ", "+\t\t\t\"      X.Inner peq = instance.new Inner(); //**\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"   private T makeInstance() {\\n\" + ", "+\t\t\t\"      return (T) new X();\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\tnull,", "+\t\t\"SUCCESS\",", "+\t\tnull,", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6569404);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9ed24c015e3bf422e8492f1f2e5252", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 1333, "methodNumberAfterChange": 1333, "signatureBeforeChange": " public void test1302()", "signatureAfterChange": " public void test1302()", "diff": ["-\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"EMap.java\",", "-\t\t\t\t\t\"import java.util.ArrayList;\\n\" + ", "-\t\t\t\t\t\"import java.util.Map;\\n\" + ", "-\t\t\t\t\t\"\\n\" + ", "-\t\t\t\t\t\"public abstract class EMap<A, B> implements Map<A, B> {\\n\" + ", "-\t\t\t\t\t\"  public abstract static class Unsettable<K, V> extends EMap<K, V> {\\n\" + ", "-\t\t\t\t\t\"    protected class UnsettableEList<E extends Object & Entry<K, V>> extends EList<E> {\\n\" + ", "-\t\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\t\"  protected class EList<E extends Object & Entry<A,B>> extends ArrayList<E>{\\n\" + ", "-\t\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\t\"}\\n\", // =================", "-\t\t\t},", "-\t\t\t\"\");", "+\trunConformTest(", "+\t\ttrue,", "+\t\tnew String[] {", "+\t\t\t\"EMap.java\",", "+\t\t\t\"import java.util.ArrayList;\\n\" + ", "+\t\t\t\"import java.util.Map;\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"public abstract class EMap<A, B> implements Map<A, B> {\\n\" + ", "+\t\t\t\"  public abstract static class Unsettable<K, V> extends EMap<K, V> {\\n\" + ", "+\t\t\t\"    protected class UnsettableEList<E extends Object & Entry<K, V>> extends EList<E> {\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  protected class EList<E extends Object & Entry<A,B>> extends ArrayList<E>{\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\", // =================", "+\t\t},", "+\t\tnull,", "+\t\t\"\",", "+\t\tnull,", "+\t\tJavacTestOptions.EclipseHasABug.EclipseBug159851);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "901a464a768214d19d62e2124dbd8928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "commitAfterChange": "5570f0e247bd18a17332042e143b22a635cf26df", "methodNumberBeforeChange": 833, "methodNumberAfterChange": 833, "signatureBeforeChange": " public void test0813()", "signatureAfterChange": " public void test0813()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c684ccd7bdb90026e0befa6f350d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "commitAfterChange": "5570f0e247bd18a17332042e143b22a635cf26df", "methodNumberBeforeChange": 874, "methodNumberAfterChange": 874, "signatureBeforeChange": " public void test0854()", "signatureAfterChange": " public void test0854()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");\t", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ffc90c9fb0d51e29d476eba740d311a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 1086, "methodNumberAfterChange": 1086, "signatureBeforeChange": " public void test1058() throws Exception", "signatureAfterChange": " public void test1058() throws Exception", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b2890eac8e906703eade0ac476ecaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void test119()", "signatureAfterChange": " public void test119()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"1\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"1\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7cd54687a189b57dc298e0d5a2b2ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 844, "methodNumberAfterChange": 844, "signatureBeforeChange": " public void test0824() throws Exception", "signatureAfterChange": " public void test0824() throws Exception", "diff": ["-\tthis.runConformTest(", "+\trunConformTest(", "+\t\ttrue,", "-\t\t\"AAAA\");", "+\t\tnull,", "+\t\t\"AAAA\",", "+\t\tnull,", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6531075);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf774dd6b7181207d8647c9096ff3d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " public void test118()", "signatureAfterChange": " public void test118()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"1\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"1\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6575821 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02b0d6f9d1704f289bf4ace2bd0ccfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 1020, "methodNumberAfterChange": 1020, "signatureBeforeChange": " public void test0997()", "signatureAfterChange": " public void test0997()", "diff": ["-\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",//===================", "-\t\t\t\t\"public class X implements Outer {\\n\" +", "-\t\t\t\t\"  public static void main(String[] args) {\\n\" +", "-\t\t\t\t\"    new ATest<X>();\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"interface Outer {\\n\" + ", "-\t\t\t\t\"  public class Inner {\\n\" + ", "-\t\t\t\t\"    Inner() {\\n\" +", "-\t\t\t\t\"      System.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\t\t\"    }\\n\" +", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"class ATest<T extends Outer> {\\n\" + ", "-\t\t\t\t\"   public ATest() {\\n\" + ", "-\t\t\t\t\"      Outer.Inner peq = new T.Inner(); //**\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"   private T makeInstance() {\\n\" + ", "-\t\t\t\t\"      return (T) new X();\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"SUCCESS\");", "+\trunConformTest(", "+\t\ttrue,", "+\t\tnew String[] {", "+\t\t\t\"X.java\",//===================", "+\t\t\t\"public class X implements Outer {\\n\" +", "+\t\t\t\"  public static void main(String[] args) {\\n\" +", "+\t\t\t\"    new ATest<X>();\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\" +", "+\t\t\t\"interface Outer {\\n\" + ", "+\t\t\t\"  public class Inner {\\n\" + ", "+\t\t\t\"    Inner() {\\n\" +", "+\t\t\t\"      System.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"class ATest<T extends Outer> {\\n\" + ", "+\t\t\t\"   public ATest() {\\n\" + ", "+\t\t\t\"      Outer.Inner peq = new T.Inner(); //**\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"   private T makeInstance() {\\n\" + ", "+\t\t\t\"      return (T) new X();\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\tnull,", "+\t\t\"SUCCESS\",", "+\t\tnull,", "+\t\tJavacTestOptions.JavacHasABug.JavacBug6569404);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3c4047e11744b4d9526569080ce933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5570f0e247bd18a17332042e143b22a635cf26df", "commitAfterChange": "3bdad1c2bee46cfc01e1c4253b1e77d41c06aec6", "methodNumberBeforeChange": 914, "methodNumberAfterChange": 914, "signatureBeforeChange": " public void test0894()", "signatureAfterChange": " public void test0894()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"[c1m1][c1m1][c1m1]\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"[c1m1][c1m1][c1m1]\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c176ca3c440e07aa787957b065c2e874", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1274, "methodNumberAfterChange": 1275, "signatureBeforeChange": " public void test1244()", "signatureAfterChange": " public void test1244()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"  static class MyEntry extends Pool.AbstractEntry<MyEntry> { }  \\n\" + ", "-\t\t\t\t\"  static final Pool<MyEntry> pool=new Pool<MyEntry>() {\\n\" + ", "-\t\t\t\t\"    @Override\\n\" + ", "-\t\t\t\t\"    protected MyEntry delegate() {\\n\" + ", "-\t\t\t\t\"      return new MyEntry();\\n\" + ", "-\t\t\t\t\"    }  \\n\" + ", "-\t\t\t\t\"  };\\n\" + ", "-\t\t\t\t\"  public static void main(String[] args) {\\n\" + ", "-\t\t\t\t\"    MyEntry entry=pool.m();\\n\" + ", "-\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"abstract class Pool<E extends Pool.Entry<E>> {\\n\" + ", "-\t\t\t\t\"    private static abstract class Entry<E extends Entry<E>> {\\n\" + ", "-\t\t\t\t\"        E next;\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"    static public class AbstractEntry<E extends AbstractEntry<E>> extends Entry<E> {\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"    public E m() {\\n\" + ", "-\t\t\t\t\"        System.out.println(\\\"SUCCESS\\\");\\n\" + ", "-\t\t\t\t\"      return delegate();\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"    protected abstract E delegate();\\n\" + ", "-\t\t\t\t\"}\\n\", // =================", "-", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  static class MyEntry extends Pool.AbstractEntry<MyEntry> { }  \\n\" + ", "+\t\t\t\"  static final Pool<MyEntry> pool=new Pool<MyEntry>() {\\n\" + ", "+\t\t\t\"    @Override\\n\" + ", "+\t\t\t\"    protected MyEntry delegate() {\\n\" + ", "+\t\t\t\"      return new MyEntry();\\n\" + ", "+\t\t\t\"    }  \\n\" + ", "+\t\t\t\"  };\\n\" + ", "+\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\"    MyEntry entry=pool.m();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"abstract class Pool<E extends Pool.Entry<E>> {\\n\" + ", "+\t\t\t\"    private static abstract class Entry<E extends Entry<E>> {\\n\" + ", "+\t\t\t\"        E next;\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    static public class AbstractEntry<E extends AbstractEntry<E>> extends Entry<E> {\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    public E m() {\\n\" + ", "+\t\t\t\"        System.out.println(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\"      return delegate();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    protected abstract E delegate();\\n\" + ", "+\t\t\t\"}\\n\", // =================", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug185422 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c278ef77df4b72810f2ce48064a15c4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5570f0e247bd18a17332042e143b22a635cf26df", "commitAfterChange": "3bdad1c2bee46cfc01e1c4253b1e77d41c06aec6", "methodNumberBeforeChange": 948, "methodNumberAfterChange": 948, "signatureBeforeChange": " public void test0925()", "signatureAfterChange": " public void test0925()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\"X.java\",", "-\t\t\"import java.util.*;\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"public class X<A, B> {\\n\" + ", "-\t\t\"\tprivate List<A> toAdd;\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic X(List<A> toAdd) {\\n\" + ", "-\t\t\"\t\tthis.toAdd = toAdd;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tprivate List<A> getRelated(B b) {\\n\" + ", "-\t\t\"\t\t// some application logic\\n\" + ", "-\t\t\"\t\t// for demo\\n\" + ", "-\t\t\"\t\treturn toAdd;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\t@SuppressWarnings(\\\"unchecked\\\")\\n\" + ", "-\t\t\"\tpublic <L extends List<? super A>, LF extends Factory<L>> L addOrCreate4(\\n\" + ", "-\t\t\"\t\t\tB b, L l, LF lf) {\\n\" + ", "-\t\t\"\t\tif (l == null) {\\n\" + ", "-\t\t\"\t\t\tl = lf.create();\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "-\t\t\"\t\t((List<? super A>) l).addAll(getRelated(b)); \\n\" + ", "-\t\t\"\t\tl.addAll(getRelated(b));\\n\" + ", "-\t\t\"\t\treturn l;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic static class ListFactory<T> implements Factory<List<T>> {\\n\" + ", "-\t\t\"\t\tpublic List<T> create() {\\n\" + ", "-\t\t\"\t\t\treturn new ArrayList<T>();\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic static interface Factory<T> {\\n\" + ", "-\t\t\"\t\tpublic T create();\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic static void main(String... args) {\\n\" + ", "-\t\t\"\t\tListFactory<Number> lf = new ListFactory<Number>();\\n\" + ", "-\t\t\"\t\tList<Long> longs = new ArrayList<Long>();\\n\" + ", "-\t\t\"\t\tlongs.add(new Long(1));\\n\" + ", "-\t\t\"\t\tX<Long, Number> test = new X<Long, Number>(longs);\\n\" + ", "-\t\t\"\t\tList<Number> ret4 = null;\\n\" + ", "-\t\t\"\t\tret4 = test.addOrCreate4(1, ret4, lf);\\n\" + ", "-\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\"", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"import java.util.*;\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"public class X<A, B> {\\n\" + ", "+\t\t\t\"\tprivate List<A> toAdd;\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic X(List<A> toAdd) {\\n\" + ", "+\t\t\t\"\t\tthis.toAdd = toAdd;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate List<A> getRelated(B b) {\\n\" + ", "+\t\t\t\"\t\t// some application logic\\n\" + ", "+\t\t\t\"\t\t// for demo\\n\" + ", "+\t\t\t\"\t\treturn toAdd;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t@SuppressWarnings(\\\"unchecked\\\")\\n\" + ", "+\t\t\t\"\tpublic <L extends List<? super A>, LF extends Factory<L>> L addOrCreate4(\\n\" + ", "+\t\t\t\"\t\t\tB b, L l, LF lf) {\\n\" + ", "+\t\t\t\"\t\tif (l == null) {\\n\" + ", "+\t\t\t\"\t\t\tl = lf.create();\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t\t((List<? super A>) l).addAll(getRelated(b)); \\n\" + ", "+\t\t\t\"\t\tl.addAll(getRelated(b));\\n\" + ", "+\t\t\t\"\t\treturn l;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static class ListFactory<T> implements Factory<List<T>> {\\n\" + ", "+\t\t\t\"\t\tpublic List<T> create() {\\n\" + ", "+\t\t\t\"\t\t\treturn new ArrayList<T>();\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static interface Factory<T> {\\n\" + ", "+\t\t\t\"\t\tpublic T create();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static void main(String... args) {\\n\" + ", "+\t\t\t\"\t\tListFactory<Number> lf = new ListFactory<Number>();\\n\" + ", "+\t\t\t\"\t\tList<Long> longs = new ArrayList<Long>();\\n\" + ", "+\t\t\t\"\t\tlongs.add(new Long(1));\\n\" + ", "+\t\t\t\"\t\tX<Long, Number> test = new X<Long, Number>(longs);\\n\" + ", "+\t\t\t\"\t\tList<Number> ret4 = null;\\n\" + ", "+\t\t\t\"\t\tret4 = test.addOrCreate4(1, ret4, lf);\\n\" + ", "+\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c441c5f56a2ab56b2514e6113a5dc5db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void test108()", "signatureAfterChange": " public void test108()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"1\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"1\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb53358e4d412c0cc89344233004e97d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "commitAfterChange": "ea9b3c75a1ccab739b2bea3a45cffc49cfff1439", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 185, "signatureBeforeChange": "     public void test178()", "signatureAfterChange": "     public void test178()", "diff": ["-        this.runConformTest(", "+        runConformTest(", "+        \ttrue,", "-\t\t\"\");", "+        null,", "+\t\t\"\",", "+\t\tnull,", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6cbe893a76166834852a7a5d2ffbc7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5570f0e247bd18a17332042e143b22a635cf26df", "commitAfterChange": "3bdad1c2bee46cfc01e1c4253b1e77d41c06aec6", "methodNumberBeforeChange": 947, "methodNumberAfterChange": 947, "signatureBeforeChange": " public void test0924()", "signatureAfterChange": " public void test0924()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\"ExtendedOuter.java\",", "-\t\t\"class Outer<O> {\\n\" + ", "-\t\t\"\tclass Inner {\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tstatic void method(Outer<?>.Inner x) {\\n\" + ", "-\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"public class ExtendedOuter<E> extends Outer<E> {\\n\" + ", "-\t\t\"\tclass ExtendedInner extends Inner {\\n\" + ", "-\t\t\"\t\t{\\n\" + ", "-\t\t\"\t\t\tOuter.method(this);\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\tpublic static void main(String[] args) {\\n\" +", "-\t\t\"\t\tnew ExtendedOuter<String>().new ExtendedInner();\\n\" +", "-\t\t\"\t}\\n\" +", "-\t\t\"}\\n\"\t\t", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"ExtendedOuter.java\",", "+\t\t\t\"class Outer<O> {\\n\" + ", "+\t\t\t\"\tclass Inner {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tstatic void method(Outer<?>.Inner x) {\\n\" + ", "+\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"public class ExtendedOuter<E> extends Outer<E> {\\n\" + ", "+\t\t\t\"\tclass ExtendedInner extends Inner {\\n\" + ", "+\t\t\t\"\t\t{\\n\" + ", "+\t\t\t\"\t\t\tOuter.method(this);\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tnew ExtendedOuter<String>().new ExtendedInner();\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\\n\"\t\t", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dad30aafd7418794de42f3709019be64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8c41a552c98522f907517ef76590c1165afbc25d", "commitAfterChange": "ea85eda7fc7c200244e30957006ea59d3760120d", "methodNumberBeforeChange": 1093, "methodNumberAfterChange": 1093, "signatureBeforeChange": " public void test1065() throws Exception", "signatureAfterChange": " public void test1065() throws Exception", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"[A#foo()][B#foo()][A#bar()][B#bar()]\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"[A#foo()][B#foo()][A#bar()][B#bar()]\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc2d220fac4697d5a8e53e62be52b48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 811, "methodNumberAfterChange": 811, "signatureBeforeChange": " public void test0791()", "signatureAfterChange": " public void test0791()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */,", "+\t\tnew String[] { /* test files */", "-\t\t\"\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\tnull /* do not check error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c410610fb88263337233217c55891c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "commitAfterChange": "ea9b3c75a1ccab739b2bea3a45cffc49cfff1439", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " \tpublic void test0229()", "signatureAfterChange": " \tpublic void test0229()", "diff": ["-\t\tthis.runConformTest(", "+\t\trunConformTest(", "+\t\t\ttrue,", "-\t\t\t\"SUCCESS\");", "+\t\t\tnull,", "+\t\t\t\"SUCCESS\",", "+\t\t\tnull,", "+\t\t\tJavacTestOptions.JavacHasABug.JavacBug6569404);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f515a30e327ded5399ba7609e6945449", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "commitAfterChange": "ef6edb688893cd6d22d31cfac59fd0a029f9056b", "methodNumberBeforeChange": 948, "methodNumberAfterChange": 948, "signatureBeforeChange": " public void test0925()", "signatureAfterChange": " public void test0925()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\"X.java\",", "-\t\t\"import java.util.*;\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"public class X<A, B> {\\n\" + ", "-\t\t\"\tprivate List<A> toAdd;\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic X(List<A> toAdd) {\\n\" + ", "-\t\t\"\t\tthis.toAdd = toAdd;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tprivate List<A> getRelated(B b) {\\n\" + ", "-\t\t\"\t\t// some application logic\\n\" + ", "-\t\t\"\t\t// for demo\\n\" + ", "-\t\t\"\t\treturn toAdd;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\t@SuppressWarnings(\\\"unchecked\\\")\\n\" + ", "-\t\t\"\tpublic <L extends List<? super A>, LF extends Factory<L>> L addOrCreate4(\\n\" + ", "-\t\t\"\t\t\tB b, L l, LF lf) {\\n\" + ", "-\t\t\"\t\tif (l == null) {\\n\" + ", "-\t\t\"\t\t\tl = lf.create();\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "-\t\t\"\t\t((List<? super A>) l).addAll(getRelated(b)); \\n\" + ", "-\t\t\"\t\tl.addAll(getRelated(b));\\n\" + ", "-\t\t\"\t\treturn l;\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic static class ListFactory<T> implements Factory<List<T>> {\\n\" + ", "-\t\t\"\t\tpublic List<T> create() {\\n\" + ", "-\t\t\"\t\t\treturn new ArrayList<T>();\\n\" + ", "-\t\t\"\t\t}\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic static interface Factory<T> {\\n\" + ", "-\t\t\"\t\tpublic T create();\\n\" + ", "-\t\t\"\t}\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"\tpublic static void main(String... args) {\\n\" + ", "-\t\t\"\t\tListFactory<Number> lf = new ListFactory<Number>();\\n\" + ", "-\t\t\"\t\tList<Long> longs = new ArrayList<Long>();\\n\" + ", "-\t\t\"\t\tlongs.add(new Long(1));\\n\" + ", "-\t\t\"\t\tX<Long, Number> test = new X<Long, Number>(longs);\\n\" + ", "-\t\t\"\t\tList<Number> ret4 = null;\\n\" + ", "-\t\t\"\t\tret4 = test.addOrCreate4(1, ret4, lf);\\n\" + ", "-\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "-\t\t\"\t}\\n\" + ", "-\t\t\"}\\n\"", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"import java.util.*;\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"public class X<A, B> {\\n\" + ", "+\t\t\t\"\tprivate List<A> toAdd;\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic X(List<A> toAdd) {\\n\" + ", "+\t\t\t\"\t\tthis.toAdd = toAdd;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tprivate List<A> getRelated(B b) {\\n\" + ", "+\t\t\t\"\t\t// some application logic\\n\" + ", "+\t\t\t\"\t\t// for demo\\n\" + ", "+\t\t\t\"\t\treturn toAdd;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t@SuppressWarnings(\\\"unchecked\\\")\\n\" + ", "+\t\t\t\"\tpublic <L extends List<? super A>, LF extends Factory<L>> L addOrCreate4(\\n\" + ", "+\t\t\t\"\t\t\tB b, L l, LF lf) {\\n\" + ", "+\t\t\t\"\t\tif (l == null) {\\n\" + ", "+\t\t\t\"\t\t\tl = lf.create();\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t\t((List<? super A>) l).addAll(getRelated(b)); \\n\" + ", "+\t\t\t\"\t\tl.addAll(getRelated(b));\\n\" + ", "+\t\t\t\"\t\treturn l;\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static class ListFactory<T> implements Factory<List<T>> {\\n\" + ", "+\t\t\t\"\t\tpublic List<T> create() {\\n\" + ", "+\t\t\t\"\t\t\treturn new ArrayList<T>();\\n\" + ", "+\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static interface Factory<T> {\\n\" + ", "+\t\t\t\"\t\tpublic T create();\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tpublic static void main(String... args) {\\n\" + ", "+\t\t\t\"\t\tListFactory<Number> lf = new ListFactory<Number>();\\n\" + ", "+\t\t\t\"\t\tList<Long> longs = new ArrayList<Long>();\\n\" + ", "+\t\t\t\"\t\tlongs.add(new Long(1));\\n\" + ", "+\t\t\t\"\t\tX<Long, Number> test = new X<Long, Number>(longs);\\n\" + ", "+\t\t\t\"\t\tList<Number> ret4 = null;\\n\" + ", "+\t\t\t\"\t\tret4 = test.addOrCreate4(1, ret4, lf);\\n\" + ", "+\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\"", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f63e0df398e3a1e22254497c7fdab0ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5570f0e247bd18a17332042e143b22a635cf26df", "commitAfterChange": "3bdad1c2bee46cfc01e1c4253b1e77d41c06aec6", "methodNumberBeforeChange": 916, "methodNumberAfterChange": 916, "signatureBeforeChange": " public void test0896()", "signatureAfterChange": " public void test0896()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"[A#f()][A#g()][B#f()][B#g()]\");", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"[A#f()][A#g()][B#f()][B#g()]\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f971828054abdf26c5e7ad8fda54ba47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0841a91a39a58a8a007f1736329beedec8b54836", "commitAfterChange": "b7160e8085cf8063f1f3db4ac577c79071d5d7b0", "methodNumberBeforeChange": 830, "methodNumberAfterChange": 830, "signatureBeforeChange": " public void test0810()", "signatureAfterChange": " public void test0810()", "diff": ["-// **", "-\tthis.runConformTest(", "-\t\tnew String[] {", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"SUCCESS\");", "+\t\t// compiler results", "+\t\tnull /* do not check compiler log */,", "+\t\t// runtime results", "+\t\t\"SUCCESS\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa7aaed9c71bd4e7197194aba7c0b5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RuntimeTests.java", "commitBeforeChange": "66645ff7b2e7900a6e51de489fc3a747bdbf1458", "commitAfterChange": "a24bdada3de440570b8b103bca0325b799f298f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test0600_reflection()", "signatureAfterChange": " public void test0600_reflection()", "diff": ["-\tthis.runConformTest(", "+\trunConformTest(", "+\t\ttrue,", "+\t\t\"\",", "-\t\t\"FAILURE: IllegalAccessException\"", "+\t\t\"FAILURE: IllegalAccessException\",", "+\t\t\"\",", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug126712"]}], "num": 28434}