{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a2df19930c267fb54721ebed4d0f67e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e4b01aef4aea41752d2025e174249c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "600cc6e957b3608b8d3c26027936fe87489e52d9", "commitAfterChange": "23ffb43b2ebb4c3a8ec95cae07baf3650cc30157", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": " public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\tconstant = FieldReference.getConstantFor((FieldBinding) binding, false, this, scope, index - 1);", "+\t\tconstant = FieldReference.getConstantFor((FieldBinding) binding, this, false, scope);", "-\t\t\t? FieldReference.getConstantFor((FieldBinding) binding, false, this, scope, index - 1)", "+\t\t\t? FieldReference.getConstantFor((FieldBinding) binding, this, false, scope)", "-\t\t\tConstant someConstant = FieldReference.getConstantFor(field, false, this, scope, place);", "+\t\t\tConstant someConstant = FieldReference.getConstantFor(field, this, false, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3185a15a9380a1bb6983a2851cdf2933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "600cc6e957b3608b8d3c26027936fe87489e52d9", "commitAfterChange": "23ffb43b2ebb4c3a8ec95cae07baf3650cc30157", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t\tconstant =", "-\t\t\t\tFieldReference.getConstantFor((FieldBinding) binding, false, this, scope, index - 1);", "+\t\t\tthis.constant = FieldReference.getConstantFor((FieldBinding) binding, this, false, scope);", "-\t\tconstant =", "+\t\tthis.constant =", "-\t\t\t\t? FieldReference.getConstantFor((FieldBinding) binding, false, this, scope, index - 1)", "+\t\t\t\t? FieldReference.getConstantFor((FieldBinding) binding, this, false, scope)", "-\t\t\t\tConstant someConstant =", "-\t\t\t\t\tFieldReference.getConstantFor(field, false, this, scope, place);", "+\t\t\t\tConstant someConstant = FieldReference.getConstantFor(field, this, false, scope);", "-\t\t\t\tif (constant != NotAConstant) {", "-\t\t\t\t\tconstant = someConstant;", "+\t\t\t\tif (this.constant != NotAConstant) {", "+\t\t\t\t\tthis.constant = someConstant;\t\t\t\t\t", "+"]}], "num": 14143}