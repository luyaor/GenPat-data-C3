{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51d245337a210632d0209bd5f8d10a1f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce1796a3a4c8d4cf2ea25cd3fcceac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "28f793f875e5d5b5aa1f2b69f1f41ea8e36715ac", "commitAfterChange": "f456bcf7525ae06822c01b76c3a23003b807e9b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tfor (int i = 0; i < resultLength; i++) {", "-\t\t\t\t\t\tString fileName = results[i].getPath();", "-\t\t\t\t\t\tindexedFileNames.add(fileName);", "-\t\t\t\t\t}", "+\t\t\t\t\tfor (int i = 0; i < resultLength; i++)", "+\t\t\t\t\t\tindexedFileNames.add(results[i].getPath());", "-\t\t\t\t\t\t\t+zip.getName() + \" (\" //$NON-NLS-1$", "+\t\t\t\t\t\t\t+ zip.getName() + \" (\" //$NON-NLS-1$", "-\t\t\t\tif (index != null) {", "-\t\t\t\t\t// index already existed: recreate it so that we forget about previous entries", "+\t\t\t\tif (index != null) // index already existed: recreate it so that we forget about previous entries", "-\t\t\t\t}", "-\t\t\t\t\t\tif (JobManager.VERBOSE) {", "-\t\t\t\t\t\t\tJobManager.verbose(\"-> indexing of \" //$NON-NLS-1$", "-\t\t\t\t\t\t\t+zip.getName() + \" has been cancelled\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (JobManager.VERBOSE)", "+\t\t\t\t\t\t\tJobManager.verbose(\"-> indexing of \" + zip.getName() + \" has been cancelled\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t\tbyte[] classFileBytes =", "-\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ze, zip);", "+\t\t\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(ze, zip);", "-\t\t\t\t\t+zip.getName() + \" (\" //$NON-NLS-1$", "-\t\t\t\t\t+ (System.currentTimeMillis() - initialTime) + \"ms)\"); //$NON-NLS-1$", "+\t\t\t\t\t\t+ zip.getName() + \" (\" //$NON-NLS-1$", "+\t\t\t\t\t\t+ (System.currentTimeMillis() - initialTime) + \"ms)\"); //$NON-NLS-1$", "-\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "+\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE)", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f6d86c15d6c924470736ff5f2a0683e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "2d03a3a42577e7f87a7097ee67df247c7332b65d", "commitAfterChange": "f865f170bb115429495719dbfc2d017403d7b163", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tfinal HashSet indexedFileNames = new HashSet(100);", "-\t\t\t\tint resultLength = results == null ? 0 : results.length;", "-\t\t\t\tif (resultLength != 0) {", "+\t\t\t\tint max = results == null ? 0 : results.length;", "+\t\t\t\tif (max != 0) {", "-\t\t\t\t\t * one entry is missing then we ", "+\t\t\t\t\t * one entry is missing then we recreate the index", "-\t\t\t\t\tfor (int i = 0; i < resultLength; i++)", "-\t\t\t\t\t\tindexedFileNames.add(results[i].getPath());", "-\t\t\t\t\tboolean needToReindex = false;", "+\t\t\t\t\tString EXISTS = \"OK\"; //$NON-NLS-1$", "+\t\t\t\t\tString DELETED = \"DELETED\"; //$NON-NLS-1$", "+\t\t\t\t\tSimpleLookupTable indexedFileNames = new SimpleLookupTable(max == 0 ? 33 : max + 11);", "+\t\t\t\t\tfor (int i = 0; i < max; i++)", "+\t\t\t\t\t\tindexedFileNames.put(results[i].getPath(), DELETED);", "-\t\t\t\t\t\t\tif (!indexedFileNames.remove(entryDocument.getName())) {", "-\t\t\t\t\t\t\t\tneedToReindex = true;", "+\t\t\t\t\t\t\tindexedFileNames.put(entryDocument.getName(), EXISTS);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tboolean needToReindex = indexedFileNames.elementSize != max; // a new file was added", "+\t\t\t\t\tif (!needToReindex) {", "+\t\t\t\t\t\tObject[] valueTable = indexedFileNames.valueTable;", "+\t\t\t\t\t\tfor (int i = 0, l = valueTable.length; i < l; i++) {", "+\t\t\t\t\t\t\tif (valueTable[i] == DELETED) {", "+\t\t\t\t\t\t\t\tneedToReindex = true; // a file was deleted so re-index", "-\t\t\t\t\t}", "-\t\t\t\t\tif (!needToReindex && indexedFileNames.size() == 0) {", "-\t\t\t\t\t\tif (JobManager.VERBOSE)", "-\t\t\t\t\t\t\tJobManager.verbose(\"-> no indexing required (index is consistent with library) for \" //$NON-NLS-1$", "-\t\t\t\t\t\t\t+ zip.getName() + \" (\" //$NON-NLS-1$", "-\t\t\t\t\t\t\t+ (System.currentTimeMillis() - initialTime) + \"ms)\"); //$NON-NLS-1$", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\tif (!needToReindex) {", "+\t\t\t\t\t\t\tif (JobManager.VERBOSE)", "+\t\t\t\t\t\t\t\tJobManager.verbose(\"-> no indexing required (index is consistent with library) for \" //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t+ zip.getName() + \" (\" //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t+ (System.currentTimeMillis() - initialTime) + \"ms)\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}"]}], "num": 24515}