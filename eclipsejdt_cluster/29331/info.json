{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2aee650909acbbfbe4195c9b6695655", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b958ba523a0d1237f115c5643e06fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "86113d82738e778f8e0f07729ab352d227a867ad", "commitAfterChange": "2d89f0516f5e5910bcd18015e8090ed0805dbb4e", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\t\t\tthis.handle(", "-\t\t\t\tIProblem.IncorrectSwitchType,", "-\t\t\t\tnew String[] {new String(testType.readableName())},", "-\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\t\t\texpression.sourceStart,", "-\t\t\t\texpression.sourceEnd);", "+\t\t\tif (this.options.sourceLevel < ClassFileConstants.JDK1_5 && testType.isEnum()) {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.SwitchOnEnumNotBelow15,", "+\t\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\t\texpression.sourceEnd);", "+\t\t\t} else {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\t\texpression.sourceEnd);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6a2f4dfd67879e3dad4e5b8ea49f69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\tthis.handle(", "-\t\tIProblem.IncorrectSwitchType,", "-\t\tnew String[] {new String(testType.readableName())},", "-\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\texpression.sourceStart,", "-\t\texpression.sourceEnd);", "+\tif (this.options.sourceLevel < ClassFileConstants.JDK1_7) {", "+\t\tif (testType.id == TypeIds.T_JavaLangString) {", "+\t\t\tthis.handle(", "+\t\t\t\t\tIProblem.SwitchOnStringsNotBelow17,", "+\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\texpression.sourceEnd);", "+\t\t} else {", "+\t\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t\t}", "+\t} else {", "+\t\tthis.handle(", "+\t\t\t\tIProblem.IncorrectSwitchType17,", "+\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\texpression.sourceStart,", "+\t\t\t\texpression.sourceEnd);", "+\t}"]}], "num": 29331}