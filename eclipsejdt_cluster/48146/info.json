{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59a9b115266c053a431964137292bb0e", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740e91ca85ff973f4d1109ca8aba43ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 53, "signatureBeforeChange": " protected void consumeTypeArgumentReferenceType1()", "signatureAfterChange": "  protected void consumeTypeArgumentReferenceType1()", "diff": ["+", "-\tthis.typeRefFineGrain |= IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "-\tpatternLocator.match((TypeReference)genericsStack[genericsPtr], nodeSet);", "-\tthis.typeRefFineGrain &= ~IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "+\tif ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {", "+\t\tint length = this.genericsLengthStack[this.genericsLengthPtr];", "+\t\tif (length == 1) {", "+\t\t\tTypeReference typeReference = (TypeReference)this.genericsStack[this.genericsPtr];", "+\t\t\tTypeReference[] typeArguments = null;", "+\t\t\tif (typeReference instanceof ParameterizedSingleTypeReference) {", "+\t            typeArguments = ((ParameterizedSingleTypeReference) typeReference).typeArguments;", "+            } else if (typeReference instanceof ParameterizedQualifiedTypeReference) {", "+\t            TypeReference[][] allTypeArguments = ((ParameterizedQualifiedTypeReference) typeReference).typeArguments;", "+\t            typeArguments = allTypeArguments[allTypeArguments.length-1];", "+            }", "+\t\t\tif (typeArguments != null) {", "+\t            for (int i=0, ln=typeArguments.length; i<ln; i++) {", "+\t            \tif (!(typeArguments[i] instanceof Wildcard)) {", "+\t\t\t\t\t\tthis.patternLocator.match(typeArguments[i], this.nodeSet);", "+\t            \t}", "+\t            }", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be622d49d0f8738ce11d6060d8e749f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "fe01542fcd3aa3aadeb3ef9dbecdc34ba5993c8d", "commitAfterChange": "e89bfd441ddc86e7db4459ee29b0092f7959a77e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 54, "signatureBeforeChange": " protected void consumeTypeArgumentReferenceType2()", "signatureAfterChange": "  protected void consumeTypeArgumentReferenceType2()", "diff": ["+", "-\tthis.typeRefFineGrain |= IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "-\tpatternLocator.match((TypeReference)genericsStack[genericsPtr], nodeSet);", "-\tthis.typeRefFineGrain &= ~IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE;", "+\tif ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {", "+\t\tint length = this.genericsLengthStack[this.genericsLengthPtr];", "+\t\tif (length == 1) {", "+\t\t\tTypeReference typeReference = (TypeReference)this.genericsStack[this.genericsPtr];", "+\t\t\tTypeReference[] typeArguments = null;", "+\t\t\tif (typeReference instanceof ParameterizedSingleTypeReference) {", "+\t            typeArguments = ((ParameterizedSingleTypeReference) typeReference).typeArguments;", "+            } else if (typeReference instanceof ParameterizedQualifiedTypeReference) {", "+\t            TypeReference[][] allTypeArguments = ((ParameterizedQualifiedTypeReference) typeReference).typeArguments;", "+\t            typeArguments = allTypeArguments[allTypeArguments.length-1];", "+            }", "+\t\t\tif (typeArguments != null) {", "+\t            for (int i=0, ln=typeArguments.length; i<ln; i++) {", "+\t            \tif (!(typeArguments[i] instanceof Wildcard)) {", "+\t\t\t\t\t\tthis.patternLocator.match(typeArguments[i], this.nodeSet);", "+\t            \t}", "+\t            }", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 48146}