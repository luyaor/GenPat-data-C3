{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc18f4eb8d9b54f79a8860d5080b2050", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3652a577fd4058568e67948c9fa5eea4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tFlowInfo rightInfo = leftInfo.initsWhenTrue().unconditionalInits().copy();", "+\t\tFlowInfo rightInfo = leftInfo.initsWhenTrue().unconditionalCopy();", "-\t\tFlowInfo trueMergedInfo = rightInfo.initsWhenTrue().copy();", "-\t\trightInfo.setReachMode(previousMode); // reset after trueMergedInfo got extracted", "-\t\t\t\ttrueMergedInfo, ", "-\t\t\t\tleftInfo.initsWhenFalse().copy().unconditionalInits().mergedWith(", "-\t\t\t\t\t\trightInfo.initsWhenFalse().copy().unconditionalInits()));", "+\t\t\t\trightInfo.safeInitsWhenTrue(), ", "+\t\t\t\tleftInfo.initsWhenFalse().unconditionalInits().mergedWith(", "+\t\t\t\t\t\trightInfo.initsWhenFalse().setReachMode(previousMode).unconditionalInits()));", "+\t\t// reset after trueMergedInfo got extracted"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9e635a7a66668254a0852ef63ddd95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tFlowInfo rightInfo = leftInfo.initsWhenFalse().unconditionalInits().copy();", "+\t\tFlowInfo rightInfo = leftInfo.initsWhenFalse().unconditionalCopy();", "-\t\tFlowInfo falseMergedInfo = rightInfo.initsWhenFalse().copy();", "-\t\trightInfo.setReachMode(previousMode); // reset after falseMergedInfo got extracted", "-", "-\t\t\t\t\tleftInfo.initsWhenTrue().copy().unconditionalInits().mergedWith(", "-\t\t\t\t\t\trightInfo.initsWhenTrue().copy().unconditionalInits()),", "-\t\t\t\t\tfalseMergedInfo);", "+\t\t\t\t\tleftInfo.initsWhenTrue().unconditionalInits().mergedWith(", "+\t\t\t\t\t\trightInfo.safeInitsWhenTrue().setReachMode(previousMode).unconditionalInits()),", "+\t\t\t\t\trightInfo.initsWhenFalse());"]}], "num": 46190}