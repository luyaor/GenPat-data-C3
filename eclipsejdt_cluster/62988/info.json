{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3250d918d3fc0662ea0b9902a787657", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf03e8682426032813498ba30630745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "2e810cf626465e41259becd7125dd36c56f25bba", "commitAfterChange": "6a535b4099793b71184321570c224994c4b63f74", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\t\t\"3. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tObject clone();\\n\" + ", "-\t\t\t\"\t       ^^^^^^^\\n\" + ", "-\t\t\t\"The annotation type I cannot override the method Object.clone()\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93bee0af8a08f6d667c7a069f444f70d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b2e6c1de11c5945ad0058b70deb343fdac78d55b", "commitAfterChange": "f51fdf456ddb08b822391ad1e88baeaffa718152", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void test068()", "signatureAfterChange": " \tpublic void test068()", "diff": ["-\t\t\t\"3. ERROR in test\\\\X1.java (at line 3)\\n\" + ", "-\t\t\t\"\tpublic class X1<A1 extends X2<A2> {\\n\" + ", "-\t\t\t\"\t                                ^\\n\" + ", "-\t\t\t\"Syntax error, insert \\\"Dimensions\\\" to complete ArrayType\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in test\\\\X1.java (at line 7)\\n\" + ", "+\t\t\t\"3. ERROR in test\\\\X1.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5da9cf13e15b36b7ceb460dab6f251", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " public void test401847a()", "signatureAfterChange": " public void test401847a()", "diff": ["-\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"\tfoo(true ? X::goo : X::goo);\\n\" + ", "-\t\t\t\"\t           ^^^^^^\\n\" + ", "-\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + "]}], "num": 62988}