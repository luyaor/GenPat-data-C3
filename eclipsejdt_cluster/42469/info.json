{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d5cc9da351353d7fe0879bf9f6a934f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c8336c2ca76bdae8a64351a892e688", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilerOptions(Map settings)", "signatureAfterChange": " \tpublic CompilerOptions(CompilerOptions options)", "diff": ["+\t */", "+\tpublic CompilerOptions(CompilerOptions options) {", "+\t\tthis.errorThreshold = options.errorThreshold;", "+\t\tthis.warningThreshold = options.warningThreshold;", "+\t\tthis.produceDebugAttributes = options.produceDebugAttributes;", "+\t\tthis.complianceLevel = options.complianceLevel;", "+\t\tthis.sourceLevel = options.sourceLevel;", "+\t\tthis.targetJDK = options.targetJDK;", "+\t\tthis.isPrivateConstructorAccessChangingVisibility = options.isPrivateConstructorAccessChangingVisibility;", "+\t\tthis.defaultEncoding = options.defaultEncoding;", "+\t\tthis.verbose = options.verbose;", "+\t\tthis.produceReferenceInfo = options.produceReferenceInfo;", "+\t\tthis.preserveAllLocalVariables = options.preserveAllLocalVariables;", "+\t\tthis.parseLiteralExpressionsAsConstants = options.parseLiteralExpressionsAsConstants;", "+\t\tthis.maxProblemsPerUnit = options.maxProblemsPerUnit;", "+\t\tthis.taskTags = options.taskTags;", "+\t\tthis.taskPriorites = options.taskPriorites;", "+\t\tthis.isTaskCaseSensitive = options.isTaskCaseSensitive;", "+\t\tthis.reportDeprecationInsideDeprecatedCode = options.reportDeprecationInsideDeprecatedCode;", "+\t\tthis.reportDeprecationWhenOverridingDeprecatedMethod = options.reportDeprecationWhenOverridingDeprecatedMethod;", "+\t\tthis.reportUnusedParameterWhenImplementingAbstract = options.reportUnusedParameterWhenImplementingAbstract;", "+\t\tthis.reportUnusedParameterWhenOverridingConcrete = options.reportUnusedParameterWhenOverridingConcrete;", "+\t\tthis.reportUnusedDeclaredThrownExceptionWhenOverriding = options.reportUnusedDeclaredThrownExceptionWhenOverriding;", "+\t\tthis.reportSpecialParameterHidingField = options.reportSpecialParameterHidingField;", "+\t\tthis.reportInvalidJavadocTagsVisibility = options.reportInvalidJavadocTagsVisibility;", "+\t\tthis.reportInvalidJavadocTags = options.reportInvalidJavadocTags;", "+\t\tthis.reportInvalidJavadocTagsDeprecatedRef = options.reportInvalidJavadocTagsDeprecatedRef;", "+\t\tthis.reportInvalidJavadocTagsNotVisibleRef = options.reportInvalidJavadocTagsNotVisibleRef;", "+\t\tthis.reportMissingJavadocTagsVisibility = options.reportMissingJavadocTagsVisibility;", "+\t\tthis.reportMissingJavadocTagsOverriding = options.reportMissingJavadocTagsOverriding;", "+\t\tthis.reportMissingJavadocCommentsVisibility = options.reportMissingJavadocCommentsVisibility; ", "+\t\tthis.reportMissingJavadocCommentsOverriding = options.reportMissingJavadocCommentsOverriding;", "+\t\tthis.inlineJsrBytecode = options.inlineJsrBytecode;", "+\t\tthis.docCommentSupport = options.docCommentSupport;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6aa10338b1c4e80b12bbbf919af902", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map optionsMap)", "signatureAfterChange": "  \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadoc)) != null) {", "-\t\t\tif (ENABLED.equals(optionValue)) {", "-\t\t\t\tthis.reportMissingJavadoc = true;", "-\t\t\t} else if (DISABLED.equals(optionValue)) {", "-\t\t\t\tthis.reportMissingJavadoc = false;", "-\t\t\t}", "-\t\t}", "-\t\tif ((optionValue = optionsMap.get(OPTION_ReportInvalidJavadoc)) != null) updateSeverity(InvalidJavadoc, optionValue);", "+", "+\t\t// Javadoc options", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportInvalidJavadoc)) != null) {", "+\t\t\tupdateSeverity(InvalidJavadoc, optionValue);", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportInvalidJavadocTagsVisibility)) != null) {", "+\t\t\tif (PUBLIC.equals(optionValue)) {", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccPublic;", "+\t\t\t} else if (PROTECTED.equals(optionValue)) {", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccProtected;", "+\t\t\t} else if (DEFAULT.equals(optionValue)) {", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccDefault;", "+\t\t\t} else if (PRIVATE.equals(optionValue)) {", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccPrivate;", "+\t\t\t}", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportInvalidJavadocTags)) != null) {", "+\t\t\tif (ENABLED.equals(optionValue)) {", "+\t\t\t\tthis.reportInvalidJavadocTags= true;", "+\t\t\t} else if (DISABLED.equals(optionValue)) {", "+\t\t\t\tthis.reportInvalidJavadocTags = false;", "+\t\t\t}", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadocTags)) != null) {", "+\t\t\tupdateSeverity(MissingJavadocTags, optionValue);", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadocTagsVisibility)) != null) {", "+\t\t\tif (PUBLIC.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccPublic;", "+\t\t\t} else if (PROTECTED.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccProtected;", "+\t\t\t} else if (DEFAULT.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccDefault;", "+\t\t\t} else if (PRIVATE.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccPrivate;", "+\t\t\t}", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadocTagsOverriding)) != null) {", "+\t\t\t// TODO (frederic) see with jdt-ui whether we use ignore instead of report", "+\t\t\tif (ENABLED.equals(optionValue)) {", "+\t\t\t\t//this.reportMissingJavadocTagsOverriding = true;", "+\t\t\t\tthis.reportMissingJavadocTagsOverriding = false;", "+\t\t\t} else if (DISABLED.equals(optionValue)) {", "+\t\t\t\t//this.reportMissingJavadocTagsOverriding = false;", "+\t\t\t\tthis.reportMissingJavadocTagsOverriding = true;", "+\t\t\t}", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadocComments)) != null) {", "+\t\t\tupdateSeverity(MissingJavadocComments, optionValue);", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadocCommentsVisibility)) != null) {", "+\t\t\tif (PUBLIC.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccPublic;", "+\t\t\t} else if (PROTECTED.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccProtected;", "+\t\t\t} else if (DEFAULT.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccDefault;", "+\t\t\t} else if (PRIVATE.equals(optionValue)) {", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccPrivate;", "+\t\t\t}", "+\t\t}", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportMissingJavadocCommentsOverriding)) != null) {", "+\t\t\t// TODO (frederic) see with jdt-ui whether we use ignore instead of report", "+\t\t\tif (ENABLED.equals(optionValue)) {", "+\t\t\t\t//this.reportMissingJavadocCommentsOverriding = true;", "+\t\t\t\tthis.reportMissingJavadocCommentsOverriding = false;", "+\t\t\t} else if (DISABLED.equals(optionValue)) {", "+\t\t\t\t//this.reportMissingJavadocCommentsOverriding = false;", "+\t\t\t\tthis.reportMissingJavadocCommentsOverriding = true;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "636f9a4a69ab9fb723ce9f5fd9edfc78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void set(Map optionsMap)", "signatureAfterChange": " \t \tpublic void set(Map optionsMap)", "diff": ["-\t\t\tif (this.targetJDK >= JDK1_5) this.inlineJsrBytecode = true; // forced in 1.5 mode", "+\t\t\tif (this.targetJDK >= ClassFileConstants.JDK1_5) this.inlineJsrBytecode = true; // forced in 1.5 mode", "-\t\t\tif (level >= JDK1_3) this.isPrivateConstructorAccessChangingVisibility = true;", "+\t\t\tif (level >= ClassFileConstants.JDK1_3) this.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\tif (this.targetJDK < JDK1_5) { // only optional if target < 1.5 (inlining on from 1.5 on)", "+\t\t\tif (this.targetJDK < ClassFileConstants.JDK1_5) { // only optional if target < 1.5 (inlining on from 1.5 on)", "+\t\t\t}", "+\t\t}\t\t", "+\t\tif ((optionValue = optionsMap.get(OPTION_FatalOptionalError)) != null) {", "+\t\t\tif (ENABLED.equals(optionValue)) {", "+\t\t\t\tthis.treatOptionalErrorAsFatal = true;", "+\t\t\t} else if (DISABLED.equals(optionValue)) {", "+\t\t\t\tthis.treatOptionalErrorAsFatal = false;", "-\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccPublic;", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = ClassFileConstants.AccPublic;", "-\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccProtected;", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = ClassFileConstants.AccProtected;", "-\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccDefault;", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = ClassFileConstants.AccDefault;", "-\t\t\t\tthis.reportInvalidJavadocTagsVisibility = AccPrivate;", "+\t\t\t\tthis.reportInvalidJavadocTagsVisibility = ClassFileConstants.AccPrivate;", "-\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccPublic;", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = ClassFileConstants.AccPublic;", "-\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccProtected;", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = ClassFileConstants.AccProtected;", "-\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccDefault;", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = ClassFileConstants.AccDefault;", "-\t\t\t\tthis.reportMissingJavadocTagsVisibility = AccPrivate;", "+\t\t\t\tthis.reportMissingJavadocTagsVisibility = ClassFileConstants.AccPrivate;", "-\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccPublic;", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = ClassFileConstants.AccPublic;", "-\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccProtected;", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = ClassFileConstants.AccProtected;", "-\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccDefault;", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = ClassFileConstants.AccDefault;", "-\t\t\t\tthis.reportMissingJavadocCommentsVisibility = AccPrivate;", "+\t\t\t\tthis.reportMissingJavadocCommentsVisibility = ClassFileConstants.AccPrivate;"]}], "num": 42469}