{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "713f25d30103a4da3906eb933c45b40e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370de50c0b8cc59db0ad82c7699feeb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "4aa9bc6aa2cb666fb0721f9b95f7c7e969829a0c", "commitAfterChange": "39745a85705361f7e5b8ca890f80a07d85799adc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r void recordReference(char[][] qualifiedEnclosingName, char[] simpleName)", "signatureAfterChange": "\r void recordReference(char[][] qualifiedEnclosingName, char[] simpleName)", "diff": ["-\tif (qualifiedReferences == null) return; // we're not recording dependencies\r", "-\r", "-\tif (!qualifiedReferences.contains(qualifiedEnclosingName)) {\r", "-\t\tqualifiedReferences.add(qualifiedEnclosingName);\r", "-\t\trecordReference(qualifiedEnclosingName);\r", "-\t}\r", "-\tif (!simpleNameReferences.contains(simpleName))\r", "-\t\tsimpleNameReferences.add(simpleName);\r", "+\trecordReference(qualifiedEnclosingName);\r", "+\trecordSimpleReference(simpleName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44ccd2c917ef7961138d3eaedcd01fb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "cbfd7db0bb53f26158d0852adc3e2f21478a9415", "commitAfterChange": "86cd4406415b3c44c6ae3f955ab9070cd474074b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t \tpublic static final Constant computeConstantOperationPLUS(Constant left, int leftId, int operator, Constant right, int rightId)", "signatureAfterChange": " \t\t \tpublic static final Constant computeConstantOperationPLUS(Constant left, int leftId, int operator, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_null:\treturn Constant.fromValue(left.stringValue() + right.stringValue()); ", "+\t\t\t\t\tcase T_null:\treturn NotAConstant; //(26138) return Constant.fromValue(left.stringValue() + right.stringValue()); ", "-\t\t\t\t\tcase T_null:\treturn Constant.fromValue(left.stringValue() + right.stringValue()); ", "+\t\t\t\t\tcase T_null:\treturn NotAConstant; //(26138) return Constant.fromValue(left.stringValue() + right.stringValue()); "]}], "num": 14755}