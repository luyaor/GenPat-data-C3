{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45a732feb6c91325c1cc26db8951c2f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085c576e97dcd6bf58002a296b868b7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  public void deprecatedMethod(MethodBinding method, ASTNode location)", "signatureAfterChange": "  public void deprecatedMethod(MethodBinding method, ASTNode location)", "diff": ["-\t\t\tnew String[] {new String(method.declaringClass.readableName()), typesAsString(method.isVarargs(), method.parameters, false)},", "-\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), typesAsString(method.isVarargs(), method.parameters, true)},", "+\t\t\tnew String[] {new String(method.declaringClass.readableName()), typesAsString(method, false)},", "+\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), typesAsString(method, true)},", "-\t\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "-\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},", "+\t\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method, false)},", "+\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2de9f5b5dd2ea60dab124c4134ebf78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 225, "signatureBeforeChange": "  public void javadocDeprecatedMethod(MethodBinding method, ASTNode location, int modifiers)", "signatureAfterChange": "  public void javadocDeprecatedMethod(MethodBinding method, ASTNode location, int modifiers)", "diff": ["-\t\t\t\tnew String[] {new String(method.declaringClass.readableName()), typesAsString(method.isVarargs(), method.parameters, false)},", "-\t\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), typesAsString(method.isVarargs(), method.parameters, true)},", "+\t\t\t\tnew String[] {new String(method.declaringClass.readableName()), typesAsString(method, false)},", "+\t\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), typesAsString(method, true)},", "-\t\t\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, false)},", "-\t\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method.isVarargs(), method.parameters, true)},", "+\t\t\t\tnew String[] {new String(method.declaringClass.readableName()), new String(method.selector), typesAsString(method, false)},", "+\t\t\t\tnew String[] {new String(method.declaringClass.shortReadableName()), new String(method.selector), typesAsString(method, true)},"]}], "num": 45177}