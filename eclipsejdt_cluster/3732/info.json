{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27b9e45cf839051a8ed0bccf59811122", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58aba27d9fab9deb832242f6f85b91f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "3fea0bd3d01827a0628763911bb538bc75a5f8bd", "commitAfterChange": "267a82506dfcd2b4938ade544a2160c1561cce40", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void disassemble(IFieldInfo fieldInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IFieldInfo fieldInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\t\t\tbuffer.append(constantPoolEntry.getDoubleValue());", "+\t\t\t\t\tfinal double doubleValue = constantPoolEntry.getDoubleValue();", "+\t\t\t\t\tif (checkMode(mode, ClassFileBytesDisassembler.WORKING_COPY)) {", "+\t\t\t\t\t\tif (doubleValue == Double.POSITIVE_INFINITY) {", "+\t\t\t\t\t\t\tbuffer.append(\"1.0 / 0.0\"); //$NON-NLS-1$", "+\t\t\t\t\t\t} else if (doubleValue == Double.NEGATIVE_INFINITY) {", "+\t\t\t\t\t\t\tbuffer.append(\"-1.0 / 0.0\"); //$NON-NLS-1$", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tbuffer.append(constantPoolEntry.getDoubleValue());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbuffer.append(constantPoolEntry.getDoubleValue());", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb18e1b17501345b37ac9a0ff83d131d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "fe6ffdef0750d72bbc70fe8bbcab741af97eada4", "commitAfterChange": "73a5ad5796e2751191a9ca65c5fd12f72d0d03d1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String getContext()", "signatureAfterChange": " \t \tpublic String getContext()", "diff": ["+\t\t\t", "+\t\t\tbuffer.append(\"completion token kind=\");", "+\t\t\tint tokenKind = context.getTokenKind();", "+\t\t\tif(tokenKind == CompletionContext.TOKEN_KIND_STRING_LITERAL) {", "+\t\t\t\tbuffer.append(\"TOKEN_KIND_STRING_LITERAL\");", "+\t\t\t} else if(tokenKind == CompletionContext.TOKEN_KIND_NAME) {", "+\t\t\t\tbuffer.append(\"TOKEN_KIND_NAME\");", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(\"TOKEN_KIND_UNKNOWN\");", "+\t\t\t}", "+\t\t\tbuffer.append('\\n');"]}], "num": 3732}