{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d76135904364d542bacdfecd75245754", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c26477c3e7a9c59919bbf8cf4719c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "12c4e4b205989aa55133649370c2e394e8cb1f2a", "commitAfterChange": "4a3b8d7f66c815bfc252f4ffc29a63c010eff917", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tprivate void generateMissingTypesAttribute()", "signatureAfterChange": "  \tprivate void generateMissingTypesAttribute()", "diff": ["-\t\tnext : for (int i = 0; i < initialSize; i++) {", "+\t\tif (initialSize > 1) {", "+\t\t\tCollections.sort(this.missingTypes, new Comparator() {", "+\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\tTypeBinding typeBinding1 = (TypeBinding) o1;", "+\t\t\t\t\tTypeBinding typeBinding2 = (TypeBinding) o2;", "+\t\t\t\t\treturn CharOperation.compareTo(typeBinding1.constantPoolName(), typeBinding2.constantPoolName());", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\tint previousIndex = 0;", "+\t\tnext: for (int i = 0; i < initialSize; i++) {", "-\t\t\tfor (int j = 0; j < numberOfMissingTypes; j++)", "-\t\t\t\tif (missingTypesIndexes[j] == missingTypeIndex)", "-\t\t\t\t\tcontinue next;", "+\t\t\tif (previousIndex == missingTypeIndex) {", "+\t\t\t\tcontinue next;", "+\t\t\t}", "+\t\t\tpreviousIndex = missingTypeIndex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "311d775acc5b26f322fcf03e9a04c996", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "4cd7b0042adaa5239f354bb5b89cc98c811b7e1c", "commitAfterChange": "e6a94071ba1347cd79bc7467e3bac32c94398042", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tprivate void generateMissingTypesAttribute()", "signatureAfterChange": "  \tprivate void generateMissingTypesAttribute()", "diff": ["-\t\tint numberOfMissingTypes = this.missingTypes.size();", "-\t\tTypeBinding[] missingTypesArray;", "-\t\tthis.missingTypes.toArray(missingTypesArray = new TypeBinding[numberOfMissingTypes]);", "-\t\tArrays.sort(missingTypesArray, new Comparator() {", "-\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\tTypeBinding binding1 = (TypeBinding) o1;", "-\t\t\t\tTypeBinding binding2 = (TypeBinding) o2;", "-\t\t\t\treturn CharOperation.compareTo(binding1.constantPoolName(), binding2.constantPoolName());", "-\t\t\t}", "-\t\t});", "+\t\tint initialSize = this.missingTypes.size();", "+\t\tint[] missingTypesIndexes = new int[initialSize];", "+\t\tint numberOfMissingTypes = 0;", "+\t\tnext : for (int i = 0; i < initialSize; i++) {", "+\t\t\tint missingTypeIndex = this.constantPool.literalIndexForType((TypeBinding) this.missingTypes.get(i));", "+\t\t\tfor (int j = 0; j < numberOfMissingTypes; j++)", "+\t\t\t\tif (missingTypesIndexes[j] == missingTypeIndex)", "+\t\t\t\t\tcontinue next;", "+\t\t\tmissingTypesIndexes[numberOfMissingTypes++] = missingTypeIndex;", "+\t\t}", "+\t\tif (numberOfMissingTypes > 1)", "+\t\t\tArrays.sort(missingTypesIndexes);", "-\t\t\tint missingTypeIndex = this.constantPool.literalIndexForType(missingTypesArray[i]);", "+\t\t\tint missingTypeIndex = missingTypesIndexes[i];"]}], "num": 68069}