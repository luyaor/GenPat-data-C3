{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c9644693b855ab432edf66e64f0b930", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f14076b8490fc578d592536c6af497d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "10a59ab8fb6256e59e155c071a356402964eb736", "commitAfterChange": "bacbe6f6e994ffc49a94960691c76bff97cb04d5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "signatureAfterChange": " \tpublic boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "diff": ["+\t\treturn true;", "+\t\t", "-\t\tExpression resultExpression = (Expression) this.resultExpressions.get(s); // should be same as for s", "+\t//\tExpression resultExpression = (Expression) this.resultExpressions.get(s); // should be same as for s", "-\t\ts = s.capture(this.enclosingScope, this.sourceEnd);", "-\t\tsSam = s.getSingleAbstractMethod(this.enclosingScope);", "-\t\treturn resultExpression.sIsMoreSpecific(sSam.returnType, tSam.returnType);", "+//\t\ts = s.capture(this.enclosingScope, this.sourceEnd);", "+//\t\tsSam = s.getSingleAbstractMethod(this.enclosingScope);", "+//\t\treturn resultExpression.sIsMoreSpecific(sSam.returnType, tSam.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "500dd4936b5a5c445941bff3a331047c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "e7c40dbc434529a8379a830b9ae4ab2c74d0fc13", "commitAfterChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tITypeBinding resolveType(Type type)", "signatureAfterChange": "\r \tITypeBinding resolveType(Type type)", "diff": ["-\t\t\tnode = (AstNode) this.newAstToOldAst.get(type);\r", "+\t\t\tif (parentType instanceof ArrayCreation) {\r", "+\t\t\t\tnode = (AstNode) this.newAstToOldAst.get(parentType);\r", "+\t\t\t} else {\r", "+\t\t\t\tnode = (AstNode) this.newAstToOldAst.get(type);\r", "+\t\t\t}\r", "+\t\t\t} else if (node instanceof ArrayAllocationExpression) {\r", "+\t\t\t\tArrayAllocationExpression arrayAllocationExpression = (ArrayAllocationExpression) node;\r", "+\t\t\t\treturn this.getTypeBinding(arrayAllocationExpression.arrayTb);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1bbe3fed61b4e54259c4ec84980af8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "b3a2f7bfaa3438c01da8001220d197a764da19bb", "commitAfterChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveExpressionType(Expression expression)", "diff": ["-\t\t\tOperatorExpression operatorExpression = (OperatorExpression) this.newAstToOldAst.get(expression);", "-\t\t\treturn this.getTypeBinding(operatorExpression.resolvedType);", "+\t\t\tObject node = this.newAstToOldAst.get(expression);", "+\t\t\tif (node instanceof OperatorExpression) {", "+\t\t\t\tOperatorExpression operatorExpression = (OperatorExpression) node;", "+\t\t\t\treturn this.getTypeBinding(operatorExpression.resolvedType);", "+\t\t\t} else if (node instanceof StringLiteralConcatenation) {", "+\t\t\t\tStringLiteralConcatenation stringLiteralConcatenation = (StringLiteralConcatenation) node;", "+\t\t\t\treturn this.getTypeBinding(stringLiteralConcatenation.resolvedType);", "+\t\t\t}"]}], "num": 17424}