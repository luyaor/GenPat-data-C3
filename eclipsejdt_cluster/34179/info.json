{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d26864dafc513a165f19859dc8b058a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bc6352f036179473f48d18e4dd32b43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate int getSourceAttachmentDeltaFlag(IPath oldPath, IPath newPath)", "signatureAfterChange": " \tprivate int getSourceAttachmentDeltaFlag(IPath oldPath, IPath newPath, IPath sourcePath)", "diff": ["-\tprivate int getSourceAttachmentDeltaFlag(IPath oldPath, IPath newPath) {", "+\tprivate int getSourceAttachmentDeltaFlag(IPath oldPath, IPath newPath, IPath sourcePath) {", "-\t\t\t\treturn 0;", "+\t\t\t\tif (sourcePath != null) {", "+\t\t\t\t\t// if source path is specified and no root path, it needs to be recomputed dynamically", "+\t\t\t\t\treturn IJavaElementDelta.F_SOURCEATTACHED | IJavaElementDelta.F_SOURCEDETACHED;", "+\t\t\t\t} else {", "+\t\t\t\t\treturn 0;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ead6937dcbbd662e6749afc3e6a69cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "68ccb4031ed08b4fe5c4be466185d9f98028d52b", "commitAfterChange": "b97b84a6370469b0432a4c45b3f13c4f7bb62ce7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  ClasspathDirectory(File directory, String encoding, int mode)", "signatureAfterChange": "  ClasspathDirectory(File directory, String encoding, int mode, AccessRuleSet accessRuleSet)", "diff": ["-ClasspathDirectory(File directory, String encoding, int mode) {", "-\tthis.mode = mode;", "+ClasspathDirectory(File directory, String encoding, int mode, AccessRuleSet accessRuleSet) {", "+\tsuper(accessRuleSet);", "+\tif (mode == 0){", "+\t\tthis.mode = SOURCE | BINARY;", "+\t}", "+\telse {", "+\t    this.mode = mode;", "+\t}"]}], "num": 34179}