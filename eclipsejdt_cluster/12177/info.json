{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "039e6cff5d35eb3a631e15a579c5ac56", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0829465755e63900213e9336ecb82d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "251e5030d501e3ac46efed7da2423b08b9bbc426", "commitAfterChange": "2e311e7a7c2090e80873156db9c9652e786f039d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public final void pushLineSeparator()", "signatureAfterChange": "  public final void pushLineSeparator()", "diff": ["-\t\ttry {", "-\t\t\tthis.lineEnds[++this.linePtr] = separatorPos;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t//this.linePtr value is correct", "-\t\t\tint oldLength = this.lineEnds.length;", "-\t\t\tint[] old = this.lineEnds;", "-\t\t\tthis.lineEnds = new int[oldLength + INCREMENT];", "-\t\t\tSystem.arraycopy(old, 0, this.lineEnds, 0, oldLength);", "-\t\t\tthis.lineEnds[this.linePtr] = separatorPos;", "-\t\t}", "+\t\tint length = this.lineEnds.length;", "+\t\tif (++this.linePtr >=  length)", "+\t\t\tSystem.arraycopy(this.lineEnds, 0, this.lineEnds = new int[length + INCREMENT], 0, length);", "+\t\tthis.lineEnds[this.linePtr] = separatorPos;", "-\t\t\t\t// System.out.println(\"LF-\" + separatorPos);\t\t\t\t\t\t\t", "-\t\t\t\ttry {", "-\t\t\t\t\tthis.lineEnds[++this.linePtr] = separatorPos;", "-\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\t//this.linePtr value is correct", "-\t\t\t\t\tint oldLength = this.lineEnds.length;", "-\t\t\t\t\tint[] old = this.lineEnds;", "-\t\t\t\t\tthis.lineEnds = new int[oldLength + INCREMENT];", "-\t\t\t\t\tSystem.arraycopy(old, 0, this.lineEnds, 0, oldLength);", "-\t\t\t\t\tthis.lineEnds[this.linePtr] = separatorPos;", "-\t\t\t\t}", "+\t\t\t\t// System.out.println(\"LF-\" + separatorPos);", "+\t\t\t\tint length = this.lineEnds.length;", "+\t\t\t\tif (++this.linePtr >=  length)", "+\t\t\t\t\tSystem.arraycopy(this.lineEnds, 0, this.lineEnds = new int[length + INCREMENT], 0, length);", "+\t\t\t\tthis.lineEnds[this.linePtr] = separatorPos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1275556d990a341273ec80995060ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "527793c3501c0044ba7f65ec00ff957c7a149690", "commitAfterChange": "ca79168b190819b66ae58549346eb222c2411abf", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final void pushUnicodeLineSeparator()", "signatureAfterChange": " public final void pushUnicodeLineSeparator()", "diff": ["-\t// isUnicode means that the \\r or \\n has been read as a unicode character", "-\t", "-\t//see comment on isLineDelimiter(char) for the use of '\\n' and '\\r'", "-", "-\tfinal int INCREMENT = 250;", "-\t//currentCharacter is at position currentPosition-1", "-", "-\t\tint separatorPos = currentPosition - 6;", "-\t\tif ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;", "-\t\t//System.out.println(\"CR-\" + separatorPos);", "-\t\ttry {", "-\t\t\tlineEnds[++linePtr] = separatorPos;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t//linePtr value is correct", "-\t\t\tint oldLength = lineEnds.length;", "-\t\t\tint[] old = lineEnds;", "-\t\t\tlineEnds = new int[oldLength + INCREMENT];", "-\t\t\tSystem.arraycopy(old, 0, lineEnds, 0, oldLength);", "-\t\t\tlineEnds[linePtr] = separatorPos;", "-\t\t}", "-\t\t// look-ahead for merged cr+lf", "-\t\t\t//System.out.println(\"look-ahead LF-\" + currentPosition);\t\t\t", "-\t\t\tlineEnds[linePtr] = currentPosition;", "-\t\t\tcurrentPosition++;", "-\t\t\tif (wasAcr && (lineEnds[linePtr] == (currentPosition - 7))) {", "-\t\t\t\t//System.out.println(\"merge LF-\" + (currentPosition - 1));\t\t\t\t\t\t\t", "-\t\t\t\tlineEnds[linePtr] = currentPosition - 6;", "-\t\t\t} else {", "-\t\t\t\tint separatorPos = currentPosition - 6;", "-\t\t\t\tif ((linePtr > 0) && (lineEnds[linePtr] >= separatorPos)) return;", "-\t\t\t\t// System.out.println(\"LF-\" + separatorPos);\t\t\t\t\t\t\t", "-\t\t\t\ttry {", "-\t\t\t\t\tlineEnds[++linePtr] = separatorPos;", "-\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\t//linePtr value is correct", "-\t\t\t\t\tint oldLength = lineEnds.length;", "-\t\t\t\t\tint[] old = lineEnds;", "-\t\t\t\t\tlineEnds = new int[oldLength + INCREMENT];", "-\t\t\t\t\tSystem.arraycopy(old, 0, lineEnds, 0, oldLength);", "-\t\t\t\t\tlineEnds[linePtr] = separatorPos;", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b675b3d0319f7bd64ffe8796b1fb0bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "7bcb99e7ad84de70464891787abf51d43b804a12", "commitAfterChange": "8023b6f511673fc49005352ca31569dabe76c387", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public final void pushLineSeparator()", "signatureAfterChange": "  public final void pushLineSeparator()", "diff": ["-\t\ttry {", "-\t\t\tthis.lineEnds[++this.linePtr] = separatorPos;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t//this.linePtr value is correct", "-\t\t\tint oldLength = this.lineEnds.length;", "-\t\t\tint[] old = this.lineEnds;", "-\t\t\tthis.lineEnds = new int[oldLength + INCREMENT];", "-\t\t\tSystem.arraycopy(old, 0, this.lineEnds, 0, oldLength);", "-\t\t\tthis.lineEnds[this.linePtr] = separatorPos;", "-\t\t}", "+\t\tint length = this.lineEnds.length;", "+\t\tif (++this.linePtr >=  length)", "+\t\t\tSystem.arraycopy(this.lineEnds, 0, this.lineEnds = new int[length + INCREMENT], 0, length);", "+\t\tthis.lineEnds[this.linePtr] = separatorPos;", "-\t\t\t\t// System.out.println(\"LF-\" + separatorPos);\t\t\t\t\t\t\t", "-\t\t\t\ttry {", "-\t\t\t\t\tthis.lineEnds[++this.linePtr] = separatorPos;", "-\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\t//this.linePtr value is correct", "-\t\t\t\t\tint oldLength = this.lineEnds.length;", "-\t\t\t\t\tint[] old = this.lineEnds;", "-\t\t\t\t\tthis.lineEnds = new int[oldLength + INCREMENT];", "-\t\t\t\t\tSystem.arraycopy(old, 0, this.lineEnds, 0, oldLength);", "-\t\t\t\t\tthis.lineEnds[this.linePtr] = separatorPos;", "-\t\t\t\t}", "+\t\t\t\t// System.out.println(\"LF-\" + separatorPos);", "+\t\t\t\tint length = this.lineEnds.length;", "+\t\t\t\tif (++this.linePtr >=  length)", "+\t\t\t\t\tSystem.arraycopy(this.lineEnds, 0, this.lineEnds = new int[length + INCREMENT], 0, length);", "+\t\t\t\tthis.lineEnds[this.linePtr] = separatorPos;"]}], "num": 12177}