{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81f3ee5a896780439d7cb420e2f085de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf34b42631bf0749ab5913cd15c3284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 727, "methodNumberAfterChange": 727, "signatureBeforeChange": " public void test0706b()", "signatureAfterChange": " public void test0706b()", "diff": ["+\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tAA<CC> res = bb.test();\\n\" + ", "+\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tBB res2 = bb.test();\\n\" + ", "+\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tAA<CC> res = bb.test();\\n\" + ", "+\t\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\t\"\tBB res2 = bb.test();\\n\" + ", "+\t\t\t\t\"\t             ^^^^\\n\" + ", "+\t\t\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "+\t\t\t\t\"\t                                 ^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\";", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\tAA<CC> res = bb.test();\\n\" + ", "-\t\t\"\t                ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\"\tBB res2 = bb.test();\\n\" + ", "-\t\t\"\t             ^^^^\\n\" + ", "-\t\t\"The method test() is ambiguous for the type BB\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tclass BB extends AA<CC> { <U> BB test() {return null;} }\\n\" + ", "-\t\t\"\t                                 ^^^^^^\\n\" + ", "-\t\t\"Name clash: The method test() of type BB has the same erasure as test() of type AA<T> but does not override it\\n\" + ", "-\t\t\"----------\\n\"", "+\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecfd24302b2f1b948b9282b5fed0f4b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"D.java\",", "-\t\t\t\t\"class D extends B<Integer> {\\n\" +", "-\t\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "-\t\t\t\t\"\t@Override void m(Integer t) {}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"class A<T extends Number> { void m(T t) {} }\\n\" +", "-\t\t\t\t\"class B<S extends Integer> extends A<S> { @Override void m(S t) {} }\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "-\t\t);", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in D.java (at line 2)\\n\" + ", "+\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method m(Number) of type D has the same erasure as m(T) of type A<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in D.java (at line 2)\\n\" + ", "+\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method m(Number) of type D must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in D.java (at line 6)\\n\" + ", "+\t\t\t\"\tclass B<S extends Integer> extends A<S> { @Override void m(S t) {} }\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^\\n\" + ", "+\t\t\t\"The type parameter S should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "+\t\t\t\"----------\\n\";", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"D.java\",", "+\t\t\t\t\"class D extends B<Integer> {\\n\" +", "+\t\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "+\t\t\t\t\"\t@Override void m(Integer t) {}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class A<T extends Number> { void m(T t) {} }\\n\" +", "+\t\t\t\t\"class B<S extends Integer> extends A<S> { @Override void m(S t) {} }\"", "+\t\t\t},", "+\t\t\texpectedOutput);"]}], "num": 23035}