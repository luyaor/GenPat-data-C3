{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1ca226554ca6732143347e229afa2be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdf7625fec30f898e6df20c7a2920a1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void launchVerifyTestsIfNeeded(String[] classpaths, String[] vmArguments)", "signatureAfterChange": " private void launchVerifyTestsIfNeeded(String[] classpaths, String[] vmArguments)", "diff": ["-\t\tboolean sameClasspaths = true;", "-\t\tfor (int i = 0; i < classpaths.length; i++) {", "-\t\t\tif (!this.classpathCache[i].equals(classpaths[i])) {", "-\t\t\t\tsameClasspaths = false;", "-\t\t\t\tbreak;", "+\t\tif (classpaths.length == classpathCache.length) {", "+\t\t\tboolean sameClasspaths = true;", "+\t\t\tfor (int i = 0; i < classpaths.length; i++) {", "+\t\t\t\tif (!this.classpathCache[i].equals(classpaths[i])) {", "+\t\t\t\t\tsameClasspaths = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t}", "-\t\tif (sameClasspaths) {", "-\t\t\treturn;", "+\t\t\tif (sameClasspaths) {", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d5d6fc05d697c94ef29ac1d683ce9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "1f16b07138a4ff3970eb777fe51b4defd3508931", "commitAfterChange": "30166c06d6dd51fd7dbca34d0d55442f8ed395c4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " void computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\t\tboolean generateCurrentLocalVar = (local.useFlag != LocalVariableBinding.UNUSED && local.constant() == Constant.NotAConstant);", "+\t\t\tboolean generateCurrentLocalVar = (local.useFlag > LocalVariableBinding.UNUSED && local.constant() == Constant.NotAConstant);", "-\t\t\t\t\tlocal.useFlag = LocalVariableBinding.USED;", "+\t\t\t\t\tif (local.useFlag == LocalVariableBinding.UNUSED)", "+\t\t\t\t\t\tlocal.useFlag = LocalVariableBinding.USED;"]}], "num": 43705}