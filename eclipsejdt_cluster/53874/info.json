{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7a5d4e35aac046f13ec515e1801efbc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7464f3b689f50190f914efb7fa5898b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprivate IPackageFragmentRoot getPkgFragmentRoot(String pathString)", "signatureAfterChange": "\r \tprivate IPackageFragmentRoot getPkgFragmentRoot(String pathString)", "diff": ["-\t\tIPath path = new Path(pathString);\r", "-\t\ttry {\r", "-\t\t\tJavaModel javaModel =\r", "-\t\t\t\tthis.manager.getJavaModel(this.workspaceRoot.getWorkspace());\r", "-\t\t\tIProject[] projects = this.workspaceRoot.getProjects();\r", "-\t\t\tfor (int i = 0, max = projects.length; i < max; i++) {\r", "-\t\t\t\tIJavaProject javaProject = javaModel.getJavaProject(projects[i]);\r", "-\t\t\t\tIPackageFragmentRoot[] roots = javaProject.getPackageFragmentRoots();\r", "-\t\t\t\tfor (int j = 0, rootCount = roots.length; j < rootCount; j++) {\r", "-\t\t\t\t\tIPackageFragmentRoot root = roots[j];\r", "+\t\tIPath path= new Path(pathString);\r", "+\t\tJavaModel javaModel= this.manager.getJavaModel(this.workspaceRoot.getWorkspace());\r", "+\t\tIProject[] projects= this.workspaceRoot.getProjects();\r", "+\t\tfor (int i= 0, max= projects.length; i < max; i++) {\r", "+\t\t\ttry {\r", "+\t\t\t\tIProject project = projects[i];\r", "+\t\t\t\tif (!project.isAccessible() \r", "+\t\t\t\t\t|| !project.hasNature(JavaCore.NATURE_ID)) continue;\r", "+\t\t\t\tIJavaProject javaProject= javaModel.getJavaProject(project);\r", "+\t\t\t\tIPackageFragmentRoot[] roots= javaProject.getPackageFragmentRoots();\r", "+\t\t\t\tfor (int j= 0, rootCount= roots.length; j < rootCount; j++) {\r", "+\t\t\t\t\tIPackageFragmentRoot root= roots[j];\r", "+\t\t\t} catch (CoreException e) {\r", "+\t\t\t\t// CoreException from hasNature - should not happen since we check that the project is accessible\r", "+\t\t\t\t// JavaModelException from getPackageFragmentRoots - a problem occured while accessing project: nothing we can do, ignore\r", "-\t\t} catch (JavaModelException e) {\r", "-\t\t\te.printStackTrace();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea27e1fc1e60110d319252c1176aeb70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "signatureAfterChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "diff": ["-\t\tIPath jarPath = new Path(jarPathString);\r", "-\t\tJavaModel javaModel =\r", "-\t\t\tthis.manager.getJavaModel(this.workspaceRoot.getWorkspace());\r", "-\t\tIResource jarFile = this.workspaceRoot.findMember(jarPath);\r", "+\t\tIPath jarPath= new Path(jarPathString);\r", "+\t\tJavaModel javaModel= this.manager.getJavaModel(this.workspaceRoot.getWorkspace());\r", "+\t\tIResource jarFile= this.workspaceRoot.findMember(jarPath);\r", "-\t\t\ttry {\r", "-\t\t\t\tIProject[] projects = this.workspaceRoot.getProjects();\r", "-\t\t\t\tfor (int i = 0, projectCount = projects.length; i < projectCount; i++) {\r", "+\t\t\tIProject[] projects= this.workspaceRoot.getProjects();\r", "+\t\t\tfor (int i= 0, projectCount= projects.length; i < projectCount; i++) {\r", "+\t\t\t\ttry {\r", "-\t\t\t\t\tif (project.isAccessible()) {\r", "-\t\t\t\t\t\tIJavaProject javaProject = javaModel.getJavaProject(project);\r", "-\t\t\t\t\t\tIClasspathEntry[] classpathEntries = javaProject.getResolvedClasspath(true);\r", "-\t\t\t\t\t\tfor (int j = 0, entryCount = classpathEntries.length; j < entryCount; j++) {\r", "-\t\t\t\t\t\t\tif (classpathEntries[j].getPath().equals(jarPath)) {\r", "-\t\t\t\t\t\t\t\treturn javaProject.getPackageFragmentRoot(jarPathString);\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\tif (!project.isAccessible() \r", "+\t\t\t\t\t\t|| !project.hasNature(JavaCore.NATURE_ID)) continue;\r", "+\t\t\t\t\tIJavaProject javaProject= javaModel.getJavaProject(project);\r", "+\t\t\t\t\tIClasspathEntry[] classpathEntries= javaProject.getResolvedClasspath(true);\r", "+\t\t\t\t\tfor (int j= 0, entryCount= classpathEntries.length; j < entryCount; j++) {\r", "+\t\t\t\t\t\tif (classpathEntries[j].getPath().equals(jarPath)) {\r", "+\t\t\t\t\t\t\treturn javaProject.getPackageFragmentRoot(jarPathString);\r", "+\t\t\t\t} catch (CoreException e) {\r", "+\t\t\t\t\t// CoreException from hasNature - should not happen since we check that the project is accessible\r", "+\t\t\t\t\t// JavaModelException from getResolvedClasspath - a problem occured while accessing project: nothing we can do, ignore\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\te.printStackTrace();\r"]}], "num": 53874}