{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd72b36d7dbaccacc88bd8b897faf39d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f9eaeb99ab3f25b552c283f59d4efba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "523ea3b2c64428d6b9f9d9783cbb0776a4263765", "commitAfterChange": "19e8b378f3973cba5b6ddd20330ed251678b8a37", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (!this.completedTokenFound && ", "+\t\t\t\t\t\tif (this.completionIdentifier == null && ", "-\t\t\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\t\t//&& (previousToken == TokenNameDOT)", "-\t\t\t\t\t\t&& (!this.completedTokenFound)", "-\t\t\t\t\t\t&& (whiteStart <= this.cursorLocation+1)", "-\t\t\t\t\t\t&& (this.cursorLocation < this.startPosition)", "-\t\t\t\t\t\t&& !Character.isJavaIdentifierStart(this.currentCharacter)){", "-", "-\t\t\t\t\tif (this.tokenizeWhiteSpace && hasWhiteSpaces && !this.whitespacesBeforeCompletedTokenFound) {", "-\t\t\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "-\t\t\t\t\t\tthis.currentPosition-=offset;", "-\t\t\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\t\t\t\tthis.whitespacesBeforeCompletedTokenFound = true;", "-\t\t\t\t\t\treturn TokenNameWHITESPACE;", "-\t\t\t\t\t}", "+\t\t\t\t\t//&& (previousToken == TokenNameDOT)", "+\t\t\t\t\t&& (this.completionIdentifier == null)", "+\t\t\t\t\t&& (whiteStart <= this.cursorLocation+1)", "+\t\t\t\t\t&& (this.cursorLocation < this.startPosition)", "+\t\t\t\t\t&& !Character.isJavaIdentifierStart(this.currentCharacter)){", "-\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\tthis.whitespacesBeforeCompletedTokenFound = false;", "-\t\t\t\tif (!this.completedTokenFound  && ", "+\t\t\t\tif (this.completionIdentifier == null && ", "-\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\t\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\t\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (this.startPosition <= this.cursorLocation && this.cursorLocation <= this.currentPosition-1){", "-\t\t\t\t\t\tthis.completedTokenFound = true;", "-\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\tif (!this.completedTokenFound && ", "+\tif (this.completionIdentifier == null && ", "-\t\tthis.completedTokenFound = true;", "-\t\tthis.completedIdentifierStart = this.startPosition;", "-\t\tthis.completedIdentifierEnd = this.currentPosition - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7d56d273d62d219dc86d9d2328e362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "signatureAfterChange": " \tpublic LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType)", "diff": ["+\t\tLambdaExpression lambda = this.resolvedCopies.get(targetType);", "+\t\tif (lambda == null) {", "+\t\t\tlambda = getResolvedCopyForInferenceTargeting0(targetType);", "+\t\t\tif (lambda != null) {", "+\t\t\t\tthis.resolvedCopies.put(targetType, lambda);", "+\t\t\t}", "+\t\t}", "+\t\treturn lambda;", "+\t}", "-\t\ttargetType = targetType.uncapture(this.enclosingScope);", "-\t\t// TODO: caching"]}], "num": 20873}