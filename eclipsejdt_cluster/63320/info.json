{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e40b1ead78fc5194dbd798a475b61cd1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bdab86005730daaf7b9a46a9a593d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames)", "signatureAfterChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames) {", "+", "+public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ", "+\t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker) ", "+{", "-\tTypeBinding type = getTypeFromSignature(wrapper.signature, wrapper.start, wrapper.computeEnd(), isParameterized = (wrapper.end == wrapper.bracket), enclosingType, missingTypeNames);", "+\tTypeBinding type = getTypeFromSignature(wrapper.signature, wrapper.start, wrapper.computeEnd(), isParameterized = (wrapper.end == wrapper.bracket), enclosingType, missingTypeNames, walker);", "+", "-\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, actualType, missingTypeNames);", "+\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, actualType, missingTypeNames, walker);", "-\t\t\ttypeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, memberType, missingTypeNames);", "+\t\t\ttypeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, memberType, missingTypeNames, walker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8599cfb19daba682de20c136ff122e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7ba9ff29fe6b05ec0a2f58eaa1f5d3e68bb11101", "commitAfterChange": "427a01e331e57852efc472cca3a8360bd121fda9", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 51, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "diff": ["-\t\tchar[][][] missingTypeNames) {", "+\t\tchar[][][] missingTypeNames,", "+\t\tTypeAnnotationWalker walker) {", "-\t\t\tTypeBinding bound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames);", "+\t\t\tTypeBinding bound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames, walker);", "-\t\t\tbound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames);", "+\t\t\tbound = getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames, walker);", "-\t\t\treturn getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames);", "+\t\t\treturn getTypeFromTypeSignature(wrapper, staticVariables, enclosingType, missingTypeNames, walker);"]}], "num": 63320}