{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5be60bcacd707f4cd72e973435797d98", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e956f4f766b51f52313b8e9b32fc44f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "3bee3efb3c3139a52dff7aa299065deb5290ece4", "commitAfterChange": "645825dd1e7c490f7b149a754d38a08b99765996", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic void testBug69302negative()", "signatureAfterChange": " \tpublic void testBug69302negative2()", "diff": ["-\tpublic void testBug69302negative() {", "+\tpublic void testBug69302negative2() {", "-\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\t\"\t/**@see Unknown blabla <a href=\\\"http://www.eclipse.org\\\">text</a>*/\\n\" + ", "-\t\t\t\t\"\t        ^^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Unknown cannot be resolved to a type\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\t/**@see Unknown blabla \\\"Valid string reference\\\"*/\\n\" + ", "-\t\t\t\t\"\t        ^^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Unknown cannot be resolved to a type\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\t/**@see Unknown blabla <a href=\\\"http://www.eclipse.org\\\">text</a>*/\\n\" + ", "+\t\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Unknown cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t/**@see Unknown blabla \\\"Valid string reference\\\"*/\\n\" + ", "+\t\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Unknown cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5f896990ac1087dedb963936b2a043", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "ee8ad1e40e9b16f34ac6204dee3c91af5b27ff77", "commitAfterChange": "a6e44391963b63fa0c27651827313192cc7a80a0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test037() throws Exception", "signatureAfterChange": " \tpublic void test037() throws Exception", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^^\\n\" + ", "+\t\t\t\t\"Type annotations are not allowed on type names used to access static members\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t                  ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t                            ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\tI i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\\n\" + ", "+\t\t\t\t\"\t                                          ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed2e592ed155a055ed5d9383636da25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "c3bc9435ae5f771b490381d71d5245c83cf6d0cb", "commitAfterChange": "9a37cc8c27d2ce81469956404b5e25a8551c0848", "methodNumberBeforeChange": 296, "methodNumberAfterChange": 296, "signatureBeforeChange": " \tpublic void test0652() throws CoreException", "signatureAfterChange": " \tpublic void test0652() throws CoreException", "diff": ["-\t\t\t\t\"11. ERROR in /Converter/src/TestCharset.java (at line 17)\\n\" +", "+\t\t\t\t\"11. ERROR in /Converter/src/TestCharset.java (at line 10)\\n\" +", "+\t\t\t\t\"\tCharsetDecoder(CharSet\\n\" +", "+\t\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"Return type for the method is missing\\n\" +", "+\t\t\t\t\"12. ERROR in /Converter/src/TestCharset.java (at line 11)\\n\" +", "+\t\t\t\t\"\tprotected CoderResult decodeLoop(ByteBuffer in,\\n\" +", "+\t\t\t\t\"\t          ^^^^^^^^^^^\\n\" +", "+\t\t\t\t\"CoderResult cannot be resolved to a type\\n\" +", "+\t\t\t\t\"13. ERROR in /Converter/src/TestCharset.java (at line 11)\\n\" +", "+\t\t\t\t\"\tprotected CoderResult decodeLoop(ByteBuffer in,\\n\" +", "+\t\t\t\t\"\t                                 ^^^^^^^^^^\\n\" +", "+\t\t\t\t\"ByteBuffer cannot be resolved to a type\\n\" +", "+\t\t\t\t\"14. ERROR in /Converter/src/TestCharset.java (at line 12)\\n\" +", "+\t\t\t\t\"\tCharBuffer out) {\\n\" +", "+\t\t\t\t\"\t^^^^^^^^^^\\n\" +", "+\t\t\t\t\"CharBuffer cannot be resolved to a type\\n\" +", "+\t\t\t\t\"15. ERROR in /Converter/src/TestCharset.java (at line 17)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "721a07093d02d843a41e38c20e8dd476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "commitAfterChange": "a8944173670c6319cce2438add6b3e87f478a46c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test039() throws Exception", "signatureAfterChange": " \tpublic void test039() throws Exception", "diff": ["+\t\t\t\t\"\t            ^^^^^^^\\n\" + ", "+\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tObject q = (@Marker java. @Marker util. @Marker List<@Marker String> []) null;\\n\" + ", "-\t\t\t\t\"5. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"7. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tObject q = (@Marker java. @Marker util. @Marker List<@Marker String> []) null;\\n\" + ", "-\t\t\t\t\"\t                                        ^^^^^^^\\n\" + ", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "-\t\t\t\t\"Type annotations are not allowed on type names used to access static members\\n\" + ", "+\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "-\t\t\t\t\"15. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\"\tObject r = (@Marker java. @Marker util.@Marker Map<@Marker String, @Marker String>.@Marker Entry @Marker []) null;\\n\" + ", "-\t\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + ", "+\t\t\t\t\"15. ERROR in X.java (at line 5)\\n\" +", "+\t\t\t\t\"\tObject r = (@Marker java. @Marker util.@Marker Map<@Marker String, @Marker String>.@Marker Entry @Marker []) null;\\n\" +", "+\t\t\t\t\"\t                                       ^^^^^^^\\n\" +", "+\t\t\t\t\"Type annotations are not allowed on type names used to access static members\\n\" +"]}], "num": 33481}