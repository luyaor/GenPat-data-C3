{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59c6ba2dfbe5051aa151d4ad685e49ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b9e037b90a616a21ba543c9a362405", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "adc07cf3b793a0c93fc3ffa3b36d812e63e0ed07", "commitAfterChange": "58e7930d5c1910f242904620e060ecf1ad889861", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\tfindTypeParameters(token, scope);", "+\t\t\tif(!assistNodeIsConstructor) {", "+\t\t\t\t// don't propose type parmaters if the completion is a constructor ('new |')", "+\t\t\t\tfindTypeParameters(token, scope);", "+\t\t\t}", "+\t\t\t\t\t\tif(refBinding.isTypeVariable() && assistNodeIsConstructor) {", "+\t\t\t\t\t\t\t// don't propose type variable if the completion is a constructor ('new |')", "+\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2204cc72fd754af497f484d9d534bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\t\tif (reader.isNestedType()) {", "+\t\t\tboolean isNestedType = reader.isNestedType();", "+\t\t\tif (isNestedType) {", "+\t\t\t\t\tboolean isConstructor = method.isConstructor();", "-\t\t\t\t\tchar[][] parameterTypes = decodeParameterTypes(descriptor);", "+\t\t\t\t\tchar[][] parameterTypes = decodeParameterTypes(descriptor, isConstructor && isNestedType);", "-\t\t\t\t\tif (method.isConstructor()) {", "+\t\t\t\t\tif (isConstructor) {"]}], "num": 9357}