{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ed43f7590c75697946cf850192a6496", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94a44f346ad0959c59f6f49da8dd4e07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "90ab26b26139b04c1b21341903f9bda9323cd1a1", "commitAfterChange": "63bda44d804d11c0afa7e8111644ceeb5480e759", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite)", "signatureAfterChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tint varArgDimension = varArgType.dimensions();", "-\t\t\t\t\tint lastArgDimensions = lastArgument.dimensions();", "-\t\t\t\t\tif (varArgDimension == lastArgDimensions || varArgDimension - 1 == lastArgDimensions) {", "-\t\t\t\t\t\tvarArgType = varArgType.leafComponentType();", "-\t\t\t\t\t\tlastArgument = lastArgument.leafComponentType();", "-\t\t\t\t\t\tif (varArgType != lastArgument && !lastArgument.isCompatibleWith(varArgType))", "+\t\t\t\t\tif (varArgType != lastArgument && !lastArgument.isCompatibleWith(varArgType)) {", "+\t\t\t\t\t\t// expect X[], called with X", "+\t\t\t\t\t\tvarArgType = ((ArrayBinding) varArgType).elementsType();", "+\t\t\t\t\t\tif (!lastArgument.isCompatibleWith(varArgType))", "-\t\t\t\t\t} else { // dimensions are not compatible", "-\t\t\t\t\t\tbreak argumentCompatibility;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d9197f62f2833b36ecacd163d96d1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "53ef1901eb9652b60d01f901557a99f6b7923647", "commitAfterChange": "a968559657d89e15246203d474f2d73832561da4", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic static char[][] getJavaLikeExtensions()", "signatureAfterChange": " \tpublic static char[][] getJavaLikeExtensions()", "diff": ["-\t\t\t\tJAVA_LIKE_EXTENSIONS = new char[][] {SuffixConstants.SUFFIX_java};", "+\t\t\t\tJAVA_LIKE_EXTENSIONS = new char[][] {SuffixConstants.EXTENSION_java.toCharArray()};", "-\t\t\t\textensions[0] = SuffixConstants.SUFFIX_java; // ensure that \".java\" is first", "-\t\t\t\tknownExtensions.add(SuffixConstants.SUFFIX_java);", "+\t\t\t\textensions[0] = SuffixConstants.EXTENSION_java.toCharArray(); // ensure that \".java\" is first", "+\t\t\t\tknownExtensions.add(extensions[0]);", "-\t\t\t\t\tint extensionLength = fileExtension.length() + 1;", "-\t\t\t\t\tchar[] extension = new char[extensionLength];", "-\t\t\t\t\textension[0] = '.';", "-\t\t\t\t\tfileExtension.getChars(0, extensionLength-1, extension, 1);", "+\t\t\t\t\tchar[] extension = fileExtension.toCharArray();"]}], "num": 19392}