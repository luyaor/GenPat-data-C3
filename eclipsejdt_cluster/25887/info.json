{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d912a3e56fd50e4b804925aece5c9775", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd129a6a4b49095496a342a983c87cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding)", "signatureAfterChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding)", "diff": ["-\t\t\t\tboolean hasRestrictedAccess = sourceType.hasRestrictedAccess();", "-\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue;", "+\t\t\t\tint accessibility = IAccessRule.K_ACCESSIBLE;", "+\t\t\t\tif(sourceType.hasRestrictedAccess()) {", "+\t\t\t\t\tAccessRestriction accessRestriction = lookupEnvironment.getAccessRestriction(sourceType);", "+\t\t\t\t\tif(accessRestriction != null) {", "+\t\t\t\t\t\tswitch (accessRestriction.getProblemId()) {", "+\t\t\t\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\t\t\t\tif(this.options.checkForbiddenReference) return;", "+\t\t\t\t\t\t\t\taccessibility = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\t\t\t\tif(this.options.checkDiscouragedReference) return;", "+\t\t\t\t\t\t\t\taccessibility = IAccessRule.K_DISCOURAGED;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\trelevance += computeRelevanceForRestrictions(accessibility);", "+\t\t\t\t\tproposal.setAccessibility(accessibility);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dda68dd4ec6c321c2a3842d866bc1a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\trelevance += computeRelevanceForRestrictions(false); // no access restriction for type in the current unit", "+\t\t\t\trelevance += computeRelevanceForRestrictions(IAccessRule.K_ACCESSIBLE); // no access restriction for type in the current unit", "-\t\t\t\t\t\tboolean hasRestrictedAccess = refBinding.hasRestrictedAccess();", "-\t\t\t\t\t\tif(this.options.checkRestrictions && hasRestrictedAccess) continue next;", "+\t\t\t\t\t\tint accessibility = IAccessRule.K_ACCESSIBLE;", "+\t\t\t\t\t\tif(refBinding.hasRestrictedAccess()) {", "+\t\t\t\t\t\t\tAccessRestriction accessRestriction = lookupEnvironment.getAccessRestriction(refBinding);", "+\t\t\t\t\t\t\tif(accessRestriction != null) {", "+\t\t\t\t\t\t\t\tswitch (accessRestriction.getProblemId()) {", "+\t\t\t\t\t\t\t\t\tcase IProblem.ForbiddenReference:", "+\t\t\t\t\t\t\t\t\t\tif(this.options.checkForbiddenReference) return;", "+\t\t\t\t\t\t\t\t\t\taccessibility = IAccessRule.K_NON_ACCESSIBLE;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase IProblem.DiscouragedReference:", "+\t\t\t\t\t\t\t\t\t\tif(this.options.checkDiscouragedReference) return;", "+\t\t\t\t\t\t\t\t\t\taccessibility = IAccessRule.K_DISCOURAGED;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(hasRestrictedAccess);", "+\t\t\t\t\t\t\trelevance += computeRelevanceForRestrictions(accessibility);", "+\t\t\t\t\t\t\t\t\tproposal.setAccessibility(accessibility);", "+\t\t\t\t\t\t\t\t\tproposal.setAccessibility(accessibility);"]}], "num": 25887}