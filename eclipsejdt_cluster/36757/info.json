{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48e6b1db55ab6f788490dd3fbb5cef08", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa058f888a2752002562dd9064bb6015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "339cc4d6bf1e0c04b5fd8670b5c5775e9b614ac5", "commitAfterChange": "58ac3474e49d75029f8406ec492537c604468d2a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\" \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["+\t@SuppressWarnings(\"unchecked\") // for cast of newProxyInstance() to A", "-\tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType) {", "-\t\t// TODO Auto-generated method stub", "-\t\t// throw new UnsupportedOperationException(\"NYI: \" + this + \".getAnnotation(\" + annotationType + \")\"); //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\treturn null;", "+\tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass) {", "+\t\tAnnotationBinding[] annoInstances = getAnnotationBindings();", "+\t\tif( annoInstances == null || annoInstances.length == 0 || annotationClass == null ) ", "+\t\t\treturn null;", "+", "+\t\tString annoTypeName = annotationClass.getName();", "+\t\tif( annoTypeName == null ) return null;", "+\t\tannoTypeName = annoTypeName.replace('$', '.');", "+\t\tfor( AnnotationBinding annoInstance : annoInstances) {", "+\t\t\tif (annoInstance == null)", "+\t\t\t\tcontinue;", "+\t\t\tReferenceBinding binding = annoInstance.getAnnotationType();            ", "+\t\t\tif ( binding != null && binding.isAnnotationType() ) {", "+\t\t\t\tchar[] qName;", "+\t\t\t\tif (binding.isMemberType()) {", "+\t\t\t\t\tqName = CharOperation.concatWith(binding.enclosingType().compoundName, binding.sourceName, '.');", "+\t\t\t\t\tCharOperation.replace(qName, '$', '.');", "+\t\t\t\t} else {", "+\t\t\t\t\tqName = CharOperation.concatWith(binding.compoundName, '.');", "+\t\t\t\t}", "+\t\t\t\tif( annoTypeName.equals(new String(qName)) ){", "+\t\t\t\t\tAnnotationMirrorImpl annoMirror =", "+\t\t\t\t\t\t(AnnotationMirrorImpl)_env.getFactory().newAnnotationMirror(annoInstance);", "+\t\t\t\t\treturn (A)Proxy.newProxyInstance(annotationClass.getClassLoader(),", "+\t\t\t\t\t\t\tnew Class[]{ annotationClass }, annoMirror );", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn null; ", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5068c87a38603c10838168921db0336", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "b6b8c5d56c52da04a602fb9a065023d943b4e7a7", "commitAfterChange": "f8cf1cf93993a2a964d587ccb545506c0c4fdc0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\" \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "signatureAfterChange": "  \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["-\t@SuppressWarnings(\"unchecked\") // for cast of newProxyInstance() to A", "-\t\tAnnotationBinding[] annoInstances = getAnnotationBindings();", "-\t\tif( annoInstances == null || annoInstances.length == 0 || annotationClass == null ) ", "-\t\t\treturn null;", "-", "-\t\tString annoTypeName = annotationClass.getName();", "-\t\tif( annoTypeName == null ) return null;", "-\t\tannoTypeName = annoTypeName.replace('$', '.');", "-\t\tfor( AnnotationBinding annoInstance : annoInstances) {", "-\t\t\tif (annoInstance == null)", "-\t\t\t\tcontinue;", "-\t\t\tReferenceBinding binding = annoInstance.getAnnotationType();", "-\t\t\tif ( binding != null && binding.isAnnotationType() ) {", "-\t\t\t\tchar[] qName;", "-\t\t\t\tif (binding.isMemberType()) {", "-\t\t\t\t\tqName = CharOperation.concatWith(binding.enclosingType().compoundName, binding.sourceName, '.');", "-\t\t\t\t\tCharOperation.replace(qName, '$', '.');", "-\t\t\t\t} else {", "-\t\t\t\t\tqName = CharOperation.concatWith(binding.compoundName, '.');", "-\t\t\t\t}", "-\t\t\t\tif( annoTypeName.equals(new String(qName)) ){", "-\t\t\t\t\tAnnotationMirrorImpl annoMirror =", "-\t\t\t\t\t\t(AnnotationMirrorImpl)_env.getFactory().newAnnotationMirror(annoInstance);", "-\t\t\t\t\treturn (A)Proxy.newProxyInstance(annotationClass.getClassLoader(),", "-\t\t\t\t\t\t\tnew Class[]{ annotationClass }, annoMirror );", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\treturn null; ", "+\t\treturn _env.getFactory().getAnnotation(getAnnotationBindings(), annotationClass);"]}], "num": 36757}