{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbbaea135d96d36ed3d6a4be7cc21e61", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f32d06b3d1058682c8046308d49d493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\t!(((cst != NotAConstant) && (cst.booleanValue() == false))", "-\t\t\t\t|| ((condCst != NotAConstant) && (condCst.booleanValue() == false)));", "+\t\t\t!(((cst != Constant.NotAConstant) && (cst.booleanValue() == false))", "+\t\t\t\t|| ((condCst != Constant.NotAConstant) && (condCst.booleanValue() == false)));", "-\t\t\t!(((cst != NotAConstant) && (cst.booleanValue() == true))", "-\t\t\t\t|| ((condCst != NotAConstant) && (condCst.booleanValue() == true)));", "+\t\t\t!(((cst != Constant.NotAConstant) && (cst.booleanValue() == true))", "+\t\t\t\t|| ((condCst != Constant.NotAConstant) && (condCst.booleanValue() == true)));", "-\t\tboolean needConditionValue = (cst == NotAConstant) && (condCst == NotAConstant);", "+\t\tboolean needConditionValue = (cst == Constant.NotAConstant) && (condCst == Constant.NotAConstant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "929fa7d92ee188f55d627d730ce88080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tif (constant != NotAConstant) {", "+\t\tif (constant != Constant.NotAConstant) {", "-\t\t\t!(((cst != NotAConstant) && (cst.booleanValue() == false))", "-\t\t\t\t|| ((condCst != NotAConstant) && (condCst.booleanValue() == false)));", "+\t\t\t!(((cst != Constant.NotAConstant) && (cst.booleanValue() == false))", "+\t\t\t\t|| ((condCst != Constant.NotAConstant) && (condCst.booleanValue() == false)));", "-\t\t\t!(((cst != NotAConstant) && (cst.booleanValue() == true))", "-\t\t\t\t|| ((condCst != NotAConstant) && (condCst.booleanValue() == true)));", "+\t\t\t!(((cst != Constant.NotAConstant) && (cst.booleanValue() == true))", "+\t\t\t\t|| ((condCst != Constant.NotAConstant) && (condCst.booleanValue() == true)));", "-\t\tboolean needConditionValue = (cst == NotAConstant) && (condCst == NotAConstant);", "+\t\tboolean needConditionValue = (cst == Constant.NotAConstant) && (condCst == Constant.NotAConstant);"]}], "num": 65810}