{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "183cb714f4cd8eae0df54e76cbfb30ff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f329d7fc2e4c28568db50de738fc86a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 687, "methodNumberAfterChange": 694, "signatureBeforeChange": "  \tpublic void testClassInstanceCreation()", "signatureAfterChange": "  \tpublic void testClassInstanceCreation()", "diff": ["-\t\t\tassertTrue(x.typeParameters().isEmpty());", "+\t\t\tassertTrue(x.typeArguments().isEmpty());", "-\t\t\tgenericPropertyListTest(x, x.typeParameters(),", "-\t\t\t  new Property(\"TypeParameters\", true, TypeParameter.class) { //$NON-NLS-1$", "+\t\t\tgenericPropertyListTest(x, x.typeArguments(),", "+\t\t\t  new Property(\"TypeArguments\", true, Type.class) { //$NON-NLS-1$", "-\t\t\t\t\tTypeParameter result = targetAst.newTypeParameter();", "+\t\t\t\t\tType result = targetAst.newSimpleType(targetAst.newSimpleName(\"X\")); //$NON-NLS-1$", "-\t\t\t\t\t\ttargetAst.newMethodDeclaration().typeParameters().add(result);", "+\t\t\t\t\t\ttargetAst.newArrayType(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862dd6a591bc53e6375e91532644946d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "commitAfterChange": "095f68551aabc4fec8e028b2a81b692255ffc31a", "methodNumberBeforeChange": 687, "methodNumberAfterChange": 687, "signatureBeforeChange": "  \tpublic void testClassInstanceCreation()", "signatureAfterChange": "  \tpublic void testClassInstanceCreation()", "diff": ["+\t\t\tassertTrue(x.typeParameters().isEmpty());", "+\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\t\tgenericPropertyListTest(x, x.typeParameters(),", "+\t\t\t  new Property(\"TypeParameters\", true, TypeParameter.class) { //$NON-NLS-1$", "+\t\t\t\tpublic ASTNode sample(AST targetAst, boolean parented) {", "+\t\t\t\t\tTypeParameter result = targetAst.newTypeParameter();", "+\t\t\t\t\tif (parented) {", "+\t\t\t\t\t\ttargetAst.newMethodDeclaration().typeParameters().add(result);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn result;", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\t"]}], "num": 26842}