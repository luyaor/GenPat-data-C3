{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e703a08437b418dd27762f80e9520151", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a7bc9e2832ede47b5832757e063821", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "082d22ae53a4a86157fea19804c1455a5219f69d", "commitAfterChange": "29f132fcaf87888edac9d53f7020a35ba3ae59d6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "diff": ["-\t\treturn  new SearchPatternAdapter(SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive));", "+\t\tint matchRule = isCaseSensitive ? matchMode | SearchPattern.R_CASE_SENSITIVE : matchMode;", "+\t\treturn  new SearchPatternAdapter(SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchRule));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a0f467eb17df2d9005f01e97d63aaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "diff": ["-\t\treturn SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive);", "+\t\treturn  new SearchPatternAdapter(SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c171d43ce58a3a923a707c83736a39c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "679aa0fd26f479e5f5eacae8934cf6323becfdda", "commitAfterChange": "f4c6f76ca25c7f1cc15835d3fa1f5998a02ab891", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprotected SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "signatureAfterChange": " \tprotected SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "diff": ["-\t\treturn SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive);", "+\t\tint matchRule = isCaseSensitive ? matchMode | SearchPattern.R_CASE_SENSITIVE : matchMode;", "+\t\treturn SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchRule);"]}], "num": 23734}