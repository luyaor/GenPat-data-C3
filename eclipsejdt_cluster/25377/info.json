{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f546b9bd5783b0675e87ca0827d7fd3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b98643f6d5c3d56c72acc6f3b29b9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "b1d2801cbd77cde72fb8fb40e241e1d3e42f4b0f", "commitAfterChange": "4b32af7532f47c6d047698c6f04b80fa77e6e574", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private boolean checkBuffers(String outputString, String errorString,  \t\tString sourceFileName, String expectedOutputString, String expectedErrorStringStart)", "signatureAfterChange": " private boolean checkBuffers(String outputString, String errorString,  \t\tString sourceFileName, String expectedOutputString, String expectedErrorStringStart)", "diff": ["+\tboolean didMatchExpectation = true;", "+\tthis.failureReason = null;", "-\t\t\tthis.failureReason =", "+\t\t\tthis.failureReason +=", "-\t\t\treturn false;", "+\t\t\tdidMatchExpectation = false;", "-\t\t\tthis.failureReason =", "+\t\t\tthis.failureReason +=", "-\t\t\treturn false;", "+\t\t\tdidMatchExpectation = false;", "-\treturn true;", "+\treturn didMatchExpectation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76fe535f885a3f4ebbdd92d0d3e6400", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "27e347b6c930838a35dee8fcbff4b393aa0d8dde", "commitAfterChange": "32efda4ca470a8ccf71ee2d08eca76774c3b3fec", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private static boolean equals(String a, String b)", "signatureAfterChange": " private static boolean equals(String a, String b)", "diff": ["-\tint length = aBuffer.length();", "-\tif (length != bBuffer.length()) {", "+\tint length = aBuffer.length(), bLength;", "+\tboolean result = true;", "+\tif (length != (bLength = bBuffer.length())) {", "-\t\treturn false;", "+\t\tif (length > bLength) {", "+\t\t\tlength = bLength;", "+\t\t}", "+\t\tresult = false;", "-\t\t\t\t\t+ \" a: ...\" + aBuffer.substring(beforeStart, beforeEnd) ", "+\t\t\t\t\t+ \"\\na: ...\" + aBuffer.substring(beforeStart, beforeEnd) ", "-\t\t\t\t\t+ \" b: ...\" + bBuffer.substring(beforeStart, beforeEnd) ", "+\t\t\t\t\t+ \"\\nb: ...\" + bBuffer.substring(beforeStart, beforeEnd) ", "-\treturn true;", "+\treturn result; // may be false if one of the strings equals the beginning", "+\t               // of the other one, which is longer anyway"]}], "num": 25377}