{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22d1f66e7811347494b41311ad73c980", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211eecba31dc329ee72233ebefde20c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "c117a64cdf0af5bb1016a70197fdaaecfa29c6f9", "commitAfterChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t \tprivate TypeBinding[] getTypeBindingArguments()", "signatureAfterChange": " \t \tprivate TypeBinding[] getTypeBindingArguments()", "diff": ["-\t\tint rank = 0;", "-\t\t\tTypeBinding binding;", "-\t\t\tint kind = resolver.wildcardKind;", "-\t\t\tswitch (kind) {", "-\t\t\t\tcase Wildcard.EXTENDS:", "-\t\t\t\tcase Wildcard.SUPER:", "-\t\t\t\t\tbinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, (TypeBinding) resolver.compilerBinding, null /*no extra bound*/, kind);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Wildcard.UNBOUND:", "-\t\t\t\t\tbinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, null/*no bound*/, null /*no extra bound*/, kind);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tbinding = (TypeBinding) resolver.compilerBinding;", "-\t\t\t}", "-\t\t\tif (resolver.isCapture)", "-\t\t\t\tbinding = new CaptureBinding((WildcardBinding) binding, null, 0); // TODO (jerome) decode binding key", "-\t\t\targuments[i] = binding;", "+\t\t\targuments[i] = (TypeBinding) resolver.compilerBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66f5ca7dbafa0772e85f5a1062712f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate TypeBinding[] getTypeBindingArguments()", "signatureAfterChange": " \t \tprivate TypeBinding[] getTypeBindingArguments()", "diff": ["-\t\tthis.types.toArray(arguments);", "+\t\tint rank = 0;", "+\t\tfor (int i = 0; i < size; i++) {", "+\t\t\tBindingKeyResolver resolver = (BindingKeyResolver) this.types.get(i);", "+\t\t\tTypeBinding binding;", "+\t\t\tint kind = resolver.wildcardKind;", "+\t\t\tswitch (kind) {", "+\t\t\t\tcase Wildcard.EXTENDS:", "+\t\t\t\tcase Wildcard.SUPER:", "+\t\t\t\t\tbinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, (TypeBinding) resolver.compilerBinding, null /*no extra bound*/, kind);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Wildcard.UNBOUND:", "+\t\t\t\t\tbinding = this.environment.createWildcard((ReferenceBinding) this.typeBinding, rank++, null/*no bound*/, null /*no extra bound*/, kind);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tbinding = (TypeBinding) resolver.compilerBinding;", "+\t\t\t}", "+\t\t\tif (resolver.isCapture)", "+\t\t\t\tbinding = new CaptureBinding((WildcardBinding) binding);", "+\t\t\targuments[i] = binding;", "+\t\t}"]}], "num": 50403}