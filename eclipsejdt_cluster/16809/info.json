{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c9cfb82031211743063ee67605f7ac8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28a3248118046089e873733c2e75f7f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "4b38f12e0fbe8666ccacbe87e7c3a7747f09c440", "commitAfterChange": "f71b88e4df6e3442576958b5b79f7d79b9645b40", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIBinaryType info, \t\tIJavaElement elementToFind)", "signatureAfterChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIBinaryType info, \t\tIJavaElement elementToFind)", "diff": ["-\t\tHashMap oldSourceRanges = (HashMap) this.sourceRanges.clone();", "+\t\tHashMap oldSourceRanges = null;", "+\t\tif (elementToFind != null) {", "+\t\t\toldSourceRanges = (HashMap) this.sourceRanges.clone();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98349e005400feb598006f738178e827", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "327da611a0b93f8998399de3e02937c2497802a7", "commitAfterChange": "42d0e867915c53d81d65bec90350d5bf95684e73", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate Expression parseArguments(TypeReference receiver) throws InvalidInputException", "signatureAfterChange": " \tprivate Expression parseArguments(TypeReference receiver) throws InvalidInputException", "diff": ["-\t\tchar[][] receiverTokens = receiver.getTypeName();", "-\t\tchar[] memberName = identifierStack[0];", "-\t\tboolean isConstructor = CharOperation.equals(memberName, receiverTokens[receiverTokens.length-1]);", "+\t\tboolean isConstructor = true;", "+\t\tif (receiver != null) {", "+\t\t\tchar[][] receiverTokens = receiver.getTypeName();", "+\t\t\tchar[] memberName = identifierStack[0];", "+\t\t\tisConstructor = CharOperation.equals(memberName, receiverTokens[receiverTokens.length-1]);", "+\t\t}"]}], "num": 16809}