{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89e90f4088201a733d9cd0b80872eee0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a93518b098548827075fd2cc7a16962", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "489bd6f4fff60ffd577633f636fc992ac578a001", "commitAfterChange": "a9a6659f6e9383ba6c2ef999e9385837a38140d0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "diff": ["+\t\tif (this.makeOutputFolderConsistent && md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "+\t\t\t// even a project which acts as its own source folder can have an independent/nested output folder", "+\t\t\tvisited.add(md.binaryFolder);", "+\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "+\t\t\tif (binaryDelta != null) {", "+\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "+\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "+\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "+\t\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "-\t\t\tif (this.makeOutputFolderConsistent && md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "-\t\t\t\tvisited.add(md.binaryFolder);", "-\t\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "-\t\t\t\tif (binaryDelta != null) {", "-\t\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "-\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "-\t\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "-\t\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "-\t\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0133d15f5c235b2dbbf9858ac009878", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "2b3faf03e480607600ec10a4a39f50f16f7be45e", "commitAfterChange": "f7325223a37c0f8ceeea4cb0dae6e3b624fd90dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "diff": ["+\tArrayList visited = new ArrayList(sourceLocations.length);", "-\t\t\t\t\tfindSourceFiles(children[j], md, segmentCount);", "+\t\t\t\t\tif (!findSourceFiles(children[j], md, segmentCount))", "+\t\t\t\t\t\treturn false;", "+\t\t\tif (md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "+\t\t\t\tvisited.add(md.binaryFolder);", "+\t\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "+\t\t\t\tif (binaryDelta != null) {", "+\t\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "+\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "+\t\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "+\t\t\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\t\t\t\tfindSourceFiles(children[j], md, segmentCount);", "+\t\t\t\t\t\tif (!findSourceFiles(children[j], md, segmentCount))", "+\t\t\t\t\t\t\treturn false;"]}], "num": 2560}