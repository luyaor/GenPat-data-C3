{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b8b3c4e719a97bf2f916556bbfa972a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f4e29a2c021086ab45e9c531802493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "a0893fa670a9452a3bb55e34d39061d0e31c358a", "commitAfterChange": "59b98ddf9de3ca94b46b4e5e55051cbf72bde23a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\tif (argumentsTypeElided && !this.shouldUnelideTypes)", "-\t\t\t\treturn null; // FUBAR, bail out...", "-\t\t\t// for code assist ONLY, keep the sluice gate shut on bogus errors otherwise.", "-\t\t\targumentsTypeElided = false;", "-\t\t\tint length = this.arguments != null ? this.arguments.length : 0;", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tthis.arguments[i].type = new SingleTypeReference(TypeConstants.OBJECT, 0);", "+\t\t\tif (argumentsTypeElided) {", "+\t\t\t\tif (!this.shouldUnelideTypes)", "+\t\t\t\t\treturn null; // FUBAR, bail out...", "+\t\t\t\t// for code assist ONLY, keep the sluice gate shut on bogus errors otherwise.", "+\t\t\t\targumentsTypeElided = false;", "+\t\t\t\tint length = this.arguments != null ? this.arguments.length : 0;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tthis.arguments[i].type = new SingleTypeReference(TypeConstants.OBJECT, 0);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef11786bf75dcf19d95f0035b48e66b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "a3e5b898cb4a20a395dd36117ef5b31b39ed2b46", "commitAfterChange": "a0893fa670a9452a3bb55e34d39061d0e31c358a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\tfinal boolean argumentsTypeElided = argumentsTypeElided();", "+\t\tboolean argumentsTypeElided = argumentsTypeElided();", "-\t\tif (!haveDescriptor && argumentsTypeElided) ", "-\t\t\treturn null; // FUBAR, bail out...", "-", "+\t\tif (!haveDescriptor) {", "+\t\t\tif (argumentsTypeElided && !this.shouldUnelideTypes)", "+\t\t\t\treturn null; // FUBAR, bail out...", "+\t\t\t// for code assist ONLY, keep the sluice gate shut on bogus errors otherwise.", "+\t\t\targumentsTypeElided = false;", "+\t\t\tint length = this.arguments != null ? this.arguments.length : 0;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tthis.arguments[i].type = new SingleTypeReference(TypeConstants.OBJECT, 0);", "+\t\t\t}", "+\t\t}", "+\t\t"]}], "num": 59185}