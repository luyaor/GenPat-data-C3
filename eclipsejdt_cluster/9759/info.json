{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "421682cf68163722e004c9b39e522e01", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa7aa1b6b59986fe5df36d2b1ecb1c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "5d2ad0b940570868aeb3a33317182334e9423c29", "commitAfterChange": "0f27abdc440c19d22cca8de897116ef5e59c08c4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tReferenceBinding qualifiedType = null;", "-\t\tfor (int i = packageBinding == null ? 0 : packageBinding.compoundName.length, max = this.tokens.length; i < max; i++) {", "+\t    for (int i = packageBinding == null ? 0 : packageBinding.compoundName.length, max = this.tokens.length; i < max; i++) {", "+\t    \tReferenceBinding enclosingType = (ReferenceBinding) this.resolvedType;", "+\t\t\tif (currentType.isStatic() && enclosingType != null && (enclosingType.isParameterizedType() || enclosingType.isGenericType())) {", "+\t\t\t\tscope.problemReporter().staticMemberOfParameterizedType(this, scope.createParameterizedType(currentType, null, enclosingType));", "+\t\t\t\treturn null;", "+\t\t\t}\t\t\t", "-\t\t\t\tParameterizedTypeBinding parameterizedType = scope.createParameterizedType(currentType, argTypes, qualifiedType);", "+\t\t\t\t// check parameterizing non-static member type of raw type", "+\t\t\t\tif (!currentType.isStatic() && enclosingType != null && enclosingType.isRawType()) {", "+\t\t\t\t\tscope.problemReporter().rawMemberTypeCannotBeParameterized(", "+\t\t\t\t\t\t\tthis, scope.environment().createRawType(currentType, enclosingType), argTypes);", "+\t\t\t\t\treturn null;\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t\tParameterizedTypeBinding parameterizedType = scope.createParameterizedType(currentType, argTypes, enclosingType);", "-\t\t\t\tqualifiedType = parameterizedType;", "+\t\t\t\tthis.resolvedType = parameterizedType;", "-", "-\t\t\t\tif (currentType.isGenericType()) { // check raw type", "-   \t\t\t    \tqualifiedType = scope.environment().createRawType(currentType, qualifiedType); // raw type", "-   \t\t\t    } else if (qualifiedType != null && (qualifiedType.isParameterizedType() || qualifiedType.isRawType())) {", "-   \t\t\t    \tqualifiedType = scope.createParameterizedType(currentType, null, qualifiedType);", "-   \t\t\t    }", "+\t\t\t\t\t", "+   \t\t\t    if (enclosingType != null && enclosingType.isParameterizedType()) {", "+\t\t\t\t\tscope.problemReporter().parameterizedMemberTypeMissingArguments(this, scope.createParameterizedType(currentType, null, enclosingType));", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+   \t\t\t    this.resolvedType = scope.environment().createRawType(currentType, enclosingType); // raw type", "-\t\tthis.resolvedType = qualifiedType;", "-\t\t\tthis.resolvedType = scope.createArrayType(qualifiedType, dimensions);", "+\t\t\tthis.resolvedType = scope.createArrayType(this.resolvedType, dimensions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23dfdc3711a6b198166f7879dc1d07a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-", "+\tfinal boolean isDiamond = this.type != null && (this.type.bits & ASTNode.IsDiamond) != 0;", "+\t\t}", "+\t\tif (isDiamond) {", "+\t\t\tscope.problemReporter().diamondNotWithExplicitTypeArguments(this.typeArguments);", "+\t\t\treturn null;", "+\tif (isDiamond) {", "+\t\tTypeBinding [] inferredTypes = inferElidedTypes(((ParameterizedTypeBinding) this.resolvedType).genericType(), null, argumentTypes, scope);", "+\t\tif (inferredTypes == null) {", "+\t\t\tscope.problemReporter().cannotInferElidedTypes(this);", "+\t\t\treturn this.resolvedType = null;", "+\t\t}", "+\t\tthis.resolvedType = this.type.resolvedType = scope.environment().createParameterizedType(((ParameterizedTypeBinding) this.resolvedType).genericType(), inferredTypes, ((ParameterizedTypeBinding) this.resolvedType).enclosingType());", "+ \t}"]}], "num": 9759}