{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ee2fd916048d2ea813b3154ac568b9e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78da292d2685d506c92bb67d76d09658", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "6f2d59d80da8490e52a278944b98c97220ac4149", "commitAfterChange": "06b5701a9032533ad97c85c114cda06219dc0a99", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "signatureAfterChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "diff": ["-\t\t\tif (areParametersEqual(original, currentMethod)) {", "+\t\t\tif (MethodVerifier.doesMethodOverride(original, currentMethod, this.environment)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6511d4c6596b85cdfc33dc9ef116819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "d4f12f601c5afe98df359183a7ee00c6279cb43c", "commitAfterChange": "2bb70794d3aa12984979bb5048af0ae6e6e512c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "signatureAfterChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "diff": ["-\t\t\tif (areParametersEqual(original, currentMethod.original())) {", "+\t\t\tif (areParametersEqual(original, currentMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30a33ca33ffac66db81fa4fab651fe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "e638bcfa6ede2617a8de404af4af8024502bc348", "commitAfterChange": "998718a6f3c4fdf42208417429777816ff07d23a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "signatureAfterChange": " \tprivate void collectOverriddenMethods(MethodBinding original, char[] selector, int suggestedParameterLength, \t\t\tReferenceBinding superType, Set ifcsSeen, List result)", "diff": ["-\t\t\tif (areParametersEqual(original, currentMethod.original())) {", "+\t\t\tif (doesMethodOverride(original, currentMethod)) {"]}], "num": 903}