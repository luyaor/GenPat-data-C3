{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2e356ca9314e712f797818532d83848", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ddb2bd319ec77ecde7139dfc8d1dda4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnMessageSend.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String toStringExpression()", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\tpublic String toStringExpression() {", "+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "-\t\tString s = \"<CompleteOnMessageSend:\"; //$NON-NLS-1$", "-\t\tif (!receiver.isImplicitThis())", "-\t\t\ts = s + receiver.toStringExpression() + \".\"; //$NON-NLS-1$", "-\t\ts = s + new String(selector) + \"(\"; //$NON-NLS-1$", "+\t\toutput.append(\"<CompleteOnMessageSend:\"); //$NON-NLS-1$", "+\t\tif (!receiver.isImplicitThis()) receiver.printExpression(0, output).append('.'); //$NON-NLS-1$", "+\t\toutput.append(selector).append('('); //$NON-NLS-1$", "-\t\t\t\ts += arguments[i].toStringExpression();", "-\t\t\t\tif (i != arguments.length - 1) {", "-\t\t\t\t\ts += \", \"; //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t};", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "+\t\t\t}", "-\t\ts = s + \")>\"; //$NON-NLS-1$", "-\t\treturn s;", "+\t\treturn output.append(\")>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3ebf2bf934c92cf04f532c5b85d179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic String toStringExpression()", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\tpublic String toStringExpression() {", "+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "-\t\tString s = \"new \" + type.toString(0); //$NON-NLS-1$", "-\t\tif (arguments == null)", "-\t\t\ts = s + \"()\"; //$NON-NLS-1$", "-\t\telse {", "-\t\t\ts = s + \"(\"; //$NON-NLS-1$", "+\t\toutput.append(\"new \"); //$NON-NLS-1$", "+\t\ttype.printExpression(0, output); ", "+\t\toutput.append('(');", "+\t\tif (arguments != null) {", "-\t\t\t\ts = s + arguments[i].toStringExpression();", "-\t\t\t\tif (i == (arguments.length - 1))", "-\t\t\t\t\ts = s + \")\"; //$NON-NLS-1$", "-\t\t\t\telse", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "-\t\treturn s;", "+\t\treturn output.append(')');"]}], "num": 61126}