{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3411c918e059c9d8e163cd774a6f625", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a347f1bcf04afdaa1bf12fd0757154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void removeType(IType type)", "signatureAfterChange": " protected void removeType(IType type)", "diff": ["-\tIType superclass = (IType)this.classToSuperclass.remove(type);", "+\tIType superclass = this.classToSuperclass.remove(type);", "-\t\tTypeVector types = (TypeVector)this.typeToSubtypes.get(superclass);", "+\t\tTypeVector types = this.typeToSubtypes.get(superclass);", "-\tIType[] superinterfaces = (IType[])this.typeToSuperInterfaces.remove(type);", "+\tIType[] superinterfaces = this.typeToSuperInterfaces.remove(type);", "-\t\t\tTypeVector types = (TypeVector)this.typeToSubtypes.get(superinterface);", "+\t\t\tTypeVector types = this.typeToSubtypes.get(superinterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b34d6bbc0c4f9b6a93c60ea53c49e42d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "95993961e278d83dc23d7d0203a47aaea09dd722", "commitAfterChange": "c3c99b10f2f19dad36a61c7652eeb013aefa3a8c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testParseCompilationUnit1() throws CoreException", "signatureAfterChange": " \tpublic void testParseCompilationUnit1() throws CoreException", "diff": ["-\t\t\tTypeDeclaration type = (TypeDeclaration)cu.types().get(0);", "+\t\t\tList types = cu.types();", "+\t\t\tassertEquals(\"Unexpected number of types in AST\", 1, types.size());", "+\t\t\tTypeDeclaration type = (TypeDeclaration)types.get(0);", "-\t\t\tITypeBinding[] interfaces = typeBinding.getInterfaces();", "-\t\t\tassertEquals(\"Should implement one interface\", 1, interfaces.length);", "-\t\t\tassertEquals(\"Unexpected interface name\", \"I\", interfaces[0].getName());", "+\t\t\tassertTypeBindingsEqual(", "+\t\t\t\t\"Unexpected interfaces\", ", "+\t\t\t\t\"I\",", "+\t\t\t\ttypeBinding.getInterfaces());"]}], "num": 22090}