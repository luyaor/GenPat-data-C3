{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed06fd92aad7079aadbf70029c04ce46", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6138e1b2b6c5e439a004b881433e93f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "8089727dc6e57c18954234bb8002634241161372", "commitAfterChange": "b99409559acb56cfc6bd7fc6fadb5a07232e1c32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "diff": ["-\t\tif (resource == null) {", "+\t\tif (resource == null)", "-\t\t}", "-\t\tinfo = locator.getBinaryInfo((org.eclipse.jdt.internal.core.ClassFile)type.getClassFile(), resource);", "+\t\tinfo = locator.getBinaryInfo((org.eclipse.jdt.internal.core.ClassFile) type.getClassFile(), resource);", "-\t\t\t\tClassScope scope = ((SourceTypeBinding)typeBinding).scope;", "+\t\t\t\tClassScope scope = ((SourceTypeBinding) typeBinding).scope;", "-\t\tif (typeBinding instanceof BinaryTypeBinding) {", "-\t\t\ttypeBinding = ((BinaryTypeBinding)typeBinding).enclosingType();", "-\t\t} else {", "-\t\t\ttypeBinding = ((SourceTypeBinding)typeBinding).enclosingType();", "-\t\t}", "+\t\ttypeBinding = ((ReferenceBinding) typeBinding).enclosingType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be638ee8e779d3aaaaece178513cf631", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \t \tprivate void findMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tboolean isCompletingDeclaration, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\tif(currentType.isParameterizedType()) {", "-\t\t\t\tcurrentType = ((ParameterizedTypeBinding)currentType).genericType().superclass();", "-\t\t\t} else {", "-\t\t\t\tcurrentType = currentType.superclass();", "-\t\t\t}", "+\t\t\tcurrentType = currentType.superclass();"]}], "num": 563}