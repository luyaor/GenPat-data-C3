{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a04b71dce77e1399a7625df3c5d179be", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241e0e3421dc7c98a2a30887f439f403", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a0d3f43b00b98cd9b9910b76cc59ad213b24c41", "commitAfterChange": "b52526c4f9ea8f8d773a3ff82b8dce78d1d6eaf6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " protected IType createTypeHandle(String simpleTypeName)", "signatureAfterChange": " protected IType createTypeHandle(String simpleTypeName)", "diff": ["-\ttry {", "-\t\t// type name may be null for anonymous (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=164791)", "-\t\tString classFileName = simpleTypeName.length() == 0 ? binaryTypeQualifiedName : simpleTypeName;", "-\t\tIClassFile classFile = binaryType.getPackageFragment().getClassFile(classFileName + SuffixConstants.SUFFIX_STRING_class);", "-\t\treturn classFile.getType();", "-\t} catch (JavaModelException e) {", "-\t\t// ignore as implementation of getType() cannot throw this exception", "-\t}", "-\treturn null;", "+\t// type name may be null for anonymous (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=164791)", "+\tString classFileName = simpleTypeName.length() == 0 ? binaryTypeQualifiedName : simpleTypeName;", "+\tIClassFile classFile = binaryType.getPackageFragment().getClassFile(classFileName + SuffixConstants.SUFFIX_STRING_class);", "+\treturn classFile.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490e4debe4cf5fdeb4f62f46644ce8f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "86c239f2e66a4d986257b0e0acb4d18b2648df10", "commitAfterChange": "0660c8d5b36b733c21ef1069dd1616322b9b5c53", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected IType createTypeHandle(char[] simpleTypeName)", "signatureAfterChange": " protected IType createTypeHandle(char[] simpleTypeName)", "diff": ["-\ttry {", "-\t\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)", "-\t\treturn getTopLevelType(((ClassFile) currentOpenable).getType());", "-\t} catch (JavaModelException e) {", "-\t\treturn null;", "-\t}", "+\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)", "+\treturn getTopLevelType(((ClassFile) currentOpenable).getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fdf0c1b302622a7ddcc9e6b63aaa6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "86c239f2e66a4d986257b0e0acb4d18b2648df10", "commitAfterChange": "0660c8d5b36b733c21ef1069dd1616322b9b5c53", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected IJavaElement createImportHandle(ImportReference importRef)", "signatureAfterChange": " protected IJavaElement createImportHandle(ImportReference importRef)", "diff": ["-\ttry {", "-\t\treturn ((ClassFile) currentOpenable).getType();", "-\t} catch (JavaModelException e) {", "-\t\treturn null;", "-\t}", "+\treturn ((ClassFile) currentOpenable).getType();"]}], "num": 20291}