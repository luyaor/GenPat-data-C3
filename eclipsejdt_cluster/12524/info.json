{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5a509ce403562fdfe8bec98016c158b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e7f01976074e63ec517a10ec9db5f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "9d71feb0c4dc07666b87c11c763ba1f67e99952a", "commitAfterChange": "de0a9fa3c1e69490ad1268e62e8c28d4b0e12f21", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private IProject[] getRequiredProjects()", "signatureAfterChange": "\r private IProject[] getRequiredProjects(boolean includeBinaryPrerequisites)", "diff": ["-private IProject[] getRequiredProjects() {\r", "+private IProject[] getRequiredProjects(boolean includeBinaryPrerequisites) {\r", "-\t\t// some binary resources on the class path can come from projects that are not included in the project references\r", "-\t\tif (binaryResources != null) {\r", "-\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "-\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "-\t\t\t\tIProject p = (IProject) keyTable[i];\r", "-\t\t\t\tif (p != null && p != currentProject && !projects.contains(p))\r", "-\t\t\t\t\tprojects.add(p);\r", "+\t\tif (includeBinaryPrerequisites){\r", "+\t\t\t// some binary resources on the class path can come from projects that are not included in the project references\r", "+\t\t\tif (binaryResources != null) {\r", "+\t\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "+\t\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "+\t\t\t\t\tIProject p = (IProject) keyTable[i];\r", "+\t\t\t\t\tif (p != null && p != currentProject && !projects.contains(p))\r", "+\t\t\t\t\t\tprojects.add(p);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c5dc51241b64bc8d26dcaa4abbf91f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0a2a15035b645ba08167c116bcd8da21a65ff803", "commitAfterChange": "d1d9c4b9d41b5dee6585f38ec44b96973779f261", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private void formatLeftCurlyBrace(final int line, final String bracePosition)", "signatureAfterChange": "  \tprivate void formatLeftCurlyBrace(final int line, final String bracePosition, boolean printComment)", "diff": ["-    private void formatLeftCurlyBrace(final int line, final String bracePosition) {", "-        /*", "-         * deal with (quite unexpected) comments right before lcurly", "-         */", "-        this.scribe.printComment();", "-        if (DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP.equals(bracePosition)", "-                && (this.scribe.line > line || this.scribe.column >= this.preferences.page_width))", "-        {", "-            this.scribe.printNewLine();", "-        }", "-    }", "+\tprivate void formatLeftCurlyBrace(final int line, final String bracePosition, boolean printComment) {", "+\t\t", "+\t\tif (printComment) {", "+\t        this.scribe.printComment();", "+\t\t}", "+", "+\t\t/*", "+\t\t * deal with (quite unexpected) comments right before lcurly", "+\t\t */", "+\t\tif (DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP.equals(bracePosition)", "+\t\t\t\t&& (this.scribe.line > line || this.scribe.column >= this.preferences.page_width))", "+\t\t{", "+\t\t\tthis.scribe.printNewLine();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9731a283aeadc4ef7965a532728997fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding)", "signatureAfterChange": " \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding) {", "+\tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField) {", "-\t\tthis.classLiteralSyntheticField =", "-\t\t\tsourceType.addSyntheticField(sourceType, scope);", "+\t\tif (needClassLiteralField) {", "+\t\t\tthis.classLiteralSyntheticField =", "+\t\t\t\tsourceType.addSyntheticField(sourceType, scope);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32d7e49f0a00645a94c6f2b05849d56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleNameReference.java", "commitBeforeChange": "04969acd296957373e2c11d1fa6749ece6b3b165", "commitAfterChange": "a6b612a10e662a9a3068db57f25ae43c85426c25", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \tpublic void resolve(BlockScope scope, boolean warn)", "diff": ["+\t */", "+\tpublic void resolve(BlockScope scope, boolean warn) {", "-\t\ttry {", "-\t\t\tMethodScope methScope = (MethodScope) scope;", "-\t\t\tscope.problemReporter().javadocInvalidParamName(this, methScope.referenceMethod().modifiers);", "-\t\t}", "-\t\tcatch (Exception e) {", "-\t\t\tscope.problemReporter().javadocInvalidParamName(this, -1);", "+\t\tif (warn) {", "+\t\t\ttry {", "+\t\t\t\tMethodScope methScope = (MethodScope) scope;", "+\t\t\t\tscope.problemReporter().javadocInvalidParamName(this, methScope.referenceMethod().modifiers);", "+\t\t\t}", "+\t\t\tcatch (Exception e) {", "+\t\t\t\tscope.problemReporter().javadocInvalidParamName(this, -1);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb53f546018495f5fed054304dfbb60b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tprotected void assertSourceEquals(String message, String expected, String actual)", "signatureAfterChange": " \tprotected void assertSourceEquals(String message, String expected, String actual, boolean convert)", "diff": ["+\t */", "+\tprotected void assertSourceEquals(String message, String expected, String actual, boolean convert) {", "-\t\tactual = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(actual);", "+\t\tif (convert) {", "+\t\t\tactual = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(actual);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffee1a8da7a73eeed29e8d041addcf76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "eb5fe9a9319b819d64960c44d91e2995208510e4", "commitAfterChange": "f13fdcb2784e02f7feccade63189561cf467d9fb", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": "  \tpublic void removePerProjectInfo(JavaProject javaProject)", "signatureAfterChange": "  \tpublic void removePerProjectInfo(JavaProject javaProject, boolean removeExtJarInfo)", "diff": ["-\tpublic void removePerProjectInfo(JavaProject javaProject) {", "+\tpublic void removePerProjectInfo(JavaProject javaProject, boolean removeExtJarInfo) {", "-\t\t\t\tinfo.forgetExternalTimestampsAndIndexes();", "+\t\t\t\tif (removeExtJarInfo) {", "+\t\t\t\t\tinfo.forgetExternalTimestampsAndIndexes();", "+\t\t\t\t}"]}], "num": 12524}