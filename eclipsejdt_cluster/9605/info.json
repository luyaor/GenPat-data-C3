{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4303a1e0c243c0ed833f1ab89c90c52d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10335ed77ca97fa41ed468cd16dd9fce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void acceptInterface( \t\tchar[] packageName, \t\tchar[] interfaceName, \t\tint modifiers)", "signatureAfterChange": " \tpublic void acceptInterface( \t\tchar[] packageName, \t\tchar[] interfaceName, \t\tint modifiers)", "diff": ["-\t\tif (resolvingImports) {", "+\t\tif (this.resolvingImports) {", "-\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, fullyQualifiedName);", "+\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "-\t\t\t\t\tif (unitScope != null && unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "+\t\t\t\t\tif (this.unitScope != null && this.unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "-\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, interfaceName);", "+\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, interfaceName);", "-\t\tnoProposal = false;", "-\t\trequestor.acceptInterface(", "+\t\tthis.noProposal = false;", "+\t\tthis.requestor.acceptInterface(", "-\t\t\tstartPosition - offset,", "-\t\t\tendPosition - offset,", "+\t\t\tthis.startPosition - this.offset,", "+\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ee1508c13e26526c31f716d3965388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers)", "signatureAfterChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers)", "diff": ["-\t\tif (resolvingImports) {", "+\t\tif (this.resolvingImports) {", "-\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, fullyQualifiedName);", "+\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "-\t\t\t\t\tif (unitScope != null && unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "+\t\t\t\t\tif (this.unitScope != null && this.unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "-\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, className);", "+\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, className);", "-\t\tnoProposal = false;", "-\t\trequestor.acceptClass(", "+\t\tthis.noProposal = false;", "+\t\tthis.requestor.acceptClass(", "-\t\t\tstartPosition - offset,", "-\t\t\tendPosition - offset,", "+\t\t\tthis.startPosition - this.offset,", "+\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d05859d382cb9c8f28faf20ae1a682f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void acceptType(char[] packageName, char[] typeName)", "signatureAfterChange": " \tpublic void acceptType(char[] packageName, char[] typeName)", "diff": ["-\t\tif (resolvingImports) {", "+\t\tif (this.resolvingImports) {", "-\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, fullyQualifiedName);", "+\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "-\t\t\t\t\tif (unitScope != null && unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "+\t\t\t\t\tif (this.unitScope != null && this.unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "-\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, typeName);", "+\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, typeName);", "-\t\tnoProposal = false;", "-\t\trequestor.acceptType(", "+\t\tthis.noProposal = false;", "+\t\tthis.requestor.acceptType(", "-\t\t\tstartPosition - offset,", "-\t\t\tendPosition - offset,", "+\t\t\tthis.startPosition - this.offset,", "+\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f21ebe968c2ccc1dde3ebf89882eb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5724e322d7228d632b7007dc32146a502dd475bf", "commitAfterChange": "852dcd69f57d2df7edd28d51c1cac65820b4519c", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": " public ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, CompilationUnitDeclaration unit)", "signatureAfterChange": " public ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, CompilationUnitDeclaration unit)", "diff": ["-\tscanner.setSource(source);", "-\tscanner.resetTo(offset, offset + length - 1);", "+\tthis.scanner.setSource(source);", "+\tthis.scanner.resetTo(offset, offset + length - 1);", "-\tnestedType = 1;", "+\tthis.nestedType = 1;", "-\treferenceContext = unit;", "-\tcompilationUnit = unit;", "+\tthis.referenceContext = unit;", "+\tthis.compilationUnit = unit;", "-\t\tlastAct = ERROR_ACTION;", "+\t\tthis.lastAct = ERROR_ACTION;", "-\tif (lastAct == ERROR_ACTION) {", "+\tif (this.lastAct == ERROR_ACTION) {", "-\tif ((astLength = astLengthStack[astLengthPtr--]) != 0) {", "+\tif ((astLength = this.astLengthStack[this.astLengthPtr--]) != 0) {", "-\t\tastPtr -= astLength;", "-\t\tSystem.arraycopy(astStack, astPtr + 1, result, 0, astLength);", "+\t\tthis.astPtr -= astLength;", "+\t\tSystem.arraycopy(this.astStack, this.astPtr + 1, result, 0, astLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0dc58ab0cef16b95b2e263dce7bc3f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\tif (source == null", "-\t\t\t\t|| source.length <= endPosition", "-\t\t\t\t|| source[endPosition] != ')')", "+\t\t\tif (this.source == null", "+\t\t\t\t|| this.source.length <= this.endPosition", "+\t\t\t\t|| this.source[this.endPosition] != ')')", "-\t\t\tnoProposal = false;", "-\t\t\trequestor.acceptAnonymousType(", "+\t\t\tthis.noProposal = false;", "+\t\t\tthis.requestor.acceptAnonymousType(", "-\t\t\t\tendPosition - offset,", "-\t\t\t\tendPosition - offset,", "+\t\t\t\tthis.endPosition - this.offset,", "+\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8d09f7fd32cb8df7ea1ba77c03d6a5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-", "-\t\tif ((bits & IsReachable) == 0) {", "+\t\tif ((this.bits & ASTNode.IsReachable) == 0) {", "-\t\t\tif (targetType.erasure().id == T_JavaLangEnum || targetType.isEnum()) {", "+\t\t\tif (targetType.erasure().id == TypeIds.T_JavaLangEnum || targetType.isEnum()) {", "-\t\t\t\t\t(this.bits & ASTNode.DiscardEnclosingInstance) != 0 ? null : qualification,", "+\t\t\t\t\t(this.bits & ASTNode.DiscardEnclosingInstance) != 0 ? null : this.qualification,", "-\t\t\tgenerateArguments(binding, arguments, currentScope, codeStream);\t\t\t", "+\t\t\tgenerateArguments(this.binding, this.arguments, currentScope, codeStream);\t\t\t", "-\t\t\tif (syntheticAccessor != null) {", "+\t\t\tif (this.syntheticAccessor != null) {", "-\t\t\t\t\tmax = syntheticAccessor.parameters.length - this.codegenBinding.parameters.length;", "+\t\t\t\t\tmax = this.syntheticAccessor.parameters.length - this.codegenBinding.parameters.length;", "-\t\t\t\tcodeStream.invokespecial(syntheticAccessor);", "+\t\t\t\tcodeStream.invokespecial(this.syntheticAccessor);"]}], "num": 9605}