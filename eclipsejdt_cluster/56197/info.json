{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cedeaee78c464429105210a532da0ed2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e8941bd4be9171c880023753eef1383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "ba388ee53170dee91fb2402f317f8b352855c459", "commitAfterChange": "d043ef6776b1e3fad1bb618496ee2a48a9410e4b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t\t\t\t\tpublic boolean visit(ReturnStatement returnStatement, BlockScope blockScope)", "signatureAfterChange": " \t \tprotected FunctionalExpression original()", "diff": ["+\t", "+\tprotected FunctionalExpression original() {", "+\t\treturn this.original;", "-\t\t\t\t\t\tint returnExpressionsCount = 0;", "-\t\t\t\t\t\tpublic boolean visit(ReturnStatement returnStatement, BlockScope blockScope) {", "-\t\t\t\t\t\t\tExpression expression = returnStatement.expression;", "-\t\t\t\t\t\t\tif (expression != null && !expression.isAssignmentCompatible(returnType, blockScope))", "-\t\t\t\t\t\t\t\tthrow new IncongruentLambdaException();", "-\t\t\t\t\t\t\tthis.returnExpressions[this.returnExpressionsCount++] = expression;", "-\t\t\t\t\t\t\treturn false; // should not analyze any nested lambda returns", "-\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e9822e9a68b0fdb10f47479c2cddf73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "96cbe57b16442df110d3b0ecde11c12b456820b8", "commitAfterChange": "16a26bc49f78acb9a7d0c10a9d6bedce29952111", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r \r \tpublic CompilationUnitDeclaration dietParse(final char[] source)", "signatureAfterChange": "\r \r \tpublic CompilationUnitDeclaration dietParse(final char[] source)", "diff": ["+\t\t\tpublic char[][] getPackageName() {\r", "+\t\t\t\treturn null;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824896bf7e8c433bc1e838d6fe839927", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "1b07739f9c8457dbcb0b9d2fe79d964b9c57b61f", "commitAfterChange": "b04265304d1dc524aca72cb541df0fdc355d218a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void enterType(TypeInfo typeInfo)", "signatureAfterChange": " public void enterType(TypeInfo typeInfo)", "diff": ["-\tSourceTypeElementInfo info = new SourceTypeElementInfo();", "+\tSourceTypeElementInfo info = ", "+\t\ttypeInfo.anonymousMember ? ", "+\t\t\tnew SourceTypeElementInfo() {", "+\t\t\t\tpublic boolean isAnonymousMember() {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t} : ", "+\t\tnew SourceTypeElementInfo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1ba2911d8ca0add1a7cbd5634c09de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DefaultErrorHandlingPolicies.java", "commitBeforeChange": "11ac720cf12c89391a32ed5e56750070174f7f3f", "commitAfterChange": "c35f48a470f9475e0b73c6c14c2a26ca2378ab58", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": " public static IErrorHandlingPolicy proceedWithAllProblems()", "signatureAfterChange": " public static IErrorHandlingPolicy proceedWithAllProblems()", "diff": ["+\t\tpublic boolean ignoreAllErrors() {", "+\t\t\treturn false;", "+\t\t}", "+\t};", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9fa4848d69072c25d2e6d688adf136b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ReconcileEnv.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t\tpublic void write(int b) throws IOException", "signatureAfterChange": " \tICompilationUnit getCompilationUnit()", "diff": ["-\t\tprivate static final OutputStream NO_OP_STREAM = new OutputStream(){", "-\t\t\tpublic void write(int b) throws IOException {", "-\t\t\t\treturn;", "-\t\t\t}", "+\t/* package scope */", "+\tICompilationUnit getCompilationUnit() {", "+\t\treturn _workingCopy;", "+\t}"]}], "num": 56197}