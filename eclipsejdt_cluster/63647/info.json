{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6667445b50ae48ad36c5a0b4f7106ef5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e7de807f4b25eed9c7b77ee0ad5757", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "d3432881419f057ba041557b162e4f05f5019457", "commitAfterChange": "c978cd9a4b8a047123bdee75ac1f721797bdf05a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void setUp() throws Exception", "signatureAfterChange": " public void setUp() throws Exception", "diff": ["-\tthis.preferences.join_lines_in_comments = JOIN_LINES;", "-\tthis.preferences.join_wrapped_lines = JOIN_LINES;", "+\tif (JOIN_LINES != null) {", "+\t\tif (!JOIN_LINES.equals(\"only_comments\")) {", "+\t\t\tthis.preferences.join_lines_in_comments = false;", "+\t\t}", "+\t\tif (!JOIN_LINES.equals(\"only_code\")) {", "+\t\t\tthis.preferences.join_wrapped_lines = false;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd92634f2773b013ed16837c7021cd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \t \tpublic CompilationUnit getAstCompilationUnit(final IFile file)", "signatureAfterChange": " \tpublic CompilationUnit getAstCompilationUnit(final IFile file)", "diff": ["+     */", "-\t\tfor( int i=0, len=_files.length; i<len; i++ ){", "-\t\t\tif( _files[i] == file )", "-\t\t\t\treturn _astUnits[i];", "-\t\t}", "-\t\treturn null;", "+\t\tif( file == null ) ", "+    \t\treturn null;", "+    \telse if( file.equals(_file) )", "+    \t\treturn _astRoot;", "+    \telse if( _batchMode ){", "+    \t\tfor( int i=0, len=_files.length; i<len; i++ ){", "+        \t\tif( file.equals(_files[i]) )", "+        \t\t\treturn _astUnits[i];", "+        \t}", "+    \t}", "+    \treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943882e47cc0ec21e36824478521dac2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c374466b639cefc117e60812e1d9f16701d104ca", "commitAfterChange": "788c169eda00b669155eb0f9164eec17e1ef661d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tprivate void findExceptionFromTryStatement( \t\t\tchar[] typeName, \t\t\tReferenceBinding exceptionType, \t\t\tReferenceBinding receiverType, \t\t\tSourceTypeBinding invocationType,  \t\t\tBlockScope scope,  \t\t\tObjectVector typesFound, \t\t\tboolean searchSuperClasses)", "signatureAfterChange": " \t \tprivate void findExceptionFromTryStatement( \t\t\tchar[] typeName, \t\t\tReferenceBinding exceptionType, \t\t\tReferenceBinding receiverType, \t\t\tSourceTypeBinding invocationType,  \t\t\tBlockScope scope,  \t\t\tObjectVector typesFound, \t\t\tboolean searchSuperClasses)", "diff": ["-\t\t\tif (invocationType != null && !exceptionType.canBeSeenBy(receiverType, invocationType)) {", "-\t\t\t\treturn;", "-\t\t\t} else if(invocationType == null && !exceptionType.canBeSeenBy(this.unitScope.fPackage)) {", "+\t\t\tif (invocationType != null) {", "+\t\t\t\tif (receiverType != null) {", "+\t\t\t\t\tif (!exceptionType.canBeSeenBy(receiverType, invocationType)) return;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (!exceptionType.canBeSeenBy(exceptionType, invocationType)) return;", "+\t\t\t\t}", "+\t\t\t} else if(!exceptionType.canBeSeenBy(this.unitScope.fPackage)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a823942702b95642c2a7df3a182d195b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "d3432881419f057ba041557b162e4f05f5019457", "commitAfterChange": "c978cd9a4b8a047123bdee75ac1f721797bdf05a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private static void initProfiles()", "signatureAfterChange": "  private static void initProfiles()", "diff": ["+\tif (JOIN_LINES != null) {", "+\t \tif (!JOIN_LINES.equals(\"never\") &&", "+\t \t\t!JOIN_LINES.equals(\"only_comments\") &&", "+\t \t\t!JOIN_LINES.equals(\"only_code\")) {", "+\t \t\tJOIN_LINES = null;", "+\t \t}", "+\t}"]}], "num": 63647}