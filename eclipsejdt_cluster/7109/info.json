{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87c20edc6873fdbbc94d1024e52a905b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb3ddfe47a6c3310707f091862fb2bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "1348bf3232f6ef4a567f23710b6f05d6366e90ff", "commitAfterChange": "84eba2ceb4c4828ad681b6374034160ffda08eef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic SelectionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tISelectionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic SelectionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tISelectionRequestor requestor,\r \t\tMap settings)", "diff": ["+\r", "+\t\tsuper(settings);\r", "+\r", "-\t\tCompilerOptions options = new CompilerOptions(settings);\r", "-\t\t\t\toptions,\r", "+\t\t\t\tthis.compilerOptions,\r", "-\t\tthis.parser = new SelectionParser(problemReporter, options.assertMode);\r", "+\t\tthis.parser = new SelectionParser(problemReporter, this.compilerOptions.assertMode);\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\t\t\tnew LookupEnvironment(this, this.compilerOptions, problemReporter, nameEnvironment);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9d24782e25933ef5b71e0a7df5fba79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void testMethodWithError13() throws CoreException", "signatureAfterChange": " public void testMethodWithError13() throws CoreException", "diff": ["-\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "+\tthis.problemRequestor =  null;", "-\t\tworkingCopy1 = getCompilationUnit(\"/Reconciler15/src/test/X.java\").getWorkingCopy(owner, null, null);", "+\t\tworkingCopy1 = getCompilationUnit(\"/Reconciler15/src/test/X.java\").getWorkingCopy(this.wcOwner, null);", "-\t\t", "+", "-\t\tthis.workingCopy = getCompilationUnit(\"Reconciler15/src/test/Y.java\").getWorkingCopy(owner, this.problemRequestor, null);", "+\t\tthis.workingCopy = getCompilationUnit(\"Reconciler15/src/test/Y.java\").getWorkingCopy(this.wcOwner, null);", "-\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, owner, null);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, this.wcOwner, null);", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in /Reconciler15/src/test/Y.java (at line 5)\\n\" + ", "-\t\t\"\tsomeX.bar(null);\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The method bar(Object[]) belongs to the raw type X. References to generic type X<T,U> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" +", "+\t\t\"1. WARNING in /Reconciler15/src/test/Y.java (at line 5)\\n\" +", "+\t\t\"\tsomeX.bar(null);\\n\" +", "+\t\t\"\t^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"Type safety: The method bar(Object[]) belongs to the raw type X. References to generic type X<T,U> should be parameterized\\n\" +"]}], "num": 7109}