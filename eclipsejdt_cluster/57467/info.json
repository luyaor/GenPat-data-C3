{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "725f19058f3ef2bd433fec275e954dee", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "639fe52c06e7066226ff8c968d812b07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object insertNewLineAtEndOfFileOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AT_END_OF_FILE);", "-\t\tif (insertNewLineAtEndOfFileOption != null) {", "-\t\t\tthis.insert_new_line_at_end_of_file = JavaCore.INSERT.equals(insertNewLineAtEndOfFileOption);", "+\t\tfinal Object insertNewLineAtEndOfFileIfMissingOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_AT_END_OF_FILE_IF_MISSING);", "+\t\tif (insertNewLineAtEndOfFileIfMissingOption != null) {", "+\t\t\tthis.insert_new_line_at_end_of_file_if_missing = JavaCore.INSERT.equals(insertNewLineAtEndOfFileIfMissingOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2a7fc03e53bfda3dfcf497db26be86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "616e0cc4b1bc013d67f08c19f7ad98694e8af3c9", "commitAfterChange": "fe30c0f08ddab5b80fae1b7726ce1fae05bb7c1e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["+\t\tfinal Object insertSpaceAfterEllipsisOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ELLIPSIS);", "+\t\tif (insertSpaceAfterEllipsisOption != null) {", "+\t\t\tthis.insert_space_after_ellipsis = JavaCore.INSERT.equals(insertSpaceAfterEllipsisOption);", "+\t\t}", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeEllipsisOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ELLIPSIS);", "+\t\tif (insertSpaceBeforeEllipsisOption != null) {", "+\t\t\tthis.insert_space_before_ellipsis = JavaCore.INSERT.equals(insertSpaceBeforeEllipsisOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38a5d9d4a39eaf31a613c23ae314470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "28020d0b0ceb0e665c1071bfd968796eb9e2e394", "commitAfterChange": "def990b8509828ed437909a92c80eeb89428931a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object insertSpaceBeforeExpressionInReturnOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_EXPRESSION_IN_RETURN);", "-\t\tif (insertSpaceBeforeExpressionInReturnOption != null) {", "-\t\t\tthis.insert_space_before_expression_in_return = JavaCore.INSERT.equals(insertSpaceBeforeExpressionInReturnOption);", "-\t\t}", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeParenthesizedExpressionInReturnOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTESIZED_EXPRESSION_IN_RETURN);", "+\t\tif (insertSpaceBeforeParenthesizedExpressionInReturnOption != null) {", "+\t\t\tthis.insert_space_before_parenthesized_expression_in_return = JavaCore.INSERT.equals(insertSpaceBeforeParenthesizedExpressionInReturnOption);"]}], "num": 57467}