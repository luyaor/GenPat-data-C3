{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe5448c5a30b7e397fadc4f062d7cc98", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4db3e2b681a0ea8b37373d95bcd594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "8c76b4014ea5428c07ebba6a1cc324074d6e35bd", "commitAfterChange": "ff2a27470c07ef3625cccb4ee1e5803e3112da43", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tboolean mustResolve, \t\t\t\t\t\t\t\t\tTypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tboolean mustResolve, \t\t\t\t\t\t\t\t\tTypeBinding type)", "diff": ["+\t\t\t\tif (!this.isCaseSensitive) patternTypeArgument = CharOperation.toLowerCase(patternTypeArgument);", "-\t\t\t\t\t\tif (CharOperation.equals(patternTypeArgument, boundBinding.shortReadableName(), this.isCaseSensitive) ||", "-\t\t\t\t\t\t\tCharOperation.equals(patternTypeArgument, boundBinding.readableName(), this.isCaseSensitive)) {", "+\t\t\t\t\t\tif (CharOperation.match(patternTypeArgument, boundBinding.shortReadableName(), this.isCaseSensitive) ||", "+\t\t\t\t\t\t\tCharOperation.match(patternTypeArgument, boundBinding.readableName(), this.isCaseSensitive)) {", "-\t\t\t\tif (CharOperation.equals(patternTypeArgument, argTypeBinding.shortReadableName(), this.isCaseSensitive) ||", "-\t\t\t\t\tCharOperation.equals(patternTypeArgument, argTypeBinding.readableName(), this.isCaseSensitive)) {", "+\t\t\t\tif (CharOperation.match(patternTypeArgument, argTypeBinding.shortReadableName(), this.isCaseSensitive) ||", "+\t\t\t\t\tCharOperation.match(patternTypeArgument, argTypeBinding.readableName(), this.isCaseSensitive)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5157c8745ea2e904f87a5827a2d60ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "diff": ["-\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\tcontinue nextTypeArgument;", "-\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t\tcontinue nextTypeArgument;", "+\t\t\t\t\t\t} else if (boundBinding.isLocalType() || boundBinding.isMemberType()) {", "+\t\t\t\t\t\t\t// for local or member type, verify also source name (bug 81084)", "+\t\t\t\t\t\t\tif (CharOperation.match(patternTypeArgument, boundBinding.sourceName(), this.isCaseSensitive))", "+\t\t\t\t\t\t\t\tcontinue nextTypeArgument;", "-\t\t\t\t\tcontinue;", "+\t\t\t\t\tcontinue nextTypeArgument;", "+\t\t\t\t} else if (argTypeBinding.isLocalType() || argTypeBinding.isMemberType()) {", "+\t\t\t\t\t// for local or member type, verify also source name (bug 81084)", "+\t\t\t\t\tif (CharOperation.match(patternTypeArgument, argTypeBinding.sourceName(), this.isCaseSensitive))", "+\t\t\t\t\t\tcontinue nextTypeArgument;", "+\t\t\t\t\t\t} else if (refBinding.isLocalType() || refBinding.isMemberType()) {", "+\t\t\t\t\t\t\t// for local or member type, verify also source name (bug 81084)", "+\t\t\t\t\t\t\tif (CharOperation.match(patternTypeArgument, refBinding.sourceName(), this.isCaseSensitive))", "+\t\t\t\t\t\t\t\tcontinue nextTypeArgument;"]}], "num": 59003}