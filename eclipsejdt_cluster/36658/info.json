{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04da7c927cd3be27a0438dee0d8158e8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36106bc63f050ce589c2a21265eb61fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\t\tReferenceBinding superclass = binding.superclass;", "-\t\t\tif (superclass.enclosingType() != null && !superclass.isStatic()) {", "-\t\t\t\tif (!binding.superclass.isLocalType()", "-\t\t\t\t\t\t|| ((NestedTypeBinding)binding.superclass).getSyntheticField(superclass.enclosingType(), true) != null){", "+\t\t\tReferenceBinding superclassBinding = binding.superclass;", "+\t\t\tif (superclassBinding.enclosingType() != null && !superclassBinding.isStatic()) {", "+\t\t\t\tif (!superclassBinding.isLocalType()", "+\t\t\t\t\t\t|| ((NestedTypeBinding)superclassBinding).getSyntheticField(superclassBinding.enclosingType(), true) != null){", "-\t\t\t\t\tnestedType.addSyntheticArgument(superclass.enclosingType());\t", "+\t\t\t\t\tnestedType.addSyntheticArgument(superclassBinding.enclosingType());\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f534b53254994e4988640d65fd32999c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a05f72a9389097f85d037088e479172e5f54b397", "commitAfterChange": "264e20b3b391e1bf2368fe3b934918be326e6ec2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif (this.binding.declaringClass.superclass().isMemberType() && !this.binding.declaringClass.superclass().isStatic()) {", "-\t\t\t\t// creating an anonymous type of a non-static member type without an enclosing instance of parent type", "-\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag(this.binding.declaringClass.superclass().enclosingType());", "+\t\t\tif (this.binding != null && this.binding.declaringClass != null) {", "+\t\t\t\tReferenceBinding superclass = this.binding.declaringClass.superclass();", "+\t\t\t\tif (superclass != null && superclass.isMemberType() && !superclass.isStatic()) {", "+\t\t\t\t\t// creating an anonymous type of a non-static member type without an enclosing instance of parent type", "+\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag(superclass.enclosingType());", "+\t\t\t\t}", "+\t\t\t"]}], "num": 36658}