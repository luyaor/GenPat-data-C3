{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2477d71c221620d038e42b09a1fc514", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ae58c48edf6351c1d05002a11eb06c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "991fd6e4b6634483ff414608784017adef86e93b", "commitAfterChange": "88f4789ab87b5741bd84f761926c87f3851c7700", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult, HashSetOfCharArrayArray typeNames) throws JavaModelException", "diff": ["-\tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException {", "+\tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult, HashSetOfCharArrayArray typeNames) throws JavaModelException {", "-\t\t\ttypeDeclaration.superclass = createTypeReference(type.getSuperclassName().toCharArray());", "+\t\t\ttypeDeclaration.superclass = createTypeReference(type.getSuperclassName().toCharArray(), typeNames);", "-\t\t\ttypeDeclaration.superInterfaces[i] = createTypeReference(interfaceNames[i].toCharArray());", "+\t\t\ttypeDeclaration.superInterfaces[i] = createTypeReference(interfaceNames[i].toCharArray(), typeNames);", "-\t\t\t\ttypeDeclaration.memberTypes[i] = convert(memberTypes[i], null, null, compilationResult);", "+\t\t\t\ttypeDeclaration.memberTypes[i] = convert(memberTypes[i], null, null, compilationResult, typeNames);", "-\t\t\ttypeDeclaration.fields[i] = convert(fields[i], type);", "+\t\t\ttypeDeclaration.fields[i] = convert(fields[i], type, typeNames);", "-\t\t\tAbstractMethodDeclaration method =convert(methods[i], type, compilationResult);", "+\t\t\tAbstractMethodDeclaration method =convert(methods[i], type, compilationResult, typeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d46afdbb00b74c7c0b6724bd97fa2bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/TypeConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,MemberTypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,MemberTypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException {", "+\tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException {", "-\t\tTypeDeclaration typeDeclaration;", "-\t\tif (type.getDeclaringType() == null) {", "-\t\t\ttypeDeclaration = new TypeDeclaration(compilationResult);", "-\t\t} else {", "-\t\t\ttypeDeclaration = new MemberTypeDeclaration(compilationResult);", "+\t\tTypeDeclaration typeDeclaration = new TypeDeclaration(compilationResult);", "+", "+\t\tif (type.getDeclaringType() != null) {", "+\t\t\ttypeDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "-\t\ttypeDeclaration.memberTypes = new MemberTypeDeclaration[memberTypeCount];", "+\t\ttypeDeclaration.memberTypes = new TypeDeclaration[memberTypeCount];", "-\t\t\t\ttypeDeclaration.memberTypes[i] =", "-\t\t\t\t\t(MemberTypeDeclaration) convert(memberTypes[i], null, null, compilationResult);", "+\t\t\t\ttypeDeclaration.memberTypes[i] = convert(memberTypes[i], null, null, compilationResult);"]}], "num": 71023}