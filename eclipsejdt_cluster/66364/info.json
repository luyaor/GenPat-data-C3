{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbf0bd5cb1fe97232fc20edd4410268f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2adbb7c72e814f2cae1fb0d6c23d24c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\tswitch (pattern.classOrInterface) {", "+\tswitch (pattern.typeSuffix) {", "-\t\t\treturn !type.isInterface();", "+\t\t\treturn type.getKind() == IGenericType.CLASS;", "-\t\t\treturn type.isInterface();", "+\t\t\treturn type.getKind() == IGenericType.INTERFACE;", "+\t\tcase ENUM_SUFFIX:", "+\t\t\treturn type.getKind() == IGenericType.ENUM;", "+\t\tcase ANNOTATION_TYPE_SUFFIX:", "+\t\t\treturn type.getKind() == IGenericType.ANNOTATION_TYPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50930938f6692c5c589ab3477f2108cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "982919179fe30a93d64a2d590bdb7ee6c337517e", "commitAfterChange": "2e116c3e018660ef5b20120d1f6bee149cdcd47d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal char[] typeName, \t\tfinal int matchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tif (type.isClass()) {", "-\t\t\t\t\t\t\t\tkind = IGenericType.CLASS_DECL;", "-\t\t\t\t\t\t\t} else if (type.isInterface()) {", "-\t\t\t\t\t\t\t\tkind = IGenericType.INTERFACE_DECL;", "-\t\t\t\t\t\t\t} else if (type.isEnum()) {", "+\t\t\t\t\t\t\tif (type.isEnum()) {", "-\t\t\t\t\t\t\t} else /*if (type.isAnnotation())*/ {", "+\t\t\t\t\t\t\t} else if (type.isAnnotation()) {", "+\t\t\t\t\t\t\t}\telse if (type.isClass()) {", "+\t\t\t\t\t\t\t\tkind = IGenericType.CLASS_DECL;", "+\t\t\t\t\t\t\t} else /*if (type.isInterface())*/ {", "+\t\t\t\t\t\t\t\tkind = IGenericType.INTERFACE_DECL;"]}], "num": 66364}