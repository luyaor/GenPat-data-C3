{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "883dc1e8dc5752e7939594c35ed647cb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062fe47e9608d9688677696e8c087e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b2b2f79127ceb81a70f0a7e9c4a14a4c97a6bb69", "commitAfterChange": "68d139bf0c56c6c993907701c5e076e9d3ee773d", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\tif (currentArg.equals(\"-1.5\")) { //$NON-NLS-1$", "+\t\t\tif (currentArg.equals(\"-1.5\") || currentArg.equals(\"-5\") || currentArg.equals(\"-5.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\")) { //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "-\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\")) { //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t} else if (currentArg.equals(\"1.5\") || currentArg.equals(\"5\") || currentArg.equals(\"5.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "184597d3b43dfe72e85891e8bf4a922c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bc08a214a7dd82d4fa33bb61277cfaad2825deac", "commitAfterChange": "2208491f1e360e4237b8017b36c8fa0890474137", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["-\t\t\t\t} else if (currentArg.equals(\"jsr14\")) { //$NON-NLS-1$", "+\t\t\t\t} else if (currentArg.equals(\"1.8\") || currentArg.equals(\"8\") || currentArg.equals(\"8.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_8);", "+\t\t\t\t}", "+\t\t\t\telse if (currentArg.equals(\"jsr14\")) { //$NON-NLS-1$", "+\t\t\t\t} else if (currentArg.equals(\"1.8\") || currentArg.equals(\"8\") || currentArg.equals(\"8.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8bf08027c77233131c056f56873a94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "4f90f7005696a0951a49d2ebe0ca59ea39a6f81e", "commitAfterChange": "c6233ae2c577c6f0263643cd88cdf0be03329c72", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\tif (currentArg.equals(\"-1.7\") || currentArg.equals(\"-7\") || currentArg.equals(\"-7.0\")) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\tif (didSpecifyCompliance) {", "+\t\t\t\t\t\tthrow new InvalidInputException(", "+\t\t\t\t\t\t\tthis.bind(\"configure.duplicateCompliance\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tdidSpecifyCompliance = true;", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_7);", "+\t\t\t\t\tmode = DEFAULT;", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}", "+\t\t\t\t} else if (currentArg.equals(\"1.7\") || currentArg.equals(\"7\") || currentArg.equals(\"7.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_7);", "+\t\t\t\t} else if (currentArg.equals(\"1.7\") || currentArg.equals(\"7\") || currentArg.equals(\"7.0\")) { //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_7);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab176a90c801661d0c159495bdfa40e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ba64706f201921fc94a5e5ed779b077316fb0266", "commitAfterChange": "b574ad64a0e10ca20ad6529e036d6695d43be062", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\r", "+\r", "+\tboolean didSpecifyCompliance = false;\r", "+\t\t\r", "-\t\tif (currentArg.equals(\"-jck\")) { //$NON-NLS-1$\r", "-\t\t\tmode = InsideJCK;\r", "+\t\tif (currentArg.equals(\"-1.3\")) { //$NON-NLS-1$\r", "+\t\t\tif (didSpecifyCompliance) {\r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.duplicateCompliance\",currentArg)); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\tdidSpecifyCompliance = true;\r", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\tmode = Default;\r", "+\t\t\tcontinue;\r", "+\t\t}\r", "+\t\tif (currentArg.equals(\"-1.4\")) { //$NON-NLS-1$\r", "+\t\t\tif (didSpecifyCompliance) {\r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.duplicateCompliance\",currentArg)); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t\tdidSpecifyCompliance = true;\r", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\tmode = Default;\r", "-\t\t\t}\r", "-\t\t\tmode = Default;\r", "-\t\t\tcontinue;\r", "-\t\t}\r", "-\t\tif (mode == InsideJCK){\r", "-\t\t\tif (currentArg.equals(\"1.3\")) { //$NON-NLS-1$\r", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "-\t\t\t} else if (currentArg.equals(\"1.4\")) { //$NON-NLS-1$\r", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);\r", "-\t\t\t} else {\r", "-\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.jck\",currentArg)); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb18f96855d6e534fd8cdb272b8ccdcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "fe12f3c39b031dd3433fa9366566a3b5b70820e2", "commitAfterChange": "416bf44f74a0795b6b6bec20a356ce5017d1b9d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t\t\t} else if (this.target.equals(CompilerOptions.VERSION_1_5)) {", "+\t\t\t} else if (this.target.equals(CompilerOptions.VERSION_1_5)", "+\t\t\t\t\t|| this.target.equals(\"5.0\") //$NON-NLS-1$", "+\t\t\t\t\t|| this.target.equals(\"5\")) { //$NON-NLS-1$", "+\t\t\t\tthis.target = CompilerOptions.VERSION_1_5;", "-\t\t\t} else if (source.equals(CompilerOptions.VERSION_1_5)) {", "+\t\t\t} else if (source.equals(CompilerOptions.VERSION_1_5)", "+\t\t\t\t\t|| source.equals(\"5.0\") //$NON-NLS-1$", "+\t\t\t\t\t|| source.equals(\"5\")) { //$NON-NLS-1$", "+\t\t\t\tsource = CompilerOptions.VERSION_1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f19a07cd4116e046eb4e2fddd4f4c062", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void configure(String[] argv)", "signatureAfterChange": " public void configure(String[] argv)", "diff": ["-\t\t\t\tif (currentArg.equals(\"-proceedOnError\")) { //$NON-NLS-1$", "+\t\t\t\tif (currentArg.startsWith(\"-proceedOnError\")) { //$NON-NLS-1$", "+\t\t\t\t\tint length = currentArg.length();", "+\t\t\t\t\tif (length > 15) {", "+\t\t\t\t\t\tif (currentArg.equals(\"-proceedOnError:Fatal\")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_FatalOptionalError, CompilerOptions.ENABLED);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\t\t\t\tthis.bind(\"configure.invalidWarningConfiguration\", currentArg)); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.options.put(CompilerOptions.OPTION_FatalOptionalError, CompilerOptions.DISABLED);", "+\t\t\t\t\t}"]}], "num": 61823}