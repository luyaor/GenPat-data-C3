{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e53d0980c5a2bffba1510da2af59b32f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e37b91de1106cfe32d57c6488600b33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "3d6e745b11a60b30c093ec69f29acab507efa6f4", "commitAfterChange": "5837879057685bd1f5ce163887ddcdfbc05fb795", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void resolve(BlockScope upperScope)", "signatureAfterChange": "  public void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tMethodBinding methodBinding =", "-\t\t\t\t\t((AbstractMethodDeclaration) methodScope.referenceContext).binding;", "+\t\t\t\tMethodBinding methodBinding = methodScope.referenceContext instanceof AbstractMethodDeclaration ?", "+\t\t\t\t\t((AbstractMethodDeclaration) methodScope.referenceContext).binding : (methodScope.referenceContext instanceof LambdaExpression ? ", "+\t\t\t\t\t\t\t((LambdaExpression)methodScope.referenceContext).binding : null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab87712b10f8f5cb70a79a5e165f5e15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f192de6c5260ed351db3279698866194d932822c", "commitAfterChange": "bc1ab2814efa96b0090d7fa3a6e0df572ad09b84", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tprivate void computeExpectedTypes(AstNode parent, Scope scope)", "signatureAfterChange": " \tprivate void computeExpectedTypes(AstNode parent, Scope scope)", "diff": ["-\t\t\tMethodBinding methodBinding = ((AbstractMethodDeclaration) scope.methodScope().referenceContext).binding;", "-\t\t\tTypeBinding binding = methodBinding  == null ? null : methodBinding.returnType;", "-\t\t\tif(binding != null) {", "-\t\t\t\taddExpectedType(binding);", "+\t\t\tif(scope.methodScope().referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\t\tMethodBinding methodBinding = ((AbstractMethodDeclaration) scope.methodScope().referenceContext).binding;", "+\t\t\t\tTypeBinding binding = methodBinding  == null ? null : methodBinding.returnType;", "+\t\t\t\tif(binding != null) {", "+\t\t\t\t\taddExpectedType(binding);", "+\t\t\t\t}"]}], "num": 31030}