{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bcbc5ca4858e9edb99329d9e28aed21", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef969b50893be8dad6a2f7a180e6b8b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static boolean isMatch(char[] pattern, char[] word, int matchRule)", "signatureAfterChange": "  public static boolean isMatch(char[] pattern, char[] word, int matchRule)", "diff": ["+\tif (pattern.length == 0) return matchRule != SearchPattern.R_EXACT_MATCH;", "+\tif (word.length == 0) return (matchRule & SearchPattern.R_PATTERN_MATCH) != 0 && pattern.length == 1 && pattern[0] == '*';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf5609ca2f4965b542ccf60be7c0d7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "6376828719de1b35fb16828dd60ac530e949608a", "commitAfterChange": "2a2667223f1903b9c183c60ab8e7003c7b66502a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["-\tthis.typeVariables = NoTypeVariables;", "+", "+\tchar[] typeSignature = environment.options.sourceLevel >= ClassFileConstants.JDK1_5 ? binaryType.getGenericSignature() : null;", "+\tthis.typeVariables = typeSignature != null && typeSignature.length > 0 && typeSignature[0] == '<'", "+\t\t? null // is initialized in cachePartsFrom (called from LookupEnvironment.createBinaryTypeFrom())... must set to null so isGenericType() answers true", "+\t\t: NoTypeVariables;"]}], "num": 5962}