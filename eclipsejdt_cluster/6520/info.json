{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20658038118df0bdd17311b464c755ae", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1229e9a79f7c47240ab425bf06e142dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "2ce6255dd4ec5ed8642a03ac881dd120c66b8a90", "commitAfterChange": "44812880b1f64f568edbe98bb8d70e4f3eb124f9", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void testBug65180()", "signatureAfterChange": " \tpublic void testBug65180()", "diff": ["+\t // Conform since bug \"http://bugs.eclipse.org/bugs/show_bug.cgi?id=191322\" has been fixed", "-\t\trunNegativeTest(", "+\t\trunConformTest(", "-\t\t\t\t\t\"\tpublic class Inner {\\n\" + ", "-\t\t\t\t\t\"\t\t/**\\n\" + ", "-\t\t\t\t\t\"\t\t * Does something.\\n\" + ", "-\t\t\t\t\t\"\t\t * \\n\" + ", "-\t\t\t\t\t\"\t\t * @see #testFunc\\n\" + ", "-\t\t\t\t\t\"\t\t */\\n\" + ", "-\t\t\t\t\t\"\t\tpublic void innerFunc() {\\n\" + ", "-\t\t\t\t\t\"\t\t\ttestFunc();\\n\" + ", "-\t\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"\t\\n\" + ", "-\t\t\t\t\t\"\tpublic void testFunc() {}\\n\" + ", "-\t\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\t\"\\n\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in Test.java (at line 6)\\r\\n\" + ", "-\t\t\t\t\"\t* @see #testFunc\\r\\n\" + ", "-\t\t\t\t\"\t        ^^^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: testFunc cannot be resolved or is not a field\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\t\"\tpublic class Inner {\\n\" + ", "+\t\t\t\t\"\t\t/**\\n\" + ", "+\t\t\t\t\"\t\t * Does something.\\n\" + ", "+\t\t\t\t\"\t\t * \\n\" + ", "+\t\t\t\t\"\t\t * @see #testFunc\\n\" + ", "+\t\t\t\t\"\t\t */\\n\" + ", "+\t\t\t\t\"\t\tpublic void innerFunc() {\\n\" + ", "+\t\t\t\t\"\t\t\ttestFunc();\\n\" + ", "+\t\t\t\t\"\t\t}\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\t\\n\" + ", "+\t\t\t\t\"\tpublic void testFunc() {}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\"", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224f9332ea978ae93af4fe0ff8d76184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1438, "methodNumberAfterChange": 1439, "signatureBeforeChange": " public void test1404()  throws Exception", "signatureAfterChange": " public void test1404()  throws Exception", "diff": ["+// SHOULD FAIL AT 1.8 (RET): Type mismatch: cannot convert from X<Comparable<Comparable<T>>> to X", "-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\"\tX raw = bar(); // 1 accepted\\n\" + ", "-\t\t\"\t^\\n\" + ", "-\t\t\"X is a raw type. References to generic type X<A> should be parameterized\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb51b7f7694143699827ff887e5d0f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "commitAfterChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "methodNumberBeforeChange": 581, "methodNumberAfterChange": 581, "signatureBeforeChange": " public void testBug453305()", "signatureAfterChange": " public void testBug453305()", "diff": ["-\trunNegativeTest(", "+\trunConformTest(", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in NullTest.java (at line 25)\\n\" + ", "-\t\t\"\tresult.doSomething(); // warning is here\\n\" + ", "-\t\t\"\t^^^^^^\\n\" + ", "-\t\t\"Potential null pointer access: The variable result may be null at this location\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5371e055b821ad3cfa02f84976bc40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "976283265acccc4408306834f2f927413343ea11", "commitAfterChange": "5b30149a3fc87b0c2999cd960bbbaa7634db73e9", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " public void testBug73995()", "signatureAfterChange": " public void testBug73995()", "diff": ["-\trunNegativeTest(", "+\trunConformTest(", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"\t*\t\t{@unknown_tag}\\n\" + ", "-\t\t\"\t \t\t  ^^^^^^^^^^^\\n\" + ", "-\t\t\"Javadoc: Unexpected tag\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db00ead6062fae660db1b8f0caa5d61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "976283265acccc4408306834f2f927413343ea11", "commitAfterChange": "5b30149a3fc87b0c2999cd960bbbaa7634db73e9", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": " public void testBug267833()", "signatureAfterChange": " public void testBug267833()", "diff": ["-\trunNegativeTest(", "+\trunConformTest(", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\"\t* Invalid custom tag {@custom \\\"Invalid\\\"}   \\n\" + ", "-\t\t\"\t                       ^^^^^^\\n\" + ", "-\t\t\"Javadoc: Unexpected tag\\n\" + ", "-\t\t\"----------\\n\"", "-\t);", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf9d02f49f0412a856f4fed3e8b3b54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest.java", "commitBeforeChange": "7186c730d487753734b0547672e890b50fededb4", "commitAfterChange": "7ceb7b86e5d2c6d0639c543a0b8998dc4ed1502e", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void testBug413958_2()", "signatureAfterChange": " public void testBug413958_2()", "diff": ["-// variation showing different inference with / without a method parameter", "+// Passing since https://bugs.eclipse.org/423496", "-\trunNegativeTest(", "+\trunConformTest(", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in TestGenerics.java (at line 6)\\n\" +", "-\t\t\"\tfinal WritableWrapper<TestA2,TestB> v4 = v1.icopy();\\n\" +", "-\t\t\"\t                                         ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from ReadOnlyWrapper<TestA,TestB> to WritableWrapper<TestA2,TestB>\\n\" +", "-\t\t\"----------\\n\");", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b7580b41d9ee05fa24e8e7dbae9587", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "2ce6255dd4ec5ed8642a03ac881dd120c66b8a90", "commitAfterChange": "44812880b1f64f568edbe98bb8d70e4f3eb124f9", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testBug51911()", "signatureAfterChange": " \tpublic void testBug51911()", "diff": ["+\t// Conform since bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=191322 has been fixed ", "-\t\trunNegativeTest(", "+\t\trunConformTest(", "-\t\t\t\t\t\" * @see #foo\\n\" +", "-\t\t\t\t\t\" */\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"\tpublic void foo(int i, float f) {}\\n\" +", "-\t\t\t\t\t\"\tpublic void foo(String str) {}\\n\" +", "-\t\t\t\t\t\"}\\n\"", "-\t\t \t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\t\"\t* @see #foo\\n\" + ", "-\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\"Javadoc: foo is an ambiguous method reference or is not a field\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\t\" * @see #foo\\n\" +", "+\t\t\t\t\" */\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic void foo(int i, float f) {}\\n\" +", "+\t\t\t\t\"\tpublic void foo(String str) {}\\n\" +", "+\t\t\t\t\"}\\n\"", "+\t\t \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a2cf8f6a6f29aeee30d4dad86a30f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1064, "methodNumberAfterChange": 1065, "signatureBeforeChange": " public void test1035()", "signatureAfterChange": " public void test1035()", "diff": ["+// SHOULD FAIL AT 1.8 (RET): multiple", "-\tthis.runNegativeTest(", "+\tthis.runConformTest(", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in ComparableComparator.java (at line 14)\\n\" + ", "-\t\t\"\tstatic <M extends String> Comparator<M> baz() {\\n\" + ", "-\t\t\"\t                  ^^^^^^\\n\" + ", "-\t\t\"The type parameter M should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecaa7844aafb113f9f69f2054c7a47a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "commitAfterChange": "23872cdac6fbbd78479a7f309cf6a923f8b64047", "methodNumberBeforeChange": 585, "methodNumberAfterChange": 586, "signatureBeforeChange": " public void testBug418500()", "signatureAfterChange": " public void testBug418500()", "diff": ["-\trunNegativeTest(", "+\trunConformTest(", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in Test.java (at line 15)\\n\" + ", "-\t\t\"\tif (targets.size() > 0) {\\n\" + ", "-\t\t\"\t    ^^^^^^^\\n\" + ", "-\t\t\"Potential null pointer access: The variable targets may be null at this location\\n\" +  // FIXME: fully avoid warning?", "-\t\t\"----------\\n\");", "+\t\t});"]}], "num": 6520}