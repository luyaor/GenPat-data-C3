{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a55b5f51da477fdfa41c3031f9a022a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ffd43274b292e7ef0231991d15f6b8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "commitAfterChange": "c103de7652c81626d78eadd07a0763ab5a5a3287", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic void test0026() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0026() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong number of modifiers\", 2, modifiers.size());", "+\t\tassertEquals(\"Wrong number of modifiers\", 1, modifiers.size());", "-\t\textendedModifier = (IExtendedModifier) modifiers.get(1);", "-\t\tassertTrue(\"Not a modifier\", extendedModifier instanceof Modifier);", "-\t\tmodifier = (Modifier) extendedModifier;", "-\t\tcheckSourceRange(modifier, \"abstract\", source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b53e342526b3877e8bcd32154c882f40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic void testBug400568_a_since_8() throws Exception", "signatureAfterChange": " \tpublic void testBug400568_a_since_8() throws Exception", "diff": ["-\t\t\tarrayType = (ArrayType) arrayType.getComponentType();", "-\t\t\tListRewrite listRewrite= rewrite.getListRewrite(arrayType, ArrayType.ANNOTATIONS_PROPERTY);", "-\t\t\tlistRewrite.remove((ASTNode)arrayType.annotations().get(0), null);", "-\t\t\tlistRewrite.remove((ASTNode)arrayType.annotations().get(1), null);", "+\t\t\tExtraDimension dim = arrayType.getDimensionAt(1);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(dim, ExtraDimension.ANNOTATIONS_PROPERTY);", "+\t\t\tlistRewrite.remove((ASTNode)dim.annotations().get(0), null);", "+\t\t\tlistRewrite.remove((ASTNode)dim.annotations().get(1), null);", "-", "-\t\t\tArrayType newArrayType = (ArrayType) creationType.getComponentType();", "-\t\t\trewrite.set(creation, ArrayCreation.TYPE_PROPERTY, newArrayType, null);", "-", "+\t\t\trewrite.remove(creationType.getDimensionAt(0), null);", "-\t\t\tnewArrayType = (ArrayType) creationType.getComponentType();", "-\t\t\trewrite.set(creation, ArrayCreation.TYPE_PROPERTY, newArrayType, null);", "+\t\t\trewrite.remove(creationType.getDimensionAt(0), null);", "-\t\tbuf.append(\"    \tint [] i [][] = new int @Annot1 @Annot2  [2][size(new int[][]{})];\\n\");", "+\t\tbuf.append(\"    \tint [] i [][] = new int @Annot1 @Annot2  [2]  [size(new int[][]{})] [];\\n\");"]}], "num": 36514}