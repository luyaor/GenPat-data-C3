{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d8d748b1142044a817c4616912a6ed9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae208e0a37a27efb4c02ad321012c67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate boolean createExternalArchiveDelta(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\t\tprojects = manager.getJavaModel().getOldJavaProjectsList();", "+\t\t\t\t\t\t\tprojects = this.manager.getJavaModel().getOldJavaProjectsList();", "-\t\t\tprojects = manager.getJavaModel().getOldJavaProjectsList();", "+\t\t\tprojects = this.manager.getJavaModel().getOldJavaProjectsList();", "-\t\t\t\t\t\t\tif (this.externalTimeStamps.containsKey(entryPath)){", "-\t\t\t\t\t\t\t\tthis.externalTimeStamps.remove(entryPath);", "+\t\t\t\t\t\t\tif (this.state.externalTimeStamps.remove(entryPath) != null){", "-\t\t\t\t\t\t\t\tindexManager.removeIndex(entryPath);", "+\t\t\t\t\t\t\t\tthis.manager.indexManager.removeIndex(entryPath);", "-\t\t\t\t\t\t\tLong oldTimestamp =(Long) this.externalTimeStamps.get(entryPath);", "+\t\t\t\t\t\t\tLong oldTimestamp =(Long) this.state.externalTimeStamps.get(entryPath);", "-\t\t\t\t\t\t\t\t\tthis.externalTimeStamps.remove(entryPath);", "+\t\t\t\t\t\t\t\t\tthis.state.externalTimeStamps.remove(entryPath);", "-\t\t\t\t\t\t\t\t\tindexManager.removeIndex(entryPath);", "+\t\t\t\t\t\t\t\t\tthis.manager.indexManager.removeIndex(entryPath);", "-\t\t\t\t\t\t\t\t\tthis.externalTimeStamps.put(entryPath, new Long(newTimeStamp));", "+\t\t\t\t\t\t\t\t\tthis.state.externalTimeStamps.put(entryPath, new Long(newTimeStamp));", "-\t\t\t\t\t\t\t\t\tindexManager.removeIndex(entryPath);", "+\t\t\t\t\t\t\t\t\tthis.manager.indexManager.removeIndex(entryPath);", "-\t\t\t\t\t\t\t\t\tindexManager.indexLibrary(entryPath, project.getProject());", "+\t\t\t\t\t\t\t\t\tthis.manager.indexManager.indexLibrary(entryPath, project.getProject());", "-\t\t\t\t\t\t\t\t\tthis.externalTimeStamps.put(entryPath, new Long(newTimeStamp));", "+\t\t\t\t\t\t\t\t\tthis.state.externalTimeStamps.put(entryPath, new Long(newTimeStamp));", "-\t\t\t\t\t\t\t\t\tindexManager.indexLibrary(entryPath, project.getProject());", "+\t\t\t\t\t\t\t\t\tthis.manager.indexManager.indexLibrary(entryPath, project.getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2781718628a3be43d086c8bc3b3c65d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "42a8e7b7f9382c59bb1ff340f0838c566aaa3094", "commitAfterChange": "eaac4cd91d3c13197436495a330942a49816eb54", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 192, "signatureBeforeChange": " public void methodNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " public void methodNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\tStringBuffer methodSignature = new StringBuffer();", "-\tmethodSignature", "-\t\t.append(inheritedMethod.declaringClass.readableName())", "-\t\t.append('.')", "-\t\t.append(inheritedMethod.readableName());", "-\tStringBuffer shortSignature = new StringBuffer();", "-\tshortSignature", "-\t\t.append(inheritedMethod.declaringClass.shortReadableName())", "-\t\t.append('.')", "-\t\t.append(inheritedMethod.shortReadableName());", "-", "-\tint id = IProblem.MethodNameClash;", "-\t\tid,", "-\t\tnew String[] {methodSignature.toString()},", "-\t\tnew String[] {shortSignature.toString()},", "-\t\tcurrentMethod.sourceStart(),", "-\t\tcurrentMethod.sourceEnd());", "-}", "+\t\t\tIProblem.MethodNameClash,", "+\t\t\tnew String[] {", "+\t\t\t\tnew String(currentMethod.selector),", "+\t\t\t\tparametersAsString(currentMethod.original().parameters, false),", "+\t\t\t\tnew String(currentMethod.declaringClass.readableName()),", "+\t\t\t\tparametersAsString(inheritedMethod.original().parameters, false),", "+\t\t\t\tnew String(inheritedMethod.declaringClass.readableName()),", "+\t\t\t }, ", "+\t\t\tnew String[] {", "+\t\t\t\tnew String(currentMethod.selector),", "+\t\t\t\tparametersAsString(currentMethod.original().parameters, true),", "+\t\t\t\tnew String(currentMethod.declaringClass.shortReadableName()),", "+\t\t\t\tparametersAsString(inheritedMethod.original().parameters, true),", "+\t\t\t\tnew String(inheritedMethod.declaringClass.shortReadableName()),", "+\t\t\t }, ", "+\t\t\tcurrentMethod.sourceStart(),", "+\t\t\tcurrentMethod.sourceEnd());", "+}\t"]}], "num": 53515}