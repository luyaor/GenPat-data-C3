{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48eb3294dd362b70212a935a94c9f408", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0d839e6dc26e188c308a30506c2219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "commitAfterChange": "5469f50f640576520a940d9fe82569da4a039fdc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tJavacCompiler(String rootDirectoryPath, String rawVersion) throws IOException, InterruptedException", "signatureAfterChange": " \tJavacCompiler(String rootDirectoryPath, String rawVersion) throws IOException, InterruptedException", "diff": ["-\t\t\t\trawVersion = rawVersion.substring(0, eol);", "+\t\t\t\tif (eol != -1) {", "+\t\t\t\t\trawVersion = rawVersion.substring(0, eol);", "+\t\t\t\t}", "+\t\t\t\tif (rawVersion.startsWith(\"javac \")) {", "+\t\t\t\t\trawVersion = rawVersion.substring(6, rawVersion.length());", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4bcb98433375690f3e723a31a469c85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void testSearchAllTypeNames() throws CoreException", "signatureAfterChange": " \tpublic void testSearchAllTypeNames() throws CoreException", "diff": ["-\t\ttagAsGlobalSummary(\"Search all type names\", true); // put in global fingerprint", "-\t\tSearchTypeNameRequestor requestor = new SearchTypeNameRequestor();", "+\t\ttagAsGlobalSummary(\"Old Search all type names\", false); // do NOT put in global fingerprint", "+\t\tOldSearchTypeNameRequestor requestor = new OldSearchTypeNameRequestor();", "-\t\twaitUntilIndexesReady();", "+\t\tAbstractJavaModelTests.waitUntilIndexesReady();", "+\t\tif (SEARCH_ALL_TYPE_NAMES_COUNT == -1) {", "+\t\t\tSEARCH_ALL_TYPE_NAMES_COUNT = requestor.count;", "+\t\t} else {", "+\t\t\tassertEquals(\"We should find same number of types in the workspace whatever the search method is!\", SEARCH_ALL_TYPE_NAMES_COUNT, requestor.count);", "+\t\t}"]}], "num": 72211}