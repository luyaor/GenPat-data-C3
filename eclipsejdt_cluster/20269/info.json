{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b1cf3f04dd4aa0ebfad7d5028b6c813", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a496b5b55532bded0e95705b6627e77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "f5139421d21a62b37333741e06d5b0ee037da3c8", "commitAfterChange": "90613034d8736c470cf486be32b2440926bcfdb8", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void test073()", "signatureAfterChange": " \tpublic void test073()", "diff": ["-\t\t\t\"  abstract public Color[] enums() default {Color.GREEN};\\n\" + ", "+\t\t\t\"  public abstract Color[] enums() default {Color.GREEN};\\n\" + ", "-\t\t\t\"  abstract public Foo[] annotations() default {@Foo()};\\n\" + ", "+\t\t\t\"  public abstract Foo[] annotations() default {@Foo()};\\n\" + ", "-\t\t\t\"  abstract public int[] ints() default {(int) 0};\\n\" + ", "+\t\t\t\"  public abstract int[] ints() default {(int) 0};\\n\" + ", "-\t\t\t\"  abstract public byte[] bytes() default {(byte) 1};\\n\" + ", "+\t\t\t\"  public abstract byte[] bytes() default {(byte) 1};\\n\" + ", "-\t\t\t\"  abstract public short[] shorts() default {(short) 3};\\n\" + ", "+\t\t\t\"  public abstract short[] shorts() default {(short) 3};\\n\" + ", "-\t\t\t\"  abstract public long[] longs() default {-9223372036854775808L};\\n\" + ", "+\t\t\t\"  public abstract long[] longs() default {-9223372036854775808L};\\n\" + ", "-\t\t\t\"  abstract public String[] strings() default {\\\"\\\"};\\n\" + ", "+\t\t\t\"  public abstract String[] strings() default {\\\"\\\"};\\n\" + ", "-\t\t\t\"  abstract public boolean[] booleans() default {true};\\n\" + ", "+\t\t\t\"  public abstract boolean[] booleans() default {true};\\n\" + ", "-\t\t\t\"  abstract public float[] floats() default {3.4028235E38f};\\n\" + ", "+\t\t\t\"  public abstract float[] floats() default {3.4028235E38f};\\n\" + ", "-\t\t\t\"  abstract public double[] doubles() default {1.7976931348623157E308};\\n\" + ", "+\t\t\t\"  public abstract double[] doubles() default {1.7976931348623157E308};\\n\" + ", "-\t\t\t\"  abstract public Class[] classes() default {I};\\n\" + ", "+\t\t\t\"  public abstract Class[] classes() default {I};\\n\" + ", "-\t\tif (actualOutput.indexOf(expectedOutput) == -1) {", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.displayString(actualOutput, 2));", "+\t\tint index = actualOutput.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\t\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11069e0a4399e028cae700498e72457", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "f5139421d21a62b37333741e06d5b0ee037da3c8", "commitAfterChange": "90613034d8736c470cf486be32b2440926bcfdb8", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void test074()", "signatureAfterChange": " \tpublic void test074()", "diff": ["-\t\t\t\"  abstract public Color _enum() default Color.GREEN;\\n\" + ", "+\t\t\t\"  public abstract Color _enum() default Color.GREEN;\\n\" + ", "-\t\t\t\"  abstract public Foo _annotation() default @Foo();\\n\" + ", "+\t\t\t\"  public abstract Foo _annotation() default @Foo();\\n\" + ", "-\t\t\t\"  abstract public int _int() default (int) 0;\\n\" + ", "+\t\t\t\"  public abstract int _int() default (int) 0;\\n\" + ", "-\t\t\t\"  abstract public byte _byte() default (byte) 1;\\n\" + ", "+\t\t\t\"  public abstract byte _byte() default (byte) 1;\\n\" + ", "-\t\t\t\"  abstract public short _short() default (short) 3;\\n\" + ", "+\t\t\t\"  public abstract short _short() default (short) 3;\\n\" + ", "-\t\t\t\"  abstract public long _long() default -9223372036854775808L;\\n\" + ", "+\t\t\t\"  public abstract long _long() default -9223372036854775808L;\\n\" + ", "-\t\t\t\"  abstract public String _string() default \\\"\\\";\\n\" + ", "+\t\t\t\"  public abstract String _string() default \\\"\\\";\\n\" + ", "-\t\t\t\"  abstract public boolean _boolean() default true;\\n\" + ", "+\t\t\t\"  public abstract boolean _boolean() default true;\\n\" + ", "-\t\t\t\"  abstract public float _float() default 3.4028235E38f;\\n\" + ", "+\t\t\t\"  public abstract float _float() default 3.4028235E38f;\\n\" + ", "-\t\t\t\"  abstract public double _double() default 1.7976931348623157E308;\\n\" + ", "+\t\t\t\"  public abstract double _double() default 1.7976931348623157E308;\\n\" + ", "-\t\t\t\"  abstract public Class _class() default I;\\n\" + ", "+\t\t\t\"  public abstract Class _class() default I;\\n\" + ", "-\t\tif (actualOutput.indexOf(expectedOutput) == -1) {", "-\t\t\tSystem.out.println(org.eclipse.jdt.core.tests.util.Util.displayString(actualOutput, 2));", "+\t\tint index = actualOutput.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(actualOutput, 3));", "-\t\tassertTrue(\"unexpected bytecode sequence\", actualOutput.indexOf(expectedOutput) != -1);", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"unexpected bytecode sequence\", expectedOutput, actualOutput);", "+\t\t}"]}], "num": 20269}