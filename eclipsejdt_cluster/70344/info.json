{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11e41518915a63b63f267762ba7cd9b9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f89fd17b623823a8d1467533e87da4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "c103de7652c81626d78eadd07a0763ab5a5a3287", "commitAfterChange": "de65819236a978eabe6f11a104e36a24db789ea9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["-\t\tif (mode == DETAILED || mode == SYSTEM) {", "+\t\tif (mode == DETAILED) {", "+\t\tboolean decoded = false;", "+\t\t\t\t\t\tdecoded = true;", "-\t\t} else {", "+\t\t}", "+\t\tif (!decoded) {", "-\t\t\tif (runtimeVisibleAnnotationsAttribute != null) {", "-\t\t\t\tdisassemble((IRuntimeVisibleAnnotationsAttribute) runtimeVisibleAnnotationsAttribute, buffer, lineSeparator, 0);", "-\t\t\t}", "-\t\t\tif (runtimeInvisibleAnnotationsAttribute != null) {", "-\t\t\t\tdisassemble((IRuntimeInvisibleAnnotationsAttribute) runtimeInvisibleAnnotationsAttribute, buffer, lineSeparator, 0);", "-\t\t\t}", "-\t\t\tif (length != 0) {", "-\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\tIClassFileAttribute attribute = attributes[i];", "-\t\t\t\t\tif (attribute != innerClassesAttribute", "-\t\t\t\t\t\t&& attribute != sourceAttribute", "-\t\t\t\t\t\t&& attribute != signatureAttribute", "-\t\t\t\t\t\t&& attribute != enclosingMethodAttribute", "-\t\t\t\t\t\t&& attribute != runtimeInvisibleAnnotationsAttribute", "-\t\t\t\t\t\t&& attribute != runtimeVisibleAnnotationsAttribute", "-\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.DEPRECATED)", "-\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.SYNTHETIC)) {", "-\t\t\t\t\t\tdisassemble(attribute, buffer, lineSeparator, 0);", "+\t\t\tif (mode == SYSTEM) {", "+\t\t\t\tif (runtimeVisibleAnnotationsAttribute != null) {", "+\t\t\t\t\tdisassemble((IRuntimeVisibleAnnotationsAttribute) runtimeVisibleAnnotationsAttribute, buffer, lineSeparator, 0);", "+\t\t\t\t}", "+\t\t\t\tif (runtimeInvisibleAnnotationsAttribute != null) {", "+\t\t\t\t\tdisassemble((IRuntimeInvisibleAnnotationsAttribute) runtimeInvisibleAnnotationsAttribute, buffer, lineSeparator, 0);", "+\t\t\t\t}", "+\t\t\t\tif (length != 0) {", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tIClassFileAttribute attribute = attributes[i];", "+\t\t\t\t\t\tif (attribute != innerClassesAttribute", "+\t\t\t\t\t\t\t&& attribute != sourceAttribute", "+\t\t\t\t\t\t\t&& attribute != signatureAttribute", "+\t\t\t\t\t\t\t&& attribute != enclosingMethodAttribute", "+\t\t\t\t\t\t\t&& attribute != runtimeInvisibleAnnotationsAttribute", "+\t\t\t\t\t\t\t&& attribute != runtimeVisibleAnnotationsAttribute", "+\t\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.DEPRECATED)", "+\t\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.SYNTHETIC)) {", "+\t\t\t\t\t\t\tdisassemble(attribute, buffer, lineSeparator, 0);", "+\t\t\t\t\t\t}", "-\t\t\t}\t\t", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a6a807d7345f461132bd2958692ada", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "66f0e8b8112bb13bbbf568db765302c9834a0001", "commitAfterChange": "8173bc34d19a76799af83a37be998ec65b3a1874", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["+\t\tboolean isFirstAttribute = true;", "+\t\t\tisFirstAttribute = false;", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLineAttribute);", "+\t\t\tif (!isFirstAttribute) {", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLineAttribute);", "+\t\t\t} else {", "+\t\t\t\tdumpTab(tabNumberForLineAttribute, buffer);", "+\t\t\t\tisFirstAttribute = false;", "+\t\t\t}", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute);", "+\t\t\tif (!isFirstAttribute) {", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute);", "+\t\t\t} else {", "+\t\t\t\tisFirstAttribute = false;", "+\t\t\t\tdumpTab(tabNumberForLocalVariableAttribute, buffer);", "+\t\t\t}", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute);", "+\t\t\tif (!isFirstAttribute) {", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute);", "+\t\t\t} else {", "+\t\t\t\tisFirstAttribute = false;", "+\t\t\t\tdumpTab(tabNumberForLocalVariableAttribute, buffer);", "+\t\t\t}", "-\t\t\t\t\tdisassemble((StackMapTableAttribute) attribute, buffer, lineSeparator, tabNumber + 1, mode);", "+\t\t\t\t\tIStackMapTableAttribute stackMapTableAttribute = (IStackMapTableAttribute) attribute;", "+\t\t\t\t\tif (!isFirstAttribute) {", "+\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tisFirstAttribute = false;", "+\t\t\t\t\t\tdumpTab(tabNumber + 1, buffer);", "+\t\t\t\t\t}", "+\t\t\t\t\tint numberOfEntries = stackMapTableAttribute.getNumberOfEntries();", "+\t\t\t\t\tbuffer.append(Messages.bind(Messages.disassembler_stackmaptableattributeheader, Integer.toString(numberOfEntries)));", "+\t\t\t\t\tif (numberOfEntries != 0) {", "+\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 3);", "+\t\t\t\t\t\tfinal IStackMapFrame[] stackMapFrames = stackMapTableAttribute.getStackMapFrame();", "+\t\t\t\t\t\tfor (int j = 0; j < numberOfEntries; j++) {", "+\t\t\t\t\t\t\tdisassemble(stackMapFrames[j], buffer, lineSeparator, tabNumber + 2, mode);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\t\tdisassemble(attribute, buffer, lineSeparator, tabNumber + 1);", "+\t\t\t\t\tif (!isFirstAttribute) {", "+\t\t\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tisFirstAttribute = false;", "+\t\t\t\t\t\tdumpTab(tabNumber + 1, buffer);", "+\t\t\t\t\t}", "+\t\t\t\t\tbuffer.append(Messages.bind(Messages.disassembler_genericattributeheader,", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tnew String(attribute.getAttributeName()),", "+\t\t\t\t\t\t\tLong.toString(attribute.getAttributeLength())", "+\t\t\t\t\t\t}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb83d480b3800301c77641ace01bc2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "8593ccbacaea58bc31d7f71f8a393c5c276effab", "commitAfterChange": "ab233550db657855007d7fd2c56941a3b07c6fa6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator, int mode)", "diff": ["+\t\tIClassFileAttribute bootstrapMethods = Util.getAttribute(classFileReader, IAttributeNamesConstants.BOOTSTRAP_METHODS);", "+", "-\t\t\tint remainingAttributesLength = length;", "-\t\t\tif (innerClassesAttribute != null) {", "-\t\t\t\tremainingAttributesLength--;", "-\t\t\t}", "-\t\t\tif (enclosingMethodAttribute != null) {", "-\t\t\t\tremainingAttributesLength--;", "-\t\t\t}", "-\t\t\tif (sourceAttribute != null) {", "-\t\t\t\tremainingAttributesLength--;", "-\t\t\t}", "-\t\t\tif (signatureAttribute != null) {", "-\t\t\t\tremainingAttributesLength--;", "-\t\t\t}", "-\t\t\tif (innerClassesAttribute != null || enclosingMethodAttribute != null || remainingAttributesLength != 0) {", "-\t\t\t\twriteNewLine(buffer, lineSeparator, 0);", "-\t\t\t}", "+\t\t\t}", "+\t\t\tif (bootstrapMethods != null) {", "+\t\t\t\tdisassemble((IBootstrapMethodsAttribute) bootstrapMethods, buffer, lineSeparator, 0);", "-\t\t\t\t\t\t\t&& attribute != sourceAttribute", "-\t\t\t\t\t\t\t&& attribute != signatureAttribute", "-\t\t\t\t\t\t\t&& attribute != enclosingMethodAttribute", "-\t\t\t\t\t\t\t&& attribute != runtimeInvisibleAnnotationsAttribute", "-\t\t\t\t\t\t\t&& attribute != runtimeVisibleAnnotationsAttribute", "-\t\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.DEPRECATED)", "-\t\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.SYNTHETIC)) {", "+\t\t\t\t\t\t\t\t&& attribute != sourceAttribute", "+\t\t\t\t\t\t\t\t&& attribute != signatureAttribute", "+\t\t\t\t\t\t\t\t&& attribute != enclosingMethodAttribute", "+\t\t\t\t\t\t\t\t&& attribute != runtimeInvisibleAnnotationsAttribute", "+\t\t\t\t\t\t\t\t&& attribute != runtimeVisibleAnnotationsAttribute", "+\t\t\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.DEPRECATED)", "+\t\t\t\t\t\t\t\t&& !CharOperation.equals(attribute.getAttributeName(), IAttributeNamesConstants.SYNTHETIC)", "+\t\t\t\t\t\t\t\t&& attribute != bootstrapMethods) {"]}], "num": 70344}