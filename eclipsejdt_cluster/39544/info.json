{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2c6f0dbcea08222e039e0a25b0f5abb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a4304fac7d4bb9b964d21f8d4b89b2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cd68b167bcb2c40d959f9db282b6c0fe02c36af3", "commitAfterChange": "56bc267ccbb561e15a1def744b67e8208e4ddb23", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["+\t\t\t\t\t\t\tif (matchingMethod.typeVariables != NoTypeVariables)", "+\t\t\t\t\t\t\t\tcontinue nextMethod; // keep inherited substituted methods to detect anonymous errors"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e30ff32c921de452e4d5d7f0fc50fe95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8f8bb370f097d2a34f004c1d0b29e00cd828b5b6", "commitAfterChange": "17fb0d366dc56ece924ba729bd213e6dd341345f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public ParameterizedGenericMethodBinding createParameterizedGenericMethod(MethodBinding genericMethod, TypeBinding[] typeArguments, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboolean inferredWithUncheckedConversion, boolean hasReturnProblem)", "signatureAfterChange": " public ParameterizedGenericMethodBinding createParameterizedGenericMethod(MethodBinding genericMethod, TypeBinding[] typeArguments, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboolean inferredWithUncheckedConversion, boolean hasReturnProblem)", "diff": ["+\t\t\t\tif (cachedMethod.inferredWithUncheckedConversion != inferredWithUncheckedConversion) continue nextCachedMethod;"]}], "num": 39544}