{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd6baa51c6b5933a0355705eb6a8c0d0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bc08e703a69b6222dfbfb2071dba3de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "signatureAfterChange": " \tprotected TypeBinding[] minimalErasedCandidates(TypeBinding[] types, Map allInvocations)", "diff": ["-\t\t\t\t\tif (erasedSuperType == null || erasedSuperType == otherType) continue nextSuperType;", "+\t\t\t\t\tif (erasedSuperType == null || TypeBinding.equalsEquals(erasedSuperType, otherType)) continue nextSuperType;", "-\t\t\t\t\t\t\t\tif (someInvocations[k] == match) break checkExisting;", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(someInvocations[k], match)) break checkExisting;", "-\t\t\t\tif (erasedSuperType == otherType || erasedSuperType.id == TypeIds.T_JavaLangObject && otherType.isInterface()) {", "+\t\t\t\tif (TypeBinding.equalsEquals(erasedSuperType, otherType) || erasedSuperType.id == TypeIds.T_JavaLangObject && otherType.isInterface()) {", "-\t\t\t\t\t\t\tif (someInvocations[k] == match) break checkExisting;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(someInvocations[k], match)) break checkExisting;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b594596055b19b6431c98893a377355a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public boolean hasIncompatibleSuperType(ReferenceBinding otherType)", "signatureAfterChange": " public boolean hasIncompatibleSuperType(ReferenceBinding otherType)", "diff": ["-    if (this == otherType) return false;", "+    if (TypeBinding.equalsEquals(this, otherType)) return false;", "-\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;", "-\t\tif (currentType == otherType) return false;", "+\t\tif (TypeBinding.equalsEquals(currentType, otherType)) return false;", "-\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}], "num": 30714}