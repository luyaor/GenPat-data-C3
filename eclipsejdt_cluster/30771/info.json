{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "467d81a640f7fb1170f97cc6946a846a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97496ed77d319ced739c8f9973529bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "signatureAfterChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "diff": ["+\t\t\tTypeReference[] typeArguments = currentMessageSend.typeArguments;", "+\t\t\tif (typeArguments != null) {", "+\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLESS, this.preferences.insert_space_before_opening_angle_bracket_in_type_arguments); ", "+\t\t\t\t\tif (this.preferences.insert_space_after_opening_angle_bracket_in_type_arguments) {", "+\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t}", "+\t\t\t\t\tint length = typeArguments.length;", "+\t\t\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\t\t\t\ttypeArguments[i].traverse(this, scope);", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_type_arguments);", "+\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_type_arguments) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t\ttypeArguments[length - 1].traverse(this, scope);", "+\t\t\t\t\tif (isClosingGenericToken()) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(CLOSING_GENERICS_EXPECTEDTOKENS, this.preferences.insert_space_before_closing_angle_bracket_in_type_arguments); ", "+\t\t\t\t\t}", "+\t\t\t\t\tif (this.preferences.insert_space_after_closing_angle_bracket_in_type_arguments) {", "+\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f466ca83f73ef241842f9c2cd5551e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "543a527ff2051798363d7f2a409c20a6964b6332", "commitAfterChange": "e65379b9057b35418a4c7491224b13ea19038724", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "signatureAfterChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "diff": ["+\t\t\t\t\tTypeReference[] typeArguments = currentMessageSend.typeArguments;", "+\t\t\t\t\tif (typeArguments != null) {", "+\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLESS, this.preferences.insert_space_before_opening_angle_bracket_in_type_arguments); ", "+\t\t\t\t\t\t\tif (this.preferences.insert_space_after_opening_angle_bracket_in_type_arguments) {", "+\t\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tint length = typeArguments.length;", "+\t\t\t\t\t\t\tfor (int j = 0; j < length - 1; j++) {", "+\t\t\t\t\t\t\t\ttypeArguments[j].traverse(this, scope);", "+\t\t\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_type_arguments);", "+\t\t\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_type_arguments) {", "+\t\t\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\ttypeArguments[length - 1].traverse(this, scope);", "+\t\t\t\t\t\t\tif (isClosingGenericToken()) {", "+\t\t\t\t\t\t\t\tthis.scribe.printNextToken(CLOSING_GENERICS_EXPECTEDTOKENS, this.preferences.insert_space_before_closing_angle_bracket_in_type_arguments); ", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (this.preferences.insert_space_after_closing_angle_bracket_in_type_arguments) {", "+\t\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 30771}