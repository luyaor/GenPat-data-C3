{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69b57fa4b35bc7b85c43d8d2513ee020", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0abf74499d9a313759bc4ad96fe09254", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "684cdde2f206ef2ac4df29908e571d08ae9844b6", "commitAfterChange": "3293111a735563d1e83fceb3e5b845048aeaa75b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "diff": ["+\t\tIClasspathEntry defaultOutput = null;", "-\t\t\t\t\tif (entry != null) paths.add(entry);", "+\t\t\t\t\tif (entry != null){", "+\t\t\t\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) { ", "+\t\t\t\t\t\t\tdefaultOutput = entry; // separate output", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tpaths.add(entry);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\tif (paths.size() > 0) {", "-\t\t\tIClasspathEntry[] ips = new IClasspathEntry[paths.size()];", "-\t\t\tpaths.toArray(ips);", "-\t\t\treturn ips;", "+\t\tint pathSize = paths.size();", "+\t\tif (pathSize > 0 || defaultOutput != null) {", "+\t\t\tIClasspathEntry[] entries = new IClasspathEntry[pathSize + (defaultOutput == null ? 0 : 1)];", "+\t\t\tpaths.toArray(entries);", "+\t\t\tif (defaultOutput != null) entries[pathSize] = defaultOutput; // ensure output is last item", "+\t\t\treturn entries;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7445d9aad42cb068b8ec6318e0c5d9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "07caed5f78ad25578ab555e866b372847e0874ac", "commitAfterChange": "8dc654c69848bfee0c53ed6a2c020e49ed6b932f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] decodeClasspath(String xmlClasspath, boolean createMarker, boolean logProblems)", "diff": ["+\t\t// return an empty classpath is it size is 0, to differenciate from a null classpath", "-\t\tif (pathSize > 0 || defaultOutput != null) {", "-\t\t\tIClasspathEntry[] entries = new IClasspathEntry[pathSize + (defaultOutput == null ? 0 : 1)];", "-\t\t\tpaths.toArray(entries);", "-\t\t\tif (defaultOutput != null) entries[pathSize] = defaultOutput; // ensure output is last item", "-\t\t\treturn entries;", "-\t\t} else {", "-\t\t\treturn null;", "-\t\t}", "+\t\tIClasspathEntry[] entries = new IClasspathEntry[pathSize + (defaultOutput == null ? 0 : 1)];", "+\t\tpaths.toArray(entries);", "+\t\tif (defaultOutput != null) entries[pathSize] = defaultOutput; // ensure output is last item", "+\t\treturn entries;"]}], "num": 48625}