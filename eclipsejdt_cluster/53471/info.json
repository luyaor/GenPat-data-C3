{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa63978611a8eb4d5ca009b0ed502d65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2997c64c0d6e362c15d17c295a48f665", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d6dbfc9ffdc536bf3813a7df3219c04027533b62", "commitAfterChange": "5074e3a9141b8db4c82ed56886d84586d3d2dbaa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["+", "+\t@Override", "-\t\tthis.currentBinding = constructorDeclaration.binding;", "-\t\t\tint annotationsLength = annotations.length;", "-\t\t\tfor (int i = 0; i < annotationsLength; i++) {", "-\t\t\t\tannotations[i].traverse(this, constructorDeclaration.scope);", "-\t\t\t}", "+\t\t\tthis.resolveAnnotations(", "+\t\t\t\t\tconstructorDeclaration.scope,", "+\t\t\t\t\tannotations,", "+\t\t\t\t\tconstructorDeclaration.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a941524527d1a95743c29563c5d2744", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d6dbfc9ffdc536bf3813a7df3219c04027533b62", "commitAfterChange": "5074e3a9141b8db4c82ed56886d84586d3d2dbaa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["+", "+\t@Override", "-\t\tthis.currentBinding = argument.binding;", "-\t\t\tint annotationsLength = annotations.length;", "-\t\t\tfor (int i = 0; i < annotationsLength; i++) {", "-\t\t\t\tannotations[i].traverse(this, scope);", "-\t\t\t}", "+\t\t\tthis.resolveAnnotations(", "+\t\t\t\t\tscope,", "+\t\t\t\t\tannotations,", "+\t\t\t\t\targument.binding);"]}], "num": 53471}