{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c4d027bb936fe8a07e925ecc279ae72", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dcad2e68b2929e53a4ab52e4b301d12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java", "commitBeforeChange": "80e40b4c60040fa0aa8e1c95f16e2597f3f0acf0", "commitAfterChange": "f9277e3d6f326ff6a770d54a63a8fe0127208bbc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic List<? extends VariableElement> getParameters()", "signatureAfterChange": "  \t@Override \tpublic List<? extends VariableElement> getParameters()", "diff": ["-\t\t\t\tint i = 0;", "-\t\t\t\tfor (TypeBinding typeBinding : binding.parameters) {", "-\t\t\t\t\tStringBuilder builder = new StringBuilder(\"arg\");//$NON-NLS-1$", "-\t\t\t\t\tbuilder.append(i);", "-\t\t\t\t\tVariableElement param = new VariableElementImpl(_env, new LocalVariableBinding(String.valueOf(builder).toCharArray(), typeBinding, 0, true));", "-\t\t\t\t\tparams.add(param);", "-\t\t\t\t\ti++;", "+\t\t\t\tboolean isEnumConstructor = binding.isConstructor() && binding.declaringClass.isEnum();", "+\t\t\t\tAnnotationBinding[][] parameterAnnotationBindings = null;", "+\t\t\t\tAnnotationHolder annotationHolder = binding.declaringClass.retrieveAnnotationHolder(binding, false);", "+\t\t\t\tif (annotationHolder != null) {", "+\t\t\t\t\tparameterAnnotationBindings = annotationHolder.getParameterAnnotations();", "+\t\t\t\t}", "+\t\t\t\t// we need to filter the synthetic arguments", "+\t\t\t\tif (isEnumConstructor) {", "+\t\t\t\t\tif (length == 2) {", "+\t\t\t\t\t\t// the two arguments are only the two synthetic arguments", "+\t\t\t\t\t\treturn Collections.emptyList();", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int i = 2; i < length; i++) {", "+\t\t\t\t\t\tTypeBinding typeBinding = binding.parameters[i];", "+\t\t\t\t\t\tStringBuilder builder = new StringBuilder(\"arg\");//$NON-NLS-1$", "+\t\t\t\t\t\tbuilder.append(i - 2);", "+\t\t\t\t\t\tVariableElement param = new VariableElementImpl(_env,", "+\t\t\t\t\t\t\t\tnew BinaryLocalVariableBinding(", "+\t\t\t\t\t\t\t\t\t\tString.valueOf(builder).toCharArray(),", "+\t\t\t\t\t\t\t\t\t\ttypeBinding,", "+\t\t\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\t\t\tnull));", "+\t\t\t\t\t\tparams.add(param);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tint i = 0;", "+\t\t\t\t\tfor (TypeBinding typeBinding : binding.parameters) {", "+\t\t\t\t\t\tStringBuilder builder = new StringBuilder(\"arg\");//$NON-NLS-1$", "+\t\t\t\t\t\tbuilder.append(i);", "+\t\t\t\t\t\tVariableElement param = new VariableElementImpl(_env,", "+\t\t\t\t\t\t\t\tnew BinaryLocalVariableBinding(", "+\t\t\t\t\t\t\t\t\t\tString.valueOf(builder).toCharArray(),", "+\t\t\t\t\t\t\t\t\t\ttypeBinding,", "+\t\t\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\t\t\tparameterAnnotationBindings != null ? parameterAnnotationBindings[i] : null));", "+\t\t\t\t\t\tparams.add(param);", "+\t\t\t\t\t\ti++;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d98adc87be06f11d57367eecad6ee44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java", "commitBeforeChange": "7cbfac0f262651a92552aa1b245acf5ef1db3bb0", "commitAfterChange": "b6e21c793f3617f9c60f843e02a0537d5bd09d93", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic List<? extends VariableElement> getParameters()", "signatureAfterChange": "  \t@Override \tpublic List<? extends VariableElement> getParameters()", "diff": ["-\t\t\t\tboolean isEnumConstructor = binding.isConstructor()", "-\t\t\t\t\t\t&& binding.declaringClass.isEnum()", "-\t\t\t\t\t\t&& binding.declaringClass.isBinaryBinding()", "-\t\t\t\t\t\t&& ((binding.modifiers & ExtraCompilerModifiers.AccGenericSignature) == 0);", "-\t\t\t\tif (isEnumConstructor) {", "-\t\t\t\t\tif (length == 2) {", "-\t\t\t\t\t\t// the two arguments are only the two synthetic arguments", "-\t\t\t\t\t\treturn Collections.emptyList();", "-\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 2; i < length; i++) {", "-\t\t\t\t\t\tTypeBinding typeBinding = binding.parameters[i];", "-\t\t\t\t\t\tStringBuilder builder = new StringBuilder(\"arg\");//$NON-NLS-1$", "-\t\t\t\t\t\tbuilder.append(i - 2);", "-\t\t\t\t\t\tVariableElement param = new VariableElementImpl(_env,", "-\t\t\t\t\t\t\t\tnew AptBinaryLocalVariableBinding(", "-\t\t\t\t\t\t\t\t\t\tString.valueOf(builder).toCharArray(),", "-\t\t\t\t\t\t\t\t\t\ttypeBinding,", "-\t\t\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t\t\tnull,", "-\t\t\t\t\t\t\t\t\t\tbinding));", "-\t\t\t\t\t\tparams.add(param);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tint i = 0;", "-\t\t\t\t\tfor (TypeBinding typeBinding : binding.parameters) {", "-\t\t\t\t\t\tStringBuilder builder = new StringBuilder(\"arg\");//$NON-NLS-1$", "+\t\t\t\tint i = 0;", "+\t\t\t\tfor (TypeBinding typeBinding : binding.parameters) {", "+\t\t\t\t\tchar name[] = binding.parameterNames.length > i ? binding.parameterNames[i] : null;", "+\t\t\t\t\tif (name == null) {", "+ \t\t\t\t\t\tStringBuilder builder = new StringBuilder(\"arg\");//$NON-NLS-1$", "-\t\t\t\t\t\tVariableElement param = new VariableElementImpl(_env,", "-\t\t\t\t\t\t\t\tnew AptBinaryLocalVariableBinding(", "-\t\t\t\t\t\t\t\t\t\tString.valueOf(builder).toCharArray(),", "-\t\t\t\t\t\t\t\t\t\ttypeBinding,", "-\t\t\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t\t\tparameterAnnotationBindings != null ? parameterAnnotationBindings[i] : null,", "-\t\t\t\t\t\t\t\t\t\tbinding));", "-\t\t\t\t\t\tparams.add(param);", "-\t\t\t\t\t\ti++;", "+\t\t\t\t\t\tname = String.valueOf(builder).toCharArray();", "+\t\t\t\t\tVariableElement param = new VariableElementImpl(_env,", "+\t\t\t\t\t\t\tnew AptBinaryLocalVariableBinding(", "+\t\t\t\t\t\t\t\t\tname,", "+\t\t\t\t\t\t\t\t\ttypeBinding,", "+\t\t\t\t\t\t\t\t\t0,", "+\t\t\t\t\t\t\t\t\tparameterAnnotationBindings != null ? parameterAnnotationBindings[i] : null,", "+\t\t\t\t\t\t\t\t\tbinding));", "+\t\t\t\t\tparams.add(param);", "+\t\t\t\t\ti++;"]}], "num": 9491}