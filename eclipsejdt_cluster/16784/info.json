{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0a6c99e1976ae8fbc7a167d85e8a815", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6995d182d9842d2df3008d2912d79e34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "7aacb15554a9c6406d505856924e9f9ea2758365", "commitAfterChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate static char[][] generateConstantName(char[][] nameParts, int namePartsPtr)", "signatureAfterChange": "  \tprivate static char[][] generateConstantName(char[][] nameParts, int namePartsPtr, boolean onlyLongest)", "diff": ["-\tprivate static char[][] generateConstantName(char[][] nameParts, int namePartsPtr) {", "-\t\tchar[][] names = new char[namePartsPtr + 1][];", "+\tprivate static char[][] generateConstantName(char[][] nameParts, int namePartsPtr, boolean onlyLongest) {", "+\t\tchar[][] names;", "+\t\tif (onlyLongest) {", "+\t\t\tnames = new char[1][];", "+\t\t} else {", "+\t\t\tnames = new char[namePartsPtr + 1][];", "+\t\t}", "-\t\tnames[namePartsPtr] = name;", "+\t\tif (!onlyLongest) {", "+\t\t\tnames[namePartsPtr] = name;", "+\t\t}", "-\t\t\tnames[namePartsPtr - i] = name;", "+\t\t\tif (!onlyLongest) {", "+\t\t\t\tnames[namePartsPtr - i] = name;", "+\t\t\t}", "+\t\t}", "+\t\tif (onlyLongest) {", "+\t\t\tnames[0] = name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833f15df09a79202f9b4ae42a5fdb57e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "7aacb15554a9c6406d505856924e9f9ea2758365", "commitAfterChange": "9f851707e9bbb361d7fe12af2d5fcf659372084c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate static char[][] generateNonConstantName(char[][] nameParts, int namePartsPtr)", "signatureAfterChange": " \t \tprivate static char[][] generateNonConstantName(char[][] nameParts, int namePartsPtr, boolean onlyLongest)", "diff": ["-\tprivate static char[][] generateNonConstantName(char[][] nameParts, int namePartsPtr) {", "-\t\tchar[][] names = new char[namePartsPtr + 1][];", "+\tprivate static char[][] generateNonConstantName(char[][] nameParts, int namePartsPtr, boolean onlyLongest) {", "+\t\tchar[][] names;", "+\t\tif (onlyLongest) {", "+\t\t\tnames = new char[1][];", "+\t\t} else {", "+\t\t\tnames = new char[namePartsPtr + 1][];", "+\t\t}", "-\t\tchar[] namePart = CharOperation.toLowerCase(nameParts[0]);", "+\t\tchar[] namePart = nameParts[0];", "-\t\tSystem.arraycopy(namePart, 0, namePart, 0, namePartLength);", "-\t\tchar[] name = namePart;", "-\t\tnames[namePartsPtr] = name;", "+\t\tchar[] name = CharOperation.toLowerCase(namePart);", "+\t\t", "+\t\tif (!onlyLongest) {", "+\t\t\tnames[namePartsPtr] = name;", "+\t\t}", "+\t\t", "+\t\tchar[] nameSuffix = namePart;", "-\t\t\tnamePart = CharOperation.toLowerCase(nameParts[i]);", "+\t\t\tnamePart = nameParts[i];", "-\t\t\tname = CharOperation.concat(namePart, name);", "+\t\t\t", "+\t\t\tname = CharOperation.concat(CharOperation.toLowerCase(namePart), nameSuffix);", "-\t\t\tnames[namePartsPtr - i] = name;", "+\t\t\tif (!onlyLongest) {", "+\t\t\t\tnames[namePartsPtr - i] = name;", "+\t\t\t}", "+\t\t\t", "+\t\t\tnameSuffix = CharOperation.concat(namePart, nameSuffix);", "+\t\t\tnameSuffix[namePartLength] = ScannerHelper.toUpperCase(nameSuffix[namePartLength]);", "+\t\t}", "+\t\tif (onlyLongest) {", "+\t\t\tnames[0] = name;"]}], "num": 16784}