{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d9f7345015871ffb35892449ddf746d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a2d52a13e28d64731476e22a6b3ab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate IPackageFragmentRoot getJarPkgFragmentRoot( \t\tIPath jarPath, \t\tObject target, \t\tIJavaProject[] projects)", "signatureAfterChange": " \t \tprivate IPackageFragmentRoot getJarPkgFragmentRoot( \t\tIPath jarPath, \t\tObject target, \t\tIJavaProject[] projects)", "diff": ["-\t\t\t\tIClasspathEntry[] classpathEntries= javaProject.getResolvedClasspath();", "-\t\t\t\tfor (int j= 0, entryCount= classpathEntries.length; j < entryCount; j++) {", "-\t\t\t\t\tif (classpathEntries[j].getPath().equals(jarPath)) {", "-\t\t\t\t\t\tif (target instanceof IFile) {", "-\t\t\t\t\t\t\t// internal jar", "-\t\t\t\t\t\t\treturn javaProject.getPackageFragmentRoot((IFile)target);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t// external jar", "-\t\t\t\t\t\t\treturn javaProject.getPackageFragmentRoot0(jarPath);", "-\t\t\t\t\t\t}", "+\t\t\t\tIClasspathEntry classpathEnty = javaProject.getClasspathEntryFor(jarPath);", "+\t\t\t\tif (classpathEnty != null) {", "+\t\t\t\t\tif (target instanceof IFile) {", "+\t\t\t\t\t\t// internal jar", "+\t\t\t\t\t\treturn javaProject.getPackageFragmentRoot((IFile)target);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// external jar", "+\t\t\t\t\t\treturn javaProject.getPackageFragmentRoot0(jarPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846a554b7dd5ae70f3e8e92e19cd9870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "diff": ["-\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath();", "-\t\t\t\tfor (int j = 0; j < classpath.length; j++) {", "-\t\t\t\t\tif (rootPath.equals(classpath[j].getPath())) {", "-\t\t\t\t\t\t// add the project and its binary pkg fragment roots", "-\t\t\t\t\t\tIPackageFragmentRoot[] roots = project.getAllPackageFragmentRoots();", "-\t\t\t\t\t\tset.add(project.getPath());", "-\t\t\t\t\t\tfor (int k = 0; k < roots.length; k++) {", "-\t\t\t\t\t\t\tIPackageFragmentRoot pkgFragmentRoot = roots[k];", "-\t\t\t\t\t\t\tif (pkgFragmentRoot.getKind() == IPackageFragmentRoot.K_BINARY) {", "-\t\t\t\t\t\t\t\tset.add(pkgFragmentRoot.getPath());", "-\t\t\t\t\t\t\t}", "+\t\t\t\tIClasspathEntry entry = project.getClasspathEntryFor(rootPath);", "+\t\t\t\tif (entry != null) {", "+\t\t\t\t\t// add the project and its binary pkg fragment roots", "+\t\t\t\t\tIPackageFragmentRoot[] roots = project.getAllPackageFragmentRoots();", "+\t\t\t\t\tset.add(project.getPath());", "+\t\t\t\t\tfor (int k = 0; k < roots.length; k++) {", "+\t\t\t\t\t\tIPackageFragmentRoot pkgFragmentRoot = roots[k];", "+\t\t\t\t\t\tif (pkgFragmentRoot.getKind() == IPackageFragmentRoot.K_BINARY) {", "+\t\t\t\t\t\t\tset.add(pkgFragmentRoot.getPath());", "-\t\t\t\t\t\t// add the dependent projects", "-\t\t\t\t\t\tthis.computeDependents(project, set, visited);", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t// add the dependent projects", "+\t\t\t\t\tthis.computeDependents(project, set, visited);"]}], "num": 53176}