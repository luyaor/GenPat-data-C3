{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2674ec551d4cc01defc0006f20a52ee", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6241b8a346d760e77203fda2f7bf9bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "67744c35fb096b073b6eb207529145544c47d6b6", "commitAfterChange": "a69ec5abfba2adcf10fe50b7c7be7bc087bd47c7", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public IJavaElement[] findElements(IJavaElement element)", "signatureAfterChange": " public IJavaElement[] findElements(IJavaElement element)", "diff": ["-\t\tIJavaElement child = (IJavaElement)children.get(i);", "+\t\tJavaElement child = (JavaElement)children.get(i);", "-\t\t\t\tif (currentElement.getElementType() == IJavaElement.COMPILATION_UNIT) {", "-\t\t\t\t\tcurrentElement = ((ICompilationUnit)currentElement).getType(child.getElementName());", "-\t\t\t\t} else {", "-\t\t\t\t\tcurrentElement = ((IType)currentElement).getType(child.getElementName());", "+\t\t\t\tswitch (currentElement.getElementType()) {", "+\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT:", "+\t\t\t\t\t\tcurrentElement = ((ICompilationUnit)currentElement).getType(child.getElementName());", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaElement.TYPE:", "+\t\t\t\t\t\tcurrentElement = ((IType)currentElement).getType(child.getElementName());", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaElement.FIELD:", "+\t\t\t\t\tcase IJavaElement.INITIALIZER:", "+\t\t\t\t\tcase IJavaElement.METHOD:", "+\t\t\t\t\t\tcurrentElement =  ((IMember)currentElement).getType(child.getElementName(), child.occurrenceCount);", "+\t\t\t\t\t\tbreak;", "-\t\t\t\tcurrentElement = ((IType)currentElement).getInitializer(((JavaElement)child).getOccurrenceCount());", "+\t\t\t\tcurrentElement = ((IType)currentElement).getInitializer(child.occurrenceCount);", "-\t\t\t\treturn ((IType)currentElement).findMethods((IMethod)child);", "+\t\t\t\tcurrentElement = ((IType)currentElement).getMethod(child.getElementName(), ((IMethod)child).getParameterTypes());", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b44cb9a6b1f4f80172de44b4154ff826", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "67744c35fb096b073b6eb207529145544c47d6b6", "commitAfterChange": "a69ec5abfba2adcf10fe50b7c7be7bc087bd47c7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void enterType( \tint declarationStart, \tint modifiers, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[] superclass, \tchar[][] superinterfaces)", "signatureAfterChange": " protected void enterType( \tint declarationStart, \tint modifiers, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[] superclass, \tchar[][] superinterfaces)", "diff": ["-\tchar[] enclosingTypeName= null;", "-\tif (parentHandle.getElementType() == IJavaElement.COMPILATION_UNIT) {", "-\t\thandle = ((ICompilationUnit) parentHandle).getType(nameString);", "-\t\tif (packageName == null) {", "-\t\t\tqualifiedName= nameString.toCharArray();", "-\t\t} else {", "-\t\t\tqualifiedName= (new String(packageName) + \".\" + nameString).toCharArray(); //$NON-NLS-1$", "-\t\t}", "-\t}", "-\telse if (parentHandle.getElementType() == IJavaElement.TYPE) {", "-\t\thandle = ((IType) parentHandle).getType(nameString);", "-\t\tenclosingTypeName= ((SourceTypeElementInfo)parentInfo).getName();", "-\t\tqualifiedName= (new String(((SourceTypeElementInfo)parentInfo).getQualifiedName()) + \".\" + nameString).toCharArray(); //$NON-NLS-1$", "-\t}", "-\telse {", "-\t\tAssert.isTrue(false); // Should not happen", "+\tswitch(parentHandle.getElementType()) {", "+\t\tcase IJavaElement.COMPILATION_UNIT:", "+\t\t\thandle = ((ICompilationUnit) parentHandle).getType(nameString);", "+\t\t\tif (packageName == null) {", "+\t\t\t\tqualifiedName= nameString.toCharArray();", "+\t\t\t} else {", "+\t\t\t\tqualifiedName= (new String(packageName) + \".\" + nameString).toCharArray(); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase IJavaElement.TYPE:", "+\t\t\thandle = ((IType) parentHandle).getType(nameString);", "+\t\t\tqualifiedName= (new String(((SourceTypeElementInfo)parentInfo).getQualifiedName()) + \".\" + nameString).toCharArray(); //$NON-NLS-1$", "+\t\t\tbreak;", "+\t\tcase IJavaElement.FIELD:", "+\t\tcase IJavaElement.INITIALIZER:", "+\t\tcase IJavaElement.METHOD:", "+\t\t\thandle = ((IMember) parentHandle).getType(nameString, 1); //NB: occurenceCount is computed in resolveDuplicates", "+\t\t\tIType declaringType = (IType)parentHandle.getParent();", "+\t\t\t// TODO: (jerome) compute qualified name", "+\t\t\tqualifiedName= (declaringType.getFullyQualifiedName() + \".1.\" + nameString).toCharArray(); //$NON-NLS-1$", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\tAssert.isTrue(false); // Should not happen", "-\tinfo.setEnclosingTypeName(enclosingTypeName);"]}], "num": 65502}