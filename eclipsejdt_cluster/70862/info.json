{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef6a7d82e9968b20d5b62f24062c7d8f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f349d9598f64cbfeb5d6bacf5146046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "  boolean mustImplementAbstractMethod(ReferenceBinding declaringClass)", "signatureAfterChange": "  boolean mustImplementAbstractMethod(ReferenceBinding declaringClass)", "diff": ["+\tif (!mustImplementAbstractMethods()) return false;", "-\t\tif (this.type.implementsInterface(declaringClass, false)) {", "-\t\t\tif (this.type.isAbstract()) return false; // leave it for the subclasses", "+\t\tif (this.type.implementsInterface(declaringClass, false))", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6e52cb97b4e907a4d670569b9aa5987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "36f18984332c17b4f3416bf96bf11f035f368dfc", "commitAfterChange": "cfa46c438969c215e6ff9812212b2c63288e6c8a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private boolean mustImplementAbstractMethod(MethodBinding abstractMethod)", "signatureAfterChange": " private boolean mustImplementAbstractMethod(MethodBinding abstractMethod)", "diff": ["-\t\tif (this.type.implementsInterface(declaringClass, false))", "-\t\t\treturn !this.type.isAbstract();", "+\t\tif (this.type.implementsInterface(declaringClass, false)) {", "+\t\t\tif (this.type.isAbstract()) return false; // leave it for the subclasses", "+\t\t\tif (!superclass.implementsInterface(declaringClass, true)) // only if a superclass does not also implement the interface", "+\t\t\t\treturn true;", "+\t\t}"]}], "num": 70862}