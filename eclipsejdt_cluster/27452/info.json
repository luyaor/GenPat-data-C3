{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a8f9169b623a4dedba6be167218668a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb49ad73a54aab4496b11dca2d1a7ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tvoid buildFields()", "signatureAfterChange": "  \tvoid buildFields()", "diff": ["+\t\tboolean duplicate = false;", "+\t\t\t\t\tduplicate = true;", "+\t\t\t\t\tFieldBinding previousBinding = (FieldBinding) knownFieldNames.get(field.name);", "+\t\t\t\t\tif (previousBinding != null) {", "+\t\t\t\t\t\tfor (int f = 0; f < i; f++) {", "+\t\t\t\t\t\t\tFieldDeclaration previousField = fields[f];", "+\t\t\t\t\t\t\tif (previousField.binding == previousBinding) {", "+\t\t\t\t\t\t\t\tproblemReporter().duplicateFieldInType(sourceType, previousField);", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tknownFieldNames.put(field.name, null); // ensure that the duplicate field is found & removed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a41f163c696b4ba0dbd1a0c1cbfb45e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "c31c921d319cbf1346e5bfb26cf42ff15297484d", "commitAfterChange": "2becf6dcab514ae8708935b2b42eed94f2bad821", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tvoid buildFields()", "signatureAfterChange": "  \tvoid buildFields()", "diff": ["-\t\tboolean duplicate = false;", "-\t\t\t\t\tduplicate = true;", "-\t\t\t\t\tFieldBinding previousBinding = (FieldBinding) knownFieldNames.get(field.name);", "-\t\t\t\t\tif (previousBinding != null) {", "-\t\t\t\t\t\tfor (int f = 0; f < i; f++) {", "-\t\t\t\t\t\t\tFieldDeclaration previousField = fields[f];", "-\t\t\t\t\t\t\tif (previousField.binding == previousBinding) {", "-\t\t\t\t\t\t\t\tproblemReporter().duplicateFieldInType(sourceType, previousField);", "-\t\t\t\t\t\t\t\tpreviousField.binding = null;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tknownFieldNames.put(field.name, null); // ensure that the duplicate field is found & removed", "-\t\tif (duplicate) {", "-\t\t\tFieldBinding[] newFieldBindings = new FieldBinding[fieldBindings.length];", "-\t\t\t// we know we'll be removing at least 1 duplicate name", "-\t\t\tsize = count;", "-\t\t\tcount = 0;", "-\t\t\tfor (int i = 0; i < size; i++) {", "-\t\t\t\tFieldBinding fieldBinding = fieldBindings[i];", "-\t\t\t\tif (knownFieldNames.get(fieldBinding.name) != null) {", "-\t\t\t\t\tfieldBinding.id = count;", "-\t\t\t\t\tnewFieldBindings[count++] = fieldBinding;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tfieldBindings = newFieldBindings;", "-\t\t}"]}], "num": 27452}