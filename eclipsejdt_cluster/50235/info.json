{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2449de72cc60c352052d474e474f974c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9e8aa1c917196473fc358e80768d54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected boolean computeChildren(OpenableElementInfo info, Map newElements) throws JavaModelException", "signatureAfterChange": " \tprotected boolean computeChildren(OpenableElementInfo info, Map newElements) throws JavaModelException", "diff": ["-\t\t\tHashMap packageFragToTypes= new HashMap();", "+\t\t\tHashtableOfArrayToObject packageFragToTypes= new HashtableOfArrayToObject();", "-\t\t\tpackageFragToTypes.put(IPackageFragment.DEFAULT_PACKAGE_NAME, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\tpackageFragToTypes.put(CharOperation.NO_STRINGS, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "-\t\t\t\t\tint last = entryName.length() - 1;", "-\t\t\t\t\tentryName= entryName.substring(0, last);", "-\t\t\t\t\tentryName= entryName.replace('/', '.');", "+\t\t\t\t\tentryName= entryName.substring(0, entryName.length() - 1);", "+\t\t\t\t\tString[] names = CharOperation.toStrings(CharOperation.splitOn('/', entryName.toCharArray()));", "+\t\t\t\t\tint length = names.length;", "-\t\t\t\t\t\tif (packageFragToTypes.containsKey(entryName)) break;", "-\t\t\t\t\t\tpackageFragToTypes.put(entryName, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\t\t\t\tif (packageFragToTypes.containsKey(names)) break;", "+\t\t\t\t\t\tpackageFragToTypes.put(names, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "-\t\t\t\t\t\tif ((last = entryName.lastIndexOf('.')) < 0) break;", "-\t\t\t\t\t\tentryName = entryName.substring(0, last);", "+\t\t\t\t\t\tif (--length <= 0) break;", "+\t\t\t\t\t\tSystem.arraycopy(names, 0, names = new String[length], 0, length);", "-\t\t\t\t\tString packageName;", "+\t\t\t\t\tString[] names;", "-\t\t\t\t\t\tentryName= entryName.replace('/', '.');", "-\t\t\t\t\t\tpackageName= entryName.substring(0, lastSeparator);", "+\t\t\t\t\t\tchar[] packageName = new char[lastSeparator];", "+\t\t\t\t\t\tentryName.getChars(0, lastSeparator, packageName, 0);", "+\t\t\t\t\t\tnames = CharOperation.toStrings(CharOperation.splitOn('/', packageName));", "-\t\t\t\t\t\tpackageName =  IPackageFragment.DEFAULT_PACKAGE_NAME;", "+\t\t\t\t\t\tnames =  CharOperation.NO_STRINGS;", "-\t\t\t\t\tString currentPackageName = packageName;", "+\t\t\t\t\tString[] currentNames = names;", "+\t\t\t\t\tint length = currentNames.length;", "-\t\t\t\t\t\tif (packageFragToTypes.containsKey(currentPackageName)) break;", "-\t\t\t\t\t\tpackageFragToTypes.put(currentPackageName, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\t\t\t\tif (packageFragToTypes.containsKey(currentNames)) break;", "+\t\t\t\t\t\tpackageFragToTypes.put(currentNames, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "-\t\t\t\t\t\tint last;", "-\t\t\t\t\t\tif ((last = currentPackageName.lastIndexOf('.')) < 0) break;", "-\t\t\t\t\t\tcurrentPackageName = currentPackageName.substring(0, last);", "+\t\t\t\t\t\tif (--length <= 0) break;", "+\t\t\t\t\t\tSystem.arraycopy(currentNames, 0, currentNames = new String[length], 0, length);", "-\t\t\t\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(packageName);", "+\t\t\t\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(names);", "-\t\t\tIterator packages = packageFragToTypes.keySet().iterator();", "-\t\t\twhile (packages.hasNext()) {", "-\t\t\t\tString packName = (String) packages.next();", "+\t\t\tfor (int i = 0, length = packageFragToTypes.keyTable.length; i < length; i++) {", "+\t\t\t\tString[] pkgName = (String[]) packageFragToTypes.keyTable[i];", "+\t\t\t\tif (pkgName == null) continue;", "-\t\t\t\tArrayList[] entries= (ArrayList[]) packageFragToTypes.get(packName);", "-\t\t\t\tJarPackageFragment packFrag= (JarPackageFragment) getPackageFragment(packName);", "+\t\t\t\tArrayList[] entries= (ArrayList[]) packageFragToTypes.get(pkgName);", "+\t\t\t\tJarPackageFragment packFrag= (JarPackageFragment) getPackageFragment(pkgName);", "-\t\t\t\t\tpackFrag.computeNonJavaResources(NO_STRINGS, fragInfo, jar.getName());", "+\t\t\t\t\tpackFrag.computeNonJavaResources(CharOperation.NO_STRINGS, fragInfo, jar.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fffc1ab85dbaca342766cbfd485a7e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Openable createOpenable(String resourcePath, IJavaSearchScope scope)", "signatureAfterChange": " \tpublic Openable createOpenable(String resourcePath, IJavaSearchScope scope)", "diff": ["-\t\t\t\tthis.packageHandles= new HashMap(5);", "+\t\t\t\tthis.packageHandles= new HashtableOfArrayToObject(5);", "-\t\t\tint lastSlash= classFilePath.lastIndexOf('/');", "-\t\t\tString packageName= lastSlash > -1 ? classFilePath.substring(0, lastSlash).replace('/', '.') : IPackageFragment.DEFAULT_PACKAGE_NAME;", "-\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(packageName);", "-\t\t\tif (pkgFragment == null) {", "-\t\t\t\tpkgFragment= this.lastPkgFragmentRoot.getPackageFragment(packageName);", "-\t\t\t\tthis.packageHandles.put(packageName, pkgFragment);", "+\t\t\tString[] simpleNames = new Path(classFilePath).segments();", "+\t\t\tString[] pkgName;", "+\t\t\tint length = simpleNames.length-1;", "+\t\t\tif (length > 0) {", "+\t\t\t\tpkgName = new String[length];", "+\t\t\t\tSystem.arraycopy(simpleNames, 0, pkgName, 0, length);", "+\t\t\t} else {", "+\t\t\t\tpkgName = CharOperation.NO_STRINGS;", "-\t\t\tIClassFile classFile= pkgFragment.getClassFile(classFilePath.substring(lastSlash + 1));", "+\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(pkgName);", "+\t\t\tif (pkgFragment == null) {", "+\t\t\t\tpkgFragment= ((PackageFragmentRoot) this.lastPkgFragmentRoot).getPackageFragment(pkgName);", "+\t\t\t\tthis.packageHandles.put(pkgName, pkgFragment);", "+\t\t\t}", "+\t\t\tIClassFile classFile= pkgFragment.getClassFile(simpleNames[length]);", "-\t\t\tint length = -1;", "+\t\t\tint rootPathLength = -1;", "-\t\t\t\t\t&& (length = this.lastPkgFragmentRootPath.length()) > 0", "-\t\t\t\t\t&& resourcePath.charAt(length) == '/')) {", "+\t\t\t\t\t&& (rootPathLength = this.lastPkgFragmentRootPath.length()) > 0", "+\t\t\t\t\t&& resourcePath.charAt(rootPathLength) == '/')) {", "-\t\t\t\tthis.lastPkgFragmentRoot= root;", "-\t\t\t\tthis.lastPkgFragmentRootPath= this.lastPkgFragmentRoot.getPath().toString();", "-\t\t\t\tthis.packageHandles= new HashMap(5);", "+\t\t\t\tthis.lastPkgFragmentRoot = root;", "+\t\t\t\tthis.lastPkgFragmentRootPath = this.lastPkgFragmentRoot.getPath().toString();", "+\t\t\t\tthis.packageHandles = new HashtableOfArrayToObject(5);", "-\t\t\tint lastSlash= resourcePath.lastIndexOf(IPath.SEPARATOR);", "-\t\t\tString packageName= lastSlash > (length= this.lastPkgFragmentRootPath.length()) ? resourcePath.substring(length + 1, lastSlash).replace(IPath.SEPARATOR, '.') : IPackageFragment.DEFAULT_PACKAGE_NAME;", "-\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(packageName);", "-\t\t\tif (pkgFragment == null) {", "-\t\t\t\tpkgFragment= this.lastPkgFragmentRoot.getPackageFragment(packageName);", "-\t\t\t\tthis.packageHandles.put(packageName, pkgFragment);", "+\t\t\tresourcePath = resourcePath.substring(this.lastPkgFragmentRootPath.length() + 1);", "+\t\t\tString[] simpleNames = new Path(resourcePath).segments();", "+\t\t\tString[] pkgName;", "+\t\t\tint length = simpleNames.length-1;", "+\t\t\tif (length > 0) {", "+\t\t\t\tpkgName = new String[length];", "+\t\t\t\tSystem.arraycopy(simpleNames, 0, pkgName, 0, length);", "+\t\t\t} else {", "+\t\t\t\tpkgName = CharOperation.NO_STRINGS;", "-\t\t\tString simpleName= resourcePath.substring(lastSlash + 1);", "+\t\t\tIPackageFragment pkgFragment= (IPackageFragment) this.packageHandles.get(pkgName);", "+\t\t\tif (pkgFragment == null) {", "+\t\t\t\tpkgFragment= ((PackageFragmentRoot) this.lastPkgFragmentRoot).getPackageFragment(pkgName);", "+\t\t\t\tthis.packageHandles.put(pkgName, pkgFragment);", "+\t\t\t}", "+\t\t\tString simpleName= simpleNames[length];"]}], "num": 50235}