{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f48531e4f90f2c180518ece25bb8763c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17934cebd7377f964bdfa6755b03df6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "34f724a9738d7636a75842e2910c694725115548", "commitAfterChange": "9b49fc6edec0d13e82a14df97219e6ae294f74cc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException, IllegalArgumentException", "signatureAfterChange": "  \tprivate static void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException, IllegalArgumentException", "diff": ["-\tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature,", "+\tprivate static void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature,", "-\t\t\t// assemble full annotatedSignature:", "-\t\t\tswitch (updatePosition) {", "-\t\t\t\tcase POSITION_FULL_SIGNATURE:", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase POSITION_RETURN_TYPE:", "-\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, originalSignature, mergeStrategy);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, originalSignature, mergeStrategy);", "-\t\t\t}", "+\t\t\t// assemble full annotatedSignature (don't bother merging since no previous signature exists):", "+\t\t\tannotatedSignature = updateSignature(originalSignature, annotatedSignature, updatePosition, MergeStrategy.REPLACE_SIGNATURE);", "-\t\t\t\t\t\t\t\t\t\tif (updatePosition == POSITION_FULL_SIGNATURE) {", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = addAnnotationsTo(annotatedSignature, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t} else if (updatePosition == POSITION_RETURN_TYPE) {", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateSignature(annotationLine.trim(), annotatedSignature, updatePosition, mergeStrategy);", "-\t\t\t\tif (updatePosition == POSITION_FULL_SIGNATURE) {", "-\t\t\t\t\t// annotatedSignature is already complete", "-\t\t\t\t} else if (updatePosition == POSITION_RETURN_TYPE) {", "-\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, originalSignature, mergeStrategy);", "-\t\t\t\t} else {", "-\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, originalSignature, mergeStrategy);", "-\t\t\t\t}", "+\t\t\t\tannotatedSignature = updateSignature(originalSignature, annotatedSignature, updatePosition, mergeStrategy);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bf9e302b2f45846978a10282a7315a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "26de20ae619c91a55a35147a34aba32ab3111d61", "commitAfterChange": "6aa15157c4a89778b30fbac85a8e1c76029da034", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException", "signatureAfterChange": "  \tstatic void annotateMember(String typeName, IFile file, String selector, String originalSignature, String annotatedSignature, \t\t\t\t\t\t\t\t\t\tint updatePosition, MergeStrategy mergeStrategy, IProgressMonitor monitor) \t\t\tthrows CoreException, IOException, IllegalArgumentException", "diff": ["-\t\t\tthrows CoreException, IOException", "+\t\t\tthrows CoreException, IOException, IllegalArgumentException", "+\t\t\t\t\t\tif (line == null) {", "+\t\t\t\t\t\t\tbreak; // found only the selector at EOF, append right here, ignoring 'pending'", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tString nextLine = reader.readLine();", "-\t\t\t\t\t\t\tif (nextLine == null)", "-\t\t\t\t\t\t\t\tnextLine = line; // no annotated line yet, use unannotated line instead", "-\t\t\t\t\t\t\tif (nextLine.startsWith(\" \")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tString annotationLine = reader.readLine();", "+\t\t\t\t\t\t\tString nextLine = null;", "+\t\t\t\t\t\t\tif (annotationLine == null || annotationLine.isEmpty() || !annotationLine.startsWith(\" \")) { //$NON-NLS-1$", "+\t\t\t\t\t\t\t\tnextLine = annotationLine; // push back, since not a signature line", "+\t\t\t\t\t\t\t\tannotationLine = line; // no annotated line yet, use unannotated line instead", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (annotationLine.startsWith(\" \")) { //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = addAnnotationsTo(annotatedSignature, nextLine.trim(), mergeStrategy);", "+\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = addAnnotationsTo(annotatedSignature, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, nextLine.trim(), mergeStrategy);", "+\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateMethodReturnType(annotatedSignature, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, nextLine.trim(), mergeStrategy);", "+\t\t\t\t\t\t\t\t\t\t\tannotatedSignature = updateParameterType(annotatedSignature, updatePosition, annotationLine.trim(), mergeStrategy);", "-\t\t\t\t\t\t\t\tnextLine = null; // discard old annotated signature (may have been merged above)"]}], "num": 8642}