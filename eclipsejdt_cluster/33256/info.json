{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2626ffe82e1a190b8ea333b7b080bd0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8587f5d081ceb6e2750c5251947f5bc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "commitAfterChange": "39e213fa6f67cec1c2c3ab80a64ac8dcf4d5cf90", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " static char[] simpleName(char[] className)", "signatureAfterChange": " static String simpleName(char[] className)", "diff": ["-/* package */ static char[] simpleName(char[] className) {", "+/* package */ static String simpleName(char[] className) {", "-\tclassName = unqualifiedName(className);", "-\tint count = 0;", "-\tint lastPosition = className.length - 1;", "-\tfor (int i = lastPosition; i > -1; i--) {", "-\t\tif (className[i] == '$' && (i != lastPosition)) {", "-\t\t\tchar[] name = new char[count];", "-\t\t\tSystem.arraycopy(className, i + 1, name, 0, count);", "-\t\t\tif (Character.isDigit(name[0])) {", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\treturn name;", "-\t\t}", "-\t\tcount++;", "-\t}", "-\treturn className;", "+\tString simpleName = new String(unqualifiedName(className));", "+\tint lastDollar = simpleName.lastIndexOf('$');", "+\tif (lastDollar != -1) ", "+\t\treturn Util.localTypeName(simpleName, lastDollar, simpleName.length());", "+\telse", "+\t\treturn simpleName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afcbd2695ecb238ea2cc7f16d3aa447a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "7658885de020459a43d5c54a62e5511e4cf48903", "commitAfterChange": "effc87828d40c0b15d95e17b44487025194ac03b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate static char[] computeBaseNames(char firstName, char[][] prefixes, char[][] excludedNames)", "signatureAfterChange": " \t\tpublic void acceptNameWithPrefixAndSuffix(char[] name)", "diff": ["+\t\tprivate int otherResultsCount = 0;", "+\t\tpublic void acceptNameWithPrefixAndSuffix(char[] name) {", "+\t\t\tint length = prefixAndSuffixResults.length;", "+\t\t\tif(length == prefixAndSuffixResultsCount) {", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tprefixAndSuffixResults,", "+\t\t\t\t\t0,", "+\t\t\t\t\tprefixAndSuffixResults = new char[length * 2][],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\t}", "+\t\t\tprefixAndSuffixResults[prefixAndSuffixResultsCount++] = name;", "+\t\t}", "-\t", "-\tprivate static char[] computeBaseNames(char firstName, char[][] prefixes, char[][] excludedNames){", "-\t\tchar[] name = new char[]{firstName};", "-\t\t", "-\t\tfor(int i = 0 ; i < excludedNames.length ; i++){", "-\t\t\tif(CharOperation.equals(name, excludedNames[i], false)) {", "-\t\t\t\tname[0]++;", "-\t\t\t\tif(name[0] > 'z')", "-\t\t\t\t\tname[0] = 'a';", "-\t\t\t\tif(name[0] == firstName)", "-\t\t\t\t\treturn null;", "-\t\t\t\ti = 0;", "-\t\t\t}\t", "-\t\t}", "-\t\t", "-\t\treturn name;", "-\t}"]}], "num": 33256}