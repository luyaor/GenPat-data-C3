{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d24d91722c9167006b2747e0597668f6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0487d148a5aeb7b320f24194caaf9024", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d1604ec4aaf14502ebd4979c300c0ac9998996a1", "commitAfterChange": "e50fa330bbb302e8ef44446c0c3afc64880dfa01", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tprivate void formatEnumConstantArguments( \t\t\tEnumConstant enumConstant, \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyParameters, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstParameter,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma, \t\t\tint methodDeclarationParametersAlignment)", "signatureAfterChange": "  \tprivate void formatEnumConstantArguments( \t\t\tEnumConstant enumConstant, \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyParameters, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstParameter,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma, \t\t\tint methodDeclarationParametersAlignment)", "diff": ["-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, spaceBeforeOpenParen); ", "+\t\tif (!isNextToken(TerminalTokens.TokenNameLPAREN)) {", "+\t\t\treturn;", "+\t\t}", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, spaceBeforeOpenParen); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b4e53f61ae119079c16df0193abc410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "ed90bf75b4f2c74ce911da80d30092ece86b5cdf", "commitAfterChange": "f15aab9de9960906eb67d9f2e87d11e68c52ba31", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayAllocationExpression arrayAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayAllocationExpression arrayAllocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\tfinal Expression[] dimensions = arrayAllocationExpression.dimensions;", "-\t\t\tint dimensionsLength = dimensions.length;", "-\t\t\tfor (int i = 0; i < dimensionsLength; i++) {", "-\t\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_allocation_expression) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET, false);", "-\t\t\t\tif (dimensions[i] != null) {", "-\t\t\t\t\tif (this.preferences.insert_space_after_opening_bracket_in_array_allocation_expression) {", "+\t\t\tif (isNextToken(TerminalTokens.TokenNameLBRACKET)) {", "+\t\t\t\tfinal Expression[] dimensions = arrayAllocationExpression.dimensions;", "+\t\t\t\tint dimensionsLength = dimensions.length;", "+\t\t\t\tfor (int i = 0; i < dimensionsLength; i++) {", "+\t\t\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_allocation_expression) {", "-\t\t\t\t\tdimensions[i].traverse(this, scope);", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_before_closing_bracket_in_array_allocation_expression);", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_between_empty_brackets_in_array_allocation_expression);", "+\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET, false);", "+\t\t\t\t\tif (dimensions[i] != null) {", "+\t\t\t\t\t\tif (this.preferences.insert_space_after_opening_bracket_in_array_allocation_expression) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdimensions[i].traverse(this, scope);", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_before_closing_bracket_in_array_allocation_expression);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_between_empty_brackets_in_array_allocation_expression);", "+\t\t\t\t\t}"]}], "num": 22400}