{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74aced9a9e35cd32085d79100e4f1c9c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61dfa1cf2b3fbcffc7f80ee27326ffb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ed80be792854aeaafe85328a8925218265caeac6", "commitAfterChange": "87c02024c35caa7b296fc7c28fa066d1219c7ebd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate int compatibilityLevel18FromInner(MethodBinding method, InnerInferenceHelper innerInferenceHelper, Expression invocArg, int argLen, int i, boolean[] isVarArgs)", "signatureAfterChange": "  \tprivate int compatibilityLevel18FromInner(MethodBinding method, InnerInferenceHelper innerInferenceHelper, Expression invocArg, int argLen, int i, boolean[] isVarArgs)", "diff": ["-\t\t\tif (resolvedType.isCompatibleWith(targetType, this)) {", "-\t\t\t\treturn compatible;", "+\t\t\tint level = parameterCompatibilityLevel(resolvedType, targetType);", "+\t\t\tif (level != NOT_COMPATIBLE) {", "+\t\t\t\treturn Math.max(compatible, level);", "-\t\t\t\t\t\t\tif (solution.returnType != null && solution.returnType.isCompatibleWith(targetType, this))", "-\t\t\t\t\t\t\t\treturn compatible;", "+\t\t\t\t\t\t\tif (solution.returnType != null) {", "+\t\t\t\t\t\t\t\tlevel = parameterCompatibilityLevel(solution.returnType, targetType);", "+\t\t\t\t\t\t\t\tif (level != NOT_COMPATIBLE)", "+\t\t\t\t\t\t\t\t\treturn Math.max(compatible, level);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85080bdcd2f21f6fe0fa62298931ee4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "786bdcb54629de0c38fe45d8c9c539f76fe7da89", "commitAfterChange": "0f2bcb9853eb25fef3d26daa6737dcdc0dcad109", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\tif (!original.returnType.isCompatibleWith(original2.returnType) &&", "-\t\t\t\t\t\t\t\t!original.returnType.erasure().isCompatibleWith(original2.returnType.erasure())) {", "-\t\t\t\t\t\t\t// 15.12.2", "-\t\t\t\t\t\t\tcontinue nextSpecific; // choose original2 instead", "+\t\t\t\t\t\tif (original.returnType != original2.returnType) {", "+\t\t\t\t\t\t\tif (!current.returnType.isCompatibleWith(next.returnType)) ", "+\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "+\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\t// continue with original 15.12.2"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c406a086015bd504799000f2572f1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f08399b6c3b85028e58f14c2c7d9ea2ab9a83a79", "commitAfterChange": "3575e4b916e9151da43f7d5bca2f917975264d4c", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\t\tif (!current.returnType.isCompatibleWith(next.returnType)) ", "+\t\t\t\t\t\t\tif (current instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "+\t\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\t} else if (!current.returnType.isCompatibleWith(next.returnType)) { ", "-\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "-\t\t\t\t\t\t\t\tcontinue nextSpecific;", "-\t\t\t\t\t\t\t// continue with original 15.12.2", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// continue with original 15.12.2.5"]}], "num": 63990}