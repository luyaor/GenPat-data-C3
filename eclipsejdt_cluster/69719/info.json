{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d3a16c5219cd484b6940a95c02dec20", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514f448033e79c4b556462eeb12c75bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "fe7b697ca16cd240df01b1ad29e35b2693b4b160", "commitAfterChange": "68fbbc2b696126776a21b18e5e10fb30f89536f0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t\tIBuffer originalBuffer = original.getBuffer();", "+\t\tIBuffer originalBuffer = null;", "+\t\ttry {", "+\t\t\toriginalBuffer = original.getBuffer();", "+\t\t} catch (JavaModelException e) {", "+\t\t\t// original element does not exist: create an empty working copy", "+\t\t\tif (!e.getJavaModelStatus().isDoesNotExist()) {", "+\t\t\t\tthrow e;", "+\t\t\t}", "+\t\t}", "+\t\t} else {", "+\t\t\t// initialize buffer", "+\t\t\tbuffer.setContents(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98d48ae777927fbe508f7b7c4a3ae974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "604298d13eaffeb766abfa79eb09d901201aecf4", "commitAfterChange": "cf30648cc59345d34e916584323c77b27d34f7aa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public ISourceRange getJavadocRange() throws JavaModelException", "signatureAfterChange": " public ISourceRange getJavadocRange() throws JavaModelException", "diff": ["-\tIBuffer buf= this.isBinary() ? this.getClassFile().getBuffer() : this.getCompilationUnit().getBuffer();", "+\tIBuffer buf= null;", "+\tif (this.isBinary()) {", "+\t\tbuf = this.getClassFile().getBuffer();", "+\t} else {", "+\t\tICompilationUnit compilationUnit = this.getCompilationUnit();", "+\t\tif (!compilationUnit.isConsistent()) {", "+\t\t\treturn null;", "+\t\t}", "+\t\tbuf = compilationUnit.getBuffer();", "+\t}"]}], "num": 69719}