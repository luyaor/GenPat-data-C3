{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "615c54f8e4cc4210f8be7e3636467462", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b0a3f4eec2e1df8e851764a5f7f2d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "43f3a189f4f6b7c529ad1da65b2b4f283b06b3dc", "commitAfterChange": "191f90d8b8e3d032d6a88890167c13d9311990d0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " private TypeBinding findDefaultNullness(MethodBinding methodBinding, LookupEnvironment environment)", "signatureAfterChange": " private TypeBinding findDefaultNullness(Scope currentScope, LookupEnvironment environment)", "diff": ["-private TypeBinding findDefaultNullness(MethodBinding methodBinding, LookupEnvironment environment) {", "+private TypeBinding findDefaultNullness(Scope currentScope, LookupEnvironment environment) {", "-\t// method", "-\tTypeBinding annotationBinding = environment.getNullAnnotationBindingFromDefault(methodBinding.tagBits, true/*resolve*/);", "-\tif (annotationBinding != null)", "-\t\treturn annotationBinding;", "-", "-\t// type", "-\tReferenceBinding type = methodBinding.declaringClass;", "-\tReferenceBinding currentType = type;", "-\twhile (currentType instanceof SourceTypeBinding) {", "-\t\tannotationBinding = ((SourceTypeBinding) currentType).getNullnessDefaultAnnotation();", "-\t\tif (annotationBinding != null)", "-\t\t\treturn annotationBinding;", "-\t\tif (currentType.isLocalType()) {", "-\t\t\t// if direct enclosing is a method travel that way:", "-\t\t\tMethodBinding enclosingMethod = ((LocalTypeBinding)currentType).enclosingMethod;", "-\t\t\tif (enclosingMethod != null)", "-\t\t\t\treturn findDefaultNullness(enclosingMethod, environment);", "+\tSourceTypeBinding currentType = null;", "+\tTypeBinding annotationBinding;", "+\twhile (currentScope != null) {", "+\t\tswitch (currentScope.kind) {", "+\t\t\tcase Scope.METHOD_SCOPE:", "+\t\t\t\tAbstractMethodDeclaration referenceMethod = ((MethodScope)currentScope).referenceMethod();", "+\t\t\t\tif (referenceMethod != null && referenceMethod.binding != null) {", "+\t\t\t\t\tannotationBinding = environment.getNullAnnotationBindingFromDefault(referenceMethod.binding.tagBits, true/*resolve*/);", "+\t\t\t\t\tif (annotationBinding != null)", "+\t\t\t\t\t\treturn annotationBinding;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase Scope.CLASS_SCOPE:", "+\t\t\t\tcurrentType = ((ClassScope)currentScope).referenceContext.binding;", "+\t\t\t\tif (currentType != null) {", "+\t\t\t\t\tannotationBinding = currentType.getNullnessDefaultAnnotation();", "+\t\t\t\t\tif (annotationBinding != null)", "+\t\t\t\t\t\treturn annotationBinding;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "-\t\tcurrentType = currentType.enclosingType();", "+\t\tcurrentScope = currentScope.parent;", "-\tannotationBinding = type.getPackage().getNullnessDefaultAnnotation(this.scope);", "-\tif (annotationBinding != null)", "-\t\treturn annotationBinding;", "+\tif (currentType != null) {", "+\t\tannotationBinding = currentType.getPackage().getNullnessDefaultAnnotation(this.scope);", "+\t\tif (annotationBinding != null)", "+\t\t\treturn annotationBinding;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e87d6f5e86f3d2a351c7bf7bd093715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "commitAfterChange": "4817a4bde9db799e7a793068d64037f59bfa521f", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 47, "signatureBeforeChange": " private TypeBinding findDefaultNullness(Scope currentScope, LookupEnvironment environment)", "signatureAfterChange": " private int findNonNullDefault(Scope currentScope, LookupEnvironment environment)", "diff": ["-private TypeBinding findDefaultNullness(Scope currentScope, LookupEnvironment environment) {", "+private int findNonNullDefault(Scope currentScope, LookupEnvironment environment) {", "-\tTypeBinding annotationBinding;", "-\t\t\t\t\tannotationBinding = environment.getNullAnnotationBindingFromDefault(referenceMethod.binding.tagBits, true/*resolve*/);", "-\t\t\t\t\tif (annotationBinding != null)", "-\t\t\t\t\t\treturn annotationBinding;", "+\t\t\t\t\tlong methodTagBits = referenceMethod.binding.tagBits;", "+\t\t\t\t\tif ((methodTagBits & TagBits.AnnotationNonNullByDefault) != 0)", "+\t\t\t\t\t\treturn NONNULL_BY_DEFAULT;", "+\t\t\t\t\tif ((methodTagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0)", "+\t\t\t\t\t\treturn NULL_UNSPECIFIED_BY_DEFAULT;", "-\t\t\t\t\tannotationBinding = currentType.getNullnessDefaultAnnotation();", "-\t\t\t\t\tif (annotationBinding != null)", "-\t\t\t\t\t\treturn annotationBinding;", "+\t\t\t\t\tint foundDefaultNullness = currentType.defaultNullness;", "+\t\t\t\t\tif (foundDefaultNullness != NO_NULL_DEFAULT) {", "+\t\t\t\t\t\treturn foundDefaultNullness;", "+\t\t\t\t\t}", "-\t\tannotationBinding = currentType.getPackage().getNullnessDefaultAnnotation(this.scope);", "-\t\tif (annotationBinding != null)", "-\t\t\treturn annotationBinding;", "+\t\tint foundDefaultNullness = currentType.getPackage().defaultNullness;", "+\t\tif (foundDefaultNullness != NO_NULL_DEFAULT) {", "+\t\t\treturn foundDefaultNullness;", "+\t\t}", "-\tlong defaultNullness = environment.globalOptions.defaultNonNullness;", "-\tif (defaultNullness != 0) {", "-\t\t// we have a default, so we need an annotation type to record this during compile and in the byte code", "-\t\tannotationBinding = environment.getNullAnnotationBinding(defaultNullness, true/*resolve*/);", "-\t\tif (annotationBinding != null)", "-\t\t\treturn annotationBinding;", "-", "-\t\t// on this branch default was not defined using an annotation, thus annotation type can still be missing", "-\t\tif (defaultNullness == TagBits.AnnotationNonNull)", "-\t\t\tthis.scope.problemReporter().missingNullAnnotationType(environment.getNonNullAnnotationName());", "-\t\telse", "-\t\t\tthis.scope.problemReporter().abortDueToInternalError(\"Illegal default nullness value: \"+defaultNullness); //$NON-NLS-1$", "-\t\t// reset default to avoid duplicate errors:", "-\t\tenvironment.globalOptions.defaultNonNullness = 0;", "-\t}", "-\treturn null;", "+\tif (environment.globalOptions.defaultNonNullness == TagBits.AnnotationNonNull)", "+\t\treturn NONNULL_BY_DEFAULT;", "+\treturn NO_NULL_DEFAULT;"]}], "num": 48728}