{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a62fbba2ab87e2623e18e4e308a0f12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3b22c7851795f853d972cbcef665e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "88bd9c51ebfccd9b68ad18488d485e1a7c491cf8", "commitAfterChange": "955b02c11176bc9ea7783a0c545a5026fedbdadc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "\r \r \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\tTypeBinding exceptionArgumentTB = exceptionArgument.resolveType(scope);\r", "-\t\t\texceptionArgument.implicitConversion = (exceptionArgumentTB.id << 4) + exceptionArgumentTB.id;\r", "+\t\t\tTypeBinding exceptionArgumentType = exceptionArgument.resolveType(scope);\r", "+\t\t\tif (exceptionArgumentType.id == T_void){\r", "+\t\t\t\tscope.problemReporter().illegalVoidExpression(exceptionArgument);\r", "+\t\t\t}\r", "+\t\t\texceptionArgument.implicitConversion = (exceptionArgumentType.id << 4) + exceptionArgumentType.id;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da22f273e4806133310de42d5be629db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "c2e1b19147149cbb623e6a2a40f8f224348d89bd", "commitAfterChange": "6f6b135c3443a1f802996624e28e3fccc1ffade1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "\r \r \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\tif (exceptionArgumentType.id == T_void){\r", "-\t\t\t\tscope.problemReporter().illegalVoidExpression(exceptionArgument);\r", "+\t\t\tif (exceptionArgumentType != null){\r", "+\t\t\t\tif (exceptionArgumentType.id == T_void){\r", "+\t\t\t\t\tscope.problemReporter().illegalVoidExpression(exceptionArgument);\r", "+\t\t\t\t}\r", "+\t\t\t\texceptionArgument.implicitConversion = (exceptionArgumentType.id << 4) + exceptionArgumentType.id;\r", "-\t\t\texceptionArgument.implicitConversion = (exceptionArgumentType.id << 4) + exceptionArgumentType.id;\r"]}], "num": 25598}