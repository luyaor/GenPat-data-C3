{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b3eada9d79ff727861dc66447f74ace", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034a72e15a7576eaefee5edc0e570a5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "0c486e9f722d5cf66150a2a8bb111fadf3c196f6", "commitAfterChange": "5e6cea593f4be5a13a34ce02970d8b34d029a673", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void addTypeParameter(TypeParameterInfo typeParameterInfo)", "signatureAfterChange": " public void addTypeParameter(TypeParameterInfo typeParameterInfo)", "diff": ["-\t\tcurrentMethod.typeParameterBounds = new char[][][] {typeParameterInfo.typeParameterBounds};", "+\t\tcurrentMethod.typeParameterBounds = new char[][][] {typeParameterInfo.bounds};", "-\t\tcurrentMethod.typeParameterBounds[length] = typeParameterInfo.typeParameterBounds;", "+\t\tcurrentMethod.typeParameterBounds[length] = typeParameterInfo.bounds;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b193b62beb4f8a871402ed2cd91f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "1e3d7a95c39c7aac1cb5e09a719efdb30a9bf701", "commitAfterChange": "1df126b77b08d354ebfd5eda6a44830d9266b61e", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void testTypeParameter() throws JavaModelException", "signatureAfterChange": " \tpublic void testTypeParameter() throws JavaModelException", "diff": ["+\t\tassertEquals(\"Wrong type\", IJavaElement.TYPE_PARAMETER, element.getElementType());", "+\t\tITypeParameter typeParameter = (ITypeParameter) element;", "+\t\tfinal ITypeRoot typeRoot = typeParameter.getTypeRoot();", "+\t\tassertNotNull(\"Not type root\", typeRoot);", "+\t\tassertTrue(\"Invalid\", typeRoot.exists());"]}], "num": 11053}