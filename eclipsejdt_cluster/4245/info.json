{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "453642691802a1adc839fd6ced8cd5f9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cd544666987ea9b4a28c7fc6df15d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprotected void saveClasspathIfNecessary() throws JavaModelException", "signatureAfterChange": "  \tprotected void saveClasspathIfNecessary() throws JavaModelException", "diff": ["-\t\tthis.hasModifiedResource = project.saveClasspath(classpathForSave, outputLocationForSave);", "+\t\tif (project.saveClasspath(classpathForSave, outputLocationForSave)) {", "+\t\t\tthis.setAttribute(\"hasModifiedResource\", \"true\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baac81f504f583a1abf34f607699212c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateElementInCUOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["- */", "-protected void executeOperation() throws JavaModelException {", "-\ttry {", "-\t\tbeginTask(getMainTaskName(), getMainAmountOfWork());", "-\t\tJavaElementDelta delta = newJavaElementDelta();", "-\t\tICompilationUnit unit = getCompilationUnit();", "-\t\tgenerateNewCompilationUnitDOM(unit);", "-\t\tif (fCreationOccurred) {", "-\t\t\t//a change has really occurred", "-\t\t\tIBuffer buffer = unit.getBuffer();", "-\t\t\tif (buffer  == null) return;", "-\t\t\tchar[] bufferContents = buffer.getCharacters();", "-\t\t\tif (bufferContents == null) return;", "-\t\t\tchar[] elementContents = org.eclipse.jdt.internal.core.Util.normalizeCRs(fCreatedElement.getCharacters(), bufferContents);", "-\t\t\tswitch (fReplacementLength) {", "-\t\t\t\tcase -1 : ", "-\t\t\t\t\t// element is append at the end", "-\t\t\t\t\tbuffer.append(elementContents);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase 0 :", "-\t\t\t\t\t// element is inserted", "-\t\t\t\t\tbuffer.replace(fInsertionPosition, 0, elementContents);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault :", "-\t\t\t\t\t// element is replacing the previous one", "-\t\t\t\t\tbuffer.replace(fInsertionPosition, fReplacementLength, elementContents);", "+\t */", "+\tprotected void executeOperation() throws JavaModelException {", "+\t\ttry {", "+\t\t\tbeginTask(getMainTaskName(), getMainAmountOfWork());", "+\t\t\tJavaElementDelta delta = newJavaElementDelta();", "+\t\t\tICompilationUnit unit = getCompilationUnit();", "+\t\t\tgenerateNewCompilationUnitDOM(unit);", "+\t\t\tif (fCreationOccurred) {", "+\t\t\t\t//a change has really occurred", "+\t\t\t\tIBuffer buffer = unit.getBuffer();", "+\t\t\t\tif (buffer  == null) return;", "+\t\t\t\tchar[] bufferContents = buffer.getCharacters();", "+\t\t\t\tif (bufferContents == null) return;", "+\t\t\t\tchar[] elementContents = org.eclipse.jdt.internal.core.Util.normalizeCRs(fCreatedElement.getCharacters(), bufferContents);", "+\t\t\t\tswitch (fReplacementLength) {", "+\t\t\t\t\tcase -1 : ", "+\t\t\t\t\t\t// element is append at the end", "+\t\t\t\t\t\tbuffer.append(elementContents);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase 0 :", "+\t\t\t\t\t\t// element is inserted", "+\t\t\t\t\t\tbuffer.replace(fInsertionPosition, 0, elementContents);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault :", "+\t\t\t\t\t\t// element is replacing the previous one", "+\t\t\t\t\t\tbuffer.replace(fInsertionPosition, fReplacementLength, elementContents);", "+\t\t\t\t}", "+\t\t\t\tunit.save(null, false);", "+\t\t\t\tboolean isWorkingCopy = unit.isWorkingCopy();", "+\t\t\t\tif (!isWorkingCopy)", "+\t\t\t\t\tthis.setAttribute(\"hasModifiedResource\", \"true\");", "+\t\t\t\tworked(1);", "+\t\t\t\tfResultElements = generateResultHandles();", "+\t\t\t\tif (!isWorkingCopy) { // if unit is working copy, then save will have already fired the delta", "+\t\t\t\t\tif (unit.getParent().exists()) {", "+\t\t\t\t\t\tfor (int i = 0; i < fResultElements.length; i++) {", "+\t\t\t\t\t\t\tdelta.added(fResultElements[i]);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\taddDelta(delta);", "+\t\t\t\t\t} // else unit is created outside classpath", "+\t\t\t\t\t  // non-java resource delta will be notified by delta processor", "+\t\t\t\t}", "-\t\t\tunit.save(null, false);", "-\t\t\tboolean isWorkingCopy = unit.isWorkingCopy();", "-\t\t\tthis.hasModifiedResource = !isWorkingCopy;", "-\t\t\tworked(1);", "-\t\t\tfResultElements = generateResultHandles();", "-\t\t\tif (!isWorkingCopy) { // if unit is working copy, then save will have already fired the delta", "-\t\t\t\tif (unit.getParent().exists()) {", "-\t\t\t\t\tfor (int i = 0; i < fResultElements.length; i++) {", "-\t\t\t\t\t\tdelta.added(fResultElements[i]);", "-\t\t\t\t\t}", "-\t\t\t\t\taddDelta(delta);", "-\t\t\t\t} // else unit is created outside classpath", "-\t\t\t\t  // non-java resource delta will be notified by delta processor", "+\t\t} finally {", "+\t\t\tdone();", "+\t\t}", "+\t}", "-\t} finally {", "-\t\tdone();", "-}"]}], "num": 4245}