{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ca5d8f61db8de4f30d55af532eba341", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d01d86d2f101ce244f74600e97e708c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " public void test402609b()", "signatureAfterChange": " public void test402609b()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tf(super::foo);\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Cannot directly invoke the abstract method foo() for the type Y\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c503190ed2d923259ca99e9af5656c91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GrammarCoverageTests308.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test038() throws Exception", "signatureAfterChange": " \tpublic void test038() throws Exception", "diff": ["-\t\t\t\t\"----------\\n\"", "-\t\t\t\t);", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\t\"\ti = @Marker W<@Marker Integer>::<@Marker String> new;\\n\" + ", "+\t\t\t\t\"\t                                  ^^^^^^\\n\" + ", "+\t\t\t\t\"Marker cannot be resolved to a type\\n\" + ", "+\t\t\t\t\"----------\\n\");"]}], "num": 66795}