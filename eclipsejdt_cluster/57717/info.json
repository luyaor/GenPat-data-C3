{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00e21cf5dd02b7094f06a30a9ce1b274", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "219843442bcb900cb354eb3a2c93a714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": " \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["-\t\tIPath outputLocation = null;", "-\t\tif (this.isOpen()) {", "-\t\t\tJavaProjectElementInfo info = getJavaProjectElementInfo();", "-\t\t\toutputLocation = info.getOutputLocation();", "-\t\t\tif (outputLocation != null) {", "-\t\t\t\treturn outputLocation;", "-\t\t\t}", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = getJavaModelManager().getPerProjectInfoCheckExistence(fProject);", "+\t\tIPath outputLocation = perProjectInfo.outputLocation;", "+\t\tif (outputLocation != null) return outputLocation;", "+", "+\t\t// force to read classpath - will position output location as well", "+\t\tthis.getRawClasspath();", "+\t\toutputLocation = perProjectInfo.outputLocation;", "+\t\tif (outputLocation == null) {", "-\t\t// if not already opened, then read from file (avoid populating the model for CP question)", "-\t\tif (!this.getProject().exists()){", "-\t\t\tthrow newNotPresentException();", "-\t\t}", "-\t\tIClasspathEntry[] classpath = this.readClasspathFile(false/*don't create markers*/, true/*log problems*/);", "-", "-\t\t// extract out the output location", "-\t\tif (classpath != null && classpath.length > 0) {", "-\t\t\tIClasspathEntry entry = classpath[classpath.length - 1];", "-\t\t\tif (entry.getContentKind() == ClasspathEntry.K_OUTPUT) {", "-\t\t\t\toutputLocation = entry.getPath();", "-\t\t\t}", "-\t\t}", "-\t\tif (outputLocation != null) {", "-\t\t\treturn outputLocation;", "-\t\t}", "-\t\treturn defaultOutputLocation();", "+\t\treturn outputLocation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d5177b8fda0b60de04b7777042045f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "commitAfterChange": "15b09e3657f237aa7526b08315f9749226cbc20e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (this.currentLine != null && this.currentLine.size() != 0) {", "-\t\t\t\t\t\t\tparseTags(false);", "-\t\t\t\t\t\t}", "-\t\t\t\t\tif (this.currentLine != null){ // check for presence of\tNLS tags", "-\t\t\t\t\t\tthis.currentLine.add(", "-\t\t\t\t\t\t\tnew StringLiteral(", "-\t\t\t\t\t\t\t\tgetCurrentTokenSourceString(), ", "-\t\t\t\t\t\t\t\tthis.startPosition, ", "-\t\t\t\t\t\t\t\tthis.currentPosition - 1));", "-\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "-\t\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\t\tif (this.checkNonExternalizedStringLiterals) {", "+\t\t\t\t\t\t\t\t\t\tparseTags();", "-\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "-\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\tif (this.checkNonExternalizedStringLiterals) {", "+\t\t\t\t\t\t\t\t\tparseTags();", "-\t\t\t\t\t\t\t\t\tif (this.currentLine != null && this.currentLine.size() != 0) {", "-\t\t\t\t\t\t\t\t\t\tparseTags(false);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif (this.currentLine != null && this.currentLine.size() != 0) {", "-\t\t\t\t\t\t\t\t\t\t\tparseTags(false);", "-\t\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf30ec788f79a9ae1e67ca913366d99b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "commitAfterChange": "15b09e3657f237aa7526b08315f9749226cbc20e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (this.currentLine != null && this.currentLine.size() != 0) {", "-\t\t\t\t\t\t\tparseTags(false);", "-\t\t\t\t\t\t}", "-\t\t\t\t\tif (this.currentLine != null){ // check for presence of\tNLS tags", "-\t\t\t\t\t\tthis.currentLine.add(", "-\t\t\t\t\t\t\tnew StringLiteral(", "-\t\t\t\t\t\t\t\tgetCurrentTokenSourceString(), ", "-\t\t\t\t\t\t\t\tthis.startPosition, ", "-\t\t\t\t\t\t\t\tthis.currentPosition - 1));", "-\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "-\t\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\t\tif (this.checkNonExternalizedStringLiterals) {", "+\t\t\t\t\t\t\t\t\t\tparseTags();", "-\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "-\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\tif (this.checkNonExternalizedStringLiterals) {", "+\t\t\t\t\t\t\t\t\tparseTags();", "-\t\t\t\t\t\t\t\t\tif (this.currentLine != null && this.currentLine.size() != 0) {", "-\t\t\t\t\t\t\t\t\t\tparseTags(false);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif (this.currentLine != null && this.currentLine.size() != 0) {", "-\t\t\t\t\t\t\t\t\t\t\tparseTags(false);", "-\t\t\t\t\t\t\t\t\t\t}"]}], "num": 57717}