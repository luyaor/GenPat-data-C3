{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f49243017380a470ea7fce402f36351", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e5a8961f565df320346e83df0eb8a4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "6486279fd39d7600a3c581a75f5a979b2834ec56", "commitAfterChange": "ec093de0c723a8394ab4c83656f6e94579a11225", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private static void initProfiles()", "signatureAfterChange": "  private static void initProfiles(StringBuffer buffer)", "diff": ["-private static void initProfiles() {", "+private static void initProfiles(StringBuffer buffer) {", "+\tboolean profile = NO_COMMENTS;", "+\t \t} else {", "+\t \t\tprofile = true;", "+\t \t} else {", "+\t \t\tprofile = true;", "+\t}", "+\tif (profile) {", "+\t\tbuffer.append(\"Profiles  : \");", "+\t\tString separator = \"\";", "+\t\tif (JOIN_LINES != null) {", "+\t\t\tbuffer.append(\"join_lines=\"+JOIN_LINES);", "+\t\t\tseparator = \", \";", "+\t\t}", "+\t\tif (NO_COMMENTS) {", "+\t\t\tbuffer.append(separator+\"no_comments\");", "+\t\t\tseparator = \", \";", "+\t\t}", "+\t\tif (BRACES != null) {", "+\t\t\tbuffer.append(separator+\"braces=\"+BRACES);", "+\t\t}", "+\t\tbuffer.append(LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824b759da79eba3db31eb64c8655f30f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r private NameEnvironmentAnswer findClass(char[] name, char[][] packageName)", "signatureAfterChange": "\r \r private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-private NameEnvironmentAnswer findClass(char[] name, char[][] packageName) {\r", "+private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName) {\r", "-\t\tString fullName = assembleName(name, packageName, '/');\r", "-\t\t\tif (fullName.equals(initialTypeNames[i]))\r", "+\t\t\tif (qualifiedTypeName.equals(initialTypeNames[i]))\r", "+\r", "+\tString qualifiedBinaryFileName = qualifiedTypeName + \".class\"; //$NON-NLS-1$\r", "+\tString binaryFileName = qualifiedBinaryFileName;\r", "+\tString qualifiedPackageName =  \"\"; //$NON-NLS-1$\r", "+\tif (qualifiedTypeName.length() > typeName.length) {\r", "+\t\tint typeNameStart = qualifiedBinaryFileName.length() - typeName.length - 6; // size of \".class\"\r", "+\t\tqualifiedPackageName =  qualifiedBinaryFileName.substring(0, typeNameStart - 1);\r", "+\t\tbinaryFileName = qualifiedBinaryFileName.substring(typeNameStart);\r", "+\t}\r", "-\t\tNameEnvironmentAnswer answer = classpathLocations[i].findClass(name, packageName);\r", "+\t\tNameEnvironmentAnswer answer = classpathLocations[i].findClass(binaryFileName, qualifiedPackageName, qualifiedBinaryFileName);\r", "-\treturn null; \r", "+\treturn null;\r"]}], "num": 67814}