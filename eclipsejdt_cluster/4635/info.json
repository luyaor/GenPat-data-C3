{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "540877665d53421457163ca93ad39a65", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b8cb212deafcd1f0ec15259eb720bbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": " private static char[][] enclosingTypeNames(IType type)", "signatureAfterChange": " private static char[][] enclosingTypeNames(IType type)", "diff": ["-\t\t\tif (declaringType == null) {", "-\t\t\t\treturn CharOperation.NO_CHAR_CHAR;", "-\t\t\t} else {", "-\t\t\t\treturn CharOperation.arrayConcat(", "-\t\t\t\t\tenclosingTypeNames(declaringType), ", "-\t\t\t\t\tdeclaringType.getElementName().toCharArray());", "-\t\t\t}", "+\t\t\tif (declaringType == null) return CharOperation.NO_CHAR_CHAR;", "+\t\t\treturn CharOperation.arrayConcat(", "+\t\t\t\tenclosingTypeNames(declaringType), ", "+\t\t\t\tdeclaringType.getElementName().toCharArray());", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ec1c72aa8ef33713136205dd8fc9491", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public FieldBinding addSyntheticFieldForInnerclass(ReferenceBinding enclosingType)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForInnerclass(ReferenceBinding enclosingType)", "diff": ["-", "-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[FIELD_EMUL] == null) {", "+\tif (synthetics[FIELD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e8b49a64584f60205ffcce5037bb65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue)", "diff": ["-\t\t&& localDeclaration.declarationSourceStart > fieldDeclaration.declarationSourceEnd){", "-\t\tif (parent == null) {", "-\t\t\treturn this; // ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(localDeclaration, bracketBalanceValue);", "-\t\t}", "+\t\t\t&& localDeclaration.declarationSourceStart > fieldDeclaration.declarationSourceEnd){", "+\t\tif (parent == null) return this; // ignore", "+\t\treturn this.parent.add(localDeclaration, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f62239fa37a482f8f414896dd06353", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean compile(String[] argv)", "signatureAfterChange": " \tpublic boolean compile(String[] argv)", "diff": ["-\t\tif (this.globalErrorsCount == 0){", "+\t\tif (this.globalErrorsCount == 0)", "-\t\t} else {", "-\t\t\treturn false;", "-\t\t}", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37e65bbd5f5d79efbdb3904374a016f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "0d26cebfc5ac438f5812d87a88435e81d289bbea", "commitAfterChange": "51bd97b9a16ddeaff77cec180dcadc8f8924a66a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": " public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\t\t\t\tMethodBinding method = this.methods[imethod];\t\t\t", "+\t\t\t\tMethodBinding method = this.methods[imethod];", "-\t\t\tif (length > 1) \tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "+\t\t\tif (length > 1)", "+\t\t\t\tReferenceBinding.sortMethods(this.methods, 0, length - 1);", "-\t\t\t\t\tfor (int iarg = 0; iarg < argCount; iarg++) {", "-\t\t\t\t\t\tif (toMatch[iarg] != argumentTypes[iarg]) {", "+\t\t\t\t\tfor (int iarg = 0; iarg < argCount; iarg++)", "+\t\t\t\t\t\tif (toMatch[iarg] != argumentTypes[iarg])", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3edc0b86b10871d1b2916e31c8cc6fc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic FlowContext getTargetContextForDefaultContinue()", "signatureAfterChange": " \tpublic FlowContext getTargetContextForDefaultContinue()", "diff": ["-\t\t\t\tif (lastNonReturningSubRoutine == null) {", "+\t\t\t\tif (lastNonReturningSubRoutine == null)", "-\t\t\t\t} else {", "-\t\t\t\t\treturn lastNonReturningSubRoutine;", "-\t\t\t\t}", "+\t\t\t\treturn lastNonReturningSubRoutine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4655b75c3a438b459ea67abbdd9608f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "b47007cd56be56e518f691f00411ed594be67102", "commitAfterChange": "eaa2c28fb9983936f1f852ef695044ad44499aa5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected int matchReference(Reference node, MatchingNodeSet nodeSet, boolean writeOnlyAccess)", "signatureAfterChange": " protected int matchReference(Reference node, MatchingNodeSet nodeSet, boolean writeOnlyAccess)", "diff": ["-\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++) {", "-\t\t\t\t\tif (matchesName(this.pattern.name, tokens[i])) {", "+\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++)", "+\t\t\t\t\tif (matchesName(this.pattern.name, tokens[i]))", "-\t\t\t\t\t}", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d6cc4818a00ce07eccb8b21312318b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public RecoveredElement add(Block nestedBlockDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(Block nestedBlockDeclaration, int bracketBalanceValue)", "diff": ["-\t\t&& nestedBlockDeclaration.sourceStart", "-\t\t\t> fieldDeclaration.declarationSourceEnd){", "-\t\tif (this.parent == null){", "-\t\t\treturn this; // ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(nestedBlockDeclaration, bracketBalanceValue);", "-\t\t}", "+\t\t\t&& nestedBlockDeclaration.sourceStart > fieldDeclaration.declarationSourceEnd){", "+\t\tif (this.parent == null) return this; // ignore", "+\t\treturn this.parent.add(nestedBlockDeclaration, bracketBalanceValue);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543cb73d2cfac6b00d9bb49349cb35e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForEnumValues()", "signatureAfterChange": " public FieldBinding addSyntheticFieldForEnumValues()", "diff": ["-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[FIELD_EMUL] == null) {", "+\tif (synthetics[FIELD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf91280af4197d6e6b4afc988710095", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void createFields(IBinaryField[] iFields, long sourceLevel)", "signatureAfterChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "diff": ["-\tprivate void createFields(IBinaryField[] iFields, long sourceLevel) {", "-\t\tthis.fields = NoFields;", "-\t\tif (iFields != null) {", "-\t\t\tint size = iFields.length;", "-\t\t\tif (size > 0) {", "-\t\t\t\tthis.fields = new FieldBinding[size];", "-\t\t\t\tboolean use15specifics = sourceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\tboolean isViewedAsDeprecated = isViewedAsDeprecated();", "-\t\t\t\tfor (int i = 0; i < size; i++) {", "-\t\t\t\t\tIBinaryField binaryField = iFields[i];", "-\t\t\t\t\tchar[] fieldSignature = use15specifics ? binaryField.getGenericSignature() : null;", "-\t\t\t\t\tTypeBinding type = fieldSignature == null ", "-\t\t\t\t\t\t\t? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this) ", "-\t\t\t\t\t\t\t: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), NoTypeVariables, this);", "-\t\t\t\t\tFieldBinding field = ", "-\t\t\t\t\t\tnew FieldBinding(", "-\t\t\t\t\t\t\t\tbinaryField.getName(), ", "-\t\t\t\t\t\t\t\ttype, ", "-\t\t\t\t\t\t\t\tbinaryField.getModifiers() | AccUnresolved, ", "-\t\t\t\t\t\t\t\tthis, ", "-\t\t\t\t\t\t\t\tbinaryField.getConstant());", "-\t\t\t\t\tfield.id = i; // ordinal", "-\t\t\t\t\tif (use15specifics) {", "-\t\t\t\t\t\tfield.tagBits |= binaryField.getTagBits();", "-\t\t\t\t\t}", "-\t\t\t\t\tif (isViewedAsDeprecated && !field.isDeprecated()) {", "-\t\t\t\t\t\tfield.modifiers |= AccDeprecatedImplicitly;", "-\t\t\t\t\t}\t\t", "-\t\t\t\t\tthis.fields[i] = field;", "-\t\t\t\t}", "+private void createFields(IBinaryField[] iFields, long sourceLevel) {", "+\tthis.fields = NoFields;", "+\tif (iFields != null) {", "+\t\tint size = iFields.length;", "+\t\tif (size > 0) {", "+\t\t\tthis.fields = new FieldBinding[size];", "+\t\t\tboolean use15specifics = sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\t\tboolean isViewedAsDeprecated = isViewedAsDeprecated();", "+\t\t\tfor (int i = 0; i < size; i++) {", "+\t\t\t\tIBinaryField binaryField = iFields[i];", "+\t\t\t\tchar[] fieldSignature = use15specifics ? binaryField.getGenericSignature() : null;", "+\t\t\t\tTypeBinding type = fieldSignature == null ", "+\t\t\t\t\t? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this) ", "+\t\t\t\t\t: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), NoTypeVariables, this);", "+\t\t\t\tFieldBinding field = ", "+\t\t\t\t\tnew FieldBinding(", "+\t\t\t\t\t\tbinaryField.getName(), ", "+\t\t\t\t\t\ttype, ", "+\t\t\t\t\t\tbinaryField.getModifiers() | AccUnresolved, ", "+\t\t\t\t\t\tthis, ", "+\t\t\t\t\t\tbinaryField.getConstant());", "+\t\t\t\tfield.id = i; // ordinal", "+\t\t\t\tif (use15specifics)", "+\t\t\t\t\tfield.tagBits |= binaryField.getTagBits();", "+\t\t\t\tif (isViewedAsDeprecated && !field.isDeprecated())", "+\t\t\t\t\tfield.modifiers |= AccDeprecatedImplicitly;", "+\t\t\t\tthis.fields[i] = field;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "652baa2ad9ca9a89e6a2c19b101c7964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfAccessedFieldsPattern.java", "commitBeforeChange": "b99409559acb56cfc6bd7fc6fadb5a07232e1c32", "commitAfterChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException", "diff": ["+", "+", "-\t\tif (resource == null) {", "+\t\tif (resource == null)", "-\t\t}", "-\t\tinfo = locator.getBinaryInfo((org.eclipse.jdt.internal.core.ClassFile)type.getClassFile(), resource);", "+\t\tinfo = locator.getBinaryInfo((org.eclipse.jdt.internal.core.ClassFile) type.getClassFile(), resource);", "-\t\tClassScope scope = ((SourceTypeBinding)declaringClass).scope;", "+\t\tClassScope scope = ((SourceTypeBinding) declaringClass).scope;", "-\t\t\tif (fieldDecl != null) {", "+\t\t\tif (fieldDecl != null)", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706cf0d4c12815d4473781409808f33c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "diff": ["-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[FIELD_EMUL] == null) {", "+\tif (synthetics[FIELD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e91cee6b315fcfd4c56f92100786f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "cdf9b8e4c56a386ff2dde986be8b72d07aa1cb88", "commitAfterChange": "8e48752294c0bdafc35bf5d5bf2db780924b6282", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate IJavaElementDelta mergeDeltas(Collection deltas)", "signatureAfterChange": " \tprivate IJavaElementDelta mergeDeltas(Collection deltas)", "diff": ["-\t\tif (insertedTree) {", "-\t\t\treturn rootDelta;", "-\t\t}", "-\t\telse {", "-\t\t\treturn null;", "-\t\t}", "+\t\tif (insertedTree) return rootDelta;", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74fc84863f2d7204b58f7a858d86cb6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic CompilationUnit[] getCompilationUnits() \t\tthrows InvalidInputException", "signatureAfterChange": " \tpublic CompilationUnit[] getCompilationUnits() \t\tthrows InvalidInputException", "diff": ["-\t\t\tif (knownFileNames.get(charName) != null) {", "+\t\t\tif (knownFileNames.get(charName) != null)", "-\t\t\t} else {", "-\t\t\t\tknownFileNames.put(charName, charName);", "-\t\t\t}", "+\t\t\tknownFileNames.put(charName, charName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d94c1daa9b39070188dbab21a2c110a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "diff": ["-\t\t\tif (hasRestrictedAccess) {", "+\t\t\tif (hasRestrictedAccess)", "-\t\t\t}", "-\t\t\t\tif (hasRestrictedAccess) {", "+\t\t\t\tif (hasRestrictedAccess)", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e925496ca4097f06d9d49b21be40843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void report( \t\tIResource resource, \t\tint sourceStart, \t\tint sourceEnd, \t\tIJavaElement element, \t\tint accuracy) \t\tthrows CoreException", "signatureAfterChange": " public void report(IResource resource, int sourceStart, int sourceEnd, IJavaElement element, int accuracy) throws CoreException", "diff": ["-\tpublic void report(", "-\t\tIResource resource,", "-\t\tint sourceStart,", "-\t\tint sourceEnd,", "-\t\tIJavaElement element,", "-\t\tint accuracy)", "-\t\tthrows CoreException {", "-", "-\t\tlong start = -1;", "-\t\t\tstart = System.currentTimeMillis();", "-\t\tthis.collector.accept(", "-\t\t\tresource,", "-\t\t\tsourceStart,", "-\t\t\tsourceEnd + 1,", "-\t\t\telement,", "-\t\t\taccuracy);", "-\t\tif (SearchEngine.VERBOSE) {", "-\t\t\tthis.resultCollectorTime += System.currentTimeMillis()-start;", "-\t\t}", "+}", "+public void report(IResource resource, int sourceStart, int sourceEnd, IJavaElement element, int accuracy) throws CoreException {", "+\tlong start = -1;", "+\tif (SearchEngine.VERBOSE)", "+\t\tstart = System.currentTimeMillis();", "+\tthis.collector.accept(resource, sourceStart, sourceEnd + 1, element, accuracy);", "+\tif (SearchEngine.VERBOSE)", "+\t\tthis.resultCollectorTime += System.currentTimeMillis()-start;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9037cce10871306f82258ca004176833", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(Statement stmt, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(Statement stmt, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\t\t&& stmt.sourceStart > this.blockDeclaration.sourceEnd){", "-\t\t\t", "-\t\tif (delegatedByParent){", "-\t\t\treturn this; //ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(stmt, bracketBalanceValue);", "-\t\t}\t\t\t", "+\t\t\t&& stmt.sourceStart > this.blockDeclaration.sourceEnd){", "+\t\tif (delegatedByParent) return this; //ignore", "+\t\treturn this.parent.add(stmt, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979e86a27d061e6d5acb830440cdb001", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic FlowContext getTargetContextForDefaultBreak()", "signatureAfterChange": " \tpublic FlowContext getTargetContextForDefaultBreak()", "diff": ["-\t\t\t\tif (lastNonReturningSubRoutine == null) {", "-\t\t\t\t\treturn current;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn lastNonReturningSubRoutine;", "-\t\t\t\t}", "+\t\t\t\tif (lastNonReturningSubRoutine == null) return current;", "+\t\t\t\treturn lastNonReturningSubRoutine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99f362a4cafa5664fc2e178fb68eedce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfAccessedFieldsPattern.java", "commitBeforeChange": "b99409559acb56cfc6bd7fc6fadb5a07232e1c32", "commitAfterChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tthis.reportDeclaration(((FieldReference)reference).binding, locator);", "+\t\tthis.reportDeclaration(((FieldReference) reference).binding, locator);", "-\t\tQualifiedNameReference qNameRef = (QualifiedNameReference)reference;", "+\t\tQualifiedNameReference qNameRef = (QualifiedNameReference) reference;", "-\t\tif (binding instanceof FieldBinding) {", "+\t\tif (binding instanceof FieldBinding)", "-\t\t} ", "-\t\tfor (int i = 0; i < otherMax; i++){", "+\t\tfor (int i = 0; i < otherMax; i++)", "-\t\t}", "-\t\tthis.reportDeclaration(", "-\t\t\t(FieldBinding)((SingleNameReference)reference).binding, ", "-\t\t\tlocator);", "+\t\tthis.reportDeclaration((FieldBinding)((SingleNameReference) reference).binding, locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c93c53ca18aa25f7d89b2fd95a9275", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public FieldBinding addSyntheticFieldForInnerclass(LocalVariableBinding actualOuterLocalVariable)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForInnerclass(LocalVariableBinding actualOuterLocalVariable)", "diff": ["-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[FIELD_EMUL] == null) {", "+\tif (synthetics[FIELD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b94fe991461c12a7f12ffcafa17dce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static String charToString(char[] charArray)", "signatureAfterChange": " \tpublic static String charToString(char[] charArray)", "diff": ["-\t\tif (charArray == null) {", "-\t\t\treturn null;", "-\t\t} else {", "-\t\t\treturn new String(charArray);", "-\t\t}", "+\t\tif (charArray == null) return null;", "+\t\treturn new String(charArray);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c5794fdafa532228fe90bf12f98c3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic FlowContext getTargetContextForBreakLabel(char[] labelName)", "signatureAfterChange": " \tpublic FlowContext getTargetContextForBreakLabel(char[] labelName)", "diff": ["-\t\t\t\tif (lastNonReturningSubRoutine == null) {", "+\t\t\t\tif (lastNonReturningSubRoutine == null)", "-\t\t\t\t} else {", "-\t\t\t\t\treturn lastNonReturningSubRoutine;", "-\t\t\t\t}", "+\t\t\t\treturn lastNonReturningSubRoutine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af2ea981a8228481df5666060abeb82f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " public FieldBinding getUpdatedFieldBinding(FieldBinding targetField, ReferenceBinding newDeclaringClass)", "signatureAfterChange": " public FieldBinding getUpdatedFieldBinding(FieldBinding targetField, ReferenceBinding newDeclaringClass)", "diff": ["-", "-\tif (this.synthetics == null) {", "+\tif (this.synthetics == null)", "-\t}", "-\tif (this.synthetics[RECEIVER_TYPE_EMUL] == null) {", "+\tif (this.synthetics[RECEIVER_TYPE_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bab6ed71caf4e1ea44d9401299e90bc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "diff": ["-", "-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[METHOD_EMUL] == null) {", "+\tif (synthetics[METHOD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc85dcd9f5a08de9ddf38b3c0abec851", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "9384d44d51fc135ab261a46a0c5c6cf06b8a4075", "commitAfterChange": "641e4134a5f663294c87ac80c963d690a90319bc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate void expectingCompiling(String[] actual, String[] expected, String message)", "signatureAfterChange": "  \tprivate void expectingCompiling(String[] actual, String[] expected, String message)", "diff": ["-\t", "-\tprivate void expectingCompiling(String[] actual, String[] expected, String message){", "-\t\tif(DEBUG) {", "-\t\t\tfor (int i = 0; i < actual.length; i++) {", "+", "+\tprivate void expectingCompiling(String[] actual, String[] expected, String message) {", "+\t\tif (DEBUG)", "+\t\t\tfor (int i = 0; i < actual.length; i++)", "-\t\t\t}", "-\t\t}\t", "-\t\t", "+", "-\t\tfor (int i = 0; i < actual.length; i++){", "-\t\t\tif (i > 0) actualBuffer.append(\",\"); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < actual.length; i++) {", "+\t\t\tif (i > 0)", "+\t\t\t\tactualBuffer.append(\",\"); //$NON-NLS-1$", "-\t\tfor (int i = 0; i < expected.length; i++){", "-\t\t\tif (i > 0) expectedBuffer.append(\",\"); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < expected.length; i++) {", "+\t\t\tif (i > 0)", "+\t\t\t\texpectedBuffer.append(\",\"); //$NON-NLS-1$", "-\t\texpectedBuffer.append('}');\t\t", "+\t\texpectedBuffer.append('}');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf70885f178bbeca56cd1b8944ecc6ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2b79174755a16aced5104d3df93df716516d670", "commitAfterChange": "f2fb5e44531d4df5da9264367df0b14b50434c61", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public ReferenceBinding[] superInterfaces()", "signatureAfterChange": "     public ReferenceBinding[] superInterfaces()", "diff": ["-\t\t\t\tif (this.bound.isInterface()) {", "-\t\t\t\t\treturn new ReferenceBinding[]{ (ReferenceBinding)this.bound };", "-\t\t\t\t} else {", "-\t\t\t\t\treturn NoSuperInterfaces;", "-\t\t\t\t}", "+\t\t\t\tif (this.bound.isInterface())", "+\t\t\t\t\treturn new ReferenceBinding[] {(ReferenceBinding) this.bound};", "+\t\t\t\treturn NoSuperInterfaces;", "+\t\t\t// TODO (philippe) if we fall thru, we'll answer null but no one will expect it", "+\t\t\t// return NoSuperInterfaces;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e2d5041673f72a35c30d565c3c5bca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\t\t&& localDeclaration.declarationSourceStart > this.blockDeclaration.sourceEnd){", "-", "-\t\tif (delegatedByParent){", "-\t\t\treturn this; //ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(localDeclaration, bracketBalanceValue);", "-\t\t}", "+\t\t\t&& localDeclaration.declarationSourceStart > this.blockDeclaration.sourceEnd){", "+\t\tif (delegatedByParent) return this; //ignore", "+\t\treturn this.parent.add(localDeclaration, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd571696a9e0b5da8a9e277515be34cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\t\t&& typeDeclaration.declarationSourceStart > this.blockDeclaration.sourceEnd){", "-\t\tif (delegatedByParent){", "-\t\t\treturn this; //ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(typeDeclaration, bracketBalanceValue);", "-\t\t}", "+\t\t\t&& typeDeclaration.declarationSourceStart > this.blockDeclaration.sourceEnd){", "+\t\tif (delegatedByParent) return this; //ignore", "+\t\treturn this.parent.add(typeDeclaration, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce26d7fbacb721b397e1b565ef73188b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "4a6a7781755a7a1cf7e30b7e629a87eea802f054", "commitAfterChange": "79d84450fa0277faedd98590a756a4b3c3037926", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \t \tprivate void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \t \tprivate void searchDeclarations(IJavaElement enclosingElement, SearchRequestor requestor, SearchPattern pattern, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tif (e instanceof JavaModelException) {", "+\t\t\tif (e instanceof JavaModelException)", "-\t\t\t} else {", "-\t\t\t\tthrow new JavaModelException(e);", "-\t\t\t}", "+\t\t\tthrow new JavaModelException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24199c2f4c17aed1c240a22edc17b8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\t&& typeDeclaration.declarationSourceStart > fieldDeclaration.declarationSourceEnd){", "-\t\tif (parent == null) {", "-\t\t\treturn this; // ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(typeDeclaration, bracketBalanceValue);", "-\t\t}", "+\t\t\t&& typeDeclaration.declarationSourceStart > fieldDeclaration.declarationSourceEnd){", "+\t\tif (parent == null) return this; // ignore", "+\t\treturn this.parent.add(typeDeclaration, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5be26d879a802796c185e66727a68b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public MethodBinding getUpdatedMethodBinding(MethodBinding targetMethod, ReferenceBinding newDeclaringClass)", "signatureAfterChange": " public MethodBinding getUpdatedMethodBinding(MethodBinding targetMethod, ReferenceBinding newDeclaringClass)", "diff": ["-", "-", "-\tif (this.synthetics == null) {", "+\tif (this.synthetics == null)", "-\t}", "-\tif (this.synthetics[RECEIVER_TYPE_EMUL] == null) {", "+\tif (this.synthetics[RECEIVER_TYPE_EMUL] == null)", "-\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfeda2cb041a05f8f600051f196061eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "diff": ["-", "-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[METHOD_EMUL] == null) {", "+\tif (synthetics[METHOD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c904a421944031dbd4329a63765fcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "4a6a7781755a7a1cf7e30b7e629a87eea802f054", "commitAfterChange": "79d84450fa0277faedd98590a756a4b3c3037926", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": " \tpublic void search(IWorkspace workspace, ISearchPattern searchPattern, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\t\tif (e instanceof JavaModelException) {", "+\t\t\tif (e instanceof JavaModelException)", "-\t\t\t} else {", "-\t\t\t\tthrow new JavaModelException(e);", "-\t\t\t}", "+\t\t\tthrow new JavaModelException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb83746024cb010dafa92377127ef5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public SyntheticMethodBinding addSyntheticEnumMethod(char[] selector)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticEnumMethod(char[] selector)", "diff": ["-", "-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[METHOD_EMUL] == null) {", "+\tif (synthetics[METHOD_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9315c5bcc2330cebaf809c50ca8c92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "74958747d6dfa7074d7be26e7090f615c8b5cb63", "commitAfterChange": "2d759a713e644c7b941823a3d4e9e44e73ef6b04", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public char[] qualifiedSourceName()", "signatureAfterChange": "  public char[] qualifiedSourceName()", "diff": ["-\tif (isMemberType()) {", "+\tif (isMemberType())", "-\t} else {", "-\t\treturn sourceName();", "-\t}", "+\treturn sourceName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6c5df0995c38c45044a155357a4f884", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "a6b5fd5588a8c0f5b7dfed8752c55371c0723187", "commitAfterChange": "461947f2c01be844dc49b93f75612c6157f2318c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(Statement statement, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(Statement statement, int bracketBalanceValue)", "diff": ["-\t\t&& statement.sourceStart > fieldDeclaration.declarationSourceEnd){", "-\t\tif (parent == null) {", "-\t\t\treturn this; // ignore", "-\t\t} else {", "-\t\t\treturn this.parent.add(statement, bracketBalanceValue);", "-\t\t}", "+\t\t\t&& statement.sourceStart > fieldDeclaration.declarationSourceEnd){", "+\t\tif (parent == null) return this; // ignore", "+\t\treturn this.parent.add(statement, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b39f255dd1f528fbb276f666a1487d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "diff": ["-", "-", "-\tif (synthetics == null) {", "+\tif (synthetics == null)", "-\t}", "-\tif (synthetics[CLASS_LITERAL_EMUL] == null) {", "+\tif (synthetics[CLASS_LITERAL_EMUL] == null)", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff4633593d85c82894213917debef0f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "4a6a7781755a7a1cf7e30b7e629a87eea802f054", "commitAfterChange": "79d84450fa0277faedd98590a756a4b3c3037926", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void search(IWorkspace workspace, String patternString, int searchFor, int limitTo, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": " \tpublic void search(IWorkspace workspace, String patternString, int searchFor, int limitTo, IJavaSearchScope scope, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\t\tif (e instanceof JavaModelException) {", "+\t\t\tif (e instanceof JavaModelException)", "-\t\t\t} else {", "-\t\t\t\tthrow new JavaModelException(e);", "-\t\t\t}", "+\t\t\tthrow new JavaModelException(e);"]}], "num": 4635}