{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "814948bf8447cb341ac21f2fc0a183e1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06110d16f9e8807b6ef1c28f8c8115fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "2e3b506bd16c2dfca1b01615ff44e6bfc5c42dab", "commitAfterChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\tif (diet) {", "+\tif (this.diet) {", "-\t\tdiet = false;", "-\t\treturn currentPosition > source.length ? TokenNameEOF : TokenNameRBRACE;", "+\t\tthis.diet = false;", "+\t\treturn this.currentPosition > this.source.length ? TokenNameEOF : TokenNameRBRACE;", "-\t\t\twithoutUnicodePtr = 0;", "+\t\t\tthis.withoutUnicodePtr = 0;", "-\t\t\twhiteStart = currentPosition;", "+\t\t\twhiteStart = this.currentPosition;", "-\t\t\t\tstartPosition = currentPosition;", "+\t\t\t\tthis.startPosition = this.currentPosition;", "-\t\t\t\t\tcheckIfUnicode = ((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t&& (source[currentPosition] == 'u');", "+\t\t\t\t\tcheckIfUnicode = ((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t&& (this.source[this.currentPosition] == 'u');", "-\t\t\t\t\tif (tokenizeWhiteSpace && (whiteStart != currentPosition - 1)) {", "+\t\t\t\t\tif (this.tokenizeWhiteSpace && (whiteStart != this.currentPosition - 1)) {", "-\t\t\t\t\t\tcurrentPosition--;", "-\t\t\t\t\t\tstartPosition = whiteStart;", "+\t\t\t\t\t\tthis.currentPosition--;", "+\t\t\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\t\t\tif (currentPosition > eofPosition)", "+\t\t\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t(currentCharacter == ' ') || CharOperation.isWhitespace(currentCharacter); ", "+\t\t\t\t\t\t(this.currentCharacter == ' ') || CharOperation.isWhitespace(this.currentCharacter); ", "-\t\t\tif (tokenizeWhiteSpace && hasWhiteSpaces) {", "+\t\t\tif (this.tokenizeWhiteSpace && hasWhiteSpaces) {", "-\t\t\t\tcurrentPosition-=offset;", "-\t\t\t\tstartPosition = whiteStart;", "+\t\t\t\tthis.currentPosition-=offset;", "+\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\tif (currentPosition > eofPosition)", "+\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\tswitch (currentCharacter) {", "+\t\t\tswitch (this.currentCharacter) {", "-\t\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\'') {", "-\t\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\'') {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\'') {", "-\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\'') {", "+\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\tunicodeAsBackSlash = false;", "+\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "-\t\t\t\t\t\t\tcheckIfUnicode = ((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t&& (source[currentPosition] == 'u');", "+\t\t\t\t\t\t\tcheckIfUnicode = ((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u');", "-\t\t\t\t\t\t\tif (currentPosition > eofPosition)", "+\t\t\t\t\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\'') {", "-\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\'') {", "+\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\tunicodeAsBackSlash = false;", "-\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "+\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\twhile (currentCharacter != '\"') {", "+\t\t\t\t\t\twhile (this.currentCharacter != '\"') {", "-\t\t\t\t\t\t\tif ((currentCharacter == '\\n') || (currentCharacter == '\\r')) {", "+\t\t\t\t\t\t\tif ((this.currentCharacter == '\\n') || (this.currentCharacter == '\\r')) {", "-\t\t\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\\"') {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\\"') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\tint escapeSize = currentPosition;", "-\t\t\t\t\t\t\t\tboolean backSlashAsUnicodeInString = unicodeAsBackSlash;", "+\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\tint escapeSize = this.currentPosition;", "+\t\t\t\t\t\t\t\tboolean backSlashAsUnicodeInString = this.unicodeAsBackSlash;", "-\t\t\t\t\t\t\t\tescapeSize = currentPosition - escapeSize;", "-\t\t\t\t\t\t\t\tif (withoutUnicodePtr == 0) {", "+\t\t\t\t\t\t\t\tescapeSize = this.currentPosition - escapeSize;", "+\t\t\t\t\t\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t\t\t\t\t\twithoutUnicodePtr = currentPosition - escapeSize - 1 - startPosition;", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodePtr = this.currentPosition - escapeSize - 1 - this.startPosition;", "-\t\t\t\t\t\t\t\t\t\tsource, ", "-\t\t\t\t\t\t\t\t\t\tstartPosition, ", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer, ", "+\t\t\t\t\t\t\t\t\t\tthis.source, ", "+\t\t\t\t\t\t\t\t\t\tthis.startPosition, ", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer, ", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodePtr); ", "-\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodePtr); ", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodePtr--;", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodePtr--;", "-\t\t\t\t\t\t\tunicodeAsBackSlash = false;", "-\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "+\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\\"') {", "-\t\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\\"') {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\tif (checkNonExternalizedStringLiterals){ // check for presence of\tNLS tags //$NON-NLS-?$ where ? is an int.", "-\t\t\t\t\t\tif (currentLine == null) {", "-\t\t\t\t\t\t\tcurrentLine = new NLSLine();", "+\t\t\t\t\tif (this.checkNonExternalizedStringLiterals){ // check for presence of\tNLS tags //$NON-NLS-?$ where ? is an int.", "+\t\t\t\t\t\tif (this.currentLine == null) {", "+\t\t\t\t\t\t\tthis.currentLine = new NLSLine();", "-\t\t\t\t\t\tcurrentLine.add(", "+\t\t\t\t\t\tthis.currentLine.add(", "-\t\t\t\t\t\t\t\tstartPosition, ", "-\t\t\t\t\t\t\t\tcurrentPosition - 1));", "+\t\t\t\t\t\t\t\tthis.startPosition, ", "+\t\t\t\t\t\t\t\tthis.currentPosition - 1));", "-\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\tcurrentPosition++;", "-\t\t\t\t\t\t\t\t\twhile (source[currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\tcurrentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\twhile (currentCharacter != '\\r' && currentCharacter != '\\n') {", "+\t\t\t\t\t\t\t\twhile (this.currentCharacter != '\\r' && this.currentCharacter != '\\n') {", "-\t\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "-\t\t\t\t\t\t\t\t\t\twhile (source[currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\tcurrentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\tif (currentCharacter == '\\r'", "-\t\t\t\t\t\t\t\t   && source.length > currentPosition) {", "-\t\t\t\t\t\t\t\t   \tif (source[currentPosition] == '\\n') {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "-\t\t\t\t\t\t\t\t\t\tcurrentCharacter = '\\n';", "-\t\t\t\t\t\t\t\t   \t} else if ((source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t&& (source[currentPosition + 1] == 'u')) {", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\r'", "+\t\t\t\t\t\t\t\t   && this.source.length > this.currentPosition) {", "+\t\t\t\t\t\t\t\t   \tif (this.source[this.currentPosition] == '\\n') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t   \t} else if ((this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition + 1] == 'u')) {", "-\t\t\t\t\t\t\t\t\t\tint index = currentPosition + 1;", "+\t\t\t\t\t\t\t\t\t\tint index = this.currentPosition + 1;", "-\t\t\t\t\t\t\t\t\t\twhile (source[index] == 'u') {", "+\t\t\t\t\t\t\t\t\t\twhile (this.source[index] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition = index;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tcurrentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "-\t\t\t\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\tif (this.tokenizeComments) {", "-\t\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\tif (this.tokenizeComments) {", "-\t\t\t\t\t\t\t\tunicodeAsBackSlash = false;", "-\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "+\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\tif (currentCharacter == '*') {", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '*') {", "-\t\t\t\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++; //jump over the \\\\", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++; //jump over the \\\\", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// empty comment is not a javadoc /**/", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '/') { ", "+\t\t\t\t\t\t\t\t\tisJavadoc = false;", "-\t\t\t\t\t\t\t\twhile ((currentCharacter != '/') || (!star)) {", "-\t\t\t\t\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\twhile ((this.currentCharacter != '/') || (!star)) {", "+\t\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t\t\tstar = currentCharacter == '*';", "+\t\t\t\t\t\t\t\t\tstar = this.currentCharacter == '*';", "-\t\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\tif (this.tokenizeComments) {", "-\t\t\t\t\tif (Character.isJavaIdentifierStart(currentCharacter))", "+\t\t\t\t\tif (Character.isJavaIdentifierStart(this.currentCharacter))", "-\t\t\t\t\tif (Character.isDigit(currentCharacter))", "+\t\t\t\t\tif (Character.isDigit(this.currentCharacter))", "-\t\tif (tokenizeWhiteSpace && (whiteStart != currentPosition - 1)) {", "+\t\tif (this.tokenizeWhiteSpace && (whiteStart != this.currentPosition - 1)) {", "-\t\t\tcurrentPosition--;", "-\t\t\tstartPosition = whiteStart;", "+\t\t\tthis.currentPosition--;", "+\t\t\tthis.startPosition = whiteStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1eea7974ab76fd277e3ccb880136d0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "69622d139cf7be8059928288f19c2f5b2d55bdc5", "commitAfterChange": "bd0b42da240c9e3160dab0f23f741fededbd0813", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\tif (diet) {", "+\tif (this.diet) {", "-\t\tdiet = false;", "-\t\treturn currentPosition > source.length ? TokenNameEOF : TokenNameRBRACE;", "+\t\tthis.diet = false;", "+\t\treturn this.currentPosition > this.source.length ? TokenNameEOF : TokenNameRBRACE;", "-\t\t\twithoutUnicodePtr = 0;", "+\t\t\tthis.withoutUnicodePtr = 0;", "-\t\t\twhiteStart = currentPosition;", "+\t\t\twhiteStart = this.currentPosition;", "-\t\t\t\tstartPosition = currentPosition;", "+\t\t\t\tthis.startPosition = this.currentPosition;", "-\t\t\t\t\tcheckIfUnicode = ((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t&& (source[currentPosition] == 'u');", "+\t\t\t\t\tcheckIfUnicode = ((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t&& (this.source[this.currentPosition] == 'u');", "-\t\t\t\t\tif (tokenizeWhiteSpace && (whiteStart != currentPosition - 1)) {", "+\t\t\t\t\tif (this.tokenizeWhiteSpace && (whiteStart != this.currentPosition - 1)) {", "-\t\t\t\t\t\tcurrentPosition--;", "-\t\t\t\t\t\tstartPosition = whiteStart;", "+\t\t\t\t\t\tthis.currentPosition--;", "+\t\t\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\t\t\tif (currentPosition > eofPosition)", "+\t\t\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t(currentCharacter == ' ') || CharOperation.isWhitespace(currentCharacter); ", "+\t\t\t\t\t\t(this.currentCharacter == ' ') || CharOperation.isWhitespace(this.currentCharacter); ", "-\t\t\tif (tokenizeWhiteSpace && hasWhiteSpaces) {", "+\t\t\tif (this.tokenizeWhiteSpace && hasWhiteSpaces) {", "-\t\t\t\tcurrentPosition-=offset;", "-\t\t\t\tstartPosition = whiteStart;", "+\t\t\t\tthis.currentPosition-=offset;", "+\t\t\t\tthis.startPosition = whiteStart;", "-\t\t\tif (currentPosition > eofPosition)", "+\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\tswitch (currentCharacter) {", "+\t\t\tswitch (this.currentCharacter) {", "-\t\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\'') {", "-\t\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\'') {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\'') {", "-\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\'') {", "+\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\tunicodeAsBackSlash = false;", "+\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "-\t\t\t\t\t\t\tcheckIfUnicode = ((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t&& (source[currentPosition] == 'u');", "+\t\t\t\t\t\t\tcheckIfUnicode = ((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u');", "-\t\t\t\t\t\t\tif (currentPosition > eofPosition)", "+\t\t\t\t\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\'') {", "-\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\'') {", "+\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\tunicodeAsBackSlash = false;", "-\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "+\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\twhile (currentCharacter != '\"') {", "+\t\t\t\t\t\twhile (this.currentCharacter != '\"') {", "-\t\t\t\t\t\t\tif ((currentCharacter == '\\n') || (currentCharacter == '\\r')) {", "+\t\t\t\t\t\t\tif ((this.currentCharacter == '\\n') || (this.currentCharacter == '\\r')) {", "-\t\t\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\\"') {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\\"') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\tint escapeSize = currentPosition;", "-\t\t\t\t\t\t\t\tboolean backSlashAsUnicodeInString = unicodeAsBackSlash;", "+\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\tint escapeSize = this.currentPosition;", "+\t\t\t\t\t\t\t\tboolean backSlashAsUnicodeInString = this.unicodeAsBackSlash;", "-\t\t\t\t\t\t\t\tescapeSize = currentPosition - escapeSize;", "-\t\t\t\t\t\t\t\tif (withoutUnicodePtr == 0) {", "+\t\t\t\t\t\t\t\tescapeSize = this.currentPosition - escapeSize;", "+\t\t\t\t\t\t\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t\t\t\t\t\t\twithoutUnicodePtr = currentPosition - escapeSize - 1 - startPosition;", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodePtr = this.currentPosition - escapeSize - 1 - this.startPosition;", "-\t\t\t\t\t\t\t\t\t\tsource, ", "-\t\t\t\t\t\t\t\t\t\tstartPosition, ", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer, ", "+\t\t\t\t\t\t\t\t\t\tthis.source, ", "+\t\t\t\t\t\t\t\t\t\tthis.startPosition, ", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer, ", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodePtr); ", "-\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodePtr); ", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodePtr--;", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodePtr--;", "-\t\t\t\t\t\t\tunicodeAsBackSlash = false;", "-\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "+\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\tif (currentPosition + lookAhead == source.length)", "+\t\t\t\t\t\t\t\tif (this.currentPosition + lookAhead == this.source.length)", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\n')", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\n')", "-\t\t\t\t\t\t\t\tif (source[currentPosition + lookAhead] == '\\\"') {", "-\t\t\t\t\t\t\t\t\tcurrentPosition += lookAhead + 1;", "+\t\t\t\t\t\t\t\tif (this.source[this.currentPosition + lookAhead] == '\\\"') {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition += lookAhead + 1;", "-\t\t\t\t\tif (checkNonExternalizedStringLiterals){ // check for presence of\tNLS tags //$NON-NLS-?$ where ? is an int.", "-\t\t\t\t\t\tif (currentLine == null) {", "-\t\t\t\t\t\t\tcurrentLine = new NLSLine();", "+\t\t\t\t\tif (this.checkNonExternalizedStringLiterals){ // check for presence of\tNLS tags //$NON-NLS-?$ where ? is an int.", "+\t\t\t\t\t\tif (this.currentLine == null) {", "+\t\t\t\t\t\t\tthis.currentLine = new NLSLine();", "-\t\t\t\t\t\tcurrentLine.add(", "+\t\t\t\t\t\tthis.currentLine.add(", "-\t\t\t\t\t\t\t\tstartPosition, ", "-\t\t\t\t\t\t\t\tcurrentPosition - 1));", "+\t\t\t\t\t\t\t\tthis.startPosition, ", "+\t\t\t\t\t\t\t\tthis.currentPosition - 1));", "-\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\tcurrentPosition++;", "-\t\t\t\t\t\t\t\t\twhile (source[currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\tcurrentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\twhile (currentCharacter != '\\r' && currentCharacter != '\\n') {", "+\t\t\t\t\t\t\t\twhile (this.currentCharacter != '\\r' && this.currentCharacter != '\\n') {", "-\t\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "-\t\t\t\t\t\t\t\t\t\twhile (source[currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(source[currentPosition++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\tcurrentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\tif (currentCharacter == '\\r'", "-\t\t\t\t\t\t\t\t   && source.length > currentPosition) {", "-\t\t\t\t\t\t\t\t   \tif (source[currentPosition] == '\\n') {", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "-\t\t\t\t\t\t\t\t\t\tcurrentCharacter = '\\n';", "-\t\t\t\t\t\t\t\t   \t} else if ((source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t&& (source[currentPosition + 1] == 'u')) {", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\r'", "+\t\t\t\t\t\t\t\t   && this.source.length > this.currentPosition) {", "+\t\t\t\t\t\t\t\t   \tif (this.source[this.currentPosition] == '\\n') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t   \t} else if ((this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition + 1] == 'u')) {", "-\t\t\t\t\t\t\t\t\t\tint index = currentPosition + 1;", "+\t\t\t\t\t\t\t\t\t\tint index = this.currentPosition + 1;", "-\t\t\t\t\t\t\t\t\t\twhile (source[index] == 'u') {", "+\t\t\t\t\t\t\t\t\t\twhile (this.source[index] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[index++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition = index;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition = index;", "-\t\t\t\t\t\t\t\t\t\t\tcurrentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "-\t\t\t\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\tif (this.tokenizeComments) {", "-\t\t\t\t\t\t\t\tcurrentPosition--;", "+\t\t\t\t\t\t\t\tthis.currentPosition--;", "-\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\tif (this.tokenizeComments) {", "-\t\t\t\t\t\t\t\tunicodeAsBackSlash = false;", "-\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\tthis.unicodeAsBackSlash = false;", "+\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\tif (withoutUnicodePtr != 0) {", "-\t\t\t\t\t\t\t\t\t\twithoutUnicodeBuffer[++withoutUnicodePtr] = currentCharacter;", "+\t\t\t\t\t\t\t\t\tif (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\t\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "-\t\t\t\t\t\t\t\tif (currentCharacter == '*') {", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '*') {", "-\t\t\t\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\tcurrentPosition++; //jump over the \\\\", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++; //jump over the \\\\", "-\t\t\t\t\t\t\t\tif (currentCharacter == '/') { ", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '/') { ", "-\t\t\t\t\t\t\t\twhile ((currentCharacter != '/') || (!star)) {", "-\t\t\t\t\t\t\t\t\tif ((currentCharacter == '\\r') || (currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\twhile ((this.currentCharacter != '/') || (!star)) {", "+\t\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "-\t\t\t\t\t\t\t\t\t\tif (recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "-\t\t\t\t\t\t\t\t\t\t\tcurrentLine = null;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t\t\tstar = currentCharacter == '*';", "+\t\t\t\t\t\t\t\t\tstar = this.currentCharacter == '*';", "-\t\t\t\t\t\t\t\t\tif (((currentCharacter = source[currentPosition++]) == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t&& (source[currentPosition] == 'u')) {", "+\t\t\t\t\t\t\t\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition] == 'u')) {", "-\t\t\t\t\t\t\t\t\tif (currentCharacter == '\\\\') {", "-\t\t\t\t\t\t\t\t\t\tif (source[currentPosition] == '\\\\')", "-\t\t\t\t\t\t\t\t\t\t\tcurrentPosition++;", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\tif (tokenizeComments) {", "+\t\t\t\t\t\t\t\tif (this.tokenizeComments) {", "-\t\t\t\t\tif (Character.isJavaIdentifierStart(currentCharacter))", "+\t\t\t\t\tif (Character.isJavaIdentifierStart(this.currentCharacter))", "-\t\t\t\t\tif (Character.isDigit(currentCharacter))", "+\t\t\t\t\tif (Character.isDigit(this.currentCharacter))", "-\t\tif (tokenizeWhiteSpace && (whiteStart != currentPosition - 1)) {", "+\t\tif (this.tokenizeWhiteSpace && (whiteStart != this.currentPosition - 1)) {", "-\t\t\tcurrentPosition--;", "-\t\t\tstartPosition = whiteStart;", "+\t\t\tthis.currentPosition--;", "+\t\t\tthis.startPosition = whiteStart;"]}], "num": 43300}