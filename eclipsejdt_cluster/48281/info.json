{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59d5024db19d3b8c8020a56e0e4c2325", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b3ebd3b62f055694f4fe46da8ea8caf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "commitAfterChange": "50d1489a949b2e888c9f126b8f39d1c4ff67eaa2", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void test0229_for()", "signatureAfterChange": " \tpublic void _test0229_for()", "diff": ["-\tpublic void test0229_for() {", "+\t// TODO (maxime) fix", "+\tpublic void _test0229_for() {", "-\t\t\t\t\"\t boolean bar() {\\n\" + ", "-\t\t\t\t\"\t\t return true;\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"\t\t for (o.toString(); bar() && o == null;) {\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "+\t\t\t\t\"\t\t for (o.toString(); o == null;) { /* */ }\\n\" + // complain: protected then unchanged", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tfor (o.toString(); bar() && o == null;) {\\n\" + ", "-\t\t\t\"\t                            ^\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tfor (o.toString(); o == null;) { /* */ }\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640c9561c2a8b16084e526632952058a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "b01791afc915ba0fe63f832bb81909a7b260d0a7", "commitAfterChange": "8b12b344847639b9f2c6cdf2a8e9550042418870", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": " public void _test0519_try_finally()", "signatureAfterChange": " public void test0519_try_finally_constructor_exc()", "diff": ["-// incorrect analysis within try finally with a constructor", "-public void _test0519_try_finally() {", "+// incorrect analysis within try finally with a constructor throwing an exception", "+public void test0519_try_finally_constructor_exc() {", "-\t\t\t\"  public void foo(Y y) throws  E {\\n\" + ", "+\t\t\t\"  public void foo(Y y) throws E {\\n\" + ", "-\t\t\t\"      y.bar();\\n\" + // should be quiet", "+\t\t\t\"      y.toString();\\n\" + // should be quiet", "-\t\t\t\"    Y() throws E {\\n\" + ", "-\t\t\t\"    }\\n\" + ", "-\t\t\t\"    void bar() throws E {\\n\" + ", "-\t\t\t\"    }\\n\" + ", "+\t\t\t\"  Y() throws E {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "-\t\t\t\"    private static final long serialVersionUID = 1L;\\n\" + ", "+\t\t\t\"  private static final long serialVersionUID = 1L;\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}", "-\t\t\t\"\\n\"},"]}], "num": 48281}