{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fca7dead39b9e27e53542241cc8231f8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004ee49dcd4eb49a05855f2fb36b800d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": " \tpublic void test0235() throws JavaModelException", "signatureAfterChange": " \tpublic void test0235() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, interfaces.length);", "+\t\tassertEquals(\"Wrong size\", 1, interfaces.length);", "+\t\tassertNotNull(\"No binding\", interfaces[0]);", "+\t\tassertEquals(\"Ltest0235/Zork;\", interfaces[0].getKey());", "+\t\tassertFalse(\"I should not be flagged as recovered\", typeBinding2.isRecovered());", "+\t\tassertTrue(\"Zork should be flagged as recovered\", interfaces[0].isRecovered());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487c0259efc746372b94f040f20ab4b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " \tpublic void test0223() throws JavaModelException", "signatureAfterChange": " \tpublic void test0223() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, annotations.length);", "+\t\tassertEquals(\"Wrong size\", 1, annotations.length);", "+\t\tassertNotNull(\"No binding\", annotations[0]);", "+\t\tassertEquals(\"LX;.foo()V@LZork;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58370b0fce4df616de1fc18b93422df6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic void test0224() throws JavaModelException", "signatureAfterChange": " \tpublic void test0224() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, annotations.length);", "+\t\tassertEquals(\"Wrong size\", 1, annotations.length);", "+\t\tassertNotNull(\"No binding\", annotations[0]);", "+\t\tassertEquals(\"LX;@LZork;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e9af36c9a409b9ddd7a3268ff4f667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": " \tpublic void test0225() throws JavaModelException", "signatureAfterChange": " \tpublic void test0225() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, bindings.length);", "+\t\tassertEquals(\"Wrong size\", 1, bindings.length);", "+\t\tassertNotNull(\"No binding\", bindings[0]);", "+\t\tassertEquals(\"@LZork;\", bindings[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", bindings[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", bindings[0].getAnnotationType().isRecovered());\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40302dc0ff20672a0c013e188b31366", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 254, "signatureBeforeChange": " \tpublic void test0236() throws JavaModelException", "signatureAfterChange": " \tpublic void test0236() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 1, interfaces.length);", "-\t\tassertNotNull(\"Should not be null\", interfaces[0]);", "+\t\tassertEquals(\"Wrong size\", 2, interfaces.length);", "+\t\tassertEquals(\"Ljava/lang/Runnable;\", interfaces[0].getKey());", "+\t\tassertFalse(\"Runnable should not be flagged as recovered\", interfaces[0].isRecovered());", "+\t\tassertEquals(\"LZork;\", interfaces[1].getKey());\t\t", "+\t\tassertTrue(\"Zork should be flagged as recovered\", interfaces[1].isRecovered());\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef15b729b9223a7a4f2654fddbd4b81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void test0281() throws JavaModelException", "signatureAfterChange": " \tpublic void test0281() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong size\", 1, annotations.length);", "+\t\tassertEquals(\"wrong size\", 2, annotations.length);", "+\t\tassertEquals(\"LX;@LInvalid;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());\t\t", "+\t\tassertEquals(\"LX;@Ljava/lang/Deprecated;\", annotations[1].getKey());"]}], "num": 34115}