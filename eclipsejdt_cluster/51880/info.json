{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b44eb4a9410a97b942334f120f84982", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5071db8f5d87fa4d3ddb34c38a1b676a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java", "commitBeforeChange": "43c947b648b5a1fa1fb7d4f5ce5b7cea1d4fa7a2", "commitAfterChange": "eee151556fa5628da58c297d3e841df408f33c62", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid initialize(CompilationUnit unit, Scanner scanner)", "signatureAfterChange": " \tvoid initialize(CompilationUnit unit, Scanner sc)", "diff": ["-\tvoid initialize(CompilationUnit unit, Scanner scanner) {", "+\tvoid initialize(CompilationUnit unit, Scanner sc) {", "-\t\tscanner.linePtr = scanner.lineEnds.length-1;", "-\t\tscanner.tokenizeWhiteSpace = true;", "-\t\tdoExtraRangesForChildren(unit, scanner);", "-\t}", "+\t\tthis.scanner = sc;", "+\t\tthis.scanner.linePtr = this.scanner.lineEnds.length-1;", "+\t\tthis.scanner.tokenizeWhiteSpace = true;", "+\t\t// Start unit visit", "+\t\tDefaultASTVisitor commentVisitor = new CommentMapperVisitor();", "+\t\tunit.accept(commentVisitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80eb819edfa9813e865b73541e054b12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((expression != null) && (expression.constant == NotAConstant)) {", "-\t\t\texpression.generateCode(currentScope, codeStream, needValue()); // no value needed if non-returning subroutine", "+\t\tif ((this.expression != null) && (this.expression.constant == NotAConstant)) {", "+\t\t\tthis.expression.generateCode(currentScope, codeStream, needValue()); // no value needed if non-returning subroutine", "-\t\tif ((expression != null) && (expression.constant != NotAConstant)) {", "-\t\t\tcodeStream.generateConstant(expression.constant, expression.implicitConversion);", "+\t\tif ((this.expression != null) && (this.expression.constant != NotAConstant)) {", "+\t\t\tcodeStream.generateConstant(this.expression.constant, this.expression.implicitConversion);"]}], "num": 51880}