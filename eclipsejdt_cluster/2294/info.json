{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65d2ffb8c68d9966eb0d35516f97101e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e97c54742788dce1e19229207eb5192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public final ReferenceBinding findLocalType(char[] name)", "signatureAfterChange": " public final ReferenceBinding findLocalType(char[] name)", "diff": ["-\tfor (int i = 0, length = this.subscopeCount; i < length; i++) {", "+\tfor (int i = this.subscopeCount-1; i >= 0; i--) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dcd72826f580029e0a3044669d13825", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ebdcb2c23696bc9acece10df9008b71d6833f5aa", "commitAfterChange": "e64df949bc4538f0adcb983afebdd9d170ae0bd1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  private boolean isWorthBuilding() throws CoreException", "signatureAfterChange": "  private boolean isWorthBuilding() throws CoreException", "diff": ["-\tnext : for (int i = 0, l = requiredProjects.length; i < l; i++) {", "+\tfor (int i = 0, l = requiredProjects.length; i < l; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781d25eb80e0d187d14b56700df19563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "6b93bc47c94f281cdece9370a844218715786de0", "commitAfterChange": "5a74a1c87d1830c88bea417813f995a5ae4e1a46", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic final ReferenceBinding findLocalType(char[] name)", "signatureAfterChange": " \tpublic final ReferenceBinding findLocalType(char[] name)", "diff": ["-\t\tfor (int i = 0, length = scopeIndex; i < length; i++) {", "+\t\tfor (int i = 0, length = subscopeCount; i < length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51d4adb326fd3f406c0fa32349c3010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "d6b4673c8981b96659c9dcea892ebe1f0abbb00b", "commitAfterChange": "035b068bdf6fb282eada8eb5cb52008d779d4e08", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static IMethod[] findMethods(IMethod method, IMethod[] methods)", "signatureAfterChange": " public static IMethod[] findMethods(IMethod method, IMethod[] methods)", "diff": ["-\tnext: for (int i = 0, length = methods.length; i < length; i++) {", "+\tfor (int i = 0, length = methods.length; i < length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ab79b61370b9e4c5b299ddae55146b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "589528097d9e55f2c9b149940adf643197d6126d", "commitAfterChange": "f940793ad6a8d5d0b9d6787ffa3657f56433791f", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " public MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards)", "signatureAfterChange": " public MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards)", "diff": ["-\tnext:for (int i = 0, length = methods.length; i < length; i++) {", "+\tint length = methods.length;", "+\tnext:for (int i = length - 1; i >= 0; --i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d68ebb69634c2667e387fd2d1e2a5bc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "d6b4673c8981b96659c9dcea892ebe1f0abbb00b", "commitAfterChange": "035b068bdf6fb282eada8eb5cb52008d779d4e08", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "signatureAfterChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "diff": ["-\t\tscanUniqueKey: for (int idx=0, ln = source.length; idx < ln; idx++) {", "+\t\tfor (int idx=0, ln = source.length; idx < ln; idx++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94f8ba3fb5ecc35d481bdc0052745fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "0f7ff9533d878e978259e2a163868468e0cdd80b", "commitAfterChange": "e62380d6874a00b9ef31435c7e18da54c609d8e4", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "\r protected boolean isAffectedByType(IJavaElementDelta delta, IType type, boolean hasImportChange)", "signatureAfterChange": "\r protected boolean isAffectedByType(IJavaElementDelta delta, IType type, boolean hasImportChange)", "diff": ["-\tfor (int i = 0, length = children.length; i < 0; i++) {\r", "+\tfor (int i = 0, length = children.length; i < length; i++) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef5fc8e08b5d6d18597a8219d3e83505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6b93bc47c94f281cdece9370a844218715786de0", "commitAfterChange": "5a74a1c87d1830c88bea417813f995a5ae4e1a46", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope)", "diff": ["-\t\t\t\t\tnext : for (int i = 0, length = blockScope.scopeIndex; i < length; i++) {", "+\t\t\t\t\tnext : for (int i = 0, length = blockScope.subscopeCount; i < length; i++) {"]}], "num": 2294}