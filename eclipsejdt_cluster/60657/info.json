{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd7bbd7639990d276afe85e2c23d79e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155c8a80d7ec1b0c269bb4378d9817e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "commitAfterChange": "24134b187b46ea16212a45107324227f46ba3e4a", "methodNumberBeforeChange": 319, "methodNumberAfterChange": 319, "signatureBeforeChange": " \tpublic void test0672() throws JavaModelException", "signatureAfterChange": " \tpublic void test0672() throws JavaModelException", "diff": ["+", "+\t\t\tIJavaElement javaElement = elementType.getJavaElement();", "+\t\t\tassertNotNull(\"No java element\", javaElement);", "+\t\t\tassertTrue(\"Javalement exists\", !javaElement.exists());", "+\t\t\tIPackageBinding packageBinding = elementType.getPackage();", "+\t\t\tassertNotNull(\"No package\", packageBinding);", "+\t\t\tassertTrue(\"Not the default package\", packageBinding.isUnnamed());", "+\t\t\tITypeBinding arrayBinding = elementType.createArrayType(2);", "+\t\t\tassertNotNull(\"No array binding\", arrayBinding);", "+\t\t\tassertEquals(\"Wrong dimensions\", 2, arrayBinding.getDimensions());", "+\t\t\tITypeBinding elementType2 = arrayBinding.getElementType();", "+\t\t\tassertNotNull(\"No element type\", elementType2);", "+\t\t\tassertNotNull(\"No key\", elementType.getKey());", "+\t\t\tassertTrue(\"Not equals\", elementType2.isEqualTo(elementType));", "+\t\t\t", "+\t\t\tnode = getASTNode(unit, 0);", "+\t\t\tassertEquals(\"Not a type declaration\", ASTNode.TYPE_DECLARATION, node.getNodeType());", "+\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) node;", "+\t\t\tITypeBinding typeBinding2 = typeDeclaration.resolveBinding();", "+\t\t\tITypeBinding javaLangObject = typeBinding2.getSuperclass();", "+\t\t\tassertEquals(\"Not java.lang.Object\", \"java.lang.Object\", javaLangObject.getQualifiedName());", "+\t\t\tassertTrue(\"Not isCastCompatible\", elementType.isCastCompatible(javaLangObject));", "+\t\t\tassertTrue(\"Not isCastCompatible\", elementType.isCastCompatible(elementType2));", "+", "+\t\t\tassertTrue(\"Not isSubTypeCompatible\", elementType.isSubTypeCompatible(javaLangObject));", "+\t\t\tassertTrue(\"Not isSubTypeCompatible\", elementType.isSubTypeCompatible(elementType2));", "+", "+\t\t\tassertTrue(\"Not isAssignmentCompatible\", elementType.isAssignmentCompatible(javaLangObject));", "+\t\t\tassertTrue(\"Not isAssignmentCompatible\", elementType.isAssignmentCompatible(elementType2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec554585a89762e7f7ea87163c841cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "c526f10eda122472f5603082aaefe389819e487a", "commitAfterChange": "2978110db99779d239d94c1b0f5bcb0af9289202", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tpublic void test0026() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0026() throws JavaModelException", "diff": ["+\t\tITypeBinding typeBinding2 = enumDeclaration.resolveBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding2);", "-\t\tbodyDeclarations = enumConstantDeclaration.bodyDeclarations();", "+\t\tAnonymousClassDeclaration anonymousClassDeclaration = enumConstantDeclaration.getAnonymousClassDeclaration();", "+\t\tassertNotNull(\"No anonymous class\", anonymousClassDeclaration);", "+\t\tcheckSourceRange(anonymousClassDeclaration, \"{\\n\" + ", "+\t\t\t\t\"        double eval(double x, double y) { return x + y; }\\n\" + ", "+\t\t\t\t\"    }\", source);", "+\t\tITypeBinding typeBinding = anonymousClassDeclaration.resolveBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding);", "+\t\tassertTrue(\"Not a enum type\", typeBinding.isEnum());", "+\t\tbodyDeclarations = anonymousClassDeclaration.bodyDeclarations();", "-\t\tbodyDeclarations = enumConstantDeclaration.bodyDeclarations();", "+\t\tanonymousClassDeclaration = enumConstantDeclaration.getAnonymousClassDeclaration();", "+\t\ttypeBinding = anonymousClassDeclaration.resolveBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding);", "+\t\tassertTrue(\"Not a enum type\", typeBinding.isEnum());", "+\t\tassertNotNull(\"No anonymous class\", anonymousClassDeclaration);", "+\t\tcheckSourceRange(anonymousClassDeclaration, \"{\\n\" + ", "+\t\t\t\t\"        double eval(double x, double y) { return x - y; }\\n\" + ", "+\t\t\t\t\"    }\", source);", "+\t\tbodyDeclarations = anonymousClassDeclaration.bodyDeclarations();", "-\t\tbodyDeclarations = enumConstantDeclaration.bodyDeclarations();", "+\t\tanonymousClassDeclaration = enumConstantDeclaration.getAnonymousClassDeclaration();", "+\t\tassertNotNull(\"No anonymous class\", anonymousClassDeclaration);", "+\t\tcheckSourceRange(anonymousClassDeclaration, \"{\\n\" + ", "+\t\t\t\t\"        double eval(double x, double y) { return x * y; }\\n\" + ", "+\t\t\t\t\"    }\", source);", "+\t\ttypeBinding = anonymousClassDeclaration.resolveBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding);", "+\t\tassertTrue(\"Not a enum type\", typeBinding.isEnum());", "+\t\tbodyDeclarations = anonymousClassDeclaration.bodyDeclarations();", "-\t\tbodyDeclarations = enumConstantDeclaration.bodyDeclarations();", "+\t\tanonymousClassDeclaration = enumConstantDeclaration.getAnonymousClassDeclaration();", "+\t\tassertNotNull(\"No anonymous class\", anonymousClassDeclaration);", "+\t\tcheckSourceRange(anonymousClassDeclaration, \"{\\n\" + ", "+\t\t\t\t\"        double eval(double x, double y) { return x / y; }\\n\" + ", "+\t\t\t\t\"    }\", source);", "+\t\ttypeBinding = anonymousClassDeclaration.resolveBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding);", "+\t\tassertTrue(\"Not a enum type\", typeBinding.isEnum());", "+\t\tbodyDeclarations = anonymousClassDeclaration.bodyDeclarations();"]}], "num": 60657}