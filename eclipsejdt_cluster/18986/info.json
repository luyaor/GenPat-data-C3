{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01d3737f999ddce1f3f6ba2ae9248758", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18fb25369b17feb7d49bd3784391c8b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "bb49ae1f5759ef970a2a314fd9778e459f4c097c", "commitAfterChange": "31d45554331a458304a632ad1dfc3ad3337a9ef2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "signatureAfterChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "diff": ["-\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.valueTable[i];", "-\t\t\t\t\tfor (int j = 0, length2 = roots.length; j < length2; j++) {", "-\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[j];", "-\t\t\t\t\t\tIPackageFragment pkg = root.getPackageFragment(pkgName);", "+\t\t\t\t\tObject value = this.packageFragments.valueTable[i];", "+\t\t\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\t\t\tIPackageFragment pkg = ((PackageFragmentRoot) value).getPackageFragment(pkgName);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\t\t\tfor (int j = 0, length2 = roots.length; j < length2; j++) {", "+\t\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[j];", "+\t\t\t\t\t\t\tIPackageFragment pkg = root.getPackageFragment(pkgName);", "+\t\t\t\t\t\t\tif (oneFragment == null) {", "+\t\t\t\t\t\t\t\toneFragment = new IPackageFragment[] {pkg};", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (pkgs == null) {", "+\t\t\t\t\t\t\t\t\tpkgs = new ArrayList();", "+\t\t\t\t\t\t\t\t\tpkgs.add(oneFragment[0]);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tpkgs.add(pkg);", "+\t\t\t\t\t\t\t}", "-\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.get(splittedName);", "-\t\t\tif (roots != null) {", "-\t\t\t\tIPackageFragment[] result = new IPackageFragment[roots.length];", "-\t\t\t\tfor (int i= 0; i < roots.length; i++) {", "-\t\t\t\t\tresult[i] = ((PackageFragmentRoot) roots[i]).getPackageFragment(splittedName);", "+\t\t\tObject value = this.packageFragments.get(splittedName);", "+\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\treturn new IPackageFragment[] {((PackageFragmentRoot) value).getPackageFragment(splittedName)};", "+\t\t\t} else {", "+\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\tif (roots != null) {", "+\t\t\t\t\tIPackageFragment[] result = new IPackageFragment[roots.length];", "+\t\t\t\t\tfor (int i= 0; i < roots.length; i++) {", "+\t\t\t\t\t\tresult[i] = ((PackageFragmentRoot) roots[i]).getPackageFragment(splittedName);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn result;", "-\t\t\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6edfedb6ddbeb50d3fd9eeca95f0e1c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["-\t\t\t\tif (this.oldResolvedClasspath[i].getEntryKind() == IClasspathEntry.CPE_PROJECT) {", "+\t\t\t\tint entryKind = this.oldResolvedClasspath[i].getEntryKind();", "+\t\t\t\tif (entryKind == IClasspathEntry.CPE_PROJECT) {", "+\t\t\t\tif (entryKind == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\tresult |= HAS_LIBRARY_CHANGE;", "+\t\t\t\t}", "-\t\t\t\tIPackageFragmentRoot[] pkgFragmentRoots = null;", "+\t\t\t\tPackageFragmentRoot[] pkgFragmentRoots = null;", "-\t\t\t\t\tIPackageFragmentRoot oldRoot = (IPackageFragmentRoot)  removedRoots.get(this.oldResolvedClasspath[i].getPath());", "+\t\t\t\t\tPackageFragmentRoot oldRoot = (PackageFragmentRoot)  removedRoots.get(this.oldResolvedClasspath[i].getPath());", "-\t\t\t\t\t\tpkgFragmentRoots = new IPackageFragmentRoot[] { oldRoot };", "+\t\t\t\t\t\tpkgFragmentRoots = new PackageFragmentRoot[] { oldRoot };", "-\t\t\t\t\t\t\tfalse, // don't check existency", "+\t\t\t\t\t\t\ttrue, // check existency", "-\t\t\t\t\t\tpkgFragmentRoots = new IPackageFragmentRoot[accumulatedRoots.size()];", "+\t\t\t\t\t\tpkgFragmentRoots = new PackageFragmentRoot[accumulatedRoots.size()];", "-\t\t\t\t\t\tpkgFragmentRoots =  new IPackageFragmentRoot[] {};", "+\t\t\t\t\t\tpkgFragmentRoots =  new PackageFragmentRoot[] {};", "-\t\t\t\t\tIPackageFragmentRoot root = pkgFragmentRoots[j];", "+\t\t\t\t\tPackageFragmentRoot root = pkgFragmentRoots[j];", "-\t\t\t\t\t\tURI location = root.getResource().getLocationURI();", "+\t\t\t\t\t\tURI location = root.resource().getLocationURI();", "-\t\t\t\tif (newResolvedClasspath[i].getEntryKind() == IClasspathEntry.CPE_PROJECT) {", "+\t\t\t\tint entryKind = newResolvedClasspath[i].getEntryKind();", "+\t\t\t\tif (entryKind == IClasspathEntry.CPE_PROJECT) {", "+\t\t\t\t}", "+\t\t\t\tif (entryKind == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\tresult |= HAS_LIBRARY_CHANGE;", "-\t\t\t\tArrayList added= determineAffectedPackageFragments(this.oldOutputLocation);", "+\t\t\t\tArrayList added = determineAffectedPackageFragments(this.oldOutputLocation);", "-\t\t\t\tArrayList removed= determineAffectedPackageFragments(newOutputLocation);", "+\t\t\t\tArrayList removed = determineAffectedPackageFragments(newOutputLocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7892d16f3e0f83812f4e9360a8bdb4d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "bb49ae1f5759ef970a2a314fd9778e459f4c097c", "commitAfterChange": "31d45554331a458304a632ad1dfc3ad3337a9ef2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void seekPackageFragments(String name, boolean partialMatch, IJavaElementRequestor requestor)", "signatureAfterChange": " \tpublic void seekPackageFragments(String name, boolean partialMatch, IJavaElementRequestor requestor)", "diff": ["-\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.valueTable[i];", "-\t\t\t\t\tfor (int j = 0, length2 = roots.length; j < length2; j++) {", "-\t\t\t\t\t\tif (requestor.isCanceled())", "-\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[j];", "-\t\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(pkgName));\t\t\t\t\t", "+\t\t\t\t\tObject value = this.packageFragments.valueTable[i];", "+\t\t\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) value;", "+\t\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(pkgName));\t\t\t\t", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\t\t\tfor (int j = 0, length2 = roots.length; j < length2; j++) {", "+\t\t\t\t\t\t\tif (requestor.isCanceled())", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[j];", "+\t\t\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(pkgName));\t\t\t\t\t", "+\t\t\t\t\t\t}", "-\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) this.packageFragments.get(splittedName);", "-\t\t\tif (roots != null) {", "-\t\t\t\tfor (int i = 0, length = roots.length; i < length; i++) {", "-\t\t\t\t\tif (requestor.isCanceled())", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[i];", "-\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(splittedName));", "+\t\t\tObject value = this.packageFragments.get(splittedName);", "+\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\trequestor.acceptPackageFragment(((PackageFragmentRoot) value).getPackageFragment(splittedName));", "+\t\t\t} else {", "+\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\tif (roots != null) {", "+\t\t\t\t\tfor (int i = 0, length = roots.length; i < length; i++) {", "+\t\t\t\t\t\tif (requestor.isCanceled())", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[i];", "+\t\t\t\t\t\trequestor.acceptPackageFragment(root.getPackageFragment(splittedName));", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d6d5b245998003cd2e5085b78d9085", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "90b1908492a5f9d4c5df732b0e6c825a2d37465b", "commitAfterChange": "57baf3ab2dd5307ea86760f7955e1b40b82c6d4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "signatureAfterChange": " public IJavaElement copyPositive(IJavaElement element, IJavaElement container, IJavaElement sibling, String rename, boolean force) throws JavaModelException", "diff": ["-\t\t} else {", "-\t\t\tif (container.getElementType() == IJavaElement.PACKAGE_FRAGMENT_ROOT) {", "-\t\t\t} else {", "-\t\t\t\t// ensure package name is correct", "-\t\t\t\tif (container.getElementName().equals(\"\")) {", "-\t\t\t\t\t// default package - should be no package decl", "-\t\t\t\t\tIJavaElement[] children = ((ICompilationUnit) copy).getChildren();", "-\t\t\t\t\tboolean found = false;", "-\t\t\t\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\t\t\t\tif (children[i] instanceof IPackageDeclaration) {", "-\t\t\t\t\t\t\tfound = true;", "-\t\t\t\t\t\t}", "+\t\t} else if (container.getElementType() != IJavaElement.PACKAGE_FRAGMENT_ROOT) {", "+\t\t\t// ensure package name is correct", "+\t\t\tif (container.getElementName().equals(\"\")) {", "+\t\t\t\t// default package - should be no package decl", "+\t\t\t\tIJavaElement[] children = ((ICompilationUnit) copy).getChildren();", "+\t\t\t\tboolean found = false;", "+\t\t\t\tfor (int i = 0; i < children.length; i++) {", "+\t\t\t\t\tif (children[i] instanceof IPackageDeclaration) {", "+\t\t\t\t\t\tfound = true;", "-\t\t\t\t\tassertTrue(\"Should not find package decl\", !found);", "-\t\t\t\t} else {", "-\t\t\t\t\tIJavaElement[] children = ((ICompilationUnit) copy).getChildren();", "-\t\t\t\t\tboolean found = false;", "-\t\t\t\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\t\t\t\tif (children[i] instanceof IPackageDeclaration) {", "-\t\t\t\t\t\t\tassertTrue(\"package declaration incorrect\", ((IPackageDeclaration) children[i]).getElementName().equals(container.getElementName()));", "-\t\t\t\t\t\t\tfound = true;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tassertTrue(\"Did not find package decl\", found);", "+\t\t\t\tassertTrue(\"Should not find package decl\", !found);", "+\t\t\t} else {", "+\t\t\t\tIJavaElement[] children = ((ICompilationUnit) copy).getChildren();", "+\t\t\t\tboolean found = false;", "+\t\t\t\tfor (int i = 0; i < children.length; i++) {", "+\t\t\t\t\tif (children[i] instanceof IPackageDeclaration) {", "+\t\t\t\t\t\tassertTrue(\"package declaration incorrect\", ((IPackageDeclaration) children[i]).getElementName().equals(container.getElementName()));", "+\t\t\t\t\t\tfound = true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tassertTrue(\"Did not find package decl\", found);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb8b4274d72411f5813fa47de3f20e59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "5af3ec11c73ebd5f465c42ddba07188d87fc00f1", "commitAfterChange": "b246de6fdcd5a901a16dcaeba98ae727a49eb635", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch)", "signatureAfterChange": " \tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch, boolean patternMatch)", "diff": ["-\t\tif (partialMatch) {", "+\t */", "+\tpublic IPackageFragment[] findPackageFragments(String name, boolean partialMatch, boolean patternMatch) {", "+\t\tboolean hasPatternChars = patternMatch && (name.indexOf('*') >= 0 || name.indexOf('?') >= 0);", "+\t\tif (partialMatch || hasPatternChars) {", "-\t\t\t\tif (pkgName != null && Util.startsWithIgnoreCase(pkgName, splittedName)) {", "-\t\t\t\t\tObject value = this.packageFragments.valueTable[i];", "-\t\t\t\t\tif (value instanceof PackageFragmentRoot) {", "-\t\t\t\t\t\tIPackageFragment pkg = ((PackageFragmentRoot) value).getPackageFragment(pkgName);", "-\t\t\t\t\t\tif (oneFragment == null) {", "-\t\t\t\t\t\t\toneFragment = new IPackageFragment[] {pkg};", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (pkgs == null) {", "-\t\t\t\t\t\t\t\tpkgs = new ArrayList();", "-\t\t\t\t\t\t\t\tpkgs.add(oneFragment[0]);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tpkgs.add(pkg);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "-\t\t\t\t\t\tfor (int j = 0, length2 = roots.length; j < length2; j++) {", "-\t\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[j];", "-\t\t\t\t\t\t\tIPackageFragment pkg = root.getPackageFragment(pkgName);", "+\t\t\t\tif (pkgName != null) {", "+\t\t\t\t\tboolean match = hasPatternChars", "+\t\t\t\t\t\t? Util.matchesWithIgnoreCase(pkgName, name)", "+\t\t\t\t\t\t: Util.startsWithIgnoreCase(pkgName, splittedName);", "+\t\t\t\t\tif (match) {", "+\t\t\t\t\t\tObject value = this.packageFragments.valueTable[i];", "+\t\t\t\t\t\tif (value instanceof PackageFragmentRoot) {", "+\t\t\t\t\t\t\tIPackageFragment pkg = ((PackageFragmentRoot) value).getPackageFragment(pkgName);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tIPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;", "+\t\t\t\t\t\t\tfor (int j = 0, length2 = roots.length; j < length2; j++) {", "+\t\t\t\t\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) roots[j];", "+\t\t\t\t\t\t\t\tIPackageFragment pkg = root.getPackageFragment(pkgName);", "+\t\t\t\t\t\t\t\tif (oneFragment == null) {", "+\t\t\t\t\t\t\t\t\toneFragment = new IPackageFragment[] {pkg};", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif (pkgs == null) {", "+\t\t\t\t\t\t\t\t\t\tpkgs = new ArrayList();", "+\t\t\t\t\t\t\t\t\t\tpkgs.add(oneFragment[0]);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tpkgs.add(pkg);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}"]}], "num": 18986}