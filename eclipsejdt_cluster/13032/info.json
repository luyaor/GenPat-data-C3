{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a34d337d90a69f29dc015e8436ed76fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66264aacafc8b5947e9ebde7266b4258", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "2acf337b771d06ad716c2ae54bdb8443b5b5d1d6", "commitAfterChange": "28f793f875e5d5b5aa1f2b69f1f41ea8e36715ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean visit(IResource resource)", "signatureAfterChange": " \t\t\t\t\t\t\t\tpublic boolean visit(IResource resource)", "diff": ["+\t\t\t\t\t\t\tsourceFolder.accept(new IResourceVisitor() {", "+\t\t\t\t\t\t\t\tpublic boolean visit(IResource resource) {", "+\t\t\t\t\t\t\t\t\tif (isCancelled) return false;", "+\t\t\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName())) {", "+\t\t\t\t\t\t\t\t\t\t\tIPath path = resource.getLocation();", "+\t\t\t\t\t\t\t\t\t\t\tif (path != null && (patterns == null || !Util.isExcluded(resource, patterns))) {", "+\t\t\t\t\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "+\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.put(name,", "+\t\t\t\t\t\t\t\t\t\t\t\t\tindexedFileNames.get(name) == null || indexLastModified < path.toFile().lastModified()", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t? (Object) resource", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t: (Object) OK);", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t\t\t}", "-\t}", "-\tpublic boolean visit(IResource resource) {", "-\t\tif (this.isCancelled) return false;", "-\t\t", "-\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\tif (Util.isJavaFileName(resource.getName()) ", "-\t\t\t\t\t&& !Util.isExcluded(resource, IndexAllProject.this.currentExclusionPatterns)) {", "-\t\t\t\tIPath path = resource.getLocation();", "-\t\t\t\tif (path != null) {", "-\t\t\t\t\tFile resourceFile = path.toFile();", "-\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();", "-\t\t\t\t\tif (this.indexedFileNames.get(name) == null) {", "-\t\t\t\t\t\tthis.indexedFileNames.put(name, resource);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tthis.indexedFileNames.put(", "-\t\t\t\t\t\t\tname,", "-\t\t\t\t\t\t\tresourceFile.lastModified() > this.indexLastModified", "-\t\t\t\t\t\t\t\t? (Object) resource", "-\t\t\t\t\t\t\t\t: (Object) OK);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn false;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b05cb714f38c132fb6fcbe917036c11e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "409f0d1ccf0133d5fcf6863869c728111e50135d", "commitAfterChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \t\t\t\tpublic boolean visit(IResource resource)", "signatureAfterChange": "\r \tpublic boolean visit(IResource resource)", "diff": ["-\t\t\tproject.accept(new IResourceVisitor() {\r", "-\t\t\t\tpublic boolean visit(IResource resource) {\r", "-\t\t\t\t\tif (resource.getType() == IResource.FILE) {\r", "-\t\t\t\t\t\tString extension = resource.getFileExtension();\r", "-\t\t\t\t\t\tif ((extension != null) && extension.equalsIgnoreCase(\"java\")) { //$NON-NLS-1$\r", "-\t\t\t\t\t\t\tIPath path = resource.getLocation();\r", "-\t\t\t\t\t\t\tif (path != null) {\r", "-\t\t\t\t\t\t\t\tFile resourceFile = path.toFile();\r", "-\t\t\t\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();\r", "-\t\t\t\t\t\t\t\tif (indexedFileNames.get(name) == null) {\r", "-\t\t\t\t\t\t\t\t\tindexedFileNames.put(name, resource);\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\tindexedFileNames.put(\r", "-\t\t\t\t\t\t\t\t\t\tname,\r", "-\t\t\t\t\t\t\t\t\t\tresourceFile.lastModified() > indexLastModified\r", "-\t\t\t\t\t\t\t\t\t\t\t? (Object) resource\r", "-\t\t\t\t\t\t\t\t\t\t\t: (Object) OK);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\treturn false;\r", "-\t\t\t\t\treturn true;\r", "+\tpublic boolean visit(IResource resource) {\r", "+\t\tif (resource.getType() == IResource.FILE) {\r", "+\t\t\tString extension = resource.getFileExtension();\r", "+\t\t\tif ((extension != null) && extension.equalsIgnoreCase(\"java\")) { //$NON-NLS-1$\r", "+\t\t\t\tIPath path = resource.getLocation();\r", "+\t\t\t\tif (path != null) {\r", "+\t\t\t\t\tFile resourceFile = path.toFile();\r", "+\t\t\t\t\tString name = new IFileDocument((IFile) resource).getName();\r", "+\t\t\t\t\tif (this.indexedFileNames.get(name) == null) {\r", "+\t\t\t\t\t\tthis.indexedFileNames.put(name, resource);\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tthis.indexedFileNames.put(\r", "+\t\t\t\t\t\t\tname,\r", "+\t\t\t\t\t\t\tresourceFile.lastModified() > this.indexLastModified\r", "+\t\t\t\t\t\t\t\t? (Object) resource\r", "+\t\t\t\t\t\t\t\t: (Object) OK);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\treturn true;\r", "+\t}\r"]}], "num": 13032}