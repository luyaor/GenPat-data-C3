{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3d656a6bd9a3868a3c39dd9287f8521", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dbe85cab714dc011bcefae4328132dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "diff": ["+\t", "+\t\t\t\tbreak;", "-\t\tIMarker marker = resource.createMarker(JavaBuilder.ProblemMarkerTag);", "-\t\tmarker.setAttributes(", "-\t\t\tnew String[] {IMarker.MESSAGE, IMarker.SEVERITY, IJavaModelMarker.ID, IMarker.CHAR_START, IMarker.CHAR_END, IMarker.LINE_NUMBER, IJavaModelMarker.ARGUMENTS},", "-\t\t\tnew Object[] { ", "-\t\t\t\tproblem.getMessage(),", "-\t\t\t\tnew Integer(problem.isError() ? IMarker.SEVERITY_ERROR : IMarker.SEVERITY_WARNING), ", "-\t\t\t\tnew Integer(id),", "-\t\t\t\tnew Integer(problem.getSourceStart()),", "-\t\t\t\tnew Integer(problem.getSourceEnd() + 1),", "-\t\t\t\tnew Integer(problem.getSourceLineNumber()),", "-\t\t\t\tUtil.getProblemArgumentsForMarker(problem.getArguments())", "-\t\t\t});", "-", "+\t\tIMarker marker;", "+\t\tif (id != IProblem.Task) {", "+\t\t\tmarker = resource.createMarker(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER);", "+\t\t\tmarker.setAttributes(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tIMarker.MESSAGE, ", "+\t\t\t\t\tIMarker.SEVERITY, ", "+\t\t\t\t\tIJavaModelMarker.ID, ", "+\t\t\t\t\tIMarker.CHAR_START, ", "+\t\t\t\t\tIMarker.CHAR_END, ", "+\t\t\t\t\tIMarker.LINE_NUMBER, ", "+\t\t\t\t\tIJavaModelMarker.ARGUMENTS},", "+\t\t\t\tnew Object[] { ", "+\t\t\t\t\tproblem.getMessage(),", "+\t\t\t\t\tnew Integer(problem.isError() ? IMarker.SEVERITY_ERROR : IMarker.SEVERITY_WARNING), ", "+\t\t\t\t\tnew Integer(id),", "+\t\t\t\t\tnew Integer(problem.getSourceStart()),", "+\t\t\t\t\tnew Integer(problem.getSourceEnd() + 1),", "+\t\t\t\t\tnew Integer(problem.getSourceLineNumber()),", "+\t\t\t\t\tUtil.getProblemArgumentsForMarker(problem.getArguments())", "+\t\t\t\t});", "+\t\t} else {", "+\t\t\tmarker = resource.createMarker(IJavaModelMarker.TASK_MARKER);", "+\t\t\tmarker.setAttributes(", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tIMarker.MESSAGE, ", "+\t\t\t\t\tIMarker.PRIORITY, ", "+\t\t\t\t\tIMarker.DONE, ", "+\t\t\t\t\tIMarker.CHAR_START, ", "+\t\t\t\t\tIMarker.CHAR_END, ", "+\t\t\t\t\tIMarker.LINE_NUMBER},", "+\t\t\t\tnew Object[] { ", "+\t\t\t\t\tproblem.getMessage(),", "+\t\t\t\t\tnew Integer(IMarker.PRIORITY_NORMAL),", "+\t\t\t\t\tnew Boolean(false),", "+\t\t\t\t\tnew Integer(problem.getSourceStart()),", "+\t\t\t\t\tnew Integer(problem.getSourceEnd() + 1),", "+\t\t\t\t\tnew Integer(problem.getSourceLineNumber()),", "+\t\t\t\t});", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c25ee6ed17bc1c7cfc69d9ae54b51e1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "015c66459c41ce714c2afab061dda99760bcb04e", "commitAfterChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void reportMissingFactoryJar(String jarName, IJavaProject jproj)", "signatureAfterChange": " \tprivate void reportMissingFactoryContainers(Set<FactoryContainer> badContainers, IJavaProject jproj)", "diff": ["-\tprivate void reportMissingFactoryJar(String jarName, IJavaProject jproj) {", "+\tprivate void reportMissingFactoryContainers(Set<FactoryContainer> badContainers, IJavaProject jproj) {", "-\t\ttry {", "-\t\t\tString message = Messages.bind(", "-\t\t\t\t\tMessages.AnnotationProcessorFactoryLoader_factorypath_missingLibrary, ", "-\t\t\t\t\tnew String[] {jarName, project.getName()});", "-\t\t\tIMarker marker = project.createMarker(AptPlugin.APT_BUILD_PROBLEM_MARKER);", "-\t\t\tmarker.setAttributes(", "-\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\tIMarker.MESSAGE, ", "-\t\t\t\t\t\tIMarker.SEVERITY,", "-\t\t\t\t\t\tIMarker.LOCATION", "-\t\t\t\t\t},", "-\t\t\t\t\tnew Object[] {", "-\t\t\t\t\t\tmessage,", "-\t\t\t\t\t\tIMarker.SEVERITY_ERROR,", "-\t\t\t\t\t\tMessages.AnnotationProcessorFactoryLoader_factorypath", "-\t\t\t\t\t}", "-\t\t\t\t);", "-\t\t} catch (CoreException e) {", "-\t\t\tAptPlugin.log(e, \"Unable to create build problem marker\"); //$NON-NLS-1$", "+\t\tfor (FactoryContainer fc : badContainers) {", "+\t\t\ttry {", "+\t\t\t\tString message = Messages.bind(", "+\t\t\t\t\t\tMessages.AnnotationProcessorFactoryLoader_factorypath_missingLibrary, ", "+\t\t\t\t\t\tnew String[] {fc.getId(), project.getName()});", "+\t\t\t\tIMarker marker = project.createMarker(AptPlugin.APT_BUILD_PROBLEM_MARKER);", "+\t\t\t\tmarker.setAttributes(", "+\t\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\t\tIMarker.MESSAGE, ", "+\t\t\t\t\t\t\tIMarker.SEVERITY,", "+\t\t\t\t\t\t\tIMarker.LOCATION", "+\t\t\t\t\t\t},", "+\t\t\t\t\t\tnew Object[] {", "+\t\t\t\t\t\t\tmessage,", "+\t\t\t\t\t\t\tIMarker.SEVERITY_ERROR,", "+\t\t\t\t\t\t\tMessages.AnnotationProcessorFactoryLoader_factorypath", "+\t\t\t\t\t\t}", "+\t\t\t\t\t);", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\tAptPlugin.log(e, \"Unable to create APT build problem marker on project \" + project.getName()); //$NON-NLS-1$", "+\t\t\t}"]}], "num": 49479}