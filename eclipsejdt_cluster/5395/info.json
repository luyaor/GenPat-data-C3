{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b3792179dc2faadf0b37d2e2b1ea4da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32eb0f23130b6e8436be0243d7f512f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 83, "signatureBeforeChange": "  \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["-\t\tif (typeDeclaration instanceof EnumConstant) {", "+\t\tif (typeDeclaration.getKind() == IGenericType.ENUM) {", "-\t\t\t\treturn convert((EnumConstant) typeDeclaration);", "-\t\t\t}", "-\t\t}", "-\t\tif (typeDeclaration instanceof org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) {", "-\t\t\tif (this.ast.apiLevel == AST.JLS2) {", "-\t\t\t\treturn null;", "-\t\t\t} else {", "-\t\t\t\treturn convert((org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) typeDeclaration);", "+\t\t\t\treturn convertToEnumDeclaration(typeDeclaration);", "-\t\ttypeDecl.setInterface(typeDeclaration.isInterface());", "+\t\ttypeDecl.setInterface(typeDeclaration.getKind() == IGenericType.INTERFACE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843f773c8cf38b10ef05193fde3dfc2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ElementInfoConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethodElementInfo sourceMethod, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethodElementInfo sourceMethod, CompilationResult compilationResult)", "diff": ["-\t\t\t\t\t\t((LocalTypeDeclaration)localType).enclosingMethod = method;", "-\t\t\t\t\t\tif (localType instanceof AnonymousLocalTypeDeclaration) {", "-\t\t\t\t\t\t\tAnonymousLocalTypeDeclaration anonymousLocalTypeDeclaration = (AnonymousLocalTypeDeclaration)localType;", "-\t\t\t\t\t\t\tQualifiedAllocationExpression expression = new QualifiedAllocationExpression(anonymousLocalTypeDeclaration);", "-\t\t\t\t\t\t\texpression.type = anonymousLocalTypeDeclaration.superclass;", "-\t\t\t\t\t\t\tanonymousLocalTypeDeclaration.superclass = null;", "-\t\t\t\t\t\t\tanonymousLocalTypeDeclaration.superInterfaces = null;", "-\t\t\t\t\t\t\tanonymousLocalTypeDeclaration.allocation = expression;", "+\t\t\t\t\t\tif ((localType.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\t\t\t\t\tQualifiedAllocationExpression expression = new QualifiedAllocationExpression(localType);", "+\t\t\t\t\t\t\texpression.type = localType.superclass;", "+\t\t\t\t\t\t\tlocalType.superclass = null;", "+\t\t\t\t\t\t\tlocalType.superInterfaces = null;", "+\t\t\t\t\t\t\tlocalType.allocation = expression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0f12ef935b1eab7f66f435d3b3ce34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ElementInfoConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult)", "diff": ["-\t\t\t\t\tif (localType instanceof AnonymousLocalTypeDeclaration) {", "-\t\t\t\t\t\tAnonymousLocalTypeDeclaration anonymousLocalTypeDeclaration = (AnonymousLocalTypeDeclaration)localType;", "-\t\t\t\t\t\tQualifiedAllocationExpression expression = new QualifiedAllocationExpression(anonymousLocalTypeDeclaration);", "-\t\t\t\t\t\texpression.type = anonymousLocalTypeDeclaration.superclass;", "-\t\t\t\t\t\tanonymousLocalTypeDeclaration.superclass = null;", "-\t\t\t\t\t\tanonymousLocalTypeDeclaration.superInterfaces = null;", "-\t\t\t\t\t\tanonymousLocalTypeDeclaration.allocation = expression;", "+\t\t\t\t\tif ((localType.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\t\t\t\tQualifiedAllocationExpression expression = new QualifiedAllocationExpression(localType);", "+\t\t\t\t\t\texpression.type = localType.superclass;", "+\t\t\t\t\t\tlocalType.superclass = null;", "+\t\t\t\t\t\tlocalType.superInterfaces = null;", "+\t\t\t\t\t\tlocalType.allocation = expression;"]}], "num": 5395}