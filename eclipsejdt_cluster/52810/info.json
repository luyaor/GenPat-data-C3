{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d9ca8c125637fe100dbca8d6c455c29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03629398634510c593a959c06391132", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2a46362da18e1189829e578c276cfbf726376a20", "commitAfterChange": "948661c4cb198af70b598b9954e5159cb73d7234", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["-\t\tnext : for (int f = fields.length; --f >= 0;) {\r", "+\t\tnext : for (int f = fields.length; --f >= 0;) {\t\t\t\r", "-\t\t\tfieldsFound.add(field);\r", "+\t\t\tboolean prefixRequired = false;\r", "+\t\t\tchar[] completion = field.name;\r", "-\t\t\t\t\tchar[] completion = field.name;\r", "-\t\t\t\t\tSourceTypeBinding enclosing = scope.enclosingSourceType();\r", "-\r", "-\t\t\t\t\tif (field.isStatic()) {\r", "-\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length - 1];\r", "-\t\t\t\t\t\tcompletion = CharOperation.concat(name, completion, '.');\r", "-\r", "-\t\t\t\t\t} else if (enclosing == invocationScope.enclosingSourceType()) {\r", "-\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "-\r", "-\t\t\t\t\t} else {\r", "-\r", "-\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length - 1];\r", "-\r", "-\t\t\t\t\t\tif (!enclosing.isNestedType()) {\r", "-\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "-\t\t\t\t\t\t\tcompletion = CharOperation.concat(name, completion, '.');\r", "-\r", "-\t\t\t\t\t\t} else if (enclosing.isAnonymousType()) {\r", "-\t\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "-\t\t\t\t\t\t\tint index = CharOperation.lastIndexOf('$', name);\r", "-\t\t\t\t\t\t\tchar[] shortName = CharOperation.subarray(name, index + 1, name.length);\r", "-\t\t\t\t\t\t\tcompletion = CharOperation.concat(shortName, completion, '.');\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t\tSourceTypeBinding declarationType = scope.enclosingSourceType();\r", "+\t\t\t\t\tif (declarationType.isAnonymousType() && declarationType != invocationScope.enclosingSourceType()) {\r", "+\t\t\t\t\t\tcontinue next;\r", "-\r", "-\t\t\t\t\trequestor\r", "-\t\t\t\t\t\t.acceptField(\r", "-\t\t\t\t\t\t\tfield.declaringClass.qualifiedPackageName(),\r", "-\t\t\t\t\t\t\tfield.declaringClass.qualifiedSourceName(),\r", "-\t\t\t\t\t\t\tfield.name,\r", "-\t\t\t\t\t\t\tfield.type.qualifiedPackageName(),\r", "-\t\t\t\t\t\t\tfield.type.qualifiedSourceName(),\r", "-\t\t\t\t\t\t\tcompletion,\r", "-\r", "-\t\t\t\t\t// may include some qualification to resolve ambiguities\r", "-\t\t\t\t\tfield.modifiers, startPosition, endPosition);\r", "-\t\t\t\t\tcontinue next;\r", "+\t\t\t\t\tprefixRequired = true;\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\t\r", "+\t\t\tfieldsFound.add(field);\r", "+\t\t\t\r", "+\t\t\tif(prefixRequired){\r", "+\t\t\t\tchar[] prefix = computePrefix(scope.enclosingSourceType(), invocationScope.enclosingSourceType(), field.isStatic());\r", "+\t\t\t\tcompletion = CharOperation.concat(prefix,completion,'.');\r", "-\t\t\t\t\tfield.name,\r", "+\t\t\t\t\tcompletion,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e092d236f40d0cab5523fe6199de372d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "55c747d0a8aaf13e7d70753235bf6ee4885d2fa8", "commitAfterChange": "f72032f192993f6a000c445c6ab6a878ffda160a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["+\r", "+\r", "+\r", "+\r", "-\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length-1];\r", "-\t\t\t\t\t\tcompletion = CharOperation.concat(name ,completion,'.');\r", "-\t\t\t\t\t} else {;\r", "-\t\t\t\t\t\tif(enclosing == invocationScope.enclosingSourceType()){\r", "-\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS,completion,'.');\r", "+\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length - 1];\r", "+\t\t\t\t\t\tcompletion = CharOperation.concat(name, completion, '.');\r", "+\t\t\t\t\t} else if (enclosing == invocationScope.enclosingSourceType()) {\r", "+\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length - 1];\r", "+\t\t\t\t\t\tif (!enclosing.isNestedType()) {\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(name, completion, '.');\r", "+\t\t\t\t\t\t} else if (enclosing.isAnonymousType()) {\r", "+\t\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length-1];\r", "-\t\t\t\t\t\t\tif(!enclosing.isNestedType()){\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS,completion,'.');\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(name,completion,'.');\r", "-\t\t\t\t\t\t\t} else if (!enclosing.isAnonymousType()){\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS,completion,'.');\r", "-\t\t\t\t\t\t\t\tint index = CharOperation.lastIndexOf('$',name);\r", "-\t\t\t\t\t\t\t\tchar[] shortName = CharOperation.subarray(name,index+1,name.length);\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(shortName,completion,'.');\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "+\t\t\t\t\t\t\tint index = CharOperation.lastIndexOf('$', name);\r", "+\t\t\t\t\t\t\tchar[] shortName = CharOperation.subarray(name, index + 1, name.length);\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(shortName, completion, '.');\r", "+\r"]}], "num": 52810}