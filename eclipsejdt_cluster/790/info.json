{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa6f6e35762b6e22f98fc00150448667", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d603f98677cfb05dadf34d6fb60941d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "adc7524aebd9a4a97b97fcc571a0ede6619bc1b9", "commitAfterChange": "be7e6411023a6903c530d8bc6b6909a57de5e000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t// notify reconcile participants", "-\t\t\tnotifyParticipants(workingCopy);", "+\t\t\t// notify reconcile participants only if working copy was not consistent or if forcing problem detection", "+\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=177319)", "+\t\t\tif (!wasConsistent || this.forceProblemDetection)", "+\t\t\t\tnotifyParticipants(workingCopy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1762c762b8b5529f2d55763bc73262d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/UnresolvedReferenceNameFinder.java", "commitBeforeChange": "e0d96d91a2a3382c51c572fe1c4254d193e4a7b4", "commitAfterChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate int indexOfNextName(int index)", "signatureAfterChange": " \t \tprivate int indexOfNextName(int index)", "diff": ["-\t\t\tthis.potentialVariableNamesPtr = index;", "+\t\t\tif  (index < this.potentialVariableNamesPtr) {", "+\t\t\t\tthis.potentialVariableNamesPtr = index;", "+\t\t\t}"]}], "num": 790}