{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b92222f46edf388db3aa81e1246acd3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e99e212afa0f7fa8e337a4691d58fe4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, int offset, int length)", "signatureAfterChange": " \t \tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, int offset, int length)", "diff": ["+\t", "+\tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, int offset, int length) {", "+\t\tif (lineSeparator != null) {", "+\t\t\tthis.preferences.line_separator = lineSeparator;", "+\t\t} else {", "+\t\t\tthis.preferences.line_separator = System.getProperty(\"line.separator\"); //$NON-NLS-1$", "+\t\t}", "+\t\tthis.preferences.initial_indentation_level = indentationLevel;", "+", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length);", "+\t\t", "+\t\treturn  this.newCodeFormatter.format(source, constructorDeclaration);", "+\t}", "-\t", "-\tprivate TextEdit internalFormatStatements(String source, int indentationLevel, String lineSeparator, ConstructorDeclaration constructorDeclaration, int offset, int length) {", "-\t\tif (lineSeparator != null) {", "-\t\t\tthis.preferences.line_delimiter = lineSeparator;", "-\t\t}", "-\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length);", "-\t\t", "-\t\treturn  this.newCodeFormatter.format(source, constructorDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9b6c17b7401a8aa610c738c603dc72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length)", "diff": ["+", "+\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length) {", "+\t\tif (lineSeparator != null) {", "+\t\t\tthis.preferences.line_separator = lineSeparator;", "+\t\t} else {", "+\t\t\tthis.preferences.line_separator = System.getProperty(\"line.separator\"); //$NON-NLS-1$", "+\t\t}", "+\t\tthis.preferences.initial_indentation_level = indentationLevel;", "+", "+\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length);", "+\t\t", "+\t\treturn this.newCodeFormatter.format(source, expression);", "+\t}", "-", "-\tprivate TextEdit internalFormatExpression(String source, int indentationLevel, String lineSeparator, Expression expression, int offset, int length) {", "-\t\tif (lineSeparator != null) {", "-\t\t\tthis.preferences.line_delimiter = lineSeparator;", "-\t\t}", "-\t\tthis.preferences.initial_indentation_level = indentationLevel;", "-", "-\t\tthis.newCodeFormatter = new CodeFormatterVisitor(this.preferences, options, offset, length);", "-\t\t", "-\t\treturn this.newCodeFormatter.format(source, expression);", "-\t}"]}], "num": 53779}