{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a602ec4f7d2a08828918e17c46389481", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0795acb7819ed7738040fbf5aba0c0d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "a6231ce33b0c4c1035133950b71c0c97d48b4fc8", "commitAfterChange": "fb73ff7c4976ff452de2ec97a6404f1940e5234e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public static int nextAvailablePortNumber()", "signatureAfterChange": " public static int getFreePort()", "diff": ["-public static int nextAvailablePortNumber() {", "-\tfor (int i = MAX_PORT_NUMBER; i > 1000; i--) {", "-\t\tint localPort = new SocketHelper().getAvailablePort(i);", "-\t\tif (localPort != -1) {", "-\t\t\treturn localPort;", "+public static int getFreePort() {", "+\tServerSocket socket = null;", "+\ttry {", "+\t\tsocket = new ServerSocket(0);", "+\t\treturn socket.getLocalPort();", "+\t} catch (IOException e) {", "+\t\t// ignore", "+\t} finally {", "+\t\tif (socket != null) {", "+\t\t\ttry {", "+\t\t\t\tsocket.close();", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// ignore", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27787a71e4fd10a3e7fcc4135cc66a7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "a3da1013b6fe549ad5c2ee5b7dc726eba38ff59e", "commitAfterChange": "30692448718de71df165cc52c018bee7df31a8fb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void enterClass( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd, \t\tchar[] superclass, \t\tchar[][] superinterfaces)", "signatureAfterChange": " \tpublic void enterClass(TypeInfo typeInfo)", "diff": ["-\tpublic void enterClass(", "-\t\tint declarationStart,", "-\t\tint modifiers,", "-\t\tchar[] name,", "-\t\tint nameSourceStart,", "-\t\tint nameSourceEnd,", "-\t\tchar[] superclass,", "-\t\tchar[][] superinterfaces) {", "+\tpublic void enterClass(TypeInfo typeInfo) {", "-\t\tif (name.length == 0) {", "+\t\tif (typeInfo.name.length == 0) {", "-\t\t\t\tthis.types[typeDepth] = this.getType(new String(name));\t\t\t\t", "+\t\t\t\tthis.types[typeDepth] = this.getType(new String(typeInfo.name));\t\t\t\t", "-\t\t\tthis.types[typeDepth] = this.getType(new String(name));", "+\t\t\tthis.types[typeDepth] = this.getType(new String(typeInfo.name));", "-\t\t\tnew SourceRange(nameSourceStart, nameSourceEnd - nameSourceStart + 1);", "-\t\tthis.typeDeclarationStarts[typeDepth] = declarationStart;", "+\t\t\tnew SourceRange(typeInfo.nameSourceStart, typeInfo.nameSourceEnd - typeInfo.nameSourceStart + 1);", "+\t\tthis.typeDeclarationStarts[typeDepth] = typeInfo.declarationStart;"]}], "num": 49802}