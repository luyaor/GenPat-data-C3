{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ec1bdcc167f1d4655692fcf3c3775ac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63217c1c4d0099748470d24fc8bd25b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "3e7cf81e60cc58d031ed4122a60846c5260297d0", "commitAfterChange": "4c23c3ad7f7e3db972a09fa55eef5555a90bc2bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\texpectedCollectionType = upperScope.createArrayType(elementType, 1);", "-\t\t\t\tthis.collection.computeConversion(this.scope, expectedCollectionType, collectionType);", "-\t\t\t\t\texpectedCollectionType = null;", "+\t\t\t\t\tthis.collection.computeConversion(this.scope, collectionType, collectionType);", "-\t\t\t\t\texpectedCollectionType = null;", "+\t\t\t\t\tthis.collection.computeConversion(this.scope, collectionType, collectionType);", "+\t\t\t\t} else {", "+\t\t\t\t\texpectedCollectionType = upperScope.createArrayType(elementType, 1);", "+\t\t\t\t\tthis.collection.computeConversion(this.scope, expectedCollectionType, collectionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e3c61084cb7b2d79f7c7bcfcf6fbc28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\t\tthis.resolvedCopies = new HashMap<TypeBinding, LambdaExpression>();", "+\t\t\t", "+\t\t\t\t\tif (groundType != expectedSAMType) { //$IDENTITY-COMPARISON$", "+\t\t\t\t\t\tif (!groundType.isCompatibleWith(expectedSAMType, this.scope)) { // the ground has shifted, are we still on firm grounds ? ", "+\t\t\t\t\t\t\tblockScope.problemReporter().typeMismatchError(groundType, this.expectedType, this, null); // report deliberately against block scope so as not to blame the lambda.", "+\t\t\t\t\t\t\treturn this.resolvedType = null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\tthis.voidCompatible = this.original.voidCompatible = expression.statementExpression();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f52861d27e65873a16f466db01fd67c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a899cd29a75883646450816539797817299ec777", "commitAfterChange": "bdf79fcc26d1f82ae3c59775bd7a3df51c38f892", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "diff": ["-\t\tif (scope.isBoxingCompatibleWith(expressionType, expectedType)) {", "-\t\t\tthis.computeConversion(scope, expectedType, expressionType);", "-\t\t} else if (!expressionType.isCompatibleWith(expectedType)) {", "-\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "-\t\t\treturn null;", "+\t\tif (!expressionType.isCompatibleWith(expectedType)) {", "+\t\t\tif (scope.isBoxingCompatibleWith(expressionType, expectedType)) {", "+\t\t\t\tthis.computeConversion(scope, expectedType, expressionType);", "+\t\t\t} else {", "+\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "+\t\t\t\treturn null;", "+\t\t\t}"]}], "num": 53121}