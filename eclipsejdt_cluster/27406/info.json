{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79a5fb25dda43db9ab4cf68d97a47d5c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eadc51f13e467682efb5bd0b799b571", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public ArrayBinding createArrayType(TypeBinding leafComponentType, int dimensionCount, long[] nullTagBitsPerDimension)", "signatureAfterChange": "  public ArrayBinding createArrayType(TypeBinding leafComponentType, int dimensionCount, AnnotationBinding [] annotations)", "diff": ["-public ArrayBinding createArrayType(TypeBinding leafComponentType, int dimensionCount, long[] nullTagBitsPerDimension) {", "-\tif (leafComponentType instanceof LocalTypeBinding) // cache local type arrays with the local type itself", "-\t\treturn ((LocalTypeBinding) leafComponentType).createArrayType(dimensionCount, this);", "-\t// find the array binding cache for this dimension", "-\tint dimIndex = dimensionCount - 1;", "-\tint length = this.uniqueArrayBindings.length;", "-\tArrayBinding[] arrayBindings;", "-\tif (dimIndex < length) {", "-\t\tif ((arrayBindings = this.uniqueArrayBindings[dimIndex]) == null)", "-\t\t\tthis.uniqueArrayBindings[dimIndex] = arrayBindings = new ArrayBinding[10];", "-\t} else {", "-\t\tSystem.arraycopy(", "-\t\t\tthis.uniqueArrayBindings, 0,", "-\t\t\tthis.uniqueArrayBindings = new ArrayBinding[dimensionCount][], 0,", "-\t\t\tlength);", "-\t\tthis.uniqueArrayBindings[dimIndex] = arrayBindings = new ArrayBinding[10];", "-\t}", "-", "-\t// find the cached array binding for this leaf component type (if any)", "-\tint index = -1;", "-\tlength = arrayBindings.length;", "-\twhile (++index < length) {", "-\t\tArrayBinding currentBinding = arrayBindings[index];", "-\t\tif (currentBinding == null) // no matching array, but space left", "-\t\t\treturn arrayBindings[index] = new ArrayBinding(leafComponentType, dimensionCount, this, nullTagBitsPerDimension);", "-\t\tif (currentBinding.leafComponentType == leafComponentType", "-\t\t\t\t&& Arrays.equals(currentBinding.nullTagBitsPerDimension, nullTagBitsPerDimension))", "-\t\t\treturn currentBinding;", "-\t}", "-", "-\t// no matching array, no space left", "-\tSystem.arraycopy(", "-\t\tarrayBindings, 0,", "-\t\t(arrayBindings = new ArrayBinding[length * 2]), 0,", "-\t\tlength);", "-\tthis.uniqueArrayBindings[dimIndex] = arrayBindings;", "-\treturn arrayBindings[length] = new ArrayBinding(leafComponentType, dimensionCount, this, nullTagBitsPerDimension);", "+public ArrayBinding createArrayType(TypeBinding leafComponentType, int dimensionCount, AnnotationBinding [] annotations) {", "+\treturn this.typeSystem.getArrayType(leafComponentType, dimensionCount, annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9867f00079573961db63e48fce3e8baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "30aedf23357d9600428aaa2abca9a22bb46f4cd3", "commitAfterChange": "ea035aff9493ec8381c8d6bd9548845ad9f81e22", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public TypeBinding createIntersectionCastType(ReferenceBinding[] intersectingTypes)", "signatureAfterChange": "  public TypeBinding createIntersectionCastType(ReferenceBinding[] intersectingTypes)", "diff": ["-\t", "-\t// this is perhaps an overkill, but since what is worth doing is worth doing well ...", "-\t", "-\tint count = intersectingTypes.length;", "-\tint length = this.uniqueIntersectionCastTypeBindings.length;", "-\tIntersectionCastTypeBinding[] intersectionCastTypeBindings;", "+\treturn this.typeSystem.getIntersectionCastType(intersectingTypes);", "+}\t", "-\tif (count < length) {", "-\t\tif ((intersectionCastTypeBindings = this.uniqueIntersectionCastTypeBindings[count]) == null)", "-\t\t\tthis.uniqueIntersectionCastTypeBindings[count] = intersectionCastTypeBindings = new IntersectionCastTypeBinding[4];", "-\t} else {", "-\t\tSystem.arraycopy(", "-\t\t\tthis.uniqueIntersectionCastTypeBindings, 0,", "-\t\t\tthis.uniqueIntersectionCastTypeBindings = new IntersectionCastTypeBinding[count + 1][], 0,", "-\t\t\tlength);", "-\t\tthis.uniqueIntersectionCastTypeBindings[count] = intersectionCastTypeBindings = new IntersectionCastTypeBinding[4];", "-\t}", "-", "-\tint index = -1;", "-\tlength = intersectionCastTypeBindings.length;", "-\tnext:while (++index < length) {", "-\t\tIntersectionCastTypeBinding priorBinding = intersectionCastTypeBindings[index];", "-\t\tif (priorBinding == null) // no matching intersection type, but space left", "-\t\t\treturn intersectionCastTypeBindings[index] = new IntersectionCastTypeBinding(intersectingTypes, this);", "-\t\tReferenceBinding [] priorIntersectingTypes = priorBinding.intersectingTypes;", "-\t\tfor (int i = 0; i < count; i++) {", "-\t\t\tif (intersectingTypes[i] != priorIntersectingTypes[i])", "-\t\t\t\tcontinue next;", "-\t\t}\t", "-\t\treturn priorBinding;", "-\t}", "-", "-\t// no matching cached binding & no space left", "-\tSystem.arraycopy(", "-\t\tintersectionCastTypeBindings, 0,", "-\t\t(intersectionCastTypeBindings = new IntersectionCastTypeBinding[length * 2]), 0,", "-\t\tlength);", "-\tthis.uniqueIntersectionCastTypeBindings[count] = intersectionCastTypeBindings;", "-\treturn intersectionCastTypeBindings[length] = new IntersectionCastTypeBinding(intersectingTypes, this);", "-}"]}], "num": 27406}