{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62a10b5420b7782c5b58185dedae4e5e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03357c5b7c7f00b8bbc5a8ed41c6e4e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tlong[] positions = importRef.sourcePositions;", "-\t\tint last = positions.length - 1;", "-\t\tif (binding instanceof ProblemReferenceBinding)", "-\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "-\t\tif (binding instanceof ReferenceBinding) {", "-\t\t\tPackageBinding pkgBinding = ((ReferenceBinding) binding).fPackage;", "-\t\t\tif (pkgBinding != null)", "-\t\t\t\tlast = pkgBinding.compoundName.length;", "+\t\tif (locator.encloses(element)) {", "+\t\t\tlong[] positions = importRef.sourcePositions;", "+\t\t\tint last = positions.length - 1;", "+\t\t\tif (binding instanceof ProblemReferenceBinding)", "+\t\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "+\t\t\tif (binding instanceof ReferenceBinding) {", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding) binding).fPackage;", "+\t\t\t\tif (pkgBinding != null)", "+\t\t\t\t\tlast = pkgBinding.compoundName.length;", "+\t\t\t}", "+\t\t\tSearchMatch match = JavaSearchMatch.newReferenceMatch(IJavaElement.PACKAGE_FRAGMENT, element, accuracy, ((int) (positions[0] >>> 32)), ((int) positions[last - 1])+1, locator);", "+\t\t\tlocator.report(match);", "-\t\tlocator.report(positions[0], positions[last - 1], element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcd56772e3fc27d05f3a2b8f0c220ad6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "daa141019959a9f08f456a67f61c89b2a391fc85", "commitAfterChange": "3d64bc62d20a2710c039270dfe1984ed9440baac", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void matchLevelAndReportImportRef(ImportReference importRef, Binding binding, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchLevelAndReportImportRef(ImportReference importRef, Binding binding, MatchLocator locator) throws CoreException", "diff": ["+\t", "+\t// for static import, binding can be a field binding or a member type binding", "+\t// verify that in this case binding is static and use declaring class for fields", "+\tBinding refBinding = binding;", "+\tif (importRef.isStatic()) {", "+\t\tif (binding instanceof FieldBinding) {", "+\t\t\tFieldBinding fieldBinding = (FieldBinding) binding;", "+\t\t\tif (!fieldBinding.isStatic()) return;", "+\t\t\trefBinding = fieldBinding.declaringClass;", "+\t\t} else if (binding instanceof MethodBinding) {", "+\t\t\tMethodBinding methodBinding = (MethodBinding) binding;", "+\t\t\tif (!methodBinding.isStatic()) return;", "+\t\t\trefBinding = methodBinding.declaringClass;", "+\t\t} else if (binding instanceof MemberTypeBinding) {", "+\t\t\tMemberTypeBinding memberBinding = (MemberTypeBinding) binding;", "+\t\t\tif (!memberBinding.isStatic()) return;", "+\t\t}", "+\t}", "+\t", "+\t// Look for closest pattern", "-\t\tint newLevel = patternLocator.referenceType() == 0 ? IMPOSSIBLE_MATCH : patternLocator.resolveLevel(binding);", "+\t\tint newLevel = patternLocator.referenceType() == 0 ? IMPOSSIBLE_MATCH : patternLocator.resolveLevel(refBinding);", "-\tif (closestPattern != null)", "+\tif (closestPattern != null) {", "+\t}"]}], "num": 44077}