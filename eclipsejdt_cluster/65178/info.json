{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba83e3e52ded9956cd068b3bdfb8d42e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c42c25216b45ee8d5f8eae8dc3444b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5c5b92cd29e487fabbf1e984ae3344944851e9b7", "commitAfterChange": "d4c371a1d5a37d3364d0e834a4122f2f818fd8b5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tSourceTypeBinding buildType(SourceTypeBinding enclosingType, PackageBinding packageBinding, AccessRestriction accessRestriction)", "signatureAfterChange": " \t \tSourceTypeBinding buildType(SourceTypeBinding enclosingType, PackageBinding packageBinding, AccessRestriction accessRestriction)", "diff": ["-\t\t\tif (existingType != null)", "-\t\t\t\t// report the error against the parent - its still safe to answer the member type", "-\t\t\t\tthis.parent.problemReporter().duplicateNestedType(referenceContext);", "+\t\t\tif (existingType != null) {", "+\t\t\t\tif (existingType instanceof UnresolvedReferenceBinding) {", "+\t\t\t\t\t// its possible that a BinaryType referenced the member type before its enclosing source type was built", "+\t\t\t\t\t// so just replace the unresolved type with a new member type", "+\t\t\t\t} else {", "+\t\t\t\t\t// report the error against the parent - its still safe to answer the member type", "+\t\t\t\t\tthis.parent.problemReporter().duplicateNestedType(referenceContext);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c406a086015bd504799000f2572f1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f08399b6c3b85028e58f14c2c7d9ea2ab9a83a79", "commitAfterChange": "3575e4b916e9151da43f7d5bca2f917975264d4c", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\t\tif (!current.returnType.isCompatibleWith(next.returnType)) ", "+\t\t\t\t\t\t\tif (current instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "+\t\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\t} else if (!current.returnType.isCompatibleWith(next.returnType)) { ", "-\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "-\t\t\t\t\t\t\t\tcontinue nextSpecific;", "-\t\t\t\t\t\t\t// continue with original 15.12.2", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// continue with original 15.12.2.5"]}], "num": 65178}