{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8cd649fd3af91d51bb0017f04672552", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cae9ac82fd5e7d55e65a30bf436a36e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "833acf9fd171cc3b88beb3f35c58318abd7b1b7c", "commitAfterChange": "e83ae1e37e0f93b696a44a9888bf8d5e9425c659", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": " \t \tpublic void _test0227() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0227() throws JavaModelException", "diff": ["-\tpublic void _test0227() throws JavaModelException {", "+\tpublic void test0227() throws JavaModelException {", "-    \t\t\"\tpublic void f() {}\\n\" + ", "+    \t\t\t// the annotation we chase up is not this one, but the one", "+    \t\t\t// carried by B#f", "+    \t\t\"\tpublic void f() {}\\n\" +", "+    \t\t\"   IFoo.IBar m;\\n\" + ", "-\t\tassertTrue(\"not a type binding\", value instanceof ITypeBinding);", "-\t\tITypeBinding typeBinding2 = (ITypeBinding) value;", "-\t\tassertEquals(\"Wrong qualified name\", \"intf.IFoo.IBar\", typeBinding2.getQualifiedName());", "+\t\tassertTrue(\"Not a type binding\", value instanceof ITypeBinding);", "+\t\tIVariableBinding[] fields = ", "+\t\t\tdeclaration.resolveBinding().getDeclaredFields();", "+\t\tassertTrue(\"Bad field definition\", fields != null && fields.length == 1);", "+\t\tassertEquals(\"Type binding mismatch\", value, fields[0].getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd578f2de98f404f838d728aeede7f66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "431e7408b1f322cc72b90589fe7c96489b23e8aa", "commitAfterChange": "ec9bc6be749fbdfaa55a496563818e8733fd8314", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void _testBug418979_002() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug418979_002() throws JavaModelException", "diff": ["-\tpublic void _testBug418979_002() throws JavaModelException {", "+\tpublic void testBug418979_002() throws JavaModelException {", "-\t\t\t\t\"    test.@A Outer<>.@A Inner<> i;\\n\" +", "+\t\t\t\t\"    test.@A Outer<C>.@A Inner<C> i;\\n\" +", "+\t\t\t\t\"class C {}\\n\" +", "-\t\tcheckSourceRange(field, \"test.@A Outer<>.@A Inner<> i\", contents);", "+\t\tcheckSourceRange(field, \"test.@A Outer<C>.@A Inner<C> i;\", contents);", "-\t\tcheckSourceRange(parameterizedType, \"test.@A Outer<>.@A Inner<>\", contents);", "+\t\tcheckSourceRange(parameterizedType, \"test.@A Outer<C>.@A Inner<C>\", contents);", "-\t\tcheckSourceRange(qualifiedType, \"test.@A Outer<>.@A Inner\", contents);", "+\t\tcheckSourceRange(qualifiedType, \"test.@A Outer<C>.@A Inner\", contents);", "-\t\tcheckSourceRange(parameterizedType, \"test.@A Outer<>\", contents);", "+\t\tcheckSourceRange(parameterizedType, \"test.@A Outer<C>\", contents);"]}], "num": 26608}