{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80f3bcf9f47d98c6d78697ad4e7dc4a5", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c071b994e3f8f1fab68cb9faceb2fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tswitch(methodBinding.parameters.length) {\r", "-\t\t\t\t\tcase 1:\r", "-\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "-\t\t\t\t\t\t\tcase T_String :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_Object :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_int :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_char :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_boolean :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_float :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_double :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_long :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\tcase 0:\r", "-\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "-\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t}\r", "+\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t// This method binding is (java.lang.String)V\r", "+\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t} else\r", "+\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "+\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f509fa7930d75faf13ce96956008df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tswitch(methodBinding.parameters.length) {\r", "-\t\t\t\t\tcase 1:\r", "-\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "-\t\t\t\t\t\t\tcase T_String :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_Object :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_int :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_char :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_boolean :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_float :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_double :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_long :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\tcase 0:\r", "-\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "-\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t}\r", "+\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t// This method binding is (java.lang.String)V\r", "+\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t} else\r", "+\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "+\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a09311570834876d87ee325cc91076e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tswitch(methodBinding.parameters.length) {\r", "-\t\t\t\t\tcase 1:\r", "-\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "-\t\t\t\t\t\t\tcase T_String :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_Object :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_int :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_char :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_boolean :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_float :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_double :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_long :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\tcase 0:\r", "-\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "-\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t}\r", "+\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t// This method binding is (java.lang.String)V\r", "+\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t} else\r", "+\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "+\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7607e7e7acfca81c5a04f1fa4f87f452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ConstantPool.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "signatureAfterChange": "\r public int indexOfWellKnownMethodNameAndType(MethodBinding methodBinding)", "diff": ["-\t\t\t\tswitch(methodBinding.parameters.length) {\r", "-\t\t\t\t\tcase 1:\r", "-\t\t\t\t\t\tswitch(methodBinding.parameters[0].id) {\r", "-\t\t\t\t\t\t\tcase T_String :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_STRING_METHOD_NAME_AND_TYPE;\t\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_Object :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorObjectConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_OBJECT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_int :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorIntConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_INT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_char :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorCharConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_CHAR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_boolean :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorBooleanConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_BOOLEAN_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_float :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorFloatConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_FLOAT_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_double :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorDoubleConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_DOUBLE_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tcase T_long :\r", "-\t\t\t\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.AssertionErrorLongConstrSignature)) {\r", "-\t\t\t\t\t\t\t\t\treturn CONSTR_LONG_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t\t\t} else {\r", "-\t\t\t\t\t\t\t\t\treturn -1;\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\tcase 0:\r", "-\t\t\t\t\t\tif (methodBinding.signature().length == 3) {\r", "-\t\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t}\r", "+\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.StringConstructorSignature)) {\r", "+\t\t\t\t\t// This method binding is (java.lang.String)V\r", "+\t\t\t\t\treturn STRING_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t} else\r", "+\t\t\t\t\tif (CharOperation.equals(methodBinding.signature(), QualifiedNamesConstants.DefaultConstructorSignature)) {\r", "+\t\t\t\t\t\treturn DEFAULT_CONSTR_METHOD_NAME_AND_TYPE;\r", "+\t\t\t\t\t}\r"]}], "num": 20588}