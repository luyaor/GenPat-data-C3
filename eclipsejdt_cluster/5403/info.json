{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77b8485ac76a94ea08881739258a3450", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2577776944ceac00124fdb962b82a9aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "6acdb4510909317e02bb4ba566a6d0b5f09916da", "commitAfterChange": "9b7b19bdcdbcea831580c60277f290356f5e2da7", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " protected void validateOptions(boolean didSpecifyCompliance)", "signatureAfterChange": " protected void validateOptions(boolean didSpecifyCompliance)", "diff": ["-\tfinal Object sourceVersion = this.options.get(CompilerOptions.OPTION_Source);", "-\tfinal Object compliance = this.options.get(CompilerOptions.OPTION_Compliance);", "+\tfinal String sourceVersion = this.options.get(CompilerOptions.OPTION_Source);", "+\tfinal String compliance = this.options.get(CompilerOptions.OPTION_Compliance);", "-\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_8)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_8)); //$NON-NLS-1$", "-\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "-\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "-\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "-\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "-\t\tfinal Object targetVersion = this.options.get(CompilerOptions.OPTION_TargetPlatform);", "+\t\tfinal String targetVersion = this.options.get(CompilerOptions.OPTION_TargetPlatform);", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForGenericSource\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForGenericSource\", targetVersion, sourceVersion)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleSourceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleSourceForCldcTarget\", targetVersion, sourceVersion)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForCldcTarget\", targetVersion, sourceVersion)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_8)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", targetVersion, CompilerOptions.VERSION_1_8)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", targetVersion, CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", targetVersion, CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", targetVersion, CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", targetVersion, CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "-\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), (String) targetVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForTarget\", this.options.get(CompilerOptions.OPTION_Compliance), targetVersion)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b44663361ce77a13132d903ea3b62aa5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " protected void validateOptions(boolean didSpecifyCompliance) throws InvalidInputException", "signatureAfterChange": " protected void validateOptions(boolean didSpecifyCompliance)", "diff": ["-protected void validateOptions(boolean didSpecifyCompliance) throws InvalidInputException {", "+protected void validateOptions(boolean didSpecifyCompliance) {", "-\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "-\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "-\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "-\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForSource\", (String)this.options.get(CompilerOptions.OPTION_Compliance), CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleTargetForGenericSource\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForGenericSource\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleSourceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleSourceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForCldcTarget\", (String) targetVersion, (String) sourceVersion)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_7)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_6)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_5)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleTargetForSource\", (String) targetVersion, CompilerOptions.VERSION_1_4)); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(this.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), (String) targetVersion)); //$NON-NLS-1$", "+\t\t\t\tthrow new IllegalArgumentException(this.bind(\"configure.incompatibleComplianceForTarget\", (String)this.options.get(CompilerOptions.OPTION_Compliance), (String) targetVersion)); //$NON-NLS-1$"]}], "num": 5403}