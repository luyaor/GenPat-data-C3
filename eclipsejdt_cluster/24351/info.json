{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82ce4ae0b582c31337fda7c3d85d0928", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881698e201262cc79587a8b8d83515d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "de9b15ef333e994a84fc3aeb3bf5f6813e97aa47", "commitAfterChange": "de810d934f501a2d4e72898176ffa2636e3d8f40", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\telse if (flowInfo.isPotentiallyUnknown(local)) {", "+\t\t\telse if (flowInfo.cannotBeDefinitelyNullOrNonNull(local)) {", "-\t\t\telse if (flowInfo.isPotentiallyUnknown(local)) {", "+\t\t\telse if (flowInfo.cannotBeDefinitelyNullOrNonNull(local)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8b3654f1b9b0afd4e7be251e498eb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/AndPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-\t\t\t\tif (i < potentialLength) {", "+\t\t\t\tif (i < potentialLength)", "-\t\t\t\t} else {", "+\t\t\t\telse", "-\t\t\t\t}", "-\t\t\tif ((potentialRefs[vectorIndex] & (1L << (reference % 64))) != 0) {", "+\t\t\tif ((potentialRefs[vectorIndex] & (1L << (reference % 64))) != 0)", "-\t\t\t}"]}], "num": 24351}