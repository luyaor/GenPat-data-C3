{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30bf0b3db127b665c88448ce2ca52a99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b92fd393e1285e9b2a00a826719734f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "916e1b97cb8f68e0c3d2550db5f74003efc3f036", "commitAfterChange": "cb0883381704b865376b174b125a5d26ee0abae4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate String[] errorsForInvalidTagsClassOrField(int visibility)", "signatureAfterChange": "  \tprivate String[] errorsForInvalidTagsClassOrField(int visibility)", "diff": ["+\t\tint size = visibility+1;", "-\t\t\tif (visibility == (length-1)) return CLASSES_ERRORS;", "-\t\t\tString[] errors = new String[length];", "-\t\t\tSystem.arraycopy(CLASSES_ERRORS, 0, errors, 0, length);", "+\t\t\tif (size == length) return CLASSES_ERRORS;", "+\t\t\tString[] errors = new String[size];", "+\t\t\tSystem.arraycopy(CLASSES_ERRORS, 0, errors, 0, size);", "-\t\tString[] errors = new String[visibility+1];", "-\t\tfor (int i=0, count=1; i<= visibility; i++) {", "+\t\tString[] errors = new String[size];", "+\t\tfor (int i=0, count=1; i<size; i++) {", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51fb144b11d558cc9b72f1a86cd9061e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "916e1b97cb8f68e0c3d2550db5f74003efc3f036", "commitAfterChange": "cb0883381704b865376b174b125a5d26ee0abae4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate String[] errorsForInvalidTagsMethodOrConstructor(int visibility)", "signatureAfterChange": "  \tprivate String[] errorsForInvalidTagsMethodOrConstructor(int visibility)", "diff": ["+\t\tint size = visibility+1;", "-\t\t\tif (visibility == (length-1)) return METHODS_ERRORS;", "-\t\t\tString[] errors = new String[visibility];", "-\t\t\tSystem.arraycopy(METHODS_ERRORS, 0, errors, 0, length);", "+\t\t\tif (size == length) return METHODS_ERRORS;", "+\t\t\tString[] errors = new String[size];", "+\t\t\tSystem.arraycopy(METHODS_ERRORS, 0, errors, 0, size);", "-\t\tString[] errors = new String[visibility+1];", "-\t\tfor (int i=0, count=1; i<= visibility; i++) {", "+\t\tString[] errors = new String[size];", "+\t\tfor (int i=0, count=1; i<size; i++) {"]}], "num": 53878}