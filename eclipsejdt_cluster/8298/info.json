{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6282c77891118931b132ccc5eab6676f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae17cee49b1975c0a2fa5e8f535f773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7ad33f26eedd4780b8e7bafe9288f3217000d5fd", "commitAfterChange": "011b2686c2cb0787dd0d6632931ecc153c5a5666", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \t \tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "signatureAfterChange": " \t \tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword, boolean adjustOnNext)", "diff": ["-\tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword) {", "+\tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword, boolean adjustOnNext) {", "-\t\t\t\tif (isAllInserted) {", "+\t\t\t\tif (isAllInserted && adjustOnNext) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a7f0fa22094bb6c7f006f2a70083a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "fb2e3abc53624f743940363bb17ddf0720807a6d", "commitAfterChange": "42957d127056d12b428b487ce82412f212a62c68", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants)", "diff": ["-\t\t\tnew LookupEnvironment(this, options, problemReporter, environment);", "+\t\tthis.lookupEnvironment = new LookupEnvironment(this, this.options, problemReporter, environment);"]}], "num": 8298}