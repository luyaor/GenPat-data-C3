{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1366517502f7320c3b1e2ac9eb2ed854", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8b9367afba4126192c3d4d1c14eeb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " void initialize(boolean reuseExistingFile) throws IOException", "signatureAfterChange": " void initialize(boolean reuseExistingFile) throws IOException", "diff": ["-}", "-\tFile indexFile = getIndexFile();", "-\tif (indexFile.exists()) {", "+\tif (this.indexFile.exists()) {", "-\t\t\tRandomAccessFile file = new RandomAccessFile(this.fileName, \"r\"); //$NON-NLS-1$", "+\t\t\tRandomAccessFile file = new RandomAccessFile(this.indexFile, \"r\"); //$NON-NLS-1$", "-\t\tif (!indexFile.delete()) {", "+\t\tif (!this.indexFile.delete()) {", "-\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.fileName); //$NON-NLS-1$", "-\t\t\tthrow new IOException(\"Failed to delete index \" + this.fileName); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "+\t\t\tthrow new IOException(\"Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "-\tif (indexFile.createNewFile()) {", "-\t\tRandomAccessFile file = new RandomAccessFile(this.fileName, \"rw\"); //$NON-NLS-1$", "+\tif (this.indexFile.createNewFile()) {", "+\t\tRandomAccessFile file = new RandomAccessFile(this.indexFile, \"rw\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.fileName); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Failed to create new index \" + this.fileName); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.indexFile); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Failed to create new index \" + this.indexFile); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc08425612871c3edc798d3ecc60175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " void initialize(boolean reuseExistingFile) throws IOException", "signatureAfterChange": " void initialize(boolean reuseExistingFile) throws IOException", "diff": ["-\tif (this.indexFile.exists()) {", "+\tif (this.indexLocation.exists()) {", "-\t\t\tFileInputStream stream = new FileInputStream(this.indexFile);", "+\t\t\tInputStream stream = this.indexLocation.getInputStream();", "-\t\tif (!this.indexFile.delete()) {", "+\t\tif (!this.indexLocation.delete()) {", "-\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "-\t\t\tthrow new IOException(\"Failed to delete index \" + this.indexFile); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"initialize - Failed to delete index \" + this.indexLocation); //$NON-NLS-1$", "+\t\t\tthrow new IOException(\"Failed to delete index \" + this.indexLocation); //$NON-NLS-1$", "-\tif (this.indexFile.createNewFile()) {", "-\t\tFileOutputStream stream = new FileOutputStream(this.indexFile, false);", "+\tif (this.indexLocation.createNewFile()) {", "+\t\tFileOutputStream stream = new FileOutputStream(this.indexLocation.getIndexFile(), false);", "-\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.indexFile); //$NON-NLS-1$", "-\t\tthrow new IOException(\"Failed to create new index \" + this.indexFile); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"initialize - Failed to create new index \" + this.indexLocation); //$NON-NLS-1$", "+\t\tthrow new IOException(\"Failed to create new index \" + this.indexLocation); //$NON-NLS-1$"]}], "num": 53954}