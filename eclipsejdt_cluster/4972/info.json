{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e2af35731b510ff33a4fb21132a1e8e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f22cba082fe57e4bfc051b72b71033", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\tif (catchArguments == null) {", "-\t\t\t\tthis.exitAnyExceptionHandler();", "-\t\t\t} else {", "+\t\t\tif (catchArguments != null) {", "-\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\t\t\t\tcurrentScope,", "-\t\t\t\t\t\t\tpreTryInitStateIndex);", "+\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, preTryInitStateIndex);", "-", "-\t\t\t\t\tif (i == maxCatches - 1) {", "-\t\t\t\t\t\tthis.exitAnyExceptionHandler();", "-\t\t\t\t\t}", "+\t\t\tif (finallyMode != FINALLY_SUBROUTINE || this.subRoutineStartLabel == null) {", "+\t\t\t\tthis.exitAnyExceptionHandler();", "+\t\t\t}", "-\t\t\t\tfinallyMode == FINALLY_SUBROUTINE && requiresNaturalExit ? this.enterAnyExceptionHandler(codeStream) : null;", "-\t\t\t\t\t\t", "+\t\t\t\tfinallyMode == FINALLY_SUBROUTINE && requiresNaturalExit ? new ExceptionLabel(codeStream, null) : null;", "+", "-\t\t\t\t// the additional handler is doing: jsr finallyBlock and rethrow TOS-exception", "-", "+\t\t\t\tif (naturalExitExceptionHandler != null) naturalExitExceptionHandler.place();", "+\t\t\t\t", "-\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\t\t\tcurrentScope,", "-\t\t\t\t\t\tpreTryInitStateIndex);", "+\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, preTryInitStateIndex);", "+\t\t\t\t\t\tthis.exitAnyExceptionHandler();", "-\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\t\t\t\t\t\tcurrentScope,", "-\t\t\t\t\t\t\t\t\tpreTryInitStateIndex);", "+\t\t\t\t\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, preTryInitStateIndex);", "-\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(", "-\t\t\t\tcurrentScope,", "-\t\t\t\tmergedInitStateIndex);", "+\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5798d350719e7220e4c4c5bb7ebff3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public boolean generateSubRoutineInvocation(BlockScope currentScope, CodeStream codeStream, Object targetLocation, int stateIndex, LocalVariableBinding secretLocal)", "signatureAfterChange": " public boolean generateSubRoutineInvocation(BlockScope currentScope, CodeStream codeStream, Object targetLocation, int stateIndex, LocalVariableBinding secretLocal)", "diff": ["+\tint resourceCount = this.resources.length;", "+\tif (resourceCount > 0) {", "+\t\tfor (int i = resourceCount; i > 0; --i) {", "+\t\t\t// Disarm the handlers and take care of resource closure.", "+\t\t\tthis.resourceExceptionLabels[i].placeEnd();", "+\t\t\tLocalVariableBinding localVariable = this.resources[i-1].binding;", "+\t\t\tBranchLabel exitLabel = new BranchLabel(codeStream);", "+\t\t\tint invokeCloseStartPc = codeStream.position; // https://bugs.eclipse.org/bugs/show_bug.cgi?id=343785", "+\t\t\tcodeStream.load(localVariable);", "+\t\t\tcodeStream.ifnull(exitLabel);", "+\t\t\tcodeStream.load(localVariable);", "+\t\t\tcodeStream.invokeAutoCloseableClose(localVariable.type);", "+\t\t\tcodeStream.recordPositionsFrom(invokeCloseStartPc, this.tryBlock.sourceEnd);", "+\t\t\texitLabel.place();", "+\t\t}", "+\t\t// Reinstall handlers", "+\t\tfor (int i = resourceCount; i > 0; --i) {", "+\t\t\tthis.resourceExceptionLabels[i].placeStart();", "+\t\t}", "+\t}", "+", "-\t\t\tif (this.naturalExitMergeInitStateIndex != -1 || stateIndex != -1) {", "-\t\t\t\t// reset initialization state, as for a normal catch block", "-\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "-\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (this.naturalExitMergeInitStateIndex != -1) {", "-\t\t\t\t// reset initialization state, as for a normal catch block", "-\t\t\t\tcodeStream.removeNotDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "-\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, this.naturalExitMergeInitStateIndex);", "-\t\t\t}"]}], "num": 4972}