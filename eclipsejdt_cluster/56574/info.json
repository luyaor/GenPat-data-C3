{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cb5f51cfc6a4ce6ca57f56444776ced", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bfbbae91eca5d5766669f9ac4a1ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "530677eaedb480550fa104a8b4977fa836eba025", "commitAfterChange": "2c63e7a0f1896e949119ff36744d33a6da53b86f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void _testDefaultValue() throws JavaModelException", "signatureAfterChange": "  \tpublic void testDefaultValue() throws JavaModelException", "diff": ["-\tpublic void _testDefaultValue() throws JavaModelException {", "+\tpublic void testDefaultValue() throws JavaModelException {", "-\t\t\t\t\t\t\t\t\t\tString defaultString = (String) annotationMethods[m].getDefaultValue();", "+\t\t\t\t\t\t\t\t\t\tObject defaultValue = annotationMethods[m].getDefaultValue();", "+\t\t\t\t\t\t\t\t\t\tassertTrue(\"Wrong class\", defaultValue instanceof IVariableBinding);", "+\t\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding = (IVariableBinding) defaultValue;", "+\t\t\t\t\t\t\t\t\t\tString defaultString = variableBinding.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfce00a2f42a1113b4ab0f000d73bc8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "b5c1652db351290a42a75d3cdd3241441a4413e2", "commitAfterChange": "43bc355f1a88457ab70fc9f06fe5c67fac23d207", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\t\t\tExpression expression =  parseMemberValue(defaultValueSource);", "-\t\t\t\t\t\tif (expression != null) {", "-\t\t\t\t\t\t\tannotationMethodDeclaration.defaultValue = expression;", "+\t\t\t\t\t\tif (defaultValueSource != null) {", "+    \t\t\t\t\t\tExpression expression =  parseMemberValue(defaultValueSource);", "+    \t\t\t\t\t\tif (expression != null) {", "+    \t\t\t\t\t\t\tannotationMethodDeclaration.defaultValue = expression;", "+    \t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// could not retrieve the default value", "+\t\t\t\t\t\t\thasDefaultValue = false;"]}], "num": 56574}