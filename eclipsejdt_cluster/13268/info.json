{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63c3be9f6b0fe3f00642d945a4752572", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428677a78982a1f2d14f388f7a1bca68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "   public void testCompletionBasicPotentialMethodDeclaration1() throws JavaModelException", "signatureAfterChange": "   public void testCompletionBasicPotentialMethodDeclaration1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicPotentialMethodDeclaration1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicPotentialMethodDeclaration1.java\",", "+\t\t\"public class CompletionBasicPotentialMethodDeclaration1 {\\n\"+", "+\t\t\"\tzzpot\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\tint rStart = str.lastIndexOf(\"zzpot\");", "+\tint rEnd = rStart + \"zzpot\".length();", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"zzpot[POTENTIAL_METHOD_DECLARATION]{zzpot, LCompletionBasicPotentialMethodDeclaration1;, ()V, zzpot, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzpot[POTENTIAL_METHOD_DECLARATION]{zzpot, LCompletionBasicPotentialMethodDeclaration1;, ()V, zzpot, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6041b9376338e416fabc0bc7f0ce50a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  public void testCompletionBasicField1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionBasicField1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicField1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicField1.java\",", "+\t\t\"public class CompletionBasicField1 {\\n\"+", "+\t\t\"\tpublic int zzvarzz;\\n\"+", "+\t\t\"\tvoid foo() {\\n\"+", "+\t\t\"\t\tzzvar\\n\"+", "+\t\t\"\t}\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\tint rStart = str.lastIndexOf(\"zzvar\");", "+\tint rEnd = rStart + \"zzvar\".length();", "+", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"zzvarzz[FIELD_REF]{zzvarzz, LCompletionBasicField1;, I, zzvarzz, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzvarzz[FIELD_REF]{zzvarzz, LCompletionBasicField1;, I, zzvarzz, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cb4bda537af5d5bb81ea8198e9920c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  public void testCompletionBasicMethod1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionBasicMethod1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicMethod1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicMethod1.java\",", "+\t\t\"public class CompletionBasicMethod1 {\\n\"+", "+\t\t\"\tvoid zzfoo() {\\n\"+", "+\t\t\"\t\tzzfo\\n\"+", "+\t\t\"\t}\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\tint rStart = str.lastIndexOf(\"zzfo\");", "+\tint rEnd = rStart + \"zzfo\".length();", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"zzfoo[METHOD_REF]{zzfoo(), LCompletionBasicMethod1;, ()V, zzfoo, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzfoo[METHOD_REF]{zzfoo(), LCompletionBasicMethod1;, ()V, zzfoo, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea2cdc90c2e82ccb5c0b319fc8b6ef1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  public void testCompletionBasicKeyword1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionBasicKeyword1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicKeyword1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicKeyword1.java\",", "+\t\t\"public class CompletionBasicKeyword1 {\\n\"+", "+\t\t\"\tvoid foo() {\\n\"+", "+\t\t\"\t\twhil\\n\"+", "+\t\t\"\t}\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\tint rStart = str.lastIndexOf(\"whil\");", "+\tint rEnd = rStart + \"whil\".length();", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"while[KEYWORD]{while, null, null, while, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"while[KEYWORD]{while, null, null, while, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0a284cf14a466a63d11543a5166ad3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  public void testCompletionBasicLocalVariable1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionBasicLocalVariable1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionBasicLocalVariable1.java\");", "-", "-\tString str = cu.getSource();", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionBasicLocalVariable1.java\",", "+\t\t\"public class CompletionBasicLocalVariable1 {\\n\"+", "+\t\t\"\tvoid foo() {\\n\"+", "+\t\t\"\t\tint zzvarzz;\\n\"+", "+\t\t\"\t\tzzvar\\n\"+", "+\t\t\"\t}\\n\"+", "+\t\t\"}\\n\");", "+\t", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "+\t", "+\tint rStart = str.lastIndexOf(\"zzvar\");", "+\tint rEnd = rStart + \"zzvar\".length();", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "+\t", "-\t\t\t\"zzvarzz[LOCAL_VARIABLE_REF]{zzvarzz, null, I, zzvarzz, \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"zzvarzz[LOCAL_VARIABLE_REF]{zzvarzz, null, I, zzvarzz, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED) + \"}\","]}], "num": 13268}