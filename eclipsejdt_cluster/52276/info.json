{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c75835510028bd5944101940f3d2f34a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6955b02f84f767d4df27024081266e7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "diff": ["-\t\tif (runtimeType != NullBinding && runtimeType.isBaseType()) {", "+\t\tif (runtimeType != TypeBinding.NULL && runtimeType.isBaseType()) {", "-\t\t\tif (compileTimeType != NullBinding && compileTimeType.isBaseType()) {", "+\t\t\tif (compileTimeType != TypeBinding.NULL && compileTimeType.isBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a9eb215c91e791a447f5c69f7eac42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "6e68e9cf1522a12f0e985131be99c9578a7def47", "commitAfterChange": "97fd5cbd4b6c9f4969ee36268bca7114f34c711d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "diff": ["+\t} else if (runtimeType.isPrimitiveType() && compileTimeType instanceof ReferenceBinding && !compileTimeType.isBoxedPrimitiveType()) {", "+\t\tcompileTimeTypeID = TypeIds.T_JavaLangObject; // treatment is the same as for jlO.", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffff0b3b97afaa76b817caf362994a85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "commitAfterChange": "938c6a1a841b22e47405cea69af1a008feb65db4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\tif (runtimeTimeType.isBaseType()) {", "+\t\tif (runtimeTimeType != NullBinding && runtimeTimeType.isBaseType()) {", "-\t\t\tif (compileTimeType.isBaseType()) {", "+\t\t\tif (compileTimeType != NullBinding && compileTimeType.isBaseType()) {"]}], "num": 52276}