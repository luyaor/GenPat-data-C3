{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5055a800f1cd152ab2adfe95ad7119e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b4c5135529d6a29bdefe93d0e84a6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tTypeBinding typeBinding = type.resolveType(scope); // will check for null after args are resolved", "+\tthis.expressionType = type.resolveType(scope); // will check for null after args are resolved", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;", "-\tif (typeBinding == null)", "+\tif (this.expressionType == null)", "-\tif (!typeBinding.canBeInstantiated()) {", "-\t\tscope.problemReporter().cannotInstantiate(type, typeBinding);", "-\t\treturn typeBinding;", "+\tif (!this.expressionType.canBeInstantiated()) {", "+\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "+\t\treturn this.expressionType;", "-\tReferenceBinding allocatedType = (ReferenceBinding) typeBinding;", "+\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "-\t\t\t\t\treturn typeBinding;", "+\t\t\t\t\treturn this.expressionType;", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\t\t\treturn typeBinding;", "+\t\t\t\treturn this.expressionType;", "-\t\t\treturn typeBinding;", "+\t\t\treturn this.expressionType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebfc6797d5af9e6c0e18b02b0d69e241", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tthis.expressionType = type.resolveType(scope); // will check for null after args are resolved", "+\tthis.resolvedType = type.resolveType(scope); // will check for null after args are resolved", "-\t\t\treturn this.expressionType;", "+\t\t\treturn this.resolvedType;", "-\tif (this.expressionType == null)", "+\tif (this.resolvedType == null)", "-\tif (!this.expressionType.canBeInstantiated()) {", "-\t\tscope.problemReporter().cannotInstantiate(type, this.expressionType);", "-\t\treturn this.expressionType;", "+\tif (!this.resolvedType.canBeInstantiated()) {", "+\t\tscope.problemReporter().cannotInstantiate(type, this.resolvedType);", "+\t\treturn this.resolvedType;", "-\tReferenceBinding allocatedType = (ReferenceBinding) this.expressionType;", "+\tReferenceBinding allocatedType = (ReferenceBinding) this.resolvedType;", "-\t\t\t\t\treturn this.expressionType;", "+\t\t\t\t\treturn this.resolvedType;", "-\t\t\t\treturn this.expressionType;", "+\t\t\t\treturn this.resolvedType;", "-\t\t\t\treturn this.expressionType;", "+\t\t\t\treturn this.resolvedType;", "-\t\t\treturn this.expressionType;", "+\t\t\treturn this.resolvedType;"]}], "num": 1850}