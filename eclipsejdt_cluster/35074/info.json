{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16e59963fcaa4835bb512ca8e181ec53", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019275bdffc2186c5342d009448193da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "signatureAfterChange": " \tprivate void resolveThrowsTags(MethodScope methScope, boolean reportMissing)", "diff": ["-\t\t// If no referenced method (field initializer for example) then report a problem for each param tag", "+\t\t// If no referenced method (field initializer for example) then report a problem for each throws tag", "-\t\t\t// Verify that additional @throws tags are unchecked exception", "+\t\t\t// Verify additional @throws tags", "-\t\t\t\t\tif (!typeRef.resolvedType.isCompatibleWith(methScope.getJavaLangRuntimeException())", "-\t\t\t\t\t\t\t&& !typeRef.resolvedType.isCompatibleWith(methScope.getJavaLangError())) {", "+\t\t\t\t\tboolean compatible = false;", "+\t\t\t\t\t// thrown exceptions subclasses are accepted", "+\t\t\t\t\tfor (int j = 0; j<thrownExceptionSize && !compatible; j++) {", "+\t\t\t\t\t\tTypeBinding exceptionBinding = md.thrownExceptions[j].resolvedType;", "+\t\t\t\t\t\tif (exceptionBinding != null) {", "+\t\t\t\t\t\t\tcompatible = typeRef.resolvedType.isCompatibleWith(exceptionBinding);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t", "+\t\t\t\t\t//  If not compatible only complain on unchecked exception", "+\t\t\t\t\tif (!compatible &&", "+\t\t\t\t\t\t !typeRef.resolvedType.isCompatibleWith(methScope.getJavaLangRuntimeException()) &&", "+\t\t\t\t\t\t !typeRef.resolvedType.isCompatibleWith(methScope.getJavaLangError())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e0fbb68b7add9812384f2e6e733fb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "0c128ada496d3e6f0a2409ceb822f2fc9dba3163", "commitAfterChange": "8acbc056b1b14d7bc00732a8c519e041467bbc41", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void shutdown()", "signatureAfterChange": " public void shutdown()", "diff": ["+\tObject[] indexNames = indexStates.keyTable;", "+\tfor (int i = 0, l = indexNames.length; i < l; i++) {", "+\t\tString key = (String) indexNames[i];", "+\t\tif (key != null && !knownPaths.containsKey(key))", "+\t\t\tupdateIndexState(key, null);", "+\t}", "+"]}], "num": 35074}