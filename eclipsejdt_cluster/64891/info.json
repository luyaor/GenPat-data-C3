{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2142aa42670e5380b24165b2ad78646", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14aba463798243d1c46457dec357a51c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public TypeMirror getErasure(TypeMirror t)", "signatureAfterChange": "      public TypeMirror getErasure(TypeMirror t)", "diff": ["-        if(t instanceof EclipseMirrorImpl){", "-            final EclipseMirrorImpl impl = (EclipseMirrorImpl)t;", "+        if(t instanceof EclipseMirrorType){", "+            final EclipseMirrorType impl = (EclipseMirrorType)t;", "-                case TYPE_ARRAY:", "-                    binding = ((ArrayTypeImpl)t).getArrayBinding();", "-                    break;", "-                case TYPE_WILDCARD:", "-                    binding = ((WildcardTypeImpl)t).getWildcardBinding();                   ", "-                    break;", "+                ", "-                    binding = ((TypeDeclarationImpl)t).getTypeBinding();", "+                    binding = impl.getTypeBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b5db6872cb09b88c859b56202be4e99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/SourceParameterDeclarationImpl.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 7, "signatureBeforeChange": "       public SourcePosition getPosition()", "signatureAfterChange": "          public String toString()", "diff": ["- ", "-    public SourcePosition getPosition()", "-    {", "-\t\tfinal ASTNode node = getAstNode();", "-\t\tif( node == null ) return null;", "-        final CompilationUnit unit = _executable.getCompilationUnit();", "-        final int offset = node.getStartPosition();\t\t", "-        return new SourcePositionImpl(node.getStartPosition(),", "-                                      node.getLength(),", "-                                      unit.lineNumber(offset),", "-                                      unit.columnNumber(offset),", "-                                      this);", "+    ", "+    public String toString(){", "+    \treturn _astNode.toString();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "577dea262e9e7e8c0873dd08beb31867", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "f348e270de7897a83e9fcfa09ba7634dab98219f", "commitAfterChange": "c5e020e77f1e406c32c5394bb12c24f79a6e840b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["-        \"      unused               macro for unusedArgument, unusedImport, unusedLabel,\\n\" +", "-        \"                               unusedLocal, unusedPrivate, unusedThrown,\\n\" +", "-        \"                               and unusedTypeArgs\\n\" +", "+        \"      unused               macro for unusedAllocation, unusedArgument,\\n\" +", "+        \"                               unusedImport, unusedLabel, unusedLocal,\\n\" +", "+        \"                               unusedPrivate, unusedThrown, and unusedTypeArgs\\n\" +", "+        \"      unusedAllocation     allocating an object that is not used\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "702540eb61321bec781422f328578eb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["-        \"      all-static-method    all method can be declared as static warnings\\n\" +", "+        \"      all-static-method    all method can be declared as static warnings\\n\" + ", "+        \"      nullFields    \t  + null analysis for fields\\n\" + ", "-        \"      unavoidableGenericProblems + ignore unavoidable type safety problems\\n\" +", "+        \"      unavoidableGenericProblems + ignore unavoidable type safety problems\\n\" + ", "-        \"      warningToken       + unsupported or unnecessary @SuppressWarnings\\n\" + ", "+        \"      warningToken       + unsupported or unnecessary @SuppressWarnings\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ec14e134d76af925a032bce635a8f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public PrimitiveType getPrimitiveType(PrimitiveType.Kind kind)", "signatureAfterChange": "      public PrimitiveType getPrimitiveType(PrimitiveType.Kind kind)", "diff": ["-            case BOOLEAN: return PrimitiveTypeImpl.PRIMITIVE_BOOLEAN;", "-            case BYTE:    return PrimitiveTypeImpl.PRIMITIVE_BYTE;", "-            case CHAR:    return PrimitiveTypeImpl.PRIMITIVE_CHAR;", "-            case DOUBLE:  return PrimitiveTypeImpl.PRIMITIVE_DOUBLE;", "-            case FLOAT:   return PrimitiveTypeImpl.PRIMITIVE_FLOAT;", "-            case INT:     return PrimitiveTypeImpl.PRIMITIVE_INT;", "-            case LONG:    return PrimitiveTypeImpl.PRIMITIVE_LONG;", "-            case SHORT:   return PrimitiveTypeImpl.PRIMITIVE_SHORT;", "+            case BOOLEAN: return _env.getBooleanType();", "+            case BYTE:    return _env.getByteType();", "+            case CHAR:    return _env.getCharType();", "+            case DOUBLE:  return _env.getDoubleType();", "+            case FLOAT:   return _env.getFloatType();", "+            case INT:     return _env.getIntType();", "+            case LONG:    return _env.getLongType();", "+            case SHORT:   return _env.getShortType();", "+          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4924c35901f2d6546dcfd19761e5a5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public static ITypeBinding getTypeBinding(TypeMirror type)         throws NonEclipseImplementationException", "signatureAfterChange": "      private static ITypeBinding getTypeBinding(TypeMirror type)         throws NonEclipseImplementationException", "diff": ["-    public static ITypeBinding getTypeBinding(TypeMirror type)", "+    private static ITypeBinding getTypeBinding(TypeMirror type)", "-        if( type instanceof EclipseMirrorImpl ){", "-            final EclipseMirrorImpl impl = (EclipseMirrorImpl)type;", "-            switch(impl.kind() )", "-            {", "-                case TYPE_PRIMITIVE: return ((PrimitiveTypeImpl)type).getTypeBinding();", "-                case TYPE_VOID:  \t return ((VoidTypeImpl)type).getTypeBinding();", "-                case TYPE_ERROR: \t return null;", "-                case TYPE_ARRAY: \t return ((ArrayTypeImpl)type).getArrayBinding();", "-                case TYPE_WILDCARD:  return ((WildcardTypeImpl)type).getWildcardBinding();", "-                case TYPE_PARAMETER_VARIABLE: return ((TypeParameterDeclarationImpl)type).getDeclarationBinding();", "-                default: return ((TypeDeclarationImpl)type).getTypeBinding();", "-            }", "+        if( type instanceof EclipseMirrorType ){", "+            return ((EclipseMirrorType)type).getTypeBinding();"]}], "num": 64891}