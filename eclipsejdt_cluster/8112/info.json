{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "943afe4afb21102eff5a09d213647302", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e39b6ceb5cd57ad66d1b05828cdece7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "cc2be5cbbfcf97c2ecd925e8c0703ec62b59bbc4", "commitAfterChange": "da1b268914409ccc196058300ff04e7c889248e2", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "signatureAfterChange": "  \tpublic void traverse(MethodBinding methodBinding, int maxLocals, byte[] bytecodes, int codeOffset, int codeLength, ArrayList frames, boolean isClinit)", "diff": ["-\t\t\t\t\tSystem.arraycopy(className, 0, (constantPoolName = new char[classNameLength + 3]), 2, classNameLength);", "-\t\t\t\t\tconstantPoolName[0] = '[';", "-\t\t\t\t\tconstantPoolName[1] = 'L';", "-\t\t\t\t\tconstantPoolName[classNameLength + 2] = ';';", "+\t\t\t\t\tif (className[0] != '[') {", "+\t\t\t\t\t\t// this is a type name (class or interface). So we add appropriate '[', 'L' and ';'.", "+\t\t\t\t\t\tSystem.arraycopy(className, 0, (constantPoolName = new char[classNameLength + 3]), 2, classNameLength);", "+\t\t\t\t\t\tconstantPoolName[0] = '[';", "+\t\t\t\t\t\tconstantPoolName[1] = 'L';", "+\t\t\t\t\t\tconstantPoolName[classNameLength + 2] = ';';", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// if class name is already an array, we just need to add one dimension", "+\t\t\t\t\t\tSystem.arraycopy(className, 0, (constantPoolName = new char[classNameLength + 1]), 1, classNameLength);", "+\t\t\t\t\t\tconstantPoolName[0] = '[';", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4a2fcada4eca68753323255f777eb6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "27b04348f6378e421a1a2788716e3b7fc8643774", "commitAfterChange": "f91a77f7dbbae615b9ce90f64f6be8f6d8a36ad5", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \t\r \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "signatureAfterChange": "\r \t\r \tprivate char[][] computeNames(char[] sourceName, boolean forArray)", "diff": ["-\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "-\t\t\t\t\t\tname[length] = 's';\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\t\r", "+\t\t\t\t\t\tif (name[length-1] == 's'){\r", "+\t\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 2], 0, length);\r", "+\t\t\t\t\t\t\tname[length] = 'e';\r", "+\t\t\t\t\t\t\tname[length+1] = 's';\r", "+\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "+\t\t\t\t\t\t\tname[length] = 's';\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\t\t\t\t\t\r", "-\t\t\tnames[nameCount++] = CharOperation.toLowerCase(sourceName);\r", "+\t\t\tchar[] name = CharOperation.toLowerCase(sourceName);\r", "+\t\t\tif(forArray) {\r", "+\t\t\t\tint length = name.length;\r", "+\t\t\t\tif (name[length-1] == 's'){\r", "+\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 2], 0, length);\r", "+\t\t\t\t\tname[length] = 'e';\r", "+\t\t\t\t\tname[length+1] = 's';\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tSystem.arraycopy(name, 0, name = new char[length + 1], 0, length);\r", "+\t\t\t\t\tname[length] = 's';\r", "+\t\t\t\t}\r", "+\t\t\t}\t\t\t\t\t\r", "+\t\t\tnames[nameCount++] = name;\r", "+\t\t\t\r"]}], "num": 8112}