{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82a325acb9dca3c844a33340a014dd29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d402e376b8e6a331ec72e28afa8b6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 229, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["+\t\t\t\"Type safety: The method iterator() belongs to the raw type List. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid m2() { for (Iterator<X> i = list().iterator(); i.hasNext();); }  // unsafe conversion\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5359d2186a33e620cf912811d942091d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "3885d0327ef37626bb68aa8a0a9e1a4a5bb4ba7a", "commitAfterChange": "e4a2d2b531fec7e8dfebadf46195d19caa4fd924", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void test003()", "signatureAfterChange": "  \tpublic void test004()", "diff": ["-\t", "-\tpublic void test003() {", "+", "+\tpublic void test004() {", "+\t\t\t\t\"\t\tY.count(0);\\n\" +", "+\t\t\t\t\"\t\tY.count(-1, (int[]) null);\\n\" +", "+\t\t\t\t\"\t\tY.count(-2, (int[][]) null);\\n\" +", "-\t\t\t\t\"\t\tfor (int i = 0, l = values.length; i < l; i++)\\n\" +", "+\t\t\t\t\"\t\tfor (int i = 0, l = values == null ? 0 : values.length; i < l; i++)\\n\" +", "-\t\t\t\t\"\t\tfor (int i = 0, l = values.length; i < l; i++)\\n\" +", "+\t\t\t\t\"\t\tfor (int i = 0, l = values == null ? 0 : values.length; i < l; i++)\\n\" +", "+\t\t\t\t\"\t\tY.count(0);\\n\" +", "+\t\t\t\t\"\t\tY.count(-1, (int[]) null);\\n\" +", "+\t\t\t\t\"\t\tY.count(-2, (int[][]) null);\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafb21cfa4e3bbf717b489e584748a97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "63bda44d804d11c0afa7e8111644ceeb5480e759", "commitAfterChange": "6e3484e93dc48a09ac8c425df0144a313c14ab99", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test001()", "signatureAfterChange": "  \tpublic void test001()", "diff": ["-//\t\t\t\t\"\t\tY y = new Y();\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "+\t\t\t\t\"\t\tY y = new Y();\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "-\t\t\t\"0 1 10 10\");", "-//\t\t\t\"0 1 10 10 0 1 10 10\");", "+\t\t\t\"0 1 10 10 0 1 10 10\");", "-//\t\t\t\t\"\t\tY y = new Y();\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "-//\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "+\t\t\t\t\"\t\tY y = new Y();\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(1, 2, (byte) 3, 4);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(new int[] {1, 2, 3, 4 });\\n\" +", "-\t\t\t\"0 1 10 10\",", "-//\t\t\t\"0 1 10 10 0 1 10 10\",", "+\t\t\t\"0 1 10 10 0 1 10 10\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da5544d5a35eea44299984abc6170d64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3f665dc08ffa02e27b74efb0940c16f2120a11f8", "commitAfterChange": "307e2de84d078daed3099015a7ac89d980746b6b", "methodNumberBeforeChange": 628, "methodNumberAfterChange": 628, "signatureBeforeChange": " \tpublic void _test0610()", "signatureAfterChange": " \tpublic void test0610()", "diff": ["-\tpublic void _test0610() {", "+\tpublic void test0610() {", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tnumbers= (List<Number>) objects; // correct - cast error\\n\" + ", "-\t\t\t\"\t         ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Cannot cast from List<Object> to List<Number>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"\text= (List<? extends Number>) objects; // wrong, should fail\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Cannot cast from List<Object> to List<? extends Number>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\t\"\text= raw; // correct - raw conversion warning issued\\n\" + ", "-\t\t\t\"\t     ^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<? extends Number>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\t\"\tnumbers= raw; // correct - raw conversion warning issued\\n\" + ", "-\t\t\t\"\t         ^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Number>\\n\" + ", "-\t\t\t\"----------\\n\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+    \t\t\"\tvoid foo(List<Object> objects, List raw) {\\n\" + ", "+    \t\t\"\t                               ^^^^\\n\" + ", "+    \t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+    \t\t\"\tnumbers= (List<Number>) objects; // correct - cast error\\n\" + ", "+    \t\t\"\t         ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Cannot cast from List<Object> to List<Number>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+    \t\t\"\text= (List<? extends Number>) objects; // wrong, should fail\\n\" + ", "+    \t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Cannot cast from List<Object> to List<? extends Number>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. WARNING in X.java (at line 12)\\n\" + ", "+    \t\t\"\text= raw; // correct - raw conversion warning issued\\n\" + ", "+    \t\t\"\t     ^^^\\n\" + ", "+    \t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<? extends Number>\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"5. WARNING in X.java (at line 13)\\n\" + ", "+    \t\t\"\tnumbers= raw; // correct - raw conversion warning issued\\n\" + ", "+    \t\t\"\t         ^^^\\n\" + ", "+    \t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Number>\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf6641c27d6d13febf20d334ff21742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "876d1e29545f3823ab6b6c14229362303cd9cc00", "commitAfterChange": "0de5167791884524f72d9d44c10f0e243af65d00", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": " \tpublic void test0472()", "signatureAfterChange": " \tpublic void test0472()", "diff": ["-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. WARNING in test\\\\Foo.java (at line 4)\\n\" +", "-\t\t\t\"\tprivate R dosomething(){ return s; } \\n\" +", "-\t\t\t\"\t          ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"The method dosomething() from the type Foo<R> is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. WARNING in test\\\\Foo.java (at line 5)\\n\" +", "-\t\t\t\"\tprivate class Bar {} \\n\" +", "-\t\t\t\"\t              ^^^\\n\" +", "-\t\t\t\"The type Foo<R>.Bar is never used locally\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in test02\\\\FooBar.java (at line 6)\\n\" +", "-\t\t\t\"\tf.s = \\\"foo\\\"; \\n\" +", "-\t\t\t\"\t  ^\\n\" +", "-\t\t\t\"The field Foo<String>.s is not visible\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in test02\\\\FooBar.java (at line 7)\\n\" +", "-\t\t\t\"\tthis.s = \\\"foo\\\";\\n\" +", "-\t\t\t\"\t     ^\\n\" +", "-\t\t\t\"The field Foo<R>.s is not visible\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in test02\\\\FooBar.java (at line 8)\\n\" +", "-\t\t\t\"\tf.dosomething(); \\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^\\n\" +", "-\t\t\t\"The method dosomething() from the type Foo<String> is not visible\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in test02\\\\FooBar.java (at line 9)\\n\" +", "-\t\t\t\"\tthis.dosomething();  \\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^\\n\" +", "-\t\t\t\"The method dosomething() from the type Foo<R> is not visible\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. ERROR in test02\\\\FooBar.java (at line 10)\\n\" +", "-\t\t\t\"\tBar b1; \\n\" +", "-\t\t\t\"\t^^^\\n\" +", "-\t\t\t\"The type Bar is not visible\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in test02\\\\FooBar.java (at line 11)\\n\" +", "-\t\t\t\"\tFooBar<String>.Bar b2; \\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"The type FooBar.Bar is not visible\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"7. ERROR in test02\\\\FooBar.java (at line 12)\\n\" +", "-\t\t\t\"\tFoo<String>.Bar b3; \\n\" +", "-\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"The type Foo.Bar is not visible\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in test\\\\Foo.java (at line 4)\\n\" + ", "+\t\t\t\"\tprivate R dosomething(){ return s; } \\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method dosomething() from the type Foo<R> is never used locally\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in test\\\\Foo.java (at line 5)\\n\" + ", "+\t\t\t\"\tprivate class Bar {} \\n\" + ", "+\t\t\t\"\t              ^^^\\n\" + ", "+\t\t\t\"The type Foo<R>.Bar is never used locally\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in test02\\\\FooBar.java (at line 6)\\n\" + ", "+\t\t\t\"\tf.s = \\\"foo\\\"; \\n\" + ", "+\t\t\t\"\t  ^\\n\" + ", "+\t\t\t\"The field Foo<String>.s is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in test02\\\\FooBar.java (at line 7)\\n\" + ", "+\t\t\t\"\tthis.s = \\\"foo\\\";\\n\" + ", "+\t\t\t\"\t     ^\\n\" + ", "+\t\t\t\"The field Foo<R>.s is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in test02\\\\FooBar.java (at line 7)\\n\" + ", "+\t\t\t\"\tthis.s = \\\"foo\\\";\\n\" + ", "+\t\t\t\"\t         ^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from String to R\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in test02\\\\FooBar.java (at line 8)\\n\" + ", "+\t\t\t\"\tf.dosomething(); \\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method dosomething() from the type Foo<String> is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in test02\\\\FooBar.java (at line 9)\\n\" + ", "+\t\t\t\"\tthis.dosomething();  \\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method dosomething() from the type Foo<R> is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in test02\\\\FooBar.java (at line 10)\\n\" + ", "+\t\t\t\"\tBar b1; \\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"The type Bar is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in test02\\\\FooBar.java (at line 11)\\n\" + ", "+\t\t\t\"\tFooBar<String>.Bar b2; \\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The type FooBar.Bar is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. ERROR in test02\\\\FooBar.java (at line 12)\\n\" + ", "+\t\t\t\"\tFoo<String>.Bar b3; \\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The type Foo.Bar is not visible\\n\" + "]}], "num": 51451}