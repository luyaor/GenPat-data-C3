{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf2154b6a18b1e4e63693a07ce94fd39", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809819000418308cf5c4d692e484c860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void runConformTest(String[] testFiles, String commandLine, \t\t\tString expectedSuccessOutOutputString, \t\t\tString expectedSuccessErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprotected void runConformTest(String[] testFiles, String commandLine, \t\t\tString expectedSuccessOutOutputString, \t\t\tString expectedSuccessErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "diff": ["-\t\t\t\texpectedSuccessErrOutputString, shouldFlushOutputDirectory);", "+\t\t\t\texpectedSuccessErrOutputString, shouldFlushOutputDirectory, null/*progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d55639c104458f9b10b74174484fdad4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\tpublic TypeBinding resolveTypeExpecting(", "-\t\tBlockScope scope,", "-\t\tTypeBinding expectedType) {", "+\tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType) {", "-\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "+\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this, null);"]}], "num": 43310}