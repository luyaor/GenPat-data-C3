{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c2704133a8310362839a4516cf8ce3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809212afbb208f3364daddf62812082f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "bffd05273174fba670489cd637d40ac2a4d0913b", "commitAfterChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private void reportHierarchy()", "signatureAfterChange": "\r private void reportHierarchy()", "diff": ["-\t\tIGenericType suppliedType = typeModels[current];\r", "-\t\tReferenceBinding typeBinding = typeBindings[current];\r", "-\t\tReferenceBinding superBinding = typeBinding.superclass();\r", "-\t\tIGenericType superclass = null;\r", "-\t\tif (superBinding != null) {\r", "-\t\t\tfor (int t = typeIndex; t >= 0; t--) {\r", "-\t\t\t\tif (typeBindings[t] == superBinding) {\r", "-\t\t\t\t\tsuperclass = typeModels[t];\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\r", "-\t\tReferenceBinding[] interfaceBindings = typeBinding.superInterfaces();\r", "-\t\tint length = interfaceBindings.length;\r", "-\t\tIGenericType[] superinterfaces = new IGenericType[length];\r", "-\t\tnext : for (int i = 0; i < length; i++) {\r", "-\t\t\tReferenceBinding interfaceBinding = interfaceBindings[i];\r", "-\t\t\tfor (int t = typeIndex; t >= 0; t--) {\r", "-\t\t\t\tif (typeBindings[t] == interfaceBinding) {\r", "-\t\t\t\t\tsuperinterfaces[i] = typeModels[t];\r", "-\t\t\t\t\tcontinue next;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "+\t\tIGenericType suppliedType = typeModels[current];\r", "+\t\tReferenceBinding typeBinding = typeBindings[current];\r", "+\t\tIGenericType superclass;\r", "+\t\t} else {\r", "+\t\t\tsuperclass = this.findSuperClass(suppliedType, typeBinding);\r", "+\t\tIGenericType[] superinterfaces = this.findSuperInterfaces(suppliedType, typeBinding);\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3ee5edced829c1ca2e19d5af1c1f27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "70b9f71bdfa4f15d433383739618a9fdcdbf50e8", "commitAfterChange": "d9dd3f3b4344311765aa43bd0ec69a035e3c1a0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void assertLineEquals(String actualContents, String originalSource, String expectedContents, boolean checkNull)", "signatureAfterChange": "  \tprivate void assertLineEquals(String actualContents, String originalSource, String expectedContents, boolean checkNull)", "diff": ["-\t\tString[] actualContentsArray = createArrayOfString(actualContents);", "-\t\tString[] expectedContentsArray = createArrayOfString(expectedContents);", "-\t\tif (actualContentsArray.length != expectedContentsArray.length) {", "-\t\t\tSystem.out.println(Util.displayString(actualContents, 2));", "-\t\t}", "-\t\tassertEquals(\"Different size\", expectedContentsArray.length, actualContentsArray.length); //$NON-NLS-1$", "-\t\tfor (int i = 0, max = expectedContentsArray.length; i < max; i++) {", "-\t\t\tif (!expectedContentsArray[i].equals(actualContentsArray[i])){", "-\t\t\t\tSystem.out.println(Util.displayString(actualContentsArray[i], 2));", "-\t\t\t}", "-\t\t\tif (!expectedContentsArray[i].equals(actualContentsArray[i])) {", "-\t\t\t\tSystem.out.println(\"line \" + i + \" is different\");", "-\t\t\t\tSystem.out.println(Util.displayString(actualContents, 2));", "-\t\t\t\tassertTrue(\"Different line\", false);", "-\t\t\t}", "-\t\t}", "-\t}", "+\t\tassertSourceEquals(\"Different number of length\", Util.convertToIndependantLineDelimiter(expectedContents), actualContents);"]}], "num": 49981}