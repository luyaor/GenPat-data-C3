{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f74960ad8b3faf89e266d984942c2a0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef6a6ea6d1f830cce1ca05d4408a914", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 536, "methodNumberAfterChange": 536, "signatureBeforeChange": " public void testCompletionMemberType2() throws JavaModelException", "signatureAfterChange": " public void testCompletionMemberType2() throws JavaModelException", "diff": ["-\t\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionMemberType2.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/test/CompletionMemberType2.java\",", "+            \"public class CompletionMemberType2 {\\n\"+", "+            \"\tpublic class MemberException extends Exception {\\n\"+", "+            \"\t}\\n\"+", "+            \"\tvoid foo() {\\n\"+", "+            \"\t\tthrow new \\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"new \";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\t\tString str = cu.getSource();", "-\t\tString completeBehind = \"new \";", "-\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\t\tcu.codeComplete(cursorLocation, requestor);", "-", "-\t\tif(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "-\t\t\tassertEquals(", "-\t\t\t\t\"\",", "-\t\t\t\trequestor.getResults());", "-\t\t} else {", "-\t\t\tassertEquals(", "-\t\t\t\t\"element:CompletionMemberType2    completion:CompletionMemberType2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\t\t\"element:CompletionMemberType2.MemberException    completion:MemberException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION+ R_NON_RESTRICTED),", "-\t\t\t\trequestor.getResults());", "-\t\t}", "+\tif(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "+\t\tassertResults(", "+\t\t\t\"\",", "+\t\t\trequestor.getResults());", "+\t} else {", "+\t\tassertResults(", "+\t\t\t\"CompletionMemberType2[TYPE_REF]{CompletionMemberType2, test, Ltest.CompletionMemberType2;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"CompletionMemberType2.MemberException[TYPE_REF]{MemberException, test, Ltest.CompletionMemberType2$MemberException;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXCEPTION+ R_NON_RESTRICTED)+\"}\",", "+\t\t\trequestor.getResults());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e69542d267527b3e799e3cfcddfb22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " public void testCompletionQualifiedExpectedType() throws JavaModelException", "signatureAfterChange": " public void testCompletionQualifiedExpectedType() throws JavaModelException", "diff": ["-\t\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\t\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionQualifiedExpectedType.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/test/CompletionQualifiedExpectedType.java\",", "+            \"import pack1.PX;\\n\"+", "+            \"\\n\"+", "+            \"public class CompletionQualifiedExpectedType {\\n\"+", "+            \"\tvoid foo() {\\n\"+", "+            \"\t\tpack2.PX var = new \\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"new \";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\t\tString str = cu.getSource();", "-\t\tString completeBehind = \"new \";", "-\t\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\t\tcu.codeComplete(cursorLocation, requestor);", "-", "-\t\tif(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "-\t\t\tassertEquals(", "-\t\t\t\t\"\",", "+    if(CompletionEngine.NO_TYPE_COMPLETION_ON_EMPTY_TOKEN) {", "+    \tassertResults(", "+\t            \"\",", "-\t\t} else {", "-\t\t\tassertEquals(", "-\t\t\t\t\"element:CompletionQualifiedExpectedType    completion:CompletionQualifiedExpectedType    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\t\t\"element:PX    completion:pack2.PX    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE+ R_NON_RESTRICTED),", "+    } else {", "+\t    assertResults(", "+\t            \"CompletionQualifiedExpectedType[TYPE_REF]{CompletionQualifiedExpectedType, test, Ltest.CompletionQualifiedExpectedType;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+\t\t\t\t\"PX[TYPE_REF]{pack2.PX, pack2, Lpack2.PX;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE+ R_NON_RESTRICTED)+ \"}\",", "-\t\t}", "+    }"]}], "num": 22573}