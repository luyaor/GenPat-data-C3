{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "775a993a4e6a80f2dbca17c6ca61e51e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a492ee92eac97b0c5156a1ef8cbd4ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic void test009()", "signatureAfterChange": " \t \tpublic void test009() throws Exception", "diff": ["-\tpublic void test009() {", "+\tpublic void test009() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d37297b38d1b80754d43c8ea50740c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test005()", "signatureAfterChange": " \tpublic void test005() throws Exception", "diff": ["-\tpublic void test005() {", "+\tpublic void test005() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "752d037973eee7a98e2d83b985f6fffd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void test004()", "signatureAfterChange": "  \tpublic void test004() throws Exception", "diff": ["-\tpublic void test004() {", "+\tpublic void test004() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780b756efbc1c0a746ce44b3ef8a94e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test008()", "signatureAfterChange": " \tpublic void test008() throws Exception", "diff": ["-\tpublic void test008() {", "+\tpublic void test008() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9da907014adec712ab0aeaddf8fcb0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void test003()", "signatureAfterChange": " \tpublic void test003() throws Exception", "diff": ["-\tpublic void test003() {", "+\tpublic void test003() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d466409ef95751b48539cc89cd7007fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void test007()", "signatureAfterChange": " \t \tpublic void test007() throws Exception", "diff": ["-\tpublic void test007() {", "+\tpublic void test007() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea858c111c6762bc025347dec1e34bce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void test006()", "signatureAfterChange": " \t \tpublic void test006() throws Exception", "diff": ["-\tpublic void test006() {", "+\tpublic void test006() throws Exception {", "-\t\t\tString actualOutput = null;", "-\t\t\ttry {", "-\t\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\t\tactualOutput =", "-\t\t\t\t\tdisassembler.disassemble(", "-\t\t\t\t\t\tclassFileBytes,", "-\t\t\t\t\t\t\"\\n\",", "-\t\t\t\t\t\tClassFileBytesDisassembler.DETAILED); ", "-\t\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tassertTrue(\"IOException\", false);", "-\t\t\t}", "+\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\t\tString actualOutput =", "+\t\t\t\tdisassembler.disassemble(", "+\t\t\t\t\tclassFileBytes,", "+\t\t\t\t\t\"\\n\",", "+\t\t\t\t\tClassFileBytesDisassembler.DETAILED); "]}], "num": 15441}