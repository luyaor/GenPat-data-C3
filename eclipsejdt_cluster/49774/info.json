{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d11dd5452383c8bed8ea4a575f35452a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334e49acbfc2f48daffe41668e6a1bf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "0751ac39c00c09c85644cc895a72b784f1c58a10", "commitAfterChange": "9b2482af5a0c03be9db45cc864fbf9313fd6c832", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "signatureAfterChange": "\r \tpublic static IPath canonicalizedPath(IPath externalPath)", "diff": ["-\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\tSystem.out.println(\"JAVA MODEL - Canonicalizing \" + externalPath.toString()); //$NON-NLS-1$\r", "-\t\t}\r", "+//\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\tSystem.out.println(\"JAVA MODEL - Canonicalizing \" + externalPath.toString()); //$NON-NLS-1$\r", "+//\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (file system is case sensitive)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (file system is case sensitive)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (member of workspace)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (member of workspace)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (IOException)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (IOException)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is empty)\"); //$NON-NLS-1$\r", "-\t\t\t}\r", "+//\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is empty)\"); //$NON-NLS-1$\r", "+//\t\t\t}\r", "-\t\t\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is \" + canonicalPath.toString() + \")\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\t\t\t\t}\r", "+//\t\t\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is original path (canonical path is \" + canonicalPath.toString() + \")\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "+//\t\t\t\t}\r", "-\t\tif (JavaModelManager.VERBOSE) {\r", "-\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is \" + result.toString()); //$NON-NLS-1$\r", "-\t\t}\r", "+//\t\tif (JavaModelManager.VERBOSE) {\r", "+//\t\t\tSystem.out.println(\"JAVA MODEL - Canonical path is \" + result.toString()); //$NON-NLS-1$\r", "+//\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ed98605f5cc95989aac13102e1c2c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 149, "signatureBeforeChange": "  \tprivate void runAstCreation(int astLevel) throws JavaModelException", "signatureAfterChange": "  \tprivate int runAstCreation(int astLevel) throws JavaModelException", "diff": ["-\tprivate void runAstCreation(int astLevel) throws JavaModelException {", "-\t\tint allExtendedStartPositions = 0;", "-\t\tint allExtendedEndPositions = 0;", "-\t\tint allNodesCount = 0;", "+", "+\tprivate int runAstCreation(int astLevel) throws JavaModelException {", "+\t\tint unitsCount = 0;", "+\t\t\tunitsCount += size;", "-\t\t\t\tfor (int ptr=0; ptr<length; ptr++) {", "-\t\t\t\t\tCommentMapperASTVisitor visitor = new CommentMapperASTVisitor(compilationUnits[ptr]);", "-\t\t\t\t\tcompilationUnits[ptr].accept(visitor);", "-\t\t\t\t\tallExtendedStartPositions += visitor.extendedStartPositions;", "-\t\t\t\t\tallExtendedEndPositions += visitor.extendedEndPositions;", "-\t\t\t\t\tallNodesCount += visitor.nodesCount;", "-\t\t\t\t}", "-", "-\t\t// Print statistics", "-\t\tSystem.out.println(\"-------------------------------------\");", "-\t\tSystem.out.println(\"DOM/AST creation performance test statistics:\");", "-\t\tNumberFormat intFormat = NumberFormat.getIntegerInstance();", "-\t\tSystem.out.println(\"  - \"+intFormat.format(allNodesCount)+\" nodes have been parsed.\");", "-\t\tSystem.out.println(\"  - \"+intFormat.format(allExtendedStartPositions)+\" nodes have extended start position.\");", "-\t\tSystem.out.println(\"  - \"+intFormat.format(allExtendedEndPositions)+\" nodes have extended end position.\");", "-\t\tSystem.out.println(\"-------------------------------------\\n\");", "+\t\treturn unitsCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a089b4ee1960a31f4d84527700e303c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\t}", "-", "-\t\t// Print statistics", "-\t\tif (TESTS_COUNT == 0) {", "-\t\t\tSystem.out.println(\"-------------------------------------\");", "-\t\t\tSystem.out.println(\"Search performance test statistics:\");", "-\t\t\tNumberFormat intFormat = NumberFormat.getIntegerInstance();", "-\t\t\tSystem.out.println(\"  - \"+intFormat.format(REFERENCES[0])+\" type references found.\");", "-\t\t\tSystem.out.println(\"  - \"+intFormat.format(REFERENCES[1])+\" field references found.\");", "-\t\t\tSystem.out.println(\"  - \"+intFormat.format(REFERENCES[2])+\" method references found.\");", "-\t\t\tSystem.out.println(\"  - \"+intFormat.format(REFERENCES[3])+\" constructor references found.\");", "-\t\t\tSystem.out.println(\"  - \"+intFormat.format(ALL_TYPES_NAMES)+\" all types names.\");", "-\t\t\tSystem.out.println(\"-------------------------------------\\n\");"]}], "num": 49774}