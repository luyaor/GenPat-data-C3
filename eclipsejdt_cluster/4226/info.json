{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59e216f82c1b989c91686923ba7e4c0a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69689928c5a4b99c70536bd78537aa31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\tlastCheckPoint = 0;", "+\tthis.lastCheckPoint = 0;", "-\tif (referenceContext instanceof CompilationUnitDeclaration){", "-\t\telement = new RecoveredUnit(compilationUnit, 0, this);", "+\tif (this.referenceContext instanceof CompilationUnitDeclaration){", "+\t\telement = new RecoveredUnit(this.compilationUnit, 0, this);", "-\t\t\tcompilationUnit.currentPackage = null;", "-\t\t\tcompilationUnit.imports = null;", "-\t\t\tcompilationUnit.types = null;", "-\t\t\tcurrentToken = 0;", "-\t\t\tlistLength = 0;", "-\t\t\tendPosition = 0;", "-\t\t\tendStatementPosition = 0;", "+\t\t\tthis.compilationUnit.currentPackage = null;", "+\t\t\tthis.compilationUnit.imports = null;", "+\t\t\tthis.compilationUnit.types = null;", "+\t\t\tthis.currentToken = 0;", "+\t\t\tthis.listLength = 0;", "+\t\t\tthis.endPosition = 0;", "+\t\t\tthis.endStatementPosition = 0;", "-\t\tif (compilationUnit.currentPackage != null){", "-\t\t\tlastCheckPoint = compilationUnit.currentPackage.declarationSourceEnd+1;", "+\t\tif (this.compilationUnit.currentPackage != null){", "+\t\t\tthis.lastCheckPoint = this.compilationUnit.currentPackage.declarationSourceEnd+1;", "-\t\tif (compilationUnit.imports != null){", "-\t\t\tlastCheckPoint = compilationUnit.imports[compilationUnit.imports.length -1].declarationSourceEnd+1;\t\t", "+\t\tif (this.compilationUnit.imports != null){", "+\t\t\tthis.lastCheckPoint = this.compilationUnit.imports[this.compilationUnit.imports.length -1].declarationSourceEnd+1;\t\t", "-\t\tif (referenceContext instanceof AbstractMethodDeclaration){", "-\t\t\telement = new RecoveredMethod((AbstractMethodDeclaration) referenceContext, null, 0, this);", "-\t\t\tlastCheckPoint = ((AbstractMethodDeclaration) referenceContext).bodyStart;", "+\t\tif (this.referenceContext instanceof AbstractMethodDeclaration){", "+\t\t\telement = new RecoveredMethod((AbstractMethodDeclaration) this.referenceContext, null, 0, this);", "+\t\t\tthis.lastCheckPoint = ((AbstractMethodDeclaration) this.referenceContext).bodyStart;", "-\t\t\tif (referenceContext instanceof TypeDeclaration){", "-\t\t\t\tTypeDeclaration type = (TypeDeclaration) referenceContext;", "+\t\t\tif (this.referenceContext instanceof TypeDeclaration){", "+\t\t\t\tTypeDeclaration type = (TypeDeclaration) this.referenceContext;", "-\t\t\t\t\t\t&& field.declarationSourceStart <= scanner.initialPosition", "-\t\t\t\t\t\t&& scanner.initialPosition <= field.declarationSourceEnd", "-\t\t\t\t\t\t&& scanner.eofPosition <= field.declarationSourceEnd+1){", "+\t\t\t\t\t\t&& field.declarationSourceStart <= this.scanner.initialPosition", "+\t\t\t\t\t\t&& this.scanner.initialPosition <= field.declarationSourceEnd", "+\t\t\t\t\t\t&& this.scanner.eofPosition <= field.declarationSourceEnd+1){", "-\t\t\t\t\t\tlastCheckPoint = field.declarationSourceStart;\t\t\t\t\t", "+\t\t\t\t\t\tthis.lastCheckPoint = field.declarationSourceStart;\t\t\t\t\t", "-\tfor(int i = 0; i <= astPtr; i++){", "-\t\tASTNode node = astStack[i];", "+\tfor(int i = 0; i <= this.astPtr; i++){", "+\t\tASTNode node = this.astStack[i];", "-\t\t\t\tlastCheckPoint = method.bodyStart;", "+\t\t\t\tthis.lastCheckPoint = method.bodyStart;", "-\t\t\t\tlastCheckPoint = method.declarationSourceEnd + 1;", "+\t\t\t\tthis.lastCheckPoint = method.declarationSourceEnd + 1;", "-\t\t\t\tlastCheckPoint = initializer.sourceStart;\t\t\t\t", "+\t\t\t\tthis.lastCheckPoint = initializer.sourceStart;\t\t\t\t", "-\t\t\t\tlastCheckPoint = initializer.declarationSourceEnd + 1;", "+\t\t\t\tthis.lastCheckPoint = initializer.declarationSourceEnd + 1;", "-\t\t\t\t\tlastCheckPoint = field.sourceEnd + 1;", "+\t\t\t\t\tthis.lastCheckPoint = field.sourceEnd + 1;", "-\t\t\t\t\tlastCheckPoint = field.initialization.sourceEnd + 1;", "+\t\t\t\t\tthis.lastCheckPoint = field.initialization.sourceEnd + 1;", "-\t\t\t\tlastCheckPoint = field.declarationSourceEnd + 1;", "+\t\t\t\tthis.lastCheckPoint = field.declarationSourceEnd + 1;", "-\t\t\t\tlastCheckPoint = type.bodyStart;", "+\t\t\t\tthis.lastCheckPoint = type.bodyStart;", "-\t\t\t\tlastCheckPoint = type.declarationSourceEnd + 1;", "+\t\t\t\tthis.lastCheckPoint = type.declarationSourceEnd + 1;", "-\t\t\tlastCheckPoint = importRef.declarationSourceEnd + 1;", "+\t\t\tthis.lastCheckPoint = importRef.declarationSourceEnd + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c05ca0895db8a3119f87590e0521a52d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\tif (unitScope != null) {", "+\t\tif (this.unitScope != null) {", "-\t\t\tSourceTypeBinding[] types = unitScope.topLevelTypes;", "+\t\t\tSourceTypeBinding[] types = this.unitScope.topLevelTypes;", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptClass(", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\tstartPosition - offset, ", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tthis.startPosition - this.offset, ", "+\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptInterface(", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\tif(expectedTypesPtr > -1) {", "-\t\t\t\tnext : for (int i = 0; i <= expectedTypesPtr; i++) {", "-\t\t\t\t\tif(expectedTypes[i] instanceof ReferenceBinding) {", "-\t\t\t\t\t\tReferenceBinding refBinding = (ReferenceBinding)expectedTypes[i];", "-\t\t\t\t\t\tboolean inSameUnit = unitScope.isDefinedInSameUnit(refBinding);", "+\t\t\tif(this.expectedTypesPtr > -1) {", "+\t\t\t\tnext : for (int i = 0; i <= this.expectedTypesPtr; i++) {", "+\t\t\t\t\tif(this.expectedTypes[i] instanceof ReferenceBinding) {", "+\t\t\t\t\t\tReferenceBinding refBinding = (ReferenceBinding)this.expectedTypes[i];", "+\t\t\t\t\t\tboolean inSameUnit = this.unitScope.isDefinedInSameUnit(refBinding);", "-\t\t\t\t\t\t\tif (!insideQualifiedReference && !refBinding.isMemberType()) {", "+\t\t\t\t\t\t\tif (!this.insideQualifiedReference && !refBinding.isMemberType()) {", "-\t\t\t\t\t\t\t\t\t\tif (unitScope != null && unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "+\t\t\t\t\t\t\t\t\t\tif (this.unitScope != null && this.unitScope.fPackage.compoundName != CharOperation.NO_CHAR_CHAR)", "-\t\t\t\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\t\t\t\trequestor.acceptClass(", "+\t\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\t\t\t\tstartPosition - offset, ", "-\t\t\t\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\t\t\t\tthis.startPosition - this.offset, ", "+\t\t\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\t\t\t\trequestor.acceptInterface(", "+\t\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\t\t\t\t\tstartPosition - offset, ", "-\t\t\t\t\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\t\t\t\t\tthis.startPosition - this.offset, ", "+\t\t\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\tnameEnvironment.findTypes(token, this);", "-\t\t\tnameEnvironment.findPackages(token, this);", "+\t\t\tthis.nameEnvironment.findTypes(token, this);", "+\t\t\tthis.nameEnvironment.findPackages(token, this);"]}], "num": 4226}