{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee5d32b687edc08d7438682a54702616", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a91229621df2cedf68103d527f958fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "0563d82fea54cc30f224dc57f0c83b7305fb7a25", "commitAfterChange": "8d84c14d1c620e42d5ed054a6f17aba116368ab9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void add(String relativePath, String containerPath, boolean isPackage, AccessRuleSet access)", "signatureAfterChange": " private void add(String relativePath, String containerPath, boolean isPackage, AccessRuleSet access)", "diff": ["-", "-\tint index = (containerPath.hashCode() & 0x7FFFFFFF) % this.containerPaths.length;", "+\tint length = this.containerPaths.length,", "+\t\tindex = (containerPath.hashCode()& 0x7FFFFFFF) % length;", "-\t\tindex = (index + 1) % this.relativePaths.length;", "+\t\tif (++index == length) {", "+\t\t\tindex = 0;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bde26333255b089339bfb95fd0ea5db2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "0563d82fea54cc30f224dc57f0c83b7305fb7a25", "commitAfterChange": "8d84c14d1c620e42d5ed054a6f17aba116368ab9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private int indexOf(String containerPath, String relativePath)", "signatureAfterChange": " private int indexOf(String containerPath, String relativePath)", "diff": ["-\tint index = (containerPath.hashCode()& 0x7FFFFFFF) % this.containerPaths.length;", "+\tint length = this.containerPaths.length,", "+\t\tindex = (containerPath.hashCode()& 0x7FFFFFFF) % length;", "-\t\tindex = (index + 1) % this.relativePaths.length;", "+\t\tif (++index == length) {", "+\t\t\tindex = 0;", "+\t\t}"]}], "num": 32544}