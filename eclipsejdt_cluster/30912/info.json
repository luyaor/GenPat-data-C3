{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e81c33c8de61a8d760e53a78c685d8db", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413668446202736343092d9c6a7cf5b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6b5b085e3e9563b154e5009244bbcc6d1d33692f", "commitAfterChange": "049dab9c31d1b1f51426de321e572c2d874350bd", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r \tprivate static void updateVariableValues(\r \t\tString[] variableNames,\r \t\tIPath[] variablePaths,\r \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tprivate static void updateVariableValues(\r \t\tString[] variableNames,\r \t\tIPath[] variablePaths,\r \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tboolean mayChangeProjectDependencies = false;\r", "+\t\tboolean needCycleCheck = false;\r", "-\t\t\t\t\t\t\t\tif (!mayChangeProjectDependencies && entry.getPath().segmentCount() ==  1){\r", "+\t\t\t\t\t\t\t\tif (!needCycleCheck && entry.getPath().segmentCount() ==  1){\r", "-\t\t\t\t\t\t\t\t\t\tmayChangeProjectDependencies = true;\r", "+\t\t\t\t\t\t\t\t\t\tneedCycleCheck = true;\r", "-\t\t\t\t\t\t\t\t\t\t\tmayChangeProjectDependencies = true;\r", "+\t\t\t\t\t\t\t\t\t\t\tneedCycleCheck = true;\r", "-\t\t\t\t\t\t\tsize == 1 && mayChangeProjectDependencies); // no individual check if more than 1 project to update\r", "+\t\t\t\t\t\t\tsize == 1 && needCycleCheck); // no individual check if more than 1 project to update\r", "-\t\t\t\tif (size > 1 && mayChangeProjectDependencies){\r", "+\t\t\t\tif (size > 1 && needCycleCheck){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983b5531c4f1ed472040555ddff4d62d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "8726985690d5211d83787440cfdc69960f688cd3", "commitAfterChange": "b2bac1f114347c5119b74b76ba91158e0de76647", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \tprivate static void updateVariableValues(\r \t\tString[] variableNames,\r \t\tIPath[] variablePaths,\r \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tprivate static void updateVariableValues(\r \t\tString[] variableNames,\r \t\tIPath[] variablePaths,\r \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\tint size = affectedProjects.size();\r", "-\t\t\t\t\t\t\tmayChangeProjectDependencies);\r", "+\t\t\t\t\t\t\tsize == 1 && mayChangeProjectDependencies); // no individual check if more than 1 project to update\r", "+\t\t\t\t}\r", "+\t\t\t\tif (size > 1 && mayChangeProjectDependencies){\r", "+\t\t\t\t\ttry {\r", "+\t\t\t\t\t\t// TOFIX\r", "+\t\t\t\t\t\t// use workspace runnable so as to allow marker creation - workaround bug 14733\r", "+\t\t\t\t\t\tResourcesPlugin.getWorkspace().run(\r", "+\t\t\t\t\t\t\tnew IWorkspaceRunnable() {\r", "+\t\t\t\t\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {\r", "+\t\t\t\t\t\t\t\t\tJavaProject.updateAllCycleMarkers(); // update them all at once\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}, \r", "+\t\t\t\t\t\t\tmonitor);\t\t\t\t\t\r", "+\t\t\t\t\t} catch(CoreException e){\r", "+\t\t\t\t\t\tthrow new JavaModelException(e);\r", "+\t\t\t\t\t}\r"]}], "num": 30912}