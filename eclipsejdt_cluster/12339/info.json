{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e84bd0aa1542323724747018ece17207", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1505bbf9fb928b835b11b6ce69f9bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "signatureAfterChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "diff": ["-\t\t// accessible files patterns (optional)", "-\t\tIPath[] accessibleFiles = decodePatterns(element, TAG_ACCESSIBLE);", "-\t\tif (accessibleFiles == null) accessibleFiles = inclusionPatterns; // backward compatible", "+\t\t// access rules (optional)", "+\t\tIAccessRule[] accessRules = decodeAccessRules(element);", "-\t\t// non accessible files patterns (optional)", "-\t\tIPath[] nonAccessibleFiles = decodePatterns(element, TAG_NONACCESSIBLE);", "-\t\tif (nonAccessibleFiles == null) nonAccessibleFiles = exclusionPatterns; // backward compatible", "-\t\t", "-\t\t// combine access restrictions (optional)", "-\t\tboolean combineAccessRestrictions = !element.getAttribute(TAG_COMBINE_ACCESS_RESTRICTIONS).equals(\"false\"); //$NON-NLS-1$", "+\t\t// backward compatibility", "+\t\tif (accessRules == null) {", "+\t\t\taccessRules = getAccessRules(inclusionPatterns, exclusionPatterns);", "+\t\t}", "+", "+\t\t// combine access rules (optional)", "+\t\tboolean combineAccessRestrictions = !element.getAttribute(TAG_COMBINE_ACCESS_RULES).equals(\"false\"); //$NON-NLS-1$", "+\t\tIClasspathEntry entry = null;", "-\t\t\t\treturn JavaCore.newProjectEntry(", "+\t\t\t\tentry = JavaCore.newProjectEntry(", "-\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "-\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessRules,", "-\t\t\t\t", "+\t\t\t\tbreak;\t\t\t\t", "-\t\t\t\treturn JavaCore.newLibraryEntry(", "+\t\t\t\tentry = JavaCore.newLibraryEntry(", "-\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "-\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessRules,", "-\t\t\t\t", "+\t\t\t\tbreak;", "-\t\t\t\t\t\treturn JavaCore.newProjectEntry(", "+\t\t\t\t\t\tentry = JavaCore.newProjectEntry(", "-\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "-\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessRules,", "-", "+\t\t\t\tbreak;", "-\t\t\t\treturn JavaCore.newVariableEntry(", "+\t\t\t\tentry = JavaCore.newVariableEntry(", "-\t\t\t\t\t\taccessibleFiles,", "-\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\taccessRules,", "-\t\t\t\t", "+\t\t\t\tbreak;", "-\t\t\t\treturn JavaCore.newContainerEntry(", "+\t\t\t\tentry = JavaCore.newContainerEntry(", "-\t\t\t\t\t\taccessibleFiles,", "-\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\taccessRules,", "-", "+\t\t\t\tbreak;", "-\t\t\t\t\t\tINCLUDE_ALL, ", "-\t\t\t\t\t\tEXCLUDE_NONE,", "+\t\t\t\t\t\tnull,", "+\t\treturn entry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e31e9f5cca2bf787da87f19558fb47b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "signatureAfterChange": " \t \tpublic static IClasspathEntry elementDecode(Element element, IJavaProject project)", "diff": ["+\t\t// accessible files patterns (optional)", "+\t\tIPath[] accessibleFiles = decodePatterns(element, TAG_ACCESSIBLE);", "+\t\tif (accessibleFiles == null) accessibleFiles = inclusionPatterns; // backward compatible", "+\t\t", "+\t\t// non accessible files patterns (optional)", "+\t\tIPath[] nonAccessibleFiles = decodePatterns(element, TAG_NONACCESSIBLE);", "+\t\tif (nonAccessibleFiles == null) nonAccessibleFiles = exclusionPatterns; // backward compatible", "+\t\t", "+\t\t// extra attributes (optional)", "+\t\tIClasspathAttribute[] extraAttributes = decodeExtraAttributes(element);", "+\t\t", "-\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation);", "+\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation, extraAttributes);", "-\t\t\t\t\t\t\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\t\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\t\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\t\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation);", "+\t\t\t\t\t\treturn JavaCore.newSourceEntry(path, inclusionPatterns, exclusionPatterns, outputLocation, extraAttributes);", "-\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\tinclusionPatterns,", "-\t\t\t\t\t\texclusionPatterns,", "+\t\t\t\t\t\taccessibleFiles,", "+\t\t\t\t\t\tnonAccessibleFiles,", "+\t\t\t\t\t\textraAttributes,", "-\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tINCLUDE_ALL, ", "+\t\t\t\t\t\tEXCLUDE_NONE,", "+\t\t\t\t\t\tNO_EXTRA_ATTRIBUTES);"]}], "num": 12339}