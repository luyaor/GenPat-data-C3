{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "773768fef11a52d1e2314f1ab98f0c32", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3d71d1f6f84c957b72fe043304c0c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 512, "methodNumberAfterChange": 535, "signatureBeforeChange": " public void testBug201064b() throws CoreException", "signatureAfterChange": " public void testBug201064b_CamelCase() throws CoreException", "diff": ["-}", "-public void testBug201064b() throws CoreException {", "-\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "-\tsearchAllTypeNames(\"CaCase\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(", "-\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "-\t\tcollector", "-\t);", "-}", "+public void testBug201064b_CamelCase() throws CoreException {", "+\tsearchAllTypeNames(\"CaCase\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7d39efcc28c0f2aa92a9f405437827", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 514, "methodNumberAfterChange": 537, "signatureBeforeChange": " public void testBug201064d() throws CoreException", "signatureAfterChange": " public void testBug201064d_CamelCase() throws CoreException", "diff": ["-}", "-public void testBug201064d() throws CoreException {", "-\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "-\tsearchAllTypeNames(\"CC\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(", "-\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "-\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+}", "+public void testBug201064d_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CC\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CxxxxCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b81f8f60a60038f4c5f547e7f11b94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 513, "methodNumberAfterChange": 540, "signatureBeforeChange": " public void testBug201064c() throws CoreException", "signatureAfterChange": " public void testBug201064g_CamelCase() throws CoreException", "diff": ["-}", "-public void testBug201064c() throws CoreException {", "-\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "-\tsearchAllTypeNames(\"CamelCase\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(", "-\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "-\t\tcollector", "-\t);", "-}", "+}", "+public void testBug201064g_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CCa\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CxxCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CxxxxCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}"]}], "num": 64549}