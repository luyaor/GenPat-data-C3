{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b24fa0c1407b1c218024e9898ce2546a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8de11bcfe5960463852b3c237bd4626b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public TypeBinding elementsType()", "signatureAfterChange": "  public TypeBinding elementsType()", "diff": ["-\tlong[] nullTagBitsSub = null;", "-\tif (this.nullTagBitsPerDimension != null) {", "-\t\tint len = this.nullTagBitsPerDimension.length-1;", "-\t\tSystem.arraycopy(this.nullTagBitsPerDimension, 1, nullTagBitsSub = new long[len], 0, len);", "-\t}", "-\tif (this.dimensions == 1) {", "-\t\tif (nullTagBitsSub != null && nullTagBitsSub[0] != 0L)", "-\t\t\treturn this.environment.createAnnotatedType(this.leafComponentType, nullTagBitsSub[0]);", "+\t", "+\tif (this.dimensions == 1) ", "+\t", "+\tAnnotationBinding [] oldies = getTypeAnnotations();", "+\tAnnotationBinding [] newbies = Binding.NO_ANNOTATIONS;", "+\t", "+\tfor (int i = 0, length = oldies == null ? 0 : oldies.length; i < length; i++) {", "+\t\tif (oldies[i] == null) {", "+\t\t\tSystem.arraycopy(oldies, i+1, newbies = new AnnotationBinding[length - i - 1], 0, length - i - 1);", "+\t\t\tbreak;", "+\t\t}", "-\treturn this.environment.createArrayType(this.leafComponentType, this.dimensions - 1, nullTagBitsSub);", "+\treturn this.environment.createArrayType(this.leafComponentType, this.dimensions - 1, newbies);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2c9fba6e7031476092a2e2612ef3162", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "7c88f2dadd58695e598a3974e188a04cef737b59", "commitAfterChange": "2b2558e135d8cf28881c72150997538d00c643b3", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations)", "signatureAfterChange": " \tprivate int generateRuntimeAnnotations(final Annotation[] annotations)", "diff": ["-\t\tint annotationAttributeOffset = contentsOffset;", "-\t\tif (contentsOffset + 8 >= contents.length) {", "-\t\t\tresizeContents(8);", "-\t\t}", "-\t\tint runtimeInvisibleAnnotationsAttributeNameIndex =", "-\t\t\tconstantPool.literalIndex(AttributeNamesConstants.RuntimeInvisibleAnnotationsName);", "-\t\tcontents[contentsOffset++] = (byte) (runtimeInvisibleAnnotationsAttributeNameIndex >> 8);", "-\t\tcontents[contentsOffset++] = (byte) runtimeInvisibleAnnotationsAttributeNameIndex;", "-\t\tint attributeLengthOffset = contentsOffset;", "-\t\tcontentsOffset += 4; // leave space for the attribute length", "-", "-\t\tint annotationsLengthOffset = contentsOffset;", "-\t\tcontentsOffset += 2; // leave space for the annotations length", "-\t\tint sourceAnnotationsCounter = 0;", "+\t\t", "-\t\t\t\tint currentOffset = this.contentsOffset;", "-\t\t\t\tgenerateAnnotation(annotation, currentOffset);", "-\t\t\t\tif (currentOffset != this.contentsOffset) {", "-\t\t\t\t\tinvisibleAnnotationsCounter++;", "-\t\t\t\t}", "+\t\t\t\tinvisibleAnnotationsCounter++;", "-\t\t\t} else {", "-\t\t\t\t// source annotation", "-\t\t\t\tsourceAnnotationsCounter++;", "-\t\t", "+", "+\t\t\tint annotationAttributeOffset = contentsOffset;", "+\t\t\tif (contentsOffset + 10 >= contents.length) {", "+\t\t\t\tresizeContents(10);", "+\t\t\t}", "+\t\t\tint runtimeInvisibleAnnotationsAttributeNameIndex =", "+\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.RuntimeInvisibleAnnotationsName);", "+\t\t\tcontents[contentsOffset++] = (byte) (runtimeInvisibleAnnotationsAttributeNameIndex >> 8);", "+\t\t\tcontents[contentsOffset++] = (byte) runtimeInvisibleAnnotationsAttributeNameIndex;", "+\t\t\tint attributeLengthOffset = contentsOffset;", "+\t\t\tcontentsOffset += 4; // leave space for the attribute length", "+\t", "+\t\t\tint annotationsLengthOffset = contentsOffset;", "+\t\t\tcontentsOffset += 2; // leave space for the annotations length", "+\t\t", "+\t\t\tloop: for (int i = 0; i < length; i++) {", "+\t\t\t\tif (invisibleAnnotationsCounter == 0) break loop;", "+\t\t\t\tAnnotation annotation = annotations[i];", "+\t\t\t\tif (isRuntimeInvisible(annotation)) {", "+\t\t\t\t\tgenerateAnnotation(annotation, annotationAttributeOffset);", "+\t\t\t\t\tinvisibleAnnotationsCounter--;", "+\t\t\t\t\tif (this.contentsOffset == annotationAttributeOffset) {", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (contentsOffset != annotationAttributeOffset) {", "+\t\t\t\tint attributeLength = contentsOffset - attributeLengthOffset - 4;", "+\t\t\t\tcontents[attributeLengthOffset++] = (byte) (attributeLength >> 24);", "+\t\t\t\tcontents[attributeLengthOffset++] = (byte) (attributeLength >> 16);", "+\t\t\t\tcontents[attributeLengthOffset++] = (byte) (attributeLength >> 8);", "+\t\t\t\tcontents[attributeLengthOffset++] = (byte) attributeLength;\t\t\t", "+\t\t\t\tattributesNumber++;", "+\t\t\t} else {\t\t", "+\t\t\t\tcontentsOffset = annotationAttributeOffset;", "+\t\t\t}", "+\t\t}", "+\t", "+\t\tif (visibleAnnotationsCounter != 0) {", "+\t\t\tint annotationAttributeOffset = contentsOffset;", "+\t\t\tif (contentsOffset + 10 >= contents.length) {", "+\t\t\t\tresizeContents(10);", "+\t\t\t}", "+\t\t\tint runtimeVisibleAnnotationsAttributeNameIndex =", "+\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.RuntimeVisibleAnnotationsName);", "+\t\t\tcontents[contentsOffset++] = (byte) (runtimeVisibleAnnotationsAttributeNameIndex >> 8);", "+\t\t\tcontents[contentsOffset++] = (byte) runtimeVisibleAnnotationsAttributeNameIndex;", "+\t\t\tint attributeLengthOffset = contentsOffset;", "+\t\t\tcontentsOffset += 4; // leave space for the attribute length", "+\t", "+\t\t\tint annotationsLengthOffset = contentsOffset;", "+\t\t\tcontentsOffset += 2; // leave space for the annotations length", "+\t\t", "+\t\t\tcontents[annotationsLengthOffset++] = (byte) (visibleAnnotationsCounter >> 8);", "+\t\t\tcontents[annotationsLengthOffset++] = (byte) visibleAnnotationsCounter;", "+", "+\t\t\tloop: for (int i = 0; i < length; i++) {", "+\t\t\t\tif (visibleAnnotationsCounter == 0) break loop;", "+\t\t\t\tAnnotation annotation = annotations[i];", "+\t\t\t\tif (isRuntimeVisible(annotation)) {", "+\t\t\t\t\tvisibleAnnotationsCounter--;", "+\t\t\t\t\tgenerateAnnotation(annotation, annotationAttributeOffset);", "+\t\t\t\t\tif (this.contentsOffset == annotationAttributeOffset) {", "+\t\t\t\t\t\tbreak loop;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\t} else {", "-\t\t\tcontentsOffset = annotationAttributeOffset;", "-\t\t", "-\t\tif (visibleAnnotationsCounter != 0) {", "-\t\t\tannotationAttributeOffset = contentsOffset;", "-\t\t\tif (contentsOffset + 8 >= contents.length) {", "-\t\t\t\tresizeContents(8);", "+\t\treturn attributesNumber;", "+\t}", "-\t\t\tint runtimeVisibleAnnotationsAttributeNameIndex =", "-\t\t\t\tconstantPool.literalIndex(AttributeNamesConstants.RuntimeVisibleAnnotationsName);", "-\t\t\tcontents[contentsOffset++] = (byte) (runtimeVisibleAnnotationsAttributeNameIndex >> 8);", "-\t\t\tcontents[contentsOffset++] = (byte) runtimeVisibleAnnotationsAttributeNameIndex;", "-\t\t\tattributeLengthOffset = contentsOffset;", "-\t\t\tannotationsLengthOffset = contentsOffset;", "-\t\t\tcontentsOffset += 2; // leave space for the annotations length", "-\t\t\tint counter = 0;", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tAnnotation annotation = annotations[i];", "-\t\t\t\tif (isRuntimeVisible(annotation)) {", "-\t\t\t\t\tint currentOffset = this.contentsOffset;", "-\t\t\t\t\tgenerateAnnotation(annotation, currentOffset);", "-\t\t\t\t\tif (currentOffset != this.contentsOffset) {", "-\t\t\t\t\t\tcounter++;", "-\t\t\t\t\t}", "-\t\t\t\t\tvisibleAnnotationsCounter--;", "-\t\t\t\t\tif (visibleAnnotationsCounter == 0) {", "-\t\t\t\t\t\tbreak;", "-\t\t\tif (counter != 0) {", "-\t\t\t\tcontents[annotationsLengthOffset++] = (byte) (counter >> 8);", "-\t\t\t\tcontents[annotationsLengthOffset++] = (byte) counter;", "-\t", "-\t\t\t\tif (contentsOffset != annotationAttributeOffset) {", "-\t\t\t\t\tint attributeLength = contentsOffset - attributeLengthOffset - 4;", "-\t\t\t\t\tcontents[attributeLengthOffset++] = (byte) (attributeLength >> 24);", "-\t\t\t\t\tcontents[attributeLengthOffset++] = (byte) (attributeLength >> 16);", "-\t\t\t\t\tcontents[attributeLengthOffset++] = (byte) (attributeLength >> 8);", "-\t\t\t\t\tcontents[attributeLengthOffset++] = (byte) attributeLength;\t\t\t", "-\t\t\t\t\tattributesNumber++;", "-\t\t\t\t} else {", "-\t\t\t\t\tcontentsOffset = annotationAttributeOffset;"]}], "num": 15558}