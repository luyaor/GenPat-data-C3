{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1f3d901012b8cec32afbe1a489dc43a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e41c3fb6d771bff4dc22adac7f0e4bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "4f8ce9c44083e58564232003d59f7f12a74c51b9", "commitAfterChange": "19eef6f26c48016adc4a14301bf3da3ca0ccecb1", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\t\t\t\tdoTextInsert(pos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\tif (token == TerminalTokens.TokenNameCOMMA) {", "+\t\t\t\t\t\t// a comma is at the end of the enum constant before a potential semicolon", "+\t\t\t\t\t\tint endPos= getScanner().getCurrentEndOffset();", "+\t\t\t\t\t\tint nextToken= getScanner().readNext(endPos, true);", "+\t\t\t\t\t\tif (nextToken != TerminalTokens.TokenNameSEMICOLON) {", "+\t\t\t\t\t\t\tdoTextInsert(endPos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+//\t\t\t\t\t\t\tdoTextReplace(pos, endPos - pos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t\t\tpos= endPos;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tendPos= getScanner().getCurrentEndOffset();", "+\t\t\t\t\t\t\tif (isAllOfKind(children, RewriteEvent.REMOVED)) {", "+\t\t\t\t\t\t\t\tdoTextRemove(pos, endPos - pos, getEditGroup(children[0]));", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tpos= endPos;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tdoTextInsert(pos, \";\", getEditGroup(children[0])); //$NON-NLS-1$", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a688c71d8e81983416a9e97b6ffcdd78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d0f6b932bd2521f678bde4cdb96cb1190442e2f1", "commitAfterChange": "84bbf5d10f91b2c7f38d4b1250126f235793a08e", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t \tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword, boolean adjustOnNext)", "signatureAfterChange": " \t \tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword, boolean adjustOnNext, boolean needsSpaceOnRemoveAll)", "diff": ["-\tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword, boolean adjustOnNext) {", "+\tprivate int rewriteOptionalTypeParameters(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword, boolean adjustOnNext, boolean needsSpaceOnRemoveAll) {", "-\t\t\t\t\tpos= getScanner().getTokenStartOffset(ITerminalSymbols.TokenNameLESS, pos);", "+\t\t\t\t\tint posBeforeOpenBracket= getScanner().getTokenStartOffset(ITerminalSymbols.TokenNameLESS, pos);", "+\t\t\t\t\tif (posBeforeOpenBracket != pos) {", "+\t\t\t\t\t\tneedsSpaceOnRemoveAll= false;", "+\t\t\t\t\t}", "+\t\t\t\t\tpos= posBeforeOpenBracket;", "-\t\t\t\t\tdoTextRemove(pos, endPos - pos, getEditGroup(children[children.length - 1]));", "+\t\t\t\t\tString replacement= needsSpaceOnRemoveAll ? String.valueOf(' ') : new String();", "+\t\t\t\t\tdoTextReplace(pos, endPos - pos, replacement, getEditGroup(children[children.length - 1]));"]}], "num": 30904}