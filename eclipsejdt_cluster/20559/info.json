{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c776aba0bf3632075435d053b164e62", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a138abf0430190610821865d71adb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "0a1a58cff49ba28ab8a24ea8cceb397cd28f5bb9", "commitAfterChange": "c6d42959c3928ea39552c68b8365ccff903e4852", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " public void testCompletionEmptyTypeName2() throws JavaModelException", "signatureAfterChange": " public void testCompletionEmptyTypeName2() throws JavaModelException", "diff": ["-\t\t\t\"element:a    completion:a    relevance:\"+(R_DEFAULT + R_RESOLVED + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\t\"element:a    completion:a    relevance:\"+(R_DEFAULT + R_RESOLVED + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be08752b2e6cfd303bf3e3bb64efa06c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void test050()", "signatureAfterChange": " public void test050()", "diff": ["-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 11\\n\" + ", "-\t\t\t\"     7  goto 11\\n\" + ", "-\t\t\t\"    10  astore_1\\n\" + ", "-\t\t\t\"    11  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 6]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 10]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo2();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 11\\n\" + ", "-\t\t\t\"     7  goto 11\\n\" + ", "-\t\t\t\"    10  astore_1\\n\" + ", "-\t\t\t\"    11  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 13]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 14]\\n\" + ", "-\t\t\t\"        [pc: 10, line: 16]\\n\" + ", "-\t\t\t\"        [pc: 11, line: 18]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo3();\\n\" + ", "-\t\t\t\"    0  goto 4\\n\" + ", "-\t\t\t\"    3  astore_1\\n\" + ", "-\t\t\t\"    4  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 22]\\n\" + ", "-\t\t\t\"        [pc: 3, line: 24]\\n\" + ", "-\t\t\t\"        [pc: 4, line: 26]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void foo4();\\n\" + ", "-\t\t\t\"     0  iconst_0\\n\" + ", "-\t\t\t\"     1  istore_1 [i]\\n\" + ", "-\t\t\t\"     2  aload_0 [this]\\n\" + ", "-\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     6  ifeq 13\\n\" + ", "-\t\t\t\"     9  goto 13\\n\" + ", "-\t\t\t\"    12  astore_1\\n\" + ", "-\t\t\t\"    13  return\\n\" + ", "-\t\t\t\"      Exception Table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 9] -> 12 when : java.lang.Exception\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 29]\\n\" + ", "-\t\t\t\"        [pc: 9, line: 30]\\n\" + ", "-\t\t\t\"        [pc: 12, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 13, line: 34]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 12] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\"  void bar();\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 17\\n\" + ", "-\t\t\t\"     7  aload_0 [this]\\n\" + ", "-\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    11  ifeq 24\\n\" + ", "-\t\t\t\"    14  goto 24\\n\" + ", "-\t\t\t\"    17  aload_0 [this]\\n\" + ", "-\t\t\t\"    18  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    21  ifeq 24\\n\" + ", "-\t\t\t\"    24  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 36]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 37]\\n\" + ", "-\t\t\t\"        [pc: 14, line: 38]\\n\" + ", "-\t\t\t\"        [pc: 17, line: 40]\\n\" + ", "-\t\t\t\"        [pc: 24, line: 44]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 25] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"  \\n\" + ", "-\t\t\t\"  // Method descriptor #28 (I)V\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\"  void baz(int i);\\n\" + ", "-\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"     4  ifeq 34\\n\" + ", "-\t\t\t\"     7  iload_1 [i]\\n\" + ", "-\t\t\t\"     8  tableswitch default: 31\\n\" + ", "-\t\t\t\"          case 0: 28\\n\" + ", "-\t\t\t\"    28  goto 39\\n\" + ", "-\t\t\t\"    31  goto 39\\n\" + ", "-\t\t\t\"    34  aload_0 [this]\\n\" + ", "-\t\t\t\"    35  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    38  pop\\n\" + ", "-\t\t\t\"    39  return\\n\" + ", "-\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\"        [pc: 0, line: 46]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 47]\\n\" + ", "-\t\t\t\"        [pc: 28, line: 48]\\n\" + ", "-\t\t\t\"        [pc: 31, line: 49]\\n\" + ", "-\t\t\t\"        [pc: 34, line: 52]\\n\" + ", "-\t\t\t\"        [pc: 39, line: 54]\\n\" + ", "-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 40] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 40] local: i index: 1 type: int\\n\"", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 11\\n\" + ", "+\t\t\t\t\"     7  goto 11\\n\" + ", "+\t\t\t\t\"    10  astore_1\\n\" + ", "+\t\t\t\t\"    11  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 5]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 6]\\n\" + ", "+\t\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "+\t\t\t\t\"        [pc: 11, line: 10]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo2();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 11\\n\" + ", "+\t\t\t\t\"     7  goto 11\\n\" + ", "+\t\t\t\t\"    10  astore_1\\n\" + ", "+\t\t\t\t\"    11  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 7] -> 10 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 13]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 14]\\n\" + ", "+\t\t\t\t\"        [pc: 10, line: 16]\\n\" + ", "+\t\t\t\t\"        [pc: 11, line: 18]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 12] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\t\t\"  void foo3();\\n\" + ", "+\t\t\t\t\"    0  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 26]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void foo4();\\n\" + ", "+\t\t\t\t\"     0  iconst_0\\n\" + ", "+\t\t\t\t\"     1  istore_1 [i]\\n\" + ", "+\t\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     6  ifeq 13\\n\" + ", "+\t\t\t\t\"     9  goto 13\\n\" + ", "+\t\t\t\t\"    12  astore_1\\n\" + ", "+\t\t\t\t\"    13  return\\n\" + ", "+\t\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 9] -> 12 when : java.lang.Exception\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 29]\\n\" + ", "+\t\t\t\t\"        [pc: 9, line: 30]\\n\" + ", "+\t\t\t\t\"        [pc: 12, line: 32]\\n\" + ", "+\t\t\t\t\"        [pc: 13, line: 34]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 2, pc: 12] local: i index: 1 type: int\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\t\t\"  void bar();\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 17\\n\" + ", "+\t\t\t\t\"     7  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    11  ifeq 24\\n\" + ", "+\t\t\t\t\"    14  goto 24\\n\" + ", "+\t\t\t\t\"    17  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    18  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    21  ifeq 24\\n\" + ", "+\t\t\t\t\"    24  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 36]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 37]\\n\" + ", "+\t\t\t\t\"        [pc: 14, line: 38]\\n\" + ", "+\t\t\t\t\"        [pc: 17, line: 40]\\n\" + ", "+\t\t\t\t\"        [pc: 24, line: 44]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 25] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #28 (I)V\\n\" + ", "+\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\t\"  void baz(int i);\\n\" + ", "+\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "+\t\t\t\t\"     1  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"     4  ifeq 34\\n\" + ", "+\t\t\t\t\"     7  iload_1 [i]\\n\" + ", "+\t\t\t\t\"     8  tableswitch default: 31\\n\" + ", "+\t\t\t\t\"          case 0: 28\\n\" + ", "+\t\t\t\t\"    28  goto 39\\n\" + ", "+\t\t\t\t\"    31  goto 39\\n\" + ", "+\t\t\t\t\"    34  aload_0 [this]\\n\" + ", "+\t\t\t\t\"    35  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\t\"    38  pop\\n\" + ", "+\t\t\t\t\"    39  return\\n\" + ", "+\t\t\t\t\"      Line numbers:\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 46]\\n\" + ", "+\t\t\t\t\"        [pc: 7, line: 47]\\n\" + ", "+\t\t\t\t\"        [pc: 28, line: 48]\\n\" + ", "+\t\t\t\t\"        [pc: 31, line: 49]\\n\" + ", "+\t\t\t\t\"        [pc: 34, line: 52]\\n\" + ", "+\t\t\t\t\"        [pc: 39, line: 54]\\n\" + ", "+\t\t\t\t\"      Local variable table:\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 40] local: this index: 0 type: X\\n\" + ", "+\t\t\t\t\"        [pc: 0, pc: 40] local: i index: 1 type: int\\n\"", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 7, same]\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "-\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "-\t\t\t\"    0  goto 4\\n\" + ", "-\t\t\t\"    3  astore_1\\n\" + ", "-\t\t\t\"    4  return\\n\" + ", "+\t\t\t\"    0  return\\n\" + ", "-\t\t\t\"        [pc: 0, line: 22]\\n\" + ", "-\t\t\t\"        [pc: 3, line: 24]\\n\" + ", "-\t\t\t\"        [pc: 4, line: 26]\\n\" + ", "+\t\t\t\"        [pc: 0, line: 26]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 0, same]\\n\" + ", "-\t\t\t\"        [pc: 3, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + ", "-\t\t\t\"        [pc: 4, same]\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "-\t\t\t\"        [pc: 9, append: {int}]\\n\" + ", "-\t\t\t\"        [pc: 12, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 2\\n\" + ", "+\t\t\t\"        [pc: 12, same_locals_1_stack_item, stack: {java.lang.Exception}]\\n\" + "]}], "num": 20559}