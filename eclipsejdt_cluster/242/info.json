{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "136577330566eb25e2ebd6db3b24c8da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d0928aa8eeade4bb82d7c1460ea3af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 611, "methodNumberAfterChange": 611, "signatureBeforeChange": "\t\t \tpublic void test607()", "signatureAfterChange": "\t\t \tpublic void test607()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tCollections.sort (lComp);\t\t\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked invocation sort(List<Comparable>) of the generic method sort(List<T>) of type Collections\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + ", "-\t\t\t\"\tCollections.sort (lStr);\\n\" + ", "-\t\t\t\"\t            ^^^^\\n\" + ", "-\t\t\t\"Bound mismatch: The generic method sort(List<T>) of type Collections is not applicable for the arguments (List<Comparable<String>>). The inferred type Comparable<String> is not a valid substitute for the bounded parameter <T extends Comparable<? super T>>\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+    \t\t\"\tList<Comparable> lComp = new ArrayList<Comparable> ();\\n\" + ", "+    \t\t\"\t     ^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in X.java (at line 10)\\n\" + ", "+    \t\t\"\tList<Comparable> lComp = new ArrayList<Comparable> ();\\n\" + ", "+    \t\t\"\t                                       ^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. WARNING in X.java (at line 11)\\n\" + ", "+    \t\t\"\tCollections.sort (lComp);\t\t\\n\" + ", "+    \t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Unchecked invocation sort(List<Comparable>) of the generic method sort(List<T>) of type Collections\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"4. ERROR in X.java (at line 15)\\n\" + ", "+    \t\t\"\tCollections.sort (lStr);\\n\" + ", "+    \t\t\"\t            ^^^^\\n\" + ", "+    \t\t\"Bound mismatch: The generic method sort(List<T>) of type Collections is not applicable for the arguments (List<Comparable<String>>). The inferred type Comparable<String> is not a valid substitute for the bounded parameter <T extends Comparable<? super T>>\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e6cf55404b8f12121d091e5ad193b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 563, "signatureBeforeChange": " \tpublic void test559()", "signatureAfterChange": " \tpublic void test559()", "diff": ["-\t\t\t\"2. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tCell c= new Cell();\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Type safety: Cell is a raw type. References to generic type Cell<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"\tCell c= new Cell();\\n\" + ", "+\t\t\t\"\t            ^^^^\\n\" + ", "+\t\t\t\"Type safety: Cell is a raw type. References to generic type Cell<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 17)\\n\" + "]}], "num": 242}