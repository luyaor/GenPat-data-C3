{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a45d4b0fc1bfd5069241674949a3e2c7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54437c6c69a8932e63f1dabe2798128e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "140f4397394251f47b2dea234f568be74d1fe6c5", "commitAfterChange": "bef74bd3c81d577f2877e22159dad6a83f7261ac", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding) {", "+\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding &&", "+\t\t\t\t\t\t\t\t\t\t!(qualifiedBinding instanceof TypeVariableBinding)) {", "-\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding) {", "+\t\t\t\t\t\t\t\tif (qualifiedBinding instanceof ReferenceBinding &&", "+\t\t\t\t\t\t\t\t\t\t!(qualifiedBinding instanceof TypeVariableBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1645f7a483688668ce4bd94860be88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "657570b48a17f915b1074904b34a72cfb4a35e14", "commitAfterChange": "61fe80f034add1c939a15204bbe2ce5b13ba0757", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["-\t\t\t\t} else if(currentElement instanceof RecoveredField) {", "+\t\t\t\t} else if(currentElement instanceof RecoveredField && !(currentElement instanceof RecoveredInitializer)) {", "-\t\tif(currentElement instanceof RecoveredField", "+\t\tif(currentElement instanceof RecoveredField && !(currentElement instanceof RecoveredInitializer)"]}], "num": 65969}