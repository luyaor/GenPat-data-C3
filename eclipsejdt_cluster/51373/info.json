{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb913f03551f34c70302da6462386911", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b237af3be105090e6932046f5d43672b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "cb3be60ace11d22c263d413bb56650b519ca99ca", "commitAfterChange": "e368c191001d740ec7ac91da20190ca3ba7d3b61", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\t\tboolean isUnicode;", "-\t\t\t\t\t\t\t\t\tisUnicode = true;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tisUnicode = false;", "-", "+\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t} //jump over the \\\\", "+\t\t\t\t\t\t\t\tboolean isUnicode = false;", "+\t\t\t\t\t\t\t\t\tisUnicode = false;", "+\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "-\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tisUnicode = false;", "+\t\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t} //jump over the \\\\", "+\t\t\t\t\t\t\t\trecordComment(TokenNameCOMMENT_LINE);", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t * We need to completely consume the line break", "+\t\t\t\t\t\t\t\t */", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\r'", "+\t\t\t\t\t\t\t\t   && this.source.length > this.currentPosition) {", "+\t\t\t\t\t\t\t\t   \tif (this.source[this.currentPosition] == '\\n') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t   \t} else if ((this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition + 1] == 'u')) {", "+\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "+\t\t\t\t\t\t\t\t\t\tchar unicodeChar;", "+\t\t\t\t\t\t\t\t\t\tint index = this.currentPosition + 1;", "+\t\t\t\t\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\t\t\t\t\twhile (this.source[index] == 'u') {", "+\t\t\t\t\t\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "+\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "+\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "+\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "+\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "+\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) { //error don't care of the value", "+\t\t\t\t\t\t\t\t\t\t\tunicodeChar = 'A';", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tunicodeChar = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tif (unicodeChar == '\\n') {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t   \t}", "-\t\t\t\t\t\t\t\t\t\tif (!isUnicode) {", "+\t\t\t\t\t\t\t\t\t\tif (isUnicode) {", "+\t\t\t\t\t\t\t\t\t\t\tpushUnicodeLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthis.currentPosition--;", "+\t\t\t\t\t\t\t\trecordComment(TokenNameCOMMENT_LINE);", "+\t\t\t\t\t\t\t\tif (!this.tokenizeComments) {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition++; ", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tisUnicode = false;", "-\t\t\t\t\t\t\tboolean star = false;", "-\t\t\t\t\t\t\ttry { // consume next character", "+\t\t\t\t\t\t\tboolean isJavadoc = false;", "+\t\t\t\t\t\t\ttry { //get the next char", "+\t\t\t\t\t\t\t\tboolean star = false;", "+\t\t\t\t\t\t\t\tboolean isUnicode = false;", "+\t\t\t\t\t\t\t\t// consume next character", "-\t\t\t\t\t\t\t} catch (InvalidInputException ex) {", "- \t\t\t\t\t\t\t\t// ignore", "- \t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.currentCharacter == '*') {", "-\t\t\t\t\t\t\t\tstar = true;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.recordLineSeparator", "-\t\t\t\t\t\t\t\t&& ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n'))) {", "-\t\t\t\t\t\t\t\t\tif (!isUnicode) {", "-\t\t\t\t\t\t\t\t\t\tpushLineSeparator();", "+\t", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '*') {", "+\t\t\t\t\t\t\t\t\tisJavadoc = true;", "+\t\t\t\t\t\t\t\t\tstar = true;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\t\tif (isUnicode) {", "+\t\t\t\t\t\t\t\t\t\t\tpushUnicodeLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tpushLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\ttry { //get the next char ", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tisUnicode = false;", "+\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c4 < 0) { //error don't care of the value", "-\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = 'A';", "-\t\t\t\t\t\t\t\t\t} //something different from * and /", "-\t\t\t\t\t\t\t\t\telse {", "-\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t//loop until end of comment */ ", "+\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++; //jump over the \\\\", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// empty comment is not a javadoc /**/", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '/') { ", "+\t\t\t\t\t\t\t\t\tisJavadoc = false;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t//loop until end of comment */", "-\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator", "-\t\t\t\t\t\t\t\t\t\t&& ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n'))) {", "-\t\t\t\t\t\t\t\t\t\t\tif (!isUnicode) {", "+\t\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\t\t\tif (isUnicode) {", "+\t\t\t\t\t\t\t\t\t\t\t\tpushUnicodeLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) { //error don't care of the value", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = 'A';", "-\t\t\t\t\t\t\t\t\t\t} //something different from * and /", "-\t\t\t\t\t\t\t\t\t\telse {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t} //jump over the \\\\", "+\t\t\t\t\t\t\t\trecordComment(isJavadoc ? TokenNameCOMMENT_JAVADOC : TokenNameCOMMENT_BLOCK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf6294867124abcbc65f529aca5bfda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "848244c71e987fa25db92edd0b058c74c3d21f97", "commitAfterChange": "70248982b1cc4bbdc8708a5ccdd79e9520de6d48", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\t\tboolean isUnicode;", "-\t\t\t\t\t\t\t\t\tisUnicode = true;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tisUnicode = false;", "-", "+\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t} //jump over the \\\\", "+\t\t\t\t\t\t\t\tboolean isUnicode = false;", "+\t\t\t\t\t\t\t\t\tisUnicode = false;", "+\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "-\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tisUnicode = false;", "+\t\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t} //jump over the \\\\", "+\t\t\t\t\t\t\t\trecordComment(TokenNameCOMMENT_LINE);", "+\t\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t\t * We need to completely consume the line break", "+\t\t\t\t\t\t\t\t */", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\r'", "+\t\t\t\t\t\t\t\t   && this.source.length > this.currentPosition) {", "+\t\t\t\t\t\t\t\t   \tif (this.source[this.currentPosition] == '\\n') {", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t   \t} else if ((this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t&& (this.source[this.currentPosition + 1] == 'u')) {", "+\t\t\t\t\t\t\t\t\t\tisUnicode = true;", "+\t\t\t\t\t\t\t\t\t\tchar unicodeChar;", "+\t\t\t\t\t\t\t\t\t\tint index = this.currentPosition + 1;", "+\t\t\t\t\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\t\t\t\t\twhile (this.source[index] == 'u') {", "+\t\t\t\t\t\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t//-------------unicode traitement ------------", "+\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "+\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "+\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "+\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "+\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[index++])) > 15", "+\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) { //error don't care of the value", "+\t\t\t\t\t\t\t\t\t\t\tunicodeChar = 'A';", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tunicodeChar = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tif (unicodeChar == '\\n') {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition = index;", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = '\\n';", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t   \t}", "-\t\t\t\t\t\t\t\t\t\tif (!isUnicode) {", "+\t\t\t\t\t\t\t\t\t\tif (isUnicode) {", "+\t\t\t\t\t\t\t\t\t\t\tpushUnicodeLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tthis.currentPosition--;", "+\t\t\t\t\t\t\t\trecordComment(TokenNameCOMMENT_LINE);", "+\t\t\t\t\t\t\t\tif (!this.tokenizeComments) {", "+\t\t\t\t\t\t\t\t\tthis.currentPosition++; ", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tisUnicode = false;", "-\t\t\t\t\t\t\tboolean star = false;", "-\t\t\t\t\t\t\ttry { // consume next character", "+\t\t\t\t\t\t\tboolean isJavadoc = false;", "+\t\t\t\t\t\t\ttry { //get the next char", "+\t\t\t\t\t\t\t\tboolean star = false;", "+\t\t\t\t\t\t\t\tboolean isUnicode = false;", "+\t\t\t\t\t\t\t\t// consume next character", "-\t\t\t\t\t\t\t} catch (InvalidInputException ex) {", "- \t\t\t\t\t\t\t\t// ignore", "- \t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.currentCharacter == '*') {", "-\t\t\t\t\t\t\t\tstar = true;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (this.recordLineSeparator", "-\t\t\t\t\t\t\t\t&& ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n'))) {", "-\t\t\t\t\t\t\t\t\tif (!isUnicode) {", "-\t\t\t\t\t\t\t\t\t\tpushLineSeparator();", "+\t", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '*') {", "+\t\t\t\t\t\t\t\t\tisJavadoc = true;", "+\t\t\t\t\t\t\t\t\tstar = true;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\t\tif (isUnicode) {", "+\t\t\t\t\t\t\t\t\t\t\tpushUnicodeLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tpushLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\ttry { //get the next char ", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tisUnicode = false;", "+\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t|| c4 < 0) { //error don't care of the value", "-\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = 'A';", "-\t\t\t\t\t\t\t\t\t} //something different from * and /", "-\t\t\t\t\t\t\t\t\telse {", "-\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t//loop until end of comment */ ", "+\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\tthis.currentPosition++; //jump over the \\\\", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t// empty comment is not a javadoc /**/", "+\t\t\t\t\t\t\t\tif (this.currentCharacter == '/') { ", "+\t\t\t\t\t\t\t\t\tisJavadoc = false;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t//loop until end of comment */", "-\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator", "-\t\t\t\t\t\t\t\t\t\t&& ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n'))) {", "-\t\t\t\t\t\t\t\t\t\t\tif (!isUnicode) {", "+\t\t\t\t\t\t\t\t\tif ((this.currentCharacter == '\\r') || (this.currentCharacter == '\\n')) {", "+\t\t\t\t\t\t\t\t\t\tif (this.recordLineSeparator) {", "+\t\t\t\t\t\t\t\t\t\t\tif (isUnicode) {", "+\t\t\t\t\t\t\t\t\t\t\t\tpushUnicodeLineSeparator();", "+\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tgetNextUnicodeChar();", "-\t\t\t\t\t\t\t\t\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0;", "-\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\twhile (this.source[this.currentPosition] == 'u') {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c1 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c2 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c3 < 0", "-\t\t\t\t\t\t\t\t\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t\t\t\t\t\t\t\t\t\t|| c4 < 0) { //error don't care of the value", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = 'A';", "-\t\t\t\t\t\t\t\t\t\t} //something different from * and /", "-\t\t\t\t\t\t\t\t\t\telse {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t//handle the \\\\u case manually into comment", "+\t\t\t\t\t\t\t\t\tif (this.currentCharacter == '\\\\') {", "+\t\t\t\t\t\t\t\t\t\tif (this.source[this.currentPosition] == '\\\\')", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\t\t\t\t} //jump over the \\\\", "+\t\t\t\t\t\t\t\trecordComment(isJavadoc ? TokenNameCOMMENT_JAVADOC : TokenNameCOMMENT_BLOCK);"]}], "num": 51373}