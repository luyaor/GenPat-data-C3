{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11a057cf37310cbddb96c82a843a4b88", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "359a3988910de332840c036778082a7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testPotentialMatchInBinary() throws CoreException", "signatureAfterChange": " public void testPotentialMatchInBinary() throws CoreException", "diff": ["-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType.field [No source] POTENTIAL_MATCH\\n\" +", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType.missing [No source] POTENTIAL_MATCH\\n\" +", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType.otherField [No source] POTENTIAL_MATCH\", ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType.field [No source] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType.missing [No source] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType.otherField [No source] POTENTIAL_MATCH\",", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingArgumentType.foo() -> void [No source] POTENTIAL_MATCH\\n\" +", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingArgumentType.foo(java.util.EventListener) -> void [No source] POTENTIAL_MATCH\\n\" +", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingArgumentType.foo2() -> void [No source] POTENTIAL_MATCH\", ", "+\t\t\t\"AbortCompilation.jar void AbortCompilation.MissingArgumentType.foo() [No source] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar void AbortCompilation.MissingArgumentType.foo(java.util.EventListener) [No source] POTENTIAL_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar void AbortCompilation.MissingArgumentType.foo2() [No source] POTENTIAL_MATCH\",", "-\t\t\t\"AbortCompilation.jar AbortCompilation.EnclosingType$MissingEnclosingType [No source] EXACT_MATCH\\n\" +", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingArgumentType [No source] EXACT_MATCH\\n\" +", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType [No source] EXACT_MATCH\", ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.EnclosingType$MissingEnclosingType [No source] EXACT_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingArgumentType [No source] EXACT_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType [No source] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6e6cee253e66344c3f229ced114289", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "630793cce0a64642fbc1993a23f5569e404d0323", "commitAfterChange": "28076bd39732aa043b533cdb44f2f309abe05417", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 125, "signatureBeforeChange": " public void testPotentialMatchInBinary3() throws CoreException", "signatureAfterChange": " public void testSearchTypeInBinaryNoResolution() throws CoreException", "diff": ["-public void testPotentialMatchInBinary3() throws CoreException {", "-\tIJavaProject project = this.getJavaProject(\"JavaSearch\");", "-\tIClasspathEntry[] classpath = project.getRawClasspath();", "-\t\tproject.setRawClasspath(newClasspath, null);", "-\t\t", "-\t\t// potential match for a type declaration", "-\t\tsearch(", "-\t\t\t\"Missing*\",", "-\t\t\tTYPE,", "-\t\t\tDECLARATIONS, ", "-\t\t\tgetJavaSearchScope(), ", "-\t\t\tthis.resultCollector);", "-\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType [No source] EXACT_MATCH\",", "-\t\t\tthis.resultCollector);", "-\t\tproject.setRawClasspath(classpath, null);", "+public void testSearchTypeInBinaryNoResolution() throws CoreException {", "+\tIClasspathEntry[] classpath = JAVA_PROJECT.getRawClasspath();", "+\ttry {", "+\t\t// add AbortCompilation.jar to classpath", "+\t\tint length = classpath.length;", "+\t\tIClasspathEntry[] newClasspath = new IClasspathEntry[length+1];", "+\t\tSystem.arraycopy(classpath, 0, newClasspath, 0, length);", "+\t\tnewClasspath[length] = JavaCore.newLibraryEntry(new Path(\"/JavaSearch/AbortCompilation.jar\"), null, null);", "+\t\tJAVA_PROJECT.setRawClasspath(newClasspath, null);", "+", "+\t\t// exact match for a type declaration", "+\t\tresultCollector.showAccuracy = true;", "+\t\tsearch(\"Missing*\", TYPE, DECLARATIONS,  getJavaSearchScope());", "+\t\tassertSearchResults(", "+\t\t\t\"AbortCompilation.jar AbortCompilation.EnclosingType$MissingEnclosingType [No source] EXACT_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingArgumentType [No source] EXACT_MATCH\\n\" + ", "+\t\t\t\"AbortCompilation.jar AbortCompilation.MissingFieldType [No source] EXACT_MATCH\"", "+\t\t);", "+\t} finally {", "+\t\t// reset classpath", "+\t\tJAVA_PROJECT.setRawClasspath(classpath, null);", "+\t}", "+}\t"]}], "num": 40302}