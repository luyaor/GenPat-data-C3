{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7aa623f407c55f75daf08d6a569b72ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30e4bab892b713d77d4efda480985d81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "4d3248bf8a50c2573f33ebfb354f201ec2af10f0", "commitAfterChange": "50b056417f7b2dfe8902e626cfbc3e6979160ac1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "signatureAfterChange": " \tprotected void handleInternalException( \t\tThrowable internalException, \t\tCompilationUnitDeclaration unit, \t\tCompilationResult result)", "diff": ["-\t\t/* dump a stack trace to the console */", "-\t\tinternalException.printStackTrace();", "-", "+\t\tboolean needToPrint = true;", "+\t\t\t\tneedToPrint = false;", "+\t\tif (needToPrint) {", "+\t\t\t/* dump a stack trace to the console */", "+\t\t\tinternalException.printStackTrace();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31655068bdc79387884a9677b262eeb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "698c26d613731d0111dbddcb370ca40364ac7e62", "commitAfterChange": "bc365dacedad94d7f1c21fb489480545f6fe0961", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["+\t", "+\tICompilationUnit original = null;", "+\tboolean mustSetToOriginalContent = false;", "+\tif (isWorkingCopy) {", "+\t\t// ensure that isOpen() is called outside the bufManager synchronized block", "+\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=237772", "+\t\tmustSetToOriginalContent = !isPrimary() && (original = new CompilationUnit((PackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY)).isOpen() ;", "+\t}", "-\t\t\t\tICompilationUnit original;", "-\t\t\t\tif (!isPrimary()", "-\t\t\t\t\t\t&& (original = new CompilationUnit((PackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY)).isOpen()) {", "+\t\t\t\tif (mustSetToOriginalContent) {"]}], "num": 16122}