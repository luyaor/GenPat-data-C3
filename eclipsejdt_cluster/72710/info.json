{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e26539ab7a4dffa5dd2bbddc0beea5a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096aa8ab91fd06a10438dc019ca560c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "commitAfterChange": "39e213fa6f67cec1c2c3ab80a64ac8dcf4d5cf90", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static void create1_5Jar(String[] pathsAndContents, String jarPath) throws IOException", "signatureAfterChange": " public static void createJar(String[] pathsAndContents, String jarPath, String compliance) throws IOException", "diff": ["-public static void create1_5Jar(String[] pathsAndContents, String jarPath) throws IOException {", "+public static void createJar(String[] pathsAndContents, String jarPath, String compliance) throws IOException {", "-\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);\t", "-\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);\t", "+\toptions.put(CompilerOptions.OPTION_Compliance, compliance);", "+\toptions.put(CompilerOptions.OPTION_Source, compliance);\t", "+\toptions.put(CompilerOptions.OPTION_TargetPlatform, compliance);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b476ff730b7d1556feb9d37e8f099db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "8641f54de2fbb396358e8ce74c8966d612b3bcdf", "commitAfterChange": "7f7fe7a0ba4a6e12c0bff10c900a5fe01a5f59ed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void correct(char[] argument)", "signatureAfterChange": "  \tprivate void correct(char[] argument)", "diff": ["-\t\t\t", "-\t\t\tthis.compilationUnit.codeComplete(", "-\t\t\t\tcompletionPosition,", "-\t\t\t\tthis.completionRequestor", "-\t\t\t);", "+\t\t\tHashtable oldOptions = JavaCore.getOptions();", "+\t\t\ttry {", "+\t\t\t\tHashtable options = new Hashtable(oldOptions);", "+\t\t\t\toptions.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.DISABLED);", "+\t\t\t\tJavaCore.setOptions(options);", "+\t\t\t\t", "+\t\t\t\tthis.compilationUnit.codeComplete(", "+\t\t\t\t\tcompletionPosition,", "+\t\t\t\t\tthis.completionRequestor", "+\t\t\t\t);", "+\t\t\t} finally {", "+\t\t\t\tJavaCore.setOptions(oldOptions);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f4cb77bf499e39b0e9cb43f11f1da80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "50bce8c3f61bb3d688d9edafa1d2a65300b2c4a3", "commitAfterChange": "9bee1c6f3c6bf50ec7f9dbd9166f81542168adc6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "diff": ["+\t@SuppressWarnings(\"unchecked\")", "-\t\tthis.initialize(writerOut, writerErr, false);", "+\t\tinitialize(writerOut, writerErr, false);", "+\t\tthis.options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_6);", "+\t\tthis.options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_6);", "+\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_6);", "-    \t\tfor (Iterator<String> iterator = options.iterator(); iterator.hasNext(); ) {", "+\t\t\tfor (Iterator<String> iterator = options.iterator(); iterator.hasNext(); ) {", "-    \t\t}", "+\t\t\t}"]}], "num": 72710}