{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6346874c6854113124440ce45b1d4ad8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a236c614d2277bc8517079ddd4864e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "67974a3eb30390e309a10071d1a2b488bc4237aa", "commitAfterChange": "84eea0a0b501eccff0f4627ea142c6395d390a8d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testGetInterfaceBounds()", "signatureAfterChange": " public void testGetTypeParameterBounds()", "diff": ["+public void testGetTypeParameterBounds() {", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct1\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 0);", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct2\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 2);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct2b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct3\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 3);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qlist<Qstring;>;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3b\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[1], \"Qi1;\");", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct3c\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[2], \"Qi2;\");", "+\tformalTypeParameterSignature = \"Hello:Qi1;\";", "+\tassertTrue(\"Signature#getTypeParameterBounds is not correct4\", Signature.getTypeParameterBounds(formalTypeParameterSignature).length == 1);", "+\tassertEquals(\"Signature#getTypeParameterBounds is not correct4a\", Signature.getTypeParameterBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "- */", "-public void testGetInterfaceBounds() {", "-\t// tests with 1.5-specific elements", "-\tString formalTypeParameterSignature = \"Hello:\";", "-\tassertTrue(\"Signature#getInterfaceBounds is not correct1\", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 0);", "-\tformalTypeParameterSignature = \"Hello::Qi1;:Qi2;\";", "-\tassertTrue(\"Signature#getInterfaceBounds is not correct2\", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 2);", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct2a\", Signature.getInterfaceBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct2b\", Signature.getInterfaceBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "-\tformalTypeParameterSignature = \"Hello:Qlist<Qstring;>;:Qi1;:Qi2;\";", "-\tassertTrue(\"Signature#getInterfaceBounds is not correct3\", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 2);", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct3a\", Signature.getInterfaceBounds(formalTypeParameterSignature)[0], \"Qi1;\");", "-\tassertEquals(\"Signature#getInterfaceBounds is not correct3b\", Signature.getInterfaceBounds(formalTypeParameterSignature)[1], \"Qi2;\");", "-\ttry {", "-\t\tSignature.getInterfaceBounds(\"\");", "-\t\tassertTrue(\"Signature#getInterfaceBounds is not correct: exception\", false);", "+\t\tSignature.getTypeParameterBounds(\"\");", "+\t\tassertTrue(\"Signature#getTypeParameterBounds is not correct: exception\", false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5871bfb69c54c596bffae841340233e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "9a828b6f308f1048d5448d6c6f9c881639322d34", "commitAfterChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testGetParameterTypes()", "signatureAfterChange": " public void testGetParameterTypes()", "diff": ["+\t\tassertTrue(\"Signature#getParameterTypes is not correct: exception\", false);", "-\t\treturn;", "+\t\t// do nothing", "-\tassertTrue(\"Signature#getParameterTypes is not correct: exception\", false);", "+", "+\t// tests with 1.5-specific elements", "+\tmethodSig = \"<X:Qlist<Qstring;>;>(IQlist;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "+\tassertTrue(\"Signature#getParameterTypes is not correct3\", Signature.getParameterTypes(methodSig).length == 3);", "+\tassertEquals(\"Signature#getParameterTypes is not correct3a\", Signature.getParameterTypes(methodSig)[0], \"I\");", "+\tassertEquals(\"Signature#getParameterTypes is not correct3b\", Signature.getParameterTypes(methodSig)[1], \"Qlist;\");", "+\tassertEquals(\"Signature#getParameterTypes is not correct3c\", Signature.getParameterTypes(methodSig)[2], \"Tww;\");", "+//\tmethodSig = \"<X:Qlist<Qstring;>;>(IQlist<Qstring;>;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;\";", "+//\tassertTrue(\"Signature#getParameterTypes is not correct3\", Signature.getParameterTypes(methodSig).length == 3);", "+//\tassertEquals(\"Signature#getParameterTypes is not correct3a\", Signature.getParameterTypes(methodSig)[0], \"I\");", "+//\tassertEquals(\"Signature#getParameterTypes is not correct3b\", Signature.getParameterTypes(methodSig)[1], \"Qlist;\");", "+//\tassertEquals(\"Signature#getParameterTypes is not correct3c\", Signature.getParameterTypes(methodSig)[2], \"Tww;\");"]}], "num": 15725}