{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "648c337e7729c3a890876538f1f9eec8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df9b58cea9f64ee033dc2915e4c60b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method)", "signatureAfterChange": " private ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method)", "diff": ["-ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method) {", "+private ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method) {", "-\tBinaryTypeBinding binaryType = (BinaryTypeBinding) method.declaringClass;", "-\t\tif (exceptions[i] instanceof UnresolvedReferenceBinding)", "-\t\t\texceptions[i] = (ReferenceBinding) binaryType.resolveType(exceptions[i]);", "+\t\texceptions[i] = BinaryTypeBinding.resolveType(exceptions[i], this.environment, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3846027b01fa18a6f21f071cc79b5d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 53, "signatureBeforeChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "signatureAfterChange": "  public TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType,  \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-\t\t\t\treturn dimension == 0 ? (TypeBinding) staticVariables[i] : createArrayType(staticVariables[i], dimension);", "+\t\t\t\treturn typeFromTypeVariable(staticVariables[i], dimension, walker);", "-\t\t\t\t\treturn dimension == 0 ? (TypeBinding) enclosingTypeVariables[i] : createArrayType(enclosingTypeVariables[i], dimension);", "+\t\t\t\t\treturn typeFromTypeVariable(enclosingTypeVariables[i], dimension, walker);"]}], "num": 51931}