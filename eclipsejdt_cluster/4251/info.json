{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afb6ae522db07e2e08996a0d0aafae2e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d6b16b6eb6ccc071526c6f7b5f276d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/BuildNotifier.java", "commitBeforeChange": "1019fd6125279a757000a9f963f4ec62e165c6dd", "commitAfterChange": "6bb2fb68f843d2f213112ae456fa0a32c38636c9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "signatureAfterChange": "\r \r protected void updateProblemCounts(IProblem[] newProblems)", "diff": ["+protected void updateProblemCounts(IProblem[] newProblems) {\r", "+\tfor (int i = 0, newSize = newProblems.length; i < newSize; ++i)\r", "+\t\tif (newProblems[i].isError()) newErrorCount++; else newWarningCount++;\r", "+}\r", "-\tif (oldProblems != null) {\r", "-\t\tnext : for (int i = 0, oldSize = oldProblems.length; i < oldSize; ++i) {\r", "-\t\t\tIMarker oldProblem = oldProblems[i];\r", "-\t\t\tboolean wasError = IMarker.SEVERITY_ERROR\r", "-\t\t\t\t== oldProblem.getAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);\r", "-\t\t\tint lineNumber = oldProblem.getAttribute(IMarker.LINE_NUMBER, 0);\r", "-\t\t\tString message = oldProblem.getAttribute(IMarker.MESSAGE, \"\"); //$NON-NLS-1$\r", "-\r", "-\t\t\tif (newProblems != null) {\r", "-\t\t\t\tfor (int j = 0, newSize = newProblems.length; j < newSize; ++j) {\r", "-\t\t\t\t\tIProblem pb = newProblems[j];\r", "-\t\t\t\t\tif (wasError == pb.isError()\r", "-\t\t\t\t\t\t&& lineNumber == pb.getSourceLineNumber()\r", "-\t\t\t\t\t\t\t&& message.equals(pb.getMessage()))\r", "-\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\tif (wasError) fixedErrorCount++; else fixedWarningCount++;\r", "-\t\t}\r", "-\t}\r", "-\t\t\tint lineNumber = newProblem.getSourceLineNumber();\r", "-\t\t\t\t\tif (isError == wasError\r", "-\t\t\t\t\t\t&& lineNumber == pb.getAttribute(IMarker.LINE_NUMBER, 0)\r", "-\t\t\t\t\t\t\t&& message.equals(pb.getAttribute(IMarker.MESSAGE, \"\"))) //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c1c4c66373641b91cfaa170d35237d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/BuildNotifier.java", "commitBeforeChange": "1019fd6125279a757000a9f963f4ec62e165c6dd", "commitAfterChange": "6bb2fb68f843d2f213112ae456fa0a32c38636c9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "signatureAfterChange": "\r protected void updateProblemCounts(IMarker[] oldProblems, IProblem[] newProblems)", "diff": ["-\tif (oldProblems != null) {\r", "-\t\tnext : for (int i = 0, oldSize = oldProblems.length; i < oldSize; ++i) {\r", "-\t\t\tIMarker oldProblem = oldProblems[i];\r", "-\t\t\tboolean wasError = IMarker.SEVERITY_ERROR\r", "-\t\t\t\t== oldProblem.getAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);\r", "-\t\t\tint lineNumber = oldProblem.getAttribute(IMarker.LINE_NUMBER, 0);\r", "-\t\t\tString message = oldProblem.getAttribute(IMarker.MESSAGE, \"\"); //$NON-NLS-1$\r", "-\r", "-\t\t\tif (newProblems != null) {\r", "-\t\t\t\tfor (int j = 0, newSize = newProblems.length; j < newSize; ++j) {\r", "-\t\t\t\t\tIProblem pb = newProblems[j];\r", "-\t\t\t\t\tif (wasError == pb.isError()\r", "-\t\t\t\t\t\t&& lineNumber == pb.getSourceLineNumber()\r", "-\t\t\t\t\t\t\t&& message.equals(pb.getMessage()))\r", "-\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\tif (wasError) fixedErrorCount++; else fixedWarningCount++;\r", "-\t\t}\r", "-\t}\r", "-\t\t\tint lineNumber = newProblem.getSourceLineNumber();\r", "+\t\t\t\t\tif (pb == null) continue; // already matched up with a new problem\r", "-\t\t\t\t\tif (isError == wasError\r", "-\t\t\t\t\t\t&& lineNumber == pb.getAttribute(IMarker.LINE_NUMBER, 0)\r", "-\t\t\t\t\t\t\t&& message.equals(pb.getAttribute(IMarker.MESSAGE, \"\"))) //$NON-NLS-1$\r", "+\t\t\t\t\tif (isError == wasError && message.equals(pb.getAttribute(IMarker.MESSAGE, \"\"))) { //$NON-NLS-1$\r", "+\t\t\t\t\t\toldProblems[j] = null;\r", "+\t\t\t\t\t}\r", "+\tif (oldProblems != null) {\r", "+\t\tnext : for (int i = 0, oldSize = oldProblems.length; i < oldSize; ++i) {\r", "+\t\t\tIMarker oldProblem = oldProblems[i];\r", "+\t\t\tif (oldProblem == null) continue next; // already matched up with a new problem\r", "+\t\t\tboolean wasError = IMarker.SEVERITY_ERROR\r", "+\t\t\t\t== oldProblem.getAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);\r", "+\t\t\tString message = oldProblem.getAttribute(IMarker.MESSAGE, \"\"); //$NON-NLS-1$\r", "+\r", "+\t\t\tif (newProblems != null) {\r", "+\t\t\t\tfor (int j = 0, newSize = newProblems.length; j < newSize; ++j) {\r", "+\t\t\t\t\tIProblem pb = newProblems[j];\r", "+\t\t\t\t\tif (wasError == pb.isError() && message.equals(pb.getMessage()))\r", "+\t\t\t\t\t\tcontinue next;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tif (wasError) fixedErrorCount++; else fixedWarningCount++;\r", "+\t\t}\r", "+\t}\r"]}], "num": 4251}