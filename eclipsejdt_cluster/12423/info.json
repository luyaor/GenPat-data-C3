{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae62c529d1e936bc03d8891bd40ff131", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9dcd053cca01a6d4d0776145715630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "007f2027ff425d194812a64dbd50790ef7383015", "commitAfterChange": "f7f17008db6ff3c3f5e70873efcd612c1034949b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic boolean detectCycle(ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": "  \tpublic boolean detectCycle(ReferenceBinding superType, TypeReference reference, TypeBinding[] argTypes)", "diff": ["-\tpublic boolean detectCycle(ReferenceBinding superType, TypeReference reference) {", "+\tpublic boolean detectCycle(ReferenceBinding superType, TypeReference reference, TypeBinding[] argTypes) {", "+\t\tif (argTypes != null) {", "+\t\t\tfor (int i = 0, l = argTypes.length; i < l; i++) {", "+\t\t\t\tTypeBinding argType = argTypes[i].leafComponentType();", "+\t\t\t    if (argType instanceof SourceTypeBinding)", "+\t\t\t    \t// ensure if this is a source superclass that it has already been checked", "+\t\t\t    \t((SourceTypeBinding) argType).scope.connectTypeHierarchyWithoutMembers();", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b3b01d9e6ba63cbfba39c036f639a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/NameEnvironment.java", "commitBeforeChange": "d96668833851c6888b2777029dd7fc07b93f263f", "commitAfterChange": "65444f6bbda189372ebbf90cb8f83272733c23ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void initialTypeNames(String[] initialTypeNames)", "signatureAfterChange": "\r \r void setNames(String[] initialTypeNames, String[] additionalSourceFilenames)", "diff": ["-\r", "-void initialTypeNames(String[] initialTypeNames) {\r", "-\t// assumed that each typeName is of the form a/b/ClassName\r", "-\tthis.initialTypeNames = initialTypeNames;\r", "+\r", "+void setNames(String[] initialTypeNames, String[] additionalSourceFilenames) {\r", "+\tthis.initialTypeNames = initialTypeNames;\r", "+\tthis.additionalSourceFilenames = additionalSourceFilenames;\r", "+\tfor (int i = 0, length = classpathLocations.length; i < length; i++) {\r", "+\t\tClasspathLocation classpath = classpathLocations[i];\r", "+\t\tclasspath.reset();\r", "+\t\tif (classpath instanceof ClasspathMultiDirectory)\r", "+\t\t\t((ClasspathMultiDirectory) classpath).nameEnvironment = this;\r", "+\t}\r", "+}\r"]}], "num": 12423}