{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "604ec1e7107c94aebeb556e37bbcf8ad", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091d50f4be52a204fdaba646dc1de55a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 277, "signatureBeforeChange": " public void testBug110060_AllTypeNames08new() throws CoreException", "signatureAfterChange": " public void testBug110060_AllTypeNames02_SamePartCount() throws CoreException", "diff": ["+}", "+public void testBug110060_AllTypeNames02_SamePartCount() throws CoreException {", "+\tsetUpBug110060_TypePattern();", "+\tTypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();", "+\tsearchAllTypeNames(\"aaa\", SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH, requestor);", "+\t// Invalid camel case pattern => replace the camel case flag with exact match one (case insensitive)", "+\tassertSearchResults(\"Unexpected all type names\",", "+\t\t\"b110060.AAa\\n\" + ", "+\t\t\"b110060.Aaa\",", "-public void testBug110060_AllTypeNames08new() throws CoreException {", "-\tsearchAllTypeNames(\"aa\", SearchPattern.R_CAMEL_CASE_MATCH, requestor);", "-\t\t\"\", // no match as pattern is not a valid camel case"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "566b078e15f1fcba07650d64cee3ebc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 298, "signatureBeforeChange": " public void testBug110060_ConstructorPattern05() throws CoreException", "signatureAfterChange": " public void testBug110060_ConstructorPattern03_SamePartCount() throws CoreException", "diff": ["+}", "+public void testBug110060_ConstructorPattern03_SamePartCount() throws CoreException {", "+\tsetUpBug110060_ConstructorPattern();", "+\tsearch(\"AAx\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);", "+\tassertSearchResults(", "+\t\t\"src/b110060/AAxx.java b110060.AAxx() [AAxx] EXACT_MATCH\\n\" +", "+\t\t\"src/b110060/Test.java b110060.Test.aaxx [new AAxx()] EXACT_MATCH\"", "-\tsearch(\"Ax\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMEL_CASE_MATCH);", "-\t\t\"\" // no match as prefix is not set"]}], "num": 63379}