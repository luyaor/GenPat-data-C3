{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c274a7d774a2c6b82118625ca6a9178", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f86eab3ee139916b139a56c2046e151", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "dff921f9753af71f3b0ef787d0390dd7cd591b56", "commitAfterChange": "a899cd29a75883646450816539797817299ec777", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (enclosingInstanceType.isCompatibleWith(expectedType)) {", "-\t\t\t\tenclosingInstance.computeConversion(scope, expectedType, enclosingInstanceType);", "-\t\t\t\treturn receiverType;", "-\t\t\t} else if (scope.isBoxingCompatibleWith(enclosingInstanceType, expectedType)) {", "+\t\t\tif (enclosingInstanceType.isCompatibleWith(expectedType) || scope.isBoxingCompatibleWith(enclosingInstanceType, expectedType)) {", "-\t\t\t} else \tif (!enclosingInstanceType.isCompatibleWith(targetEnclosing)) {", "+\t\t\t} else if (!enclosingInstanceType.isCompatibleWith(targetEnclosing) && !scope.isBoxingCompatibleWith(enclosingInstanceType, targetEnclosing)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e420efcab8c3b619cd7f7ae5647d0bae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "191bf98aa8633a0f34d415ca494a16e9dafbfaea", "commitAfterChange": "865d835d3df9b67ba1a18330a36ad5562291be84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t// TODO (philippe) no deprecation check?", "-\t\t\tif (!enclosingInstanceType.isCompatibleWith(inheritedBinding.declaringClass.enclosingType())) {", "-\t\t\t\tscope.problemReporter().typeMismatchError(enclosingInstanceType, inheritedBinding.declaringClass.enclosingType(), enclosingInstance);", "+\t\t\tReferenceBinding targetEnclosing = inheritedBinding.declaringClass.enclosingType();", "+\t\t\tif (targetEnclosing == null) {", "+\t\t\t\tscope.problemReporter().unnecessaryEnclosingInstanceSpecification(enclosingInstance, (ReferenceBinding)receiverType);", "+\t\t\t\treturn this.resolvedType = anonymousType.binding;", "+\t\t\t} else \tif (!enclosingInstanceType.isCompatibleWith(targetEnclosing)) {", "+\t\t\t\tscope.problemReporter().typeMismatchError(enclosingInstanceType, targetEnclosing, enclosingInstance);"]}], "num": 13059}