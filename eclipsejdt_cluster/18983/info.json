{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71accdd19ebb15e09053f519e9ba12c8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c300a78136282d4aa79ab74c3c1f2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c97a12fe797bc8f1a4e22eb2cfe11932a52f122", "commitAfterChange": "cb3bfb0879489be8fed32e037d62f37c21d37c6b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\tif (one.typeVariables == NoTypeVariables) return false;", "-\tMethodBinding subTwo = substituteTwo instanceof ParameterizedGenericMethodBinding", "-\t\t? ((ParameterizedGenericMethodBinding) substituteTwo).originalMethod", "-\t\t: substituteTwo;", "-\treturn !one.areTypeVariableErasuresEqual(subTwo);", "+\t// one has type variables and substituteTwo did not pass bounds check in computeSubstituteMethod()", "+\treturn one.typeVariables != NoTypeVariables && !(substituteTwo instanceof ParameterizedGenericMethodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b309f379cb0c3a8c92a53f08509e3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "cb102deeeb30ec755d64a8d266f5423000dc4f4e", "commitAfterChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "signatureAfterChange": " boolean doTypeVariablesClash(MethodBinding one, MethodBinding substituteTwo)", "diff": ["-\treturn one.typeVariables != NoTypeVariables && !one.areTypeVariableErasuresEqual(substituteTwo.original());", "+\tif (one.typeVariables == NoTypeVariables) return false;", "+\tMethodBinding subTwo = substituteTwo instanceof ParameterizedGenericMethodBinding", "+\t\t? ((ParameterizedGenericMethodBinding) substituteTwo).originalMethod", "+\t\t: substituteTwo;", "+\treturn !one.areTypeVariableErasuresEqual(subTwo);"]}], "num": 18983}