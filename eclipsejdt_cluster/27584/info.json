{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db2c2290e345cd10a4af5ee9a8626772", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6c30753747157c7797a95442c7f3d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "f254767d87ae8dd4ff9c37cc7b1a6fc568af9dda", "commitAfterChange": "966710fd0db4acefe960a5bfb33635812ee1ac6d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static Object performNecessaryTypeConversion(final TypeMirror expectedType, \t    \t\t\t\t\t\t\t\t\t\t\t     final Object value, \t    \t\t\t\t\t\t\t\t\t\t\t     final String name, \t    \t\t\t\t\t\t\t\t\t\t\t     final EclipseMirrorImpl parent, \t    \t\t\t\t\t\t\t\t\t\t\t     final ProcessorEnvImpl env)", "signatureAfterChange": "     private static Object performNecessaryTypeConversion(final TypeMirror expectedType, \t    \t\t\t\t\t\t\t\t\t\t\t     final Object value, \t    \t\t\t\t\t\t\t\t\t\t\t     final String name, \t    \t\t\t\t\t\t\t\t\t\t\t     final EclipseMirrorImpl parent, \t    \t\t\t\t\t\t\t\t\t\t\t     final ProcessorEnvImpl env)", "diff": ["-    \t\t\t\treturn new Short((short)b);", "+    \t\t\t\treturn new Short(b);", "-    \t\t\t\treturn new Integer((short)b);", "+    \t\t\t\treturn new Integer(b);", "-    \t\t\t\treturn new Long((long)b);", "+    \t\t\t\treturn new Long(b);", "-    \t\t\t\treturn new Float((float)b);", "+    \t\t\t\treturn new Float(b);", "-    \t\t\t\treturn new Double((double)b);", "+    \t\t\t\treturn new Double(b);", "-    \t\t\t\treturn new Integer((int)s ); ", "+    \t\t\t\treturn new Integer(s); ", "-    \t\t\t\treturn new Long((long)s);", "+    \t\t\t\treturn new Long(s);", "-    \t\t\t\treturn new Float((float)s);", "+    \t\t\t\treturn new Float(s);", "-    \t\t\t\treturn new Double((double)s);", "+    \t\t\t\treturn new Double(s);", "-    \t\t\t\treturn new Integer((int)c ); ", "+    \t\t\t\treturn new Integer(c); ", "-    \t\t\t\treturn new Long((long)c);", "+    \t\t\t\treturn new Long(c);", "-    \t\t\t\treturn new Float((float)c);", "+    \t\t\t\treturn new Float(c);", "-    \t\t\t\treturn new Double((double)c);", "+    \t\t\t\treturn new Double(c);", "-    \t\t\t\treturn new Long((long)i);", "+    \t\t\t\treturn new Long(i);", "-    \t\t\t\treturn new Float((float)i);", "+    \t\t\t\treturn new Float(i);", "-    \t\t\t\treturn new Double((double)i);", "+    \t\t\t\treturn new Double(i);", "-    \t\t\t\treturn new Float((float)l);", "+    \t\t\t\treturn new Float(l);", "-    \t\t\t\treturn new Double((double)l);    \t\t", "+    \t\t\t\treturn new Double(l);    \t\t", "-    \t\t\t\treturn new Double((double)f);    \t\t", "+    \t\t\t\treturn new Double(f);    \t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2c4cfae1e9fc1d75440659e6c726c3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 449, "signatureBeforeChange": " public void testBug124624_HMa_new() throws CoreException", "signatureAfterChange": " public void testBug137087k_CamelCaseSamePartCount() throws CoreException", "diff": ["-public void testBug124624_HMa_new() throws CoreException {", "-\tworkingCopies = new ICompilationUnit[1];", "-\tworkingCopies[0] = getWorkingCopy(\"/JavaSearchBugs/src/Test.java\",", "-\t\t\"class HashMap {}\\n\" + ", "-\t\t\"class HtmlMapper {}\\n\" + ", "-\t\t\"class HashMapEntry {}\\n\" + ", "-\t\t\"class HatMappage {}\\n\"", "-\tsearch(\"HMa\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMEL_CASE_MATCH);", "-\tassertSearchResults(\"\");", "+}", "+public void testBug137087k_CamelCaseSamePartCount() throws CoreException {", "+\tint matchRule = SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH;", "+\tString pattern = \"cloneNotSupportedExcep\";", "+\tsearch(pattern, TYPE, DECLARATIONS, matchRule);", "+\tassertSearchResults(\"\");", "+}"]}], "num": 27584}