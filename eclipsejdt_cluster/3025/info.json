{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86efccf9f268830ba8bdedefa72a2d44", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cc03df03597b4eb3410ba1f7b12651", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "56484abf3afec06a3b2fe9a53e3d4859e1a90d5d", "commitAfterChange": "c98606727e89fdf50e483c7870bb4651b90d6014", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tpublic void addBound(TypeBound bound)", "signatureAfterChange": " \t\tpublic boolean addBound(TypeBound bound)", "diff": ["-\t\tpublic void addBound(TypeBound bound) {", "+\t\tpublic boolean addBound(TypeBound bound) {", "-\t\t\t\t\tthis.superBounds.add(bound);", "-\t\t\t\t\tbreak;", "+\t\t\t\t\treturn this.superBounds.add(bound);", "-\t\t\t\t\tthis.sameBounds.add(bound);", "-\t\t\t\t\tbreak;", "+\t\t\t\t\treturn this.sameBounds.add(bound);", "-\t\t\t\t\tthis.subBounds.add(bound);", "-\t\t\t\t\tbreak;", "+\t\t\t\t\treturn this.subBounds.add(bound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7b75418fd82259b71ed6a98aebd96e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void addConstantFieldsMask(UnconditionalFlowInfo other)", "signatureAfterChange": "  public boolean isDefinitelyAssigned(FieldBinding field)", "diff": ["+public boolean isDefinitelyAssigned(FieldBinding field) {", "+\treturn this.initsWhenTrue.isDefinitelyAssigned(field)", "+\t\t\t&& this.initsWhenFalse.isDefinitelyAssigned(field);", "-", "-public void addConstantFieldsMask(UnconditionalFlowInfo other) {", "-\tthis.initsWhenTrue.addConstantFieldsMask(other);", "-\tthis.initsWhenFalse.addConstantFieldsMask(other);", "-}"]}], "num": 3025}