{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbc2610958ed36b50966671af25ab68d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f54cb3dffb72ac5cbacf58c641a2d60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "5a4a2929d0aaba1a7f6b87488d0054e129a55977", "commitAfterChange": "363f295181efb5d08470dfb8bacfcdd493852030", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385780", "+\tif (this.typeParameters != null && ", "+\t\t\t!this.scope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\tfor (int i = 0, length = this.typeParameters.length; i < length; ++i) {", "+\t\t\tTypeParameter typeParameter = this.typeParameters[i];", "+\t\t\tif ((typeParameter.binding.modifiers & ExtraCompilerModifiers.AccLocallyUsed) == 0) {", "+\t\t\t\tthis.scope.problemReporter().unusedTypeParameter(typeParameter);\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f882ed7dee4190d22652c8e1b01885d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "a09311fc616e4147742893af072d96170b7d4b0c", "commitAfterChange": "f7ea870ffaddfcb451c55807a166c8c5500cf565", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385780", "+\tif (this.typeParameters != null  &&", "+\t\t\t!this.scope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\tfor (int i = 0, length = this.typeParameters.length; i < length; ++i) {", "+\t\t\tTypeParameter typeParameter = this.typeParameters[i];", "+\t\t\tif ((typeParameter.binding.modifiers & ExtraCompilerModifiers.AccLocallyUsed) == 0) {", "+\t\t\t\tthis.scope.problemReporter().unusedTypeParameter(typeParameter);\t\t\t\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c3f0599d2c51e82e37f5577c8a1508f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "5a4a2929d0aaba1a7f6b87488d0054e129a55977", "commitAfterChange": "363f295181efb5d08470dfb8bacfcdd493852030", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-", "+\t\t\t", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385780", "+\t\t\tif (this.typeParameters != null &&", "+\t\t\t\t\t!this.scope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\t\t\tfor (int i = 0, length = this.typeParameters.length; i < length; ++i) {", "+\t\t\t\t\tTypeParameter typeParameter = this.typeParameters[i];", "+\t\t\t\t\tif ((typeParameter.binding.modifiers  & ExtraCompilerModifiers.AccLocallyUsed) == 0) {", "+\t\t\t\t\t\tthis.scope.problemReporter().unusedTypeParameter(typeParameter);\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c10141f818cfa53cb5072c95eed7fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "a09311fc616e4147742893af072d96170b7d4b0c", "commitAfterChange": "f7ea870ffaddfcb451c55807a166c8c5500cf565", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-", "+\t\t\t", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385780", "+\t\t\tif (this.typeParameters != null &&", "+\t\t\t\t\t!this.scope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\t\t\tfor (int i = 0, length = this.typeParameters.length; i < length; ++i) {", "+\t\t\t\t\tTypeParameter typeParameter = this.typeParameters[i];", "+\t\t\t\t\tif ((typeParameter.binding.modifiers  & ExtraCompilerModifiers.AccLocallyUsed) == 0) {", "+\t\t\t\t\t\tthis.scope.problemReporter().unusedTypeParameter(typeParameter);\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f088112743c2e673ff37ce92d49e9a9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a09311fc616e4147742893af072d96170b7d4b0c", "commitAfterChange": "f7ea870ffaddfcb451c55807a166c8c5500cf565", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385780", "+\tif (this.typeParameters != null && ", "+\t\t\t!this.scope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\tfor (int i = 0, length = this.typeParameters.length; i < length; ++i) {", "+\t\t\tTypeParameter typeParameter = this.typeParameters[i];", "+\t\t\tif ((typeParameter.binding.modifiers & ExtraCompilerModifiers.AccLocallyUsed) == 0) {", "+\t\t\t\tthis.scope.problemReporter().unusedTypeParameter(typeParameter);\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa50dd6f9cd3403e6476ec4d29f0b8d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "5a4a2929d0aaba1a7f6b87488d0054e129a55977", "commitAfterChange": "363f295181efb5d08470dfb8bacfcdd493852030", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=385780", "+\tif (this.typeParameters != null  &&", "+\t\t\t!this.scope.referenceCompilationUnit().compilationResult.hasSyntaxError) {", "+\t\tfor (int i = 0, length = this.typeParameters.length; i < length; ++i) {", "+\t\t\tTypeParameter typeParameter = this.typeParameters[i];", "+\t\t\tif ((typeParameter.binding.modifiers & ExtraCompilerModifiers.AccLocallyUsed) == 0) {", "+\t\t\t\tthis.scope.problemReporter().unusedTypeParameter(typeParameter);\t\t\t\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 19954}