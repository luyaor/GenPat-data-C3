{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbd22fcbc432ea7b9e940c31265810fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b91d7f17aa2ed31b455900bce15a51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "8d86c45b7dbc1d8316194b358e7234e4491fa695", "commitAfterChange": "0305482ace5c5443f44c914a225574b12096815b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "diff": ["+\t    this.isRaw = true;", "-\t\tthis.declaringClass = rawType;", "+\t\tthis.declaringClass = rawType == null ? originalMethod.declaringClass : rawType;", "-\t\tboolean isStatic = originalMethod.isStatic();", "-\t    this.parameters = Scope.substitute(this, isStatic ", "+\t\tboolean ignoreRawTypeSubstitution = rawType == null || originalMethod.isStatic();", "+\t    this.parameters = Scope.substitute(this, ignoreRawTypeSubstitution", "-\t    this.thrownExceptions = Scope.substitute(this, \tisStatic ", "+\t    this.thrownExceptions = Scope.substitute(this, \tignoreRawTypeSubstitution ", "-\t    this.returnType = this.substitute(isStatic ", "+\t    this.returnType = this.substitute(ignoreRawTypeSubstitution "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58cf5f6cdd5da377c8c24a6c8041ae2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "a25072f2f70a7d1a2734766b336bcde1a84f9c27", "commitAfterChange": "449564ddb56ce0df027b471cad53b0e520c06234", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "diff": ["-\t    this.parameters = Scope.substitute(this, Scope.substitute(rawType, originalMethod.parameters));", "-\t    this.thrownExceptions = Scope.substitute(this, Scope.substitute(rawType, originalMethod.thrownExceptions));", "-\t    this.returnType = this.substitute(rawType.substitute(originalMethod.returnType));", "+\t\tboolean isStatic = originalMethod.isStatic();", "+\t    this.parameters = Scope.substitute(this, ", "+\t    \t\t\t\t\t\t\t\t\t\tisStatic ? originalMethod.parameters : Scope.substitute(rawType, originalMethod.parameters));", "+\t    this.thrownExceptions = Scope.substitute(this, ", "+\t    \t\t\t\t\t\t\t\t\t\tisStatic ? originalMethod.thrownExceptions : Scope.substitute(rawType, originalMethod.thrownExceptions));", "+\t    this.returnType = this.substitute(isStatic ? originalMethod.returnType : rawType.substitute(originalMethod.returnType));"]}], "num": 18759}