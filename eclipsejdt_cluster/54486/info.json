{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9870279fe703f6330efe1e221364394b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38d90ff2b5e961d87108b2199c21bcc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BaseTypeBinding.java", "commitBeforeChange": "2209601726c2ffaf740a8580f2681022ef2a68b2", "commitAfterChange": "f42c0477ee0669ffdbca90a8139c634d502e6b71", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic final boolean isCompatibleWith(TypeBinding right)", "signatureAfterChange": " \tpublic final boolean isCompatibleWith(TypeBinding left)", "diff": ["-\tpublic final boolean isCompatibleWith(TypeBinding right) {", "-", "-\t\tif (this == right)", "+\tpublic final boolean isCompatibleWith(TypeBinding left) {", "+\t\tif (this == left)", "-\t\tif (!right.isBaseType())", "-\t\t\treturn this == TypeBinding.NULL;", "-", "-\t\tswitch (right.id) {", "-\t\t\tcase TypeIds.T_boolean :", "-\t\t\tcase TypeIds.T_byte :", "-\t\t\tcase TypeIds.T_char :", "-\t\t\t\treturn false;", "-\t\t\tcase TypeIds.T_double :", "-\t\t\t\tswitch (this.id) {", "-\t\t\t\t\tcase TypeIds.T_byte :", "-\t\t\t\t\tcase TypeIds.T_char :", "-\t\t\t\t\tcase TypeIds.T_short :", "-\t\t\t\t\tcase TypeIds.T_int :", "-\t\t\t\t\tcase TypeIds.T_long :", "-\t\t\t\t\tcase TypeIds.T_float :", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\tcase TypeIds.T_float :", "-\t\t\t\tswitch (this.id) {", "-\t\t\t\t\tcase TypeIds.T_byte :", "-\t\t\t\t\tcase TypeIds.T_char :", "-\t\t\t\t\tcase TypeIds.T_short :", "-\t\t\t\t\tcase TypeIds.T_int :", "-\t\t\t\t\tcase TypeIds.T_long :", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\tcase TypeIds.T_long :", "-\t\t\t\tswitch (this.id) {", "-\t\t\t\t\tcase TypeIds.T_byte :", "-\t\t\t\t\tcase TypeIds.T_char :", "-\t\t\t\t\tcase TypeIds.T_short :", "-\t\t\t\t\tcase TypeIds.T_int :", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\tcase TypeIds.T_int :", "-\t\t\t\tswitch (this.id) {", "-\t\t\t\t\tcase TypeIds.T_byte :", "-\t\t\t\t\tcase TypeIds.T_char :", "-\t\t\t\t\tcase TypeIds.T_short :", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\tdefault :", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\tcase TypeIds.T_short :", "-\t\t\t\treturn (this.id == TypeIds.T_byte);", "-\t\t}", "-\t\treturn false;", "+\t\tint right2left = this.id + (left.id<<4);", "+\t\tif (right2left >= 0 ", "+\t\t\t\t&& right2left < MAX_CONVERSIONS ", "+\t\t\t\t&& (CONVERSIONS[right2left] & (IDENTITY|WIDENING)) != 0)", "+\t\t\treturn true;", "+\t\treturn this == TypeBinding.NULL && !left.isBaseType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d239c35f3ef60d0f8cb29fa0298f557b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void generateBoxingConversion(int unboxedTypeID)", "signatureAfterChange": " public void addExceptionMarker(int pc, TypeBinding typeBinding)", "diff": ["+public void addExceptionMarker(int pc, TypeBinding typeBinding) {", "+\tif (this.exceptionMarkers == null) {", "+\t\tthis.exceptionMarkers = new HashSet();", "+\t}", "+\tif (typeBinding == null) {", "+\t\tthis.exceptionMarkers.add(new ExceptionMarker(pc, ConstantPool.JavaLangThrowableConstantPoolName));", "+\t} else {", "+\t\tswitch(typeBinding.id) {", "+\t\t\tcase TypeIds.T_null :", "+\t\t\t\tthis.exceptionMarkers.add(new ExceptionMarker(pc, ConstantPool.JavaLangClassNotFoundExceptionConstantPoolName));", "+\t\t\t\tbreak;", "+\t\t\tcase TypeIds.T_long :", "+\t\t\t\tthis.exceptionMarkers.add(new ExceptionMarker(pc, ConstantPool.JavaLangNoSuchFieldErrorConstantPoolName));", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tthis.exceptionMarkers.add(new ExceptionMarker(pc, typeBinding.constantPoolName()));", "+\t\t}", "+\t}", "-}", "-public void generateBoxingConversion(int unboxedTypeID) {", "-    super.generateBoxingConversion(unboxedTypeID);", "-    VerificationTypeInfo info = null;", "-    switch (unboxedTypeID) {", "-        case TypeIds.T_byte :", "-            info = new VerificationTypeInfo(TypeIds.T_JavaLangByte, ConstantPool.JavaLangByteConstantPoolName);", "-            break;", "-        case TypeIds.T_short :", "-            info = new VerificationTypeInfo(TypeIds.T_JavaLangShort, ConstantPool.JavaLangShortConstantPoolName);", "-            break;", "-        case TypeIds.T_char :", "-               info = new VerificationTypeInfo(TypeIds.T_JavaLangCharacter, ConstantPool.JavaLangCharacterConstantPoolName);", "-           break;", "-        case TypeIds.T_int :", "-               info = new VerificationTypeInfo(TypeIds.T_JavaLangInteger, ConstantPool.JavaLangIntegerConstantPoolName);", "-            break;", "-        case TypeIds.T_long :", "-               info = new VerificationTypeInfo(TypeIds.T_JavaLangLong, ConstantPool.JavaLangLongConstantPoolName);", "-            break;", "-        case TypeIds.T_float :", "-               info = new VerificationTypeInfo(TypeIds.T_JavaLangFloat, ConstantPool.JavaLangFloatConstantPoolName);", "-            break;", "-        case TypeIds.T_double :", "-               info = new VerificationTypeInfo(TypeIds.T_JavaLangDouble, ConstantPool.JavaLangDoubleConstantPoolName);", "-            break;", "-        case TypeIds.T_boolean :", "-               info = new VerificationTypeInfo(TypeIds.T_JavaLangBoolean, ConstantPool.JavaLangBooleanConstantPoolName);", "-    }", "-    int numberOfStackItems = this.currentFrame.numberOfStackItems;", "-    if (info != null && (numberOfStackItems >= 1)) {", "-        this.currentFrame.stackItems[numberOfStackItems - 1] = info;", "-    }", "-}"]}], "num": 54486}