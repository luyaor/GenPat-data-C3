{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2682f21d59474ed93cb57ae8288094e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d6626b5b67991eb953a2c5fdb388e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic StringBuffer printHeader(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printHeader(int indent, StringBuffer output)", "diff": ["+\t\tif (typeParameters != null) {", "+\t\t\toutput.append(\"<\");//$NON-NLS-1$", "+\t\t\tfor (int i = 0; i < typeParameters.length; i++) {", "+\t\t\t\tif (i > 0) output.append( \", \"); //$NON-NLS-1$", "+\t\t\t\ttypeParameters[i].print(0, output);", "+\t\t\t}", "+\t\t\toutput.append(\">\");//$NON-NLS-1$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc1925f49de29641f170e597896d5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "639f95fb93a85f023afe828b77bfc8cd4dbf811c", "commitAfterChange": "8a3cbdf1db434ade029724481c4ce0338046043a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "diff": ["+", "+\t\t}", "+", "+\t\tif (classes != null) {", "+\t\t\tallOptions.add(\"-classNames\"); //$NON-NLS-1$", "+\t\t\tStringBuilder builder = new StringBuilder();", "+\t\t\tint i = 0;", "+\t\t\tfor (String className : classes) {", "+\t\t\t\tif (i != 0) {", "+\t\t\t\t\tbuilder.append(',');", "+\t\t\t\t}", "+\t\t\t\tbuilder.append(className);", "+\t\t\t\ti++;", "+\t\t\t}", "+\t\t\tallOptions.add(String.valueOf(builder));"]}], "num": 9923}