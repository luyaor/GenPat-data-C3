{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4620ed6f78ed24632149150d2ae15dff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9a32e31cb2a7dc9aa913b267e54c65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "3cfa0680932675f487a5ce02b3e0eda8b9c152d0", "commitAfterChange": "c5710053e25b56911ef4ca37886dd15d080aafc0", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException {", "+\tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException {", "+\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\tSystem.out.println(\"CPContainer SET  - setting container: [\"+containerPath+\"] for projects: {\" //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t+ (Util.toString(affectedProjects, ", "+\t\t\t\t\t\tnew Util.Displayable(){ ", "+\t\t\t\t\t\t\tpublic String displayString(Object o) { return ((IJavaProject) o).getElementName(); }", "+\t\t\t\t\t\t}))", "+\t\t\t\t+ \"} with values: \" //$NON-NLS-1$", "+\t\t\t\t+ (Util.toString(respectiveContainers, ", "+\t\t\t\t\t\tnew Util.Displayable(){ ", "+\t\t\t\t\t\t\tpublic String displayString(Object o) { return ((IClasspathContainer) o).getDescription(); }", "+\t\t\t\t\t\t}))", "+\t\t\t\t\t);", "+\t\t}", "+", "+\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\t\t\t\t\tSystem.out.println(\"CPContainer SET  - updating affected project: [\"+affectedProject.getElementName()+\"] due to setting container: \" + containerPath); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t}", "+", "-\t\t\t\tSystem.out.println(\"CPContainer INIT - FAILED DUE TO EXCEPTION: \"+containerPath); //$NON-NLS-1$", "+\t\t\t\tSystem.out.println(\"CPContainer SET  - FAILED DUE TO EXCEPTION: \"+containerPath); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c20ffe9198cfa4b67bfcc10b4d5498c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0b497d99ae5c5d12538e4bc3f61ace5a8ad6f2f8", "commitAfterChange": "f6f5dabbefe650566ba5bc89a6817171bf0deaef", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic static void setClasspathContainer(IPath containerPath, final IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic static void setClasspathContainer(IPath containerPath, final IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException {", "+\tpublic static void setClasspathContainer(IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException {", "+\t\tfinal IJavaProject[] modifiedProjects;", "+\t\tSystem.arraycopy(affectedProjects, 0, modifiedProjects = new IJavaProject[projectLength], 0, projectLength);", "-\t\t\t", "+\t\t\tif (newContainer == null) newContainer = JavaModelManager.ContainerInitializationInProgress; // 30920 - prevent infinite loop", "-\t\t\t\taffectedProjects[i] = null; // filter out this project - does not reference the container path, or isnt't yet Java project", "+\t\t\t\tmodifiedProjects[i] = null; // filter out this project - does not reference the container path, or isnt't yet Java project", "-\t\t\t\taffectedProjects[i] = null; // filter out this project - container did not change", "+\t\t\t\tmodifiedProjects[i] = null; // filter out this project - container did not change", "-\t\t\t\t\t\tJavaProject affectedProject = (JavaProject)affectedProjects[i];", "+\t\t\t\t\t\tJavaProject affectedProject = (JavaProject)modifiedProjects[i];", "+\t\t} finally {", "+\t\t\tfor (int i = 0; i < projectLength; i++) {", "+\t\t\t\tif (respectiveContainers[i] == null) {", "+\t\t\t\t\tJavaModelManager.containerPut(affectedProjects[i], containerPath, null); // reset init in progress marker", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 42223}