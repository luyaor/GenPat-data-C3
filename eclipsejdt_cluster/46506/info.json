{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8533fb18cfd53f5555b98ee3f2f95904", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c36ee3fb3e54f85b1b7f3ab611aa932", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "f98ff60ea4aadb5ad960a35b0293f0998e35fc18", "commitAfterChange": "e9dab03249c4cb99686aef75ce88b855ecbdceb7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public IJavaElement getWorkingCopy(IProgressMonitor monitor, IBufferFactory factory) throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getWorkingCopy(IProgressMonitor monitor, IBufferFactory factory) throws JavaModelException", "diff": ["+\t// get the source if possible\r", "+\tchar[] contents = null;\r", "+\tSourceMapper mapper = this.getSourceMapper();\r", "+\tif (mapper != null) {\r", "+\t\tcontents = mapper.findSource(getType());\r", "+\t}\r", "+\tif (contents == null) {\r", "+\t\treturn null;\r", "+\t}\r", "+\r", "-\r", "-\t// set the source if possible\r", "-\tSourceMapper mapper = this.getSourceMapper();\r", "-\tif (mapper != null) {\r", "-\t\tchar[] contents = mapper.findSource(getType());\r", "-\t\tif (contents != null) {\r", "-\t\t\tbuffer.setContents(contents);\r", "-\t\t}\r", "-\t}\r", "+\t\r", "+\t// set the buffer source\r", "+\tbuffer.setContents(contents);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad4d704ba5d9c259fd683e56cb678356", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "548230af13c5905ba392c25f655dd34224d58c55", "commitAfterChange": "984bec0735c837a49816a47e66faa3e64aa59275", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["-\t\t\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t}", "+\t\t\t\tif (newElement != null) {", "+\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t\tint occurenceCount = 1;", "-\t\t\t\t\t\t\t\tnewElement = parentType.getInitializer(1);", "+\t\t\t\t\t\t\t\tnewElement = parentType.getInitializer(occurenceCount);", "+\t\t\t\t\t\t} else if (!field.isField()) {", "+\t\t\t\t\t\t\toccurenceCount++;", "+\t\t\t\t\tif (newElement != null) {", "+\t\t\t\t\t\tknownScopes.put(scope, newElement);", "+\t\t\t\t\t}"]}], "num": 46506}