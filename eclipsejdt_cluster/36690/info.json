{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a66a1fa1d5b97e80790c0ac2f964c28", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294d843a15cec56133a1a417b831ee85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic ClassInstanceCreation convert(org.eclipse.jdt.internal.compiler.ast.AllocationExpression expression)", "signatureAfterChange": "\t \t \tpublic ClassInstanceCreation convert(org.eclipse.jdt.internal.compiler.ast.AllocationExpression expression)", "diff": ["-\t\tclassInstanceCreation.setName(convert(expression.type));", "+\t\tif (expression.typeArguments != null) {", "+\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\tclassInstanceCreation.setFlags(classInstanceCreation.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\tfor (int i = 0, max = expression.typeArguments.length; i < max; i++) {", "+\t\t\t\t\t\tclassInstanceCreation.typeArguments().add(convertType(expression.typeArguments[i]));", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tswitch(this.ast.apiLevel) {", "+\t\t\tcase AST.JLS2 :", "+\t\t\t\tclassInstanceCreation.setName(convert(expression.type));", "+\t\t\t\tbreak;", "+\t\t\tcase AST.JLS3 :", "+\t\t\t\tclassInstanceCreation.setType(convertType(expression.type));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e82bc42bfa372ee7db872873a46189", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "990aed617097bf4f8924693cc7796530216e9f94", "commitAfterChange": "585f1dbbb77e7785c7d5038484b4201e48c234d1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tpublic Expression convert(MessageSend expression)", "signatureAfterChange": "  \tpublic Expression convert(MessageSend expression)", "diff": ["+\t\t\tfinal TypeReference[] typeArguments = expression.typeArguments;", "+\t\t\tif (typeArguments != null) {", "+\t\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\t\tsuperMethodInvocation.setFlags(superMethodInvocation.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\t\tfor (int i = 0, max = typeArguments.length; i < max; i++) {", "+\t\t\t\t\t\t\tsuperMethodInvocation.typeArguments().add(convertType(typeArguments[i]));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tfinal TypeReference[] typeArguments = expression.typeArguments;", "+\t\t\tif (typeArguments != null) {", "+\t\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\t\tmethodInvocation.setFlags(methodInvocation.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\t\tfor (int i = 0, max = typeArguments.length; i < max; i++) {", "+\t\t\t\t\t\t\tmethodInvocation.typeArguments().add(convertType(typeArguments[i]));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 36690}