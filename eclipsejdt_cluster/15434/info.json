{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d838c915da0e25c7b64ef5a06546fc99", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c087a04ab50e3d345c0172a3a8f9993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4412fcf3d168e3c5cc3b92c0b70e5bcf2376f3fc", "commitAfterChange": "8bf9953e1351888d8d186166d8f2000b15a08f07", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws JavaModelException", "signatureAfterChange": " protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws CoreException", "diff": ["-protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws JavaModelException {", "+protected void locateMatches(JavaProject javaProject, PossibleMatch[] possibleMatches, int start, int length) throws CoreException {", "-\t\t} catch (CoreException e) {", "-\t\t\t// core exception thrown by client's code: let it through", "-\t\t\tthrow new JavaModelException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac49cf15b4d459bec6590fbadeeb7176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaModelException.java", "commitBeforeChange": "25bee693161afc3e4f8a13c9ec2792610c1ba510", "commitAfterChange": "921f949a0e5dc802cf0168c26af5339acdc851e1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaModelStatus getJavaModelStatus()", "signatureAfterChange": "\r public IJavaModelStatus getJavaModelStatus()", "diff": ["-\treturn (IJavaModelStatus) getStatus();\r", "+\tIStatus status = this.getStatus();\r", "+\tif (status instanceof IJavaModelStatus) {\r", "+\t\treturn (IJavaModelStatus)status;\r", "+\t} else {\r", "+\t\t// A regular IStatus is created only in the case of a CoreException.\r", "+\t\t// See bug 13492 Should handle JavaModelExceptions that contains CoreException more gracefully  \r", "+\t\treturn new JavaModelStatus(this.nestedCoreException);\r", "+\t}\r"]}], "num": 15434}