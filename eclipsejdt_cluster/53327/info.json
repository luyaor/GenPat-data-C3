{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a960bf77c49f440d493a32500ce4ba29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67494196182e285e483eac73247cb3b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c0b5895abd09ac3472890c9dbd43d2aa66a43571", "commitAfterChange": "b95d0b5c5a2546979ad1285fdd89f2009b47e5cb", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg)", "signatureAfterChange": " \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg, boolean isOptionalLibrary)", "diff": ["-\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg) {", "+\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg, boolean isOptionalLibrary) {", "+\t\t\tboolean validateJdkLevelCompatibilty = !JavaCore.IGNORE.equals(project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true));", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=412882, avoid validating optional entries", "+\t\t\tif (!validateJdkLevelCompatibilty && isOptionalLibrary) {", "+\t\t\t\treturn JavaModelStatus.VERIFIED_OK;", "+\t\t\t}", "-\t\t\tif (target != null && !JavaCore.IGNORE.equals(project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true))) {", "+\t\t\tif (target != null && validateJdkLevelCompatibilty) {", "+\t\t\tif (isOptionalLibrary) {", "+\t\t\t\treturn JavaModelStatus.VERIFIED_OK;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f76a4a1aa0f852249cc2a0f9f98bf45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "c6bb288a1ec0518593c557e20d6ae134d77455ab", "commitAfterChange": "f2a81932b7a42eca71ee27237cfd4e8c2c5fc5c9", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg)", "signatureAfterChange": " \tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg, boolean isOptionalLibrary)", "diff": ["-\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg) {", "+\tprivate static IJavaModelStatus validateLibraryEntry(IPath path, IJavaProject project, String container, IPath sourceAttachment, String entryPathMsg, boolean isOptionalLibrary) {", "+\t\t\tboolean validateJdkLevelCompatibilty = !JavaCore.IGNORE.equals(project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true));", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=412882, avoid validating optional entries", "+\t\t\tif (!validateJdkLevelCompatibilty && isOptionalLibrary) {", "+\t\t\t\treturn JavaModelStatus.VERIFIED_OK;", "+\t\t\t}", "-\t\t\tif (target != null && !JavaCore.IGNORE.equals(project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true))) {", "+\t\t\tif (target != null && validateJdkLevelCompatibilty) {", "+\t\t\tif (isOptionalLibrary) {", "+\t\t\t\treturn JavaModelStatus.VERIFIED_OK;", "+\t\t\t}"]}], "num": 53327}