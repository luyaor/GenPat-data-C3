{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea1e0429b5ac41efdc148786cba4e5ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506b710470c0d1543185786b89e3308d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a107a93c33b9fbfeb3c58f06a397400d87b64e14", "commitAfterChange": "ac57d09afd251c5c3e8f5a329155e4ee05cc3840", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void generateCode(BlockScope blockScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope blockScope, CodeStream codeStream)", "diff": ["-\tif (this.binding != null) ((NestedTypeBinding) this.binding).computeSyntheticArgumentSlotSizes();", "+\tif (this.binding != null) {", "+\t\tSyntheticArgumentBinding[] enclosingInstances = ((NestedTypeBinding) this.binding).syntheticEnclosingInstances();", "+\t\tfor (int i = 0, slotSize = 0, count = enclosingInstances == null ? 0 : enclosingInstances.length; i < count; i++){", "+\t\t\tSyntheticArgumentBinding enclosingInstance = enclosingInstances[i];", "+\t\t\tenclosingInstance.resolvedPosition = ++slotSize; // shift by 1 to leave room for aload0==this", "+\t\t\tif (slotSize > 0xFF) { // no more than 255 words of arguments", "+\t\t\t\tblockScope.problemReporter().noMoreAvailableSpaceForArgument(enclosingInstance, blockScope.referenceType());", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3ae6c6c81d662d62d1738a5554492c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a107a93c33b9fbfeb3c58f06a397400d87b64e14", "commitAfterChange": "ac57d09afd251c5c3e8f5a329155e4ee05cc3840", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void generateCode(ClassScope classScope, ClassFile enclosingClassFile)", "signatureAfterChange": " public void generateCode(ClassScope classScope, ClassFile enclosingClassFile)", "diff": ["-\tif (this.binding != null) ((NestedTypeBinding) this.binding).computeSyntheticArgumentSlotSizes();", "+\tif (this.binding != null) {", "+\t\tSyntheticArgumentBinding[] enclosingInstances = ((NestedTypeBinding) this.binding).syntheticEnclosingInstances();", "+\t\tfor (int i = 0, slotSize = 0, count = enclosingInstances == null ? 0 : enclosingInstances.length; i < count; i++){", "+\t\t\tSyntheticArgumentBinding enclosingInstance = enclosingInstances[i];", "+\t\t\tenclosingInstance.resolvedPosition = ++slotSize; // shift by 1 to leave room for aload0==this", "+\t\t\tif (slotSize > 0xFF) { // no more than 255 words of arguments", "+\t\t\t\tclassScope.problemReporter().noMoreAvailableSpaceForArgument(enclosingInstance, classScope.referenceType());", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 43611}