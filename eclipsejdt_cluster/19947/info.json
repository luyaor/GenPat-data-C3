{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bca409a05ceea456749c6893157923fb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262a8408454e09ef8baf746b7b86bbf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "0051523fc00ff20cdc2a9d5092babde1f40b986b", "commitAfterChange": "e02ddb6ff783a9def0b669687239c19eadac6f44", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tprotected void seekTypesInBinaryPackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": "\r \tprotected void seekTypesInBinaryPackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["+\t\t\tif (unqualifiedName.length() > 0 && Character.isDigit(unqualifiedName.charAt(0))){\r", "+\t\t\t\tunqualifiedName = name;\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0c199f7eb3ec11251d5159e7fe0495b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "759f047954db3c3b1f5b2ea50475094a4ca88735", "commitAfterChange": "116e2f749da165a5623c3cc3e6d763b07027f0ae", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void addAttributes()", "signatureAfterChange": " \tpublic void addAttributes()", "diff": ["-\t\t\t\t} else", "-\t\t\t\t\tif (innerClass.isLocalType() && !innerClass.isMemberType()) {", "-\t\t\t\t\t\taccessFlags |= AccPrivate;", "-\t\t\t\t\t}", "+\t\t\t\t} else if (innerClass.isLocalType() && !innerClass.isMemberType()) {", "+\t\t\t\t\taccessFlags |= AccPrivate;", "+\t\t\t\t} else if (innerClass.isMemberType() && (innerClass.isInterface() || innerClass.isAnnotationType())) {", "+\t\t\t\t\taccessFlags |= AccStatic; // implicitely static", "+\t\t\t\t}"]}], "num": 19947}