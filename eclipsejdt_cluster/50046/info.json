{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e47ad21f2d2dff49ef07b80dd314b9ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22354b43067b19391a2efa3c0b84496a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "commitAfterChange": "17f252997734a1fb1f7e356e8b4b3c43b6ed95af", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[][] compoundName, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\tunitScope.recordSimpleReference(compoundName[0]);", "+\t\t// in the problem case, we want to ensure we record the qualified dependency in case a type is added", "+\t\t// and we do not know that its package was also added (can happen with CompilationParticipants)", "+\t\tunitScope.recordQualifiedReference(compoundName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "632435331a3c87e705e7f4dd6ccb1de3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d33b892acebec2bc1c5d62c55db84a184bb6f3b3", "commitAfterChange": "86ecd2ba171e241fbd6f2290ee8ff607c4ff535a", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic final TypeBinding getType(char[][] compoundName, int typeNameLength)", "signatureAfterChange": " \tpublic final TypeBinding getType(char[][] compoundName, int typeNameLength)", "diff": ["-\t\tcompilationUnitScope().recordQualifiedReference(compoundName);", "+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "+\t\tunitScope.recordQualifiedReference(compoundName);", "-\t\tcompilationUnitScope().recordTypeReference(typeBinding);", "+\t\tunitScope.recordTypeReference(typeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d14c8e1a00aae28dfce79464471ead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d33b892acebec2bc1c5d62c55db84a184bb6f3b3", "commitAfterChange": "86ecd2ba171e241fbd6f2290ee8ff607c4ff535a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\tcompilationUnitScope().recordReference(enclosingType, typeName);", "+\t\tCompilationUnitScope unitScope = compilationUnitScope();", "+\t\tunitScope.recordReference(enclosingType, typeName);", "-\t\t\tcompilationUnitScope().recordTypeReference(memberType);", "+\t\t\tunitScope.recordTypeReference(memberType);"]}], "num": 50046}