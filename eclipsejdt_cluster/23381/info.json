{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d86c0a009f86b4e6adf2b94dd0689b5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b1ad173c833bb58d94aa46eb46d3d71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "4b460199498c48cda44ce10125aa5901a10bff62", "commitAfterChange": "ccd12469d7fc21a8e1a0a597451a059df56002ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate boolean examineGetDocComment()", "signatureAfterChange": " \tprivate boolean examineGetDocComment()", "diff": ["-\t\tnameToDoc.put(\"FChildI\", \" Javadoc on nested interface FChildI\\n\");", "+\t\tnameToDoc.put(\"FChildI\", ", "+\t\t\t\t\" Javadoc on nested interface FChildI\\n\" +", "+\t\t\t\t\"\\tthis line has tab after asterisk and ends with another tab\\t\\n\" +", "+\t\t\t\t\"\\tthis one too\\t\\n\" +", "+\t\t\t\t\"   this line has three spaces after asterisk and ends with three spaces   \\n\" +", "+\t\t\t\t\" this line has only one space before the asterisk\\n\");", "+\t\tnameToDoc.put(\"_fieldT1_private\", ", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\" Javadoc on _fieldT1_private\\n\" +", "+\t\t\t\t\"  this line starts with two spaces, no asterisk\\n\" +", "+\t\t\t\t\"        This line starts, contains\\tand ends with a tab\\t\\n\" +", "+\t\t\t\t\"                 This line starts with a space, tab, space, tab, space\\n\");", "+\t\tnameToDoc.put(\"getAnonymousObjectAbstract\", \"\");", "+\t\tnameToDoc.put(\"add\", \"\\n\t@add(int)\\n\");", "+\t\tnameToDoc.put(\"foo\", \"\\n Creates a new instance of AllChecks \\n\");", "+\t\tnameToDoc.put(\"bar\", \" @bar\\t(int)\\n\");", "+\t\tnameToDoc.put(\"bar2\", \"\\t@bar2(int)\\n\");", "+\t\tnameToDoc.put(\"m\", \"                Method\\tm\\n\");", "+\t\tnameToDoc.put(\"m1\", \"This is a comment for the method m1,\\n\" + ", "+\t\t\t\t\"  it is on two lines\\n\");", "+\t\tnameToDoc.put(\"m2\", \"Another comment - starts on first line and\\n\" + ", "+\t\t\t\t\"    continue on the second line \");", "+\t\tnameToDoc.put(\"m3\", \" One more test case that.\\n\" + ", "+\t\t\t\t\" needs\\n\" + ", "+\t\t\t\t\" to be verified.\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\" An empty line with no spaces need to be seen as an empty line.\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\" End of the comment.\\n\");", "-\t\t", "-\t\t\t\t\treportError(\"examineGetDocComment: Expected getDocComment(\" + name + \") to return null, but got \" + actual);", "+\t\t\t\t\treportError(\"examineGetDocComment: Expected getDocComment(\" + name + \") to return null, but got \" + _elementUtils.getDocComment(e));", "-\t\t\t\t\t\treportError(\"examineGetDocComment: Unexpected result from getDocComment(\" + name + \"): \" + actual);", "+\t\t\t\t\t\treportError(\"examineGetDocComment: Unexpected result from getDocComment(\" + name + \"): \" + _elementUtils.getDocComment(e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d6c365e2717ce5194690680d3c3ccb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7cdc478cdd8ecd6517119ed517a89b2200812e0f", "commitAfterChange": "8a633d56819c44af45234d7a3760b2d36e5276ed", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " \tpublic void test054a()", "signatureAfterChange": " \tpublic void test054a()", "diff": ["-\t\t\t\t\"Method aaa(X) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aaa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method aaa(T) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aaa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method aa(X) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method aa(T) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method a(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method a(T) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method a(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aaa(X) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aaa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aaa(T) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aaa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aa(X) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aa(T) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method a(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method a(T) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method a(T) is the same as another method in type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86f5acc07b999fcf2f190b6a982ac51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e7041eebe1b9ef3b1ae9f5f9c79b24274ea327d1", "commitAfterChange": "8585977b682b225927c2b7dfa188383f714b1d41", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tpublic void test054a()", "signatureAfterChange": " \tpublic void test054a()", "diff": ["-\t\t\t\t\"Method aaa(X) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aaa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method aaa(T) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aaa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method aa(X) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method aa(T) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method aa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method a(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method a(T) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method a(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aaa(X) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aaa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aaa(T) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aaa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aa(X) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aa(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method aa(T) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method aa(T) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method a(X) is the same as another method in type X\\n\" +", "-\t\t\t\t\t\"Method a(T) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\t\t\"Erasure of method a(T) is the same as another method in type X\\n\" +"]}], "num": 23381}