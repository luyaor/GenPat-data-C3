{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f82caab7b9968778be91ce292b8766b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68682f127c5584c390df9ba2c52aa709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c7494793aa1ed6a2f75240b5a076591b5a3e9bf6", "commitAfterChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["-\t\ttry {", "-\t\t\tString sharedClasspath = loadClasspath();", "-\t\t\tif (sharedClasspath != null) {", "-\t\t\t\tclasspath = readPaths(sharedClasspath);", "-\t\t\t}", "-\t\t} catch(JavaModelException e) {", "-\t\t\tif (JavaModelManager.VERBOSE && this.getProject().isAccessible()){", "-\t\t\t\tUtil.log(e, ", "-\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$", "-\t\t\t\t\t+\"/.classpath, will revert to default classpath\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} catch(IOException e){", "-\t\t\tif (JavaModelManager.VERBOSE && this.getProject().isAccessible()){", "-\t\t\t\tUtil.log(e, ", "-\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$", "-\t\t\t\t\t+\"/.classpath, will revert to default classpath\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} catch (Assert.AssertionFailedException e) { // failed creating CP entries from file", "-\t\t\tif (JavaModelManager.VERBOSE && this.getProject().isAccessible()){", "-\t\t\t\tUtil.log(e, ", "-\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$", "-\t\t\t\t\t+\"/.classpath, will be marked as invalid\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tclasspath = INVALID_CLASSPATH;", "-\t\t}", "+\t\tclasspath = this.readClasspathFile(false/*don't create markers*/, true/*log problems*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7861a4a0a51f090a92a24024cef6a3af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c7494793aa1ed6a2f75240b5a076591b5a3e9bf6", "commitAfterChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": " \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] classpath = null;", "-\t\ttry {", "-\t\t\tString sharedClasspath = loadClasspath();", "-\t\t\tif (sharedClasspath != null) {", "-\t\t\t\tclasspath = readPaths(sharedClasspath);", "-\t\t\t}", "-\t\t} catch(JavaModelException e) {", "-\t\t\tif (JavaModelManager.VERBOSE && this.getProject().isAccessible()){", "-\t\t\t\tUtil.log(e, ", "-\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$", "-\t\t\t\t\t+\"/.classpath, will revert to default output location\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} catch(IOException e){", "-\t\t\tif (JavaModelManager.VERBOSE && this.getProject().isAccessible()){", "-\t\t\t\tUtil.log(e, ", "-\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$", "-\t\t\t\t\t+\"/.classpath, will revert to default output location\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t} catch (Assert.AssertionFailedException e) { // failed creating CP entries from file", "-\t\t\tif (JavaModelManager.VERBOSE && this.getProject().isAccessible()){", "-\t\t\t\tUtil.log(e, ", "-\t\t\t\t\t\"Exception while retrieving \"+ this.getPath() //$NON-NLS-1$", "-\t\t\t\t\t+\"/.classpath, will revert to default output location\"); //$NON-NLS-1$", "-\t\t\t}", "-\t\t}", "+\t\tIClasspathEntry[] classpath = this.readClasspathFile(false/*don't create markers*/, true/*log problems*/);", "+"]}], "num": 11717}