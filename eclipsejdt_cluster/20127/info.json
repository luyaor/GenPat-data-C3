{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ef382cbd8a74097beb8fea21fe582dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6457a4c9c204715323d323abe9079752", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocAllocationExpression.java", "commitBeforeChange": "46bb2fc11bd9440d4fff5ca5f3078f9c39a1d152", "commitAfterChange": "cc1ae7d3e1f618e7e804996cc901b77df44b4213", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t} else if (scope.kind == Scope.CLASS_SCOPE) {", "-\t\t\tthis.resolvedType = this.type.resolveType((ClassScope)scope);", "-\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope, true /* check bounds*/);", "+\t\t\tswitch (scope.kind) {", "+\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE:", "+\t\t\t\t\tthis.resolvedType = this.type.resolveType((CompilationUnitScope)scope);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Scope.CLASS_SCOPE:", "+\t\t\t\t\tthis.resolvedType = this.type.resolveType((ClassScope)scope);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tthis.resolvedType = this.type.resolveType((BlockScope)scope, true /* check bounds*/);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "-\t\tthis.superAccess = scope.enclosingSourceType().isCompatibleWith(this.resolvedType);", "+\t\tSourceTypeBinding enclosingType = scope.enclosingSourceType();", "+\t\tthis.superAccess = enclosingType==null ? false : enclosingType.isCompatibleWith(this.resolvedType);", "-\t\t// TODO (frederic) add support for unsafe type operation warning"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a3d0c778051912a17cabbdff00a53b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocMessageSend.java", "commitBeforeChange": "46bb2fc11bd9440d4fff5ca5f3078f9c39a1d152", "commitAfterChange": "cc1ae7d3e1f618e7e804996cc901b77df44b4213", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\t} else if (scope.kind == Scope.CLASS_SCOPE) {", "-\t\t\tthis.actualReceiverType = this.receiver.resolveType((ClassScope) scope);", "-\t\t\tthis.actualReceiverType = this.receiver.resolveType((BlockScope) scope);", "+\t\t\tswitch (scope.kind) {", "+\t\t\t\tcase Scope.COMPILATION_UNIT_SCOPE:", "+\t\t\t\t\tthis.actualReceiverType = this.receiver.resolveType((CompilationUnitScope) scope);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Scope.CLASS_SCOPE:", "+\t\t\t\t\tthis.actualReceiverType = this.receiver.resolveType((ClassScope) scope);", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tthis.actualReceiverType = this.receiver.resolveType((BlockScope) scope);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "-\t\tthis.superAccess = scope.enclosingSourceType().isCompatibleWith(this.actualReceiverType);", "+\t\tSourceTypeBinding enclosingType = scope.enclosingSourceType();", "+\t\tthis.superAccess = enclosingType==null ? false : enclosingType.isCompatibleWith(this.actualReceiverType);"]}], "num": 20127}