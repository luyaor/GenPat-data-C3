{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50b94ca1eab964fd59536a1e039bd8aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e16239914c2a665af24da3be1174711", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "2b086e10a4c2ab219f8cec9c4ed89af8f499c40a", "commitAfterChange": "df8d31a9ddab423310fd1c278cc22edfff846c3f", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tpublic SwitchStatement convert(org.eclipse.jdt.internal.compiler.ast.SwitchStatement statement)", "signatureAfterChange": " \t \tpublic SwitchStatement convert(org.eclipse.jdt.internal.compiler.ast.SwitchStatement statement)", "diff": ["-\t\t\t\tswitchStatement.statements().add(convert(statements[i]));", "+\t\t\t\tif (statements[i] instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) {", "+\t\t\t\t\tcheckAndAddMultipleLocalDeclaration(statements, i, switchStatement.statements());", "+\t\t\t\t} else {", "+\t\t\t\t\tswitchStatement.statements().add(convert(statements[i]));", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c195aca48dca31a977288781209b74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "c95e24ef2e4bfa2139fbca3e3b2078e40695cacf", "commitAfterChange": "dc55aada3d255b568692ea2fa842469d54d2d483", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate ASTNode internalCreateASTForKind()", "signatureAfterChange": " \tprivate ASTNode internalCreateASTForKind()", "diff": ["-\t\t\t\t\t\t\tblock.statements().add(converter.convert(statements[i]));", "+\t\t\t\t\t\t\tif (statements[i] instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) {", "+\t\t\t\t\t\t\t\tconverter.checkAndAddMultipleLocalDeclaration(statements, i, block.statements());", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tblock.statements().add(converter.convert(statements[i]));", "+\t\t\t\t\t\t\t}"]}], "num": 30297}