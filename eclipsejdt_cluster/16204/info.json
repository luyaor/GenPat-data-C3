{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "550f33329506bb2b52c95d77ed71cca0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c35112c3058a39dac7956fefa176f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9d0a7cf1cd35ad744e719ffdf62510", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f9cc1425b385bb5b51fc5f6a2e40a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc6aa31384e5a1dcb3e6aa913bd1544", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MultiTypeDeclarationPattern.java", "commitBeforeChange": "e85ef31dfa86374477953b5334cffc5119f2feae", "commitAfterChange": "8a1e311af393ccdbbaab4d3836c703deb332d624", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["+\tif (this.simpleNames == null) {", "+\t\t// if no simple names then return all possible ones from index", "+\t\treturn index.query(getIndexCategories(), null, -1); // match rule is irrelevant when the key is null", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff351a3faea9199d9bf7cf466a059864", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}], "num": 16204}