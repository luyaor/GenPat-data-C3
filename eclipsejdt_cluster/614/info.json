{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "479332ce14db1b17bdef819b0b184e8e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487c0259efc746372b94f040f20ab4b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 237, "signatureBeforeChange": " \tpublic void test0223() throws JavaModelException", "signatureAfterChange": " \tpublic void test0223() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, annotations.length);", "+\t\tassertEquals(\"Wrong size\", 1, annotations.length);", "+\t\tassertNotNull(\"No binding\", annotations[0]);", "+\t\tassertEquals(\"LX;.foo()V@LZork;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58370b0fce4df616de1fc18b93422df6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic void test0224() throws JavaModelException", "signatureAfterChange": " \tpublic void test0224() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, annotations.length);", "+\t\tassertEquals(\"Wrong size\", 1, annotations.length);", "+\t\tassertNotNull(\"No binding\", annotations[0]);", "+\t\tassertEquals(\"LX;@LZork;\", annotations[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", annotations[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", annotations[0].getAnnotationType().isRecovered());"]}], "num": 614}