{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c9c9ccb81b00e777b29e67dc7158ae6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171d3aa6ea5db218b09307218430d095", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elementutils/ElementUtilsProc.java", "commitBeforeChange": "c7e13eb999aeeb70fd34b19df0f27a778109206c", "commitAfterChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate boolean collectElements()", "signatureAfterChange": " \tprivate boolean collectElements()", "diff": ["+\t\t_elementH = _elementUtils.getTypeElement(\"targets.model.pc.H\");", "+\t\tif (_elementH == null || _elementH.getKind() != ElementKind.CLASS) {", "+\t\t\treportError(\"element H was not found or was not a class\");", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\t_elementAnnoX = _elementUtils.getTypeElement(\"targets.model.pc.AnnoX\");", "+\t\tif (null == _elementAnnoX || _elementAnnoX.getKind() != ElementKind.ANNOTATION_TYPE) {", "+\t\t\treportError(\"annotation type annoX was not found or was not an annotation\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tfor (ExecutableElement method : ElementFilter.methodsIn(_elementAnnoX.getEnclosedElements())) {", "+\t\t\tif (\"value\".equals(method.getSimpleName().toString())) {", "+\t\t\t\t_annoXValue = method;", "+\t\t\t}", "+\t\t}", "+\t\tif (null == _annoXValue) {", "+\t\t\treportError(\"Could not find value() method in annotation type AnnoX\");", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\t_elementAnnoY = _elementUtils.getTypeElement(\"targets.model.pc.AnnoY\");", "+\t\tif (null == _elementAnnoY || _elementAnnoY.getKind() != ElementKind.ANNOTATION_TYPE) {", "+\t\t\treportError(\"annotation type annoY was not found or was not an annotation\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tfor (ExecutableElement method : ElementFilter.methodsIn(_elementAnnoY.getEnclosedElements())) {", "+\t\t\tif (\"value\".equals(method.getSimpleName().toString())) {", "+\t\t\t\t_annoYValue = method;", "+\t\t\t}", "+\t\t}", "+\t\tif (null == _annoYValue) {", "+\t\t\treportError(\"Could not find value() method in annotation type AnnoY\");", "+\t\t\treturn false;", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f097e9d3f5c81d16744e9ec80dd453f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/typeutils/TypeUtilsProc.java", "commitBeforeChange": "bbb750998e75511ba75783c9f2d763f2e32279d9", "commitAfterChange": "02bf4272774dd4f6faf4897c054614bdc809ab9e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate boolean examineGetDeclaredType()", "signatureAfterChange": " \tprivate boolean examineGetDeclaredType()", "diff": ["+\t\tTypeMirror typeD = elementD.asType();", "+\t\tif (!_typeUtils.isSubtype(typeD, typeAB)) {", "+\t\t\treportError(\"Type of D is not a subtype of type AB\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tArrayType arrayOfTypeD = _typeUtils.getArrayType(typeD);", "+\t\tArrayType arrayOfTypeAB = _typeUtils.getArrayType(typeAB);", "+\t\tif (!_typeUtils.isSubtype(arrayOfTypeD, arrayOfTypeAB)) {", "+\t\t\treportError(\"Array of type D is not a subtype of array of type AB\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tPrimitiveType typeInt = _typeUtils.getPrimitiveType(TypeKind.INT);", "+\t\tArrayType arrayOfInt = _typeUtils.getArrayType(typeInt);", "+\t\tArrayType arrayOfIntInt = _typeUtils.getArrayType(arrayOfInt);", "+\t\tTypeElement objectTypeElement = _elementUtils.getTypeElement(\"java.lang.Object\");", "+\t\tTypeMirror javaLangObject = objectTypeElement.asType();", "+\t\tif (!_typeUtils.isSubtype(arrayOfIntInt, javaLangObject)) {", "+\t\t\treportError(\"int[][] is not a subtype of Object\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tTypeElement stringTypeElement = _elementUtils.getTypeElement(\"java.lang.String\");", "+\t\tTypeMirror javaLangString = stringTypeElement.asType();", "+\t\tArrayType arrayOfString = _typeUtils.getArrayType(javaLangString);", "+\t\tArrayType arrayOfObject = _typeUtils.getArrayType(javaLangObject);", "+\t\tArrayType arrayOfObjectObject = _typeUtils.getArrayType(arrayOfObject);", "+\t\tif (_typeUtils.isSubtype(arrayOfString, arrayOfObjectObject)) {", "+\t\t\treportError(\"String[] is a subtype of Object[][]\");", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (!_typeUtils.isSubtype(arrayOfString, arrayOfObject)) {", "+\t\t\treportError(\"String[] is not a subtype of Object[]\");", "+\t\t\treturn false;", "+\t\t}"]}], "num": 57983}