{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63513570f28137fd8a16a5cf85482fad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52785426cd9d74493d767ed429125217", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateFieldOperation.java", "commitBeforeChange": "dfc6a6fda29de48e066662fb088bf2e300f9b1e1", "commitAfterChange": "d198f0f3c34bda08bd3401192f36ab36521e5a14", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void initializeDefaultPosition()", "signatureAfterChange": " protected void initializeDefaultPosition()", "diff": ["-\t\tIJavaElement[] elements = parentElement.getFields();", "-\t\tif (elements != null && elements.length > 0) {", "-\t\t\tcreateAfter(elements[elements.length - 1]);", "+\t\tIField[] fields = parentElement.getFields();", "+\t\tif (fields != null && fields.length > 0) {", "+\t\t\tfinal IField lastField = fields[fields.length - 1];", "+\t\t\tif (parentElement.isEnum()) {", "+\t\t\t\tIField field = lastField;", "+\t\t\t\tif (!field.isEnumConstant()) {", "+\t\t\t\t\tcreateAfter(lastField);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tcreateAfter(lastField);", "+\t\t\t}", "-\t\t\telements = parentElement.getChildren();", "+\t\t\tIJavaElement[] elements = parentElement.getChildren();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab1a1eb3648ff5609ff1d4a14c48dde7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ccb3e5525c54dfe23c1e360c5b523dc7389a8449", "commitAfterChange": "d21bc313cdd8902b8761ed6e8db08c82a2b9b3d0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "\r \r \tprivate void complete(AstNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\tconstructorCall);\r", "+\t\t\t\t\t\t\t\t\t\t\tconstructorCall,\r", "+\t\t\t\t\t\t\t\t\t\t\tfalse);\r", "-\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "-\t\t\t\t\t\t\t\t\t\t\t\t(ReferenceBinding) qualifiedBinding,\r", "-\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "-\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "+\t\t\t\t\t\t\t\t\t\t\t\r", "+\t\t\t\t\t\t\t\t\t\t\tReferenceBinding ref = (ReferenceBinding) qualifiedBinding;\r", "+\t\t\t\t\t\t\t\t\t\t\tif(ref.isClass()) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\tif(!ref.isAbstract()) {\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tfindConstructors(\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tref,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tallocExpression,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse);\r", "+\t\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t\t\t\tif(!ref.isFinal()){\r", "+\t\t\t\t\t\t\t\t\t\t\t\tfindAnonymousType(\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tref,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\targTypes,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tscope,\r", "+\t\t\t\t\t\t\t\t\t\t\t\t\tallocExpression);\r", "+\t\t\t\t\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9563c1a4e716b323e22537fd9a01eff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "972920d1a43cd2d33dad1368881c9bfce5835a88", "commitAfterChange": "b8436cec91c88fa7fc7b0bd6dedc9fb67e331ccc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate synchronized boolean checkIntegrity() throws IllegalStateException", "signatureAfterChange": " \tprivate synchronized boolean checkIntegrity() throws IllegalStateException", "diff": ["+\t\t// Every file in _clearDuringReconcile must be a value in _buildDeps.", "+\t\tList<IFile> extraClearDuringReconcileFiles = new ArrayList<IFile>();", "+\t\tfor (IFile clearDuringReconcile : _clearDuringReconcile) {", "+\t\t\tif (!_buildDeps.containsValue(clearDuringReconcile)) {", "+\t\t\t\textraClearDuringReconcileFiles.add(clearDuringReconcile);", "+\t\t\t}", "+\t\t}", "+\t\tif (!extraClearDuringReconcileFiles.isEmpty()) {", "+\t\t\tlogExtraFiles(\"File(s) in list to clear during reconcile but not in build dependency map: \", //$NON-NLS-1$", "+\t\t\t\t\textraClearDuringReconcileFiles);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e49b1490a74d3bafbe8f8ed09a22fa18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "20321ccdb02511c3b0dd625c650e9586643da814", "commitAfterChange": "3c339caa1e7b5ca6c56cf03ac002e58b4380b89e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tflowInfo = action.analyseCode(currentScope, loopingContext, flowInfo.copy());", "+\t\t\tFlowInfo actionInfo = action.analyseCode(currentScope, loopingContext, flowInfo.copy());", "-\t\t\tif (!flowInfo.isReachable()) {", "+\t\t\tif (!actionInfo.isReachable()) {", "+\t\t\t\t\tif (actionInfo != FlowInfo.DEAD_END) {", "+\t\t\t\t\t\tflowInfo = actionInfo;", "+\t\t\t\t\t\t//flowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t} // else leave flowInfo intact", "+", "+\t\t\t} else {", "+\t\t\t\tflowInfo = actionInfo;", "+\t\t\tif (!mergedInfo.isReachable()) mergedInfo.addPotentialInitializationsFrom(flowInfo.initsWhenFalse());"]}], "num": 69786}