{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8f1e5c2a788ba8421d62bf1094b3161", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b241539d8218af21f8f294862721a55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "403deed13ad4115ce80e0449d5be70cb085b39a1", "commitAfterChange": "eca99cf8f2f41a7b6480d3a89bc3e5e01586e2d6", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  \tpublic void testBug416182()", "signatureAfterChange": "  \tpublic void testBug416182()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"\txs.foo(null);\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null annotations: method was inferred as \\'@Nullable String foo(@NonNull @Nullable String)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tX<@Nullable String> xs = new X<String>();\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Null type safety (type annotations): The expression of type \\'X<String>\\' needs unchecked conversion to conform to \\'X<@Nullable String>\\'\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\txs.foo(null);\\n\" + ", "+\t\t\t\"\t       ^^^^\\n\" + ", "+\t\t\t\"Null type mismatch: required \\'@NonNull String\\' but the provided value is null\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 14)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee18dd40af617d4303871366ef4a8f77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "403deed13ad4115ce80e0449d5be70cb085b39a1", "commitAfterChange": "eca99cf8f2f41a7b6480d3a89bc3e5e01586e2d6", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void testBug416182a()", "signatureAfterChange": " \tpublic void testBug416182a()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"\txs.foo(null);\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Contradictory null annotations: method was inferred as \\'@Nullable String foo(@NonNull @Nullable String)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tX<@Nullable String> xs = new X<String>();\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Null type safety (type annotations): The expression of type \\'X<String>\\' needs unchecked conversion to conform to \\'X<@Nullable String>\\'\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 16)\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\txs.foo(null);\\n\" + ", "+\t\t\t\"\t       ^^^^\\n\" + ", "+\t\t\t\"Null type mismatch: required \\'@NonNull String\\' but the provided value is null\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 16)\\n\" + "]}], "num": 39491}