{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "015d733555799e4e1b126cee06d99544", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d5dab25e86752a2ab57da25207648d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Jsr335ClassFileTest.java", "commitBeforeChange": "e46d27f78c861460763411dc3c7d80ec28005dd0", "commitAfterChange": "114d487223299fbb39233b9fa5b4135ee3c694c5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test015() throws Exception", "signatureAfterChange": " public void test015() throws Exception", "diff": ["-\t\t\t\"    constant #16 name_and_type: #17.#18 lambda$ ()LI;\\n\" + ", "-\t\t\t\"    constant #17 utf8: \\\"lambda$\\\"\\n\" + ", "+\t\t\t\"    constant #16 name_and_type: #17.#18 foo ()LI;\\n\" + ", "+\t\t\t\"    constant #17 utf8: \\\"foo\\\"\\n\" + ", "-\t\t\t\"    constant #19 invoke dynamic: #0 #16 lambda$ ()LI;\\n\" + ", "+\t\t\t\"    constant #19 invoke dynamic: #0 #16 foo ()LI;\\n\" + ", "-\t\t\t\"    constant #27 method_ref: #28.#30 java/lang/invoke/LambdaMetafactory.metaFactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "+\t\t\t\"    constant #27 method_ref: #28.#30 java/lang/invoke/LambdaMetafactory.metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "-\t\t\t\"    constant #30 name_and_type: #31.#32 metaFactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "-\t\t\t\"    constant #31 utf8: \\\"metaFactory\\\"\\n\" + ", "-\t\t\t\"    constant #32 utf8: \\\"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\\"\\n\" + ", "+\t\t\t\"    constant #30 name_and_type: #31.#32 metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "+\t\t\t\"    constant #31 utf8: \\\"metafactory\\\"\\n\" + ", "+\t\t\t\"    constant #32 utf8: \\\"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\\"\\n\" + ", "-\t\t\t\"    constant #35 interface_method_ref: #36.#38 I.foo ()V\\n\" + ", "-\t\t\t\"    constant #36 class: #37 I\\n\" + ", "-\t\t\t\"    constant #37 utf8: \\\"I\\\"\\n\" + ", "-\t\t\t\"    constant #38 name_and_type: #39.#6 foo ()V\\n\" + ", "-\t\t\t\"    constant #39 utf8: \\\"foo\\\"\\n\" + ", "-\t\t\t\"    constant #40 method handle: invokeinterface (9) #35 \\n\" + ", "-\t\t\t\"    constant #41 method_ref: #1.#42 X.lambda$0 ()V\\n\" + ", "-\t\t\t\"    constant #42 name_and_type: #24.#6 lambda$0 ()V\\n\" + ", "-\t\t\t\"    constant #43 method handle: invokestatic (6) #41 \\n\" + ", "-\t\t\t\"    constant #44 method type: #6 ()V\\n\" + ", "-\t\t\t\"    constant #45 utf8: \\\"InnerClasses\\\"\\n\" + ", "-\t\t\t\"    constant #46 class: #47 java/lang/invoke/MethodHandles$Lookup\\n\" + ", "-\t\t\t\"    constant #47 utf8: \\\"java/lang/invoke/MethodHandles$Lookup\\\"\\n\" + ", "-\t\t\t\"    constant #48 class: #49 java/lang/invoke/MethodHandles\\n\" + ", "-\t\t\t\"    constant #49 utf8: \\\"java/lang/invoke/MethodHandles\\\"\\n\" + ", "-\t\t\t\"    constant #50 utf8: \\\"Lookup\\\"\\n\" + ", "+\t\t\t\"    constant #35 method type: #6 ()V\\n\" + ", "+\t\t\t\"    constant #36 method_ref: #1.#37 X.lambda$0 ()V\\n\" + ", "+\t\t\t\"    constant #37 name_and_type: #24.#6 lambda$0 ()V\\n\" + ", "+\t\t\t\"    constant #38 method handle: invokestatic (6) #36 \\n\" + ", "+\t\t\t\"    constant #39 method type: #6 ()V\\n\" + ", "+\t\t\t\"    constant #40 utf8: \\\"InnerClasses\\\"\\n\" + ", "+\t\t\t\"    constant #41 class: #42 java/lang/invoke/MethodHandles$Lookup\\n\" + ", "+\t\t\t\"    constant #42 utf8: \\\"java/lang/invoke/MethodHandles$Lookup\\\"\\n\" + ", "+\t\t\t\"    constant #43 class: #44 java/lang/invoke/MethodHandles\\n\" + ", "+\t\t\t\"    constant #44 utf8: \\\"java/lang/invoke/MethodHandles\\\"\\n\" + ", "+\t\t\t\"    constant #45 utf8: \\\"Lookup\\\"\\n\" + ", "-\t\t\t\"    0  invokedynamic 0 lambda$() : I [19]\\n\" + ", "+\t\t\t\"    0  invokedynamic 0 foo() : I [19]\\n\" + ", "-\t\t\t\"    [inner class info: #46 java/lang/invoke/MethodHandles$Lookup, outer class info: #48 java/lang/invoke/MethodHandles\\n\" + ", "-\t\t\t\"     inner name: #50 Lookup, accessflags: 25 public static final]\\n\" + ", "+\t\t\t\"    [inner class info: #41 java/lang/invoke/MethodHandles$Lookup, outer class info: #43 java/lang/invoke/MethodHandles\\n\" + ", "+\t\t\t\"     inner name: #45 Lookup, accessflags: 25 public static final]\\n\" + ", "-\t\t\t\"  0 : # 33 arguments: {#40,#43,#44}\\n\" + ", "+\t\t\t\"  0 : # 33 arguments: {#35,#38,#39}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d7ec9a43b75195f12725a51b65da837", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Jsr335ClassFileTest.java", "commitBeforeChange": "e46d27f78c861460763411dc3c7d80ec28005dd0", "commitAfterChange": "114d487223299fbb39233b9fa5b4135ee3c694c5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test013() throws Exception", "signatureAfterChange": " public void test013() throws Exception", "diff": ["-\t\t\t\"    constant #16 name_and_type: #17.#18 lambda$ ()LI;\\n\" + ", "-\t\t\t\"    constant #17 utf8: \\\"lambda$\\\"\\n\" + ", "+\t\t\t\"    constant #16 name_and_type: #17.#18 doit ()LI;\\n\" + ", "+\t\t\t\"    constant #17 utf8: \\\"doit\\\"\\n\" + ", "-\t\t\t\"    constant #19 invoke dynamic: #0 #16 lambda$ ()LI;\\n\" + ", "+\t\t\t\"    constant #19 invoke dynamic: #0 #16 doit ()LI;\\n\" + ", "-\t\t\t\"    constant #33 method_ref: #34.#36 java/lang/invoke/LambdaMetafactory.metaFactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "+\t\t\t\"    constant #33 method_ref: #34.#36 java/lang/invoke/LambdaMetafactory.metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "-\t\t\t\"    constant #36 name_and_type: #37.#38 metaFactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "-\t\t\t\"    constant #37 utf8: \\\"metaFactory\\\"\\n\" + ", "-\t\t\t\"    constant #38 utf8: \\\"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\\"\\n\" + ", "+\t\t\t\"    constant #36 name_and_type: #37.#38 metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\n\" + ", "+\t\t\t\"    constant #37 utf8: \\\"metafactory\\\"\\n\" + ", "+\t\t\t\"    constant #38 utf8: \\\"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\\\"\\n\" + ", "-\t\t\t\"    constant #41 interface_method_ref: #42.#44 I.doit (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #42 class: #43 I\\n\" + ", "-\t\t\t\"    constant #43 utf8: \\\"I\\\"\\n\" + ", "-\t\t\t\"    constant #44 name_and_type: #45.#25 doit (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #45 utf8: \\\"doit\\\"\\n\" + ", "-\t\t\t\"    constant #46 method handle: invokeinterface (9) #41 \\n\" + ", "-\t\t\t\"    constant #47 method_ref: #1.#48 X.lambda$0 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #48 name_and_type: #24.#25 lambda$0 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #49 method handle: invokestatic (6) #47 \\n\" + ", "-\t\t\t\"    constant #50 method type: #25 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "-\t\t\t\"    constant #51 utf8: \\\"InnerClasses\\\"\\n\" + ", "-\t\t\t\"    constant #52 class: #53 java/lang/invoke/MethodHandles$Lookup\\n\" + ", "-\t\t\t\"    constant #53 utf8: \\\"java/lang/invoke/MethodHandles$Lookup\\\"\\n\" + ", "-\t\t\t\"    constant #54 class: #55 java/lang/invoke/MethodHandles\\n\" + ", "-\t\t\t\"    constant #55 utf8: \\\"java/lang/invoke/MethodHandles\\\"\\n\" + ", "-\t\t\t\"    constant #56 utf8: \\\"Lookup\\\"\\n\" + ", "+\t\t\t\"    constant #41 method type: #25 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "+\t\t\t\"    constant #42 method_ref: #1.#43 X.lambda$0 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "+\t\t\t\"    constant #43 name_and_type: #24.#25 lambda$0 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "+\t\t\t\"    constant #44 method handle: invokestatic (6) #42 \\n\" + ", "+\t\t\t\"    constant #45 method type: #25 (Ljava/lang/Object;Ljava/lang/Object;)V\\n\" + ", "+\t\t\t\"    constant #46 utf8: \\\"InnerClasses\\\"\\n\" + ", "+\t\t\t\"    constant #47 class: #48 java/lang/invoke/MethodHandles$Lookup\\n\" + ", "+\t\t\t\"    constant #48 utf8: \\\"java/lang/invoke/MethodHandles$Lookup\\\"\\n\" + ", "+\t\t\t\"    constant #49 class: #50 java/lang/invoke/MethodHandles\\n\" + ", "+\t\t\t\"    constant #50 utf8: \\\"java/lang/invoke/MethodHandles\\\"\\n\" + ", "+\t\t\t\"    constant #51 utf8: \\\"Lookup\\\"\\n\" + ", "-\t\t\t\"    0  invokedynamic 0 lambda$() : I [19]\\n\" + ", "+\t\t\t\"    0  invokedynamic 0 doit() : I [19]\\n\" + ", "-\t\t\t\"    [inner class info: #52 java/lang/invoke/MethodHandles$Lookup, outer class info: #54 java/lang/invoke/MethodHandles\\n\" + ", "-\t\t\t\"     inner name: #56 Lookup, accessflags: 25 public static final]\\n\" + ", "+\t\t\t\"    [inner class info: #47 java/lang/invoke/MethodHandles$Lookup, outer class info: #49 java/lang/invoke/MethodHandles\\n\" + ", "+\t\t\t\"     inner name: #51 Lookup, accessflags: 25 public static final]\\n\" + ", "-\t\t\t\"  0 : # 39 arguments: {#46,#49,#50}\\n\" + ", "+\t\t\t\"  0 : # 39 arguments: {#41,#44,#45}\\n\" + "]}], "num": 14058}