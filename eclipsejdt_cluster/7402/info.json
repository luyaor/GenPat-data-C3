{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d38b94a038c92600b3848ff2897a9836", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7402d8d1cb0815e3c855e107a7360888", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 966, "methodNumberAfterChange": 967, "signatureBeforeChange": " public void test0942()", "signatureAfterChange": " public void test0942()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\", //================================", "+\tString xSource =", "-\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tMap<Object,Object> map1 = foo(u, v, null);\\n\" +", "-\t\t\"\t                          ^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Map<U,U> to Map<Object,Object>\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "+\t\t\t\"\tMap<Object,Object> map1 = foo(u, v, null);\\n\" +", "+\t\t\t\"\t                          ^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Map<U,U> to Map<Object,Object>\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(new String[] { \"X.java\", xSource });", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "927b0452a395260e9d2163c8e05c0130", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 965, "methodNumberAfterChange": 966, "signatureBeforeChange": " public void test0941()", "signatureAfterChange": " public void test0941()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\", //================================", "+\tString xSource =", "-\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tMap<Object,Object> map1 = foo(u, v);\\n\" +", "-\t\t\"\t                          ^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Map<U,U> to Map<Object,Object>\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "+\t\t\t\"\tMap<Object,Object> map1 = foo(u, v);\\n\" +", "+\t\t\t\"\t                          ^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Map<U,U> to Map<Object,Object>\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(new String[] { \"X.java\", xSource });", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6026d7a802c1c995d0259e10d3c22a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 967, "methodNumberAfterChange": 968, "signatureBeforeChange": " public void test0943()", "signatureAfterChange": " public void test0943()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\"X.java\", //================================", "+\tString xSource =", "-\t\t\"}\\n\",", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\tMap<Object,Object> map1 = foo(u, v, lv.get(0));\\n\" +", "-\t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Map<U,U> to Map<Object,Object>\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {\t", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "+\t\t\t\"\tMap<Object,Object> map1 = foo(u, v, lv.get(0));\\n\" +", "+\t\t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Map<U,U> to Map<Object,Object>\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(new String[] { \"X.java\", xSource });", "+\t}"]}], "num": 7402}