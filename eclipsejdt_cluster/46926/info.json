{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73dcffd2d9337644e98c94373e21f6e3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507307e75038330f9ddb4e03e5860d55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards)", "signatureAfterChange": " public MethodBinding getSingleAbstractMethod(Scope scope, boolean replaceWildcards)", "diff": ["+\tboolean analyseNullAnnotations = environment.globalOptions.isAnnotationBasedNullAnalysisEnabled;", "+\t\tTypeBinding returnType = method.returnType;", "+\t\tTypeBinding[] parameters = method.parameters;", "-\t\t\t\tcontinue next; ", "+\t\t\t\tcontinue next;", "+\t\t\tif (analyseNullAnnotations) {", "+\t\t\t\treturnType = NullAnnotationMatching.strongerType(returnType, otherMethod.returnType, environment);", "+\t\t\t\tparameters = NullAnnotationMatching.weakerTypes(parameters, otherMethod.parameters, environment);", "+\t\t\t}", "-\t\t\t\ttheAbstractMethod.returnType, ", "-\t\t\t\ttheAbstractMethod.parameters, ", "+\t\t\t\treturnType, ", "+\t\t\t\tparameters, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514d46ff685a3552528329a35ef7ccf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "9968b422e7cd1433b2cea24ec6c706b9b3cbabb8", "commitAfterChange": "1c7322526175fbdd367e05404e51251d626478ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \t \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\ttry {\t", "+\t\ttry {", "+\t\t\tIJavaProject project= this.compilationUnit.getJavaProject();", "+\t\t\tint importOnDemandThreshold= getImportNumberThreshold(project, JavaCore.IMPORTREWRITE_ONDEMAND_THRESHOLD);", "+\t\t\tint staticImportOnDemandThreshold= getImportNumberThreshold(project, JavaCore.IMPORTREWRITE_STATIC_ONDEMAND_THRESHOLD);", "+\t\t\t", "-\t\t\t\tonDemandConflicts= evaluateStarImportConflicts(monitor);", "+\t\t\t\tonDemandConflicts= evaluateStarImportConflicts(importOnDemandThreshold, monitor);", "+\t\t\t\tint threshold= isStatic ? staticImportOnDemandThreshold : importOnDemandThreshold;", "-\t\t\t\tboolean doStarImport= pack.hasStarImport(this.importOnDemandThreshold, onDemandConflicts);", "+\t\t\t\tboolean doStarImport= pack.hasStarImport(threshold, onDemandConflicts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8060f9052a6b30161a49a30d4c5ffe22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/UserLibrary.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static UserLibrary createFromString(Reader reader) throws IOException", "signatureAfterChange": " static UserLibrary createFromString(Reader reader) throws IOException", "diff": ["-\t\t\t\t\tIClasspathAttribute[] extraAttributes = ClasspathEntry.decodeExtraAttributes(element);", "-\t\t\t\t\tIAccessRule[] accessRules = ClasspathEntry.decodeAccessRules(element);", "+\t\t\t\t\tNodeList children = element.getElementsByTagName(\"*\"); //$NON-NLS-1$", "+\t\t\t\t\tboolean[] foundChildren = new boolean[children.getLength()];", "+\t\t\t\t\tNodeList attributeList = ClasspathEntry.getChildAttributes(ClasspathEntry.TAG_ATTRIBUTES, children, foundChildren);", "+\t\t\t\t\tIClasspathAttribute[] extraAttributes = ClasspathEntry.decodeExtraAttributes(attributeList);", "+\t\t\t\t\tattributeList = ClasspathEntry.getChildAttributes(ClasspathEntry.TAG_ACCESS_RULES, children, foundChildren);", "+\t\t\t\t\tIAccessRule[] accessRules = ClasspathEntry.decodeAccessRules(attributeList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d8203e807da79b12e7c3f5fecc1076", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "signatureAfterChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "diff": ["+\t\t\tIJavaProject project = jarPackageFragmentRoot.getJavaProject();", "+\t\t\tString sourceLevel = null;", "+\t\t\tString complianceLevel = null;", "-\t\t\t\t\t\t\t\tIStatus status = JavaConventions.validatePackageName(firstLevelPackageName);", "+\t\t\t\t\t\t\t\tif (sourceLevel == null) {", "+\t\t\t\t\t\t\t\t\tsourceLevel = project.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\t\t\t\t\t\tcomplianceLevel = project.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tIStatus status = JavaConventions.validatePackageName(firstLevelPackageName, sourceLevel, complianceLevel);"]}], "num": 46926}