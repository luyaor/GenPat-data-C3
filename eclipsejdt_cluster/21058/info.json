{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4227d6bf9780ae04706c92286b6bb2e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302e4af60f6924f90b366b02593bef6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "ed25425f5de4194a0f32ce4c1315af886ca42c42", "commitAfterChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate void initializePackageNames(IPackageFragmentRoot root, HashSetOfArray fragmentsCache)", "signatureAfterChange": " \t \tprivate void initializePackageNames(IPackageFragmentRoot root, HashSetOfArray fragmentsCache)", "diff": ["-\t\t\t\t((PackageFragmentRoot) root).computeChildren(info, new HashMap());", "+\t\t\t\t((PackageFragmentRoot) root).computeChildren(info);", "-\t\tfor (int j = 0, length2 = frags.length; j < length2; j++) {", "+\t\tfor (int j = 0, length = frags.length; j < length; j++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f3cf0739566d3c7f1a0f8319098a2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "5a0b16973c5f2b4b1beccfae3f83602332ac3f5d", "commitAfterChange": "4ee57f1aa920ef9dfc0c8991087575befcec8304", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, int flags, IProgressMonitor monitor)", "signatureAfterChange": "  \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, int flags, IProgressMonitor monitor)", "diff": ["+\t\t\tcompilerOptions.ignoreMethodBodies = (flags & ICompilationUnit.IGNORE_METHOD_BODIES) != 0;", "-\t\t\t\t\tfor (int j = 0, typeLength = types.length; j < typeLength; j++)", "+\t\t\t\t\tfor (int j = 0, typeLength = types.length; j < typeLength; j++) {", "+\t\t\t\t\t}"]}], "num": 21058}