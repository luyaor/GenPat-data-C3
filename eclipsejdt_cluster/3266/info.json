{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25897c946045dc3aa4b51728a05a94ff", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e66b0de5db3638d312e661f8131e75c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "98d98039d31a5dcc8a3b24b4a05191f05e175f2b", "commitAfterChange": "f91fa46e8d1bc79474704dc3367b9b7e910d1272", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic Message[] getMessages()", "signatureAfterChange": " \tpublic Message[] getMessages()", "diff": ["-\t\treturn messages;", "+\t\tif (this.messages == null) {", "+\t\t\tint problemLength = this.problems.length;", "+\t\t\tif (problemLength == 0) {", "+\t\t\t\tthis.messages = EMPTY_MESSAGES;", "+\t\t\t} else {", "+\t\t\t\tthis.messages = new Message[problemLength];", "+\t\t\t\tfor (int i = 0; i < problemLength; i++) {", "+\t\t\t\t\tIProblem problem = this.problems[i];", "+\t\t\t\t\tint start = problem.getSourceStart();", "+\t\t\t\t\tint end = problem.getSourceEnd();", "+\t\t\t\t\tmessages[i] = new Message(problem.getMessage(), start, end - start + 1);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn this.messages;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b3de31263801937ca542f3c83acc37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\tif (this.typeArguments != null) {", "+\t\t\tint length = this.typeArguments.length;", "+\t\t\tboolean argHasError = blockScope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_5;", "+\t\t\tthis.genericTypeArguments = new TypeBinding[length];", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tTypeReference typeReference = this.typeArguments[i];", "+\t\t\t\tif ((this.genericTypeArguments[i] = typeReference.resolveType(blockScope, true /* check bounds*/)) == null) {", "+\t\t\t\t\targHasError = true;", "+\t\t\t\t}", "+\t\t\t\tif (argHasError && typeReference instanceof Wildcard) {", "+\t\t\t\t\tblockScope.problemReporter().illegalUsageOfWildcard(typeReference);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+"]}], "num": 3266}