{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6dfe27789b418de29690d787c7c05a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08566f54ff9de337199016c5bacb2cea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 103, "signatureBeforeChange": " private void generateFieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] name, char[] signature)", "signatureAfterChange": " private void generateFieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] name, char[] signature)", "diff": ["+}", "+private void generateFieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] name, char[] signature) {", "+\tcountLabels = 0;", "+\tswitch(opcode) {", "+\t\tcase Opcodes.OPC_getfield :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tstackDepth++;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_getstatic :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tstackDepth += 2;", "+\t\t\t} else {", "+\t\t\t\tstackDepth++;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_putfield :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tstackDepth -= 3;", "+\t\t\t} else {", "+\t\t\t\tstackDepth -= 2;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_putstatic :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tstackDepth -= 2;", "+\t\t\t} else {", "+\t\t\t\tstackDepth--;", "+\t\t\t}", "+\t}", "+\tif (stackDepth > stackMax) {", "+\t\tstackMax = stackDepth;", "+\t}", "+\tif (classFileOffset + 2 >= bCodeStream.length) {", "+\t\tresizeByteArray();", "+\t}", "+\tposition++;", "+\tbCodeStream[classFileOffset++] = opcode;", "+\twriteUnsignedShort(constantPool.literalIndexForField(declaringClass, name, signature));", "+}", "-private void generateFieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] name, char[] signature) {", "-\tcountLabels = 0;", "-\tswitch(opcode) {", "-\t\tcase OPC_getfield :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tstackDepth++;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase OPC_getstatic :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tstackDepth += 2;", "-\t\t\t} else {", "-\t\t\t\tstackDepth++;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase OPC_putfield :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tstackDepth -= 3;", "-\t\t\t} else {", "-\t\t\t\tstackDepth -= 2;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase OPC_putstatic :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tstackDepth -= 2;", "-\t\t\t} else {", "-\t\t\t\tstackDepth--;", "-\t\t\t}", "-\t}", "-\tif (stackDepth > stackMax) {", "-\t\tstackMax = stackDepth;", "-\t}", "-\tif (classFileOffset + 2 >= bCodeStream.length) {", "-\t\tresizeByteArray();", "-\t}", "-\tposition++;", "-\tbCodeStream[classFileOffset++] = opcode;", "-\twriteUnsignedShort(constantPool.literalIndexForField(declaringClass, name, signature));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa5c6b59a20fbf1519f90fc1d60c776", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 82, "signatureBeforeChange": "  private void generateFieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] name, char[] signature)", "signatureAfterChange": "  private void fieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] fieldName, char[] signature)", "diff": ["+", "+private void fieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] fieldName, char[] signature) {", "+\tthis.countLabels = 0;", "+\tswitch(opcode) {", "+\t\tcase Opcodes.OPC_getfield :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tthis.stackDepth++;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_getstatic :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tthis.stackDepth += 2;", "+\t\t\t} else {", "+\t\t\t\tthis.stackDepth++;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_putfield :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tthis.stackDepth -= 3;", "+\t\t\t} else {", "+\t\t\t\tthis.stackDepth -= 2;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_putstatic :", "+\t\t\tif (returnTypeSize == 2) {", "+\t\t\t\tthis.stackDepth -= 2;", "+\t\t\t} else {", "+\t\t\t\tthis.stackDepth--;", "+\t\t\t}", "+\t}", "+\tif (this.stackDepth > this.stackMax) {", "+\t\tthis.stackMax = this.stackDepth;", "+\t}", "+\tif (this.classFileOffset + 2 >= this.bCodeStream.length) {", "+\t\tresizeByteArray();", "+\t}", "+\tthis.position++;", "+\tthis.bCodeStream[this.classFileOffset++] = opcode;", "+\twriteUnsignedShort(this.constantPool.literalIndexForField(declaringClass, fieldName, signature));", "+}", "-", "-private void generateFieldAccess(byte opcode, int returnTypeSize, char[] declaringClass, char[] name, char[] signature) {", "-\tthis.countLabels = 0;", "-\tswitch(opcode) {", "-\t\tcase Opcodes.OPC_getfield :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tthis.stackDepth++;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase Opcodes.OPC_getstatic :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tthis.stackDepth += 2;", "-\t\t\t} else {", "-\t\t\t\tthis.stackDepth++;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase Opcodes.OPC_putfield :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tthis.stackDepth -= 3;", "-\t\t\t} else {", "-\t\t\t\tthis.stackDepth -= 2;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase Opcodes.OPC_putstatic :", "-\t\t\tif (returnTypeSize == 2) {", "-\t\t\t\tthis.stackDepth -= 2;", "-\t\t\t} else {", "-\t\t\t\tthis.stackDepth--;", "-\t\t\t}", "-\t}", "-\tif (this.stackDepth > this.stackMax) {", "-\t\tthis.stackMax = this.stackDepth;", "-\t}", "-\tif (this.classFileOffset + 2 >= this.bCodeStream.length) {", "-\t\tresizeByteArray();", "-\t}", "-\tthis.position++;", "-\tthis.bCodeStream[this.classFileOffset++] = opcode;", "-\twriteUnsignedShort(this.constantPool.literalIndexForField(declaringClass, name, signature));", "-}"]}], "num": 19507}