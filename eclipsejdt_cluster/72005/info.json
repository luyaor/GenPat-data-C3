{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e56fb9f4ac97dba6ec760a4cb1470ce", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1623e8656d36f5447ec376a1b4033230", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1798df591429fc6a5448f8a074f2d563846bcebb", "commitAfterChange": "e8a92b10517fc0e6b59559ac009096fb50176b96", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "signatureAfterChange": " protected void setPaths(ArrayList bootclasspaths, \t\tString sourcepathClasspathArg, \t\tArrayList sourcepathClasspaths, \t\tArrayList classpaths, \t\tArrayList extdirsClasspaths, \t\tArrayList endorsedDirClasspaths, \t\tString customEncoding)", "diff": ["-\tif (this.annotationPath != null) {", "+\tif (this.annotationPaths != null && CompilerOptions.ENABLED.equals(this.options.get(CompilerOptions.OPTION_AnnotationBasedNullAnalysis))) {", "-\t\t\t\t((ClasspathJar) cp).annotationPath = this.annotationPath;", "+\t\t\t\t((ClasspathJar) cp).annotationPaths = this.annotationPaths;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aec73b9ce19bc414df770d6bee7613a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void bindArguments()", "signatureAfterChange": " \tpublic void bindArguments()", "diff": ["+\t\t\tAnnotationBinding[][] paramAnnotations = null;", "+\t\t\t\t\tif (paramAnnotations == null)", "+\t\t\t\t\t\tparamAnnotations = new AnnotationBinding[length][];", "+\t\t\t\t\tparamAnnotations[i] = argument.binding.getAnnotations();", "+\t\t\tif (paramAnnotations != null)", "+\t\t\t\tthis.binding.setParameterAnnotations(paramAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa35043786db590b4ab93728ba91d10d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\tif (this.value == null) ", "+\t\tif (this.value == null) {", "+\t\t\tthis.compilerElementPair = new ElementValuePair(this.name, this.value, this.binding);", "+\t\t}", "+\t\t\tthis.compilerElementPair = new ElementValuePair(this.name, this.value, this.binding);", "+\t\tthis.compilerElementPair = new ElementValuePair(this.name, this.value, this.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab84f2fc5cce116bce71d673b65cb6d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tif (this.compilerAnnotation != null)", "+\t\t\treturn this.resolvedType;", "-\t\tif (typeBinding == null)", "+\t\tif (typeBinding == null) {", "+\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "+\t\t}", "+\t\t\tthis.compilerAnnotation = new AnnotationBinding(this);", "+\t\tthis.compilerAnnotation = new AnnotationBinding(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf2fbe458b25a20851e7604c6322578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BaseMessagerImpl.java", "commitBeforeChange": "5ad2fccc6e97d11cd839d7b271d24d4e5e50f1bf", "commitAfterChange": "7c18a9763024ad321fbd37c2e6b52a79b1b2fb7c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e,  \t\t\tAnnotationMirror a, AnnotationValue v)", "signatureAfterChange": " \tpublic static AptProblem createProblem(Kind kind, CharSequence msg, Element e,  \t\t\tAnnotationMirror a, AnnotationValue v)", "diff": ["-\t\t\tAnnotation annotation = null;", "-\t\t\tfor (int i = 0; annotation == null && i < elementAnnotations.length; i++) {", "-\t\t\t\tif (annotationBinding == elementAnnotations[i].getCompilerAnnotation()) {", "-\t\t\t\t\tannotation = elementAnnotations[i];", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tAnnotation annotation = findAnnotation(elementAnnotations, annotationBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6428b2ebffced202ee5d0d75e69a76c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "4ea9156aba6eb1b480b630995ce26fe5d9cc158a", "commitAfterChange": "08a27bd42ab478e28ef52da212e8300b848a1dc3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void bindArguments()", "signatureAfterChange": " \tpublic void bindArguments()", "diff": ["-\t\t\t\t\tif (paramAnnotations == null)", "+\t\t\t\t\tif (paramAnnotations == null) {", "+\t\t\t\t\t\tfor (int j=0; j<i; j++) {", "+\t\t\t\t\t\t\tparamAnnotations[j] = Binding.NO_ANNOTATIONS;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else if (paramAnnotations != null) {", "+\t\t\t\t\tparamAnnotations[i] = Binding.NO_ANNOTATIONS;"]}], "num": 72005}