{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48d675f25674350c769105c2d7dbe302", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8235df48526e68c935e3cd71ea3463", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "2da9fd5462d393248874d6bdd83011028847dbc0", "commitAfterChange": "33edf3bbe97f6a11ce28073f074e86a92fec748b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testDiscardWorkingCopy3() throws CoreException", "signatureAfterChange": " \tpublic void testDiscardWorkingCopy3() throws CoreException", "diff": ["+\t\t\tassertTrue(\"should be opened\", workingCopy.isOpen());", "-\t\t\tassertTrue(\"should still be in working copy mode\", workingCopy.isWorkingCopy());", "+\t\t\tassertTrue(\"should still be in working copy mode (1)\", workingCopy.isWorkingCopy());", "+\t\t\tassertTrue(\"should still be opened\", workingCopy.isOpen());", "-\t\t\tassertTrue(\"should no longer be in working copy mode\", !workingCopy.isWorkingCopy());", "+\t\t\tassertTrue(\"should still be in working copy mode (2)\", workingCopy.isWorkingCopy());", "+\t\t\tassertTrue(\"should no longer be opened\", !workingCopy.isOpen());", "+\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0bd4660f227af8dc7cd830283762840", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testBecomeWorkingCopy3() throws CoreException", "signatureAfterChange": " \tpublic void testBecomeWorkingCopy3() throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = null;", "-\t\ttry {", "-\t\t\tworkingCopy = getCompilationUnit(\"P/Y.java\");", "+\t\tthis.workingCopy = getCompilationUnit(\"P/Y.java\");", "-\t\t\tworkingCopy.becomeWorkingCopy(null, null);", "-\t\t\tassertElementsEqual(", "-\t\t\t\t\"Unexpected children of default package\",", "-\t\t\t\t\"X.java [in <default> [in <project root> [in P]]]\\n\" +", "-\t\t\t\t\"[Working copy] Y.java [in <default> [in <project root> [in P]]]\",", "-\t\t\t\tgetPackage(\"/P\").getChildren());", "-\t\t} finally {", "-\t\t\tif (workingCopy != null) {", "-\t\t\t\tworkingCopy.discardWorkingCopy();", "-\t\t\t}", "-\t\t}", "+\t\tthis.workingCopy.becomeWorkingCopy(null, null);", "+\t\tassertElementsEqual(", "+\t\t\t\"Unexpected children of default package\",", "+\t\t\t\"X.java [in <default> [in <project root> [in P]]]\\n\" +", "+\t\t\t\"[Working copy] Y.java [in <default> [in <project root> [in P]]]\",", "+\t\t\tgetPackage(\"/P\").getChildren());"]}], "num": 22557}