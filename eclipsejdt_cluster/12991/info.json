{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f51e1400a82bbf2b6af88d5e309acc6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bc7cc9ebcff0ab394391b30da63e0bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "commitAfterChange": "daf5838d3d0821f2a9be5ad5ca1a17918617a63a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testMoveReadOnlyPackageFragment() throws CoreException", "signatureAfterChange": " public void testMoveReadOnlyPackageFragment() throws CoreException", "diff": ["-\t\tgetFile(\"/P/src/p1/p2/p3/X.java\").setReadOnly(true);", "+\t\tsetReadOnly(getFile(\"/P/src/p1/p2/p3/X.java\"), true);", "-\t\tpkgSource.getResource().setReadOnly(true);", "+\t\tsetReadOnly(pkgSource.getResource(), true);", "-\t\tpkg2.getResource().setReadOnly(true);", "+\t\tsetReadOnly(pkg2.getResource(), true);", "-\t\tassertTrue(\"Not readOnly\", getPackage(\"/P/src2/p1\").getResource().isReadOnly());", "-\t\tassertTrue(\"Is readOnly\", !getPackage(\"/P/src2/p1/p2\").getResource().isReadOnly());", "-\t\tassertTrue(\"Not readOnly\", getPackage(\"/P/src2/p1/p2/p3\").getResource().isReadOnly());", "-\t\tassertTrue(\"Is readOnly\", getFile(\"/P/src2/p1/p2/p3/X.java\").isReadOnly());", "+\t\tassertTrue(\"Not readOnly\", isReadOnly(getPackage(\"/P/src2/p1\").getResource()));", "+\t\tassertTrue(\"Is readOnly\", !isReadOnly(getPackage(\"/P/src2/p1/p2\").getResource()));", "+\t\tassertTrue(\"Not readOnly\", isReadOnly(getPackage(\"/P/src2/p1/p2/p3\").getResource()));", "+\t\tassertTrue(\"Is readOnly\", isReadOnly(getFile(\"/P/src2/p1/p2/p3/X.java\")));", "-\t\t\txSrcFile.setReadOnly(false);", "+\t\t\tsetReadOnly(xSrcFile, false);", "-\t\t\tpkg2.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(pkg2.getResource(), false);", "-\t\t\tpkgSource.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(pkgSource.getResource(), false);", "-\t\t\tp1Fragment.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(p1Fragment.getResource(), false);", "-\t\t\tp3Fragment.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(p3Fragment.getResource(), false);", "-\t\t\txFile.setReadOnly(false);", "+\t\t\tsetReadOnly(xFile, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0a1526196b2144c2ab7b39ff65b207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveResourcesTests.java", "commitBeforeChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "commitAfterChange": "daf5838d3d0821f2a9be5ad5ca1a17918617a63a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testCopyReadOnlyPackageFragment() throws CoreException", "signatureAfterChange": " public void testCopyReadOnlyPackageFragment() throws CoreException", "diff": ["-\t\tgetFile(\"/P/src/p1/p2/p3/X.java\").setReadOnly(true);", "+\t\tsetReadOnly(getFile(\"/P/src/p1/p2/p3/X.java\"), true);", "-\t\tpkgSource.getResource().setReadOnly(true);", "+\t\tsetReadOnly(pkgSource.getResource(), true);", "-\t\tpkg2.getResource().setReadOnly(true);", "+\t\tsetReadOnly(pkg2.getResource(), true);", "-\t\tassertTrue(\"Not readOnly\", getPackage(\"/P/src2/p1\").getResource().isReadOnly());", "-\t\tassertTrue(\"Is readOnly\", !getPackage(\"/P/src2/p1/p2\").getResource().isReadOnly());", "-\t\tassertTrue(\"Not readOnly\", getPackage(\"/P/src2/p1/p2/p3\").getResource().isReadOnly());", "-\t\tassertTrue(\"Is readOnly\", getFile(\"/P/src2/p1/p2/p3/X.java\").isReadOnly());", "+\t\tassertTrue(\"Not readOnly\", isReadOnly(getPackage(\"/P/src2/p1\").getResource()));", "+\t\tassertTrue(\"Is readOnly\", !isReadOnly(getPackage(\"/P/src2/p1/p2\").getResource()));", "+\t\tassertTrue(\"Not readOnly\", isReadOnly(getPackage(\"/P/src2/p1/p2/p3\").getResource()));", "+\t\tassertTrue(\"Is readOnly\", isReadOnly(getFile(\"/P/src2/p1/p2/p3/X.java\")));", "-\t\t\txSrcFile.setReadOnly(false);", "+\t\t\tsetReadOnly(xSrcFile, false);", "-\t\t\tpkg2.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(pkg2.getResource(), false);", "-\t\t\tpkgSource.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(pkgSource.getResource(), false);", "-\t\t\tp1Fragment.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(p1Fragment.getResource(), false);", "-\t\t\tp3Fragment.getResource().setReadOnly(false);", "+\t\t\tsetReadOnly(p3Fragment.getResource(), false);", "-\t\t\txFile.setReadOnly(false);", "+\t\t\tsetReadOnly(xFile, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc9ba6c4e19d1e37f398847a9786e14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "a6914dc16e1f0ce25a9de76d8e25b9be5b842c74", "commitAfterChange": "fa8802ca34ede6a02e1972c1e68e4f30dba72e81", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " private void readHeaderInfo(RandomAccessFile file) throws IOException", "signatureAfterChange": " private void readHeaderInfo(FileInputStream stream) throws IOException", "diff": ["-private void readHeaderInfo(RandomAccessFile file) throws IOException {", "-\tfile.seek(this.headerInfoOffset);", "+private void readHeaderInfo(FileInputStream stream) throws IOException {", "-\tthis.numberOfChunks = file.readInt();", "-\tthis.sizeOfLastChunk = file.readUnsignedByte();", "-\tthis.documentReferenceSize = file.readUnsignedByte();", "+\tthis.numberOfChunks = readStreamInt(stream);", "+\tthis.sizeOfLastChunk = this.streamBuffer[this.bufferIndex++] & 0xFF;", "+\tthis.documentReferenceSize = this.streamBuffer[this.bufferIndex++] & 0xFF;", "-\t\tthis.chunkOffsets[i] = file.readInt();", "+\t\tthis.chunkOffsets[i] = readStreamInt(stream);", "-\tthis.startOfCategoryTables = file.readInt();", "+\tthis.startOfCategoryTables = readStreamInt(stream);", "-\tint size = file.readInt();", "+\tint size = readStreamInt(stream);", "-\t\tchar[] categoryName = INTERNED_CATEGORY_NAMES.get(file.readUTF().toCharArray());", "-\t\toffset = file.readInt();", "+\t\tchar[] categoryName = INTERNED_CATEGORY_NAMES.get(readStreamChars(stream));", "+\t\toffset = readStreamInt(stream);"]}], "num": 12991}