{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73111ec82b1770083da6d428ed99b517", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05885be5bb9c6a68590a4483023251e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "1d7ae1dd45850bde815f0a24a5c9814d60ed36eb", "commitAfterChange": "e5988aa6fffbfb1b20b8814c4bf08e1213cd12df", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "signatureAfterChange": "\r public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "diff": ["-\t\tbyte[] bytes = getContents().getBytes();\r", "-\t\tByteArrayInputStream stream = new ByteArrayInputStream(bytes);\r", "+\t\t\t\r", "+\t\tString encoding = (String)JavaCore.getOptions().get(JavaCore.CORE_ENCODING);\r", "+\t\t\tbyte[] bytes = encoding == null \r", "+\t\t\t\t? getContents().getBytes() \r", "+\t\t\t\t: getContents().getBytes(encoding);\r", "+\t\t\tByteArrayInputStream stream = new ByteArrayInputStream(bytes);\r", "+\r", "+\t\t} catch (IOException e) {\r", "+\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac13c9471cc4845c347ac6e65e8007b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "ac79ebad8b588bff5a071f74e9413cce9477383d", "commitAfterChange": "7bf0271f1c4a3a3e2fdf19c1b96995c79e10b393", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void executeOperation() throws JavaModelException", "signatureAfterChange": "\r protected void executeOperation() throws JavaModelException", "diff": ["-\t\tInputStream stream = new ByteArrayInputStream(BufferManager.stringToBytes(fSource));\r", "-\t\tcreateFile(folder, unit.getElementName(), stream, false);\r", "-\t\tfResultElements = new IJavaElement[] {unit};\r", "-\t\tif (unit.getParent().exists()) {\r", "-\t\t\tfor (int i = 0; i < fResultElements.length; i++) {\r", "-\t\t\t\tdelta.added(fResultElements[i]);\r", "+\t\ttry {\r", "+\t\t\tString encoding = (String)JavaCore.getOptions().get(JavaCore.CORE_ENCODING);\r", "+\t\t\tInputStream stream = new ByteArrayInputStream(encoding == null ? fSource.getBytes() : fSource.getBytes(encoding));\r", "+\t\t\tcreateFile(folder, unit.getElementName(), stream, false);\r", "+\t\t\tfResultElements = new IJavaElement[] {unit};\r", "+\t\t\tif (unit.getParent().exists()) {\r", "+\t\t\t\tfor (int i = 0; i < fResultElements.length; i++) {\r", "+\t\t\t\t\tdelta.added(fResultElements[i]);\r", "+\t\t\t\t}\r", "+\t\t\t\taddDelta(delta);\r", "-\t\t\taddDelta(delta);\r", "+\t\t} catch (IOException e) {\r", "+\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r"]}], "num": 39751}