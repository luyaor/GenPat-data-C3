{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f4eaead09f862f97a4bc3fe5938dc9c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398e440ea9da448375aa9d23936a24ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testPerfScannerOneFile() throws InvalidInputException, IOException", "signatureAfterChange": " \tpublic void testScanner() throws InvalidInputException, IOException", "diff": ["-\tpublic void testPerfScannerOneFile() throws InvalidInputException, IOException {", "+\tpublic void testScanner() throws InvalidInputException, IOException {", "-\t\ttagAsSummary(\"Compile>Scan>Src:parser>Options:Default\", Dimension.CPU_TIME, true); // put in fingerprint", "+\t\ttagAsSummary(\"Compile>Scan>Parser>Default\", true); // put in fingerprint"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a184eee055961f4df529a63306b80c7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/BuildBatchCompilerTest.java", "commitBeforeChange": "69318a05bafae35ecceb2d1bf0418b5a10ebe216", "commitAfterChange": "47dbd4c35b42d212d5b292dc3c315a064a8f2239", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \tpublic void testBuildCompilerUsingBatchCompiler() throws IOException, CoreException", "signatureAfterChange": " \t\t \tpublic void testBuildCompilerUsingBatchCompiler() throws IOException", "diff": ["-\tpublic void testBuildCompilerUsingBatchCompiler() throws IOException, CoreException {", "+\tpublic void testBuildCompilerUsingBatchCompiler() throws IOException {", "-\t\ttagAsGlobalSummary(\"Build compiler source using batch compiler\", Dimension.CPU_TIME); //$NON-NLS-1$", "+\t\t// Note this test is not a finger print test, so we don't want to use tagAsGlobalSummary(...)"]}], "num": 43672}