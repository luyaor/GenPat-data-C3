{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1798e739be24f9d792e1499ddf9c8198", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30de56ca9ae36bde3421a4568e46d9b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "0af096b2d34684a162b7a195205699b7a15a3c32", "commitAfterChange": "55eb63b50ad4a934502bfb435a017ff21ebaf8d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "signatureAfterChange": "  \tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings, boolean recordParsingInformation)", "diff": ["-\tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings) {", "+\tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings, boolean recordParsingInformation) {", "-\t\tCompilationUnitDeclaration compilationUnitDeclaration = parser.dietParse(sourceUnit, new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit));", "+\t\tfinal CompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, compilerOptions.maxProblemsPerUnit);", "+\t\tCompilationUnitDeclaration compilationUnitDeclaration = parser.dietParse(sourceUnit, compilationResult);", "+\t\t", "+\t\tif (recordParsingInformation) {", "+\t\t\tthis.recordedParsingInformation = getRecordedParsingInformation(compilationResult, parser);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b456fa75a4135aa6ecedfbc2732d8a72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "7c5e971605e3df9f80c39caf6a5dabceeb49148b", "commitAfterChange": "ffe39da04df0f3a3dcc2e15c0353857438ce8e35", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate ASTNode internalCreateASTForKind()", "signatureAfterChange": " \tprivate ASTNode internalCreateASTForKind()", "diff": ["-\t\t\t\t\trootNodeToCompilationUnit(ast, compilationUnit, block, recordedParsingInformation);", "+\t\t\t\t\trootNodeToCompilationUnit(ast, compilationUnit, block, recordedParsingInformation, data);", "-\t\t\t\t\trootNodeToCompilationUnit(expression2.getAST(), compilationUnit, expression2, codeSnippetParsingUtil.recordedParsingInformation);", "+\t\t\t\t\trootNodeToCompilationUnit(expression2.getAST(), compilationUnit, expression2, codeSnippetParsingUtil.recordedParsingInformation, null);", "-\t\t\t\t\trootNodeToCompilationUnit(typeDeclaration.getAST(), compilationUnit, typeDeclaration, codeSnippetParsingUtil.recordedParsingInformation);", "+\t\t\t\t\trootNodeToCompilationUnit(typeDeclaration.getAST(), compilationUnit, typeDeclaration, codeSnippetParsingUtil.recordedParsingInformation, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef851ee14f09620bbb46ff08944a0bfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "460abf470b71772c6f8d4a0fe1b345129a0a6a80", "commitAfterChange": "f1ecb4b2d8ea593a495f1608bdd4d8fccb10a732", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, ASTNode node, CodeSnippetParsingUtil codeSnippetParsingUtil)", "signatureAfterChange": " \t \tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, CompilationUnit compilationUnit, ASTNode node, RecordedParsingInformation recordedParsingInformation)", "diff": ["-\t", "-\tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, ASTNode node, CodeSnippetParsingUtil codeSnippetParsingUtil) {", "-\t\t// TODO record the comments information", "-\t\tCompilationUnit compilationUnit = ast.newCompilationUnit();", "-\t\tRecordedParsingInformation recordedParsingInformation = codeSnippetParsingUtil.recordedParsingInformation;", "+\tprivate static void rootNodeToCompilationUnit(AST ast, ASTConverter converter, CompilationUnit compilationUnit, ASTNode node, RecordedParsingInformation recordedParsingInformation) {", "-\t\tcompilationUnit.setLineEndTable(recordedParsingInformation.lineEnds);"]}], "num": 23289}