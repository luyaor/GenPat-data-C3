{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a47435adb4ddb7e5a60b28577449c5f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc1b86ab96752fb5d159d0b90142839", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["-\t// severity can have been preset on the problem", "+// severity can have been preset on the problem", "-\t\t\treturn this.options.getSeverity(CompilerOptions.MaskedCatchBlock);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.MaskedCatchBlock);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedImport);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedImport);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.MethodWithConstructorName);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.MethodWithConstructorName);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.OverriddenPackageDefaultMethod);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.OverriddenPackageDefaultMethod);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.IncompatibleNonInheritedInterfaceMethod);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.IncompatibleNonInheritedInterfaceMethod);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UsingDeprecatedAPI);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UsingDeprecatedAPI);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedLocalVariable);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedLocalVariable);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedArgument);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedArgument);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.NoImplicitStringConversion);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.NoImplicitStringConversion);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.AccessEmulation);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.AccessEmulation);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.NonExternalizedString);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.NonExternalizedString);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.AssertUsedAsAnIdentifier);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.AssertUsedAsAnIdentifier);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.EnumUsedAsAnIdentifier);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.EnumUsedAsAnIdentifier);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.NonStaticAccessToStatic);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.NonStaticAccessToStatic);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.IndirectStaticAccess);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.IndirectStaticAccess);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.NoEffectAssignment);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.NoEffectAssignment);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedPrivateMember);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedPrivateMember);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.LocalVariableHiding);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.LocalVariableHiding);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.FieldHiding);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.FieldHiding);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.TypeParameterHiding);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.TypeParameterHiding);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.AccidentalBooleanAssign);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.AccidentalBooleanAssign);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.EmptyStatement);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.EmptyStatement);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UndocumentedEmptyBlock);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UndocumentedEmptyBlock);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnnecessaryTypeCheck);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnnecessaryTypeCheck);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.FinallyBlockNotCompleting);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.FinallyBlockNotCompleting);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedDeclaredThrownException);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedDeclaredThrownException);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnqualifiedFieldAccess);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UnnecessaryElse);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UnnecessaryElse);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.UncheckedTypeOperation);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.UncheckedTypeOperation);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.MissingOverrideAnnotation);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.MissingOverrideAnnotation);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.MissingDeprecatedAnnotation);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.MissingDeprecatedAnnotation);", "-\t\t    return this.options.getSeverity(CompilerOptions.FinalParameterBound);", "+\t\t    return customOptions().getSeverity(CompilerOptions.FinalParameterBound);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.MissingSerialVersion);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.MissingSerialVersion);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.ForbiddenReference);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.ForbiddenReference);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.DiscouragedReference);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.DiscouragedReference);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.VarargsArgumentNeedCast);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.VarargsArgumentNeedCast);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.NullReference);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.NullReference);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.Autoboxing);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.Autoboxing);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.IncompleteEnumSwitch);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.IncompleteEnumSwitch);", "-\t\t\treturn this.options.getSeverity(CompilerOptions.AnnotationSuperInterface);", "+\t\t\treturn customOptions().getSeverity(CompilerOptions.AnnotationSuperInterface);", "-\t\t\tif (this.options.docCommentSupport) {", "-\t\t\t\treturn this.options.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tCompilerOptions cOptions = customOptions();", "+\t\t\tif (cOptions.docCommentSupport) {", "+\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "-\t\t\tif (this.options.docCommentSupport && this.options.reportInvalidJavadocTags) {", "-\t\t\t\treturn this.options.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tcOptions = customOptions();", "+\t\t\tif (cOptions.docCommentSupport && cOptions.reportInvalidJavadocTags) {", "+\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "-\t\t\tif (this.options.docCommentSupport && this.options.reportInvalidJavadocTags && this.options.reportInvalidJavadocTagsDeprecatedRef) {", "-\t\t\t\treturn this.options.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tcOptions = customOptions();", "+\t\t\tif (cOptions.docCommentSupport && cOptions.reportInvalidJavadocTags && cOptions.reportInvalidJavadocTagsDeprecatedRef) {", "+\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "-\t\t\tif (this.options.docCommentSupport && this.options.reportInvalidJavadocTags && this.options.reportInvalidJavadocTagsNotVisibleRef) {", "-\t\t\t\treturn this.options.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tcOptions = customOptions();", "+\t\t\tif (cOptions.docCommentSupport && cOptions.reportInvalidJavadocTags && cOptions.reportInvalidJavadocTagsNotVisibleRef) {", "+\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "-\t\t\tif (this.options.docCommentSupport) {", "-\t\t\t\treturn this.options.getSeverity(CompilerOptions.MissingJavadocTags);", "+\t\t\tcOptions = customOptions();", "+\t\t\tif (cOptions.docCommentSupport) {", "+\t\t\t\treturn cOptions.getSeverity(CompilerOptions.MissingJavadocTags);", "-\t\t\tif (this.options.docCommentSupport) {", "-\t\t\t\treturn this.options.getSeverity(CompilerOptions.MissingJavadocComments);", "+\t\t\tcOptions = customOptions();", "+\t\t\tif (cOptions.docCommentSupport) {", "+\t\t\t\treturn cOptions.getSeverity(CompilerOptions.MissingJavadocComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec2c8045b88665738d476ce0b770e3e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1924cfa5e4209a8742be0104afe1beaad86d0922", "commitAfterChange": "dfe897878a3115c90160783084107f96dcd301be", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemID)", "diff": ["-public int computeSeverity(int problemId){", "+public int computeSeverity(int problemID){", "-// severity can have been preset on the problem", "-//\tif ((problem.severity & Fatal) != 0){", "-//\t\treturn Error;", "-//\t}", "-", "-\t// if not then check whether it is a configurable problem", "-\tswitch(problemId){", "-", "-\t\tcase IProblem.MaskedCatch : ", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.MaskedCatchBlock);", "-", "-\t\tcase IProblem.UnusedImport :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedImport);", "-\t\t\t", "-\t\tcase IProblem.MethodButWithConstructorName :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.MethodWithConstructorName);", "-\t\t", "-\t\tcase IProblem.OverridingNonVisibleMethod :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.OverriddenPackageDefaultMethod);", "-", "-\t\tcase IProblem.IncompatibleReturnTypeForNonInheritedInterfaceMethod :", "-\t\tcase IProblem.IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.IncompatibleNonInheritedInterfaceMethod);", "-", "-\t\tcase IProblem.OverridingDeprecatedMethod :\t\t\t\t", "-\t\tcase IProblem.UsingDeprecatedType :\t\t\t\t", "-\t\tcase IProblem.UsingDeprecatedMethod :", "-\t\tcase IProblem.UsingDeprecatedConstructor :", "-\t\tcase IProblem.UsingDeprecatedField :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UsingDeprecatedAPI);", "-\t\t", "-\t\tcase IProblem.LocalVariableIsNeverUsed :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedLocalVariable);", "-\t\t", "-\t\tcase IProblem.ArgumentIsNeverUsed :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedArgument);", "-", "-\t\tcase IProblem.NoImplicitStringConversionForCharArrayExpression :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.NoImplicitStringConversion);", "-", "-\t\tcase IProblem.NeedToEmulateFieldReadAccess :", "-\t\tcase IProblem.NeedToEmulateFieldWriteAccess :", "-\t\tcase IProblem.NeedToEmulateMethodAccess :", "-\t\tcase IProblem.NeedToEmulateConstructorAccess :\t\t\t", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.AccessEmulation);", "-", "-\t\tcase IProblem.NonExternalizedStringLiteral :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.NonExternalizedString);", "-", "-\t\tcase IProblem.UseAssertAsAnIdentifier :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.AssertUsedAsAnIdentifier);", "-\t\tcase IProblem.UseEnumAsAnIdentifier :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.EnumUsedAsAnIdentifier);", "-", "-\t\tcase IProblem.NonStaticAccessToStaticMethod :", "-\t\tcase IProblem.NonStaticAccessToStaticField :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.NonStaticAccessToStatic);", "-", "-\t\tcase IProblem.IndirectAccessToStaticMethod :", "-\t\tcase IProblem.IndirectAccessToStaticField :", "-\t\tcase IProblem.IndirectAccessToStaticType :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.IndirectStaticAccess);", "-", "-\t\tcase IProblem.AssignmentHasNoEffect:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.NoEffectAssignment);", "-", "-\t\tcase IProblem.UnusedPrivateConstructor:", "-\t\tcase IProblem.UnusedPrivateMethod:", "-\t\tcase IProblem.UnusedPrivateField:", "-\t\tcase IProblem.UnusedPrivateType:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedPrivateMember);", "-", "+\tswitch (problemID) {", "-\t\t\treturn Warning;\t\t\t", "-", "-\t\tcase IProblem.LocalVariableHidingLocalVariable:", "-\t\tcase IProblem.LocalVariableHidingField:", "-\t\tcase IProblem.ArgumentHidingLocalVariable:", "-\t\tcase IProblem.ArgumentHidingField:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.LocalVariableHiding);", "-", "-\t\tcase IProblem.FieldHidingLocalVariable:", "-\t\tcase IProblem.FieldHidingField:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.FieldHiding);", "-", "-\t\tcase IProblem.TypeParameterHidingType:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.TypeParameterHiding);", "+ \t\tcase IProblem.VarargsConflict :", "+\t\t\treturn ProblemSeverities.Warning;", "-\t\tcase IProblem.PossibleAccidentalBooleanAssignment:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.AccidentalBooleanAssign);", "-", "-\t\tcase IProblem.SuperfluousSemicolon:", "-\t\tcase IProblem.EmptyControlFlowStatement:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.EmptyStatement);", "-", "-\t\tcase IProblem.UndocumentedEmptyBlock:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UndocumentedEmptyBlock);", "-\t\t\t", "-\t\tcase IProblem.UnnecessaryCast:", "-\t\tcase IProblem.UnnecessaryInstanceof:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnnecessaryTypeCheck);", "-\t\t\t", "-\t\tcase IProblem.FinallyMustCompleteNormally:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.FinallyBlockNotCompleting);", "-\t\t\t", "-\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "-\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnusedDeclaredThrownException);", "-", "-\t\tcase IProblem.UnqualifiedFieldAccess:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess);", "-\t\t", "-\t\tcase IProblem.UnnecessaryElse:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UnnecessaryElse);", "-", "-\t\tcase IProblem.UnsafeRawConstructorInvocation:", "-\t\tcase IProblem.UnsafeRawMethodInvocation:", "-\t\tcase IProblem.UnsafeTypeConversion:", "-\t\tcase IProblem.UnsafeRawFieldAssignment:", "-\t\tcase IProblem.UnsafeGenericCast:", "-\t\tcase IProblem.UnsafeReturnTypeOverride:", "-\t\tcase IProblem.UnsafeRawGenericMethodInvocation:", "-\t\tcase IProblem.UnsafeRawGenericConstructorInvocation:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.UncheckedTypeOperation);", "-", "-\t\tcase IProblem.MissingOverrideAnnotation:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.MissingOverrideAnnotation);", "-\t\t\t", "-\t\tcase IProblem.FieldMissingDeprecatedAnnotation:", "-\t\tcase IProblem.MethodMissingDeprecatedAnnotation:", "-\t\tcase IProblem.TypeMissingDeprecatedAnnotation:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.MissingDeprecatedAnnotation);", "-\t\t\t", "-\t\tcase IProblem.FinalBoundForTypeVariable:", "-\t\t    return customOptions().getSeverity(CompilerOptions.FinalParameterBound);", "-", "-\t\tcase IProblem.MissingSerialVersion:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.MissingSerialVersion);", "-\t\t", "-\t\tcase IProblem.ForbiddenReference:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.ForbiddenReference);", "-", "-\t\tcase IProblem.DiscouragedReference:", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.DiscouragedReference);", "-", "-\t\tcase IProblem.MethodVarargsArgumentNeedCast :", "-\t\tcase IProblem.ConstructorVarargsArgumentNeedCast :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.VarargsArgumentNeedCast);", "-", "-\t\tcase IProblem.LocalVariableCannotBeNull :", "-\t\tcase IProblem.LocalVariableCanOnlyBeNull :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.NullReference);", "-\t\t\t", "-\t\tcase IProblem.BoxingConversion :", "-\t\tcase IProblem.UnboxingConversion :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.Autoboxing);", "-", "-\t\tcase IProblem.MissingEnumConstantCase :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.IncompleteEnumSwitch);", "-\t\t\t", "-\t\tcase IProblem.VarargsConflict :", "-\t\t\treturn Warning;", "-\t\t\t", "-\t\tcase IProblem.AnnotationTypeUsedAsSuperInterface :", "-\t\t\treturn customOptions().getSeverity(CompilerOptions.AnnotationSuperInterface);", "-\t\t\t", "-\t\t/*", "-\t\t * Javadoc syntax errors", "-\t\t */", "-\t\tcase IProblem.JavadocUnexpectedTag:", "-\t\tcase IProblem.JavadocDuplicateReturnTag:", "-\t\tcase IProblem.JavadocInvalidThrowsClass:", "-\t\tcase IProblem.JavadocInvalidSeeReference:", "-\t\tcase IProblem.JavadocInvalidParamTagName:", "-\t\tcase IProblem.JavadocInvalidParamTagTypeParameter:", "-\t\tcase IProblem.JavadocMalformedSeeReference:", "-\t\tcase IProblem.JavadocInvalidSeeHref:", "-\t\tcase IProblem.JavadocInvalidSeeArgs:", "-\t\tcase IProblem.JavadocInvalidTag:", "-\t\tcase IProblem.JavadocUnterminatedInlineTag:", "-\t\tcase IProblem.JavadocMissingHashCharacter:", "-\t\tcase IProblem.JavadocEmptyReturnTag:", "-\t\tcase IProblem.JavadocUnexpectedText:", "-\t\t\tCompilerOptions cOptions = customOptions();", "-\t\t\tif (cOptions.docCommentSupport) {", "-\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "-\t\t\t} else {", "-\t\t\t\treturn ProblemSeverities.Ignore;", "-\t\t\t}", "-", "-\t\t\tcOptions = customOptions();", "-\t\t\tif (cOptions.docCommentSupport && cOptions.reportInvalidJavadocTags) {", "-\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tif (!this.options.reportInvalidJavadocTags) {", "+\t\t\t\treturn ProblemSeverities.Ignore;\t\t", "-\t\t\treturn ProblemSeverities.Ignore;", "-", "+\t\t\tbreak;", "-\t\t\tcOptions = customOptions();", "-\t\t\tif (cOptions.docCommentSupport && cOptions.reportInvalidJavadocTags && cOptions.reportInvalidJavadocTagsDeprecatedRef) {", "-\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tif (!(this.options.reportInvalidJavadocTags && this.options.reportInvalidJavadocTagsDeprecatedRef)) {", "+\t\t\t\treturn ProblemSeverities.Ignore;", "-\t\t\treturn ProblemSeverities.Ignore;", "-", "+\t\t\tbreak;", "-\t\t\tcOptions = customOptions();", "-\t\t\tif (cOptions.docCommentSupport && cOptions.reportInvalidJavadocTags && cOptions.reportInvalidJavadocTagsNotVisibleRef) {", "-\t\t\t\treturn cOptions.getSeverity(CompilerOptions.InvalidJavadoc);", "+\t\t\tif (!(this.options.reportInvalidJavadocTags && this.options.reportInvalidJavadocTagsNotVisibleRef)) {", "+\t\t\t\treturn ProblemSeverities.Ignore;\t\t\t", "-\t\t\treturn ProblemSeverities.Ignore;", "-", "-\t\t/*", "-\t\t * Javadoc missing tags errors", "-\t\t */", "-\t\tcase IProblem.JavadocMissingParamTag:", "-\t\tcase IProblem.JavadocMissingReturnTag:", "-\t\tcase IProblem.JavadocMissingThrowsTag:", "-\t\t\tcOptions = customOptions();", "-\t\t\tif (cOptions.docCommentSupport) {", "-\t\t\t\treturn cOptions.getSeverity(CompilerOptions.MissingJavadocTags);", "-\t\t\t} else {", "-\t\t\t\treturn ProblemSeverities.Ignore;", "-\t\t\t}", "-", "-\t\t/*", "-\t\t * Missing Javadoc errors", "-\t\t */", "-\t\tcase IProblem.JavadocMissing:", "-\t\t\tcOptions = customOptions();", "-\t\t\tif (cOptions.docCommentSupport) {", "-\t\t\t\treturn cOptions.getSeverity(CompilerOptions.MissingJavadocComments);", "-\t\t\t} else {", "-\t\t\t\treturn ProblemSeverities.Ignore;", "-\t\t\t}", "-\t\t\t", "-\t\t// by default problems are errors.", "-\t\tdefault:", "-\t\t\treturn Error;", "+\t\t\tbreak;", "+\tlong irritant = getIrritant(problemID);", "+\tif (irritant != 0) {", "+\t\tif ((problemID & IProblem.Javadoc) != 0 && !this.options.docCommentSupport) ", "+\t\t\treturn ProblemSeverities.Ignore;", "+\t\treturn this.options.getSeverity(irritant);", "+\t}", "+\treturn Error;"]}], "num": 37754}