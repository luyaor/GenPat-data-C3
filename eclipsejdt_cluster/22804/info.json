{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc550b074a7ff90d00274e54014b241f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a7169fc496647af6cf48464902310b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matches((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c92c3234285e9232a13abf2e2c3364d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matches((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82583c872a86ada5ba1f3530ca67f5d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matches((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca25d07d1cacc8b3f298ba98d89db755", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matches((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn IMPOSSIBLE_MATCH;\r", "-}\r"]}], "num": 22804}