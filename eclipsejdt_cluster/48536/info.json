{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f97b7abe9430d5920eecee5203467011", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a88a04618dab1141aaca4f9d1471af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkComment()", "diff": ["-public void checkAnnotation() {", "-\tsuper.checkAnnotation();", "-\tif (this.annotation != null) {", "-\t\t// Search for pattern locator matches in annotation @throws/@exception tags", "-\t\tTypeReference[] thrownExceptions = this.annotation.thrownExceptions;", "+public void checkComment() {", "+\tsuper.checkComment();", "+\tif (this.javadoc != null) {", "+\t\t// Search for pattern locator matches in javadoc comment @throws/@exception tags", "+\t\tTypeReference[] thrownExceptions = this.javadoc.thrownExceptions;", "-\t\t// Search for pattern locator matches in annotation @see tags", "-\t\tExpression[] references = this.annotation.references;", "+\t\t// Search for pattern locator matches in javadoc comment @see tags", "+\t\tExpression[] references = this.javadoc.references;", "-\t\t\t} else if (reference instanceof AnnotationFieldReference) {", "-\t\t\t\tAnnotationFieldReference fieldRef = (AnnotationFieldReference) reference;", "+\t\t\t} else if (reference instanceof JavadocFieldReference) {", "+\t\t\t\tJavadocFieldReference fieldRef = (JavadocFieldReference) reference;", "-\t\t\t} else if (reference instanceof AnnotationMessageSend) {", "-\t\t\t\tAnnotationMessageSend messageSend = (AnnotationMessageSend) reference;", "+\t\t\t} else if (reference instanceof JavadocMessageSend) {", "+\t\t\t\tJavadocMessageSend messageSend = (JavadocMessageSend) reference;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9570aa1de373c22aa208eaa9e4b2f6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["+", "+\t\t// Search for pattern locator matches in javadoc comment parameters @param tags", "+\t\tJavadocSingleNameReference[] paramReferences = this.javadoc.paramReferences;", "+\t\tint length = paramReferences == null ? 0 : paramReferences.length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tthis.patternLocator.match(paramReferences[i], this.nodeSet);", "+\t\t}", "+", "+\t\t// Search for pattern locator matches in javadoc comment type parameters @param tags", "+\t\tJavadocSingleTypeReference[] paramTypeParameters = this.javadoc.paramTypeParameters;", "+\t\tlength = paramTypeParameters == null ? 0 : paramTypeParameters.length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tthis.patternLocator.match(paramTypeParameters[i], this.nodeSet);", "+\t\t}", "+", "-\t\tint throwsTagsLength = thrownExceptions == null ? 0 : thrownExceptions.length;", "-\t\tfor (int i = 0; i < throwsTagsLength; i++) {", "-\t\t\tTypeReference typeRef = thrownExceptions[i];", "-\t\t\tthis.patternLocator.match(typeRef, this.nodeSet);", "+\t\tlength = thrownExceptions == null ? 0 : thrownExceptions.length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tthis.patternLocator.match(thrownExceptions[i], this.nodeSet);", "-\t\tint seeTagsLength = references == null ? 0 : references.length;", "-\t\tfor (int i = 0; i < seeTagsLength; i++) {", "+\t\tlength = references == null ? 0 : references.length;", "+\t\tfor (int i = 0; i < length; i++) {"]}], "num": 48536}