{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d77c25eb74f451e9fe221f1c4e647aa9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af809de9f1e7bd869ba294c6a5baa66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/Java2HTMLEntityReader.java", "commitBeforeChange": "b062bd86aeb9c96cbf5c4a4ae6cefe495af03e5c", "commitAfterChange": "a7c3f2b32bf7e1b696aafc0629de9c57a469c8f4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected String computeSubstitution(int c)", "signatureAfterChange": " \tprotected String computeSubstitution(int c)", "diff": ["-\t\tString lookup= (String) fgEntityLookup.get(String.valueOf((char) c));", "-\t\treturn lookup;", "+\t\t/*", "+\t\t * When @ is first on a line, translate it to &#064; so it isn't", "+\t\t * misinterpreted as a Javadoc tag.", "+\t\t * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=197169", "+\t\t */", "+\t\tif (c == '@')", "+\t\t\treturn this.beginLine ? \"&#064;\" : null; //$NON-NLS-1$", "+\t\telse if (c == '\\n' || c == '\\r')", "+\t\t\tthis.beginLine = true;", "+\t\telse if (!ScannerHelper.isWhitespace((char) c)) {", "+\t\t\tthis.beginLine = false;", "+\t\t}", "+\t\treturn (String) fgEntityLookup.get(String.valueOf((char) c));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b0556d825afdb4328c272668736687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ae74c3a029060b6d3cf931c296e1169709de4671", "commitAfterChange": "9dce3cd8f36a06622ce5a63ff65421eea4dd5d9f", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\t\t\tString containerString = CP_ENTRY_IGNORE;", "+\t\t\t\tString containerString = null;", "+\t\t\t\t\tif (container == null) {", "+\t\t\t\t\t\t// container has not been initiliazed yet, use previous session value", "+\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=73969)", "+\t\t\t\t\t\tcontainer = getPreviousSessionContainer(containerPath, project);", "+\t\t\t\t\t}", "-\t\t\t\t\t// could not encode entry: leave it as CP_ENTRY_IGNORE", "+\t\t\t\t\t// could not encode entry: will not persist", "-\t\t\t\tpreferences.put(containerKey, containerString);", "+\t\t\t\tif (containerString != null)", "+\t\t\t\t\tpreferences.put(containerKey, containerString);", "-", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5bfa9c59cbba61173749af461ebe74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "4daf5798806511c91f97f95283d45690e7f165fa", "commitAfterChange": "6e51f9fbccbd96945f6930d913a998a8346308ac", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  \tfinal void doTextInsert(int insertOffset, ASTNode node, int initialIndentLevel, boolean removeLeadingIndent, TextEditGroup editGroup)", "signatureAfterChange": "  \tfinal void doTextInsert(int insertOffset, ASTNode node, int initialIndentLevel, boolean removeLeadingIndent, TextEditGroup editGroup)", "diff": ["-\t\t\t\tString destIndentString=  this.formatter.getIndentString(getCurrentLine(formatted, offset));", "+\t\t\t\t// If in the first line, there are cases (eg: catch clause) where the line will not be prefixed with ", "+\t\t\t\t// proper indentation - see https://bugs.eclipse.org/bugs/show_bug.cgi?id=350285", "+\t\t\t\tint lineOffset = getCurrentLineStart(formatted, offset);", "+\t\t\t\tString destIndentString = (lineOffset == 0)", "+\t\t\t\t\t\t? this.formatter.createIndentString(initialIndentLevel)", "+\t\t\t\t\t\t: this.formatter.getIndentString(formatted.substring(lineOffset, offset));"]}], "num": 19834}