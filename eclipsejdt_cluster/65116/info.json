{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95f12bb5ffb296772a0a134b1096813b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09516f9e1f4040b03916256103c8a79d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "3c24f3c5868942545b866a06aea7ff0e6d501ace", "commitAfterChange": "c52bf9c9641831c37e7ba4fe251dcc6debca74a5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportSuperfluousSemicolon,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"semicolon\")) {//$NON-NLS-1$ ", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSuperfluousSemicolon,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a284dbcb088c8396be394224cc2339", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "cc370a50ac7ec603f065f1e6278826253518f4d4", "commitAfterChange": "1ae189eb0affddcddb5cf43f9552f434a9d25d38", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\toptions.put(", "+\t\t\t\t\tCompilerOptions.OPTION_ReportStaticAccessReceiver,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\t\t} else if (token.equals(\"staticReceiver\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportStaticAccessReceiver,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96307ea93aabcc42c46ad547c2817a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "fa6e92df9d3db7e8cd1dd939b87ce17fd6a25504", "commitAfterChange": "669b9af0f5a06f4381a84a633c0be85e376c6f3e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "+\t\t\t\t\tCompilerOptions.IGNORE);", "+\t\t\t\toptions.put(", "+\t\t\t\t\t} else if (token.equals(\"noOpAssign\")) { //$NON-NLS-1$", "+\t\t\t\t\t\toptions.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNoEffectAssignment,", "+\t\t\t\t\t\t\tCompilerOptions.WARNING);"]}], "num": 65116}