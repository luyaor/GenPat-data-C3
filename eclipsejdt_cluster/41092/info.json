{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0673bb3909dba7a628b29c1dad184c3c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8010c1c1282a749789a5142cc2facdce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "26bbc0f1d79a90c550f0bbb95cc6eeae2aa4e3bf", "commitAfterChange": "3b79f63e00cbebb1fe326313cd6905bd51bae92d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptImport(int declarationStart, int declarationEnd, char[][] tokens, boolean onDemand, int modifiers)", "signatureAfterChange": " public void acceptImport(int declarationStart, int declarationEnd, char[][] tokens, boolean onDemand, int modifiers)", "diff": ["-\tImportContainer importContainer= createImportContainer(parentCU);", "-\tif (this.importContainerInfo == null) {", "-\t\tthis.importContainerInfo = new JavaElementInfo();", "-\t\tJavaElementInfo parentInfo = (JavaElementInfo) this.infoStack.peek();", "-\t\taddToChildren(parentInfo, importContainer);", "-\t\tthis.newElements.put(importContainer, this.importContainerInfo);", "+\tif (this.importContainer == null) {", "+\t\tthis.importContainer = createImportContainer(parentCU);", "+\t\tthis.importContainerInfo = new ImportContainerInfo();", "+\t\tObject parentInfo = this.infoStack.peek();", "+\t\taddToChildren(parentInfo, this.importContainer);", "+\t\tthis.newElements.put(this.importContainer, this.importContainerInfo);", "-\tImportDeclaration handle = createImportDeclaration(importContainer, elementName, onDemand);", "+\tImportDeclaration handle = createImportDeclaration(this.importContainer, elementName, onDemand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8fe7f41a0497b4a66815bdebcf84526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1bbd363622ec3abe41252dbdd3db2116c2dbd8d5", "commitAfterChange": "a9eb0f9efda6e3ba532fc37dccaaacc16601b2a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "diff": ["+\t\tsuper(settings);\r", "-\t\toptions = new AssistOptions(settings);\r", "-\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "-\r", "-\t\t\t\tcompilerOptions,\r", "+\t\t\t\tthis.compilerOptions,\r", "-\t\t\tnew CompletionParser(problemReporter, compilerOptions.assertMode);\r", "+\t\t\tnew CompletionParser(problemReporter, this.compilerOptions.assertMode);\r", "-\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t\t\tnew LookupEnvironment(this, this.compilerOptions, problemReporter, nameEnvironment);\r", "-\t\t\tnew Scanner(false, false, false, compilerOptions.assertMode);\r", "+\t\t\tnew Scanner(false, false, false, this.compilerOptions.assertMode);\r"]}], "num": 41092}