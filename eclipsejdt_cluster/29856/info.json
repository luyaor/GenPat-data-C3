{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ada1d2c5b3a46e21d2a4c826c2b08dee", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71081ee1755bb69b52e7f156f3e0d174", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionJavadoc.java", "commitBeforeChange": "1283becde4269d4bd1b131ede84504f893ae6981", "commitAfterChange": "24071af935ae982264becd6377e49aeb82ae6605", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void internalResolve(Scope scope)", "signatureAfterChange": " \tprivate void internalResolve(Scope scope)", "diff": ["+\t\t} else if (this.inheritDocSelected) {", "+\t\t\t// no selection node when inheritDoc tag is selected", "+\t\t\t// But we need to detect it to enable code select on inheritDoc", "+\t\t\tReferenceContext referenceContext = scope.referenceContext();", "+\t\t\tif (referenceContext instanceof MethodDeclaration) {", "+\t\t\t\tthrow new SelectionNodeFound(((MethodDeclaration) referenceContext).binding);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e52dc1921f3a2c4fff7de5fb2fc4d4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "7eeea60289161cbc82181c2049d38d6375b340c4", "commitAfterChange": "bac0b688c9760eba84723fa01c9ef8fce3bf0175", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  protected TypeBinding findMethodBinding(BlockScope scope)", "signatureAfterChange": "  protected TypeBinding findMethodBinding(BlockScope scope)", "diff": ["+\tReferenceContext referenceContext = scope.methodScope().referenceContext;", "+\tif (referenceContext instanceof LambdaExpression) {", "+\t\tthis.outerInferenceContext = ((LambdaExpression) referenceContext).inferenceContext;", "+\t}"]}], "num": 29856}