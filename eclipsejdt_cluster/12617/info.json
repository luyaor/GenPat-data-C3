{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e66ac8ef8f6ea1114d4053b016da7fd8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a6f67596405a72b231e981967f31b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "ddf48a7e21056eecd0111cd750a59c8617c397eb", "commitAfterChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic void _testNullTypeInference3c()", "signatureAfterChange": " \tpublic void testNullTypeInference3c()", "diff": ["-\tpublic void _testNullTypeInference3c() { ", "+\tpublic void testNullTypeInference3c() { ", "-\t\t\t\"1. ERROR in Generics.java (at line 14)\\n\" + ", "+\t\t\t\"1. WARNING in Generics.java (at line 13)\\n\" + ", "+\t\t\t\"\tCollection<@Nullable String> result = map1(inList, f);\\n\" + ", "+\t\t\t\"\t                                           ^^^^^^\\n\" + ", "+\t\t\t\"Null type safety (type annotations): The expression of type \\'@NonNull List<Object>\\' needs unchecked conversion to conform to \\'Collection<@NonNull Object>\\'\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in Generics.java (at line 14)\\n\" + ", "-\t\t\t\"Contradictory null annotations: method was inferred as \\'Collection<@NonNull String> map2(Collection<@NonNull @Nullable Object>, Function<@NonNull @Nullable Object,@NonNull String>)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + ", "+\t\t\t\"Null type safety (type annotations): The expression of type \\'@NonNull List<Object>\\' needs unchecked conversion to conform to \\'Collection<@Nullable Object>\\'\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in Generics.java (at line 14)\\n\" + ", "+\t\t\t\"\tmap2(inList, f);\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): required \\'Function<@Nullable Object,@NonNull String>\\' but this expression has type \\'MyFunc\\', corresponding supertype is \\'Function<@NonNull Object,@Nullable String>\\'\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "359492e2a188e9620b19e25abb93f157", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": " \tpublic void test274()", "signatureAfterChange": " \tpublic void test274()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic List useList(List l) {\\n\" + ", "+\t\t\t\"\t       ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tpublic List useList(List l) {\\n\" + ", "+\t\t\t\"\t                    ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfae5606db347e8c175760030f9dc345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "925bd3d2cce975e2fc83ac113f8d3bc0c1c973f9", "commitAfterChange": "58de6f137d08c13c9fea4a7115d63c9a6f7786b6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \tpublic void test031() throws Exception", "signatureAfterChange": "\r \tpublic void test031() throws Exception", "diff": ["+\r", "+\t\t\t\t\t\"java/lang/annotation/ElementType.java\",\r", "+\t\t\t\t\t\"package java.lang.annotation;\\n\" +\r", "+\t\t\t\t\t\"public enum ElementType {\\n\" +\r", "+\t\t\t\t\t\"    TYPE,\\n\" +\r", "+\t\t\t\t\t\"    FIELD,\\n\" +\r", "+\t\t\t\t\t\"    METHOD,\\n\" +\r", "+\t\t\t\t\t\"    PARAMETER,\\n\" +\r", "+\t\t\t\t\t\"    CONSTRUCTOR,\\n\" +\r", "+\t\t\t\t\t\"    LOCAL_VARIABLE,\\n\" +\r", "+\t\t\t\t\t\"    ANNOTATION_TYPE,\\n\" +\r", "+\t\t\t\t\t\"    PACKAGE,\\n\" +\r", "+\t\t\t\t\t\"    TYPE_PARAMETER,\\n\" +\r", "+\t\t\t\t\t\"    TYPE_USE\\n\" +\r", "+\t\t\t\t\t\"}\\n\"\r", "-\t\t\t\t/* TODO(Srikanth/Jay) when JSR308 enabled runtime becomes available for testing, the first error message should be deleted. */\r", "-\t\t\t\t\"----------\\n\" + \r", "-\t\t\t\t\"1. ERROR in Marker.java (at line 3)\\n\" + \r", "-\t\t\t\t\"\t@Target(TYPE_USE)\\n\" + \r", "-\t\t\t\t\"\t        ^^^^^^^^\\n\" + \r", "-\t\t\t\t\"TYPE_USE cannot be resolved to a variable\\n\" + \r", "-\t\t\t\t\"----------\\n\" + \r"]}], "num": 12617}