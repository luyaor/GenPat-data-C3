{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd0ab3a73de9f1ab1ef18532e79c5269", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18cfe51f60187937cc9153c179d505ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "diff": ["-\t\t\tif (originalVariable.rank < length && typeVariables[originalVariable.rank] == originalVariable) {", "+\t\t\tif (originalVariable.rank < length && TypeBinding.equalsEquals(typeVariables[originalVariable.rank], originalVariable)) {", "-\t\t\t\t\t    }", "-\t\t\t    \t return currentType.arguments[originalVariable.rank];", "+\t\t\t\t\t }", "+\t\t\t    \t TypeBinding substitute = currentType.arguments[originalVariable.rank];", "+\t\t\t    \t return originalVariable.hasTypeAnnotations() ? this.environment.createAnnotatedType(substitute, originalVariable.getTypeAnnotations()) : substitute;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9f979b5f9aa2d40d88a46bcd472f47a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeVariableBinding originalVariable)", "diff": ["-        if (originalVariable.rank < length && variables[originalVariable.rank] == originalVariable) {", "-\t\t\treturn this.typeArguments[originalVariable.rank];", "+        if (originalVariable.rank < length && TypeBinding.equalsEquals(variables[originalVariable.rank], originalVariable)) {", "+        \tTypeBinding substitute = this.typeArguments[originalVariable.rank];", "+        \treturn originalVariable.hasTypeAnnotations() ? this.environment.createAnnotatedType(substitute, originalVariable.getTypeAnnotations()) : substitute;"]}], "num": 21274}