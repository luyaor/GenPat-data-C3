{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc197e7dbfe4e10ebd5f8163aa159604", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e807e767df14134d2302602b0fe65b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "signatureAfterChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "diff": ["+\t\t\tClasspathEntry classpathEntry = (ClasspathEntry) root.getRawClasspathEntry();", "-\t\t\t\tcpLocations[index++] = new ClasspathJar(zipFile, ((ClasspathEntry) root.getRawClasspathEntry()).getAccessRuleSet());", "+\t\t\t\tcpLocations[index++] = new ClasspathJar(zipFile, classpathEntry.getAccessRuleSet(), classpathEntry.getExternalAnnotationPath());", "-\t\t\t\t\tcpLocations[index++] = ClasspathLocation.forBinaryFolder((IContainer) target, false, ((ClasspathEntry) root.getRawClasspathEntry()).getAccessRuleSet());", "+\t\t\t\t\tcpLocations[index++] = ClasspathLocation.forBinaryFolder((IContainer) target, false, classpathEntry.getAccessRuleSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765b5f1157fa015a1923f03b4e1ae3e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor) throws JavaModelException", "diff": ["-\tSearchableEnvironment environment = (SearchableEnvironment) ((JavaProject) getJavaProject()).getSearchableNameEnvironment();", "-\tNameLookup nameLookup = ((JavaProject) getJavaProject()).getNameLookup();", "-\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), JavaCore.getOptions());", "+\tJavaProject project = (JavaProject) getJavaProject();", "+\tSearchableEnvironment environment = (SearchableEnvironment) project.getSearchableNameEnvironment();", "+\tNameLookup nameLookup = project.getNameLookup();", "+\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), project.getOptions(true));", "-\t\tString encoding = JavaCore.getOption(JavaCore.CORE_ENCODING);", "+\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc44a7cfc8154dcdef846e0194127644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": " public void codeComplete(char[] snippet,int insertion,int position,char[][] localVariableTypeNames,char[][] localVariableNames,int[] localVariableModifiers,boolean isStatic,ICompletionRequestor requestor) throws JavaModelException", "diff": ["-\t", "-\tSearchableEnvironment environment = (SearchableEnvironment) ((JavaProject) getJavaProject()).getSearchableNameEnvironment();", "-\tNameLookup nameLookup = ((JavaProject) getJavaProject()).getNameLookup();", "-\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), JavaCore.getOptions());", "+\tJavaProject project = (JavaProject) getJavaProject();", "+\tSearchableEnvironment environment = (SearchableEnvironment) project.getSearchableNameEnvironment();", "+\tNameLookup nameLookup = project.getNameLookup();", "+\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), project.getOptions(true));", "-\t\tString encoding = JavaCore.getOption(JavaCore.CORE_ENCODING); ", "+\t\tString encoding = project.getOption(JavaCore.CORE_ENCODING, true); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec131509216ae25a83ccf23f79c40664", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": " protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor) throws JavaModelException", "diff": ["-\tSearchableEnvironment environment = (SearchableEnvironment) ((JavaProject) getJavaProject()).getSearchableNameEnvironment();", "-\tNameLookup nameLookup = ((JavaProject) getJavaProject()).getNameLookup();", "+\tJavaProject project = (JavaProject) getJavaProject();", "+\tSearchableEnvironment environment = (SearchableEnvironment) project.getSearchableNameEnvironment();", "+\tNameLookup nameLookup = project.getNameLookup();", "-\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), JavaCore.getOptions());", "+\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), project.getOptions(true));"]}], "num": 69680}