{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4163b2ef593f8916394f9f8d5e3af725", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322e31b3ee91e14d0a8c939b3aa30588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": " \tpublic void test051a()", "signatureAfterChange": " \tpublic void test051a()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" +", "+\t\t\t\"\tvoid foo(A<String> a) {}\\n\" +", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Method foo(A<String>) has the same erasure foo(A<T>) as another method in type X\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36b297c614377ef5c63af4945e15c26b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "75fd26922e4c1a3951587500ef0d4c4aec9b93ba", "commitAfterChange": "ec933200149b0beb2aa7f1482e62f6a573c5bd61", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "     public void test174()", "signatureAfterChange": "     public void test174()", "diff": ["-    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=97220", "+    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=97220 - variation", "-            \"----------\\n\" + ", "-    \t\t\"1. WARNING in X.java (at line 12)\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 11)\\n\" + ", "+    \t\t\"\t@SuppressWarnings(\\\"serial\\\")\\n\" + ", "+    \t\t\"\t                  ^^^^^^^^\\n\" + ", "+    \t\t\"Unnecessary @SuppressWarnings(\\\"serial\\\")\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in X.java (at line 12)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c57f341f0dd28dcaeda75872d4d42c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": " \tpublic void test054a()", "signatureAfterChange": " \tpublic void test054a()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "+\t\t\t\"\tString a(X x) {  return null; }\\n\" +", "+\t\t\t\"\t       ^^^^^^\\n\" +", "+\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 7)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da09a3226bf8bdc076d4679dd21fb81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic void test0035()", "signatureAfterChange": "  \tpublic void test0035()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" +", "+\t\t\t\"\tvoid foo(E e, Thread t){}\\n\" +", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Method foo(E, Thread) has the same erasure foo(Exception, Thread) as another method in type X<E,T>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4993aa21e0c261668a52024d8f631148", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "75fd26922e4c1a3951587500ef0d4c4aec9b93ba", "commitAfterChange": "ec933200149b0beb2aa7f1482e62f6a573c5bd61", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "     public void test172()", "signatureAfterChange": "     public void test172()", "diff": ["-    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=97220", "+    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=97220 - variation", "-    \t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+    \t\t\"\t@SuppressWarnings(\\\"serial\\\")\\n\" + ", "+    \t\t\"\t                  ^^^^^^^^\\n\" + ", "+    \t\t\"Unnecessary @SuppressWarnings(\\\"serial\\\")\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa933596000969853dab97841ac8aef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tpublic void test050f()", "signatureAfterChange": " \tpublic void test050f()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" +", "+\t\t\t\"\t<N extends B> N a(A<String> s) { return null; }\\n\" +", "+\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Method a(A<String>) has the same erasure a(A<T>) as another method in type X\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95fbfc78f9dc8055397c639ab967c166", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "\r \tpublic void testBug391315()", "signatureAfterChange": "\r \tpublic void testBug391315()", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + \r", "+\t\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + \r", "+\t\t\t\t\"\tX<@Marker ?> l;\\n\" + \r", "+\t\t\t\t\"\t  ^^^^^^^\\n\" + \r", "+\t\t\t\t\"The annotation @Marker is disallowed for this location\\n\" + \r", "+\t\t\t\t\"----------\\n\" + \r", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1fc6e516aaeb522bc46c39f61d26ec1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SerialVersionUIDTests.java", "commitBeforeChange": "34420b68eb797510644f3cf500d173864737a241", "commitAfterChange": "879ea9ced188291ab9fadfbc62fcd44bb0ea6163", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test007()", "signatureAfterChange": " public void test007()", "diff": ["+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=94352", "-\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\tabstract class A implements java.io.Serializable {}\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"The serializable class A does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc59baf5bfe68a58169634f72d158a00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void test041()", "signatureAfterChange": " \tpublic void test041()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X { public A foo() { return null; } }\\n\" + ", "+\t\t\t\"\t                        ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1f9739977a0a5ca3960c62899cbf82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "1f936417a416d90917cba09bee390af7aeeb85e8", "commitAfterChange": "cf0fc1d100d6a0dfa353e3125744fa10a50c8d3b", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic void testNullTypeInference3()", "signatureAfterChange": " \tpublic void testNullTypeInference3()", "diff": ["-\t\t\t\"1. ERROR in Generics.java (at line 6)\\n\" + ", "+\t\t\t\"1. ERROR in Generics.java (at line 4)\\n\" + ", "+\t\t\t\"\t<X> X m(@Nullable X a) { return null; }\\n\" + ", "+\t\t\t\"\t                                ^^^^\\n\" + ", "+\t\t\t\"Null type mismatch (type annotations): \\'null\\' is not compatible to the free type variable 'X'\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Generics.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc1196be09a463eee5203d795fbcd13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "commitAfterChange": "adfd584faf146517cb3e86f9f2b585f2851a3630", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " \tpublic void test397()", "signatureAfterChange": " \tpublic void test397()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 34)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 33)\\n\" + ", "+\t\t\t\"\tclass M2<I> implements M1<I> { \\n\" + ", "+\t\t\t\"\t      ^^\\n\" + ", "+\t\t\t\"Class must implement the inherited abstract method M1<I>.mm(M1<? extends I>)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 34)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee18d70f014a54e0d5bf9a76a81e092a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": " \tpublic void test054()", "signatureAfterChange": " \tpublic void test054()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" +", "+\t\t\t\"\tvoid a(Object x) {}\\n\" +", "+\t\t\t\"\t     ^^^^^^^^^^^\\n\" +", "+\t\t\t\"Method a(Object) has the same erasure a(Object) as another method in type X\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" +"]}], "num": 68663}