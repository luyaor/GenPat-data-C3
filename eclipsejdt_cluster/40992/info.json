{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd2ace71faee02d0ecf797f8b9591698", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fee8c6959dc057753b62436c21e2c7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9a2a8805997295c2143a17a965cecf98f3f5c285", "commitAfterChange": "dd7e0befe5f4b4efa1d90a88b401f835036754dd", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " protected void consumeDefaultLabel()", "signatureAfterChange": " protected void consumeDefaultLabel()", "diff": ["-protected void consumeDefaultLabel() {", "-\t// SwitchLabel ::= 'default' ':'", "-\tpushOnAstStack(new CaseStatement(null, this.intStack[this.intPtr--], this.intStack[this.intPtr--]));", "-}", "+}", "+protected void consumeDefaultLabel() {", "+\t// SwitchLabel ::= 'default' ':'", "+\tCaseStatement defaultStatement = new CaseStatement(null, this.intStack[this.intPtr--], this.intStack[this.intPtr--]);", "+\t// Look for $fall-through$ tag in leading comment for case statement", "+\tif (hasLeadingTagComment(FALL_THROUGH_TAG, defaultStatement.sourceStart)) {", "+\t\tdefaultStatement.bits |= ASTNode.DocumentedFallthrough;", "+\t}\t", "+\tpushOnAstStack(defaultStatement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6472ead62f4688d0b3c0e80283631a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9a2a8805997295c2143a17a965cecf98f3f5c285", "commitAfterChange": "dd7e0befe5f4b4efa1d90a88b401f835036754dd", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 69, "signatureBeforeChange": " protected void consumeCaseLabel()", "signatureAfterChange": " protected void consumeCaseLabel()", "diff": ["-\tpushOnAstStack(new CaseStatement(expression, expression.sourceEnd, this.intStack[this.intPtr--]));", "+\tCaseStatement caseStatement = new CaseStatement(expression, expression.sourceEnd, this.intStack[this.intPtr--]);", "+\t// Look for $fall-through$ tag in leading comment for case statement", "+\tif (hasLeadingTagComment(FALL_THROUGH_TAG, caseStatement.sourceStart)) {", "+\t\tcaseStatement.bits |= ASTNode.DocumentedFallthrough;", "+\t}", "+\tpushOnAstStack(caseStatement);"]}], "num": 40992}