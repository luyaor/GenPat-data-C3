{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9246ab1c5b985877f911eedb4a4ec9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191957317bbd6e18d33373d4be84f095", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "0c46c5213b09d0da0f69c7b26f904c0f9c4b8264", "commitAfterChange": "5bd4bb71a504f8c91120347898b17a55db5d46e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \r \r protected void buildStructure(OpenableElementInfo info, IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " \r \r protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "diff": ["-protected void buildStructure(OpenableElementInfo info, IProgressMonitor pm) throws JavaModelException {\r", "+protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException {\r", "+\r", "+\tif (monitor != null && monitor.isCanceled()) return;\r", "-\tinfo.setIsStructureKnown(generateInfos(info, pm, newElements, getUnderlyingResource()));\r", "+\tinfo.setIsStructureKnown(generateInfos(info, monitor, newElements, getUnderlyingResource()));\r", "+\t// problem detection \r", "+\tif (monitor != null && monitor.isCanceled()) return;\r", "-\t// error detection\r", "-\t\tCompilationUnitProblemFinder.resolve(this, problemRequestor);\r", "+\t\tCompilationUnitProblemFinder.resolve(this, problemRequestor, monitor);\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a4c340e82f29f417c65432b3489ed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\tif (hasLocalType[i]) // NB: no-op if method bodies have been already parsed", "+\t\t\t\t\tif (hasLocalType[i]) { // NB: no-op if method bodies have been already parsed", "+\t\t\t\t\t\tif (monitor != null && monitor.isCanceled())", "+\t\t\t\t\t\t\tthrow new OperationCanceledException();", "+\t\t\t\t\t}", "+\t\t\t\t\tif (monitor != null && monitor.isCanceled())", "+\t\t\t\t\t\tthrow new OperationCanceledException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fe4f6c52787f69502b3e959dbf8f06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "080b357a2df4acf73e187d5ba5ec25647015e850", "commitAfterChange": "380d04d200948fa90f4cac08490b183a1a3837d7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic void checkExternalJarChanges(IProgressMonitor monitor)", "signatureAfterChange": "\r \tpublic void checkExternalJarChanges(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic void checkExternalJarChanges(IProgressMonitor monitor) {\r", "+\tpublic void checkExternalJarChanges(IProgressMonitor monitor) throws JavaModelException {\r", "+\t\t\t\t\r", "+\t\t\t\tif (monitor != null && monitor.isCanceled()) return; \r", "+\t\t\t\t\r", "-\t\t} catch (JavaModelException e) { // nothing can be done\r", "+\t\t\tif (monitor != null) monitor.done();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c3b84c931e8113945d43f0c051dc20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "0c46c5213b09d0da0f69c7b26f904c0f9c4b8264", "commitAfterChange": "5bd4bb71a504f8c91120347898b17a55db5d46e8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprotected static IProblemFactory getProblemFactory(final char[] fileName, final IProblemRequestor problemRequestor)", "signatureAfterChange": " \t \tprotected static IProblemFactory getProblemFactory( \t\tfinal char[] fileName,  \t\tfinal IProblemRequestor problemRequestor, \t\tfinal IProgressMonitor monitor)", "diff": ["-\tprotected static IProblemFactory getProblemFactory(final char[] fileName, final IProblemRequestor problemRequestor) {", "+\tprotected static IProblemFactory getProblemFactory(", "+\t\tfinal char[] fileName, ", "+\t\tfinal IProblemRequestor problemRequestor,", "+\t\tfinal IProgressMonitor monitor) {", "+\t\t\t\tif (monitor != null && monitor.isCanceled()){", "+\t\t\t\t\tthrow new AbortCompilation(true, null); // silent abort", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tif (monitor != null && monitor.isCanceled()){", "+\t\t\t\t\tthrow new AbortCompilation(true, null); // silent abort", "+\t\t\t\t}", "+"]}], "num": 4340}