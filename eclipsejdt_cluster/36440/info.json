{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92cb6a25cc033ea74101a3d368a69994", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28bbe007c736b667a902f5036af15c5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions,  \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLibraries, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions,  \t\tboolean generateOutput, \t\tboolean showCategory, \t\tboolean showWarningToken)", "diff": ["-\t */", "-\t\tString[] classLib,", "+\t\tString[] classLibraries,", "-    runNegativeTest(", "-\t\t  testFiles, ", "-\t\t  expectedProblemLog, ", "-\t\t  classLib,", "-\t\t  shouldFlushOutputDirectory, ", "-\t\t  customOptions, ", "-\t\t  generateOutput,", "-\t\t  showCategory,", "-\t\t  showWarningToken,", "-\t\t  false  /* do not skip javac for this peculiar test */,", "-\t\t  false  /* do not perform statements recovery */);", "+\t\trunTest(", "+\t\t\t// test directory preparation", "+\t\t\tshouldFlushOutputDirectory /* should flush output directory */,", "+\t\t\ttestFiles /* test files */,", "+\t\t\t// compiler options", "+\t\t\tclassLibraries /* class libraries */,", "+\t\t\tcustomOptions /* custom options */,", "+\t\t\tfalse, ", "+\t\t\tnew Requestor( /* custom requestor */", "+\t\t\t\t\tgenerateOutput,", "+\t\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\t\tshowCategory,", "+\t\t\t\t\tshowWarningToken),", "+\t\t\t// compiler results", "+\t\t\texpectedProblemLog == null || /* expecting compiler errors */", "+\t\t\t\texpectedProblemLog.indexOf(\"ERROR\") != -1,", "+\t\t\texpectedProblemLog,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tnull /* no vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\tnull /* do not check output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tfalse ? ", "+\t\t\t\t\tJavacTestOptions.SKIP : ", "+\t\t\t\t\tJavacTestOptions.DEFAULT /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80399a9c8f0042934b95c2dcfd36b084", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "e18e2062279631b50cbdb527a42eeb74dde9b023", "commitAfterChange": "b90ae111ff29246e99448511171a44d6aca74c50", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles, \t\tString expectedProblemLog, \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " protected void runNegativeTest(boolean skipJavac, JavacTestOptions javacTestOptions, String[] testFiles, String expectedCompilerLog)", "diff": ["+//\"\" /* expected compiler log */);", "+protected void runNegativeTest(boolean skipJavac, JavacTestOptions javacTestOptions, String[] testFiles, String expectedCompilerLog) {", "+\trunTest(", "+ \t\t// test directory preparation", "+\t\ttrue /* flush output directory */,", "+\t\ttestFiles /* test files */,", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tnull /* no custom options */,", "+\t\tfalse /* do not perform statements recovery */,", "+\t\tnew Requestor( /* custom requestor */", "+\t\t\t\tfalse,", "+\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\tfalse,", "+\t\t\t\tfalse),", "+\t\t// compiler results", "+\t\texpectedCompilerLog == null || /* expecting compiler errors */", "+\t\t\texpectedCompilerLog.indexOf(\"ERROR\") != -1,", "+\t\texpectedCompilerLog /* expected compiler log */,", "+\t\t// runtime options", "+\t\tfalse /* do not force execution */,", "+\t\tnull /* no vm arguments */,", "+\t\t// runtime results", "+\t\tnull /* do not check output string */,", "+\t\tnull /* do not check error string */,", "+\t\t// javac options", "+\t\tskipJavac ? JavacTestOptions.SKIP :", "+\t\t\tjavacTestOptions != null ? javacTestOptions :", "+\t\tJavacTestOptions.DEFAULT /* default javac test options */);", "+}", "-\t\trunTest(", "-\t\t\tshouldFlushOutputDirectory,", "-\t\t\ttestFiles,", "-\t\t\tclassLib,", "-\t\t\tnull,", "-\t\t\tfalse,", "-\t\t\tnew Requestor( /* custom requestor */", "-\t\t\t\t\tfalse,", "-\t\t\t\t\tnull /* no custom requestor */,", "-\t\t\t\t\tfalse,", "-\t\t\t\t\tfalse),", "-\t\t\t// compiler results", "-\t\t\texpectedProblemLog == null || /* expecting compiler errors */", "-\t\t\t\texpectedProblemLog.indexOf(\"ERROR\") != -1,", "-\t\t\texpectedProblemLog,", "-\t\t\t// runtime options", "-\t\t\tfalse /* do not force execution */,", "-\t\t\tnull /* no vm arguments */,", "-\t\t\t// runtime results", "-\t\t\tnull /* do not check output string */,", "-\t\t\tnull /* do not check error string */,", "-\t\t\t// javac options", "-\t\t\t/* false ?", "-\t\t\t\t\tJavacTestOptions.SKIP :*/", "-\t\t\t\t\tJavacTestOptions.DEFAULT /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f3ab47975f89c9a0a04891dab23a8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions)", "signatureAfterChange": "  \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedCompilerLog,  \t\tString[] classLibraries, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions)", "diff": ["-\t */", "-\t\tString expectedProblemLog, ", "-\t\tString[] classLib,", "+\t\tString expectedCompilerLog, ", "+\t\tString[] classLibraries,", "-\t\trunNegativeTest(", "-\t\t\ttestFiles, ", "-\t\t\texpectedProblemLog, ", "-\t\t\tclassLib, ", "-\t\t\tshouldFlushOutputDirectory, ", "-\t\t\tcustomOptions, ", "-\t\t\tfalse /* do not generate output */,", "-\t\t\tfalse /* do not show category */, ", "-\t\t\tfalse /* do not show warning token */, ", "-\t\t\tfalse  /* do not skip javac for this peculiar test */,", "-\t\t\tfalse  /* do not perform statements recovery */);", "+\t\trunTest(", "+\t \t\t// test directory preparation", "+\t\t\tshouldFlushOutputDirectory /* should flush output directory */,", "+\t\t\ttestFiles /* test files */,", "+\t\t\t// compiler options", "+\t\t\tclassLibraries /* class libraries */,", "+\t\t\tcustomOptions /* custom options */,", "+\t\t\tfalse /* do not perform statements recovery */, ", "+\t\t\tnew Requestor( /* custom requestor */", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tfalse),", "+\t\t\t// compiler results", "+\t\t\texpectedCompilerLog == null || /* expecting compiler errors */", "+\t\t\t\texpectedCompilerLog.indexOf(\"ERROR\") != -1,", "+\t\t\texpectedCompilerLog /* expected compiler log */,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tnull /* no vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\tnull /* do not check output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.DEFAULT /* default javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23ad75377cade926df9b23d8b90fccd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory)", "diff": ["-\t */", "+\t// WORK potential elimination candidate (24 calls) - else clean up inline", "-\t\trunNegativeTest(", "-\t\t\ttestFiles, ", "-\t\t\texpectedProblemLog, ", "-\t\t\tclassLib, ", "-\t\t\tshouldFlushOutputDirectory, ", "-\t\t\tnull /* no custom options */,", "-\t\t\tfalse /* do not generate output */,", "-\t\t\tfalse /* do not show category */, ", "-\t\t\tfalse /* do not show warning token */, ", "-\t\t\tfalse  /* do not skip javac for this peculiar test */,", "-\t\t\tfalse  /* do not perform statements recovery */);", "+\t\trunTest(", "+\t\t\tshouldFlushOutputDirectory,", "+\t\t\ttestFiles,", "+\t\t\tclassLib,", "+\t\t\tnull,", "+\t\t\tfalse, ", "+\t\t\tnew Requestor( /* custom requestor */", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tfalse),", "+\t\t\t// compiler results", "+\t\t\texpectedProblemLog == null || /* expecting compiler errors */", "+\t\t\t\texpectedProblemLog.indexOf(\"ERROR\") != -1,", "+\t\t\texpectedProblemLog,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tnull /* no vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\tnull /* do not check output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tfalse ? ", "+\t\t\t\t\tJavacTestOptions.SKIP : ", "+\t\t\t\t\tJavacTestOptions.DEFAULT /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca789ca9a7494a047fe44ca6a3dc56b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprotected void runNegativeTest(String[] testFiles, String expectedProblemLog)", "signatureAfterChange": "  \tprotected void runNegativeTest(String[] testFiles, String expectedCompilerLog)", "diff": ["-\t */", "-\tprotected void runNegativeTest(String[] testFiles, String expectedProblemLog) {", "-\t\trunNegativeTest(", "-\t\t\ttestFiles, ", "-\t\t\texpectedProblemLog, ", "-\t\t\tnull /* no extra class libraries */, ", "-\t\t\ttrue /* flush output directory */, ", "-\t\t\tnull /* no custom options */,", "-\t\t\tfalse /* do not generate output */,", "-\t\t\tfalse /* do not show category */, ", "-\t\t\tfalse /* do not show warning token */, ", "-\t\t\tfalse  /* do not skip javac for this peculiar test */,", "-\t\t\tfalse  /* do not perform statements recovery */);", "+", "+\tprotected void runNegativeTest(String[] testFiles, String expectedCompilerLog) {", "+\t\trunTest(", "+\t \t\t// test directory preparation", "+\t\t\ttrue /* flush output directory */,", "+\t\t\ttestFiles /* test files */,", "+\t\t\t// compiler options", "+\t\t\tnull /* no class libraries */,", "+\t\t\tnull /* no custom options */,", "+\t\t\tfalse /* do not perform statements recovery */, ", "+\t\t\tnew Requestor( /* custom requestor */", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tnull /* no custom requestor */,", "+\t\t\t\t\tfalse,", "+\t\t\t\t\tfalse),", "+\t\t\t// compiler results", "+\t\t\texpectedCompilerLog == null || /* expecting compiler errors */", "+\t\t\t\texpectedCompilerLog.indexOf(\"ERROR\") != -1,", "+\t\t\texpectedCompilerLog /* expected compiler log */,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tnull /* no vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\tnull /* do not check output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.DEFAULT /* default javac test options */);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf32e04c5afa5ac733e8d9e7c313e7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments,  \t\tMap customOptions, \t\tICompilerRequestor clientRequestor)", "signatureAfterChange": " \t \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedOutputString,  \t\tString[] classLibraries, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments,  \t\tMap customOptions, \t\tICompilerRequestor customRequestor)", "diff": ["+\t", "-\t\tString expectedSuccessOutputString, ", "-\t\tString[] classLib,", "+\t\tString expectedOutputString, ", "+\t\tString[] classLibraries,", "-\t\tICompilerRequestor clientRequestor) {", "-\t\trunConformTest(", "-\t\t  testFiles, ", "-\t\t  expectedSuccessOutputString, ", "-\t\t  classLib,", "-\t\t  shouldFlushOutputDirectory, ", "-\t\t  vmArguments, ", "-\t\t  customOptions,", "-\t\t  clientRequestor,", "-\t\t  false /* do not skip javac for this peculiar test */); ", "+\t\tICompilerRequestor customRequestor) {", "+\t\trunTest(", "+\t \t\t// test directory preparation", "+\t\t\tshouldFlushOutputDirectory /* should flush output directory */,", "+\t\t\ttestFiles /* test files */,", "+\t\t\t// compiler options", "+\t\t\tclassLibraries /* class libraries */,", "+\t\t\tcustomOptions /* custom options */,", "+\t\t\tfalse /* do not perform statements recovery */, ", "+\t\t\tcustomRequestor /* custom requestor */,", "+\t\t\t// compiler results", "+\t\t\tfalse /* expecting no compiler errors */,", "+\t\t\tnull /* do not check compiler log */,", "+\t\t\t// runtime options", "+\t\t\tfalse /* do not force execution */,", "+\t\t\tvmArguments /* vm arguments */, ", "+\t\t\t// runtime results", "+\t\t\texpectedOutputString /* expected output string */,", "+\t\t\tnull /* do not check error string */,", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.DEFAULT /* default javac test options */);"]}], "num": 36440}