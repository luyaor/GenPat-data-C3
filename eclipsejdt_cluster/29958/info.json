{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5a95a214a59581e32af00521d8241cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53508afda4fb5bd9dea6963ae0ac1132", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "e4cb11ce5006b834ab688f1f8723b617c88080a9", "commitAfterChange": "11f1358e49c275ae76b9b676e7f3fef7eb5220cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\t \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tNestedTypeBinding nestedType = null;", "-\t\t\t\t\tif (this.receiverType instanceof ParameterizedTypeBinding) {", "-\t\t\t\t\t\tnestedType = (NestedTypeBinding)((ParameterizedTypeBinding) this.receiverType).genericType();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tnestedType = (NestedTypeBinding) this.receiverType;", "-\t\t\t\t\t}", "+\t\t\t\t\tReferenceBinding nestedType = (ReferenceBinding) this.receiverType;", "-\t\t\t\t\t\tcurrentScope.problemReporter().noSuchEnclosingInstance(nestedType.enclosingType, this, false);", "+\t\t\t\t\t\tcurrentScope.problemReporter().noSuchEnclosingInstance(nestedType.enclosingType(), this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01d596395b86572cb7bb5fadc522743", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "b2f2db5aca4b5592810cb876316dc430449c50f8", "commitAfterChange": "423363127bfe75baf23fa282b4893f61b836a936", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void checkBounds(Scope scope)", "signatureAfterChange": " \tpublic void checkBounds(Scope scope)", "diff": ["-\t\tParameterizedTypeBinding parameterizedType = null;", "-\t\tif (this.resolvedType instanceof ParameterizedTypeBinding)", "-\t\t\tparameterizedType = (ParameterizedTypeBinding) this.resolvedType;", "-\t\telse if (this.resolvedType.isArrayType() && this.resolvedType.leafComponentType() instanceof ParameterizedTypeBinding)", "-\t\t\tparameterizedType = (ParameterizedTypeBinding) this.resolvedType.leafComponentType();", "-", "-\t\tif (parameterizedType != null) {", "+\t\tif (this.resolvedType.leafComponentType() instanceof ParameterizedTypeBinding) {", "+\t\t\tParameterizedTypeBinding parameterizedType = (ParameterizedTypeBinding) this.resolvedType.leafComponentType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec1bb890ef7716ba3fd3e9fb84f646d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PackageBinding.java", "commitBeforeChange": "24cf10e27c63373d484417e95718811352f381da", "commitAfterChange": "e9bb89dc23543a18464bde593c5e13d7044c6f22", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public Binding getTypeOrPackage(char[] name)", "signatureAfterChange": "  public Binding getTypeOrPackage(char[] name)", "diff": ["-\tPackageBinding packageBinding = getPackage0(name);", "-\tif (packageBinding != null && packageBinding != LookupEnvironment.TheNotFoundPackage)", "-\t\treturn packageBinding;", "-", "-\t// always look for the name as a sub-package if its not a known type", "-\tif (packageBinding == null && (packageBinding = findPackage(name)) != null)", "+\tPackageBinding packageBinding = getPackage0(name);", "+\tif (packageBinding != null && packageBinding != LookupEnvironment.TheNotFoundPackage)", "-\tif (typeBinding == null) {", "-\t\t// if no package was found, find the type named name relative to the receiver", "+", "+\tif (typeBinding == null) { // have not looked for it before", "-\t\t// Since name could not be found, add problem bindings", "+\t\t// Since name could not be found, add a problem binding", "-\t\taddNotFoundPackage(name);", "-\t} else {", "-\t\tif (packageBinding == LookupEnvironment.TheNotFoundPackage)", "-\t\t\tpackageBinding = null;", "-\t\tif (typeBinding == LookupEnvironment.TheNotFoundType)", "-\t\t\ttypeBinding = null;", "-\tif (packageBinding != null)", "-\t\treturn packageBinding;", "-\telse", "-\t\treturn typeBinding;", "+\tif (packageBinding == null) { // have not looked for it before", "+\t\tif ((packageBinding = findPackage(name)) != null)", "+\t\t\treturn packageBinding;", "+\t\taddNotFoundPackage(name);", "+\t}", "+", "+\treturn null;"]}], "num": 29958}