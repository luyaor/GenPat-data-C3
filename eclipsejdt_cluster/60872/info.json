{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a2f7a609b51b82a3110c064bbfc19a3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45bfce0e412dc6554195e4001a398352", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "325f3cd70524915aea7c5208cccbff17dcccc775", "commitAfterChange": "eaaeea046b340f91bd2146e38b8d80abded44679", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tif (monitor != null) monitor.beginTask(Messages.javamodel_initialization, 100);", "-\t\t\t// dummy query for waiting until the indexes are ready and classpath containers/variables are initialized", "-\t\t\tSearchEngine engine = new SearchEngine();", "-\t\t\tJavaModelManager.getJavaModelManager().deltaState.initializeRoots(); // initialize all containers and variables", "-\t\t\tIJavaSearchScope scope = SearchEngine.createWorkspaceScope(); // initialize all containers and variables", "+\t\t\tif (monitor != null) \tmonitor.beginTask(Messages.javamodel_initialization, 100);", "+\t\t\t", "+\t\t\t// initialize all containers and variables", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\t\tif (monitor != null) {", "+\t\t\t\t\tmonitor.subTask(Messages.javamodel_configuring_classpath_containers);", "+\t\t\t\t\tmanager.batchContainerInitializationsProgress.set(new SubProgressMonitor(monitor, 50)); // 50% of the time is spent in initializing containers and variables", "+\t\t\t\t}", "+\t\t\t\tmanager.deltaState.initializeRoots(); ", "+\t\t\t} finally {", "+\t\t\t\tmanager.batchContainerInitializationsProgress.set(null);", "+\t\t\t}", "+\t\t\t", "+\t\t\t// dummy query for waiting until the indexes are ready", "+\t\t\tSearchEngine engine = new SearchEngine();", "+\t\t\tIJavaSearchScope scope = SearchEngine.createWorkspaceScope();", "+\t\t\ttry {", "+\t\t\t\tif (monitor != null)", "+\t\t\t\t\tmonitor.subTask(Messages.javamodel_configuring_searchengine);", "-\t\t\t\t\tmonitor == null ? null : new SubProgressMonitor(monitor, 99) // 99% of the time is spent in the dummy search", "+\t\t\t\t\tmonitor == null ? null : new SubProgressMonitor(monitor, 49) // 49% of the time is spent in the dummy search", "+\t\t\tif (monitor != null)", "+\t\t\t\tmonitor.subTask(Messages.javamodel_getting_build_state_number);", "-\t\t\tfinal JavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();", "+\t\t\tfinal JavaModel model = manager.getJavaModel();", "+\t\t\t\tif (monitor != null)", "+\t\t\t\t\tmonitor.subTask(Messages.javamodel_building_after_upgrade);", "+\t\t\t\tif (monitor != null)", "+\t\t\t\t\tmonitor.subTask(Messages.javamodel_refreshing_external_jars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f2507d7eaba02a2823688cbede700c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementNotifier.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected char[][][] getArguments(Argument[] arguments)", "signatureAfterChange": " protected Object[][] getArgumentInfos(Argument[] arguments)", "diff": ["-protected char[][][] getArguments(Argument[] arguments) {", "+protected Object[][] getArgumentInfos(Argument[] arguments) {", "+\tParameterInfo[] parameterInfos = new ParameterInfo[argumentLength];", "-\t\targumentTypes[i] = CharOperation.concatWith(arguments[i].type.getParameterizedTypeName(), '.');", "-\t\targumentNames[i] = arguments[i].name;", "+\t\tArgument argument = arguments[i];", "+\t\targumentTypes[i] = CharOperation.concatWith(argument.type.getParameterizedTypeName(), '.');", "+\t\tchar[] name = argument.name;", "+\t\targumentNames[i] = name;", "+\t\tParameterInfo parameterInfo = new ParameterInfo();", "+\t\tparameterInfo.declarationStart = argument.declarationSourceStart;", "+\t\tparameterInfo.declarationEnd = argument.declarationSourceEnd;", "+\t\tparameterInfo.nameSourceStart = argument.sourceStart;", "+\t\tparameterInfo.nameSourceEnd = argument.sourceEnd;", "+\t\tparameterInfo.modifiers = argument.modifiers;", "+\t\tparameterInfo.name = name;", "+\t\tparameterInfos[i] = parameterInfo;", "-\treturn new char[][][] {argumentTypes, argumentNames};", "+\treturn new Object[][] { parameterInfos, new char[][][] { argumentTypes, argumentNames } };"]}], "num": 60872}