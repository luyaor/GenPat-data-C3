{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64cf213d246f0de14aae0cb98f122a6d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd6e087b3f11336f902289a4c5417b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "ec07f88d41fd14e7a0bc1cb4009f3d1ac7de54c3", "commitAfterChange": "05bd6362ebc3db4accc519070d9c8a9ecd2a788b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration buildCompilationUnit( \t\tISourceType[] sourceTypes, \t\tint flags, \t\tProblemReporter problemReporter, \t\tCompilationResult compilationResult)", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration buildCompilationUnit( \t\tISourceType[] sourceTypes, \t\tint flags, \t\tProblemReporter problemReporter, \t\tCompilationResult compilationResult)", "diff": ["+//\t\tlong start = System.currentTimeMillis();", "+\t\tSourceTypeConverter converter = new SourceTypeConverter(flags, problemReporter);", "-\t\t\treturn new SourceTypeConverter(flags, problemReporter).convert(sourceTypes, compilationResult);", "+\t\t\treturn converter.convert(sourceTypes, compilationResult);", "-\t\t}", "+/*\t\t} finally {", "+\t\t\tSystem.out.println(\"Spent \" + (System.currentTimeMillis() - start) + \"ms to convert \" + ((JavaElement) converter.cu).toStringWithAncestors());", "+*/\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c8dee00458ce91e4d5c44a12514641", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "9fff7ba189be037b4cf4f61956b7e287259b8f6d", "commitAfterChange": "8f52c3e814b7d9e86327e186704f1c7e2be78c75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void cleanUp()", "signatureAfterChange": " \tpublic void cleanUp()", "diff": ["+\t\t\t    LocalTypeBinding localType = localTypes[i];", "-\t\t\t\tlocalTypes[i].scope = null; // local members are already in the list", "+\t\t\t\tlocalType.scope = null; // local members are already in the list"]}], "num": 5158}