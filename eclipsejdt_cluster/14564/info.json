{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e9d8f8e3d90466e46cfaf8cf1ef9b0b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a90a816081ac32887e6ac06888e1a4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testTypeReferenceBug79860b() throws CoreException", "signatureAfterChange": " \tpublic void testBug79267() throws CoreException", "diff": ["+\t */", "+\tpublic void testBug79267() throws CoreException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b79267/Test.java\",", "+\t\t\t\t\"package b79267;\\n\" + ", "+\t\t\t\t\"public class Test {\\n\" + ", "+\t\t\t\t\"\tprivate static final X<String, String> BEFORE\t= new X<String, String>(4);\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\t\"\t\tBEFORE.put(\\\"key1\\\",\\\"value1\\\");\\n\" + ", "+\t\t\t\t\"\t\tBEFORE.put(\\\"key2\\\",\\\"value2\\\");\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\t\\n\" + ", "+\t\t\t\t\"\tprivate static final X<Y, Object>\tobjectToPrimitiveMap\t= new X<Y, Object>(8);\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"\tstatic {\\n\" + ", "+\t\t\t\t\"\t\tobjectToPrimitiveMap.put(new Y<Object>(new Object()), new Object());\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"class X<T, U> {\\n\" + ", "+\t\t\t\t\"\tX(int x) {}\\n\" + ", "+\t\t\t\t\"\tvoid put(T t, U u) {}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"class Y<T> {\\n\" + ", "+\t\t\t\t\"\tY(T t) {}\\n\" + ", "+\t\t\t\t\"}\\n\");", "+\t\t\t// search field references", "+\t\t\tIType type = workingCopy.getType(\"Test\");", "+\t\t\tIField field = type.getField(\"BEFORE\");", "+\t\t\tsearch(field, REFERENCES);", "+\t\t\tfield = type.getField(\"objectToPrimitiveMap\");", "+\t\t\tsearch(field, REFERENCES);", "+\t\t\tassertSearchResults(", "+\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [BEFORE] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b79267/Test.java b79267.Test.static {} [objectToPrimitiveMap] EXACT_MATCH\",", "+\t\t\t\tresultCollector);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}", "-\t}", "-\tpublic void testTypeReferenceBug79860b() throws CoreException {", "-\t\tsearch(\"I?\", TYPE, REFERENCES, getJavaSearchScopeBugs(\"b79860\", false), resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b79860/Y.java b79860.Y [I1] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b79860/Y.java b79860.Y [I2] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b79860/Y.java b79860.Y [I3] EXACT_MATCH\",", "-\t\t\tresultCollector);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ef9993f9f59a1fa06f22c7398eea71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptReconcileTests.java", "commitBeforeChange": "72643ddaac52d3ea6e2573fbe40b9af5d9586d1e", "commitAfterChange": "965ee55c83771df9f7f21b38b9a78903a86f630d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void testGeneratedFile() throws Throwable", "signatureAfterChange": " \t \tpublic void testGeneratedFile() throws Throwable", "diff": ["-\t\t\tString code = \"package generatedfilepackage;\"", "-\t\t\t\t+ \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\" + \"\\n\" + ", "+\t\t\t", "+\t\t\t//", "+\t\t\t//  first make sure errors are present when the annotation", "+\t\t\t// is commented out", "+\t\t\t//", "+\t\t\tString codeWithErrors = \"package test;\" + \"\\n\" +", "+\t\t\t\t\"//import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\" + \"\\n\" + ", "-\t\t\t\t\"    @HelloWorldAnnotation\" + \"\\n\" + ", "+\t\t\t\t\"    //@HelloWorldAnnotation\" + \"\\n\" + ", "-\t\t\t\t\"        GeneratedFileTest.helloWorld();\" + \"\\n\" +", "+\t\t\t\t\"        generatedfilepackage.GeneratedFileTest.helloWorld();\" + \"\\n\" +", "-\t\t\tcreateFile( fname, code );", "-", "-\t\t\tsetUpWorkingCopy( fname, code );", "+\t\t\tcreateFile( fname, codeWithErrors );", "+\t\t\tsetUpWorkingCopy( fname, codeWithErrors );", "-\t\t\tassertProblems( \"Unexpected problems\", \"\" );", "+\t\t\t", "+\t\t\tString expectedProblems = \"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in /org.eclipse.jdt.apt.tests.AptReconcileTestsProject/src/test/A.java (at line 8)\\n\" + ", "+\t\t\t\t\"\tgeneratedfilepackage.GeneratedFileTest.helloWorld();\\n\" + ", "+\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"generatedfilepackage cannot be resolved\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in /org.eclipse.jdt.apt.tests.AptReconcileTestsProject/src/test/A.java (at line 8)\\n\" + ", "+\t\t\t\t\"\tgeneratedfilepackage.GeneratedFileTest.helloWorld();\\n\" + ", "+\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"generatedfilepackage cannot be resolved\\n\" + ", "+\t\t\t\t\"----------\\n\";", "+\t\t\t", "+\t\t\tassertProblems( \"Unexpected problems\", expectedProblems );", "+\t\t\t", "+\t\t\t", "+\t\t\t//", "+\t\t\t// now make sure errors go away when annotations are present", "+\t\t\t//", "+\t\t\tString codeWithOutErrors = \"package test;\" + \"\\n\" +", "+\t\t\t    \"import org.eclipse.jdt.apt.tests.annotations.helloworld.HelloWorldAnnotation;\" + \"\\n\" + ", "+\t\t\t    \"public class A \" +  \"\\n\" +", "+\t\t\t    \"{\" +  \"\\n\" +", "+\t\t\t    \"    @HelloWorldAnnotation\" + \"\\n\" + ", "+\t\t\t\t\"    public static void main( String[] argv )\" + \"\\n\" +", "+\t\t\t\t\"    {\" + \"\\n\" +", "+\t\t\t\t\"        generatedfilepackage.GeneratedFileTest.helloWorld();\" + \"\\n\" +", "+\t\t\t\t\"    }\" + \"\\n\" +", "+\t\t\t\t\"}\";", "+", "+\t\t\tsetWorkingCopyContents( codeWithOutErrors );", "+\t\t\tthis._workingCopy.reconcile( ICompilationUnit.NO_AST, true, null,", "+\t\t\t\t\tnull );", "+\t\t\t", "+\t\t\tassertProblems( \"UnexpectedProblems\", \"----------\\n----------\\n\" );", "+\t\t\t"]}], "num": 14564}