{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a63477130e2cca4d8b63c66755feb9f5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1278260ce035e0f30b47ea821201c36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "ea3771830307a556e22215a6aa94c2a020dd70b2", "commitAfterChange": "9ac233cf182f6e70412f305dd1c8a286a9a1acbd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["+\t\t// probe for expression", "-\t\tASTNode[] bodyDeclarations = this.codeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), getDefaultCompilerOptions(), true);", "-\t\tif (bodyDeclarations != null) {", "-\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, offset, length);", "-\t\t}", "-", "+\t\t// probe for statements", "+\t\t// probe for body declarations (fields, methods, constructors)", "+\t\tASTNode[] bodyDeclarations = this.codeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tif (bodyDeclarations != null) {", "+\t\t\treturn internalFormatClassBodyDeclarations(source, indentationLevel, lineSeparator, bodyDeclarations, offset, length);", "+\t\t}", "+", "+\t\t// this has to be a compilation unit"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9710ad423ea84c82b3bf8ae5ba4ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "bef74bd3c81d577f2877e22159dad6a83f7261ac", "commitAfterChange": "4e5286cef07b26e982ff26ec99b73e526f9c11e9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\t// probe for statements", "-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);", "-\t\tif (constructorDeclaration.statements != null) {", "-\t\t\treturn internalFormatStatements(source, indentationLevel, lineSeparator, constructorDeclaration, offset, length);", "-\t\t}", "-", "+\t\t// probe for statements", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);", "+\t\tif (constructorDeclaration.statements != null) {", "+\t\t\treturn internalFormatStatements(source, indentationLevel, lineSeparator, constructorDeclaration, offset, length);", "+\t\t}", "+"]}], "num": 37628}