{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78a6098db546320c91bd5a060ace715b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5fd2a6a39e585b3fef77f51d68a1c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "3ec169b44d3736817b7c4ce9bf1791fcda57b692", "commitAfterChange": "4a83e27deea774790864c829cd5109d435b50edd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\tif (initializationType.isRawType() && (variableType.isBoundParameterizedType() || variableType.isGenericType())) {", "-\t\t\t\t\t\t\t    scope.problemReporter().unsafeRawConversion(this.initialization, initializationType, variableType);", "+\t\t\t\t\t\tif (initializationType.needsUncheckedConversion(variableType)) {", "+\t\t\t\t\t\t    scope.problemReporter().unsafeRawConversion(this.initialization, initializationType, variableType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80af3e512d01a490e3653ed2a6df9b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tif (expressionType.isRawType() && (methodType.isParameterizedType() || methodType.isGenericType())) {", "-\t\t    scope.problemReporter().unsafeRawReturnValue(this.expression, expressionType, methodType);", "+\t\tif (expressionType.isRawType() && (methodType.isBoundParameterizedType() || methodType.isGenericType())) {", "+\t\t    scope.problemReporter().unsafeRawConversion(this.expression, expressionType, methodType);"]}], "num": 47099}