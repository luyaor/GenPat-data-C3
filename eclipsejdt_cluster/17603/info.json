{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4cc2a6ca4d50c8d2e4d71c74fadc1d1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e179f6d1dbcde08abb6835b938a22c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "80a71329c6d3a0896fae7794150ec55104f5c2f0", "commitAfterChange": "f59cd62ee82097eb13f8e87f8fbab8b81f747c29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static int getIrritant(int problemID)", "signatureAfterChange": " public static int getIrritant(int problemID)", "diff": ["+\t\tcase IProblem.RedundantNullCheckOnSpecdNonNullLocalVariable:", "+\t\tcase IProblem.SpecdNonNullLocalVariableComparisonYieldsFalse:", "+\t\tcase IProblem.RequiredNonNullButProvidedSpecdNullable:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0c28078a3c95a6bec3ebec8a9f07556", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "signatureAfterChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "diff": ["+\tcase Binding.INTERSECTION_TYPE:", "+\t\t", "-\t\tcase Binding.WILDCARD_TYPE:", "-\t\t\tWildcardBinding wildcard = (WildcardBinding) this;", "-\t\t\tswitch (wildcard.boundKind) {", "-\t\t\tcase Wildcard.EXTENDS:", "-\t\t\t\tif (wildcard.otherBounds != null) // intersection type", "+\t\t\tcase Binding.WILDCARD_TYPE:", "+\t\t\tcase Binding.INTERSECTION_TYPE:", "+\t\t\t\tWildcardBinding wildcard = (WildcardBinding) this;", "+\t\t\t\tswitch (wildcard.boundKind) {", "+\t\t\t\tcase Wildcard.EXTENDS:", "+\t\t\t\t\tif (wildcard.otherBounds != null) // intersection type", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tupperBound = wildcard.bound;", "+\t\t\t\t\tlowerBound = null;", "-\t\t\t\tupperBound = wildcard.bound;", "-\t\t\t\tlowerBound = null;", "+\t\t\t\tcase Wildcard.SUPER:", "+\t\t\t\t\tupperBound = wildcard;", "+\t\t\t\t\tlowerBound = wildcard.bound;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase Wildcard.UNBOUND:", "+\t\t\t\t\tupperBound = wildcard;", "+\t\t\t\t\tlowerBound = null;", "+\t\t\t\t}", "-\t\t\tcase Wildcard.SUPER:", "-\t\t\t\tupperBound = wildcard;", "-\t\t\t\tlowerBound = wildcard.bound;", "-\t\t\t\tbreak;", "-\t\t\tcase Wildcard.UNBOUND:", "-\t\t\t\tupperBound = wildcard;", "-\t\t\t\tlowerBound = null;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase Binding.TYPE_PARAMETER:", "-\t\t\tif (this.isCapture()) {", "-\t\t\t\tCaptureBinding capture = (CaptureBinding) this;", "-\t\t\t\tif (capture.lowerBound != null)", "-\t\t\t\t\tlowerBound = capture.lowerBound;", "-\t\t\t}", "+\t\t\tcase Binding.TYPE_PARAMETER:", "+\t\t\t\tif (this.isCapture()) {", "+\t\t\t\t\tCaptureBinding capture = (CaptureBinding) this;", "+\t\t\t\t\tif (capture.lowerBound != null)", "+\t\t\t\t\t\tlowerBound = capture.lowerBound;", "+\t\t\t\t}", "-\t\t\tTypeBinding match = upperBound.findSuperTypeWithSameErasure(otherBound);", "+\t\t\tTypeBinding match = upperBound.findSuperTypeOriginatingFrom(otherBound);", "-\t\t\tmatch = otherBound.findSuperTypeWithSameErasure(lowerBound);", "+\t\t\tmatch = otherBound.findSuperTypeOriginatingFrom(lowerBound);", "+\t\t\tcase Binding.INTERSECTION_TYPE:"]}], "num": 17603}