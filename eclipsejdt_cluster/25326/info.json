{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05325955345c6d7bacc64602a87618ac", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2080279a9c434b7ce7e9419c43e52239", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void completeCodeAttributeForProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "signatureAfterChange": " \tpublic void completeCodeAttributeForProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] startLineIndexes)", "diff": ["-\t\tbyte[] localContents = contents = codeStream.bCodeStream;", "+\t\tthis.contents = codeStream.bCodeStream;", "-\t\tlocalContents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "-\t\tlocalContents[codeAttributeOffset + 7] = (byte) max_stack;", "+\t\tthis.contents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "+\t\tthis.contents[codeAttributeOffset + 7] = (byte) max_stack;", "-\t\tlocalContents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "-\t\tlocalContents[codeAttributeOffset + 9] = (byte) max_locals;", "+\t\tthis.contents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "+\t\tthis.contents[codeAttributeOffset + 9] = (byte) max_locals;", "-\t\tlocalContents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "-\t\tlocalContents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "-\t\tlocalContents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "-\t\tlocalContents[codeAttributeOffset + 13] = (byte) code_length;", "+\t\tthis.contents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "+\t\tthis.contents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "+\t\tthis.contents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "+\t\tthis.contents[codeAttributeOffset + 13] = (byte) code_length;", "-\t\tint contentsLength;", "-\t\tif (localContentsOffset + 50 >= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (localContentsOffset + 50 >= this.contents.length) {", "+\t\t\tresizePoolContents(50);", "-\t\tlocalContents[localContentsOffset++] = 0;", "-\t\tlocalContents[localContentsOffset++] = 0;", "+\t\tthis.contents[localContentsOffset++] = 0;", "+\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\tif (localContentsOffset + 20 >= (contentsLength = localContents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (localContentsOffset + 20 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(20);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumberNameIndex;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 6;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 1;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumberNameIndex;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 6;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 1;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (problemLine >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) problemLine;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (problemLine >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) problemLine;", "-\t\t\tif (localContentsOffset + 8 >= (contentsLength = localContents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) localVariableNameIndex;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) localVariableNameIndex;", "-\t\t\t\tif (localContentsOffset + 10 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tcontentsLength);", "+\t\t\t\tif (localContentsOffset + 10 >= this.contents.length) {", "+\t\t\t\t\tresizePoolContents(10);", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (code_length >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) code_length;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (code_length >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) code_length;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) descriptorIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) descriptorIndex;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\t\t\t\t\tif (localContentsOffset + 10 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t\tcontentsLength);", "+\t\t\t\t\t\t\tif (localContentsOffset + 10 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizePoolContents(10);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (code_length >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) code_length;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (code_length >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) code_length;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) descriptorIndex;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) descriptorIndex;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) resolvedPosition;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) resolvedPosition;", "-\t\t\t\t\t\tif (localContentsOffset + 10 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\tcontentsLength);", "+\t\t\t\t\t\tif (localContentsOffset + 10 >= this.contents.length) {", "+\t\t\t\t\t\t\tresizePoolContents(10);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (code_length >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) code_length;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (code_length >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) code_length;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) descriptorIndex;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) descriptorIndex;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) resolvedPosition;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) resolvedPosition;", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 24);", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 16);", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 8);", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) value;", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\tlocalContents[localVariableTableOffset] = (byte) numberOfEntries;", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 24);", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 16);", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 8);", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) value;", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\tthis.contents[localVariableTableOffset] = (byte) numberOfEntries;", "-\t\tif (codeAttributeAttributeOffset + 2", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (codeAttributeAttributeOffset + 2 >= this.contents.length) {", "+\t\t\tresizePoolContents(2);", "-\t\tlocalContents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "-\t\tlocalContents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "+\t\tthis.contents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tthis.contents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "-\t\tlocalContents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "-\t\tlocalContents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "-\t\tlocalContents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "-\t\tlocalContents[codeAttributeOffset + 5] = (byte) codeAttributeLength;", "+\t\tthis.contents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "+\t\tthis.contents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "+\t\tthis.contents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "+\t\tthis.contents[codeAttributeOffset + 5] = (byte) codeAttributeLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6da281e615db52abd864e6a88b8f748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "diff": ["-\t\tbyte[] localContents = contents = codeStream.bCodeStream;", "+\t\tthis.contents = codeStream.bCodeStream;", "-\t\tint contentsLength;", "-\t\tif (localContentsOffset + 20 >= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (localContentsOffset + 20 >= this.contents.length) {", "+\t\t\tresizePoolContents(20);", "-\t\tlocalContents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "-\t\tlocalContents[codeAttributeOffset + 7] = (byte) max_stack;", "+\t\tthis.contents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "+\t\tthis.contents[codeAttributeOffset + 7] = (byte) max_stack;", "-\t\tlocalContents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "-\t\tlocalContents[codeAttributeOffset + 9] = (byte) max_locals;", "-\t\tlocalContents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "-\t\tlocalContents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "-\t\tlocalContents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "-\t\tlocalContents[codeAttributeOffset + 13] = (byte) code_length;", "+\t\tthis.contents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "+\t\tthis.contents[codeAttributeOffset + 9] = (byte) max_locals;", "+\t\tthis.contents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "+\t\tthis.contents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "+\t\tthis.contents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "+\t\tthis.contents[codeAttributeOffset + 13] = (byte) code_length;", "-\t\tif (localContentsOffset + (exSize = (exceptionHandlersNumber * 8 + 2))", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents =", "-\t\t\t\t\tcontents =", "-\t\t\t\t\t\tnew byte[contentsLength + (exSize > INCREMENT_SIZE ? exSize : INCREMENT_SIZE)]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (localContentsOffset + (exSize = (exceptionHandlersNumber * 8 + 2)) >= this.contents.length) {", "+\t\t\tresizePoolContents(exSize);", "-\t\tlocalContents[localContentsOffset++] = (byte) (exceptionHandlersNumber >> 8);", "-\t\tlocalContents[localContentsOffset++] = (byte) exceptionHandlersNumber;", "+\t\tthis.contents[localContentsOffset++] = (byte) (exceptionHandlersNumber >> 8);", "+\t\tthis.contents[localContentsOffset++] = (byte) exceptionHandlersNumber;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (start >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) start;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (start >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) start;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (end >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) end;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (end >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) end;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (handlerPC >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) handlerPC;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (handlerPC >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) handlerPC;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\tif (localContentsOffset + 8 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tcontentsLength);", "+\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\tresizePoolContents(8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumberNameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumberNameIndex;", "-\t\t\t\t\tif (localContentsOffset + 4 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\tcontentsLength);", "+\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\tresizePoolContents(4);", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (pc >> 8);", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) pc;", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (pc >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) pc;", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumber >> 8);", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumber;", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumber >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumber;", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 24);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 16);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 8);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) lineNumberAttr_length;", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) numberOfEntries;", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 24);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 16);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 8);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) lineNumberAttr_length;", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) numberOfEntries;", "-\t\t\t\tif (localContentsOffset + 8 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tcontentsLength);", "+\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\tresizePoolContents(8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) localVariableNameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) localVariableNameIndex;", "-\t\t\t\t\t\t\tif (localContentsOffset + 10 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t\tcontentsLength);", "+\t\t\t\t\t\t\tif (localContentsOffset + 10 >= this.contents.length) {", "+\t\t\t\t\t\t\t\tresizePoolContents(10);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (startPC >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) startPC;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (startPC >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) startPC;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (length >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) length;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (length >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) length;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) descriptorIndex;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) descriptorIndex;", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "-\t\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) resolvedPosition;", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "+\t\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) resolvedPosition;", "-\t\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 24);", "-\t\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 16);", "-\t\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 8);", "-\t\t\t\tlocalContents[localVariableTableOffset++] = (byte) value;", "-\t\t\t\tlocalContents[localVariableTableOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\t\tlocalContents[localVariableTableOffset] = (byte) numberOfEntries;", "+\t\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 24);", "+\t\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 16);", "+\t\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 8);", "+\t\t\t\tthis.contents[localVariableTableOffset++] = (byte) value;", "+\t\t\t\tthis.contents[localVariableTableOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\tthis.contents[localVariableTableOffset] = (byte) numberOfEntries;", "-\t\tif (codeAttributeAttributeOffset + 2", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (codeAttributeAttributeOffset + 2 >= this.contents.length) {", "+\t\t\tresizePoolContents(2);", "-\t\tlocalContents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "-\t\tlocalContents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "+\t\tthis.contents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tthis.contents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "-\t\tlocalContents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "-\t\tlocalContents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "-\t\tlocalContents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "-\t\tlocalContents[codeAttributeOffset + 5] = (byte) codeAttributeLength;", "+\t\tthis.contents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "+\t\tthis.contents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "+\t\tthis.contents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "+\t\tthis.contents[codeAttributeOffset + 5] = (byte) codeAttributeLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79044c7458536cf4ad5cde3c084fabf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void completeCodeAttribute(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttribute(int codeAttributeOffset)", "diff": ["-\t\tbyte[] localContents = contents = codeStream.bCodeStream;", "+\t\tthis.contents = codeStream.bCodeStream;", "-\t\tint contentsLength;", "-\t\tif (localContentsOffset + 20 >= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (localContentsOffset + 20 >= this.contents.length) {", "+\t\t\tresizePoolContents(20);", "-\t\tlocalContents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "-\t\tlocalContents[codeAttributeOffset + 7] = (byte) max_stack;", "+\t\tthis.contents[codeAttributeOffset + 6] = (byte) (max_stack >> 8);", "+\t\tthis.contents[codeAttributeOffset + 7] = (byte) max_stack;", "-\t\tlocalContents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "-\t\tlocalContents[codeAttributeOffset + 9] = (byte) max_locals;", "-\t\tlocalContents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "-\t\tlocalContents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "-\t\tlocalContents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "-\t\tlocalContents[codeAttributeOffset + 13] = (byte) code_length;", "+\t\tthis.contents[codeAttributeOffset + 8] = (byte) (max_locals >> 8);", "+\t\tthis.contents[codeAttributeOffset + 9] = (byte) max_locals;", "+\t\tthis.contents[codeAttributeOffset + 10] = (byte) (code_length >> 24);", "+\t\tthis.contents[codeAttributeOffset + 11] = (byte) (code_length >> 16);", "+\t\tthis.contents[codeAttributeOffset + 12] = (byte) (code_length >> 8);", "+\t\tthis.contents[codeAttributeOffset + 13] = (byte) code_length;", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents =", "-\t\t\t\t\tcontents =", "-\t\t\t\t\t\tnew byte[contentsLength + (exSize > INCREMENT_SIZE ? exSize : INCREMENT_SIZE)]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\t\t>= this.contents.length) {", "+\t\t\tresizePoolContents(exSize);", "-\t\tlocalContents[localContentsOffset++] = (byte) (exceptionHandlersNumber >> 8);", "-\t\tlocalContents[localContentsOffset++] = (byte) exceptionHandlersNumber;", "+\t\tthis.contents[localContentsOffset++] = (byte) (exceptionHandlersNumber >> 8);", "+\t\tthis.contents[localContentsOffset++] = (byte) exceptionHandlersNumber;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (start >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) start;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (start >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) start;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (end >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) end;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (end >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) end;", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (handlerPC >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) handlerPC;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (handlerPC >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) handlerPC;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\tif (localContentsOffset + 8 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tcontentsLength);", "+\t\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\t\tresizePoolContents(8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumberNameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumberNameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumberNameIndex;", "-\t\t\t\t\tif (localContentsOffset + 4 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\tcontentsLength);", "+\t\t\t\t\tif (localContentsOffset + 4 >= this.contents.length) {", "+\t\t\t\t\t\tresizePoolContents(4);", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (pc >> 8);", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) pc;", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (pc >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) pc;", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (lineNumber >> 8);", "-\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) lineNumber;", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (lineNumber >> 8);", "+\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) lineNumber;", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 24);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 16);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 8);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) lineNumberAttr_length;", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\t\tlocalContents[lineNumberTableOffset++] = (byte) numberOfEntries;", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 24);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 16);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (lineNumberAttr_length >> 8);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) lineNumberAttr_length;", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\t\tthis.contents[lineNumberTableOffset++] = (byte) numberOfEntries;", "-\t\t\tif (localContentsOffset + 8 >= (contentsLength = localContents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (localContentsOffset + 8 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "-\t\t\tlocalContents[localContentsOffset++] = (byte) localVariableNameIndex;", "+\t\t\tthis.contents[localContentsOffset++] = (byte) (localVariableNameIndex >> 8);", "+\t\t\tthis.contents[localContentsOffset++] = (byte) localVariableNameIndex;", "-\t\t\t\tif (localContentsOffset + 10 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t0,", "-\t\t\t\t\t\tcontentsLength);", "+\t\t\t\tif (localContentsOffset + 10 >= this.contents.length) {", "+\t\t\t\t\tresizePoolContents(10);", "-\t\t\t\tlocalContents[localContentsOffset++] = 0; // the startPC for this is always 0", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (code_length >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) code_length;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0; // the startPC for this is always 0", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (code_length >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) code_length;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "-\t\t\t\tlocalContents[localContentsOffset++] = (byte) descriptorIndex;", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;// the resolved position for this is always 0", "-\t\t\t\tlocalContents[localContentsOffset++] = 0;", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "+\t\t\t\tthis.contents[localContentsOffset++] = (byte) descriptorIndex;", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;// the resolved position for this is always 0", "+\t\t\t\tthis.contents[localContentsOffset++] = 0;", "-\t\t\t\t\t\tif (localContentsOffset + 10 >= (contentsLength = localContents.length)) {", "-\t\t\t\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\t\t\t\tcontents,", "-\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t\t\t\t0,", "-\t\t\t\t\t\t\t\tcontentsLength);", "+\t\t\t\t\t\tif (localContentsOffset + 10 >= this.contents.length) {", "+\t\t\t\t\t\t\tresizePoolContents(10);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (startPC >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) startPC;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (startPC >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) startPC;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (length >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) length;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (length >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) length;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (nameIndex >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) nameIndex;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (nameIndex >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) nameIndex;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) descriptorIndex;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (descriptorIndex >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) descriptorIndex;", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "-\t\t\t\t\t\tlocalContents[localContentsOffset++] = (byte) resolvedPosition;", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) (resolvedPosition >> 8);", "+\t\t\t\t\t\tthis.contents[localContentsOffset++] = (byte) resolvedPosition;", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 24);", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 16);", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (value >> 8);", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) value;", "-\t\t\tlocalContents[localVariableTableOffset++] = (byte) (numberOfEntries >> 8);", "-\t\t\tlocalContents[localVariableTableOffset] = (byte) numberOfEntries;", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 24);", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 16);", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (value >> 8);", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) value;", "+\t\t\tthis.contents[localVariableTableOffset++] = (byte) (numberOfEntries >> 8);", "+\t\t\tthis.contents[localVariableTableOffset] = (byte) numberOfEntries;", "-\t\tif (codeAttributeAttributeOffset + 2", "-\t\t\t>= (contentsLength = localContents.length)) {", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(localContents = contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "+\t\tif (codeAttributeAttributeOffset + 2 >= this.contents.length) {", "+\t\t\tresizePoolContents(2);", "-\t\tlocalContents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "-\t\tlocalContents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "+\t\tthis.contents[codeAttributeAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tthis.contents[codeAttributeAttributeOffset] = (byte) attributeNumber;", "-\t\tlocalContents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "-\t\tlocalContents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "-\t\tlocalContents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "-\t\tlocalContents[codeAttributeOffset + 5] = (byte) codeAttributeLength;", "+\t\tthis.contents[codeAttributeOffset + 2] = (byte) (codeAttributeLength >> 24);", "+\t\tthis.contents[codeAttributeOffset + 3] = (byte) (codeAttributeLength >> 16);", "+\t\tthis.contents[codeAttributeOffset + 4] = (byte) (codeAttributeLength >> 8);", "+\t\tthis.contents[codeAttributeOffset + 5] = (byte) codeAttributeLength;"]}], "num": 25326}