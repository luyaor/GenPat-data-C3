{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27c853bc739df52f261cdcb91a94caee", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da069abdfd1f5177f530afcb85ebd07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldDeclarationPattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof FieldBinding)) return false;\r", "-\r", "-\tFieldBinding field = (FieldBinding)binding;\r", "-\t\r", "-\t// field name\r", "-\tif (!this.matchesName(this.name, field.readableName()))\r", "-\t\treturn false;\r", "-\r", "-\t// declaring type\r", "-\tReferenceBinding declaringBinding = field.declaringClass;\r", "-\tif (declaringBinding != null \r", "-\t\t&& !this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringBinding)) {\r", "-\t\t\t\r", "-\t\treturn false;\r", "-\t}\r", "-\r", "-\t// field type\r", "-\tif(!this.matchesType(this.typeSimpleName, this.typeQualification, field.type)) {\r", "-\t\treturn false;\r", "-\t}\r", "-\t\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof FieldBinding)) return IMPOSSIBLE_MATCH;\r", "+\tint level;\r", "+\r", "+\tFieldBinding field = (FieldBinding)binding;\r", "+\t\r", "+\t// field name\r", "+\tif (!this.matchesName(this.name, field.readableName()))\r", "+\t\treturn IMPOSSIBLE_MATCH;\r", "+\r", "+\t// declaring type\r", "+\tReferenceBinding declaringBinding = field.declaringClass;\r", "+\tif (declaringBinding == null ) {\r", "+\t\treturn INACCURATE_MATCH;\r", "+\t} else {\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, declaringBinding);\r", "+\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "+\t}\r", "+\r", "+\t// field type\r", "+\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, field.type);\r", "+\tswitch (newLevel) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\tbreak;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tlevel = newLevel;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn level;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33a28631267bb09533c90ce114cf3497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldDeclarationPattern.java", "commitBeforeChange": "60e138d2828b37f2615e0cced57acea3adb47644", "commitAfterChange": "3c340a30d5ee47c28968789969de0fd1189f5b30", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof FieldBinding)) return false;\r", "-\r", "-\tFieldBinding field = (FieldBinding)binding;\r", "-\t\r", "-\t// field name\r", "-\tif (!this.matchesName(this.name, field.readableName()))\r", "-\t\treturn false;\r", "-\r", "-\t// declaring type\r", "-\tReferenceBinding declaringBinding = field.declaringClass;\r", "-\tif (declaringBinding != null \r", "-\t\t&& !this.matchesType(this.declaringSimpleName, this.declaringQualification, declaringBinding)) {\r", "-\t\t\t\r", "-\t\treturn false;\r", "-\t}\r", "-\r", "-\t// field type\r", "-\tif(!this.matchesType(this.typeSimpleName, this.typeQualification, field.type)) {\r", "-\t\treturn false;\r", "-\t}\r", "-\t\r", "-\treturn true;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof FieldBinding)) return IMPOSSIBLE_MATCH;\r", "+\tint level;\r", "+\r", "+\tFieldBinding field = (FieldBinding)binding;\r", "+\t\r", "+\t// field name\r", "+\tif (!this.matchesName(this.name, field.readableName()))\r", "+\t\treturn IMPOSSIBLE_MATCH;\r", "+\r", "+\t// declaring type\r", "+\tReferenceBinding declaringBinding = field.declaringClass;\r", "+\tif (declaringBinding == null ) {\r", "+\t\treturn INACCURATE_MATCH;\r", "+\t} else {\r", "+\t\tlevel = this.matchLevelForType(this.declaringSimpleName, this.declaringQualification, declaringBinding);\r", "+\t\tif (level == IMPOSSIBLE_MATCH) return IMPOSSIBLE_MATCH;\r", "+\t}\r", "+\r", "+\t// field type\r", "+\tint newLevel = this.matchLevelForType(this.typeSimpleName, this.typeQualification, field.type);\r", "+\tswitch (newLevel) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\tcase ACCURATE_MATCH: // keep previous level\r", "+\t\t\tbreak;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tlevel = newLevel;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn level;\r", "+}\r"]}], "num": 35434}