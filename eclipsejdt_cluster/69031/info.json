{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "934149f0a39fd5b717a01506dd9cac54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9747a3d2f6d290495829930d209dff06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "36ef129881167aaca524bd32a5aa2c4e26ffd187", "commitAfterChange": "19b7207c9f9b8245eee7ba353b5eb784e8fb1b81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit)", "diff": ["-\t\t\tacceptedAnswer = true;", "+\t\t\tthis.acceptedAnswer = true;", "-\t\t\t\t\trequestor.acceptMethod(", "+\t\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\tacceptedAnswer = true;", "+\t\t\t\tthis.acceptedAnswer = true;", "-\t\t\t\t\t\t\trequestor.acceptField(", "+\t\t\t\t\t\t\tthis.requestor.acceptField(", "-\t\t\t\t\t\tacceptedAnswer = true;", "+\t\t\t\t\t\tthis.acceptedAnswer = true;", "-\t\t\t\t\t\tselectFrom(((LocalVariableBinding) binding).type, parsedUnit);", "-\t\t\t\t\t\t// open on the type of the variable", "+\t\t\t\t\t\tif (this.requestor instanceof SelectionRequestor) {", "+\t\t\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalVariable(", "+\t\t\t\t\t\t\t\t(LocalVariableBinding)binding,", "+\t\t\t\t\t\t\t\tparsedUnit);", "+\t\t\t\t\t\t\tthis.acceptedAnswer = true;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// open on the type of the variable", "+\t\t\t\t\t\t\tselectFrom(((LocalVariableBinding) binding).type, parsedUnit);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tacceptedAnswer = true;", "+\t\t\t\t\t\t\t\tthis.acceptedAnswer = true;", "-\t\t\t\t\t\t\t\t\tacceptedAnswer = true;", "+\t\t\t\t\t\t\t\t\tthis.acceptedAnswer = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92dd241e55c5ff5cb32544eece04ab5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType)", "diff": ["-\t\t\tif (options.checkVisibility", "+\t\t\tif (this.options.checkVisibility", "-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptClass(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\tnoProposal = false;", "-\t\t\t\trequestor.acceptInterface(", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\tthis.requestor.acceptInterface(", "-\t\t\t\t\tstartPosition - offset,", "-\t\t\t\t\tendPosition - offset,", "+\t\t\t\t\tthis.startPosition - this.offset,", "+\t\t\t\t\tthis.endPosition - this.offset,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca482193800ad01a2410e2960471e40e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "1ad299c6e46ed5abccc52b588c8064972a8a8007", "commitAfterChange": "9161de43572385b89c05cb5fcdc58a0f1e197e80", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\tconstant = Constant.NotAConstant;", "-\t\tif (resolvedType != null) // is a shared type reference which was already resolved", "-\t\t\treturn resolvedType.isValidBinding() ? resolvedType : null; // already reported error", "+\t\tthis.constant = Constant.NotAConstant;", "+\t\tif (this.resolvedType != null) // is a shared type reference which was already resolved", "+\t\t\treturn this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error", "-\t\tresolvedType = getTypeBinding(scope);", "-\t\tif (!resolvedType.isValidBinding()) {", "-\t\t\tBinding binding = scope.getTypeOrPackage(tokens);", "+\t\tthis.resolvedType = getTypeBinding(scope);", "+\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\t\tBinding binding = scope.getTypeOrPackage(this.tokens);", "-\t\t\t\tpackageBinding = (PackageBinding) binding;", "+\t\t\t\tthis.packageBinding = (PackageBinding) binding;", "-\t\tif (isTypeUseDeprecated(resolvedType, scope))", "-\t\t\treportDeprecatedType(scope);", "-\t\tif (resolvedType instanceof ParameterizedTypeBinding) {", "-\t\t\tresolvedType = ((ParameterizedTypeBinding)resolvedType).type;", "+\t\tif (isTypeUseDeprecated(this.resolvedType, scope))", "+\t\t\treportDeprecatedType(this.resolvedType, scope);", "+\t\tif (this.resolvedType instanceof ParameterizedTypeBinding) {", "+\t\t\tthis.resolvedType = ((ParameterizedTypeBinding)this.resolvedType).type;", "-\t\treturn resolvedType;", "+\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d04488ed297e7e57be1a126f39ed2981", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tupdateIndex(element, delta);\r", "-\t\t\telementAdded(element, delta);\r", "+\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\tthis.elementAdded(element, delta);\r", "-\t\t\tupdateIndex(element, delta);\r", "-\t\t\telementRemoved(element, delta);\r", "+\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\tthis.elementRemoved(element, delta);\r", "+\t\t\t\t// content has changed\r", "-\t\t\t\tupdateIndex(element, delta);\r", "-\t\t\t\tcontentChanged(element, delta);\r", "-\t\t\t} else if ((flags & IResourceDelta.OPEN) != 0) {\r", "-\t\t\t\telement = this.createElement(delta.getResource(), elementType, project);\r", "+\t\t\t\tthis.updateIndex(element, delta);\r", "+\t\t\t\tthis.contentChanged(element, delta);\r", "+\t\t\t} else if (elementType == IJavaElement.JAVA_PROJECT\r", "+\t\t\t\t\t&& (flags & IResourceDelta.OPEN) != 0) {\r", "+\t\t\t\t// project has been opened or closed\r", "+\t\t\t\tIProject res = (IProject)delta.getResource();\r", "+\t\t\t\telement = this.createElement(res, elementType, project);\r", "-\t\t\t\tupdateIndex(element, delta);\r", "-\t\t\t\tif (isOpen(delta.getResource())) {\r", "-\t\t\t\t\telementOpened(element, delta);\r", "+\t\t\t\tif (res.isOpen()) {\r", "+\t\t\t\t\tthis.elementOpened(element, delta);\r", "-\t\t\t\t\telementClosed(element, delta);\r", "+\t\t\t\t\tthis.elementClosed(element, delta);\r", "+\t\t\t\tthis.updateIndex(element, delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb362f96a69583f9e08913a3eee14497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "581702d71a138ac97fe73cfd2b06cc855f39a496", "commitAfterChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void removeBinaryChildren()", "signatureAfterChange": " void removeBinaryChildren() throws JavaModelException", "diff": ["-void removeBinaryChildren() {", "-\tif (fBinaryChildren != null) {", "+void removeBinaryChildren() throws JavaModelException {", "+\tif (this.binaryChildren != null) {", "-\t\tfor (int i = 0; i <fBinaryChildren.length; i++) {", "-\t\t\tmanager.removeInfo(fBinaryChildren[i]);", "+\t\tfor (int i = 0; i <this.binaryChildren.length; i++) {", "+\t\t\tJavaElement child = this.binaryChildren[i];", "+\t\t\tif (child instanceof BinaryType) {", "+\t\t\t\tmanager.removeInfoAndChildren((JavaElement)child.getParent());", "+\t\t\t} else {", "+\t\t\t\tmanager.removeInfoAndChildren(child);", "+\t\t\t}", "-\t\tfBinaryChildren = NO_CHILDREN;", "+\t\tthis.binaryChildren = NO_CHILDREN;"]}], "num": 69031}