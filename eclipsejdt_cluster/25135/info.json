{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e772e18899202709dcc0ca7e2f038d8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527223ba8a2f6cc21b749fb0a4e72c43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "acbefd89869bc2e1636c797e9888a047f0db1e79", "commitAfterChange": "ca6a0d4f3bf98311c20a941f6f61f98507e3122c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public boolean forcedToBeRaw(ReferenceContext referenceContext)", "signatureAfterChange": " public boolean forcedToBeRaw(ReferenceContext referenceContext)", "diff": ["+\t\t} else if (receiverBinding instanceof FieldBinding) {", "+\t\t\tFieldBinding field = (FieldBinding) receiverBinding;", "+\t\t\tif (field.type.isRawType()) {", "+\t\t\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\t\t\tAbstractMethodDeclaration methodDecl = (AbstractMethodDeclaration) referenceContext;", "+\t\t\t\t\tif (field.declaringClass != methodDecl.binding.declaringClass) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t} else if (referenceContext instanceof TypeDeclaration) {", "+\t\t\t\t\tTypeDeclaration type = (TypeDeclaration) referenceContext;", "+\t\t\t\t\tif (field.declaringClass != type.binding) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\tif (!CharOperation.equals(((FieldReference) this).binding.declaringClass.getFileName(),", "+\t\tFieldBinding field = ((FieldReference) this).binding;", "+\t\tif (!CharOperation.equals(field.declaringClass.getFileName(),", "+\t\tif (field.type.isRawType()) {", "+\t\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\t\tAbstractMethodDeclaration methodDecl = (AbstractMethodDeclaration) referenceContext;", "+\t\t\t\tif (field.declaringClass != methodDecl.binding.declaringClass) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t} else if (referenceContext instanceof TypeDeclaration) {", "+\t\t\t\tTypeDeclaration type = (TypeDeclaration) referenceContext;", "+\t\t\t\tif (field.declaringClass != type.binding) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01ffb4b4eb2a822455c6daaf2d0eec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "01df0dd7f81a30148e9341436af241c588cea60b", "commitAfterChange": "14f758abdbf93582152d632f97767b107ab4115d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\tMethodScope methodScope = scope instanceof MethodScope ? (MethodScope) scope : scope.enclosingMethodScope();", "-\t\tReferenceContext referenceContext = methodScope.referenceContext;", "-\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "-\t\t\tMethodBinding methodBinding = ((AbstractMethodDeclaration) referenceContext).binding;", "-\t\t\tif (methodBinding != null) {", "-\t\t\t\tbuffer.append(methodBinding.computeUniqueKey(false/*not a leaf*/));", "+\t\tif (scope != null) {", "+\t\t\t// the scope can be null. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=185129", "+\t\t\tMethodScope methodScope = scope instanceof MethodScope ? (MethodScope) scope : scope.enclosingMethodScope();", "+\t\t\tReferenceContext referenceContext = methodScope.referenceContext;", "+\t\t\tif (referenceContext instanceof AbstractMethodDeclaration) {", "+\t\t\t\tMethodBinding methodBinding = ((AbstractMethodDeclaration) referenceContext).binding;", "+\t\t\t\tif (methodBinding != null) {", "+\t\t\t\t\tbuffer.append(methodBinding.computeUniqueKey(false/*not a leaf*/));", "+\t\t\t\t}", "+\t\t\t} else if (referenceContext instanceof TypeDeclaration) {", "+\t\t\t\tTypeBinding typeBinding = ((TypeDeclaration) referenceContext).binding;", "+\t\t\t\tif (typeBinding != null) {", "+\t\t\t\t\tbuffer.append(typeBinding.computeUniqueKey(false/*not a leaf*/));", "+\t\t\t\t}", "-\t\t} else if (referenceContext instanceof TypeDeclaration) {", "-\t\t\tTypeBinding typeBinding = ((TypeDeclaration) referenceContext).binding;", "-\t\t\tif (typeBinding != null) {", "-\t\t\t\tbuffer.append(typeBinding.computeUniqueKey(false/*not a leaf*/));", "-\t\t\t}", "+\t", "+\t\t\t// scope index", "+\t\t\tgetScopeKey(scope, buffer);", "-", "-\t\t// scope index", "-\t\tgetScopeKey(scope, buffer);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdbad7e292597b5b9180a7a0d5775e1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public boolean forcedToBeRaw(ReferenceContext referenceContext)", "signatureAfterChange": " public boolean forcedToBeRaw(ReferenceContext referenceContext)", "diff": ["-\t\t\t\t\tif (field.declaringClass != methodDecl.binding.declaringClass) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\t\tif (TypeBinding.notEquals(field.declaringClass, methodDecl.binding.declaringClass)) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "-\t\t\t\t\tif (field.declaringClass != type.binding) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\t\tif (TypeBinding.notEquals(field.declaringClass, type.binding)) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "-\t\t\t\tif (field.declaringClass != methodDecl.binding.declaringClass) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\tif (TypeBinding.notEquals(field.declaringClass, methodDecl.binding.declaringClass)) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "-\t\t\t\tif (field.declaringClass != type.binding) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962", "+\t\t\t\tif (TypeBinding.notEquals(field.declaringClass, type.binding)) { // inherited raw field, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=337962"]}], "num": 25135}