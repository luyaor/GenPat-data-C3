{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1ff912a8baf4392b71314cd4f623666", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07afc77133bc944749914c2c2a04c57b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "9bee1c6f3c6bf50ec7f9dbd9166f81542168adc6", "commitAfterChange": "b0afda97bc30fb703ed3d70723f4f7d089cb593f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler()", "signatureAfterChange": "  \tpublic void testCompilerOneClassWithEclipseCompiler()", "diff": ["+ \t\tClassFileReader reader = null;", "+ \t\ttry {", "+\t\t\treader = ClassFileReader.read(new File(tmpFolder, \"p/X.class\"), true);", "+\t\t} catch (ClassFormatException e) {", "+\t\t\tassertTrue(\"Should not happen\", false);", "+\t\t} catch (IOException e) {", "+\t\t\tassertTrue(\"Should not happen\", false);", "+\t\t}", "+\t\tassertNotNull(\"No reader\", reader);", "+ \t\tassertEquals(\"Wrong value\", ClassFileConstants.JDK1_6, reader.getVersion());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "744cf9ae2e529c44d8833b664637c6c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "2a6fc21e132c7337a2ad9e75a03356551f0e9060", "commitAfterChange": "2f8f6c0c9552d7ebf46ec13ce513e098823a7a4e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate String disassembleSingleFile(String fileName) throws IOException", "signatureAfterChange": "  \tprivate String disassembleSingleFile(String fileName) throws IOException", "diff": ["-\t\tIClassFileReader classFileReader = null;", "-\t\ttry {", "-\t\t\tclassFileReader = new ClassFileReader(Util.getBytes(fileName), DecodingFlag.ALL);", "-\t\t} catch(ClassFormatException e) {", "-\t\t\treturn null;", "-\t\t} catch(IOException e) {", "-\t\t\treturn null;", "-\t\t}", "+\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(fileName, DecodingFlag.ALL);"]}], "num": 28628}