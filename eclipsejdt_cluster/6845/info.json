{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "514b86d50610c4de6d8500d5b0cf058c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d48b098d88ebf9c30948883c70da30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a7c3cda7c961d5a5839fc88cdcdca05f749f0591", "commitAfterChange": "45f26d79341dbd73cc50656614a5963b62874264", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "-\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\t\t\t\treturn importBinding.resolvedImport; // already know its visible", "+\t\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = ((FieldBinding) importBinding.resolvedImport).declaringClass;", "+\t\t\t\t\t\t\t\t\t\tif (declaringClass.canBeSeenBy(this)) {", "+\t\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "+\t\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\t\t\treturn importBinding.resolvedImport;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ReceiverTypeNotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b9c665f43b7b654feaf1306dbc1aa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "56dbcf2a723a2496d9406a9295b337384afdff1d", "commitAfterChange": "356ef270158cfd8719df7baf47652712175545cd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\t\t\tReferenceBinding declaringClass = ((FieldBinding) importBinding.resolvedImport).declaringClass;", "-\t\t\t\t\t\t\t\t\t\tif (declaringClass.canBeSeenBy(this)) {", "-\t\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "-\t\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "-\t\t\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(declaringClass);\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t\t\t\treturn importBinding.resolvedImport;", "+\t\t\t\t\t\t\t\t\t\tfoundField = (FieldBinding) importBinding.resolvedImport;", "+\t\t\t\t\t\t\t\t\t\tImportReference importReference = importBinding.reference;", "+\t\t\t\t\t\t\t\t\t\tif (importReference != null) importReference.used = true;", "+\t\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(foundField.declaringClass);\t\t\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\t\tif (foundField.isValidBinding()) {", "+\t\t\t\t\t\t\t\t\t\t\treturn foundField;", "-\t\t\t\t\t\t\t\t\t\t\tproblemField = new ProblemFieldBinding(declaringClass, name, ProblemReasons.ReceiverTypeNotVisible);", "+\t\t\t\t\t\t\t\t\t\t\tproblemField = foundField;"]}], "num": 6845}