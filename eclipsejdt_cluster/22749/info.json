{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "094ab4021de2dcc732d6e10ff40377de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb7fa263860174bbc1c3de1801b0a2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["-\tpublic String toString(int tab) {", "+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "-\t\tString s = tabString(tab);", "-\t\ts = s + \"synchronized (\" + expression.toStringExpression() + \")\";  //$NON-NLS-1$ //$NON-NLS-2$", "-\t\ts = s + \"\\n\" + block.toString(tab + 1); //$NON-NLS-1$", "-\t\treturn s;", "+\t\tprintIndent(indent, output);", "+\t\toutput.append(\"synchronized (\"); //$NON-NLS-1$", "+\t\texpression.printExpression(0, output).append(')');", "+\t\toutput.append('\\n');", "+\t\treturn block.printStatement(indent + 1, output); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1f2dc68c1710baf2f5b5d825da3ca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "+", "+\t\tprintIndent(tab, output);", "+\t\tif (constantExpression == null) {", "+\t\t\toutput.append(\"default : \"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\toutput.append(\"case \"); //$NON-NLS-1$", "+\t\t\tconstantExpression.printExpression(0, output).append(\" : \"); //$NON-NLS-1$", "+\t\t}", "+\t\treturn output.append(';');", "+\t}", "-\tpublic String toString(int tab) {", "-", "-\t\tString s = tabString(tab);", "-\t\tif (constantExpression == null) {", "-\t\t\ts = s + \"default : \"; //$NON-NLS-1$", "-\t\t} else {", "-\t\ts = s + \"case \" + constantExpression.toStringExpression() + \" : \"; //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t}", "-\t\treturn s;", "-\t}"]}], "num": 22749}