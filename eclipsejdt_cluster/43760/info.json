{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ed54ce0f30beaef1bf7d3aa2e7b2090", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1abde2459adf1b0af87e726a36568db2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CommentRecorderParser.java", "commitBeforeChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "commitAfterChange": "285e33b7c5da84e3ca1755cdb83ba66c19c28c11", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void pushOnCommentsStack(int start, int end)", "signatureAfterChange": " \tprivate void pushOnCommentsStack(int start, int end)", "diff": ["-\t\t\t\ttry {", "-\t\t\t\t\tthis.commentPtr++;", "-\t\t\t\t\tthis.commentStarts[this.commentPtr] = this.scanner.commentStarts[i];", "-\t\t\t\t\tthis.commentStops[this.commentPtr] = this.scanner.commentStops[i];", "-\t\t\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\t\t\t// this.commentPtr is still correct ", "-\t\t\t\t\tint oldStackLength = this.commentStarts.length;", "-\t\t\t\t\tint oldCommentStarts[] = this.commentStarts;", "-\t\t\t\t\tthis.commentStarts = new int[oldStackLength + CommentIncrement];", "-\t\t\t\t\tSystem.arraycopy(oldCommentStarts, 0, this.commentStarts, 0, oldStackLength);", "-\t\t\t\t\tthis.commentStarts[this.commentPtr] = this.scanner.commentStarts[i];", "-\t\t\t\t\tint oldCommentStops[] = this.commentStops;", "-\t\t\t\t\tthis.commentStops = new int[oldStackLength + CommentIncrement];", "-\t\t\t\t\tSystem.arraycopy(oldCommentStops, 0, this.commentStops, 0, oldStackLength);", "-\t\t\t\t\tthis.commentStops[this.commentPtr] = this.scanner.commentStops[i];", "+\t\t\t\tint stackLength = this.commentStarts.length;", "+\t\t\t\tif (++this.commentPtr >= stackLength) {", "+\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\tthis.commentStarts, 0,", "+\t\t\t\t\t\tthis.commentStarts = new int[stackLength + CommentIncrement], 0,", "+\t\t\t\t\t\tstackLength);", "+\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\tthis.commentStops, 0,", "+\t\t\t\t\t\tthis.commentStops = new int[stackLength + CommentIncrement], 0,", "+\t\t\t\t\t\tstackLength);", "+\t\t\t\tthis.commentStarts[this.commentPtr] = this.scanner.commentStarts[i];", "+\t\t\t\tthis.commentStops[this.commentPtr] = this.scanner.commentStops[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2acada364ef0d9a304cf22998a903248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 58, "signatureBeforeChange": " protected void pushOnSelectorStack(int selectorIdPtr)", "signatureAfterChange": " protected void pushOnElementStack(int kind, int info)", "diff": ["- */", "-protected void pushOnSelectorStack(int selectorIdPtr) {", "-\tif (this.invocationPtr < -1) return;", "+}", "+protected void pushOnElementStack(int kind, int info){", "+\tif (this.elementPtr < -1) return;", "-\t\tthis.selectorStack[++this.invocationPtr] = selectorIdPtr;", "+\t\tthis.elementPtr++;", "+\t\tthis.elementKindStack[this.elementPtr] = kind;", "+\t\tthis.elementInfoStack[this.elementPtr] = info;", "-\t\tint oldStackLength = this.selectorStack.length;", "-\t\tint oldSelectorStack[] = this.selectorStack;", "-\t\tthis.selectorStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldSelectorStack, 0, this.selectorStack, 0, oldStackLength);", "-\t\tthis.selectorStack[this.invocationPtr] = selectorIdPtr;", "+\t\tint oldStackLength = this.elementKindStack.length;", "+\t\tint oldElementStack[] = this.elementKindStack;", "+\t\tint oldElementInfoStack[] = this.elementInfoStack;", "+\t\tthis.elementKindStack = new int[oldStackLength + StackIncrement];", "+\t\tthis.elementInfoStack = new int[oldStackLength + StackIncrement];", "+\t\tSystem.arraycopy(oldElementStack, 0, this.elementKindStack, 0, oldStackLength);", "+\t\tSystem.arraycopy(oldElementInfoStack, 0, this.elementInfoStack, 0, oldStackLength);", "+\t\tthis.elementKindStack[this.elementPtr] = kind;", "+\t\tthis.elementInfoStack[this.elementPtr] = info;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a47f348fb4f55281fb63b269337292", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "41616c6495c935b90356748e848cc3a6ffe7665e", "commitAfterChange": "285e33b7c5da84e3ca1755cdb83ba66c19c28c11", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " protected void pushOnElementStack(int kind, int info)", "signatureAfterChange": " protected void pushOnElementStack(int kind, int info)", "diff": ["-\ttry {", "-\t\tthis.elementPtr++;", "-\t\tthis.elementKindStack[this.elementPtr] = kind;", "-\t\tthis.elementInfoStack[this.elementPtr] = info;", "-\t} catch (IndexOutOfBoundsException e) {", "-\t\tint oldStackLength = this.elementKindStack.length;", "-\t\tint oldElementStack[] = this.elementKindStack;", "-\t\tint oldElementInfoStack[] = this.elementInfoStack;", "-\t\tthis.elementKindStack = new int[oldStackLength + StackIncrement];", "-\t\tthis.elementInfoStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldElementStack, 0, this.elementKindStack, 0, oldStackLength);", "-\t\tSystem.arraycopy(oldElementInfoStack, 0, this.elementInfoStack, 0, oldStackLength);", "-\t\tthis.elementKindStack[this.elementPtr] = kind;", "-\t\tthis.elementInfoStack[this.elementPtr] = info;", "+\tint stackLength = this.elementKindStack.length;", "+\tif (++this.elementPtr >= stackLength) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.elementKindStack, 0,", "+\t\t\tthis.elementKindStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\t\tSystem.arraycopy(", "+\t\t\tthis.elementInfoStack, 0,", "+\t\t\tthis.elementInfoStack = new int[stackLength + StackIncrement], 0,", "+\t\t\tstackLength);", "+\tthis.elementKindStack[this.elementPtr] = kind;", "+\tthis.elementInfoStack[this.elementPtr] = info;"]}], "num": 43760}