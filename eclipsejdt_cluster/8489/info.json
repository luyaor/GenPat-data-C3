{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d00d586ec14d4f4ad94c454f9f3390db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1f07abd3349e7aa91e673d7df15393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 390, "signatureBeforeChange": " protected TypeReference getUnannotatedTypeReference(int dim)", "signatureAfterChange": " protected TypeReference getTypeReference(int dim)", "diff": ["-\t}", "-protected TypeReference getUnannotatedTypeReference(int dim) {", "+}", "+protected TypeReference getTypeReference(int dim) {", "-\t\t\t// single variable reference", "+\t\t\t// single type reference", "-\t\t\t//Qualified variable reference", "+\t\t\t//Qualified type reference", "-\t\t\t\tref.bits |= ASTNode.HasTypeAnnotations;", "+\t\t\t\tif (annotationsOnDimensions != null) {", "+\t\t\t\t\tref.bits |= ASTNode.HasTypeAnnotations;", "+\t\t\t\t}", "+\t\t}", "+\t}", "+\tint levels = ref.getAnnotatableLevels();", "+\tfor (int i = levels - 1; i >= 0; i--) {", "+\t\tif ((length = this.typeAnnotationLengthStack[this.typeAnnotationLengthPtr--]) != 0) {", "+\t\t\tif (ref.annotations == null)", "+\t\t\t\tref.annotations = new Annotation[levels][];", "+\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.typeAnnotationStack,", "+\t\t\t\t\t(this.typeAnnotationPtr -= length) + 1,", "+\t\t\t\t\tref.annotations[i] = new Annotation[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\tif (i == 0) {", "+\t\t\t\tref.sourceStart = ref.annotations[0][0].sourceStart;", "+\t\t\t}", "+\t\t\tref.bits |= ASTNode.HasTypeAnnotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc9c6c733ec844cfaf800462813c8e1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public TypeReference getUnannotatedTypeReference(int dim)", "signatureAfterChange": " public TypeReference getTypeReference(int dim)", "diff": ["-public TypeReference getUnannotatedTypeReference(int dim) {", "+public TypeReference getTypeReference(int dim) {", "+\t\t\t\tif (annotationsOnDimensions != null) {", "+\t\t\t\t\tref.bits |= ASTNode.HasTypeAnnotations;", "+\t\t\t\t}", "-\t\t} else {//Qualified variable reference", "+\t\t} else { // Qualified type reference", "+\t\t\t\tif (annotationsOnDimensions != null) {", "+\t\t\t\t\tref.bits |= ASTNode.HasTypeAnnotations;", "+\t\t\t\t}", "+\tint levels = ref.getAnnotatableLevels();", "+\tfor (int i = levels - 1; i >= 0; i--) {", "+\t\tif ((length = this.typeAnnotationLengthStack[this.typeAnnotationLengthPtr--]) != 0) {", "+\t\t\tif (ref.annotations == null)", "+\t\t\t\tref.annotations = new Annotation[levels][];", "+\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.typeAnnotationStack,", "+\t\t\t\t\t(this.typeAnnotationPtr -= length) + 1,", "+\t\t\t\t\tref.annotations[i] = new Annotation[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\tif (i == 0) {", "+\t\t\t\tref.sourceStart = ref.annotations[0][0].sourceStart;", "+\t\t\t}", "+\t\t\tref.bits |= ASTNode.HasTypeAnnotations;", "+\t\t}", "+\t}"]}], "num": 8489}