{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9bf12562c01603596ac81866324168f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6875a582e3d41e0ec0301d66f7d1d739", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "commitAfterChange": "974c16da6f3c62d8f216865177d38ac0f89806ec", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\twhile (getNextCharAsJavaIdentifierPart()){/*empty*/}", "+\tchar[] src = this.source;", "+\tidentLoop: {", "+\t\tint pos, srcLength = this.source.length;", "+\t\twhile (true) {", "+\t\t\tif ((pos = this.currentPosition) >= srcLength) // handle the obvious case upfront", "+\t\t\t\tbreak identLoop;", "+\t\t\tchar c = src[pos];", "+\t\t\tif (c < MAX_OBVIOUS) {", "+\t\t\t\tswitch (ObviousIdentCharNatures[c]) {", "+\t\t\t\t\tcase C_LETTER :", "+\t\t\t\t\tcase C_DIGIT :", "+\t\t               if (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\tthis.currentCharacter = c;", "+\t\t\t\t\t\t\tunicodeStore();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\tbreak;\t\t\t\t\t\t", "+\t\t\t\t\t\t", "+\t\t\t\t\tcase C_SEPARATOR :", "+\t\t\t\t\tcase C_SPACE :", "+\t\t\t\t\t\tthis.currentCharacter = c;", "+\t\t\t\t\t\tbreak identLoop;\t", "+", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\t//System.out.println(\"slow<=128:  \"+ c);\t\t\t\t\t\t", "+\t\t\t\t\t\twhile (getNextCharAsJavaIdentifierPart()){/*empty*/}", "+\t\t\t\t\t\tbreak identLoop;\t\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\t//System.out.println(\"slow>>128:  \"+ c);\t\t\t\t\t\t", "+\t\t\t\twhile (getNextCharAsJavaIdentifierPart()){/*empty*/}", "+\t\t\t\tbreak identLoop;\t\t\t\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "-\tchar firstLetter;", "-\tfirstLetter = data[index];", "-\tswitch (firstLetter) {", "+", "+\tswitch (data[index]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8541e9e066f11bf5fa16677cdbdc73ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "13b501923d975b39fcf9769686302cfbbf5a49d6", "commitAfterChange": "006d0d2bcd46f9eeb26a0d3ca2d5e66e5408265f", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\twhile (getNextCharAsJavaIdentifierPart()){/*empty*/}", "+\tchar[] src = this.source;", "+\tidentLoop: {", "+\t\tint pos, srcLength = this.source.length;", "+\t\twhile (true) {", "+\t\t\tif ((pos = this.currentPosition) >= srcLength) // handle the obvious case upfront", "+\t\t\t\tbreak identLoop;", "+\t\t\tchar c = src[pos];", "+\t\t\tif (c < MAX_OBVIOUS) {", "+\t\t\t\tswitch (ObviousIdentCharNatures[c]) {", "+\t\t\t\t\tcase C_LETTER :", "+\t\t\t\t\tcase C_DIGIT :", "+\t\t               if (this.withoutUnicodePtr != 0) {", "+\t\t\t\t\t\t\tthis.currentCharacter = c;", "+\t\t\t\t\t\t\tunicodeStore();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.currentPosition++;", "+\t\t\t\t\t\tbreak;\t\t\t\t\t\t", "+\t\t\t\t\t\t", "+\t\t\t\t\tcase C_SEPARATOR :", "+\t\t\t\t\tcase C_SPACE :", "+\t\t\t\t\t\tthis.currentCharacter = c;", "+\t\t\t\t\t\tbreak identLoop;\t", "+", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\t//System.out.println(\"slow<=128:  \"+ c);\t\t\t\t\t\t", "+\t\t\t\t\t\twhile (getNextCharAsJavaIdentifierPart()){/*empty*/}", "+\t\t\t\t\t\tbreak identLoop;\t\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\t//System.out.println(\"slow>>128:  \"+ c);\t\t\t\t\t\t", "+\t\t\t\twhile (getNextCharAsJavaIdentifierPart()){/*empty*/}", "+\t\t\t\tbreak identLoop;\t\t\t\t\t\t", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "-\tchar firstLetter;", "-\tfirstLetter = data[index];", "-\tswitch (firstLetter) {", "+", "+\tswitch (data[index]) {"]}], "num": 17987}