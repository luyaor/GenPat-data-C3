{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96a008e4e77408d4320f46d12b0560d7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fe3ed5aa00e35704fc3f710bad5972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "e173f77ccd0067cc5ddcb6d9e15b204243baff15", "commitAfterChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["-\tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration) {", "+\t}", "+\tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration) {", "+\t\tint fieldCount = (typeDeclaration.fields == null) ? 0 : typeDeclaration.fields.length;", "+\t\tint methodCount = (typeDeclaration.methods == null) ? 0 : typeDeclaration.methods.length;", "+\t\tint typeCount = (typeDeclaration.memberTypes == null) ? 0 : typeDeclaration.memberTypes.length;", "+\t", "+\t\tif (methodCount == 1 && typeDeclaration.methods[0].isDefaultConstructor()) {", "+\t\t\tmethodCount = 0;", "+\t\t}", "+\t\tfinal int memberLength = fieldCount + methodCount + typeCount;", "+", "+\t\tboolean insertNewLine = memberLength > 0;", "+\t\t", "+\t\tif (!insertNewLine) {", "+\t\t\tif (typeDeclaration.getKind() == IGenericType.ENUM) {", "+\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_enum_declaration;", "+\t\t\t} else if ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f062f81c52b8932daefba492f77b67de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c16713f6dd450429a4303737780dffe1c893ae16", "commitAfterChange": "a2b1ef4ffb154e8a3bdeec7997022edfb5dbf9d8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["+\t\t\t} else if (TypeDeclaration.kind(typeDeclaration.modifiers) == TypeDeclaration.ANNOTATION_TYPE_DECL) {", "+\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_annotation_declaration;", "-\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_type_declaration;", "+\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_type_declaration;\t\t\t\t"]}], "num": 56963}