{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab70ab1af71cb91c6f6944ad457a02e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a8b4a3818a516380dc62adaa82b60f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding actualType, Map substitutes, int constraint)", "signatureAfterChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding actualType, Map substitutes, int constraint)", "diff": ["-\t\tReferenceBinding formalEquivalent, actualEquivalent;", "+\t\tTypeBinding formalEquivalent, actualEquivalent;", "-\t\t        actualEquivalent = ((ReferenceBinding)actualType).findSuperTypeWithSameErasure(this.type);", "+\t\t        actualEquivalent = actualType.findSuperTypeWithSameErasure(this.type);", "-\t\t        actualEquivalent = (ReferenceBinding) actualType;", "+\t\t        actualEquivalent = actualType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb845f80d81436743bf13d81584115d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "signatureAfterChange": " \tpublic void collectSubstitutes(Scope scope, TypeBinding otherType, Map substitutes, int constraint)", "diff": ["-\t\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeErasingTo((ReferenceBinding)this.type.erasure());", "+\t\t        otherEquivalent = ((ReferenceBinding)otherType).findSuperTypeWithSameErasure(this.type);", "-\t\t        equivalent = this.findSuperTypeErasingTo((ReferenceBinding)(otherType.erasure()));", "+\t\t        equivalent = this.findSuperTypeWithSameErasure(otherType);"]}], "num": 18818}