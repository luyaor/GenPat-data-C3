{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da8d3d65e71c56d95b96a0672572f7e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f39761588afbae83592082d173ee113", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "3f75c9397ff53f65021c19499da76d98c9e23550", "commitAfterChange": "d3a9da1814717a2c18ee252440a7a4915c82ca4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tif (this.completionIdentifier == null && ", "+\t\t\t\t\t\tif (!this.completedTokenFound && ", "+\t\t\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-\t\t\t\t\t//&& (previousToken == TokenNameDOT)", "-\t\t\t\t\t&& (this.completionIdentifier == null)", "-\t\t\t\t\t&& (whiteStart <= this.cursorLocation+1)", "-\t\t\t\t\t&& (this.cursorLocation < this.startPosition)", "-\t\t\t\t\t&& !Character.isJavaIdentifierStart(this.currentCharacter)){", "+\t\t\t\t\t\t//&& (previousToken == TokenNameDOT)", "+\t\t\t\t\t\t&& (!this.completedTokenFound)", "+\t\t\t\t\t\t&& (whiteStart <= this.cursorLocation+1)", "+\t\t\t\t\t\t&& (this.cursorLocation < this.startPosition)", "+\t\t\t\t\t\t&& !Character.isJavaIdentifierStart(this.currentCharacter)){", "+", "+\t\t\t\t\tif (this.tokenizeWhiteSpace && hasWhiteSpaces && !this.whitespacesBeforeCompletedTokenFound) {", "+\t\t\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "+\t\t\t\t\t\tthis.currentPosition-=offset;", "+\t\t\t\t\t\tthis.startPosition = whiteStart;", "+\t\t\t\t\t\tthis.whitespacesBeforeCompletedTokenFound = true;", "+\t\t\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\t\t\t}", "-\t\t\t\t\t/* Warning:", "-\t\t\t\t\t * Above statement reset scanner position at token start which can make", "-\t\t\t\t\t * scanner enter in an infinite loop if completionIdentifier is still null!", "-\t\t\t\t\t * (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=114115)", "-\t\t\t\t\t */", "+\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\t\t\tthis.whitespacesBeforeCompletedTokenFound = false;", "-\t\t\t\tif (this.completionIdentifier == null && ", "+\t\t\t\tif (!this.completedTokenFound  && ", "+\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\t\t\t\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\t\t\t\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "-//\t\t\t\t\tif (this.startPosition <= this.cursorLocation && this.cursorLocation <= this.currentPosition-1){", "-//\t\t\t\t\t}", "+\t\t\t\t\tif (this.startPosition <= this.cursorLocation && this.cursorLocation <= this.currentPosition-1){", "+\t\t\t\t\t\tthis.completedTokenFound = true;", "+\t\t\t\t\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\t\t\t\t\tthis.completedIdentifierEnd = this.currentPosition - 1;", "+\t\t\t\t\t}", "-\tif (this.completionIdentifier == null && ", "+\tif (!this.completedTokenFound && ", "+\t\tthis.completedTokenFound = true;", "+\t\tthis.completedIdentifierStart = this.startPosition;", "+\t\tthis.completedIdentifierEnd = this.currentPosition - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c179e5b6a214ff7df8c04a2555eab41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["+\t\tthis.alignment_for_arguments_in_enum_constant = Alignment.M_COMPACT_SPLIT;", "+\t\tthis.alignment_for_superinterfaces_in_enum_declaration = Alignment.M_NEXT_SHIFTED_SPLIT;", "+\t\tthis.brace_position_for_annotation_type_declaration = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tthis.brace_position_for_enum_constant = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tthis.brace_position_for_enum_declaration = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tthis.indent_body_declarations_compare_to_enum_constant_header = true;", "+\t\tthis.indent_body_declarations_compare_to_enum_declaration_header = true;", "+\t\tthis.insert_new_line_in_empty_enum_constant = true;", "+\t\tthis.insert_new_line_in_empty_enum_declaration = true;", "+\t\tthis.insert_space_after_and_in_wilcard = true;", "+\t\tthis.insert_space_after_at_in_annotation = false;", "+\t\tthis.insert_space_after_at_in_annotation_type_declaration = false;", "+\t\tthis.insert_space_after_closing_angle_bracket_in_type_arguments = true;", "+\t\tthis.insert_space_after_closing_angle_bracket_in_type_parameters = true;", "+\t\tthis.insert_space_after_colon_in_for = true;", "+\t\tthis.insert_space_after_comma_in_annotation = true;", "+\t\tthis.insert_space_after_comma_in_enum_constant_arguments = true;", "+\t\tthis.insert_space_after_comma_in_enum_declarations = true;", "+\t\tthis.insert_space_after_comma_in_parameterized_type_reference = true;", "+\t\tthis.insert_space_after_comma_in_type_arguments = true;", "+\t\tthis.insert_space_after_comma_in_type_parameters = true;", "+\t\tthis.insert_space_after_opening_angle_bracket_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_after_opening_angle_bracket_in_type_arguments = false;", "+\t\tthis.insert_space_after_opening_angle_bracket_in_type_parameters = false;", "+\t\tthis.insert_space_after_opening_paren_in_annotation = false;", "+\t\tthis.insert_space_after_opening_paren_in_enum_constant = false;", "+\t\tthis.insert_space_after_question_in_wilcard = true;", "+\t\tthis.insert_space_before_and_in_wilcard = true;", "+\t\tthis.insert_space_before_at_in_annotation_type_declaration = true;", "+\t\tthis.insert_space_before_closing_angle_bracket_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_before_closing_angle_bracket_in_type_arguments = false;", "+\t\tthis.insert_space_before_closing_angle_bracket_in_type_parameters = false;", "+\t\tthis.insert_space_before_closing_paren_in_annotation = false;", "+\t\tthis.insert_space_before_closing_paren_in_enum_constant = false;", "+\t\tthis.insert_space_before_colon_in_for = true;", "+\t\tthis.insert_space_before_comma_in_enum_constant_arguments = false;", "+\t\tthis.insert_space_before_comma_in_enum_declarations = false;", "+\t\tthis.insert_space_before_comma_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_before_comma_in_type_arguments = false;", "+\t\tthis.insert_space_before_comma_in_type_parameters = false;", "+\t\tthis.insert_space_before_opening_angle_bracket_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_before_opening_angle_bracket_in_type_arguments = false;", "+\t\tthis.insert_space_before_opening_angle_bracket_in_type_parameters = false;", "+\t\tthis.insert_space_before_opening_brace_in_annotation_type_declaration = true;", "+\t\tthis.insert_space_before_opening_brace_in_enum_constant = true;", "+\t\tthis.insert_space_before_opening_brace_in_enum_declaration = true;", "+\t\tthis.insert_space_before_opening_paren_in_annotation = false;", "+\t\tthis.insert_space_before_opening_paren_in_annotation_type_member_declaration = false;", "+\t\tthis.insert_space_before_opening_paren_in_enum_constant = false;", "+\t\tthis.insert_space_before_question_in_wilcard = true;", "+\t\tthis.insert_space_between_empty_parens_in_annotation_type_member_declaration = false;", "+\t\tthis.insert_space_between_empty_parens_in_enum_constant = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2d8703733daa1fc58344734a1061ebc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void setJavaConventionsSettings()", "signatureAfterChange": " \t \tpublic void setJavaConventionsSettings()", "diff": ["+\t\tthis.alignment_for_arguments_in_enum_constant = Alignment.M_COMPACT_SPLIT;", "+\t\tthis.alignment_for_superinterfaces_in_enum_declaration = Alignment.M_COMPACT_SPLIT;", "+\t\tthis.brace_position_for_annotation_type_declaration = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tthis.brace_position_for_enum_constant = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tthis.brace_position_for_enum_declaration = DefaultCodeFormatterConstants.END_OF_LINE;", "+\t\tthis.indent_body_declarations_compare_to_enum_constant_header = true;", "+\t\tthis.indent_body_declarations_compare_to_enum_declaration_header = true;", "+\t\tthis.insert_new_line_in_empty_enum_constant = true;", "+\t\tthis.insert_new_line_in_empty_enum_declaration = true;", "+\t\tthis.insert_space_after_and_in_wilcard = true;", "+\t\tthis.insert_space_after_at_in_annotation = false;", "+\t\tthis.insert_space_after_at_in_annotation_type_declaration = false;", "+\t\tthis.insert_space_after_closing_angle_bracket_in_type_arguments = true;", "+\t\tthis.insert_space_after_closing_angle_bracket_in_type_parameters = true;", "+\t\tthis.insert_space_after_colon_in_for = true;", "+\t\tthis.insert_space_after_comma_in_annotation = true;", "+\t\tthis.insert_space_after_comma_in_enum_constant_arguments = true;", "+\t\tthis.insert_space_after_comma_in_enum_declarations = true;", "+\t\tthis.insert_space_after_comma_in_parameterized_type_reference = true;", "+\t\tthis.insert_space_after_comma_in_type_arguments = true;", "+\t\tthis.insert_space_after_comma_in_type_parameters = true;", "+\t\tthis.insert_space_after_opening_angle_bracket_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_after_opening_angle_bracket_in_type_arguments = false;", "+\t\tthis.insert_space_after_opening_angle_bracket_in_type_parameters = false;", "+\t\tthis.insert_space_after_opening_paren_in_annotation = false;", "+\t\tthis.insert_space_after_opening_paren_in_enum_constant = false;", "+\t\tthis.insert_space_after_question_in_wilcard = true;", "+\t\tthis.insert_space_before_and_in_wilcard = true;", "+\t\tthis.insert_space_before_at_in_annotation_type_declaration = true;", "+\t\tthis.insert_space_before_closing_angle_bracket_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_before_closing_angle_bracket_in_type_arguments = false;", "+\t\tthis.insert_space_before_closing_angle_bracket_in_type_parameters = false;", "+\t\tthis.insert_space_before_closing_paren_in_annotation = false;", "+\t\tthis.insert_space_before_closing_paren_in_enum_constant = false;", "+\t\tthis.insert_space_before_colon_in_for = true;", "+\t\tthis.insert_space_before_comma_in_enum_constant_arguments = false;", "+\t\tthis.insert_space_before_comma_in_enum_declarations = false;", "+\t\tthis.insert_space_before_comma_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_before_comma_in_type_arguments = false;", "+\t\tthis.insert_space_before_comma_in_type_parameters = false;", "+\t\tthis.insert_space_before_opening_angle_bracket_in_parameterized_type_reference = false;", "+\t\tthis.insert_space_before_opening_angle_bracket_in_type_arguments = false;", "+\t\tthis.insert_space_before_opening_angle_bracket_in_type_parameters = false;", "+\t\tthis.insert_space_before_opening_brace_in_annotation_type_declaration = true;", "+\t\tthis.insert_space_before_opening_brace_in_enum_constant = true;", "+\t\tthis.insert_space_before_opening_brace_in_enum_declaration = true;", "+\t\tthis.insert_space_before_opening_paren_in_annotation = false;", "+\t\tthis.insert_space_before_opening_paren_in_annotation_type_member_declaration = false;", "+\t\tthis.insert_space_before_opening_paren_in_enum_constant = false;", "+\t\tthis.insert_space_before_question_in_wilcard = true;", "+\t\tthis.insert_space_between_empty_parens_in_annotation_type_member_declaration = false;", "+\t\tthis.insert_space_between_empty_parens_in_enum_constant = false;"]}], "num": 30908}