{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b5f82a64c90cc827763a1de61ef4aaa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b62577c539eb90bb98158daa7ee6ee4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "signatureAfterChange": "  public static char[] createIndexKey( \tint modifiers, \tchar[] packageName, \tchar[] typeName, \tchar[][] enclosingTypeNames, \tchar classOrInterface, \tchar[] superTypeName, \tchar superClassOrInterface)", "diff": ["-\tSuperTypeReferencePattern record = getSuperTypeReferenceRecord();", "-\trecord.modifiers = modifiers;", "-\trecord.pkgName = packageName;", "-\trecord.classOrInterface = classOrInterface;", "-\trecord.superClassOrInterface = superClassOrInterface;", "+\tSuperTypeReferencePattern pattern = new SuperTypeReferencePattern(R_EXACT_MATCH | R_CASE_SENSITIVE);", "+\tpattern.modifiers = modifiers;", "+\tpattern.pkgName = packageName;", "+\tpattern.classOrInterface = classOrInterface;", "+\tpattern.superClassOrInterface = superClassOrInterface;", "-\trecord.enclosingTypeName = CharOperation.concatWith(enclosingTypeNames, '$');", "-\trecord.simpleName = CharOperation.lastSegment(typeName, '.');", "-\trecord.superSimpleName = CharOperation.lastSegment(superTypeName, '.');", "-\trecord.superQualification = null;", "-\tif (record.superSimpleName != superTypeName) {", "-\t\tint length = superTypeName.length - record.superSimpleName.length - 1;", "-\t\trecord.superQualification = new char[length];", "-\t\tSystem.arraycopy(superTypeName, 0, record.superQualification, 0, length);", "+\tpattern.enclosingTypeName = CharOperation.concatWith(enclosingTypeNames, '$');", "+\tpattern.simpleName = CharOperation.lastSegment(typeName, '.');", "+\tpattern.superSimpleName = CharOperation.lastSegment(superTypeName, '.');", "+\tpattern.superQualification = null;", "+\tif (pattern.superSimpleName != superTypeName) {", "+\t\tint length = superTypeName.length - pattern.superSimpleName.length - 1;", "+\t\tpattern.superQualification = new char[length];", "+\t\tSystem.arraycopy(superTypeName, 0, pattern.superQualification, 0, length);", "-\tchar[] superTypeSourceName = CharOperation.lastSegment(record.superSimpleName, '$');", "-\tif (superTypeSourceName != record.superSimpleName) {", "-\t\tint start = record.superQualification == null ? 0 : record.superQualification.length + 1;", "-\t\tint prefixLength = record.superSimpleName.length - superTypeSourceName.length;", "+\tchar[] superTypeSourceName = CharOperation.lastSegment(pattern.superSimpleName, '$');", "+\tif (superTypeSourceName != pattern.superSimpleName) {", "+\t\tint start = pattern.superQualification == null ? 0 : pattern.superQualification.length + 1;", "+\t\tint prefixLength = pattern.superSimpleName.length - superTypeSourceName.length;", "-\t\tif (record.superQualification != null) {", "-\t\t\tSystem.arraycopy(record.superQualification, 0, mangledQualification, 0, start-1);", "+\t\tif (pattern.superQualification != null) {", "+\t\t\tSystem.arraycopy(pattern.superQualification, 0, mangledQualification, 0, start-1);", "-\t\tSystem.arraycopy(record.superSimpleName, 0, mangledQualification, start, prefixLength);", "-\t\trecord.superQualification = mangledQualification;", "-\t\trecord.superSimpleName = superTypeSourceName;", "+\t\tSystem.arraycopy(pattern.superSimpleName, 0, mangledQualification, start, prefixLength);", "+\t\tpattern.superQualification = mangledQualification;", "+\t\tpattern.superSimpleName = superTypeSourceName;", "-\treturn record.encodeIndexKey();", "+\treturn pattern.encodeIndexKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceced68a64f654c3068068e15a584b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\tObject[] nonJavaResources = new IResource[5];", "-\t\tint nonJavaResourcesCounter = 0;", "+\t\tObject[] resources = new IResource[5];", "+\t\tint resourcesCounter = 0;", "-\t\t\t\t\t\tif (nonJavaResources.length == nonJavaResourcesCounter) {", "+\t\t\t\t\t\tif (resources.length == resourcesCounter) {", "-\t\t\t\t\t\t\t\tnonJavaResources,", "+\t\t\t\t\t\t\t\tresources,", "-\t\t\t\t\t\t\t\t(nonJavaResources = new IResource[nonJavaResourcesCounter * 2]),", "+\t\t\t\t\t\t\t\t(resources = new IResource[resourcesCounter * 2]),", "-\t\t\t\t\t\t\t\tnonJavaResourcesCounter);", "+\t\t\t\t\t\t\t\tresourcesCounter);", "-\t\t\t\t\t\tnonJavaResources[nonJavaResourcesCounter++] = res;", "+\t\t\t\t\t\tresources[resourcesCounter++] = res;", "-\t\t\t\t\t\tif (nonJavaResources.length == nonJavaResourcesCounter) {", "+\t\t\t\t\t\tif (resources.length == resourcesCounter) {", "-\t\t\t\t\t\t\t\tnonJavaResources,", "+\t\t\t\t\t\t\t\tresources,", "-\t\t\t\t\t\t\t\t(nonJavaResources = new IResource[nonJavaResourcesCounter * 2]),", "+\t\t\t\t\t\t\t\t(resources = new IResource[resourcesCounter * 2]),", "-\t\t\t\t\t\t\t\tnonJavaResourcesCounter);", "+\t\t\t\t\t\t\t\tresourcesCounter);", "-\t\t\t\t\t\tnonJavaResources[nonJavaResourcesCounter++] = res;", "+\t\t\t\t\t\tresources[resourcesCounter++] = res;", "-\t\t\tif (nonJavaResources.length != nonJavaResourcesCounter) {", "+\t\t\tif (resources.length != resourcesCounter) {", "-\t\t\t\t\tnonJavaResources,", "+\t\t\t\t\tresources,", "-\t\t\t\t\t(nonJavaResources = new IResource[nonJavaResourcesCounter]),", "+\t\t\t\t\t(resources = new IResource[resourcesCounter]),", "-\t\t\t\t\tnonJavaResourcesCounter);", "+\t\t\t\t\tresourcesCounter);", "-\t\t\tnonJavaResources = NO_NON_JAVA_RESOURCES;", "-\t\t\tnonJavaResourcesCounter = 0;", "+\t\t\tresources = NO_NON_JAVA_RESOURCES;", "+\t\t\tresourcesCounter = 0;", "-\t\treturn nonJavaResources;", "+\t\treturn resources;", "+\t}"]}], "num": 67588}