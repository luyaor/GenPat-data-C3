{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "674aba5d6e5e52658eda9bc7d934c0fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38ac0c594698312ba0915777cfdcea5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "9f63437bec67bc6f1450b706ffa6a59a67485b74", "commitAfterChange": "2b5868a69a1295fe1d99f9e80995ceed273132ed", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void traverse( \t\tASTVisitor visitor, \t\tBlockScope blockScope)", "signatureAfterChange": "  public void traverse(ASTVisitor visitor, BlockScope blockScope)", "diff": ["-\t", "-\tpublic void traverse(", "-\t\tASTVisitor visitor,", "-\t\tBlockScope blockScope) {", "-\t\tif (visitor.visit(this, blockScope)) {", "-\t\t\ttype.traverse(visitor, blockScope);", "-\t\t\texpression.traverse(visitor, blockScope);", "-\t\tvisitor.endVisit(this, blockScope);", "+", "+public void traverse(ASTVisitor visitor, BlockScope blockScope) {", "+\tif (visitor.visit(this, blockScope)) {", "+\t\tthis.type.traverse(visitor, blockScope);", "+\t\tthis.expression.traverse(visitor, blockScope);", "+\t}", "+\tvisitor.endVisit(this, blockScope);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99599c07306e8109af462217dfdf02f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "b418235473d69146fcb35be10bf158bb2b040cf7", "commitAfterChange": "eadf5ba6d44f28f071965cf829d67590b0a71974", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   \tpublic void traverse( \t\tASTVisitor visitor, \t\tBlockScope blockScope)", "signatureAfterChange": "  public void traverse(ASTVisitor visitor, \tBlockScope blockScope)", "diff": ["-", "-\tpublic void traverse(", "-\t\tASTVisitor visitor,", "-\t\tBlockScope blockScope) {", "-", "-\t\tif (visitor.visit(this, blockScope)) {", "-\t\t\tif (constantExpression != null) constantExpression.traverse(visitor, blockScope);", "-\t\t}", "-\t\tvisitor.endVisit(this, blockScope);", "+", "+public void traverse(ASTVisitor visitor, \tBlockScope blockScope) {", "+\tif (visitor.visit(this, blockScope)) {", "+\t\tif (this.constantExpression != null) this.constantExpression.traverse(visitor, blockScope);", "+\t}", "+\tvisitor.endVisit(this, blockScope);", "+}"]}], "num": 39013}