{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "036dd018b9a14d7fa0d6faf4e3176c91", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9157f85d7ec013fd7bf19a36215b3bcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "2e79ccb3e74d7d6d092288c2beec68b5a73c3ab5", "commitAfterChange": "74e72f38cd466593415ad7cf59731c1bc5d029ae", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public final char[] signature(ClassFile classFile)", "signatureAfterChange": " public final char[] signature(ClassFile classFile)", "diff": ["-\t\tif ((this.tagBits & TagBits.ContainsNestedTypesInSignature) != 0) { ", "+\t\tif ((this.tagBits & TagBits.ContainsNestedTypesInSignature) != 0) {", "-\t\t\t\t\t\t\tthis.tagBits |= TagBits.ContainsNestedTypesInSignature;", "-\t\t\t\t", "-\t\t\t\t\t\tthis.tagBits |= TagBits.ContainsNestedTypesInSignature;", "-\t\t\t\t\t\tthis.tagBits |= TagBits.ContainsNestedTypesInSignature;", "-\t\t\t\t\tthis.tagBits |= TagBits.ContainsNestedTypesInSignature;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87fd365c1b665a4ed839a87f81bc911", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean annotatingEnumerator)", "signatureAfterChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean annotatingEnumerator)", "diff": ["-\t\tAnnotation se8NullAnnotation = null;", "+\t\tAnnotation se8NullAnnotation = null; // just any involved annotation so we have a location for error reporting", "-\t\t\t\t\tse8nullBits = TagBits.AnnotationNonNull;", "+\t\t\t\t\tse8nullBits |= TagBits.AnnotationNonNull;", "-\t\t\t\t\tse8nullBits = TagBits.AnnotationNullable;", "+\t\t\t\t\tse8nullBits |= TagBits.AnnotationNullable;"]}], "num": 3159}