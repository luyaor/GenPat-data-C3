{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f4e91226563a1915c7907da977c55a0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e9af36c9a409b9ddd7a3268ff4f667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": " \tpublic void test0225() throws JavaModelException", "signatureAfterChange": " \tpublic void test0225() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, bindings.length);", "+\t\tassertEquals(\"Wrong size\", 1, bindings.length);", "+\t\tassertNotNull(\"No binding\", bindings[0]);", "+\t\tassertEquals(\"@LZork;\", bindings[0].getKey());", "+\t\tassertFalse(\"Annotation should not be flagged as recovered\", bindings[0].isRecovered());", "+\t\tassertTrue(\"Annotation type should be flagged as recovered\", bindings[0].getAnnotationType().isRecovered());\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7237a5baa15eea386f7f078f21f86070", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": "  \tpublic void test0613() throws JavaModelException", "signatureAfterChange": "  \tpublic void test0613() throws JavaModelException", "diff": ["-\t\t\tassertNull(\"Got a binding\", binding);", "+\t\t\tassertNotNull(\"No binding\", binding);", "+\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding.getKey());", "-\t\t\tassertNull(\"Got a binding\", typeBinding);", "+\t\t\tassertNotNull(\"No binding\", typeBinding);", "+\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding.getKey());\t\t\t", "-\t\t\tassertNull(\"Got a binding\", binding2);", "+\t\t\tassertNotNull(\"Got a binding\", binding2);", "+\t\t\tassertEquals(\"LX;.foo(Z)V#z\", binding2.getKey());\t\t\t\t\t\t"]}], "num": 1076}