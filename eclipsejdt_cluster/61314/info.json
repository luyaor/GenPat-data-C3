{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88e031af5cde3518f11597ace74f0928", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "583b28ee09dd6b44a90a14f1853fb1d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SignatureTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testCreateTypeSignature()", "signatureAfterChange": " public void testCreateTypeSignature()", "diff": ["+\tassertEquals(\"Signature#createTypeSignature is not correct18\", \"QList<QList<QString;>;>;\",", "+\t\t\tSignature.createTypeSignature(\"List<List<String>>\".toCharArray(), false));", "+\tassertEquals(\"Signature#createTypeSignature is not correct19\", \"QList<QList<I>;>;\",", "+\t\t\tSignature.createTypeSignature(\"List<List<int>>\".toCharArray(), false));", "+\tassertEquals(\"Signature#createTypeSignature is not correct20\", \"[QList<QList<[I>;>;\",", "+\t\t\tSignature.createTypeSignature(\"List<List<int[]>>[]\".toCharArray(), false));", "+\tassertEquals(\"Signature#createTypeSignature is not correct21\", \"Qjava.y.Map<[QObject;QString;>.MapEntry<[Qp.K<QT;>;[Qq.r.V2;>;\",", "+\t\t\tSignature.createTypeSignature(\"java.y.Map<Object[],String>.MapEntry<p.K<T>[],q.r.V2[]>\".toCharArray(), false));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651e2f3debd8d680bb0e1bd44f2c9564", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTests.java", "commitBeforeChange": "e65379b9057b35418a4c7491224b13ea19038724", "commitAfterChange": "6278fd1d7c6c65fb53043497c72b040b601f0f62", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testWarningTokens()", "signatureAfterChange": " public void testWarningTokens()", "diff": ["+\tassertEquals(\"wrong token\", \"deprecation\", CorrectionEngine.getWarningToken(IProblem.JavadocUsingDeprecatedField));", "+\tassertEquals(\"wrong token\", \"deprecation\", CorrectionEngine.getWarningToken(IProblem.JavadocUsingDeprecatedConstructor));", "+\tassertEquals(\"wrong token\", \"deprecation\", CorrectionEngine.getWarningToken(IProblem.JavadocUsingDeprecatedMethod));", "+\tassertEquals(\"wrong token\", \"deprecation\", CorrectionEngine.getWarningToken(IProblem.JavadocUsingDeprecatedType));"]}], "num": 61314}