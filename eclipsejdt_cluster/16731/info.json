{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a44510b202a76033bdbc6fd6c2b6b8c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22936249dbc8ab0814188e7a57999b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "ab20fccfe10c557b2eadd05f353546a2c1937b1d", "commitAfterChange": "30f4f00f119897159bc44be7bed4fd917933e44b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void run()", "signatureAfterChange": " \tpublic void run()", "diff": ["+\t\t\tclass ProgressJob extends Job {", "+\t\t\t\tProgressJob(String name) {", "+\t\t\t\t\tsuper(name);", "+\t\t\t\t}", "+\t\t\t\tprotected IStatus run(IProgressMonitor monitor) {", "+\t\t\t\t\tint awaitingJobsCount;", "+\t\t\t\t\twhile ((awaitingJobsCount = awaitingJobsCount()) > 0) {", "+\t\t\t\t\t\tmonitor.subTask(Util.bind(\"manager.filesToIndex\", Integer.toString(awaitingJobsCount))); //$NON-NLS-1$", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tThread.sleep(500);", "+\t\t\t\t\t\t} catch (InterruptedException e) {", "+\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn Status.OK_STATUS;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tProgressJob progressJob = null;", "+\t\t\t\t\t\t\tif (progressJob != null) progressJob = null;", "+\t\t\t\t\t\tif (progressJob == null) {", "+\t\t\t\t\t\t\tprogressJob = new ProgressJob(Util.bind(\"manager.indexingInProgress\")); //$NON-NLS-1$", "+\t\t\t\t\t\t\tprogressJob.setPriority(Job.LONG);", "+\t\t\t\t\t\t\tprogressJob.setSystem(true);", "+\t\t\t\t\t\t\tprogressJob.schedule();", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2202f29f45d34cd291eaa614f241d7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "bbbc03c8974b50736f7c2247e05857599972fd62", "commitAfterChange": "3dbb4c838e7dddd8ff99712109431d1f442c8931", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void run()", "signatureAfterChange": " \tpublic void run()", "diff": ["-\t\t\t\t\twhile ((awaitingJobsCount = awaitingJobsCount()) > 0) {", "+\t\t\t\t\twhile (!monitor.isCanceled() && (awaitingJobsCount = awaitingJobsCount()) > 0) {", "-\t\t\tProgressJob progressJob = null;", "+\t\t\tthis.progressJob = null;", "-\t\t\t\t\t\t\tif (progressJob != null) progressJob = null;", "+\t\t\t\t\t\t\tif (this.progressJob != null) {", "+\t\t\t\t\t\t\t\tthis.progressJob.cancel();", "+\t\t\t\t\t\t\t\tthis.progressJob = null;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (progressJob == null) {", "-\t\t\t\t\t\t\tprogressJob = new ProgressJob(Messages.manager_indexingInProgress); ", "-\t\t\t\t\t\t\tprogressJob.setPriority(Job.LONG);", "-\t\t\t\t\t\t\tprogressJob.setSystem(true);", "-\t\t\t\t\t\t\tprogressJob.schedule();", "+\t\t\t\t\t\tif (this.progressJob == null) {", "+\t\t\t\t\t\t\tthis.progressJob = new ProgressJob(Messages.manager_indexingInProgress); ", "+\t\t\t\t\t\t\tthis.progressJob.setPriority(Job.LONG);", "+\t\t\t\t\t\t\tthis.progressJob.setSystem(true);", "+\t\t\t\t\t\t\tthis.progressJob.schedule();"]}], "num": 16731}