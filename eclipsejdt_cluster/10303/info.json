{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b63f43e368d4796b177ac3b732dc4b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15f2393d73da11689e3e3460a906e08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f595c3df6cbb40a33fa3de2980da6860a9a3730f", "commitAfterChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic static Hashtable getDefaultOptions()", "signatureAfterChange": "  \tpublic static Hashtable getDefaultOptions()", "diff": ["-\t", "-\t\tHashtable defaultOptions = new Hashtable(10);", "-", "-\t\t// see JavaCorePreferenceInitializer#initializeDefaultPluginPreferences() for changing default settings", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tIEclipsePreferences defaultPreferences = manager.getDefaultPreferences();", "-\t\tHashSet optionNames = manager.optionNames;", "-\t\t", "-\t\t// initialize preferences to their default", "-\t\tIterator iterator = optionNames.iterator();", "-\t\twhile (iterator.hasNext()) {", "-\t\t    String propertyName = (String) iterator.next();", "-\t\t    String value = defaultPreferences.get(propertyName, null);", "-\t\t    if (value != null) defaultOptions.put(propertyName, value);", "-\t\t}", "-\t\t// get encoding through resource plugin", "-\t\tdefaultOptions.put(CORE_ENCODING, getEncoding());", "-\t\t// backward compatibility", "-\t\tdefaultOptions.put(COMPILER_PB_INVALID_IMPORT, ERROR);\t\t", "-\t\tdefaultOptions.put(COMPILER_PB_UNREACHABLE_CODE, ERROR);", "-\t\t", "-\t\treturn defaultOptions;", "+ \t\treturn JavaModelManager.getJavaModelManager().getDefaultOptions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9229524a90f058d95d8201dbb02893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f595c3df6cbb40a33fa3de2980da6860a9a3730f", "commitAfterChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic static Hashtable getOptions()", "signatureAfterChange": " \tpublic static Hashtable getOptions()", "diff": ["-", "-\t\t// return cached options if already computed", "-\t\tif (optionsCache != null) return new Hashtable(optionsCache);", "-", "-\t\t// init", "-\t\tHashtable options = new Hashtable(10);", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tHashSet optionNames = manager.optionNames;", "-\t\tIPreferencesService service = Platform.getPreferencesService();", "-", "-\t\t// set options using preferences service lookup", "-\t\tIterator iterator = optionNames.iterator();", "-\t\twhile (iterator.hasNext()) {", "-\t\t    String propertyName = (String) iterator.next();", "-\t\t    String propertyValue = service.get(propertyName, null, manager.preferencesLookup);", "-\t\t    if (propertyValue != null) {", "-\t\t\t    options.put(propertyName, propertyValue);", "-\t\t    }", "-\t\t}", "-", "-\t\t// get encoding through resource plugin", "-\t\toptions.put(CORE_ENCODING, getEncoding()); ", "-", "-\t\t// backward compatibility", "-\t\toptions.put(COMPILER_PB_INVALID_IMPORT, ERROR);", "-\t\toptions.put(COMPILER_PB_UNREACHABLE_CODE, ERROR);", "-", "-\t\t// store built map in cache", "-\t\toptionsCache = new Hashtable(options);", "-", "-\t\t// return built map", "-\t\treturn options;", "+\t\treturn JavaModelManager.getJavaModelManager().getOptions();"]}], "num": 10303}