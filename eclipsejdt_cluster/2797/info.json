{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0c245fa0380bc95012a03985e50bf5d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d5d89ebbb272ec25c11778fac2db2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-            \tMethodBinding binding = ((AllocationExpression) this.left).binding(this.right);", "+            \tMethodBinding binding = ((AllocationExpression) this.left).binding(this.right, false, null);", "-\t\t\t\tMethodBinding previousMethod = invocation.binding(this.right);", "+\t\t\t\tMethodBinding previousMethod = invocation.binding(this.right, false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07563d7199d3d9a1a64a57281009667e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate int compatibilityLevel18FromInner(MethodBinding method, InnerInferenceHelper innerInferenceHelper, Expression invocArg, int argLen, int i, boolean[] isVarArgs)", "signatureAfterChange": "  \tprivate int compatibilityLevel18FromInner(MethodBinding method, InnerInferenceHelper innerInferenceHelper, Expression invocArg, int argLen, int i, boolean[] isVarArgs)", "diff": ["-\t\t\t\tMethodBinding innerBinding = innerPoly.binding(null); // 1. try without update", "+\t\t\t\tMethodBinding innerBinding = innerPoly.binding(null, false, null); // 1. try without update", "-\t\t\t\t\tMethodBinding updatedMethod = innerPoly.binding(targetType); // 2. try with updating", "+\t\t\t\t\tMethodBinding updatedMethod = innerPoly.binding(targetType, false, null); // 2. try with updating"]}], "num": 2797}