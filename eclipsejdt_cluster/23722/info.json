{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c86f4fb5e5fc5f0e9a1662f5300d96c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8249acbc78bd3046d6212a23a98f80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.UnsafeRawConstructorInvocation:", "+\t\tcase IProblem.UnsafeRawMethodInvocation:", "+\t\tcase IProblem.UnsafeRawExpressionAssignment:", "+\t\tcase IProblem.UnsafeConstructorWithRawArguments:", "+\t\tcase IProblem.UnsafeMethodWithRawArguments:", "+\t\tcase IProblem.UnsafeRawFieldAssignment:", "+\t\tcase IProblem.UnsafeGenericCast:", "+\t\tcase IProblem.UnsafeRawReturnValue:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnsafeTypeOperation);", "+\t\t", "+\t\tcase IProblem.FinalBoundForTypeVariable:", "+\t\t    return this.options.getSeverity(CompilerOptions.FinalParameterBound);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d12668930d8cc254f5454b580ea0901", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["+\t\tcase IProblem.FinallyMustCompleteNormally:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.FinallyBlockNotCompleting);", "+\t\t\t", "+\t\tcase IProblem.UnusedMethodDeclaredThrownException:", "+\t\tcase IProblem.UnusedConstructorDeclaredThrownException:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnusedDeclaredThrownException);", "+", "+\t\tcase IProblem.UnqualifiedFieldAccess:", "+\t\t\treturn this.options.getSeverity(CompilerOptions.UnqualifiedFieldAccess);", "+\t\t\t", "+\t\t// all problems detected inside annotations are associated with a generic severity\t\t\t", "+//\t\tif (referenceContext.isProcessingAnnotation()) {", "+//\t\t\treturn this.options.getSeverity(CompilerOptions.AnnotationProblem);", "+//\t\t}", "+\t\t\t", "+\t\t// by default, all other problems are errors."]}], "num": 23722}