{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f14eaea4cec02488ce8bc6071832f6a6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d7a654baf783b158eceb1417cd5eb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "b7c179ce8d198d23a081719a8015e8909a6c26b0", "commitAfterChange": "b4b1392887d63e81935540bce2b29941cfdc0008", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public TypeMirror asMemberOf(DeclaredType containing, Element element)", "signatureAfterChange": "     @Override     public TypeMirror asMemberOf(DeclaredType containing, Element element)", "diff": ["+    \t\tcase ENUM_CONSTANT:", "-\t\tthrow new IllegalArgumentException(\"element is not valid for the containing declared type\"); //$NON-NLS-1$", "+\t\tthrow new IllegalArgumentException(\"element is not valid for the containing declared type: element kind \" + element.getKind()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c881eb53a4786e52d9dcd6b474d87ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void codeComplete(String codeSnippet, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public void codeComplete(String codeSnippet, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["+\tif (requestor == null) {", "+\t\tthrow new IllegalArgumentException(\"Completion requestor cannot be null\"); //$NON-NLS-1$", "+\t}", "+\tcodeComplete(codeSnippet, position, new CompletionRequestorWrapper(requestor), owner);", "+}", "-\t\tnew CompletionRequestorWrapper(requestor, environment.nameLookup),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5987d9eaf5da3020949ad75d0ef6dbfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchProcessingEnvImpl.java", "commitBeforeChange": "a39c8dbc62a5e1bf969db54203d0105b8e02d687", "commitAfterChange": "05924b2c1a07ba8486df2aefea7b66275c39b6ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Map<String, String> parseProcessorOptions(String[] args)", "signatureAfterChange": " \tprivate Map<String, String> parseProcessorOptions(String[] args)", "diff": ["-\t\t\t\tException e = new IllegalArgumentException(\"-A option must not end with an equals sign\"); //$NON-NLS-1$", "-\t\t\t\tthrow new AbortCompilation(null, e);", "-\t\t\t}", "-", "-\t\t\tif (equals == -1) {", "+\t\t\t\toptions.put(arg.substring(2, equals), null);", "+\t\t\t} else if (equals == -1) {", "-\t\t\t}", "-\t\t\telse {", "+\t\t\t} else {"]}], "num": 60959}