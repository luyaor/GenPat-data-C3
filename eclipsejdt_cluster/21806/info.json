{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "706c2cb1c1c54c7cbd786f7ec3bc04de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35de73b6c3e2389526eea1fad8b22439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6fd936ba6ff4fd9ebd7b92d3caff0f533974ef34", "commitAfterChange": "afae5ec0c1e6fe82c8553a9480b7bba01ac56f61", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void start(BundleContext context) throws Exception", "signatureAfterChange": " \tpublic void start(BundleContext context) throws Exception", "diff": ["-\t\t\tmanager.getIndexManager().request(", "-\t\t\t\tnew IJob() {", "-\t\t\t\t\tpublic boolean belongsTo(String jobFamily) {", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic void cancel() {", "-\t\t\t\t\t\t// ignore", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic void ensureReadyToRun() {", "-\t\t\t\t\t\t// ignore", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic boolean execute(IProgressMonitor progress) {", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t// add save participant and process delta atomically", "-\t\t\t\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59937", "-\t\t\t\t\t\t\tworkspace.run(", "-\t\t\t\t\t\t\t\tnew IWorkspaceRunnable() {", "-\t\t\t\t\t\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "-\t\t\t\t\t\t\t\t\t\tISavedState savedState = workspace.addSaveParticipant(JavaCore.this, manager);", "-\t\t\t\t\t\t\t\t\t\tif (savedState != null) {", "-\t\t\t\t\t\t\t\t\t\t\t// the event type coming from the saved state is always POST_AUTO_BUILD", "-\t\t\t\t\t\t\t\t\t\t\t// force it to be POST_CHANGE so that the delta processor can handle it", "-\t\t\t\t\t\t\t\t\t\t\tmanager.deltaState.getDeltaProcessor().overridenEventType = IResourceChangeEvent.POST_CHANGE;", "-\t\t\t\t\t\t\t\t\t\t\tsavedState.processResourceChangeEvents(manager.deltaState);", "-\t\t\t\t\t\t\t\t\t\t}", "+\t\t\tJob processSavedState = new Job(Util.bind(\"savedState.jobName\")) { //$NON-NLS-1$", "+\t\t\t\tprotected IStatus run(IProgressMonitor monitor) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\t// add save participant and process delta atomically", "+\t\t\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59937", "+\t\t\t\t\t\tworkspace.run(", "+\t\t\t\t\t\t\tnew IWorkspaceRunnable() {", "+\t\t\t\t\t\t\t\tpublic void run(IProgressMonitor progress) throws CoreException {", "+\t\t\t\t\t\t\t\t\tISavedState savedState = workspace.addSaveParticipant(JavaCore.this, manager);", "+\t\t\t\t\t\t\t\t\tif (savedState != null) {", "+\t\t\t\t\t\t\t\t\t\t// the event type coming from the saved state is always POST_AUTO_BUILD", "+\t\t\t\t\t\t\t\t\t\t// force it to be POST_CHANGE so that the delta processor can handle it", "+\t\t\t\t\t\t\t\t\t\tmanager.deltaState.getDeltaProcessor().overridenEventType = IResourceChangeEvent.POST_CHANGE;", "+\t\t\t\t\t\t\t\t\t\tsavedState.processResourceChangeEvents(manager.deltaState);", "-\t\t\t\t\t\t\t\t},", "-\t\t\t\t\t\t\t\tnull); // no progress monitor", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\tUtil.log(e, \"Could not process saved state delta\"); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t},", "+\t\t\t\t\t\t\tmonitor);", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\treturn e.getStatus();", "-\t\t\t\t});", "+\t\t\t\t\treturn Status.OK_STATUS;", "+\t\t\t\t}", "+\t\t\t};", "+\t\t\tprocessSavedState.setSystem(true);", "+\t\t\tprocessSavedState.setPriority(Job.SHORT); // process asap", "+\t\t\tprocessSavedState.schedule();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402e749dbd4ff8f37a156057383d63b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6632fac0c771203cc103a56018cc2f91e75619c9", "commitAfterChange": "f8a259eeb25169743c68697d7031864dfd97118c", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void startup() throws CoreException", "signatureAfterChange": " \tpublic void startup() throws CoreException", "diff": ["-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\tfinal JavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\t\tfinal IWorkspace workspace = ResourcesPlugin.getWorkspace();", "-\t\t\t// process deltas since last activated", "-\t\t\tISavedState savedState = workspace.addSaveParticipant(this, manager);", "-\t\t\tif (savedState != null) {", "-\t\t\t\t// the event type coming from the saved state is always POST_AUTO_BUILD", "-\t\t\t\t// force it to be POST_CHANGE so that the delta processor can handle it", "-\t\t\t\tmanager.deltaState.eventType = IResourceChangeEvent.POST_CHANGE;", "-\t\t\t\tsavedState.processResourceChangeEvents(manager.deltaState);", "-\t\t\t}", "+\t\t\t// process deltas since last activated in indexer thread so that indexes are up-to-date.", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=38658", "+\t\t\tmanager.getIndexManager().request(", "+\t\t\t\tnew IJob() {", "+\t\t\t\t\tpublic boolean belongsTo(String jobFamily) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void cancel() {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic void ensureReadyToRun() {", "+\t\t\t\t\t\t// ignore", "+\t\t\t\t\t}", "+\t\t\t\t\tpublic boolean execute(IProgressMonitor progress) {", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t// add save participant and process delta atomically", "+\t\t\t\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59937", "+\t\t\t\t\t\t\tworkspace.run(", "+\t\t\t\t\t\t\t\tnew IWorkspaceRunnable() {", "+\t\t\t\t\t\t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {", "+\t\t\t\t\t\t\t\t\t\tISavedState savedState = workspace.addSaveParticipant(JavaCore.this, manager);", "+\t\t\t\t\t\t\t\t\t\tif (savedState != null) {", "+\t\t\t\t\t\t\t\t\t\t\t// the event type coming from the saved state is always POST_AUTO_BUILD", "+\t\t\t\t\t\t\t\t\t\t\t// force it to be POST_CHANGE so that the delta processor can handle it", "+\t\t\t\t\t\t\t\t\t\t\tmanager.deltaState.getDeltaProcessor().overridenEventType = IResourceChangeEvent.POST_CHANGE;", "+\t\t\t\t\t\t\t\t\t\t\tsavedState.processResourceChangeEvents(manager.deltaState);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t},", "+\t\t\t\t\t\t\t\tnull); // no progress monitor", "+\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\tUtil.log(e, \"Could not process saved state delta\"); //$NON-NLS-1$", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t});"]}], "num": 21806}