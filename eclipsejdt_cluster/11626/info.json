{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e61a2b428433510e1da898e33e423646", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6292c6435633b9b257d74e14451b733a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionRequestorWrapper.java", "commitBeforeChange": "dee57778319ecddc17299fb2d002d4a5a28d0bbb", "commitAfterChange": "5fd533c8760a35e551d2642335bb8a6be55dd0a9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void accept(CompletionProposal proposal)", "signatureAfterChange": " \t \tpublic void accept(CompletionProposal proposal)", "diff": ["-\t\t\t\t\t\t\t\tproposal.getPackageName(),", "+\t\t\t\t\t\t\t\tproposal.getPackageName() == null ? CharOperation.NO_CHAR : proposal.getPackageName(),", "-\t\t\t\t\t\t\t\tproposal.getPackageName(),", "+\t\t\t\t\t\t\t\tproposal.getPackageName() == null ? CharOperation.NO_CHAR : proposal.getPackageName(),", "-\t\t\t\t\t\t\tproposal.getDeclarationPackageName(),", "-\t\t\t\t\t\t\tproposal.getDeclarationTypeName(),", "+\t\t\t\t\t\t\tproposal.getDeclarationPackageName() == null ? CharOperation.NO_CHAR : proposal.getDeclarationPackageName(),", "+\t\t\t\t\t\t\tproposal.getDeclarationTypeName() == null ? CharOperation.NO_CHAR : proposal.getDeclarationTypeName(),", "-\t\t\t\t\t\t\tproposal.getPackageName(),", "-\t\t\t\t\t\t\tproposal.getTypeName(),", "+\t\t\t\t\t\t\tproposal.getPackageName() == null ? CharOperation.NO_CHAR : proposal.getPackageName(),", "+\t\t\t\t\t\t\tproposal.getTypeName() == null ? CharOperation.NO_CHAR : proposal.getTypeName(),", "-\t\t\t\t\t\t\tproposal.findParameterNames(null),", "+\t\t\t\t\t\t\tproposal.findParameterNames(null) == null ? CharOperation.NO_CHAR_CHAR : proposal.findParameterNames(null),", "-\t\t\t\t\t\t\tproposal.getDeclarationPackageName(),", "-\t\t\t\t\t\t\tproposal.getDeclarationTypeName(),", "+\t\t\t\t\t\t\tproposal.getDeclarationPackageName() == null ? CharOperation.NO_CHAR : proposal.getDeclarationPackageName(),", "+\t\t\t\t\t\t\tproposal.getDeclarationTypeName() == null ? CharOperation.NO_CHAR : proposal.getDeclarationTypeName(),", "-\t\t\t\t\t\t\tproposal.findParameterNames(null),", "-\t\t\t\t\t\t\tproposal.getPackageName(),", "-\t\t\t\t\t\t\tproposal.getTypeName(),", "+\t\t\t\t\t\t\tproposal.findParameterNames(null) == null ? CharOperation.NO_CHAR_CHAR : proposal.findParameterNames(null),", "+\t\t\t\t\t\t\tproposal.getPackageName() == null ? CharOperation.NO_CHAR : proposal.getPackageName(),", "+\t\t\t\t\t\t\tproposal.getTypeName() == null ? CharOperation.NO_CHAR : proposal.getTypeName(),", "-\t\t\t\t\t\t\tproposal.findParameterNames(null),", "+\t\t\t\t\t\t\tproposal.findParameterNames(null) == null ? CharOperation.NO_CHAR_CHAR : proposal.findParameterNames(null),", "-\t\t\t\t\t\t\tproposal.findParameterNames(null),", "+\t\t\t\t\t\t\tproposal.findParameterNames(null) == null ? CharOperation.NO_CHAR_CHAR : proposal.findParameterNames(null),", "-\t\t\t\t\t\t\tproposal.findParameterNames(null),", "+\t\t\t\t\t\t\tproposal.findParameterNames(null) == null ? CharOperation.NO_CHAR_CHAR : proposal.findParameterNames(null),", "-\t\t\t\t\t\tproposal.findParameterNames(null),", "+\t\t\t\t\t\tproposal.findParameterNames(null) == null ? CharOperation.NO_CHAR_CHAR : proposal.findParameterNames(null),", "-\t\t\t\t\t\t\tproposal.getPackageName(),", "+\t\t\t\t\t\t\tproposal.getPackageName() == null ? CharOperation.NO_CHAR : proposal.getPackageName(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf525536e710c760e7bbc68976d0c342", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": " \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t\t\t\t\t\tthis.requestor.acceptAnonymousType(", "-\t\t\t\t\t\t\tcurrentType.qualifiedPackageName(),", "-\t\t\t\t\t\t\tcurrentType.qualifiedSourceName(),", "-\t\t\t\t\t\t\tparameterPackageNames,", "-\t\t\t\t\t\t\tparameterTypeNames,", "-\t\t\t\t\t\t\tparameterNames,", "-\t\t\t\t\t\t\tcompletion,", "-\t\t\t\t\t\t\tconstructor.modifiers,", "-\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION)) {", "+\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, this.actualCompletionPosition);", "+\t\t\t\t\t\t\tproposal.setDeclarationSignature(getSignature(currentType));", "+\t\t\t\t\t\t\tproposal.setSignature(getSignature(constructor));", "+\t\t\t\t\t\t\tproposal.setDeclarationPackageName(currentType.qualifiedPackageName());", "+\t\t\t\t\t\t\tproposal.setDeclarationTypeName(currentType.qualifiedSourceName());", "+\t\t\t\t\t\t\tproposal.setParameterPackageNames(parameterPackageNames);", "+\t\t\t\t\t\t\tproposal.setParameterTypeNames(parameterTypeNames);", "+\t\t\t\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t\t\t\t//proposal.setTypeName(null);", "+\t\t\t\t\t\t\tproposal.setCompletion(completion);", "+\t\t\t\t\t\t\tproposal.setFlags(constructor.modifiers);", "+\t\t\t\t\t\t\tproposal.setReplaceRange(this.endPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\tif(parameterNames == null) proposal.setParameterNames(parameterNames);", "+\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tthis.requestor.acceptMethod(", "-\t\t\t\t\t\t\tcurrentType.qualifiedPackageName(),", "-\t\t\t\t\t\t\tcurrentType.qualifiedSourceName(),", "-\t\t\t\t\t\t\tcurrentType.sourceName(),", "-\t\t\t\t\t\t\tparameterPackageNames,", "-\t\t\t\t\t\t\tparameterTypeNames,", "-\t\t\t\t\t\t\tparameterNames,", "-\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "-\t\t\t\t\t\t\tcompletion,", "-\t\t\t\t\t\t\tconstructor.modifiers,", "-\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_REF)) {", "+\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.METHOD_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\tproposal.setDeclarationSignature(getSignature(currentType));", "+\t\t\t\t\t\t\tproposal.setSignature(getSignature(constructor));", "+\t\t\t\t\t\t\tproposal.setDeclarationPackageName(currentType.qualifiedPackageName());", "+\t\t\t\t\t\t\tproposal.setDeclarationTypeName(currentType.qualifiedSourceName());", "+\t\t\t\t\t\t\tproposal.setParameterPackageNames(parameterPackageNames);", "+\t\t\t\t\t\t\tproposal.setParameterTypeNames(parameterTypeNames);", "+\t\t\t\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t\t\t\t//proposal.setTypeName(null);", "+\t\t\t\t\t\t\tproposal.setName(currentType.sourceName());", "+\t\t\t\t\t\t\tproposal.setCompletion(completion);", "+\t\t\t\t\t\t\tproposal.setFlags(constructor.modifiers);", "+\t\t\t\t\t\t\tproposal.setReplaceRange(this.endPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\tif(parameterNames != null) proposal.setParameterNames(parameterNames);", "+\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}], "num": 11626}