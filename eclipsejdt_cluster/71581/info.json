{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a5c1f0d84e735f6c2088ec20d8963a0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d61ec3b60758fb2590838858aa09d352", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic void testBug77602public()", "signatureAfterChange": " \tpublic void testBug77602_Public()", "diff": ["-\tpublic void testBug77602public() {", "-\t\tMap options = getCompilerOptions();", "-\t\toptions.put(CompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility, CompilerOptions.PUBLIC);", "-\t\trunConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"  /**\\n\" + ", "-\t\t\t\t\t\"   * @see\\n\" + ", "-\t\t\t\t\t\"   * @see UnknownClass\\n\" + ", "-\t\t\t\t\t\"   */\\n\" + ", "-\t\t\t\t\t\"  protected void foo() {\\n\" + ", "-\t\t\t\t\t\"  }\\n\" + ", "-\t\t\t\t\"}\\n\"", "-\t\t\t},", "-\t\t\t\"\",", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\tnull,", "-\t\t\toptions,", "-\t\t\tnull", "-\t\t);", "-\t}", "+\t}", "+\tpublic void testBug77602_Public() {", "+\t\tthis.reportInvalidJavadocVisibility = CompilerOptions.PUBLIC;", "+\t\trunConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\t\"  /**\\n\" + ", "+\t\t\t\t\t\"   * @see\\n\" + ", "+\t\t\t\t\t\"   * @see UnknownClass\\n\" + ", "+\t\t\t\t\t\"   */\\n\" + ", "+\t\t\t\t\t\"  protected void foo() {\\n\" + ", "+\t\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"}\\n\"", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4a5a24d2aba6f46d578ad431be713e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "cbbc77bad29ab0935f23d7976e8f3a83a2098569", "commitAfterChange": "218bf9e76765a0b6d9236837b12cba562b6c4513", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " public void test115()", "signatureAfterChange": " public void test115()", "diff": ["-\tif (this.complianceLevel.compareTo(COMPLIANCE_1_5) >= 0) {", "-    \tMap options = this.getCompilerOptions();", "-    \toptions.put(CompilerOptions.OPTION_ReportOverridingMethodWithoutSuperInvocation, CompilerOptions.ERROR);", "-    \tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-    \t\t\t\"class Y {\\n\" + ", "-    \t\t\t\"  void foo() {}\\n\" + ", "-    \t\t\t\"}\\n\" + ", "-    \t\t\t\"public class X extends Y {\\n\" + ", "-    \t\t\t\"  @Override\\n\" +", "-    \t\t\t\"  void foo() {\\n\" + ", "-    \t\t\t\"    super.foo();\\n\" + ", "-    \t\t\t\"  }\\n\" + ", "-    \t\t\t\"}\"", "-\t\t\t},", "-\t\t\t\"\",", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\tnull,", "-\t\t\toptions,", "-\t\t\tnull", "-\t\t);", "-\t}", "+\tMap options = this.getCompilerOptions();", "+\toptions.put(CompilerOptions.OPTION_ReportOverridingMethodWithoutSuperInvocation, CompilerOptions.ERROR);", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"class Y {\\n\" + ", "+\t\t\t\"  void foo() {}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"public class X extends Y {\\n\" + ", "+\t\t\t\"  @Override\\n\" +", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    super.foo();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\"", "+\t\t},", "+\t\t\"\",", "+\t\tnull,", "+\t\ttrue,", "+\t\tnull,", "+\t\toptions,", "+\t\tnull", "+\t);"]}], "num": 71581}