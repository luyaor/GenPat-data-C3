{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c5542db1b26fa85af0c813af63b66d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02634da727d110c0f36017ca988a22a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void test138()", "signatureAfterChange": " public void test138()", "diff": ["-\t\t\"1. ERROR in p\\\\X.java (at line 12)\\n\" +", "+\t\t\"1. WARNING in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\tString variable = \\\"my testing\\\";\\n\" +", "+\t\t\"\t       ^^^^^^^^\\n\" + ", "+\t\t\"The field X.Outer.Inner.variable is never read locally\\n\" + ", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in p\\\\X.java (at line 12)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "051fce4a56e69797d6340b9e7006da47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug82514()", "signatureAfterChange": " \tpublic void testBug82514()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic static <X extends Comparable< ? super X>> int compareTo(final X first, final X firstPrime)\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"The type parameter X is hiding the type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c18149d25523272c4d8fac14ddb77c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "c7a9edf536467451ba659d7e03ac6c483c5c0cfe", "commitAfterChange": "e6bf96fd82847410c46479a652f4e58f9a6dd052", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void test02()", "signatureAfterChange": " public void test02()", "diff": ["-\t\t\"1. ERROR in p1\\\\A.java (at line 6)\\n\" + ", "+\t\t\"1. WARNING in p1\\\\A.java (at line 3)\\n\" + ", "+\t\t\"\tprivate int value;\t\t\t\t\t\t\t\t\\n\" + ", "+\t\t\"\t            ^^^^^\\n\" + ", "+\t\t\"The private field A.value is never used locally\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p1\\\\A.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b53254f985c91d2da793ba952494202", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "0eda4899fe49711eb207c4c5710f5520d9ea2e2d", "commitAfterChange": "4a8da6910e1c14334403dae0988de171cbd44126", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " public void test136()", "signatureAfterChange": " public void test136()", "diff": ["-\t\t\"1. ERROR in p\\\\X.java (at line 11)\\n\" +", "+\t\t\"1. WARNING in p\\\\X.java (at line 5)\\n\" +", "+\t\t\"\tString variable = \\\"my testing\\\";\\n\" +", "+\t\t\"\t       ^^^^^^^^\\n\" +", "+\t\t\"The field X.Outer.Inner.variable is never read locally\\n\" + ", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in p\\\\X.java (at line 11)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54ccdeec3c2362409399f563dbc6e503", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "0bb8dba3efca9a5500b67c37770710de86a06c2e", "commitAfterChange": "6726a5eb1723cea7dfdb4d1905ca215391f75d8e", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 248, "signatureBeforeChange": " public void test0562_try_catch_unchecked_exception()", "signatureAfterChange": " public void test0562_try_catch_unchecked_exception()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" +", "-\t\t\"----------\\n\",", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "+\t\t\t\"\to = new LineNumberReader(new FileReader(\\\"dummy\\\"));\\n\" +", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Resource leak: \\'o\\' is never closed\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" +", "+\t\t\t\"\to.toString();\\n\" +", "+\t\t\t\"\t^\\n\" +", "+\t\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" +", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58d2a8f29187a3c77e6b3a1be489e876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "\t\t\t \tpublic void test151()", "signatureAfterChange": "\t\t\t \tpublic void test151()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t<T extends X> X(T[] ta, List<T> lt) {\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa2d07011ebc89ed49681071d3737d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "054ef716f5c2a57e4e4c8e790ba134b6404d4f2a", "commitAfterChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 248, "signatureBeforeChange": " public void test0562_try_catch_unchecked_exception()", "signatureAfterChange": " public void test0562_try_catch_unchecked_exception()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" +", "-\t\t\"----------\\n\",", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" +", "+\t\t\t\"\to = new LineNumberReader(new FileReader(\\\"dummy\\\"));\\n\" +", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Resource leak: \\'o\\' is never closed\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" +", "+\t\t\t\"\to.toString();\\n\" +", "+\t\t\t\"\t^\\n\" +", "+\t\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" +", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b4d03e2598690868723e551467e1af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 569, "methodNumberAfterChange": 569, "signatureBeforeChange": " \tpublic void test0551()", "signatureAfterChange": " \tpublic void test0551()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\t<T, U extends T, V extends T> T cond1(boolean z, U x1, V x2) {\\n\" + ", "+\t\t\t\"\t                                              ^\\n\" + ", "+\t\t\t\"The parameter z is hiding a field from type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70d58abfca2580b49d5f97846c70fba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void test014()", "signatureAfterChange": "  \tpublic void test014()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tclass X { void foo(A a) {} }\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"Type safety: A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a003c6b3eea29e849c18ffe6f8f6588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8f217d25322b885604d27f1ae4690e476bac378b", "commitAfterChange": "9cc20cb240e3ca7f459d6bee269a4e8a319e621d", "methodNumberBeforeChange": 842, "methodNumberAfterChange": 842, "signatureBeforeChange": " public void test0835()", "signatureAfterChange": " public void test0835()", "diff": ["-\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tArrayList<?> als = (ArrayList) ls;\\n\" + ", "+\t\t\"\t                    ^^^^^^^^^\\n\" + ", "+\t\t\"ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3a0b4185ed5efb1e416d19f2d1d2ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 755, "methodNumberAfterChange": 755, "signatureBeforeChange": " public void test749()", "signatureAfterChange": " public void test749()", "diff": ["-\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tvoid foo(X x) {\\n\" + ", "+\t\t\"\t         ^\\n\" + ", "+\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e8a84395c926aed9b977dc00f58238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "ee7a8340e3a250b29afacc2b0f2a8f1d78fdc6a8", "commitAfterChange": "1e986f6e04576ef708d8b80e355be08c2ab3a68a", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testBug47339c()", "signatureAfterChange": " \tpublic void testBug47339c()", "diff": ["-\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\"\tpublic X(String message) {\\n\" + ", "-\t\t\t\t\"\t                ^^^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Missing tag for parameter message\\n\" + ", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic class X extends RuntimeException {\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"The serializable class X does not declare a static final serialVersionUID field of type long\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\tpublic X(String message) {\\n\" + ", "+\t\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Missing tag for parameter message\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84b9e425f1a7e0af48f51bea95009eb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void test102()", "signatureAfterChange": " \tpublic void test102()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tx.t.bar(\\\"ESS\\\");\\n\" + ", "-\t\t\"\t    ^^^\\n\" + ", "-\t\t\"The method bar(String) is undefined for the type ?\\n\" + ", "-\t\t\"----------\\n\");\t\t", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tx.t.foo(\\\"SUCC\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tx.t.bar(\\\"ESS\\\");\\n\" + ", "+\t\t\t\"\t    ^^^\\n\" + ", "+\t\t\t\"The method bar(String) is undefined for the type capture-of ?\\n\" + ", "+\t\t\t\"----------\\n\");\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d1cf56d3055707f698f74013bf2f0e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void test128()", "signatureAfterChange": " \tpublic void test128()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tClass c1 = x.getClass();\\n\" + ", "+\t\t\t\"\t^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e3efeccd91ba2b680f0daee6c7a0ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tpublic void test045()", "signatureAfterChange": "  \tpublic void test045()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tInteger i = 0;\\n\" + ", "+\t\t\t\"\t            ^\\n\" + ", "+\t\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98e4ef8025855e3f4abb6a1827058a5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tpublic void test043()", "signatureAfterChange": "  \tpublic void test043()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tInteger i = 0;\\n\" + ", "+\t\t\t\"\t            ^\\n\" + ", "+\t\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af2331f6d6c451d0c3b5347a180a56e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test023()", "signatureAfterChange": " public void test023()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 10)\\n\" +", "-\t\t\"\tx.foo();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"The local variable x may not have been initialized\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\"\tx = new X();\\n\" + ", "+\t\t\"\t^^^^^^^^^^^\\n\" + ", "+\t\t\"Dead code\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"\tx.foo();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The local variable x may not have been initialized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14f3ebfdcfd0729be27bb9c6bcd3f46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test0031_conditional_expression()", "signatureAfterChange": " public void test0031_conditional_expression()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Null pointer access: The variable o can only be null at this location\\n\" +", "-\t\t\"----------\\n\",", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject o = true ? null : new Object();\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\to.toString();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Null pointer access: The variable o can only be null at this location\\n\" + ", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8507e5e72cc890b20add7575a56f0b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tpublic void test044()", "signatureAfterChange": "  \tpublic void test044()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tInteger i = 0;\\n\" + ", "+\t\t\t\"\t            ^\\n\" + ", "+\t\t\t\"The expression of type int is boxed into Integer\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02ffa534c31905efe835c6e54f254a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "\t\t \tpublic void test110()", "signatureAfterChange": "\t\t \tpublic void test110()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X implements AX {}\\n\" + ", "+\t\t\t\"\t                          ^^\\n\" + ", "+\t\t\t\"Type safety: AX is a raw type. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfea952be2d7b03c8646be4664337e4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "0660a80b4f83507ec084149491c197acba246b67", "commitAfterChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void test014()", "signatureAfterChange": "  \tpublic void test014()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tclass X { void foo(A[] a) {} }\\n\" + ", "+\t\t\t\"\t                   ^\\n\" + ", "+\t\t\t\"A is a raw type. References to generic type A<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a7abb32b217c9bafad9649c4fd678f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "0bc1dc4ace320749d81ad8fc342000dd64021e2c", "commitAfterChange": "38d1cd076e6181bfa6558db1b5b13eb2b3e5e8ce", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void test043()", "signatureAfterChange": " \tpublic void test043()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvarargs((Serializable) new Object[] {1, 2});\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from Object[] to Serializable\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 15)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23f55d017c64c2bbaa840ba991d57c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "     public void test114()", "signatureAfterChange": "     public void test114()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = M.class )\\n\" + ", "-\t\t\t\"\t              ^\\n\" + ", "-\t\t\t\"M cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+    \t\t\"\tClass foo();\\n\" + ", "+    \t\t\"\t^^^^^\\n\" + ", "+    \t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+    \t\t\"\t@Annot( foo = M.class )\\n\" + ", "+    \t\t\"\t              ^\\n\" + ", "+    \t\t\"M cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0850e1c7bf3bca4842b7aaa7177f945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "0bc1dc4ace320749d81ad8fc342000dd64021e2c", "commitAfterChange": "38d1cd076e6181bfa6558db1b5b13eb2b3e5e8ce", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void test038()", "signatureAfterChange": " \tpublic void test038()", "diff": ["-\t\t\t// ensure no varargs warning", "+\t\t\t// check no varargs warning", "-\t\t\t\"1. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"\tvarargs((Serializable[])new Object[] {1, 2}); //warns \\\"Varargs argument Object[] \\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Unnecessary cast from Object[] to Serializable[]\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 16)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d9600e6b90fa7a385b5987a916fd0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void test0030_conditional_expression()", "signatureAfterChange": " public void test0030_conditional_expression()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Null pointer access: The variable o can only be null at this location\\n\" +", "-\t\t\"----------\\n\",", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject o = true ? null : null;\\n\" + ", "+\t\t\t\"\t                         ^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\to.toString();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Null pointer access: The variable o can only be null at this location\\n\" + ", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3672931fbd9dfc18d60f48ecbb96d08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "3307a3b21f8472cc998512e9e4cd5afdd4f17b52", "commitAfterChange": "b155f47580a90f694a899aae6d06a1ff29f450b8", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void test0033_conditional_expression()", "signatureAfterChange": " public void test0033_conditional_expression()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Null pointer access: The variable o can only be null at this location\\n\" +", "-\t\t\"----------\\n\",", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject o = (1 == 1) ? null : new Object();\\n\" + ", "+\t\t\t\"\t                             ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Dead code\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\to.toString();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Null pointer access: The variable o can only be null at this location\\n\" + ", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fddf32267ce5497ae63efb0d86c2f1ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "1981bf8ffea2219e8159438f3f203edffff2e187", "commitAfterChange": "462d48c2ab243e0f3a23c0def993c032272cb1da", "methodNumberBeforeChange": 853, "methodNumberAfterChange": 853, "signatureBeforeChange": " public void test0832()", "signatureAfterChange": " public void test0832()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 10)\\n\" +", "-\t\t\"\tZork z;\\n\" +", "-\t\t\"\t^^^^\\n\" +", "-\t\t\"Zork cannot be resolved to a type\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tC1<T>.C11[] ts = (C1<T>.C11[]) new C1<?>.C11[5];\\n\" + ", "+\t\t\"\t                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked cast from C1<?>.C11[] to C1<T>.C11[]\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"\tZork z;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + "]}], "num": 34659}