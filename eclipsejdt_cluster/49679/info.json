{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51e868436bbbb8e05ba98897646f1d91", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48dc38650c27a39ca94719d1eb0bb945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\tchar[][] exclusionPatterns = getPackageFragmentRoot().fullExclusionPatternChars();", "+\t    PackageFragmentRoot root = getPackageFragmentRoot();", "+\t\tchar[][] inclusionPatterns = root.fullInclusionPatternChars();", "+\t\tchar[][] exclusionPatterns = root.fullExclusionPatternChars();", "-\t\t\t\t\t&& !Util.isExcluded(child, exclusionPatterns)) {", "+\t\t\t\t\t&& !Util.isExcluded(child, inclusionPatterns, exclusionPatterns)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b2212d5405ee325188ae4e7457d85e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "7ab66ec659aff4e2eeafa10fb6d8c45a18f899f6", "commitAfterChange": "d04622d773e335e0114fd03c3d1b3d6001e8a321", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test0415() throws JavaModelException", "signatureAfterChange": " \tpublic void test0415() throws JavaModelException", "diff": ["+\t\tchar[] source = sourceUnit.getSource().toCharArray();", "-\t\tassertEquals(\"wrong toString()\", \"default : \", defaultCase.toString());", "+\t\tcheckSourceRange(defaultCase, \"default:\", source);"]}], "num": 49679}