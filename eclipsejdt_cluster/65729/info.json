{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "392bb6a368a11a5d6032716da2b491f3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc8179fa56d529251c57f48967be5296", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "4615f36007e76e02bb3b421bd8f019d1c72e5291", "commitAfterChange": "56f02b653e0dc58dc37c3d15b2e6a78c25c99600", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException {\r", "-\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements);\r", "+\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements, problemRequestor);\r", "-\t\tparser.parseCompilationUnit(this, false);\r", "+\t\tparser.parseCompilationUnit(this, this.diagnoseProblemInsideMethodBodies());\r", "-\t\t\t// remember problems\r", "-\t\t\tArrayList problems = requestor.fProblems;\r", "-\t\t\tif (problems != null) {\r", "-\t\t\t\tproblems.toArray(((WorkingCopyElementInfo)unitInfo).problems = new IProblem[problems.size()]);\r", "-\t\t\t}\r", "-\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb58457c65fa2c491f25e6f192ee801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r", "-\t\t\tVector problems = requestor.fProblems;\r", "+\t\t\tArrayList problems = requestor.fProblems;\r", "-\t\t\t\tproblems.copyInto(((WorkingCopyElementInfo)unitInfo).problems = new IProblem[problems.size()]);\r", "+\t\t\t\tproblems.toArray(((WorkingCopyElementInfo)unitInfo).problems = new IProblem[problems.size()]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3d9c65b76ee492a737cf3761245955", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "ff8e5fb940914306233fc50d1fbabd478d3fc2dd", "commitAfterChange": "e97b2b1cf2848f1c6b15e36fe8db0ccf734dca6f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": "\r \r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource, IProblemRequestor problemRequestor) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r", "-\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements, problemRequestor);\r", "+\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements);\r", "-\t\tparser.parseCompilationUnit(this, problemRequestor != null);\r", "+\t\tparser.parseCompilationUnit(this, false);\r"]}], "num": 65729}