{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82d281ffbe83cc459753b36f5f03206c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f096ac88fe1ed10a274e2738f94549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "d25d8e2aefb1fe7881a3b669cacd403afc528b1a", "commitAfterChange": "c768bb705d25a055607160ce11d239f196ca5653", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  protected void addAffectedSourceFiles()", "signatureAfterChange": "  protected void addAffectedSourceFiles()", "diff": ["-\t\t\tif (file.exists()) {", "-\t\t\t\tClasspathMultiDirectory md = sourceLocations[0];", "-\t\t\t\tif (sourceLocations.length > 1) {", "-\t\t\t\t\tIPath sourceFileFullPath = file.getFullPath();", "-\t\t\t\t\tfor (int j = 0, m = sourceLocations.length; j < m; j++) {", "-\t\t\t\t\t\tif (sourceLocations[j].sourceFolder.getFullPath().isPrefixOf(sourceFileFullPath)) {", "-\t\t\t\t\t\t\tmd = sourceLocations[j];", "-\t\t\t\t\t\t\tif (md.exclusionPatterns == null && md.inclusionPatterns == null)", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\tif (!Util.isExcluded(file, md.inclusionPatterns, md.exclusionPatterns))", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tSourceFile sourceFile = new SourceFile(file, md);", "-\t\t\t\tif (sourceFiles.contains(sourceFile)) continue next;", "-\t\t\t\tif (compiledAllAtOnce && previousSourceFiles != null && previousSourceFiles.contains(sourceFile))", "-\t\t\t\t\tcontinue next; // can skip previously compiled files since already saw hierarchy related problems", "+\t\t\tSourceFile sourceFile = findSourceFile(file);", "+\t\t\tif (sourceFile == null) continue next;", "+\t\t\tif (sourceFiles.contains(sourceFile)) continue next;", "+\t\t\tif (compiledAllAtOnce && previousSourceFiles != null && previousSourceFiles.contains(sourceFile))", "+\t\t\t\tcontinue next; // can skip previously compiled files since already saw hierarchy related problems", "-\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\tSystem.out.println(\"  adding affected source file \" + typeLocator); //$NON-NLS-1$", "-\t\t\t\tsourceFiles.add(sourceFile);", "-\t\t\t}", "+\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\tSystem.out.println(\"  adding affected source file \" + typeLocator); //$NON-NLS-1$", "+\t\t\tsourceFiles.add(sourceFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f503ec7b1cfe0e8d744b6332e9ba9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " public IPackageFragment getPackageFragment(String packageName)", "signatureAfterChange": " public IPackageFragment getPackageFragment(String packageName)", "diff": ["-\tif (packageName.indexOf(' ') != -1) { // tolerate package names with spaces (e.g. 'x . y') (http://bugs.eclipse.org/bugs/show_bug.cgi?id=21957)", "-\t\tchar[][] compoundName = Util.toCompoundChars(packageName);", "-\t\tStringBuffer buffer = new StringBuffer(packageName.length());", "-\t\tfor (int i = 0, length = compoundName.length; i < length; i++) {", "-\t\t\tbuffer.append(CharOperation.trim(compoundName[i]));", "-\t\t\tif (i != length-1) {", "-\t\t\t\tbuffer.append('.');", "-\t\t\t}", "-\t\t}", "-\t\tpackageName = buffer.toString();", "-\t}", "-\treturn new PackageFragment(this, packageName);", "+\t// tolerate package names with spaces (e.g. 'x . y') (http://bugs.eclipse.org/bugs/show_bug.cgi?id=21957)", "+\tString[] pkgName = Util.getTrimmedSimpleNames(packageName); ", "+\treturn getPackageFragment(pkgName);"]}], "num": 48827}