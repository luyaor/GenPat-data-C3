{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97aa99e07f4d75d4ab84c139c31451a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3eea3a016987ac607b8c23b8f52cf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "f5f4b16154ed4276dbe71ca8e991cbc893bb8285", "commitAfterChange": "c9917de52dd2edf211cb4947502072689564fcf4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t\tConstant assignConstant;", "-\t\t\tint increment;", "+\t\t\t\t\tConstant assignConstant;", "-\t\t\t\t\t\t&& (assignConstant.typeID() != T_float) // only for integral types", "-\t\t\t\t\t\t&& (assignConstant.typeID() != T_double)\t\t", "-\t\t\t\t\t\t&& ((increment = assignConstant.intValue()) == (short) increment)) { // 16 bits value", "+\t\t\t\t\t\t\t&& (assignConstant.typeID() != TypeIds.T_float) // only for integral types", "+\t\t\t\t\t\t\t&& (assignConstant.typeID() != TypeIds.T_double)) {", "+\t\t\t\t\t\t\t\tint increment  = assignConstant.intValue();", "+\t\t\t\t\t\t\t\tif (increment != (short) increment) break; // not representable as a 16-bits value", "-\t\t\t\t\t\t\t\tcodeStream.iinc(localBinding.resolvedPosition, -increment);", "+\t\t\t\t\t\t\t\tincrement  = -assignConstant.intValue();", "+\t\t\t\t\t\t\t\tif (increment != (short) increment) break; // not representable as a 16-bits value", "+\t\t\t\t\t\t\t\tcodeStream.iinc(localBinding.resolvedPosition, increment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88656c7e211c2572240c07fbde713a1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "f5f4b16154ed4276dbe71ca8e991cbc893bb8285", "commitAfterChange": "c9917de52dd2edf211cb4947502072689564fcf4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t\tConstant assignConstant;", "-\t\t\tint increment;", "+\t\t\t\t\tConstant assignConstant;", "-\t\t\t\t\t\t&& (assignConstant.typeID() != TypeIds.T_float) // only for integral types", "-\t\t\t\t\t\t&& (assignConstant.typeID() != TypeIds.T_double)", "-\t\t\t\t\t\t&& ((increment = assignConstant.intValue()) == (short) increment)) { // 16 bits value", "+\t\t\t\t\t\t\t&& (assignConstant.typeID() != TypeIds.T_float) // only for integral types", "+\t\t\t\t\t\t\t&& (assignConstant.typeID() != TypeIds.T_double)) {", "+\t\t\t\t\t\t\t\tint increment  = assignConstant.intValue();", "+\t\t\t\t\t\t\t\tif (increment != (short) increment) break; // not representable as a 16-bits value", "-\t\t\t\t\t\t\t\tcodeStream.iinc(localBinding.resolvedPosition, -increment);", "+\t\t\t\t\t\t\t\tincrement  = -assignConstant.intValue();", "+\t\t\t\t\t\t\t\tif (increment != (short) increment) break; // not representable as a 16-bits value", "+\t\t\t\t\t\t\t\tcodeStream.iinc(localBinding.resolvedPosition, increment);"]}], "num": 21636}