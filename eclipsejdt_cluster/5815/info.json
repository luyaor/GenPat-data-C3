{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d489a43014d90fb03bd418974e80792", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3249889d0ae69fed81057c6ddb4d85c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5f616341067096c98b141974f7f9bc6e24ba2b81", "commitAfterChange": "10d64116081cd3dcebc82b39ed7b738621563d86", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 374, "signatureBeforeChange": " \tpublic void test0370()", "signatureAfterChange": " \tpublic void test0370()", "diff": ["-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",\t", "-\t\t\t\"import java.lang.annotation.Annotation;\\n\" + ", "-\t\t\t\"import java.util.Map;\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"import sun.reflect.annotation.AnnotationParser;\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"\t{\\n\" + ", "-\t\t\t\"\t\tMap<Class, Annotation> map = AnnotationParser.parseAnnotations(null, null, null);\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\",", "-\t\t\t},", "+    \t\tnew String[] {", "+\t\t\t\t\"p/B.java\",", "+\t\t\t\t\"package p;\\n\" +", "+\t\t\t\t\"import java.util.Map;\\n\" +", "+\t\t\t\t\"public class B {\\n\" +", "+\t\t\t\t\"\tpublic static Map<Class, String> foo(byte[] byteArray, Object o, Class c) {\\n\" +", "+\t\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\"", "+    \t\t},", "-\t}\t\t", "+", "+\t\tthis.runConformTest(", "+    \t\tnew String[] {", "+    \t\t\t\"X.java\",", "+\t\t\t\t\"import java.util.Map;\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"import p.B;\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\t{\\n\" + ", "+\t\t\t\t\"\t\tMap<Class, String> map = B.foo(null, null, null);\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\",", "+    \t\t},", "+\t\t\t\"\",", "+\t\t\tnull,", "+\t\t\tfalse,", "+\t\t\tnull);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9085eaaff0a5e970045856e00b27c881", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "7e8c39a9e3d7dea3d8b022efbc3b049165785892", "commitAfterChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": "  \tpublic void test013()", "diff": ["-\t// foreach and autoboxing", "-\tpublic void test013() {", "+", "+\tpublic void test013() { // foreach and autoboxing", "-\t\t\t\t\"    \\n\" + ", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1f62b7f4d1916a353008266d76ee5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "8eebb11e46f28beaadc740a4b76f1cf698acf7a1", "commitAfterChange": "77d7a71c34d1f984564aceab6a75ee9e680a55a5", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void test050a()", "signatureAfterChange": " \tpublic void test050a()", "diff": ["-\t\t\t\t\"\tclass C7 {\\n\" + ", "-\t\t\t\t\"\t\t<T extends Y, U> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "+\t\t);", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tclass C7 {\\n\" + ", "+\t\t\t\t\"\t\t<T extends Y, U> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class A<T> {}\" +", "+\t\t\t\t\"class Y {}\" +", "+\t\t\t\t\"class Z {}\"", "+\t\t\t},", "+\t\t\t\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1369f650d5c2fd4d3880d81f0b67cbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6eb00f6ee457a8f73a0eac0bfee00e20c1d881ff", "commitAfterChange": "449de2c1528005d5b9ace39ea1e9eeb2aed5b875", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test149()", "signatureAfterChange": " \tpublic void test149()", "diff": ["-\t// TODO (kent) name clash: toArray(java.lang.Object[]) in X and <T>toArray(T[]) in java.util.Collection<java.lang.Object> have the same erasure, yet neither overrides the other", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public abstract class X implements java.util.Collection {\\n\" + ", "+\t\t\t\t\"\tpublic Object[] toArray(Object[] a) {\\n\" + ", "+\t\t\t\t\"\t\treturn a;\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"\t   System.out.println(\\\"SUCCESS\\\");\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\t\"SUCCESS\");", "-\t\t\t\t\"import java.util.Collection;\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"public abstract class X implements Collection<Object> {\\n\" + ", "-\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"public abstract class X implements java.util.Collection<Object> {\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+// TODO (kent) name clash: toArray(java.lang.Object[]) in X and <T>toArray(T[]) in java.util.Collection<java.lang.Object> have the same erasure, yet neither overrides the other"]}], "num": 5815}