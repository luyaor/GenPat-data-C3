{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b80e9a9e243850d9276d2a9200b44d03", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "844f582a3b716ff7221f046ed40645d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "015d0b5b9a6775327087574a13f05229c708c6c4", "commitAfterChange": "9d8b71081cd101218780093ff788c8cdcb494d20", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody(boolean qualified)", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody(boolean qualified)", "diff": ["-\t\tthis.currentToken = 0; // opening brace already taken into account", "+\t\tif (!isIndirectlyInsideLambdaExpression())", "+\t\t\tthis.currentToken = 0; // opening brace already taken into account", "-\t\tthis.currentToken = 0; // opening brace already taken into account", "+\t\tif (!isIndirectlyInsideLambdaExpression())", "+\t\t\tthis.currentToken = 0; // opening brace already taken into account"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aab7ad32a08f7bdbb5ea0c36be2c28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "027433d18c80815de3076b7fd489422a48401f1a", "commitAfterChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody(boolean qualified)", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody(boolean qualified)", "diff": ["-\t\tif (!isIndirectlyInsideLambdaExpression())", "-\t\t\tthis.currentToken = 0; // opening brace already taken into account", "+\t\tif (isIndirectlyInsideLambdaExpression())", "+\t\t\tthis.ignoreNextOpeningBrace = true;", "+\t\telse ", "+\t\t\tthis.currentToken = 0; // opening brace already taken into account.", "-\t\tif (!isIndirectlyInsideLambdaExpression())", "-\t\t\tthis.currentToken = 0; // opening brace already taken into account", "+\t\tif (isIndirectlyInsideLambdaExpression())", "+\t\t\tthis.ignoreNextOpeningBrace = true;", "+\t\telse ", "+\t\t\tthis.currentToken = 0; // opening brace already taken into account."]}], "num": 71107}