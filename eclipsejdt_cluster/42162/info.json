{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d36575345bac1275f15c85a9813851f0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054c9988272507612de8e03a1ce95c71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "7b0b78b45319bc18ccff993af876123282997e70", "commitAfterChange": "cd290957c2bd8d760411805c481ea53ade57f09d", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "  \tprivate IClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "signatureAfterChange": "  \tprivate IClasspathContainer initializeContainer(IJavaProject project, IPath containerPath) throws JavaModelException", "diff": ["-\t\t\t\t\tcontainerPut(project, containerPath, null); // flush cache", "+\t\t\t\t\t// just remove initialization in progress and keep previous session container so as to avoid a full build", "+\t\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=92588", "+\t\t\t\t\tcontainerRemoveInitializationInProgress(project, containerPath); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11b4598936f306179faa6974f48bf23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "035b068bdf6fb282eada8eb5cb52008d779d4e08", "commitAfterChange": "e097b656649fad65adc5a0de7345699c53b02550", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \t \tpublic synchronized void variablePut(String variableName, IPath variablePath)", "signatureAfterChange": " \t \tpublic synchronized void variablePut(String variableName, IPath variablePath)", "diff": ["-\t\t\t\tthis.variables.remove(variableName);", "+\t\t\t\t// if path is null, record that the variable was removed to avoid asking the initializer to initialize it again", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=112609", "+\t\t\t\tthis.variables.put(variableName, new Path(CP_ENTRY_IGNORE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f519c069a456d97adcdf6cdb0f340452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8fed2cc02e45d0c02f4805c1a6592bef37ca778a", "commitAfterChange": "454627bbb623962480221601ed9f326a0bd7a777", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": " \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t\t\t// force initialization of roots before builders run to avoid deadlock in another thread", "+\t\t\t\t// (note this is no-op if already initialized)", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=241751", "+\t\t\t\tthis.state.initializeRoots(false/*not initiAfterLoad*/);", "+\t\t\t\t"]}], "num": 42162}