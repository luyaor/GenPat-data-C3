{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19ea006a618eb5bc0190a5dfe5d6495a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d412eed9a32c43ffcb09478ce611dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic void test0502j() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502j() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A/voidfoo()/B/voidbar()\", methodBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"test0502/A$2$B/bar()\", methodBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18280f8e7853b20177e246b5899ce6d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " \tpublic void test244()", "signatureAfterChange": " \tpublic void test244()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\"\trx.foo(\\\"hello\\\");\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Unsafe type operation: Should not invoke the method foo(G) of raw type X. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\trx.foo(\\\"hello\\\");\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method foo(Object) belongs to the raw type X. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2319c17d1e722bc7466fe603911467d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "9f4083645d70a432f33ad4b76043e33c22dce66a", "commitAfterChange": "62b1363351c6bbbf8add0db3d16b932995188a11", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic void testParameterizedArrayTypeMultipleArguments04() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedArrayTypeMultipleArguments04() throws CoreException", "diff": ["-\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entry [Table.Entry] COMPATIBLE_ERASURE_MATCH\\n\" +", "+\t\t\t\"src/g6/t/ref/Multiple.java g6.t.ref.Multiple.entry [Table.Entry] EQUIVALENT_ERASURE_MATCH\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26918790adf540e6e4ecb8824e9d15dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "0faf571a2b978290e761500f873fc8f116675788", "commitAfterChange": "16ea2a8daece1ce57aeee98ca0579c5d79d5f9c9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void test026()", "signatureAfterChange": " public void test026()", "diff": ["-\t\t\"Class must implement the inherited abstract method I.init(String, int)\\n\" + ", "+\t\t\"The type AbstractY must implement the inherited abstract method I.init(String, int)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3373b6abd068213d57dfa9abdb1b0097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "8975a4993759f4f0cb2d8fff2da5bbb83e0cb45e", "commitAfterChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test0002() throws JavaModelException", "signatureAfterChange": " public void test0002() throws JavaModelException", "diff": ["-\t\t\"Y [in X [in Test [in Test.java [in test0002 [in src2 [in Resolve]]]]]]\",", "+\t\t\"Y key=Ltest0002/Test$X<Ljava/lang/Object;>.Y<Ljava/lang/Object;>; [in X [in Test [in Test.java [in test0002 [in src2 [in Resolve]]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3adf57e93d15db353122e2ebefa5f946", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "commitAfterChange": "afb20f30301e2620352c3a6eece24740efc080f3", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void test0034() throws JavaModelException", "signatureAfterChange": " public void test0034() throws JavaModelException", "diff": ["-\t\t\"Inner [in Test [in [Working copy] Test.java [in test0034 [in src2 [in Resolve]]]]]\",", "+\t\t\"Inner key=Ltest0034/Test$Inner; [in Test [in [Working copy] Test.java [in test0034 [in src2 [in Resolve]]]]]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c7f3e9372a1d173cc54447193167ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void test0044() throws JavaModelException", "signatureAfterChange": " \tpublic void test0044() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong key\", \"Z:test0044/X/voidfoo(Z)\", binding.getKey());", "+\t\tassertEquals(\"wrong key\", \"Ltest0044/X;.foo<Z:Ljava/lang/Object;>(TZ;)V:TZ;\", binding.getKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7c7de4bd723827772ec9cb98ae8073", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": " \tpublic void test295()", "signatureAfterChange": " \tpublic void test295()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in C.java (at line 4)\\n\" + ", "-\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Unsafe type operation: Should not invoke the method get(B<X>) of raw type B. References to generic type B<X> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in C.java (at line 4)\\n\" + ", "-\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "-\t\t\"\t                                     ^^^\\n\" + ", "-\t\t\"The method get(B) is undefined for the type Object\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in C.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The method get(B) belongs to the raw type B. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in C.java (at line 4)\\n\" + ", "+\t\t\t\"\tnew B().start().get(new B().start()).get(new B().start());\\n\" + ", "+\t\t\t\"\t                                     ^^^\\n\" + ", "+\t\t\t\"The method get(B) is undefined for the type Object\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5155dc8600ae8f53e2de84afa8295316", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b41a5de95343375633384e6b1b331ea9265a7fc6", "commitAfterChange": "6cdef9e50c0c19ef931636bb6582e431ba4ed6f0", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 247, "signatureBeforeChange": " \tpublic void test245()", "signatureAfterChange": " \tpublic void test245()", "diff": ["-\t\t\"The method foo(Object) of raw type X is no more generic; it cannot be parameterized with arguments <String>\\n\" + ", "+\t\t\"The method foo(Object) of raw type X is no longer generic; it cannot be parameterized with arguments <String>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "788fadac470020eee3f4eeced66e097b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test0502g() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502g() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A/voidfoo()/B\", typeBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"test0502/A$2$B\", typeBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ac7a5b421f7f61d2202755bb374e9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "e4262ef08c6f8e26e57ca0c6211e0fdea3f40578", "commitAfterChange": "6a7a52c96b7229ab86908d69ec0e914d08a5352f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t\t\t\"The annotation @Foo must define the member value\\n\" + ", "+\t\t\t\"The annotation @Foo must define the attribute value\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a3e10986a4f30bda134d4a284ad519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e173f77ccd0067cc5ddcb6d9e15b204243baff15", "commitAfterChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new FormatterRegressionTests(\"test522\"));  //$NON-NLS-1$", "+\t\tsuite.addTest(new FormatterRegressionTests(\"test526\"));  //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d36f24b0d449fa945ef2d2ab68eca38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "7bf89e29c34a348a2ed388f7cdb6c1016941cf61", "commitAfterChange": "cd5adcef3921beea7df4f6703ab58225bdb4ec39", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0027\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0074\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969cac1ca19bd2bdab8a86d006814439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "9c0200613f6d3b1541431a53e81611b5e71da85a", "commitAfterChange": "beef2b6830a9b02687a5f8c1fac2a5984bded655", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public void testClasspathValidation15() throws CoreException", "signatureAfterChange": "  public void testClasspathValidation15() throws CoreException", "diff": ["-\t\t\t\"End exclusion filter 'src' with / to fully exclude 'P/src'\",", "+\t\t\t\"End exclusion filter \\'src\\' with / to fully exclude \\'P/src\\'\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b769c9c15f418b1a9de1d28b1be172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "1e22f37e66131cc9e23c709493c04076f31fc58e", "commitAfterChange": "07320ae1b15d683e6cba715cbbe3b5f425005448", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0077\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0071\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe59432accebc326e55d75c4a46578f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test0502g() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502g() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A/voidfoo()/B\", typeBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"test0502/A$2$B\", typeBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b872b5680f0999e54096e7983267c32e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test0502g() throws JavaModelException", "signatureAfterChange": " \tpublic void test0502g() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Unexpected key\", \"test0502/A$2$B\", typeBinding.getKey()); //$NON-NLS-1$", "+\t\tassertEquals(\"Unexpected key\", \"Ltest0502/A$1$B;\", typeBinding.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d4b96628716baebf47d02f0bb40124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void testNegative004()", "signatureAfterChange": " public void testNegative004()", "diff": ["-\t\t\"The final field System.out cannot be assigned. It must be blank in this context, not qualified and not in compound assignment|\",", "+\t\t\"The final field System.out cannot be assigned|\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d34333d60d0b8343124b4d2b354194de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void test003()", "signatureAfterChange": " public void test003()", "diff": ["-\t\t\"Unnecessary cast to type String for expression of type String\\n\" + ", "+\t\t\"Unnecessary cast from String to String\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc66880bed51cf14739c1a42a9c65dbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "09b2a60a289857be8b68f0bdade8ca62b9081359", "commitAfterChange": "159e8ad6d8421b49efbcfb424fe9327481d95b23", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\t\tsuite.addTest(new BatchASTCreationTests(\"test037\"));", "+\t\t\tsuite.addTest(new BatchASTCreationTests(\"test036\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43137452328ed1219c80be57efcc29d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "2c1358f03bc0e335965fd4c2fb6c42c87d9d888c", "commitAfterChange": "4e8e5a98cf0190fbfa5945ebb361f51b261ba210", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void test052()", "signatureAfterChange": " \tpublic void test052()", "diff": ["-\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS:\\\");\\n\" + ", "+\t\t\t\t\"\t\tSystem.out.println(\\\"SUCCESS\\\");\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4fd62a3fb918f618e1130b2520f457", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "c966700bd74e0783aac877f536b22c1fb6841935", "commitAfterChange": "e9762340f0c003c8129c20a94dd530bc2e13e95c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(new ASTConverter15Test(\"test0056\"));", "+\t\tsuite.addTest(new ASTConverter15Test(\"test0057\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd261724d463c774005b604dedb59da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": " \tpublic void test177()", "signatureAfterChange": " \tpublic void test177()", "diff": ["-\t\t\t\"Unnecessary cast to type T for expression of type T\\n\" + ", "+\t\t\t\"Unnecessary cast from T to T\\n\" + "]}], "num": 62943}