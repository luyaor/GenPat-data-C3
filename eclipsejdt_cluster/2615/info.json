{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4366ab70c94d25c78d329e22d679703", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241da3a1f06aaaab689dc9ae2aa794dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "b4f075361126213edb4ab60051081d2143c229e2", "commitAfterChange": "69dd720d7e21bd212bdb2302822b71e51f298515", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\tJavaProject jproject = getProject();", "-\t\tString[] oldRequired = jproject.projectPrerequisites(this.oldResolvedPath);", "+\t\tString[] oldRequired = this.project.projectPrerequisites(this.oldResolvedPath);", "-\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, null, true, true, null/*no reverse map*/);", "+\t\t\tthis.newResolvedPath = this.project.getResolvedClasspath(this.newRawPath, null, true, true, null/*no reverse map*/);", "-\t\tString[] newRequired = jproject.projectPrerequisites(this.newResolvedPath);", "+\t\tString[] newRequired = this.project.projectPrerequisites(this.newResolvedPath);", "-\t\t\tIProject project = jproject.getProject();", "-\t\t\tIProjectDescription description = project.getDescription();", "+\t\t\tIProject projectResource = this.project.getProject();", "+\t\t\tIProjectDescription description = projectResource.getDescription();", "-\t\t\tIWorkspaceRoot wksRoot = project.getWorkspace().getRoot();", "+\t\t\tIWorkspaceRoot wksRoot = projectResource.getWorkspace().getRoot();", "-\t\t\tproject.setDescription(description, this.fMonitor);", "+\t\t\tprojectResource.setDescription(description, this.fMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3405a3cdf722aa54c60335dae60c969a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "f1be73585a15718b8d7e7bfcd6517de46dc0a4a4", "commitAfterChange": "c5f13d0ee9ef1590b509e21fa6cb7160b90c28f0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": " \t\tpublic void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\t\tString[] oldRequired = this.project.projectPrerequisites(this.oldResolvedPath);", "+\t\t\tString[] oldRequired = this.oldResolvedPath == null ? CharOperation.NO_STRINGS : this.project.projectPrerequisites(this.oldResolvedPath);", "-\t\t\t\tthis.newResolvedPath = this.project.getResolvedClasspath(this.newRawPath, null, true, true, null/*no reverse map*/);", "+\t\t\t\tif (this.newRawPath == null)", "+\t\t\t\t\tthis.newRawPath = this.project.getRawClasspath(true/*create markers*/, false/*don't log problems*/);", "+\t\t\t\tthis.newResolvedPath = ", "+\t\t\t\t\tthis.project.getResolvedClasspath(", "+\t\t\t\t\t\tthis.newRawPath, ", "+\t\t\t\t\t\tnull/*no output*/, ", "+\t\t\t\t\t\ttrue/*ignore unresolved entry*/, ", "+\t\t\t\t\t\ttrue/*generate marker on error*/, ", "+\t\t\t\t\t\tnull/*no reverse map*/);"]}], "num": 2615}