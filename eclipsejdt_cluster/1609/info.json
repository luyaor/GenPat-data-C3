{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "979e2bdce6d2fa0ccd875c31bcf3cecc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10bfd11e97cc7ed0bca5f70b2f1c86d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 635, "methodNumberAfterChange": 635, "signatureBeforeChange": " \tpublic void test631()", "signatureAfterChange": " \tpublic void test631()", "diff": ["-\t\t\t\"Bound mismatch: The generic method valueOf(Class<T>, String) of type Enum<E> is not applicable for the arguments (Class<capture-of ? extends Enum<?>>, String) since the type capture-of ? extends Enum<?> is not a valid substitute for the bounded parameter <T extends Enum<T>>\\n\" + ", "+\t\t\t\"Bound mismatch: The generic method valueOf(Class<T>, String) of type Enum<E> is not applicable for the arguments (Class<capture-of ? extends Enum<?>>, String). The inferred type capture-of ? extends Enum<?> is not a valid substitute for the bounded parameter <T extends Enum<T>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc98f5fbcb2ee08cfbed7bd6121f6f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 804, "methodNumberAfterChange": 804, "signatureBeforeChange": " public void test798()", "signatureAfterChange": " public void test798()", "diff": ["-\t\t\"Bound mismatch: The generic method max(T...) of type X is not applicable for the arguments (Number&Comparable<?>...) since the type Number&Comparable<?> is not a valid substitute for the bounded parameter <T extends Comparable<? super T>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method max(T...) of type X is not applicable for the arguments (Integer, Double, BigDecimal). The inferred type Number&Comparable<?> is not a valid substitute for the bounded parameter <T extends Comparable<? super T>>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8bbdb5514dc5d8cae93d3c3f0f33eec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 791, "methodNumberAfterChange": 791, "signatureBeforeChange": " public void test785()", "signatureAfterChange": " public void test785()", "diff": ["-\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (AbstractCollection<? extends Object>&Cloneable&Serializable, AbstractCollection<? extends Object>&Cloneable&Serializable) since the type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + ", "+\t\t\"Bound mismatch: The generic method getLonger(T, T) of type X is not applicable for the arguments (HashSet<capture-of ?>, ArrayList<capture-of ?>). The inferred type AbstractCollection<? extends Object>&Cloneable&Serializable is not a valid substitute for the bounded parameter <T extends Collection<? extends Number>>\\n\" + "]}], "num": 1609}