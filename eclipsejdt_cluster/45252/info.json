{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76011cb6a0ead38a7744bc24c954cf22", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc9e9275be3a1f89ca1dc3104b01406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "commitAfterChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(ClassScope upperScope)", "diff": ["+\t\t\t// check @Deprecated annotation presence", "+\t\t\tif (this.binding != null", "+\t\t\t\t\t&& (this.binding.getAnnotationTagBits() & TagBits.AnnotationDeprecated) == 0", "+\t\t\t\t\t&& (this.binding.modifiers & ClassFileConstants.AccDeprecated) != 0", "+\t\t\t\t\t&& this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\tthis.scope.problemReporter().missingDeprecatedAnnotationForMethod(this);", "+\t\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc2475d48a06b538f45216e03bc8f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "8c67d56825136ce0d7026162576ad6997e930bdc", "commitAfterChange": "0b88f9a0bb1950edae0865a8658608a49edfc445", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t// by grammatical construction, interface methods are always abstract", "+\t\t\t\tbreak;", "+\t\t\tcase TypeDeclaration.INTERFACE_DECL :", "+\t\t\t\tif (compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8", "+\t\t\t\t\t\t&& (this.modifiers & (ExtraCompilerModifiers.AccSemicolonBody | ClassFileConstants.AccAbstract)) == ExtraCompilerModifiers.AccSemicolonBody) {", "+\t\t\t\t\tif ((this.modifiers & (ClassFileConstants.AccStatic | ExtraCompilerModifiers.AccDefaultMethod)) != 0) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().methodNeedBody(this);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}], "num": 45252}