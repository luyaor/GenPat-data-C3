{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8a5bf8d2aa36cb21e87a1e04e0c0f5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cba313afaf622e8e21dae5e4ba7aba9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic void acceptSearchMatch(SearchMatch match) throws CoreException", "signatureAfterChange": " \t\tpublic void acceptSearchMatch(SearchMatch match) throws CoreException", "diff": ["+\t\tpublic int count = 0;", "+\t\t\tcount++;", "-\t\t\t\tif (results.length() > 0) results.append(\"\\n\");", "-\t\t\t\tresults.append(getPathString(resource, element));", "+\t\t\t\tline = new StringBuffer(getPathString(resource, element));", "-\t\t\t\t\tresults.append(\" [in \");", "-\t\t\t\t\tresults.append(project.getName());", "-\t\t\t\t\tresults.append(\"]\");", "+\t\t\t\t\tline.append(\" [in \");", "+\t\t\t\t\tline.append(project.getName());", "+\t\t\t\t\tline.append(\"]\");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\tresults.append(\".\");", "-\t\t\t\t\tresults.append(localVar.getElementName());", "+\t\t\t\t\tline.append(\".\");", "+\t\t\t\t\tline.append(localVar.getElementName());", "-\t\t\t\t\t\tresults.append(\" [\");", "+\t\t\t\t\t\tline.append(\" [\");", "-\t\t\t\t\t\t\t\tresults.append(CharOperation.subarray(contents, lineStart, start));", "-\t\t\t\t\t\t\t\tresults.append(\"<\");", "+\t\t\t\t\t\t\t\tline.append(CharOperation.subarray(contents, lineStart, start));", "+\t\t\t\t\t\t\t\tline.append(\"<\");", "-\t\t\t\t\t\t\tresults.append(CharOperation.subarray(contents, start, end));", "+\t\t\t\t\t\t\tline.append(CharOperation.subarray(contents, start, end));", "-\t\t\t\t\t\t\t\tresults.append(\">\");", "+\t\t\t\t\t\t\t\tline.append(\">\");", "-\t\t\t\t\t\t\t\tresults.append(CharOperation.subarray(contents, end, lineEnd));", "+\t\t\t\t\t\t\t\tline.append(CharOperation.subarray(contents, end, lineEnd));", "-\t\t\t\t\t\t\tresults.append(\"No source\");", "+\t\t\t\t\t\t\tline.append(\"No source\");", "-\t\t\t\t\t\tresults.append(\"]\");", "+\t\t\t\t\t\tline.append(\"]\");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\t\t\t\t\tthis.results.append(\"EQUIVALENT_\");", "+\t\t\t\t\t\t\t\t\tline.append(\"EQUIVALENT_\");", "-\t\t\t\t\t\t\t\t\t\tthis.results.append(\"ERASURE_\");", "+\t\t\t\t\t\t\t\t\t\tline.append(\"ERASURE_\");", "-\t\t\t\t\t\t\t\t\tthis.results.append(\"ERASURE_\");", "+\t\t\t\t\t\t\t\t\tline.append(\"ERASURE_\");", "-\t\t\t\t\t\t\t\t\tresults.append(\"EXACT_\");", "+\t\t\t\t\t\t\t\t\tline.append(\"EXACT_\");", "-\t\t\t\t\t\t\t\tresults.append(\"MATCH\");", "+\t\t\t\t\t\t\t\tline.append(\"MATCH\");", "-\t\t\t\t\t\t\t\tresults.append(\"EXACT_MATCH\");", "+\t\t\t\t\t\t\t\tline.append(\"EXACT_MATCH\");", "-\t\t\t\t\t\t\tresults.append(\"POTENTIAL_MATCH\");", "+\t\t\t\t\t\t\tline.append(\"POTENTIAL_MATCH\");", "-\t\t\t\t\tresults.append(\" \");", "+\t\t\t\t\tline.append(\" \");", "-\t\t\t\t\t\tresults.append(\"INSIDE_JAVADOC\");", "+\t\t\t\t\t\tline.append(\"INSIDE_JAVADOC\");", "-\t\t\t\t\t\tresults.append(\"OUTSIDE_JAVADOC\");", "+\t\t\t\t\t\tline.append(\"OUTSIDE_JAVADOC\");", "-\t\t\t\t\t\t\tresults.append(\" SYNTHETIC\");", "+\t\t\t\t\t\t\tline.append(\" SYNTHETIC\");", "+\t\t\t\t}", "+\t\t\t\tif (match.getAccuracy() == SearchMatch.A_ACCURATE || showPotential) {", "+\t\t\t\t\tif (results.length() > 0) results.append(\"\\n\");", "+\t\t\t\t\tresults.append(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f429b09973381d024d7934dc3ff60c7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected void setSourceComment(char[] source) throws ArrayIndexOutOfBoundsException", "signatureAfterChange": " \tprotected void setSourceComment(char[] source) throws ArrayIndexOutOfBoundsException", "diff": ["-\t\tthis.comments = new ArrayList();", "-\t\tthis.allTags = new ArrayList();", "+\t\tcomments = new ArrayList();", "+\t\tallTags = new ArrayList();", "-\t\t\ti += (this.chars==null) ? 1 : this.chars.length();", "+\t\t\ti += (chars==null) ? 1 : chars.length();", "-\t\t\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\t\t\telse buffer.append(this.chars);", "+\t\t\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\t\t\telse buffer.append(chars);", "-\t\t\t\t\t\t\t\ti += (this.chars==null) ? 1 : this.chars.length();", "+\t\t\t\t\t\t\t\ti += (chars==null) ? 1 : chars.length();", "-\t\t\t\t\t\t\t\t\ti += (this.chars==null) ? 1 : this.chars.length();", "+\t\t\t\t\t\t\t\t\ti += (chars==null) ? 1 : chars.length();", "-\t\t\t\t\t\t\t\ti += (this.chars==null) ? 1 : this.chars.length();", "+\t\t\t\t\t\t\t\ti += (chars==null) ? 1 : chars.length();", "-\t\t\t\t\t\t\t\t\ti += (this.chars==null) ? 1 : this.chars.length();", "+\t\t\t\t\t\t\t\t\ti += (chars==null) ? 1 : chars.length();", "-\t\t\t\t\t\t\t\t\t\t\ti += (this.chars==null) ? 1 : this.chars.length();", "+\t\t\t\t\t\t\t\t\t\t\ti += (chars==null) ? 1 : chars.length();", "-\t\t\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\t\t\telse buffer.append(this.chars);", "+\t\t\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\t\t\telse buffer.append(chars);", "-\t\t\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\t\t\telse buffer.append(this.chars);", "+\t\t\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\t\t\telse buffer.append(chars);", "-\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\telse buffer.append(this.chars);", "+\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\telse buffer.append(chars);", "-\t\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\t\telse buffer.append(this.chars);", "-\t\t\t\t\t\tthis.comments.add(buffer.toString());", "-\t\t\t\t\t\tthis.allTags.add(new ArrayList());", "+\t\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\t\telse buffer.append(chars);", "+\t\t\t\t\t\tcomments.add(buffer.toString());", "+\t\t\t\t\t\tallTags.add(new ArrayList());", "-\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\telse buffer.append(this.chars);", "+\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\telse buffer.append(chars);", "-\t\t\t\t\t\tthis.comments.add(buffer.toString());", "-\t\t\t\t\t\tthis.allTags.add(tags);", "+\t\t\t\t\t\tcomments.add(buffer.toString());", "+\t\t\t\t\t\tallTags.add(tags);", "-\t\t\t\t\t\tthis.comments.add(buffer.toString());", "-\t\t\t\t\t\tthis.allTags.add(tags);", "+\t\t\t\t\t\tcomments.add(buffer.toString());", "+\t\t\t\t\t\tallTags.add(tags);", "-\t\t\t\t\t\tif (this.chars == null) buffer.append(currentChar);", "-\t\t\t\t\t\telse buffer.append(this.chars);", "+\t\t\t\t\t\tif (chars == null) buffer.append(currentChar);", "+\t\t\t\t\t\telse buffer.append(chars);"]}], "num": 42414}