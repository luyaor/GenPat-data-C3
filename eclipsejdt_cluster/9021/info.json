{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11ad5086aadb4d014f9c0a251e57284b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74fb0f3f00e61a084e7097901f501556", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "266ddb07da0dd2618bcfbec3256d70ddf353d13c", "commitAfterChange": "0f0f6cf807937b95cd594ad18f819e710f9be563", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic IJavaElement findElement(IPath path) throws JavaModelException", "signatureAfterChange": " \tpublic IJavaElement findElement(IPath path, WorkingCopyOwner owner) throws JavaModelException", "diff": ["+\t */", "+\tpublic IJavaElement findElement(IPath path, WorkingCopyOwner owner) throws JavaModelException {", "+\t\t", "-\t\t\t\tIType type =", "-\t\t\t\t\tgetNameLookup().findType(", "+\t\t\t\tIType type = null;", "+\t\t\t\tNameLookup lookup = null;", "+\t\t\t\ttry {", "+\t\t\t\t\t// set units to look inside", "+\t\t\t\t\tlookup = getNameLookup();", "+\t\t\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "+\t\t\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t\t\t\t", "+\t\t\t\t\t// lookup type", "+\t\t\t\t\ttype = lookup.findType(", "+\t\t\t\t} finally {", "+\t\t\t\t\tif (lookup != null) {", "+\t\t\t\t\t\tlookup.setUnitsToLookInside(null);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6a6bb71dd76b6e4bf8f97fbbb57a9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "266ddb07da0dd2618bcfbec3256d70ddf353d13c", "commitAfterChange": "0f0f6cf807937b95cd594ad18f819e710f9be563", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic IType findType(String fullyQualifiedName) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String fullyQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tIType type = ", "-\t\t\tthis.getNameLookup().findType(", "-\t\t\t\tfullyQualifiedName, ", "+\t */", "+\tpublic IType findType(String fullyQualifiedName, WorkingCopyOwner owner) throws JavaModelException {", "+\t\t", "+\t\tIType type = null;", "+\t\tNameLookup lookup = null;", "+\t\ttry {", "+\t\t\t// set units to look inside", "+\t\t\tlookup = getNameLookup();", "+\t\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\t\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "+\t\t\tlookup.setUnitsToLookInside(workingCopies);", "+\t\t\t", "+\t\t\t// lookup type", "+\t\t\ttype = lookup.findType(", "+\t\t\t\tfullyQualifiedName,", "+\t\t} finally {", "+\t\t\tif (lookup != null) {", "+\t\t\t\tlookup.setUnitsToLookInside(null);", "+\t\t\t}", "+\t\t}"]}], "num": 9021}