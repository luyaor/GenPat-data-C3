{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0cc61acd855e0f24d7c4b71022783a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793ec5b81afc98b4e04e409c0ec5c101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean isMatchingIndexRecord()", "signatureAfterChange": " public boolean matchesDecodedPattern(SearchPattern decodedPattern)", "diff": ["-public boolean isMatchingIndexRecord() {", "-\tif (this.simpleName == null) {", "-\t\t// Optimization, eg. type reference is 'org.eclipse.jdt.core.*'", "-\t\treturn matchesName(this.segments[this.currentSegment], getTypeReferenceRecord().segments[0]);", "-\t} else {", "-\t\treturn matchesName(this.simpleName, getTypeReferenceRecord().simpleName);", "-\t}", "+public boolean matchesDecodedPattern(SearchPattern decodedPattern) {", "+\tif (this.simpleName != null)", "+\t\treturn matchesName(this.simpleName, ((TypeReferencePattern) decodedPattern).simpleName);", "+", "+\t// Optimization, eg. type reference is 'org.eclipse.jdt.core.*'", "+\treturn matchesName(this.segments[this.currentSegment], ((TypeReferencePattern) decodedPattern).segments[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8feea48bdc8ea267e9a59df7630c7bf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "259752fd2611ae86a8e7deb13311cd77026ab6f4", "commitAfterChange": "4725cc4b92cda70d0724324edfd82ed8a46041bc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprotected void storeModificationCount(long modificationCount)", "signatureAfterChange": " \tvoid recordScope(ASTNode astNode, BlockScope blockScope)", "diff": ["-\tprotected void storeModificationCount(long modificationCount) {", "-\t\tsuper.storeModificationCount(modificationCount);", "-\t\tthis.checkModificationCount = true;", "+\tvoid recordScope(ASTNode astNode, BlockScope blockScope) {", "+\t\tthis.astNodesToBlockScope.put(astNode, blockScope);"]}], "num": 60226}