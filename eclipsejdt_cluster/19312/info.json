{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6016e19c7b4c31e193724c7dfd0d241", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9676e1ed64c6f3690ca37f6ed773f0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 97, "signatureBeforeChange": " \t \tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "diff": ["+\t", "+\tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration) {", "+\t\tVariableDeclarationFragment variableDeclarationFragment = this.ast.newVariableDeclarationFragment();", "+\t\tSimpleName name = this.ast.newSimpleName(new String(fieldDeclaration.name));", "+\t\tname.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.sourceEnd - fieldDeclaration.sourceStart + 1);", "+\t\tvariableDeclarationFragment.setName(name);", "+\t\tint end = retrievePositionBeforeNextCommaOrSemiColon(fieldDeclaration.sourceEnd, fieldDeclaration.declarationSourceEnd);", "+\t\tif (end == -1) {", "+\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.declarationSourceEnd - fieldDeclaration.sourceStart + 1);", "+\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);", "+\t\t} else {", "+\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, end - fieldDeclaration.sourceStart + 1);", "+\t\t}", "+\t\tif (fieldDeclaration.initialization != null) {", "+\t\t\tvariableDeclarationFragment.setInitializer(convert(fieldDeclaration.initialization));", "+\t\t}", "+\t\tvariableDeclarationFragment.setExtraDimensions(retrieveExtraDimension(fieldDeclaration.sourceEnd + 1, fieldDeclaration.declarationSourceEnd ));", "+\t\tif (this.resolveBindings) {", "+\t\t\trecordNodes(name, fieldDeclaration);", "+\t\t\trecordNodes(variableDeclarationFragment, fieldDeclaration);", "+\t\t\tvariableDeclarationFragment.resolveBinding();", "+\t\t}", "+\t\treturn variableDeclarationFragment;", "+\t}", "-\t", "-\tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration) {", "-\t\tVariableDeclarationFragment variableDeclarationFragment = this.ast.newVariableDeclarationFragment();", "-\t\tSimpleName name = this.ast.newSimpleName(new String(fieldDeclaration.name));", "-\t\tname.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.sourceEnd - fieldDeclaration.sourceStart + 1);", "-\t\tvariableDeclarationFragment.setName(name);", "-\t\tint end = retrievePositionBeforeNextCommaOrSemiColon(fieldDeclaration.sourceEnd, fieldDeclaration.declarationSourceEnd);", "-\t\tif (end == -1) {", "-\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.declarationSourceEnd - fieldDeclaration.sourceStart + 1);", "-\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);", "-\t\t} else {", "-\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, end - fieldDeclaration.sourceStart + 1);", "-\t\t}", "-\t\tif (fieldDeclaration.initialization != null) {", "-\t\t\tvariableDeclarationFragment.setInitializer(convert(fieldDeclaration.initialization));", "-\t\t}", "-\t\tvariableDeclarationFragment.setExtraDimensions(retrieveExtraDimension(fieldDeclaration.sourceEnd + 1, fieldDeclaration.declarationSourceEnd ));", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(name, fieldDeclaration);", "-\t\t\trecordNodes(variableDeclarationFragment, fieldDeclaration);", "-\t\t\tvariableDeclarationFragment.resolveBinding();", "-\t\t}", "-\t\treturn variableDeclarationFragment;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deb3ba44137346d639eb390b36f94ce6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tprivate int retrievePositionBeforeNextCommaOrSemiColon(int start, int end)", "signatureAfterChange": " \tprotected int retrievePositionBeforeNextCommaOrSemiColon(int start, int end)", "diff": ["-\t */", "-\tprivate int retrievePositionBeforeNextCommaOrSemiColon(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\tint braceCounter = 0;", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACKET :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameCOMMA :", "-\t\t\t\t\tcase TerminalTokens.TokenNameSEMICOLON :", "-\t\t\t\t\t\tif (braceCounter == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.startPosition - 1;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrievePositionBeforeNextCommaOrSemiColon(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\tint braceCounter = 0;", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE :", "+\t\t\t\t\t\tbraceCounter++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "+\t\t\t\t\t\tbraceCounter--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameLPAREN :", "+\t\t\t\t\t\tbraceCounter++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameRPAREN :", "+\t\t\t\t\t\tbraceCounter--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameLBRACKET :", "+\t\t\t\t\t\tbraceCounter++;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACKET :", "+\t\t\t\t\t\tbraceCounter--;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameCOMMA :", "+\t\t\t\t\tcase TerminalTokens.TokenNameSEMICOLON :", "+\t\t\t\t\t\tif (braceCounter == 0) {", "+\t\t\t\t\t\t\treturn this.scanner.startPosition - 1;", "+\t\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}], "num": 19312}