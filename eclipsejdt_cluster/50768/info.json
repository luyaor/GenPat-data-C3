{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f088c9f352c05e007712854a72401cac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3b51a4feb5b6da94784d34951e66e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public TypeBinding resolveType(ClassScope classScope)", "signatureAfterChange": "  public TypeBinding resolveType(ClassScope classScope)", "diff": ["+", "-\tconstant = NotAConstant;", "+\tthis.constant = NotAConstant;", "-\t\t\tclassScope.problemReporter().invalidType(this, this.resolvedType);", "+\t\t\treportInvalidType(classScope);", "-\t\tif (isTypeUseDeprecated(this.resolvedType, classScope))", "-\t\t\tclassScope.problemReporter().deprecatedType(this.resolvedType, this);", "+\t\tif (isTypeUseDeprecated(this.resolvedType, classScope)) {", "+\t\t\treportDeprecatedType(classScope);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c217f771f02cae0ecee44f61a76bafc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\tconstant = NotAConstant;", "+\tthis.constant = NotAConstant;", "-\t\t\tblockScope.problemReporter().invalidType(this, this.resolvedType);", "+\t\t\treportInvalidType(blockScope);", "-\t\tif (isTypeUseDeprecated(this.resolvedType, blockScope))", "-\t\t\tblockScope.problemReporter().deprecatedType(this.resolvedType, this);", "+\t\tif (isTypeUseDeprecated(this.resolvedType, blockScope)) {", "+\t\t\treportDeprecatedType(blockScope);", "+\t\t}"]}], "num": 50768}