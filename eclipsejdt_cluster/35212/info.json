{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5d2799d05d2628387e9c4ba9aef1074", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02456c6d69812ce266cf3fa7de17b9f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName != null) {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding != null){\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "-\t\t\t}\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "+\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tdefault:\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding == null) {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "+\t\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad48e20190dfdc1a2a9fb0721c18100d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName != null) {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding != null){\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "-\t\t\t}\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "+\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tdefault:\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding == null) {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "+\t\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcbb9b466e2c1f1e673424bcd729ae08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r private boolean matches(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["- */\r", "-private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {\r", "-\tif (!resolve) {\r", "-\t\tif (this.pkgName != null) {\r", "-\t\t\tswitch (this.matchMode) {\r", "-\t\t\t\tcase EXACT_MATCH:\r", "-\t\t\t\tcase PREFIX_MATCH:\r", "-\t\t\t\t\treturn CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "-\t\t\t\tcase PATTERN_MATCH:\r", "-\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\"/*nonNLS*/.toCharArray());\r", "-\t\t\t\t\treturn CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tTypeBinding typeBinding = typeRef.binding;\r", "-\t\tif (typeBinding != null){\r", "-\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "-\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "-\t\t\t}\r", "-\t\t\tif (typeBinding instanceof ReferenceBinding) {\r", "-\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "-\t\t\t\treturn this.matches(pkgBinding.compoundName);\r", "-\t\t\t}\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\t\t\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+ */\r", "+private int matchLevel(QualifiedTypeReference typeRef, boolean resolve) {\r", "+\tif (!resolve) {\r", "+\t\tif (this.pkgName == null) {\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tswitch (this.matchMode) {\r", "+\t\t\t\tcase EXACT_MATCH:\r", "+\t\t\t\tcase PREFIX_MATCH:\r", "+\t\t\t\t\tif (CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tcase PATTERN_MATCH:\r", "+\t\t\t\t\tchar[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, \".*\".toCharArray()); //$NON-NLS-1$\r", "+\t\t\t\t\tif (CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive)) {\r", "+\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t\t}\r", "+\t\t\t\tdefault:\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tTypeBinding typeBinding = typeRef.binding;\r", "+\t\tif (typeBinding == null) {\r", "+\t\t\treturn INACCURATE_MATCH;\r", "+\t\t} else {\r", "+\t\t\tif (typeBinding instanceof ArrayBinding) {\r", "+\t\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;\r", "+\t\t\t}\r", "+\t\t\tif (typeBinding == null) {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t} else if (typeBinding instanceof ReferenceBinding) {\r", "+\t\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;\r", "+\t\t\t\tif (this.matches(pkgBinding.compoundName)) {\r", "+\t\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\t\r", "+\t}\r", "+}\r"]}], "num": 35212}