{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cecb12ff5bd8c37764e93219207b028", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a3a0e4a037b2172e58efe20799e96a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test05()", "signatureAfterChange": "  public void test05()", "diff": ["+\t\t", "+\tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString = ", "+\t\t\"public class X {\\n\" + ", "+\t\t\"  public X() {\\n\" + ", "+\t\t\"    super();\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  void foo() {\\n\" + ", "+\t\t\"    System.out.println();\\n\" + ", "+\t\t\"    new baz() {\\n\" + ", "+\t\t\"    };\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  void bar() {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"  void truc() {\\n\" + ", "+\t\t\"  }\\n\" + ", "+\t\t\"}\\n\";", "+\t\texpectedDietPlusBodyPlusStatementsRecoveryUnitToString,\t", "-\t\texpectedCompletionDietUnitToString,\t", "-\t\ttestName);", "+\t\texpectedCompletionDietUnitToString, testName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8c7f0f4ced0a140fcd08edf7c88418", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/LambdaExpressionSyntaxTest.java", "commitBeforeChange": "ded6df093dcb91c3c8323eba13d60dc2eccf8d25", "commitAfterChange": "834bb3df875d46fb3a9058f7e3e103441d8b1dab", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void test0001() throws IOException", "signatureAfterChange": " \tpublic void test0001() throws IOException", "diff": ["-", "+\t// type elided, unparenthesized parameter + expression body lambda in casting context.", "-\t\t\t\t\"    System.out.println((I) (<no type> x) -> (x * x).square(10));\\n\" + ", "+\t\t\t\t\"    System.out.println(((I) (<no type> x) -> (x * x)).square(10));\\n\" + ", "-\t\tcheckParse(CHECK_ALL & ~CHECK_JAVAC_PARSER , source.toCharArray(), null, \"test0001\", expectedUnitToString);", "+\t\tcheckParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, \"test0001\", expectedUnitToString);"]}], "num": 3563}