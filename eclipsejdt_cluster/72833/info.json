{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "deef202309ee8ad3c810f56cf5227a0d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26fccbd76743d6ff61e8b6a5ec8e9207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "e3beac235d122e4c3c54870082319a4f2cc2abeb", "commitAfterChange": "553b813a23ab25477516582ea0c9fc2d6eaf9fb4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tpublic char[] computeUniqueKey(boolean withAccessFlags) {", "-\t\tchar[] genericTypeKey = this.genericType.computeUniqueKey(false/*without access flags*/);", "+\tpublic char[] computeUniqueKey(boolean isLeaf) {", "+\t\tchar[] genericTypeKey = this.genericType.computeUniqueKey(false/*not a leaf*/);", "-                wildCardKey = CharOperation.concat(WILDCARD_PLUS, this.bound.computeUniqueKey(false/*without access flags*/));", "+                wildCardKey = CharOperation.concat(WILDCARD_PLUS, this.bound.computeUniqueKey(false/*not a leaf*/));", "-\t\t\t    wildCardKey = CharOperation.concat(WILDCARD_MINUS, this.bound.computeUniqueKey(false/*without access flags*/));", "+\t\t\t    wildCardKey = CharOperation.concat(WILDCARD_MINUS, this.bound.computeUniqueKey(false/*not a leaf*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8eeeef08a1d7f6ff79e96337782e1c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "582314aebaa81c30307377892044ded507af1f74", "commitAfterChange": "c0ecc47cac9e40a73cc3ed5a5be93bbace7cb891", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["+\t */", "+\t\tchar[] genericTypeKey = this.genericType.computeUniqueKey(false/*without access flags*/);", "+\t\tchar[] wildCardKey;", "-                return WILDCARD_STAR;", "+                wildCardKey = WILDCARD_STAR;", "+                break;", "-                return CharOperation.concat(WILDCARD_PLUS, this.bound.computeUniqueKey(false/*without access flags*/));", "+                wildCardKey = CharOperation.concat(WILDCARD_PLUS, this.bound.computeUniqueKey(false/*without access flags*/));", "+                break;", "-\t\t\t    return CharOperation.concat(WILDCARD_MINUS, this.bound.computeUniqueKey(false/*without access flags*/));", "+\t\t\t    wildCardKey = CharOperation.concat(WILDCARD_MINUS, this.bound.computeUniqueKey(false/*without access flags*/));", "+\t\t\t\tbreak;", "+        return CharOperation.concat(genericTypeKey, wildCardKey);"]}], "num": 72833}