{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9054b360351b049b942d409827b1bfc6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c7f99d15b5f6cd88f1cdafde76b1ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "commitAfterChange": "fe8f03030c996e7f3abaa101bf62fc6c88122090", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void recordCatchContextOfEscapingException(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException)", "signatureAfterChange": " \tpublic void recordCatchContextOfEscapingException(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException, FlowInfo exceptionInfo)", "diff": ["-\tpublic void recordCatchContextOfEscapingException(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException) {", "+\tpublic void recordCatchContextOfEscapingException(ExceptionHandlingFlowContext catchingContext,\tReferenceBinding caughtException, FlowInfo exceptionInfo) {", "-\t\tthis.escapingExceptionCatchSites.add(new EscapingExceptionCatchSite(catchingContext, caughtException));", "+\t\tthis.escapingExceptionCatchSites.add(new EscapingExceptionCatchSite(catchingContext, caughtException, exceptionInfo));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7cb1831facaaeb8d4a1df4430d9c9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "1b20dcfe1f475fdfa6c1b5a9779be9cb96d6bf35", "commitAfterChange": "bc9fb826fad258109fd282b013c3bd67797f6224", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void complainIfUnusedExceptionHandlers(AbstractMethodDeclaration method)", "signatureAfterChange": "  public void complainIfUnusedExceptionHandlers(AbstractMethodDeclaration method)", "diff": ["-\t\tint cacheIndex = index / ExceptionHandlingFlowContext.BitCacheSize;", "-\t\tint bitMask = 1 << (index % ExceptionHandlingFlowContext.BitCacheSize);", "-\t\tif ((this.isReached[cacheIndex] & bitMask) == 0) {", "+\t\tif ((this.isReached[index / ExceptionHandlingFlowContext.BitCacheSize] & 1 << (index % ExceptionHandlingFlowContext.BitCacheSize)) == 0) {"]}], "num": 16436}