{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "561ec22c6fbaab691d704d0f4d178938", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b23be7c4eb249337470eebaaf378e71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized)", "signatureAfterChange": " ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "diff": ["-", "-ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized) {", "+ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames) {", "-", "-\treturn getTypeFromCompoundName(compoundName, isParameterized);", "+\tboolean wasMissingType = false;", "+\tif (missingTypeNames != null) {", "+\t\tfor (int i = 0, max = missingTypeNames.length; i < max; i++) {", "+\t\t\tif (CharOperation.equals(compoundName, missingTypeNames[i])) {", "+\t\t\t\twasMissingType = true;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn getTypeFromCompoundName(compoundName, isParameterized, wasMissingType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8af46df97a6ca244b47553420232025", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5bd6b9d7331a9e7fe82d427994d62e0af1821389", "commitAfterChange": "a49b0379fae683770f815e7e32d76b4ebea892ec", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tprivate void findVariableName( \t\tchar[] token, \t\tchar[] qualifiedPackageName, \t\tchar[] qualifiedSourceName, \t\tchar[] sourceName, \t\tfinal TypeBinding typeBinding, \t\tchar[][] excludeNames, \t\tint dim, \t\tint kind, \t\tint modifiers)", "signatureAfterChange": " \tprivate void findVariableName( \t\tchar[] token, \t\tchar[] qualifiedPackageName, \t\tchar[] qualifiedSourceName, \t\tchar[] sourceName, \t\tfinal TypeBinding typeBinding, \t\tchar[][] discouragedNames, \t\tfinal char[][] forbiddenNames, \t\tint dim, \t\tint kind, \t\tint modifiers)", "diff": ["-\t\tchar[][] excludeNames,", "+\t\tchar[][] discouragedNames,", "+\t\tfinal char[][] forbiddenNames,", "+\t\t\t\tint l = forbiddenNames == null ? 0 : forbiddenNames.length;", "+\t\t\t\tfor (int i = 0; i < l; i++) {", "+\t\t\t\t\tif (CharOperation.equals(forbiddenNames[i], name, false)) return;", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t\t\t\texcludeNames,", "+\t\t\t\t\tdiscouragedNames,", "-\t\t\t\t\texcludeNames,", "+\t\t\t\t\tdiscouragedNames,", "-\t\t\t\t\texcludeNames,", "+\t\t\t\t\tdiscouragedNames,"]}], "num": 18899}