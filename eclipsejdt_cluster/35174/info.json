{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb3334d47ea222a40e123e326f1398b4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dce6a59f99085aed5605117c0902ac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \t \tpublic void testVariableDeclarationStatement() throws Exception", "signatureAfterChange": " \t \tpublic void testVariableDeclarationStatement() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(decl.getType(), newType, null);", "+\t\t\trewrite.replace(decl.getType(), newType, null);", "-\t\t\trewrite.markAsRemoved((ASTNode) fragments.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) fragments.get(1), null);", "+\t\t\trewrite.remove((ASTNode) fragments.get(0), null);", "+\t\t\trewrite.remove((ASTNode) fragments.get(1), null);", "-\t\t\trewrite.markAsReplaced((ASTNode) fragments.get(2), frag, null);", "+\t\t\trewrite.replace((ASTNode) fragments.get(2), frag, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db55dec18c75f1162081c77fb47b86dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void testInfixExpression() throws Exception", "signatureAfterChange": " \t \tpublic void testInfixExpression() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(expr.getLeftOperand(), leftOp, null);\t", "+\t\t\trewrite.replace(expr.getLeftOperand(), leftOp, null);\t", "-\t\t\trewrite.markAsReplaced(expr.getRightOperand(), rightOp, null);\t", "+\t\t\trewrite.replace(expr.getRightOperand(), rightOp, null);\t", "-\t\t\trewrite.markAsRemoved((ASTNode) extendedOperands.get(0), null);", "+\t\t\trewrite.remove((ASTNode) extendedOperands.get(0), null);", "-\t\t\trewrite.markAsReplaced((ASTNode) extendedOperands.get(1), newOp1, null);", "+\t\t\trewrite.replace((ASTNode) extendedOperands.get(1), newOp1, null);"]}], "num": 35174}