{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dd406062b3fad1b1c6a3e7898b90182", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05236ac0a12df01d483833c9969c48bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 257, "signatureBeforeChange": " \tpublic void testTryStatement()", "signatureAfterChange": " \tpublic void testTryStatement()", "diff": ["+\t/** @deprecated using deprecated code */", "+\t\tint level = this.ast.apiLevel();", "+\t\tif (level >= AST.JLS4) {", "+\t\t\tVariableDeclarationExpression vde1= this.ast.newVariableDeclarationExpression(this.W1);", "+\t\t\tvde1.setType(this.T1);", "+\t\t\tx1.resources().add(vde1);", "+\t\t\tVariableDeclarationExpression vde2= this.ast.newVariableDeclarationExpression(this.W2);", "+\t\t\tvde2.setType(this.T2);", "+\t\t\tx1.resources().add(vde2);", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(sTY\"+this.B1S+\"[(cc\"+this.V1S+\"[(sBsB)]\"+\"cc)]\"+\"[(cc\"+this.V2S+\"[(sBsB)]\"+\"cc)]\"+\"[(sBsB)]\"+\"sTY)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ //$NON-NLS-9$", "+\t\tassertEquals(\"[(sTY\"", "+\t\t\t\t+(level >= AST.JLS4 ? \"[(eVD\"+this.T1S+this.W1S+\"eVD)]\"+\"[(eVD\"+this.T2S+this.W2S+\"eVD)]\" : \"\")", "+\t\t\t\t+this.B1S+\"[(cc\"+this.V1S+\"[(sBsB)]\"+\"cc)]\"+\"[(cc\"+this.V2S+\"[(sBsB)]\"+\"cc)]\"+\"[(sBsB)]\"+\"sTY)]\", result); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$ //$NON-NLS-7$ //$NON-NLS-8$ //$NON-NLS-9$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7bd45c71de148a765a19b806214d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 250, "signatureBeforeChange": " \tpublic void testTypeDeclaration()", "signatureAfterChange": " \tpublic void testTypeDeclaration()", "diff": ["-\t\tx1.setSuperclass(N2);", "-\t\tx1.superInterfaces().add(N3);", "-\t\tx1.superInterfaces().add(ast.newSimpleName(\"J\")); //$NON-NLS-1$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tx1.setSuperclass(N2);", "+\t\t\tx1.superInterfaces().add(N3);", "+\t\t\tx1.superInterfaces().add(N4);", "+\t\t} else {", "+\t\t\tx1.modifiers().add(MOD1);", "+\t\t\tx1.modifiers().add(MOD2);", "+\t\t\tx1.typeParameters().add(TP1);", "+\t\t\tx1.setSuperclassType(PT1);", "+\t\t\tx1.superInterfaceTypes().add(T1);", "+\t\t\tx1.superInterfaceTypes().add(T2); //$NON-NLS-1$", "+\t\t}", "-\t\tassertTrue(result.equals(\"[(TD\"+JD1S+N1S+N2S+N3S+\"[(nSJJnS)]\"+FD1S+FD2S+\"TD)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tif (ast.apiLevel() == AST.LEVEL_2_0) {", "+\t\t\tassertTrue(result.equals(\"[(TD\"+JD1S+N1S+N2S+N3S+N4S+FD1S+FD2S+\"TD)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t} else {", "+\t\t\tassertTrue(result.equals(\"[(TD\"+JD1S+MOD1S+MOD2S+N1S+TP1S+PT1S+T1S+T2S+FD1S+FD2S+\"TD)]\")); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69f9014184928f236fae58af14975bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "aefabc2c0393b4a4828896362e41d452de169159", "commitAfterChange": "86284f2db6c7ac41b63c1766c9b7b3a016d95a9a", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 222, "signatureBeforeChange": " \tpublic void testMethodDeclaration()", "signatureAfterChange": " \tpublic void testMethodDeclaration()", "diff": ["-\t\t\tassertTrue(result.equals(\"[(MD\"+this.JD1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"[(MD\"+this.JD1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\", result); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tassertTrue(result.equals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tassertEquals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.N1S+this.V1S+this.V2S+this.N2S+this.N3S+this.B1S+\"MD)]\", result); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tassertTrue(result.equals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.T3S+this.V1S+this.V2S+this.T4S+this.N3S+this.B1S+\"MD)]\")); //$NON-NLS-1$ //$NON-NLS-2$\t\t\t", "+\t\t\tassertEquals(\"[(MD\"+this.JD1S+this.MOD1S+this.MOD2S+this.TP1S+this.T1S+this.N1S+this.V1S+this.V2S+this.T3S+this.T4S+this.B1S+\"MD)]\", result); //$NON-NLS-1$ //$NON-NLS-2$\t\t\t"]}], "num": 36583}