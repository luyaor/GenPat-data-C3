{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6173c77f2f059fd5100db90deb77092", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014ec6c3dfe40fa743fef39f7a30492b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic IDOMNode findNode(IDOMCompilationUnit dom)", "signatureAfterChange": " \tpublic ASTNode findNode(CompilationUnit ast)", "diff": ["-    // TODO - JDOM - remove once model ported off of JDOM", "-\tpublic IDOMNode findNode(IDOMCompilationUnit dom) {", "-\t\tint type = getElementType();", "-\t\tif (type == IJavaElement.COMPILATION_UNIT || ", "-\t\t\ttype == IJavaElement.FIELD || ", "-\t\t\ttype == IJavaElement.IMPORT_DECLARATION || ", "-\t\t\ttype == IJavaElement.INITIALIZER || ", "-\t\t\ttype == IJavaElement.METHOD || ", "-\t\t\ttype == IJavaElement.PACKAGE_DECLARATION || ", "-\t\t\ttype == IJavaElement.TYPE) {", "-\t\t\tArrayList path = new ArrayList();", "-\t\t\tIJavaElement element = this;", "-\t\t\twhile (element != null && element.getElementType() != IJavaElement.COMPILATION_UNIT) {", "-\t\t\t\tif (element.getElementType() != IJavaElement.IMPORT_CONTAINER) {", "-\t\t\t\t\t// the DOM does not have import containers, so skip them", "-\t\t\t\t\tpath.add(0, element);", "-\t\t\t\t}", "-\t\t\t\telement = element.getParent();", "-\t\t\t}", "-\t\t\tif (path.size() == 0) {", "-\t\t\t\tif (equalsDOMNode(dom)) {", "-\t\t\t\t\treturn dom;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn ((JavaElement) path.get(0)).followPath(path, 0, dom.getFirstChild());", "-\t\t} else {", "-\t\t\treturn null;", "-\t\t}", "-\t}", "+\tpublic ASTNode findNode(CompilationUnit ast) {", "+\t\treturn null; // works only inside a compilation unit"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fde432d88545cd591b5b6d6136368212", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "76c9d02e981a720920f3a98e40e7da666cb7f2a1", "commitAfterChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public int nullStatus(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic int nullStatus(FlowInfo flowInfo)", "diff": ["-public int nullStatus(FlowInfo flowInfo) {", "-\tConstant cst = this.condition.optimizedBooleanConstant();", "-\tif (cst != Constant.NotAConstant) {", "-\t\tif (cst.booleanValue()) {", "-\t\t\treturn this.valueIfTrue.nullStatus(flowInfo);", "-\t\t}", "-\t\treturn this.valueIfFalse.nullStatus(flowInfo);", "+\tpublic int nullStatus(FlowInfo flowInfo) {", "+\t\treturn this.nullStatus;", "-\tint ifTrueNullStatus = this.valueIfTrue.nullStatus(flowInfo),", "-\t    ifFalseNullStatus = this.valueIfFalse.nullStatus(flowInfo);", "-\tif (ifTrueNullStatus == ifFalseNullStatus) {", "-\t\treturn ifTrueNullStatus;", "-\t}", "-\t// is there a chance of null (or non-null)? -> potentially null etc.", "-\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=133125", "-\tint status = 0;", "-\tint combinedStatus = ifTrueNullStatus|ifFalseNullStatus;", "-\tif ((combinedStatus & (FlowInfo.NULL|FlowInfo.POTENTIALLY_NULL)) != 0)", "-\t\tstatus |= FlowInfo.POTENTIALLY_NULL;", "-\tif ((combinedStatus & (FlowInfo.NON_NULL|FlowInfo.POTENTIALLY_NON_NULL)) != 0)", "-\t\tstatus |= FlowInfo.POTENTIALLY_NON_NULL;", "-\tif ((combinedStatus & (FlowInfo.UNKNOWN|FlowInfo.POTENTIALLY_UNKNOWN)) != 0)", "-\t\tstatus |= FlowInfo.POTENTIALLY_UNKNOWN;", "-\tif (status > 0)", "-\t\treturn status;", "-\treturn FlowInfo.UNKNOWN;", "-}"]}], "num": 6444}