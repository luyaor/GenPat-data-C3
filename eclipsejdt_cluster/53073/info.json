{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8d3602aaf24a09436772ba3c369fcf4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c4db426965d380b7448912717a1126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f04f8b342c7b71da1a56858ab790d24d761e7d9c", "commitAfterChange": "cb9adfe2a810fff7861c89a641a842e760d0d109", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic synchronized FileGenerationResult generateFileDuringBuild( \t\t\tIFile parentFile, \t\t\tIJavaProject javaProject, \t\t\tString typeName,  \t\t\tString contents,  \t\t\tIProgressMonitor progressMonitor, \t\t\tString charsetName )  \t\tthrows CoreException, UnsupportedEncodingException", "diff": ["-\t\t\t", "-\t\t\tIFile file = getIFileForTypeName( typeName );", "-\t\t\t//", "-\t\t\t// make sure GENERATED_SOURCE_FOLDER_NAME dir is on the cp if not already", "-\t\t\t// this dir will be created by getIFileForTypeName", "-\t\t\t//", "-\t\t\tIFolder folder = project.getFolder( GENERATED_SOURCE_FOLDER_NAME );", "-\t\t\tupdateProjectClasspath( (JavaProject)javaProject, folder, progressMonitor );", "+\t\t\tIFolder folder = ensureGeneratedSourceFolder( javaProject, progressMonitor );", "+\t\t\t", "+\t\t\tIFile file = getIFileForTypeName( typeName, javaProject, progressMonitor );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a6dcf133c4adf953898aae92487200", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "fa5043035008baa87658a861702929b4e6cc6033", "commitAfterChange": "1f110c3776a429c5c16a660065de0c3ffe5e4639", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, boolean create, IProgressMonitor progressMonitor) \t    throws CoreException", "signatureAfterChange": " \tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, IProgressMonitor progressMonitor) \t    throws CoreException", "diff": ["-\tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, boolean create, IProgressMonitor progressMonitor)", "+\tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, IProgressMonitor progressMonitor)", "-\t\tIFolder folder;", "-\t\tif ( create )", "-\t\t\tfolder = ensureGeneratedSourceFolder( javaProject, progressMonitor );", "-\t\telse", "-\t\t\tfolder = getGeneratedSourceFolder();", "-\t\t", "-\t\t//  create folders for the package parts", "-\t\tint i = 0;", "-\t\tfor ( ;i < parts.length - 1; i++ )", "-\t\t{", "+\t\tIFolder folder = getGeneratedSourceFolder();", "+\t\tfor ( int i = 0; i < parts.length - 1; i++ )", "-\t\t\tif ( create && !folder.exists() )", "-\t\t\t\tfolder.create( true, false, null );", "-\t\t}", "-\t", "-\t\tString fileName = parts[i] + \".java\"; //$NON-NLS-1$\t\t", "+\t\t", "+\t\t// the last part of the type name is the file name", "+\t\tString fileName = parts[parts.length - 1] + \".java\"; //$NON-NLS-1$\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d933dabd03f2079ddd44a057ff2777cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "e40a14518c878498ad39595017fa5c41fd3a84fd", "commitAfterChange": "0db36dd259a6320ea4c536f5dd076aa73d4d8836", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, IProgressMonitor progressMonitor ) \t    throws CoreException", "signatureAfterChange": " \tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, boolean create, IProgressMonitor progressMonitor) \t    throws CoreException", "diff": ["-\tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, IProgressMonitor progressMonitor )", "+\tprivate IFile getIFileForTypeName( String typeName, IJavaProject javaProject, boolean create, IProgressMonitor progressMonitor)", "-\t\tIFolder folder = ensureGeneratedSourceFolder( javaProject, progressMonitor );", "+\t\tIFolder folder;", "+\t\tif ( create )", "+\t\t\tfolder = ensureGeneratedSourceFolder( javaProject, progressMonitor );", "+\t\telse", "+\t\t\tfolder = getGeneratedSourceFolder();", "-\t\t\tif ( !folder.exists() )", "+\t\t\tif ( create && !folder.exists() )"]}], "num": 53073}