{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "404b7d061e414ffde074a79d160faf52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e562d7f6b8d92f1e8c5b6d55f80b2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private boolean hasBinaryDelta()", "signatureAfterChange": "  private boolean hasStructuralDelta()", "diff": ["-", "-private boolean hasBinaryDelta() {", "+private boolean hasStructuralDelta() {", "+\t// handle case when currentProject has only .class file folders and/or jar files... no source/output folders", "-\t\tIResource[] classFoldersAndJars = (IResource[]) binaryResources.get(currentProject);", "+\t\tClasspathLocation[] classFoldersAndJars = (ClasspathLocation[]) binaryLocationsPerProject.get(currentProject);", "-\t\t\t\tIResource binaryResource = classFoldersAndJars[i]; // either a .class file folder or a zip/jar file", "-\t\t\t\tif (binaryResource != null) {", "-\t\t\t\t\tIResourceDelta binaryDelta = delta.findMember(binaryResource.getProjectRelativePath());", "-\t\t\t\t\tif (binaryDelta != null) return true;", "+\t\t\t\tClasspathLocation classFolderOrJar = classFoldersAndJars[i]; // either a .class file folder or a zip/jar file", "+\t\t\t\tif (classFolderOrJar != null) {", "+\t\t\t\t\tIResourceDelta binaryDelta = delta.findMember(classFolderOrJar.getRelativePath());", "+\t\t\t\t\tif (binaryDelta != null && binaryDelta.getKind() != IResourceDelta.NO_CHANGE)", "+\t\t\t\t\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49891dc411c5c2a677f8e904695ee2b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "bc7116f109e564326b3e78f91d4a1f3d88927f34", "commitAfterChange": "64c77eef18b6427d5368be0eafa7e87c9e216dc9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \r \r private boolean hasBinaryDelta()", "signatureAfterChange": " \r \r private boolean hasBinaryDelta()", "diff": ["-\t\tfor (int i = 0, l = classFoldersAndJars.length; i < l; i++) {\r", "-\t\t\tIResource binaryResource = classFoldersAndJars[i]; // either a .class file folder or a zip/jar file\r", "-\t\t\tif (binaryResource != null) {\r", "-\t\t\t\tIResourceDelta binaryDelta = delta.findMember(binaryResource.getProjectRelativePath());\r", "-\t\t\t\tif (binaryDelta != null) return true;\r", "+\t\tif (classFoldersAndJars != null){\r", "+\t\t\tfor (int i = 0, l = classFoldersAndJars.length; i < l; i++) {\r", "+\t\t\t\tIResource binaryResource = classFoldersAndJars[i]; // either a .class file folder or a zip/jar file\r", "+\t\t\t\tif (binaryResource != null) {\r", "+\t\t\t\t\tIResourceDelta binaryDelta = delta.findMember(binaryResource.getProjectRelativePath());\r", "+\t\t\t\t\tif (binaryDelta != null) return true;\r", "+\t\t\t\t}\r"]}], "num": 49376}