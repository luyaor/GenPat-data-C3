{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07b1ffe3d3b52f79a6fc3cc13285642b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f6e18892afb82ea356833a146be76c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "a08b4c389632f0f20a50182ded68880addc0de18", "commitAfterChange": "5cb40e1ad24651b50221770b935dfa647cb41f4d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static List<String> _getServiceClassnamesFromJar(File jar)", "signatureAfterChange": "     private static List<String> _getServiceClassnamesFromJar(File jar)", "diff": ["-                rd = new BufferedReader(new InputStreamReader(is, \"UTF-8\")); //$NON-NLS-1$", "+                rd = new BufferedReader(new InputStreamReader(is, \"UTF-8\"));", "-                    final String[] tokens = line.split(\"\\\\s\", 2); //$NON-NLS-1$", "+                    final String[] tokens = line.split(\"\\\\s\", 2);", "-                            System.err.println(\"Found provider classname: \" + tokens[0]); //$NON-NLS-1$", "+                            System.err.println(\"Found provider classname: \" + tokens[0]);", "-                AptPlugin.log(e, \"\\tUnable to extract provider names from \\\"\" + jar); //$NON-NLS-1$", "+                System.err.println(\"\\tUnable to extract provider names from \\\"\" + jar + \"\\\"; skipping because of: \" + e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667d73ea930088191642d1d1df64fb04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     public static AnnotationMirror createAnnotationMirror(final Annotation annotation,\r                                                           final DeclarationImpl annotated,\r                                                           final ProcessorEnvImpl env)", "signatureAfterChange": "     public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,                                                           final DeclarationImpl annotated,                                                           final ProcessorEnvImpl env)", "diff": ["-     */\r", "-    public static AnnotationMirror createAnnotationMirror(final Annotation annotation,\r", "-                                                          final DeclarationImpl annotated,\r", "-                                                          final ProcessorEnvImpl env)\r", "-    {\r", "-        return new AnnotationMirrorImpl(annotation, annotated, env);\r", "-    }\r", "+     */", "+    public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,", "+                                                          final DeclarationImpl annotated,", "+                                                          final ProcessorEnvImpl env)", "+    {", "+        return new AnnotationMirrorImpl(annotation, annotated, env);\t\t", "+    }"]}], "num": 31143}