{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "219362496ac5f3a920dd18bcc55ac01f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05fe7bbeb1d7ec8736439436f21e1e90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/TypeConverter.java", "commitBeforeChange": "57f58e2a83bf12a567b63842cf84a5fc12572160", "commitAfterChange": "9674e3cb2b45f11c40bb76a8bdb3c8663d35e93e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static TypeDeclaration buildTypeDeclaration(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult, ProblemReporter problemReporter)", "signatureAfterChange": " \tpublic static TypeDeclaration buildTypeDeclaration(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult, ProblemReporter problemReporter)  throws JavaModelException", "diff": ["-\tpublic static TypeDeclaration buildTypeDeclaration(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult, ProblemReporter problemReporter)  {", "-\t\ttry {", "-\t\t\tchar[] packageName = type.getPackageFragment().getElementName().toCharArray();", "-\t\t\t", "-\t\t\tif (packageName != null && packageName.length > 0) { ", "-\t\t\t\tcompilationUnit.currentPackage = new ImportReference(CharOperation.splitOn('.', packageName), new long[]{0}, false);", "-\t\t\t}", "+\tpublic static TypeDeclaration buildTypeDeclaration(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult, ProblemReporter problemReporter)  throws JavaModelException {", "+\t\tchar[] packageName = type.getPackageFragment().getElementName().toCharArray();", "-\t\t\t/* convert type */", "-\t\t\tTypeDeclaration typeDeclaration = convert(type, null, null, compilationResult);", "-\t\t\t", "-\t\t\tIType alreadyComputedMember = type;", "-\t\t\tIType parent = type.getDeclaringType();", "-\t\t\tTypeDeclaration previousDeclaration = typeDeclaration;", "-\t\t\twhile(parent != null) {", "-\t\t\t\tTypeDeclaration declaration = convert(parent, alreadyComputedMember, (MemberTypeDeclaration)previousDeclaration, compilationResult);", "-\t\t\t\t", "-\t\t\t\talreadyComputedMember = parent;", "-\t\t\t\tpreviousDeclaration = declaration;", "-\t\t\t\tparent = parent.getDeclaringType();", "-\t\t\t}", "-\t\t\t", "-\t\t\tcompilationUnit.types = new TypeDeclaration[]{previousDeclaration};", "-", "-\t\t\treturn typeDeclaration;", "-\t\t} catch(JavaModelException e) {", "-\t\t\treturn null;", "+\t\tif (packageName != null && packageName.length > 0) { ", "+\t\t\tcompilationUnit.currentPackage = new ImportReference(CharOperation.splitOn('.', packageName), new long[]{0}, false);", "+\t", "+\t\t/* convert type */", "+\t\tTypeDeclaration typeDeclaration = convert(type, null, null, compilationResult);", "+\t\t", "+\t\tIType alreadyComputedMember = type;", "+\t\tIType parent = type.getDeclaringType();", "+\t\tTypeDeclaration previousDeclaration = typeDeclaration;", "+\t\twhile(parent != null) {", "+\t\t\tTypeDeclaration declaration = convert(parent, alreadyComputedMember, (MemberTypeDeclaration)previousDeclaration, compilationResult);", "+\t\t\t", "+\t\t\talreadyComputedMember = parent;", "+\t\t\tpreviousDeclaration = declaration;", "+\t\t\tparent = parent.getDeclaringType();", "+\t\t}", "+\t\t", "+\t\tcompilationUnit.types = new TypeDeclaration[]{previousDeclaration};", "+", "+\t\treturn typeDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d193ba2800b6cdaafe21e5af783ae9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "94923d3acfa7fb7266e9eb4199d83aab0f8b9fca", "commitAfterChange": "3300bd0a2560c278ec7d1063d301ade85a3f2d14", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected IDOMNode followPath(ArrayList path, int position, IDOMNode node)", "signatureAfterChange": " \tprotected IDOMNode followPath(ArrayList path, int position, IDOMNode node)", "diff": ["-\t\ttry {", "-\t\t\tif (equalsDOMNode(node)) {", "-\t\t\t\tif (position == (path.size() - 1)) {", "-\t\t\t\t\treturn node;", "-\t\t\t\t} else {", "-\t\t\t\t\tif (node.getFirstChild() != null) {", "-\t\t\t\t\t\tposition++;", "-\t\t\t\t\t\treturn ((JavaElement)path.get(position)).followPath(path, position, node.getFirstChild());", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else if (node.getNextNode() != null) {", "-\t\t\t\treturn followPath(path, position, node.getNextNode());", "+\t\tif (equalsDOMNode(node)) {", "+\t\t\tif (position == (path.size() - 1)) {", "+\t\t\t\treturn node;", "-\t\t\t\treturn null;", "+\t\t\t\tif (node.getFirstChild() != null) {", "+\t\t\t\t\tposition++;", "+\t\t\t\t\treturn ((JavaElement)path.get(position)).followPath(path, position, node.getFirstChild());", "+\t\t\t\t} else {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "-\t\t} catch (JavaModelException e) {", "+\t\t} else if (node.getNextNode() != null) {", "+\t\t\treturn followPath(path, position, node.getNextNode());", "+\t\t} else {", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83c8f3069d6347ec3d6aee7d0bfd7ae1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "86c239f2e66a4d986257b0e0acb4d18b2648df10", "commitAfterChange": "0660c8d5b36b733c21ef1069dd1616322b9b5c53", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private char[] getQualifiedName()", "signatureAfterChange": " private char[] getQualifiedName()", "diff": ["-\t\t\ttry {", "-\t\t\t\treturn ((ClassFile) this.openable).getType().getFullyQualifiedName('.').toCharArray();", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\treturn null;", "-\t\t\t}", "+\t\t\treturn ((ClassFile) this.openable).getType().getFullyQualifiedName('.').toCharArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8780a030f1fb1a3517e2b499c40feb05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "94923d3acfa7fb7266e9eb4199d83aab0f8b9fca", "commitAfterChange": "3300bd0a2560c278ec7d1063d301ade85a3f2d14", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public IType getSuperclass(IType type)", "signatureAfterChange": " public IType getSuperclass(IType type)", "diff": ["-\ttry {", "-\t\tif (this.isInterface(type)) {", "-\t\t\treturn null;", "-\t\t}", "-\t\treturn (IType) this.classToSuperclass.get(type);", "-", "-\t} catch (JavaModelException npe) {", "+\tif (this.isInterface(type)) {", "+\treturn (IType) this.classToSuperclass.get(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ea6dd9a2a227d62bddc453702b51f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "4a0d3f43b00b98cd9b9910b76cc59ad213b24c41", "commitAfterChange": "b52526c4f9ea8f8d773a3ff82b8dce78d1d6eaf6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      \tpublic PackageDeclaration getPackage(String name)", "signatureAfterChange": "      \tpublic PackageDeclaration getPackage(String name)", "diff": ["-\t\t\ttry {", "-\t\t\t\ttype = classFile.getType();", "-\t\t\t}", "-\t\t\tcatch (JavaModelException e) {}", "+\t\t\ttype = classFile.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b0e1731b5b7eeadfadc95f6c27fc21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "94923d3acfa7fb7266e9eb4199d83aab0f8b9fca", "commitAfterChange": "3300bd0a2560c278ec7d1063d301ade85a3f2d14", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic IDOMNode findNode(IDOMCompilationUnit dom)", "signatureAfterChange": " \tpublic IDOMNode findNode(IDOMCompilationUnit dom)", "diff": ["-\t\t\t\ttry {", "-\t\t\t\t\tif (equalsDOMNode(dom)) {", "-\t\t\t\t\t\treturn dom;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null;", "-\t\t\t\t\t}", "-\t\t\t\t} catch(JavaModelException e) {", "+\t\t\t\tif (equalsDOMNode(dom)) {", "+\t\t\t\t\treturn dom;", "+\t\t\t\t} else {"]}], "num": 6253}