{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebfcbe0f27184571e19169a617946b7b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "020d9975aeffc72b938850d406fdea35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "signatureAfterChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "diff": ["+\t} finally {", "-\t} finally {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a58fd097ece4a28356f2a9dc89fd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "c12d4a9031232b6c069d1f18e8e1215a08b9d778", "commitAfterChange": "de3c8c046c7e3f648e0031ed114ca639580d26d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t} else \tif ((metaTagBits & TagBits.AnnotationForType) != 0) ", "-\t\t\t\t\t\t\t\tbreak checkTargetCompatibility;", "+\t\t\t\t\t\t} ", "+\t\t\t\t\t\tif ((metaTagBits & TagBits.AnnotationForType) != 0) ", "+\t\t\t\t\t\t\tbreak checkTargetCompatibility;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0914bed400adbd9a3a33b304e273b9a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "653b549b2ec915800fe34bbb2ab9809b71ca66a5", "commitAfterChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tsuper.checkNPE(scope, flowContext, flowInfo);", "-\tif ((nullStatus(flowInfo) & FlowInfo.POTENTIALLY_NULL) != 0)", "+\tif ((nullStatus(flowInfo) & FlowInfo.POTENTIALLY_NULL) != 0) // note that flowInfo is not used inside nullStatus(..)", "+\telse", "+\t\tsuper.checkNPE(scope, flowContext, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d395d7ea4f0a4103f5a4bc9f55ec0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b9b3f6eb89afdba4e3c5afffb4e19fe2c2403500", "commitAfterChange": "1b9f72549c0f4a9738e1600d1d1680441854347a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["-\t\t\t\t\t\t\t\t\t\tthis.state.rootsAreStale = true;", "+\t\t\t\t\t\t\t\t\tthis.state.rootsAreStale = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aad3c014b657df804288b8d3ecf16b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public OutputStream getOutputStream() throws TargetException", "signatureAfterChange": " public OutputStream getOutputStream() throws TargetException", "diff": ["-\telse", "-\t\treturn this.process.getOutputStream();", "+\treturn this.process.getOutputStream();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d73b1aa56aa9d3df49636595a14f928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "commitAfterChange": "0cdfa4a20d7efcfc7530ed5117682b5beffbec92", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 208, "signatureBeforeChange": " public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["-\t// initialized to 1 to take into account this  immediately", "+\t// initialized to 1 to take into account this immediately", "-\t\t} else if (declaringClass.isEnum()) {", "+\t\t}", "+\t\tif (declaringClass.isEnum()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0edaa0fd51df2421f85175657636d150", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/EnvUtil.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     static void updateProblemLength(List<APTProblem> problems, CompilationUnit astUnit)", "signatureAfterChange": "     static void updateProblemLength(List<APTProblem> problems, CompilationUnit astUnit)", "diff": ["+    \tint[] classNameRange = null;", "-    \t\tint[] classNameRange = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f407b517858875bf6729d3f6cc9f5d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": " \t \tpublic String toString()", "diff": ["-\t\t\t+referenceContext.binding.toString();", "-\t\telse", "-\t\t\treturn \"--- Class Scope ---\\n\\n Binding not initialized\" ; //$NON-NLS-1$", "+\t\t\t\t\t\t\t+ referenceContext.binding.toString();", "+\t\treturn \"--- Class Scope ---\\n\\n Binding not initialized\" ; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9760ac9ac012e556c77c284c57e792", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void recordContinueFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordContinueFrom(FlowInfo flowInfo)", "diff": ["+\t\tif (!flowInfo.isReachable()) return;", "-\t\t\t// ignore if not really reachable (1FKEKRP)", "-\t\t\tif (!flowInfo.isReachable())", "-\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc66ae6b49e6d4eae887ed5a2a31097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tprivate void createAST(ICompilationUnit unit, int astLevel) throws JavaModelException", "signatureAfterChange": " \tprivate void createAST(ICompilationUnit unit, int astLevel) throws JavaModelException", "diff": ["-\t\t", "-\t\t// Clean memory", "-\t\trunGc();", "-\t\t", "+", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "108aef1892a6bc8d90cd743c4a0d63c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tmonitor.beginTask(Messages.bind(Messages.importRewrite_processDescription), 2);", "+\t\t\tmonitor.beginTask(Messages.bind(Messages.importRewrite_processDescription), 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c7eafab96ec0e4e0eee4add261bc5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169d9c19228a3cc17d809047fc9d9cdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "74958747d6dfa7074d7be26e7090f615c8b5cb63", "commitAfterChange": "2d759a713e644c7b941823a3d4e9e44e73ef6b04", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public char[] shortReadableName()", "signatureAfterChange": "  public char[] shortReadableName()", "diff": ["-\telse", "-\t\treturn sourceName;", "+\treturn sourceName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1862f1d7ffff61b629f084110b9b0531", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findDirectMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\t\t\t? memberType.canBeSeenBy(getCurrentPackage())", "-\t\t\t\t: memberType.canBeSeenBy(enclosingType, enclosingSourceType))", "+\t\t\t\t\t? memberType.canBeSeenBy(getCurrentPackage())", "+\t\t\t\t\t: memberType.canBeSeenBy(enclosingType, enclosingSourceType))", "-\t\t\telse", "-\t\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);", "+\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19791da3625a223887e508618b7f519f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d22a6e0ea9c854fe3fd90788b01c1b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 32, "signatureBeforeChange": " protected boolean isOnClasspath()", "signatureAfterChange": " protected boolean isOnClasspath()", "diff": ["-", "-\tIJavaProject project = this.getJavaProject();", "-", "-", "+\t\tIJavaProject project = this.getJavaProject();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b2c2b4e3ee894337422e36c68494e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "commitAfterChange": "a6672627189e3721a2c066ce225fd09afe979f63", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\t\tacceptChildren(visitor, this.extraDimensionInfos);", "+\t\t\t\tacceptChildren(visitor, this.extraDimensionInfos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b450945373e8de3bf03a5990030c15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tprivate void runAstCreation(IJavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void runAstCreation(IJavaProject javaProject) throws JavaModelException", "diff": ["-\t\t", "-\t\t// Clean memory", "-\t\trunGc();", "-\t\t", "+", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2765ecf5676960ecf9197072ec383f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "39787fb323b3f06bf37a085118b28347f6a17b39", "commitAfterChange": "0cc61e9905c3f603dab789f6a44abfa63094212c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tthis.initStateIndex =", "-\t\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);", "+\tthis.initStateIndex =", "+\t\tcurrentScope.methodScope().recordInitializationStates(flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d777e9cc3128e4b56b5d272297ccde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "7de12fcc4142eb90ed2bed2f3f3346145c2a87fc", "commitAfterChange": "bd3f044e1dea55ab9b1dfed3ef25e6b3e161dec9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+    \tif (lhsType != null && !lhsType.isRawType()) // RawType::m and RawType::new are not exact method references", "+    \t\tthis.exactMethodBinding = isMethodReference() ? scope.getExactMethod(lhsType, this.selector, this) : scope.getExactConstructor(lhsType, this);", "+", "-    \t\tif (lhsType != null && !lhsType.isRawType()) // RawType::m and RawType::new are not exact method references", "-    \t\t\tthis.exactMethodBinding = isMethodReference() ? scope.getExactMethod(lhsType, this.selector, this) : scope.getExactConstructor(lhsType, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a363f93f7ab0de5069ab72bae6a4bb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "9f642125aef90c77462c83f448e820287bb570f7", "commitAfterChange": "4cdefe233d92943ef24306ac575ee21d8a052e72", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tprotected void updateProjectReferences(String[] oldRequired, String[] newRequired)", "signatureAfterChange": "\r \tprotected void updateProjectReferences(String[] oldRequired, String[] newRequired)", "diff": ["+\t\t\t\t\treturn;\r", "-\t\t\t\treturn;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba40be2ed5a125a6040aa27d1b6515d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "9c5c069c4ddd977815302e00ff7a4760365b1a17", "commitAfterChange": "2070676b1e20c45846e614809eff55257373d539", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static int computeNullProblemSeverity(long requiredBits, long providedBits, int nullStatus)", "signatureAfterChange": "  \tprivate static int computeNullProblemSeverity(long requiredBits, long providedBits, int nullStatus)", "diff": ["+\t\t\tif (requiredBits == TagBits.AnnotationNonNull && nullStatus == FlowInfo.NON_NULL) {", "+\t\t\t\treturn 0; // OK by flow analysis", "+\t\t\t}", "-\t\t\t\tif (requiredBits == TagBits.AnnotationNonNull && nullStatus == FlowInfo.NON_NULL) {", "-\t\t\t\t\treturn 0; // OK by flow analysis", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6d49238a1237fc5f86ad55c8fc2d7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "e73fec9ebc1e2bb3cd00d457b0e3583658fef4f1", "commitAfterChange": "fccc3c9fd12b95c908b1566d2444bf312ceefff2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void shutdown()", "signatureAfterChange": " \tpublic void shutdown()", "diff": ["-\t\tthis.processingThread = null; // mark the job manager as shutting down so that the thread will stop by itself", "+\t\t\t\t\tthis.processingThread = null; // mark the job manager as shutting down so that the thread will stop by itself", "+\t\t\t\t// in case processing thread is handling a job"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "330c7bc75bdfa4fb8ec8424d94eae05e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "2288340880d5b063a301dedf4f6fbb2588abbc58", "commitAfterChange": "2f38b76f2c6b366bcca95ee44591656cca072e8d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, TypeBinding providedSubstitute, int nullStatus, CheckMode mode)", "signatureAfterChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, TypeBinding providedSubstitute, int nullStatus, CheckMode mode)", "diff": ["+\t\tif (!requiredType.enterRecursiveFunction())", "+\t\t\treturn NullAnnotationMatching.NULL_ANNOTATIONS_OK;", "-\t\t\tif (!requiredType.enterRecursiveFunction())", "-\t\t\t\treturn NullAnnotationMatching.NULL_ANNOTATIONS_OK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382da9a6856105f28d557359e2a7687b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "3ed504d6c06a625889aa0edc452a9c28987bfba5", "commitAfterChange": "832a3611a78cac4a94a3a05c5dd601ccfc7de769", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public boolean exists()", "signatureAfterChange": "\r public boolean exists()", "diff": ["+\t\r", "-\t\treturn false;\r", "+\treturn false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382fe507a8c93d397a3e1e8683d82c27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ParameterAnnotation.java", "commitBeforeChange": "cf143a6a7ccd7553042fd4fda437966abe78a9e6", "commitAfterChange": "31d3be0ab92dab378331be6840b8f198d91f8e2d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ParameterAnnotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \tpublic ParameterAnnotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\tthis.readOffset = 2;", "-\t\t\tthis.readOffset = 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b66a6f90266320efdc12d4cfbc847f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba296f619cfd1fa3343459843506fe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  boolean isPackage(char[][] compoundName, char[] name)", "signatureAfterChange": "  boolean isPackage(char[][] compoundName, char[] name)", "diff": ["-\telse", "-\t\treturn nameEnvironment.isPackage(compoundName, name);", "+\treturn nameEnvironment.isPackage(compoundName, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c54b35f07bc855f2ac9801de69b8690", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "fe6848300377e2f320c70d2b17e483820c74fa24", "commitAfterChange": "309be04a155363e9f398875d6734d13ff5334b6c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["+\t\t\treferenceContext.superclass.resolvedType = superclass; // hold onto the problem type", "-\t\t\t\treferenceContext.superclass.resolvedType = superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8439ade6964bd791a50b508830226f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0b7ff78692342ed66f3a07e07fcd0a8a72247fee", "commitAfterChange": "076e76a1f851b4e6de516651f693060a8f931e1c", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "diff": ["+\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f502bcbed41c08650a680593d7f6d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "signatureAfterChange": "  private void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "diff": ["+\t\t// if a problem got reported during code gen, then trigger problem method creation", "+\t\tif (this.ignoreFurtherInvestigation) {", "+\t\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "+\t\t}", "-", "-\t// if a problem got reported during code gen, then trigger problem method creation", "-\tif (this.ignoreFurtherInvestigation) {", "-\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ff1fa0d2ea2308b17a6b000f4cb32a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "90515f177fc66ff94534d5266cc647dd7b47561f", "commitAfterChange": "d48c25cb976d99917f58b366198a77010dd2d678", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public String getText(int offset, int length)", "signatureAfterChange": " public String getText(int offset, int length)", "diff": ["-\tif (this.contents == null)", "-\t\treturn \"\"; //$NON-NLS-1$", "+\t\tif (this.contents == null) return \"\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420eff45e0382316ce41ce0aea9e83f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "commitAfterChange": "e0b15aa87738be7e3493f2bf3916224f01c96127", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \tpublic char[][] getImports(BinaryType type)", "signatureAfterChange": "\r \tpublic char[][] getImports(BinaryType type)", "diff": ["+\t\t\tthis.importsTable.put(type, imports);\r", "-\t\tthis.importsTable.put(type, imports);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44698591aa0aeee054b0c1fffdb085b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "6fb311673d1501ca166502c77ddfedc4e1f01c4f", "commitAfterChange": "51a358cb1826956218a0838475a109e014b95398", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t// allow new List<?>[5] - only check for generic array when no initializer, since also checked inside initializer resolution", "+\t\t\tif (referenceType.isBoundParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {", "+\t\t\t    scope.problemReporter().illegalGenericArray(referenceType, this);", "+\t\t\t}", "-\t\t\t}", "-\t\t\t// allow new List<?>[5]", "-\t\t\tif (referenceType.isBoundParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {", "-\t\t\t    scope.problemReporter().illegalGenericArray(referenceType, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45dcd94e27f33bb4310b66394fa3bb5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c7cc8ffcae60810fc57530ea7daeb89a3d8f6e05", "commitAfterChange": "35d13a002cbebf51a0916a28b6cd1b216b279372", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["-\t\t\tthis.javadoc = null;", "+\t\tthis.javadoc = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485735f27c48e89277ee47edb8b8d1cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "bf4b5cbb0c17d86f379f63c2109dde3d8c4c0801", "commitAfterChange": "bd673e70d2edbc0e521113de6223a36ce39b9f38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void setDepth(int depth)", "signatureAfterChange": " public void setDepth(int depth)", "diff": ["+\tbits &= ~DepthMASK; // flush previous depth if any", "-\t\tbits &= ~DepthMASK; // flush previous depth if any"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497dba58fbd6865f490700c5b211d038", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "251f3988fb634f79e69ffe8293ca61acdf40186d", "commitAfterChange": "375084d69721cba73e4cfe37f3c112acb527893d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "diff": ["+\t\tif (classPathIsIncorrect)\r", "+\t\t\tthrow new IncompleteClassPathException();\r", "-\tif (classPathIsIncorrect)\r", "-\t\tthrow new IncompleteClassPathException();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c0031cd40a1b91e2d153b7ec5eb529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\t\t\t? memberType.canBeSeenBy(currentPackage)", "-\t\t\t\t: memberType.canBeSeenBy(enclosingType, enclosingSourceType))", "+\t\t\t\t\t? memberType.canBeSeenBy(currentPackage)", "+\t\t\t\t\t: memberType.canBeSeenBy(enclosingType, enclosingSourceType))", "-\t\t\telse", "-\t\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);", "+\t\t\treturn new ProblemReferenceBinding(typeName, memberType, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c1dd70749992fea4c86830e84172b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "820e796a655cc430ae4ae3cd649830ad2aa11511", "commitAfterChange": "15e62f7752b5ba1cd51b3fafb5a3b0c9d1ba5891", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\t\tsig.append('^');", "+\t\t\tsig.append('^');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a8397223246ef40b24050f9b108c810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionProposal.java", "commitBeforeChange": "bea3c4ba333ddbbf907b34991106e5d28c4161bc", "commitAfterChange": "dfe44f42fcdc5348e237b7834117df41d8ffd082", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "signatureAfterChange": " \t \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "diff": ["-\t\t\tIMethod method = findMethod(type, selector, paramTypeNames);", "+\t\t\t\tIMethod method = findMethod(type, selector, paramTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a93518b098548827075fd2cc7a16962", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "489bd6f4fff60ffd577633f636fc992ac578a001", "commitAfterChange": "a9a6659f6e9383ba6c2ef999e9385837a38140d0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "diff": ["+\t\tif (this.makeOutputFolderConsistent && md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "+\t\t\t// even a project which acts as its own source folder can have an independent/nested output folder", "+\t\t\tvisited.add(md.binaryFolder);", "+\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "+\t\t\tif (binaryDelta != null) {", "+\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "+\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "+\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "+\t\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "-\t\t\tif (this.makeOutputFolderConsistent && md.hasIndependentOutputFolder && !visited.contains(md.binaryFolder)) {", "-\t\t\t\tvisited.add(md.binaryFolder);", "-\t\t\t\tIResourceDelta binaryDelta = delta.findMember(md.binaryFolder.getProjectRelativePath());", "-\t\t\t\tif (binaryDelta != null) {", "-\t\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "-\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();", "-\t\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "-\t\t\t\t\t\tif (!checkForClassFileChanges(children[j], md, segmentCount))", "-\t\t\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4daedc2dbfcc509587de8ed3da7dc1de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "9bca6c64d5f06e09288bbe705f432c80b6768f11", "commitAfterChange": "1f165d30a1b65384e3ec245ff2ecd9c2f700ae13", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "signatureAfterChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFilesWithMissingType)", "diff": ["-\t\t\t\t\t\tprocessor.process();", "-\t\t\t\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, unitsForFilesWithMissingType, processorEnv);", "+\t\t\t\t\t\tprocessor.process();\t\t\t\t\t\t", "+\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, unitsForFilesWithMissingType, processorEnv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd708427b9b39907dac473902cc73e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public final int sourceStart()", "signatureAfterChange": " public final int sourceStart()", "diff": ["-\telse", "-\t\treturn method.sourceStart;", "+\treturn method.sourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52a15c5aecbbd598fbd33b5479a912e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "f6b4fd201225783143c8aa7d615f417f01e17763", "commitAfterChange": "99dc83c87acb33ba34a918de9dea75beba3da624", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic ITypeBinding getDeclaringClass()", "signatureAfterChange": " \tpublic ITypeBinding getDeclaringClass()", "diff": ["-\t\t\tFieldBinding fieldBinding = (FieldBinding) this.binding;", "+\t\t\t\tFieldBinding fieldBinding = (FieldBinding) this.binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c501e699d95b3c84342b03a3544fe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b525a5af31d09324ed6265e4cdd273", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "055380e1ecf4ba956a2ed12d0bd6afd30fa4bb0d", "commitAfterChange": "5633218f57a8f96a181a737ead7a991d28ce84d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "diff": ["+", "+\t\tif (!flowInfo.isReachable()) return;", "-\t\t\t// ignore if not really reachable (1FKEKRP)", "-\t\t\tif (!flowInfo.isReachable())", "-\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "583835888e45c6fddcdc2b32c732741e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public final int sourceEnd()", "signatureAfterChange": " public final int sourceEnd()", "diff": ["-\telse", "-\t\treturn method.sourceEnd;", "+\treturn method.sourceEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "586db5b1b1905413545756dd9e7388d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/ByteConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String stringValue()", "signatureAfterChange": " public String stringValue()", "diff": ["-\tif (s == null)", "-\t\treturn \"null\"; //$NON-NLS-1$", "-\telse", "-\t\treturn s;", "+\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a20698513535d1934387c2701d4e492", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0b7ff78692342ed66f3a07e07fcd0a8a72247fee", "commitAfterChange": "076e76a1f851b4e6de516651f693060a8f931e1c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "signatureAfterChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "diff": ["+\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-\t\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "-\t\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a546343d08bb62bfbb604a158b37fa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "90515f177fc66ff94534d5266cc647dd7b47561f", "commitAfterChange": "d48c25cb976d99917f58b366198a77010dd2d678", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public char[] getCharacters()", "signatureAfterChange": " public char[] getCharacters()", "diff": ["-\tif (this.contents == null) return null;", "+\t\tif (this.contents == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aee22c536ee5337f4794431eff35013", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  TypeBinding getTypeFromSignature(char[] signature, int start, int end)", "signatureAfterChange": "  TypeBinding getTypeFromSignature(char[] signature, int start, int end)", "diff": ["-\telse", "-\t\treturn createArrayType(binding, dimension);", "+\treturn createArrayType(binding, dimension);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e154b6aba3737926e3d6af30b58b3b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9cf9342bfccaf3b180016b3038d3a5505b18513b", "commitAfterChange": "5748429ca94879804fb33f7c763ccce1c242dd1a", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \t \tpublic synchronized void variablePut(String variableName, IPath variablePath)", "signatureAfterChange": " \t \tpublic synchronized void variablePut(String variableName, IPath variablePath)", "diff": ["-\t\t\t\tthis.previousSessionVariables.remove(variableName);", "+\t\t\t// discard obsoleted information about previous session", "+\t\t\tthis.previousSessionVariables.remove(variableName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629c5de96e4fc4f93ba9403b370a9817", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e03a52ddf48f004f14025a92fbc8d65619260518", "commitAfterChange": "d82ae848a9c4d7b35f614d484418e3b413534446", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, LinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager)", "signatureAfterChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, LinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager)", "diff": ["+\t\t\tresolvedEntries.add(resolvedEntry);", "-\t\tresolvedEntries.add(resolvedEntry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d65d92ddd72ba2f516e566ec3b8aef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "90446deb5ff00e2c453829fc18ea8a59d5a8861c", "commitAfterChange": "ef64dfb1a9bd58abd3ed7efdfca1e31c5bb17269", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tprivate void completionOnReferenceExpressionName(ASTNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": " \tprivate void completionOnReferenceExpressionName(ASTNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\t\tsetSourceAndTokenRange(referenceExpression.nameSourceStart, referenceExpression.sourceEnd);", "-\t\t\t\t\tsetSourceAndTokenRange(referenceExpression.nameSourceStart, referenceExpression.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63334bf9e213d8a788a603d659b1fdbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void waitForTermination() throws InterruptedException", "signatureAfterChange": " public void waitForTermination() throws InterruptedException", "diff": ["-\tif (this.process == null)", "-\t\treturn;", "-\telse", "-\t\tthis.process.waitFor();", "+\tif (this.process == null) return;", "+\tthis.process.waitFor();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63601eb458be4a98cbab51a7d2038b88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "7406eea159bee28f896448dc2cf4a76159b48c18", "commitAfterChange": "00d42ea07db14d951ddd887ae015a4771edefcfb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic static Hashtable getOptions()", "signatureAfterChange": " \tpublic static Hashtable getOptions()", "diff": ["-\t\t\t\tif (propertyName.startsWith(JavaCore.PLUGIN_ID + \".formatter\")) {//$NON-NLS-1$", "+\t\t\t\telse if (propertyName.startsWith(JavaCore.PLUGIN_ID + \".formatter\")) {//$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63a8d3cc5e7ba85251edd12a0790f765", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "03be029557a7489c8389c5dd310eacd03d179472", "commitAfterChange": "4cb2c570d3aefe494107c2340c1d84687aeb83ac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate int computePriority(IProblem problem)", "signatureAfterChange": "  \tprivate int computePriority(IProblem problem)", "diff": ["+\t\t\tif (firstErrors.contains(problem)){ // if context is null, firstErrors is null too", "+\t\t\t  priority += P_FIRST_ERROR;", "+\t\t    }", "-\t\t}", "-\t\tif (firstErrors.contains(problem)){", "-\t\t\tpriority += P_FIRST_ERROR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6418fb8f47ba767a3e38b779f3717728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "28ef106634e5315866f01882f217360d1ad4c791", "commitAfterChange": "53ef1901eb9652b60d01f901557a99f6b7923647", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean parseReference() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseReference() throws InvalidInputException", "diff": ["+\t\t\t\t\t\tconsumeToken();", "-\t\t\t\t\t\t\tconsumeToken();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647a649d5b27d3ce991864341d1bddcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6501ea468606c6724e4344eb21380b73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6716eb9f2ccc19e839275fb6349e3c64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CharConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic String stringValue()", "signatureAfterChange": " \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f84b16f3eeca31b98dcf76ca8ad3cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "-", "+\tthis.resetPendingModifiers();", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693822c2f82e87789546f9e77e789bd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "76f5a1c536420ff37c3b13a645ebec88bfc3c494", "commitAfterChange": "902ad81671a3859ccd7100f43d06275b71901e88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, IWorkingCopy[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, IWorkingCopy[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\ttry {", "-\t\t\t\tthis.hierarchyResolver = ", "-\t\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, project.getOptions(true), this, new DefaultProblemFactory());", "-\t\t\t\tif (focusType != null) {", "-\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "-\t\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "-\t\t\t\t\tif (focusTypeBinding == null ", "-\t\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "-\t\t\t\t\t\t// focus type is not visible in this project: no need to go further", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.hierarchyResolver = ", "+\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, project.getOptions(true), this, new DefaultProblemFactory());", "+\t\t\tif (focusType != null) {", "+\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "+\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t\tif (focusTypeBinding == null ", "+\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "+\t\t\t\t\t// focus type is not visible in this project: no need to go further", "+\t\t\t\t\treturn;", "-\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "-\t\t\t} finally {", "-\t\t\t\tif (inProjectOfFocusType) {", "-\t\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);", "-\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "+\t\t} finally {", "+\t\t\tif (inProjectOfFocusType) {", "+\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a8d2521e329e9eaf102c708ab93c69c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AnnotationComponentValue.java", "commitBeforeChange": "6c3fc121212f004dea29e067195615a3bc83f924", "commitAfterChange": "92836a94f02d2e37c4ddf545dee8a004bc8086da", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic AnnotationComponentValue( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \t \tpublic AnnotationComponentValue( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\t\t\tthis.readOffset += 2;", "-\t\t\t\t\tthis.readOffset += 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf2950d97087391f9500e28e423250d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "28ef106634e5315866f01882f217360d1ad4c791", "commitAfterChange": "53ef1901eb9652b60d01f901557a99f6b7923647", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void pushText(int start, int end)", "signatureAfterChange": " \tprotected void pushText(int start, int end)", "diff": ["+\t\t\t\t\t\t\tconsumeToken();", "-\t\t\t\t\t\t\t\tconsumeToken();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db026583450ed61e7f6106e201fd378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f844474a385b33f03b68f4d024f287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "20eaedd8038780a05a557c39b442f2485f010803", "commitAfterChange": "1920517d934718cca4ae649c790dd80e9c368b4b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "signatureAfterChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\t\tSourceTypeBinding sourceType =", "-\t\t\tthis.scope.outerMostMethodScope().enclosingSourceType();", "+\t\t\tSourceTypeBinding sourceType =", "+\t\t\t\tthis.scope.outerMostMethodScope().enclosingSourceType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719dacea05f241677d24dfb2822f610c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public ReferenceBinding getType(char[][] compoundName)", "signatureAfterChange": "  public ReferenceBinding getType(char[][] compoundName)", "diff": ["-\telse", "-\t\treturn referenceBinding;", "+\treturn referenceBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "732af40bc0749b354b78bc823fdfb778", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/BooleanConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String stringValue()", "signatureAfterChange": "  \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736851e1c13f2f4414b2596c6942351b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "a51943d0228da400e8233c982cde27c5ce3e5712", "commitAfterChange": "23985b5c7d2189bc589e58503c35494770f87c38", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic static void fixTaskTags(Map defaultOptionsMap)", "signatureAfterChange": " \tpublic static void fixTaskTags(Map defaultOptionsMap)", "diff": ["-\t\t\t\treturn;", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7429476d0bc97b8c7650fa48b00e1e30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t// make the user qualify the field, likely wants the first inherited field (javac generates an ambiguous error instead)", "-\t\t\t\t\t\t\t\t\treturn new ProblemFieldBinding(", "-\t\t\t\t\t\t\t\t\t\tfieldBinding.declaringClass,", "-\t\t\t\t\t\t\t\t\t\tname,", "-\t\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t// make the user qualify the field, likely wants the first inherited field (javac generates an ambiguous error instead)", "+\t\t\t\t\t\t\t\treturn new ProblemFieldBinding(", "+\t\t\t\t\t\t\t\t\tfieldBinding.declaringClass,", "+\t\t\t\t\t\t\t\t\tname,", "+\t\t\t\t\t\t\t\t\tInheritedNameHidesEnclosingName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77af2492384b48e63e7a489225d8004a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CommentsPreparator.java", "commitBeforeChange": "fea7e7903d2fd77d5b81ad1723f8baaaf9ef9934", "commitAfterChange": "8e16662f0ac598c8bd5851163f51568635e8acf6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void handleBreakBeforeTag(int start, int end, boolean isOpeningTag)", "signatureAfterChange": "  \tprivate void handleBreakBeforeTag(int start, int end, boolean isOpeningTag)", "diff": ["+\t\tfirstPartToken.setWrapPolicy(null);", "-\t\t\tfirstPartToken.setWrapPolicy(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78464f465ec1c65d71d5dea25caa25f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0b7ff78692342ed66f3a07e07fcd0a8a72247fee", "commitAfterChange": "076e76a1f851b4e6de516651f693060a8f931e1c", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "diff": ["+\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "792a31c92cdd24fe7d18d1f564e2d747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NameReference.java", "commitBeforeChange": "bf4b5cbb0c17d86f379f63c2109dde3d8c4c0801", "commitAfterChange": "bd673e70d2edbc0e521113de6223a36ce39b9f38", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void setDepth(int depth)", "signatureAfterChange": " public void setDepth(int depth)", "diff": ["+\tbits &= ~DepthMASK; // flush previous depth if any\t\t\t", "-\t\tbits &= ~DepthMASK; // flush previous depth if any\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b09eabe9c284d96c448f6c12fa01922", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b2bb6d6d694d6d67ce24f912ef23269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "99aa173e65435610dfe4b542988d65ff8c2f55f2", "commitAfterChange": "801ef592cf9b7a818547dfa578352ecbaa18aa19", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": " public void outputClassFiles(CompilationResult unitResult)", "diff": ["+\t\t\t\t\tthis.exportedClassFilesCounter++;", "-\t\t\t\tthis.exportedClassFilesCounter++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b43ba08d8a59c542f3f02deb9cfe279", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "2260718500867bd30cd2e4c137328e441eae46e6", "commitAfterChange": "e718fd515465b18aa2019581a8e3eb883a75da4d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["+\t\t\t\t\treturn matchingMethod;", "-\t\t\t\treturn matchingMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c4c2d3e3342d7bc4201b688b18ea788", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public char[][] getMatchCategories()", "signatureAfterChange": " public char[][] getMatchCategories()", "diff": ["-\telse", "-\t\tif (this.findDeclarations)", "-\t\t\treturn new char[][] {METHOD_DECL};", "-\t\telse", "-\t\t\treturn CharOperation.NO_CHAR_CHAR;", "+\telse if (this.findDeclarations)", "+\t\treturn new char[][] {METHOD_DECL};", "+\treturn CharOperation.NO_CHAR_CHAR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c58e6ad528b358ab3117eea9ed4e2f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d678fd59b617350898ac29216819474", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "commitAfterChange": "3f513a524299babe8e8187ba844f5588920937db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public char[][] getMatchCategories()", "signatureAfterChange": " public char[][] getMatchCategories()", "diff": ["-\telse", "-\t\tif (this.findDeclarations)", "-\t\t\treturn new char[][] {CONSTRUCTOR_DECL};", "-\t\telse", "-\t\t\treturn CharOperation.NO_CHAR_CHAR;", "+\telse if (this.findDeclarations)", "+\t\treturn new char[][] {CONSTRUCTOR_DECL};", "+\treturn CharOperation.NO_CHAR_CHAR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df672f1c52eb47818342d6d2da468f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "33750e59fffefe57f65dc1cbda10b6dd10128106", "commitAfterChange": "4de0afbdfacb5e6a73acacf38df6b15ebd7071ff", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void testSearchMethod() throws CoreException", "signatureAfterChange": " \tpublic void testSearchMethod() throws CoreException", "diff": ["-", "+\t", "-", "+\t", "-", "-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t", "+\t\t\t// clean before test", "+\t\t\trunGc();", "+\t", "+\t\t\t// test", "-", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e69651b3bce947f2c0c31b15fbe86f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "c382c60104b7fa9333f25f2fb10b318d2a6c9d85", "commitAfterChange": "890be42f32773e7ca5496c222c424ace19ee53bc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic char[] findSource(IType type, String simpleSourceFileName)", "signatureAfterChange": " \tpublic char[] findSource(IType type, String simpleSourceFileName)", "diff": ["-\t\tif (!areRootPathsComputed) {", "-\t\t\tcomputeAllRootPaths((IPackageFragmentRoot) type.getPackageFragment().getParent());", "-\t\t}", "-\t\t", "+\t\t\tif (!areRootPathsComputed) {", "+\t\t\t\tcomputeAllRootPaths((IPackageFragmentRoot) type.getPackageFragment().getParent());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e96bebc2a05fa63fd45b3829fc5ac80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/IntConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String stringValue()", "signatureAfterChange": " \t \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f4686f2271839021e26583797be38f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "signatureAfterChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "diff": ["-\t\t\t\tif (openable == null) {", "-\t\t\t\t\tif (this.progressMonitor != null) {", "-\t\t\t\t\t\tthis.progressWorked++;", "-\t\t\t\t\t\tif ((this.progressWorked%this.progressStep)==0) this.progressMonitor.worked(this.progressStep);", "-\t\t\t\t\t}", "-\t\t\t\t\tdisplayed++;", "-\t\t\t\t\tcontinue; // match is outside classpath", "+\t\t\t}", "+\t\t\tif (openable == null) {", "+\t\t\t\tif (this.progressMonitor != null) {", "+\t\t\t\t\tthis.progressWorked++;", "+\t\t\t\t\tif ((this.progressWorked%this.progressStep)==0) this.progressMonitor.worked(this.progressStep);", "+\t\t\t\tdisplayed++;", "+\t\t\t\tcontinue; // match is outside classpath"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a679c0f4e330e98942d388ad0a8021", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "bf4b5cbb0c17d86f379f63c2109dde3d8c4c0801", "commitAfterChange": "bd673e70d2edbc0e521113de6223a36ce39b9f38", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void setDepth(int depth)", "signatureAfterChange": "  \tpublic void setDepth(int depth)", "diff": ["+\t\tbits &= ~DepthMASK; // flush previous depth if any\t\t\t", "-\t\t\tbits &= ~DepthMASK; // flush previous depth if any\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824efcfe6e5fa32878f22594b62e6736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "commitAfterChange": "0cdfa4a20d7efcfc7530ed5117682b5beffbec92", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["+    // initialize to 0 since we will manually remove 'this'", "-        } else if (declaringClass.isEnum()) {", "+        }", "+        if (declaringClass.isEnum()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a0ee619e62e1f434c4654f2073330d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "d274d115bd7e0b71c7f0e65103c21c78e52c04a8", "commitAfterChange": "251976e8fad9ff65049e5f83ba04649db3c182a3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "  public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["+\t\tParser parser = new Parser(lookupEnvironment.problemReporter, true, options.sourceLevel >= CompilerOptions.JDK1_4);", "-\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, true, options.sourceLevel >= CompilerOptions.JDK1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b9c0cf33150a3d25cda26ad2845302", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "372d175da142eb06ee96f2b4e45c55b51d9b736f", "commitAfterChange": "3fc938efd67d7f1d6ba4971b3e0f4aa8cd107965", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "\r public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t// remember the initialization at this\r", "+\t\t// point for dealing with blank final fields.\r", "+\t\ttraversedContext.recordReturnFrom(flowInfo.unconditionalInits());\r", "+\r", "-\t// the top returning context may want to remember the initialization at this\r", "-\t// point for dealing with blank final fields.\r", "-\ttraversedContext.recordReturnFrom(flowInfo.unconditionalInits());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e2811f6c9145dd0079a31d8717143b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "ec3d2b8d7bc5e4b4b2d91a6a1cfd252341798462", "commitAfterChange": "dfdf5cdb33faed31f1d77a512774b27d49c87683", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, boolean typeInHierarchy) throws CoreException", "signatureAfterChange": " private void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, boolean typeInHierarchy) throws CoreException", "diff": ["-\t\tif (this.potentialMatchingNodes(method.declarationSourceStart, method.declarationSourceEnd).length == 0) {", "-\t\t\t// no need to resolve the statements in the method", "-\t\t\tmethod.statements = null;", "-\t\t}", "+\t}", "+\tif (this.potentialMatchingNodes(method.declarationSourceStart, method.declarationSourceEnd).length == 0) {", "+\t\t// no need to resolve the statements in the method", "+\t\tmethod.statements = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886393384bc1f3b1e553ea1b728d90f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic static CompilationUnit parsePartialCompilationUnit(         IClassFile classFile, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parsePartialCompilationUnit(         IClassFile classFile, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888b9e290314b37b8219c723c5c8841c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "4abea618a97f7448bb60346688abfa260a9da222", "commitAfterChange": "a9ee87c83d7d756655063cf50477aa2c78c21e73", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\tresolveAnnotations(initializationScope, this.annotations, this.binding);", "-", "+\t\t\t\tresolveAnnotations(initializationScope, this.annotations, this.binding);", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c85b297704882132649bc92b9f6f3c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void generateCode(ClassFile classFile)", "signatureAfterChange": "  \tpublic void generateCode(ClassFile classFile)", "diff": ["+\t\t\t// if a problem got reported during code gen, then trigger problem method creation", "+\t\t\tif (this.ignoreFurtherInvestigation) {", "+\t\t\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "+\t\t\t}", "-", "-\t\t// if a problem got reported during code gen, then trigger problem method creation", "-\t\tif (this.ignoreFurtherInvestigation) {", "-\t\t\tthrow new AbortMethod(this.scope.referenceCompilationUnit().compilationResult, null);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903a372d1ff1923d86dd0db4a51c88a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/ShortConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String stringValue()", "signatureAfterChange": " public String stringValue()", "diff": ["-\tif (s == null)", "-\t\treturn \"null\"; //$NON-NLS-1$", "-\telse", "-\t\treturn s;", "+\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92428a01e66cd2dda2593ff0c9af8a65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AstNodeFinder.java", "commitBeforeChange": "918eef64ca6418a800e340287b8f92eb641467b8", "commitAfterChange": "7c141e053110b57e59472c1bab43d4de82d0dd5d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeDeclaration findType(IType typeHandle)", "signatureAfterChange": " \tpublic TypeDeclaration findType(IType typeHandle)", "diff": ["+\t\tclass Visitor extends AbstractSyntaxTreeVisitorAdapter {", "+\t\t\tTypeDeclaration result;", "+\t\t\tint count = 0;", "+\t\t\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "+\t\t\t\tif (result != null) return false;", "+\t\t\t\tif (isAnonymous && ++count == occurenceCount) {", "+\t\t\t\t\tresult = anonymousTypeDeclaration;", "+\t\t\t\t}", "+\t\t\t\treturn false; // visit only one level", "+\t\t\t}", "+\t\t\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {", "+\t\t\t\tif (result != null) return false;", "+\t\t\t\tif (!isAnonymous && CharOperation.equals(typeName, typeDeclaration.name)) {", "+\t\t\t\t\tresult = typeDeclaration;", "+\t\t\t\t}", "+\t\t\t\treturn false; // visit only one level", "+\t\t\t}", "+\t\t}", "-\t\t\t\tclass Visitor extends AbstractSyntaxTreeVisitorAdapter {", "-\t\t\t\t\tTypeDeclaration result;", "-\t\t\t\t\tint count = 0;", "-\t\t\t\t\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "-\t\t\t\t\t\tif (result != null) return false;", "-\t\t\t\t\t\tif (isAnonymous && ++count == occurenceCount) {", "-\t\t\t\t\t\t\tresult = anonymousTypeDeclaration;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn false; // visit only one level", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {", "-\t\t\t\t\t\tif (result != null) return false;", "-\t\t\t\t\t\tif (!isAnonymous && CharOperation.equals(typeName, typeDeclaration.name)) {", "-\t\t\t\t\t\t\tresult = typeDeclaration;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn false; // visit only one level", "-\t\t\t\t\t}", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f7a2787000b2ce099df5bab0d8488e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic static CompilationUnit parsePartialCompilationUnit( \t\tICompilationUnit unit, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parsePartialCompilationUnit( \t\tICompilationUnit unit, \t\tint position, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9534ec62536f0db7cc279d6b85d34184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "diff": ["-\tpublic boolean visit(", "-\t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration,", "-\t\t\tBlockScope scope) {", "+\t}", "+\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "+\t\t\treturn false; // don't visit members as this was done during reportMatching(...)", "-\t\treturn false; // don't visit members as this was done during reportMatching(...)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d9f499867d7bd40d2fed6e4d060c35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "451f820dc0247eba7c37bf74780f9db9334c820a", "commitAfterChange": "3bbe023d2fca1841b10d4650366cb2e72fef8e96", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["+\t\t\t\tif (this.currentPosition > this.eofPosition)", "+\t\t\t\t\treturn TokenNameEOF;", "-\t\t\t//little trick to get out in the middle of a source compuation", "-\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\t\treturn TokenNameEOF;", "-", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96dd1036c31670aadf89be7832dd0828", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testSearchConstructor() throws CoreException", "signatureAfterChange": " \tpublic void testSearchConstructor() throws CoreException", "diff": ["-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "982e853bc3567ac4b3f0cab44023cf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\telse", "-\t\t\t\treturn new ProblemFieldBinding(field.declaringClass, fieldName, NotVisible);", "+\t\t\treturn new ProblemFieldBinding(field.declaringClass, fieldName, NotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b11c752fe39f47b378822f13c802abc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["+\t\t\t\tAnnotation.isTypeUseCompatible(fieldDecl.type, this.scope, fieldDecl.annotations);", "-\t\t\tAnnotation.isTypeUseCompatible(fieldDecl.type, this.scope, fieldDecl.annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c204c5cfac0af6c55f008c7d2ea8eac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Annotation.java", "commitBeforeChange": "cf143a6a7ccd7553042fd4fda437966abe78a9e6", "commitAfterChange": "31d3be0ab92dab378331be6840b8f198d91f8e2d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Annotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \tpublic Annotation( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\tthis.readOffset = 4;", "-\t\t\tthis.readOffset = 4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1af6cc18a8ffb3c82b118b285aa1c84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "47bcb04a09519f7d9288d87ae305d859e84151d2", "commitAfterChange": "e4b120541cf6c404fcc534d957fc35fe80d78035", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t\tif (substitution.isRawSubstitution()) {", "-\t\t\t\t\treturn originalParameterizedType.environment.createRawType(originalParameterizedType.type, substitutedEnclosing);", "-\t\t\t\t}\t\t\t\t", "+\t\t\t\t\tif (substitution.isRawSubstitution()) {", "+\t\t\t\t\t\treturn originalParameterizedType.environment.createRawType(originalParameterizedType.type, substitutedEnclosing);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23917f1edea8574208602ebae112bc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public InputStream getErrorStream() throws TargetException", "signatureAfterChange": " public InputStream getErrorStream() throws TargetException", "diff": ["-\telse", "-\t\treturn this.process.getErrorStream();", "+\treturn this.process.getErrorStream();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2cc0de123f519c3558764729a95ece5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "79230cd7762a4c67bbe12b2445e22b464f420455", "commitAfterChange": "0e2b95cbd8acd25a30eff4aa5a4e5b34fa13b0c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void discardJobsUntilNextProjectAddition(String jobFamily)", "signatureAfterChange": "\r public void discardJobsUntilNextProjectAddition(String jobFamily)", "diff": ["+\t\t\t\tcurrentJob.cancel();\r", "-\t\t\t\t\t// request a cancel and wait until current job has accepted the cancel\r", "-\t\t\t\t\tcurrentJob.cancel();\r", "+\t\t\t\t\t// wait until current active job has accepted the cancel\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a432f18b4e771ab0ac3136e0bce8d8c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "a51f0328f1978f4c547fe994573879b0bcceba88", "commitAfterChange": "cbe22d350fa314e6e5df169cf670cab9bb8c2a20", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (this.annotationsOnDimensions != null) {", "+\t\t\t\tthis.resolvedType = resolveAnnotations(scope, this.annotationsOnDimensions, this.resolvedType);", "+\t\t\t}", "+", "-\t\t}", "-\t\tif (this.annotationsOnDimensions != null) {", "-\t\t\tthis.resolvedType = resolveAnnotations(scope, this.annotationsOnDimensions, this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51c85ebe466c19c67c174cffd7ddbca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f3bba67d7292a507e1b3691e11f35ff1c9658d01", "commitAfterChange": "5ba107df633d1beada69a1a39d8b4efe7c8b77f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic int compareUncheckedException(ReferenceBinding type)", "signatureAfterChange": "\r \tpublic int compareUncheckedException(ReferenceBinding type)", "diff": ["-\t\tif (comparison != 0)\r", "-\t\t\treturn comparison;\r", "-\t\telse\r", "-\t\t\treturn compareTypes(type, getJavaLangError());\r", "+\t\tif (comparison != 0) return comparison;\r", "+\t\treturn compareTypes(type, getJavaLangError());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa73d82b4741f2c69a11596467ab8185", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "8f739e5e7e59755a66239cd3157a0979c83aa6f8", "commitAfterChange": "c0679d24710a6b2a91bf47b3b4b03da992188ceb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\tIPath path = new Path(documentPath);", "+\t\t\tIPath path = new Path(documentPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab5f9f635dbd9bb6b02bc87285587b7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/FloatConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String stringValue()", "signatureAfterChange": " \t \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8789e9f28cafbb025cf2e20f5b3d47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "ebc568fad377cf85a79bc0aeeea9122e5115f057", "commitAfterChange": "75c11b9993cee3cc0c66baeb87390d3f47878de0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\t\tgetMethodBodies(unit, 0);", "+\t\t\tgetMethodBodies(unit, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adeaca4e1f427a4acf1ce1acd5579760", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "4b3205881d2b83b4d22e7e7448a1c8a755f73982", "commitAfterChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "  \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "  \tpublic Type convertType(TypeReference typeReference)", "diff": ["-\t\t\t\tlength = typeReference.sourceEnd - sourceStart + 1;", "+\t\t\tlength = typeReference.sourceEnd - sourceStart + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af13ad2ccd5b1a96355fe99a23707a2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "ec3d2b8d7bc5e4b4b2d91a6a1cfd252341798462", "commitAfterChange": "dfdf5cdb33faed31f1d77a512774b27d49c87683", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, boolean typeInHierarchy) throws CoreException", "signatureAfterChange": " private void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, boolean typeInHierarchy) throws CoreException", "diff": ["-\t\tif (this.potentialMatchingNodes(method.declarationSourceStart, method.declarationSourceEnd).length == 0) {", "-\t\t\t// no need to resolve the statements in the method", "-\t\t\tmethod.statements = null;", "-\t\t}", "+\t}", "+\tif (this.potentialMatchingNodes(method.declarationSourceStart, method.declarationSourceEnd).length == 0) {", "+\t\t// no need to resolve the statements in the method", "+\t\tmethod.statements = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f0e034c0d3f16a5b02a3f80099f524", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate Set<AnnotationProcessorFactory> build(final BuildEnv processorEnv)", "signatureAfterChange": " \tprivate Set<AnnotationProcessorFactory> build(final BuildEnv processorEnv)", "diff": ["+\t\t\tEclipseRoundCompleteEvent event = null;", "-\t\t\t\tEclipseRoundCompleteEvent event = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d8f4242dd4e89f78c217b81d3f1659", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48920b204ae86ac34b1ae433f495f13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/VerificationTypeInfo.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " public VerificationTypeInfo(TypeBinding binding)", "signatureAfterChange": " public VerificationTypeInfo(TypeBinding binding)", "diff": ["+\t\t\tthis.constantPoolName = binding.constantPoolName();", "-\tthis.constantPoolName = binding.constantPoolName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b63862eea668992f7af0fc8426bfdf64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java", "commitBeforeChange": "a2340c5031a10e8be9cd3937b4ff6561db98f484", "commitAfterChange": "fd79557485cf3d3184833df280c6ebd9cfbb8177", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue, boolean delegatedByParent)", "diff": ["-\t\tthis.resetPendingModifiers();", "+\tthis.resetPendingModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96eaf352967a9979d261585a27d3dfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0b7ff78692342ed66f3a07e07fcd0a8a72247fee", "commitAfterChange": "076e76a1f851b4e6de516651f693060a8f931e1c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "signatureAfterChange": "  \tprivate void formatCascadingMessageSends(CascadingMethodInvocationFragmentBuilder builder, BlockScope scope)", "diff": ["+\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t}", "-\t\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "-\t\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba402d49cc8ef3903927be638f27c7df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private Binding findSingleTypeImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleTypeImport(char[][] compoundName)", "diff": ["-\t\telse", "-\t\t\treturn typeBinding;", "+\t\treturn typeBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4a48755ed6ba03de972143761fea30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public ReferenceBinding[] syntheticEnclosingInstanceTypes()", "signatureAfterChange": " public ReferenceBinding[] syntheticEnclosingInstanceTypes()", "diff": ["-\telse", "-\t\treturn new ReferenceBinding[] {enclosingType};", "+\treturn new ReferenceBinding[] {enclosingType};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5e5d220464f05289739561f4cf8e25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["+\t\t\tif (disableExclusionPatterns &&", "+\t\t\t        ((resolvedEntry.getInclusionPatterns() != null && resolvedEntry.getInclusionPatterns().length > 0) ", "+\t\t\t        || (resolvedEntry.getExclusionPatterns() != null && resolvedEntry.getExclusionPatterns().length > 0))) {", "+\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DISABLED_CP_EXCLUSION_PATTERNS, javaProject, resolvedEntry.getPath());", "+\t\t\t}", "-\t\t\t\t\tif (disableExclusionPatterns &&", "-\t\t\t\t\t        ((resolvedEntry.getInclusionPatterns() != null && resolvedEntry.getInclusionPatterns().length > 0) ", "-\t\t\t\t\t        || (resolvedEntry.getExclusionPatterns() != null && resolvedEntry.getExclusionPatterns().length > 0))) {", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DISABLED_CP_EXCLUSION_PATTERNS, javaProject, resolvedEntry.getPath());", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb22b5c736a8742e39a4fbeef2843f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t// check for assignment with no effect", "-\t\t\tif (this.binding == Assignment.getDirectBinding(this.initialization)) {", "-\t\t\t\tscope.problemReporter().assignmentHasNoEffect(this, this.name);", "-\t\t\t}", "-\t\t\t// change the constant in the binding when it is final", "-\t\t\t// (the optimization of the constant propagation will be done later on)", "-\t\t\t// cast from constant actual type to variable type", "+\t\t\t\t// check for assignment with no effect", "+\t\t\t\tif (this.binding == Assignment.getDirectBinding(this.initialization)) {", "+\t\t\t\t\tscope.problemReporter().assignmentHasNoEffect(this, this.name);", "+\t\t\t\t}", "+\t\t\t\t// change the constant in the binding when it is final", "+\t\t\t\t// (the optimization of the constant propagation will be done later on)", "+\t\t\t\t// cast from constant actual type to variable type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8ee467f2719dae46fd5f28da67d72d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testSearchType() throws CoreException", "signatureAfterChange": " \tpublic void testSearchType() throws CoreException", "diff": ["-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2d1ef584de4543e1456da14e67fac4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/DoubleConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic String stringValue()", "signatureAfterChange": " \t \tpublic String stringValue()", "diff": ["-\t\tif (s == null)", "-\t\t\treturn \"null\"; //$NON-NLS-1$", "-\t\telse", "-\t\t\treturn s;", "+\t\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0dc6597410ed53f4b40f96ab91ed2a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "79230cd7762a4c67bbe12b2445e22b464f420455", "commitAfterChange": "0e2b95cbd8acd25a30eff4aa5a4e5b34fa13b0c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic void discardJobs(String jobFamily)", "signatureAfterChange": "\r \tpublic void discardJobs(String jobFamily)", "diff": ["+\t\t\t\t\tcurrentJob.cancel();\r", "-\t\t\t\t\t\t// request a cancel and wait until current job has accepted the cancel\r", "-\t\t\t\t\t\tcurrentJob.cancel();\r", "+\t\t\t\t\t\t// wait until current active job has accepted the cancel\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c5afa26714611e719a573f362ebdec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9fa3233c96ef5a5d9fd8dee21980d4556ff02acf", "commitAfterChange": "aaf170940df69859b8346215378f5413e498b0cd", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r \tprotected Object readState(IProject project) throws CoreException", "signatureAfterChange": "\r \tprotected Object readState(IProject project) throws CoreException", "diff": ["-\t\t\t\t\telse if (JavaBuilder.DEBUG)\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c98640f0b94fc34ef972144745870e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "c9e120593d0735d48adb3fd437a574562eeeeaab", "commitAfterChange": "6f3511a648e9cd9042472fa266e28d2dd4fa2827", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected void updateDocComment()", "signatureAfterChange": " \tprotected void updateDocComment()", "diff": ["-\t\tgetCompletionParser().assistNodeParent = this.docComment;", "+\t\t\tgetCompletionParser().assistNodeParent = this.docComment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ac398cc29a324ab52b4cbb54d3fe96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "ae74e5c29550b6c950030ea6351d21da8edae8d1", "commitAfterChange": "c074f1ef13a39ca809ef4fa70aa31854dcbb021d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\tTypeDeclaration typeDeclaration = scope.referenceType();", "+\t\t\tTypeDeclaration typeDeclaration = scope.referenceType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caf5256aeb60da62c33f8e47629a15ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  PackageBinding getTopLevelPackage(char[] name)", "signatureAfterChange": "  PackageBinding getTopLevelPackage(char[] name)", "diff": ["-\t\telse", "-\t\t\treturn packageBinding;", "+\t\treturn packageBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb506cba6f6b1e6387f5c40d1e706b18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0b7ff78692342ed66f3a07e07fcd0a8a72247fee", "commitAfterChange": "076e76a1f851b4e6de516651f693060a8f931e1c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "diff": ["+\t\t\tif (this.preferences.insert_space_within_message_send) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}\t\t\t", "-\t\t\t\t\tif (this.preferences.insert_space_within_message_send) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba47cafbe35954c317386e21709bb2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "6fbfbbf1166c6937983f36f8f1fde989d8cc6db9", "commitAfterChange": "0c8ad3a5909a5d0c85d107049bd92d83518c3caf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public void place()", "signatureAfterChange": "\r public void place()", "diff": ["-\t\t\t\t\t\t\t\tif (local.initializationPCs[((local.initializationCount - 1) << 1)] == oldPosition) {\r", "-\t\t\t\t\t\t\t\t\tlocal.initializationPCs[((local.initializationCount - 1) << 1)] = position;\r", "-\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tif (local.initializationPCs[(local.initializationCount - 1) << 1] == oldPosition) {\r", "+\t\t\t\t\t\t\t\tlocal.initializationPCs[(local.initializationCount - 1) << 1] = position;\r", "+\t\t\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc339be0bae582f96f98dd3bacfca279", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "bc1023a3db35de5f11d5861f411b9a4de78ba0ab", "commitAfterChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public InputStream getInputStream() throws TargetException", "signatureAfterChange": " public InputStream getInputStream() throws TargetException", "diff": ["-\telse", "-\t\t// Workaround problem with input stream of a Process", "-\t\treturn new VMInputStream(this.process, this.process.getInputStream());", "+\t// Workaround problem with input stream of a Process", "+\treturn new VMInputStream(this.process, this.process.getInputStream());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca3f335bbd3666e43c8cb0deb072e46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "ac79ebad8b588bff5a071f74e9413cce9477383d", "commitAfterChange": "7bf0271f1c4a3a3e2fdf19c1b96995c79e10b393", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "signatureAfterChange": "\r public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "diff": ["-\t\tString encoding = (String)JavaCore.getOptions().get(JavaCore.CORE_ENCODING);\r", "-\r", "+\t\t\tString encoding = (String)JavaCore.getOptions().get(JavaCore.CORE_ENCODING);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd5ec17a6617f771aa78ce10b0f70fb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public TypeBinding elementsType(Scope scope)", "signatureAfterChange": "  public TypeBinding elementsType(Scope scope)", "diff": ["-\tif (dimensions == 1)", "-\t\treturn leafComponentType;", "-\telse", "-\t\treturn scope.createArray(leafComponentType, dimensions - 1);", "+\tif (dimensions == 1) \treturn leafComponentType;", "+\treturn scope.createArray(leafComponentType, dimensions - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cddb2dcef9927b657c37c255c594caf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "525d48c9ddf8862fae803e309d046594be627c6f", "commitAfterChange": "c7564140aa87bfffada113477b30874c6b743c2d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tpublic void run()", "signatureAfterChange": "\r \tpublic void run()", "diff": ["-\t\t\t\t\tmoveToNextJob();\r", "+\t\t\t\t\tmoveToNextJob();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9bedf660861f9afd1a955f24287679", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "927e71dd0053e44570431bb963abcb6762c4f72e", "commitAfterChange": "b85551d73960d4ac924c265aea72986d6bf6d1fa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tprivate void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t// ensure project references are updated (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=121569)", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tthis.state.updateProjectReferences(", "+\t\t\t\t\t\t\t\t\tjavaProject, ", "+\t\t\t\t\t\t\t\t\tnull/*no old classpath*/, ", "+\t\t\t\t\t\t\t\t\tnull/*compute new resolved classpath later*/, ", "+\t\t\t\t\t\t\t\t\tnull/*read raw classpath later*/, ", "+\t\t\t\t\t\t\t\t\tfalse/*cannot change resources*/);", "+\t\t\t\t\t\t\t} catch (JavaModelException e1) {", "+\t\t\t\t\t\t\t\t// project always exists", "+\t\t\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\t\t\t// ensure project references are updated (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=121569)", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tthis.state.updateProjectReferences(", "-\t\t\t\t\t\t\t\tjavaProject, ", "-\t\t\t\t\t\t\t\tnull/*no old classpath*/, ", "-\t\t\t\t\t\t\t\tnull/*compute new resolved classpath later*/, ", "-\t\t\t\t\t\t\t\tnull/*read raw classpath later*/, ", "-\t\t\t\t\t\t\t\tfalse/*cannot change resources*/);", "-\t\t\t\t\t\t} catch (JavaModelException e1) {", "-\t\t\t\t\t\t\t// project always exists", "-\t\t\t\t\t\t}", "-\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07f4f19eb421eafab1de0c6c3f0d1a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b76752c4514702a8d23bce33aaea8b569326dd8b", "commitAfterChange": "9be23fc2d62f4ce93ecee7802865796fde322418", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["+\t\tboolean isInitialProject = this.equals(initialProject);", "-", "-\t\t\tboolean isInitialProject = this.equals(initialProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12ab8167fbc4874b578e2c501a20355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "b8eb7657f5ec170ca0c9bc64448d616c6f682244", "commitAfterChange": "b71d5caba2ea7e73efda022352a4ec92b8290571", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \tprivate void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyParameters, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstParameter,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma, \t\t\tint methodDeclarationParametersAlignment)", "signatureAfterChange": "  \tprivate void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyParameters, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstParameter,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma, \t\t\tint methodDeclarationParametersAlignment)", "diff": ["+\t\t\tif (spaceBeforeFirstParameter) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "-\t\t\t\t\tif (spaceBeforeFirstParameter) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e731f8bf26863aa35e0e71b4544ba4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14af252394acbb0bfcfcbfb1dcd81d43fd8bedb4", "commitAfterChange": "a5e72f7eb3d8ebc1e13245d6ce4d9ee4d6c6d3db", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testSearchField() throws CoreException", "signatureAfterChange": " \tpublic void testSearchField() throws CoreException", "diff": ["-\t\t// Clean memory", "-\t\trunGc();", "-", "+\t\t\trunGc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d66320bf086d920b332cbcf7d363e416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "commitAfterChange": "2be9770fe170326f9451f25888ed7063aef96155", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "signatureAfterChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "diff": ["+\t\t\t\tparseSecondaryType();", "-\t\t\tparseSecondaryType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b85095f5b6b6defdcb95e34364fec6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ClassDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @SuppressWarnings(\"unchecked\") \tprivate void getASTConstructor(     \t\tfinal AbstractTypeDeclaration typeDecl,     \t\tfinal List<ConstructorDeclaration> results)", "signatureAfterChange": "          @SuppressWarnings(\"unchecked\") \tprivate void getASTConstructor(     \t\tfinal AbstractTypeDeclaration typeDecl,     \t\tfinal List<ConstructorDeclaration> results)", "diff": ["+    \tIFile file = null; ", "-    \t\tIFile file = null; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9126fb1421321bd96303cd44f99868d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\") \tprotected void getASTMethods(     \t\tfinal AbstractTypeDeclaration typeDecl,      \t\tfinal List<MethodDeclaration> results)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\") \tprotected void getASTMethods(     \t\tfinal AbstractTypeDeclaration typeDecl,      \t\tfinal List<MethodDeclaration> results)", "diff": ["+    \tIFile file = null; ", "-    \t\tIFile file = null; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9928bdc016581f3a4a311033502c1eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tthis.expression.computeConversion(scope, this.resolvedType, expressionType);", "+\t\t\t\t\tthis.expression.computeConversion(scope, this.resolvedType, expressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d0f224cdfe94d42c32ab5e90828b1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "4633416c1bc83f78e0f1a8be57a963ab252b187d", "commitAfterChange": "16e319d68a580fad9a7135780d9bbb105340c755", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t}", "-\t\tif ((expressionType != TypeBinding.NULL && expressionType.isBaseType()) // disallow autoboxing", "+\t\t} else if ((expressionType != TypeBinding.NULL && expressionType.isBaseType()) // disallow autoboxing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbdee2821e2dbfeffa40cefda70d6f1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "09c8d2f925a57bbf1511d8664e73fc036c4e20a7", "commitAfterChange": "2e8fc55de280fa8ba440932020f75503dfb2aeea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t} else if (valueIfFalseType.isBaseType() && valueIfFalseType != TypeBinding.NULL) {", "+\t\t} ", "+\t\tif (valueIfFalseType.isBaseType() && valueIfFalseType != TypeBinding.NULL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7068fff17092922b22941c488a2c0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f03e24a20423490ce43dd47d116e6771e9f8b29a", "commitAfterChange": "0425932939e44005b87b30f06674df053a397223", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings)", "diff": ["+\t\t\t// convert ASTParser's complaints into old form", "+\t\t\tthrow new IllegalArgumentException();", "-\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9ac67aa39fd4cb319ae519eb345a32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "b16af955ad096598d372b7b23da79db705ddee11", "commitAfterChange": "906228369eed23f930bc548422a9ed0c01a3237e", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  protected void appendNullAnnotation(StringBuffer nameBuffer, CompilerOptions options)", "signatureAfterChange": "  protected void appendNullAnnotation(StringBuffer nameBuffer, CompilerOptions options)", "diff": ["-\t    } else if ((this.tagBits & TagBits.AnnotationNullable) != 0) {", "+\t    }", "+\t    if ((this.tagBits & TagBits.AnnotationNullable) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df440c4339add8efccd0e51804e602c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "451f820dc0247eba7c37bf74780f9db9334c820a", "commitAfterChange": "3bbe023d2fca1841b10d4650366cb2e72fef8e96", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["+\t\t\t\t//little trick to get out in the middle of a source compuation", "+\t\t\t\tif (this.currentPosition > this.eofPosition)", "+\t\t\t\t\treturn TokenNameEOF;", "-\t\t\t//little trick to get out in the middle of a source compuation", "-\t\t\tif (this.currentPosition > this.eofPosition)", "-\t\t\t\treturn TokenNameEOF;", "-", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2dd2aee502d4cfded4bc0eb09c40a07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "edf1aa4b220fec20b2ea6b3588c59f7c04f1c931", "commitAfterChange": "135f9386299e3566f4114db01233357ab2291b11", "methodNumberBeforeChange": 212, "methodNumberAfterChange": 212, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\t// save non-chaining jar cache on snapshot/full save", "-\t\tsaveNonChainingJarsCache();", "-", "+\t\t\t// save non-chaining jar cache on snapshot/full save", "+\t\t\tsaveNonChainingJarsCache();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4662b07d5c607f39f7dce9d4f86c416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultStackMapFrame.java", "commitBeforeChange": "517b7635549251305475f5979e09084934078df3", "commitAfterChange": "1d890ea58166bb002c22a6562a5afba809d4c5d9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic DefaultStackMapFrame( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \tpublic DefaultStackMapFrame( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["+\t\tthis.readOffset = 4;", "-\t\t\tthis.readOffset = 4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77073b24d79c6a9e2c1ff0a27076182", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "0ce4ce22c72f34e69f5fcefb01350722f8598c48", "commitAfterChange": "8bcd93659b03cef1840f96fe89a46264aadd1f45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeVariableBinding(TypeVariableBinding prototype)", "signatureAfterChange": "  \tpublic TypeVariableBinding(TypeVariableBinding prototype)", "diff": ["-\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "+\t\t\telse", "+\t\t\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bf2623b035beb7028708ba8b6df179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/LongConstant.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String stringValue()", "signatureAfterChange": " public String stringValue()", "diff": ["-\tif (s == null)", "-\t\treturn \"null\"; //$NON-NLS-1$", "-\telse", "-\t\treturn s;", "+\tif (s == null) return \"null\"; //$NON-NLS-1$", "+\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef330c55fe35819c7a729a4da3e292fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "1784eadce870daea87767c81fcd5cae9b86d1dff", "commitAfterChange": "c1ff886fdc80e2db6fcd7a469466c9705a27ac1c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tpublic void selectType(ISourceType sourceType, char[] typeName)", "signatureAfterChange": "\r \tpublic void selectType(ISourceType sourceType, char[] typeName)", "diff": ["-\t\t\tqualifiedSelection = typeName;\r", "+\t\t\t\t\t\tqualifiedSelection = typeName;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9aa135588e3845182649d9e228efe4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "bc58ceae1b3691095e4db8bfcb9f2192eeaf077d", "commitAfterChange": "df9c3a401cd78995716c690f400af3a4d95f0187", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "signatureAfterChange": " \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, \t\t\tInvocationSite invocationSite, int inferenceLevel)", "diff": ["-\t\t\t\t\t\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled)", "-\t\t\t\t\t\t\t\tmethodSubstitute = NullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);", "+\t\t\t\t\t\t\t\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled)", "+\t\t\t\t\t\t\t\t\tmethodSubstitute = NullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f265125ef37919adfe2b15e4e3824268", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "74958747d6dfa7074d7be26e7090f615c8b5cb63", "commitAfterChange": "2d759a713e644c7b941823a3d4e9e44e73ef6b04", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public char[] readableName()", "signatureAfterChange": "  public char[] readableName()", "diff": ["+", "-\telse", "-\t\treturn CharOperation.concatWith(compoundName, '.');", "+\treturn CharOperation.concatWith(compoundName, '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f349661ea690b6504c334cf5f0d31e52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private IType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\t\tif (superclass != null) ", "-\t\t\t\t((SourceTypeBinding) typeBinding).superclass = superBinding = (ReferenceBinding) superclass;", "+\t\tif (superclass != null) ", "+\t\t\t((SourceTypeBinding) typeBinding).superclass = superBinding = (ReferenceBinding) superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b3d7289a581ebaf33e2fcfe2534640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "commitAfterChange": "6479fe9ab023669252a13ee797dc53bcddb718f9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void storeProblemsFor(SourceFile sourceFile, CategorizedProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(SourceFile sourceFile, CategorizedProblem[] problems) throws CoreException", "diff": ["-\tIResource resource = sourceFile.resource;", "-", "+\t\t// we may use a different resource for certain problems such as IProblem.MissingNonNullByDefaultAnnotationOnPackage", "+\t\t// but at the start of the next problem we should reset it to the source file's resource", "+\t\tIResource resource = sourceFile.resource;", "+\t\t"]}], "num": 22751}