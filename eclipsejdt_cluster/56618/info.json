{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "044c14ea0c6630da278ae84c74a54446", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab0268515cc3f0de5c658f94228447c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprotected int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "signatureAfterChange": "  \tprotected int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments)", "diff": ["-\t\tLookupEnvironment env = environment();", "-\t\tif (env.options.sourceLevel < ClassFileConstants.JDK1_5) {", "+\t\tif (compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "-\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, env);", "+\t\t\t\t\tlevel = parameterCompatibilityLevel(arg, param, environment());", "-\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, env) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (parameterCompatibilityLevel(arg, param, environment()) == NOT_COMPATIBLE)", "-\t\t\t\t\t\tif (param != arg && parameterCompatibilityLevel(arg, param, env) == NOT_COMPATIBLE)", "+\t\t\t\t\t\tif (param != arg && parameterCompatibilityLevel(arg, param, environment()) == NOT_COMPATIBLE)", "-\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, env);", "+\t\t\t\tint newLevel = parameterCompatibilityLevel(arg, param, environment());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e387dd9093e350205263a0d11c1001f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "1dc6df2cba1e3f21897002448cbe5ca7ad21d269", "commitAfterChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tTypeBinding throwable = scope.getJavaLangThrowable();", "-\t\tif (!exceptionType.isCompatibleWith(throwable)) {", "-\t\t\tscope.problemReporter().typeMismatchError(exceptionType, throwable, this);", "+\t\tif (exceptionType.findSuperTypeErasingTo(TypeIds.T_JavaLangThrowable, true) == null) {", "+\t\t\tscope.problemReporter().cannotThrowType(this.type, exceptionType);", "-\t\t}", "+\t\t}\t\t\t", "-\t\t\t\treturn null;", "+\t\t\t} else {", "+\t\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, false);", "-\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, false);"]}], "num": 56618}