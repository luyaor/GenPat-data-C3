{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a87772a113e4db570aa36d472c375245", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c6e4be13f72442e176b70ea6575b552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d6dbfc9ffdc536bf3813a7df3219c04027533b62", "commitAfterChange": "5074e3a9141b8db4c82ed56886d84586d3d2dbaa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["+\t@Override", "-\t\tthis.currentBinding = fieldDeclaration.binding;", "-\t\t\tint annotationsLength = annotations.length;", "-\t\t\tfor (int i = 0; i < annotationsLength; i++) {", "-\t\t\t\tannotations[i].traverse(this, scope);", "-\t\t\t}", "+\t\t\tthis.resolveAnnotations(scope, annotations, fieldDeclaration.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93847371de065096aba858507eb02f33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "b6aa1e7468e04a61e529b4c4b0b636e6819cd942", "commitAfterChange": "f02299f44229efd24162310e43cde23c2c805118", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\t\tthis.resolveAnnotations(scope, annotations, fieldDeclaration.binding);", "+\t\t\tFieldBinding fieldBinding = fieldDeclaration.binding;", "+\t\t\t((SourceTypeBinding) fieldBinding.declaringClass).resolveTypeFor(fieldBinding);\t\t\t", "+\t\t\tthis.resolveAnnotations(scope, annotations, fieldBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a941524527d1a95743c29563c5d2744", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "d6dbfc9ffdc536bf3813a7df3219c04027533b62", "commitAfterChange": "5074e3a9141b8db4c82ed56886d84586d3d2dbaa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["+", "+\t@Override", "-\t\tthis.currentBinding = argument.binding;", "-\t\t\tint annotationsLength = annotations.length;", "-\t\t\tfor (int i = 0; i < annotationsLength; i++) {", "-\t\t\t\tannotations[i].traverse(this, scope);", "-\t\t\t}", "+\t\t\tthis.resolveAnnotations(", "+\t\t\t\t\tscope,", "+\t\t\t\t\tannotations,", "+\t\t\t\t\targument.binding);"]}], "num": 8564}