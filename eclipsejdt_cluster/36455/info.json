{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e18985d3902730386fd22be0b473855", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "251e1e26b1dd3953fc8b7ec99b8a8d88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tITypeBinding resolveArrayType(ITypeBinding typeBinding, int dimensions)", "signatureAfterChange": " \tITypeBinding resolveArrayType(ITypeBinding typeBinding, int dimensions)", "diff": ["-\t\tif (typeBinding.isRecovered()) throw new IllegalArgumentException(\"Cannot be called on a recovered type binding\"); //$NON-NLS-1$", "+\t\tif (typeBinding instanceof RecoveredTypeBinding) throw new IllegalArgumentException(\"Cannot be called on a recovered type binding\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e652a1c4c39b89e8d63499b64de65265", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "8a765fa23ce703d1d5f2388d447ea40d7aad9f99", "commitAfterChange": "988b834a35e1571af05adddd8db1ce5aaa1f0ff0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (this.expression.isPolyExpression()) {", "+\t\tif (this.expression instanceof FunctionalExpression) {"]}], "num": 36455}