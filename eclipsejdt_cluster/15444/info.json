{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53562d6323cc88ea00aceaec85c68613", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ea98e4a1f3a10f221ad6cf1a2ddbab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void testSuppressWarnings2() throws JavaModelException", "signatureAfterChange": " public void testSuppressWarnings2() throws JavaModelException", "diff": ["-\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\t        \"public interface List<E> {\\n\" + ", "+\t        \"public interface List<E> {\\n\" +", "-\t\t\towner,", "-\t\t\tfalse/*don't compute problems*/);", "-\t\tsetUp15WorkingCopy(\"/Reconciler15/src/X.java\", owner);", "+\t\t\tthis.wcOwner", "+\t\t);", "+\t\tsetUp15WorkingCopy(\"/Reconciler15/src/X.java\", this.wcOwner);", "-            \"import java.util.List;\\n\" + ", "-            \"\\n\" + ", "-            \"public class X {\\n\" + ", "-            \"    void foo(List list) {\\n\" + ", "-            \"        List<String> ls1 = list;\\n\" + ", "-            \"    }\\n\" + ", "-            \"    @SuppressWarnings(\\\"unchecked\\\")\\n\" + ", "-            \"    void bar(List list) {\\n\" + ", "-            \"        List<String> ls2 = list;\\n\" + ", "-            \"    }\\n\" + ", "+            \"import java.util.List;\\n\" +", "+            \"\\n\" +", "+            \"public class X {\\n\" +", "+            \"    void foo(List list) {\\n\" +", "+            \"        List<String> ls1 = list;\\n\" +", "+            \"    }\\n\" +", "+            \"    @SuppressWarnings(\\\"unchecked\\\")\\n\" +", "+            \"    void bar(List list) {\\n\" +", "+            \"        List<String> ls2 = list;\\n\" +", "+            \"    }\\n\" +", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in /Reconciler15/src/X.java (at line 5)\\n\" + ", "-\t\t\t\"\tList<String> ls1 = list;\\n\" + ", "-\t\t\t\"\t                   ^^^^\\n\" + ", "-\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in /Reconciler15/src/X.java (at line 11)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. WARNING in /Reconciler15/src/X.java (at line 5)\\n\" +", "+\t\t\t\"\tList<String> ls1 = list;\\n\" +", "+\t\t\t\"\t                   ^^^^\\n\" +", "+\t\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in /Reconciler15/src/X.java (at line 11)\\n\" +", "+\t\t\t\"\tZork z;\\n\" +", "+\t\t\t\"\t^^^^\\n\" +", "+\t\t\t\"Zork cannot be resolved to a type\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7722e300f435a701083ae3968184e3ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 111, "signatureBeforeChange": " public void testTwoProjectsWithDifferentCompliances() throws CoreException", "signatureAfterChange": " public void testTwoProjectsWithDifferentCompliances() throws CoreException", "diff": ["-\t\t", "+", "-\t\tWorkingCopyOwner owner = new WorkingCopyOwner() {};", "-\t\tthis.workingCopy = getWorkingCopy(\"/P2/p/Y.java\", \"\", owner, this.problemRequestor);", "+\t\tthis.workingCopy = getWorkingCopy(\"/P2/p/Y.java\", \"\", this.wcOwner);", "-\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, true/*force pb detection*/, owner, null);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, true/*force pb detection*/, this.wcOwner, null);", "-\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +"]}], "num": 15444}