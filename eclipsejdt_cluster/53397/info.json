{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36deb31971b8b0794825dbe3ec2eb0a8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d099ca5119a9b0c248b0de572e6c0fa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "37a6ad072d565fc893ea1b8e1ae9a817d9010ac2", "commitAfterChange": "4a06a4282eb5b1441d98544c228a5bdeab600a51", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void printTrailingComment()", "signatureAfterChange": "  \tpublic void printTrailingComment()", "diff": ["-\t\t\tboolean hasComment = false;", "-\t\t\t\t\t\t\t} else if (hasComment) {", "-\t\t\t\t\t\t\t\tprintNewLine();", "-\t\t\t\t\t\t\t} else if (currentTokenStartPosition >= this.scannerEndPosition - 1) {", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t} else if (hasLineComment) {", "+\t\t\t\t\t\t\tpreserveEmptyLines(1);", "-\t\t\t\t\t\thasComment = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62b70b4dd164baa41a3703b6f915464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/CommitRollbackParser.java", "commitBeforeChange": "027433d18c80815de3076b7fd489422a48401f1a", "commitAfterChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected int fallBackToSpringForward(Statement unused)", "signatureAfterChange": " \tprotected int fallBackToSpringForward(Statement unused)", "diff": ["-\t\tboolean atCompletionSite = false;", "-\t\t\t\tatCompletionSite = true;", "+\t\t\t\tshouldStackAssistNode();", "+\t\t\t\tthis.scanner.ungetToken(nextToken); // spit out what has been bitten more than we can chew.", "-\t\t\t\tnextToken = TokenNameEOF;", "+\t\t\t\treturn HALT; // don't know how to proceed.", "+\t\t\tthis.scanner.ungetToken(nextToken);", "+\t\t\tif (nextToken == TokenNameRBRACE)", "+\t\t\t\tignoreNextClosingBrace(); // having ungotten it, recoveryTokenCheck will see this again. ", "-\t\tif (nextToken == TokenNameEOF)", "-\t\t\treturn HALT; // don't know how to proceed.", "-\t\tthis.scanner.ungetToken(nextToken); // spit out what has been bitten more than we can chew.", "-\t\tif (atCompletionSite) {", "+\t\tif (assistNodeNeedsStacking()) {", "-\t\t\tshouldStackAssistNode();"]}], "num": 53397}