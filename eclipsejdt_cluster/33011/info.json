{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "901f2a1acb5682460ba798b17f45d041", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "242b602631556500ef5bbe3d3f5ee95e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "be89ab2e0ec1e398e3b0603a492d22c9815a6eef", "commitAfterChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void buildTypeBindings()", "signatureAfterChange": "\r public void buildTypeBindings()", "diff": ["-\t\ttry {\r", "-\t\t\tchar[] source = null; \r", "-\t\t\torg.eclipse.jdt.internal.core.ClassFile classFile = (org.eclipse.jdt.internal.core.ClassFile)openable;\r", "-\t\t\tSourceMapper sourceMapper = classFile.getSourceMapper();\r", "-\t\t\tif (sourceMapper != null) {\r", "-\t\t\t\tsource = sourceMapper.findSource(classFile.getType());\r", "+\t\tchar[] source = this.locator.findSource((org.eclipse.jdt.internal.core.ClassFile)openable); \r", "+\t\tif (source != null) {\r", "+\t\t\tthis.buildTypeBindings(source);\r", "+\t\t\t\r", "+\t\t\t// try to use the main type's class file as the openable\r", "+\t\t\tTypeDeclaration[] types = this.parsedUnit.types;\r", "+\t\t\tif (types != null && types.length > 0) {\r", "+\t\t\t\tString simpleTypeName = new String(types[0].name);\r", "+\t\t\t\tIPackageFragment parent = (IPackageFragment)openable.getParent();\r", "+\t\t\t\torg.eclipse.jdt.core.IClassFile mainTypeClassFile = \r", "+\t\t\t\t\tparent.getClassFile(simpleTypeName + \".class\"); //$NON-NLS-1$\r", "+\t\t\t\tif (mainTypeClassFile.exists()) {\r", "+\t\t\t\t\tthis.openable = (Openable)mainTypeClassFile;\r", "+\t\t\t\t} \r", "-\t\t\tif (source == null) {\r", "-\t\t\t\t// default to opening the class file\r", "-\t\t\t\tString sourceFromBuffer = classFile.getSource();\r", "-\t\t\t\tif (sourceFromBuffer != null) {\r", "-\t\t\t\t\tsource = sourceFromBuffer.toCharArray();\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\tif (source != null) {\r", "-\t\t\t\tthis.buildTypeBindings(source);\r", "-\t\t\t\t\r", "-\t\t\t\t// try to use the main type's class file as the openable\r", "-\t\t\t\tTypeDeclaration[] types = this.parsedUnit.types;\r", "-\t\t\t\tif (types != null && types.length > 0) {\r", "-\t\t\t\t\tString simpleTypeName = new String(types[0].name);\r", "-\t\t\t\t\tIPackageFragment parent = (IPackageFragment)openable.getParent();\r", "-\t\t\t\t\torg.eclipse.jdt.core.IClassFile mainTypeClassFile = \r", "-\t\t\t\t\t\tparent.getClassFile(simpleTypeName + \".class\"); //$NON-NLS-1$\r", "-\t\t\t\t\tif (mainTypeClassFile.exists()) {\r", "-\t\t\t\t\t\tthis.openable = (Openable)mainTypeClassFile;\r", "-\t\t\t\t\t} \r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} catch (JavaModelException e) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35a90eab31262b7f0f2026bb58c646b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "e6099120ee9021152f84e60105066d4964c2db21", "commitAfterChange": "82631a98caad8b28e9cefb217339d51e64ef47f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void buildTypeBindings()", "signatureAfterChange": "\r public void buildTypeBindings()", "diff": ["-\tif (openable instanceof CompilationUnit) {\r", "-\t\tthis.buildTypeBindings(this.getSource());\r", "-\t} else if (openable instanceof org.eclipse.jdt.internal.core.ClassFile) {\r", "-\t\tchar[] source = this.locator.findSource((org.eclipse.jdt.internal.core.ClassFile)openable); \r", "-\t\tif (source != null) {\r", "-\t\t\tthis.buildTypeBindings(source);\r", "+\tchar[] source = this.getSource();\r", "+\tif (source == null) return;\r", "+\tthis.buildTypeBindings(source);\r", "-\t\t\t// try to use the main type's class file as the openable\r", "-\t\t\tTypeDeclaration[] types = this.parsedUnit.types;\r", "-\t\t\tif (types != null && types.length > 0) {\r", "-\t\t\t\tString simpleTypeName = new String(types[0].name);\r", "-\t\t\t\tIPackageFragment parent = (IPackageFragment)openable.getParent();\r", "-\t\t\t\torg.eclipse.jdt.core.IClassFile mainTypeClassFile = \r", "-\t\t\t\t\tparent.getClassFile(simpleTypeName + \".class\"); //$NON-NLS-1$\r", "-\t\t\t\tif (mainTypeClassFile.exists()) {\r", "-\t\t\t\t\tthis.openable = (Openable)mainTypeClassFile;\r", "-\t\t\t\t} \r", "-\t\t\t}\r", "+\tif (this.openable instanceof org.eclipse.jdt.internal.core.ClassFile) {\r", "+\t\t// try to use the main type's class file as the openable\r", "+\t\tTypeDeclaration[] types = this.parsedUnit.types;\r", "+\t\tif (types != null) {\r", "+\t\t\tString classFileName = openable.getElementName();\r", "+\t\t\tfor (int i = 0, length = types.length; i < length; i++) {\r", "+\t\t\t\tTypeDeclaration typeDeclaration = types[i];\r", "+\t\t\t\tString simpleTypeName = new String(typeDeclaration.name);\r", "+\t\t\t\tif (classFileName.startsWith(simpleTypeName)) {\r", "+\t\t\t\t\tIPackageFragment parent = (IPackageFragment)openable.getParent();\r", "+\t\t\t\t\tthis.openable = (Openable)parent.getClassFile(simpleTypeName + \".class\"); //$NON-NLS-1$\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t} \r"]}], "num": 33011}