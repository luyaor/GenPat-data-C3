{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73cb262d0ba2c30a84aa21320e1f78e7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3ad0d0cd611b3634aff4df4f548cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "signatureAfterChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "diff": ["-\t\tPreferences preferences = JavaCore.getPlugin().getPluginPreferences();", "+\t\tIEclipsePreferences preferences = JavaCore.getInstancePreferences();", "-\t\tString[] propertyNames = preferences.propertyNames();", "-\t\tint variablePrefixLength = CP_VARIABLE_PREFERENCES_PREFIX.length();", "-\t\tfor (int i = 0; i < propertyNames.length; i++){", "-\t\t\tString propertyName = propertyNames[i];", "-\t\t\tif (propertyName.startsWith(CP_VARIABLE_PREFERENCES_PREFIX)){", "-\t\t\t\tString varName = propertyName.substring(variablePrefixLength);", "-\t\t\t\tIPath varPath = new Path(preferences.getString(propertyName).trim());", "-\t\t\t\t", "-\t\t\t\tthis.variables.put(varName, varPath); ", "-\t\t\t\tthis.previousSessionVariables.put(varName, varPath);", "+\t\ttry {", "+\t\t\tString[] propertyNames = preferences.keys();", "+\t\t\tint variablePrefixLength = CP_VARIABLE_PREFERENCES_PREFIX.length();", "+\t\t\tfor (int i = 0; i < propertyNames.length; i++){", "+\t\t\t\tString propertyName = propertyNames[i];", "+\t\t\t\tif (propertyName.startsWith(CP_VARIABLE_PREFERENCES_PREFIX)){", "+\t\t\t\t\tString varName = propertyName.substring(variablePrefixLength);", "+\t\t\t\t\tString propertyValue = preferences.get(propertyName, null);", "+\t\t\t\t\tif (propertyValue != null) {", "+\t\t\t\t\t\tIPath varPath = new Path(propertyValue.trim());", "+\t\t\t\t\t\tthis.variables.put(varName, varPath); ", "+\t\t\t\t\t\tthis.previousSessionVariables.put(varName, varPath);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (propertyName.startsWith(CP_CONTAINER_PREFERENCES_PREFIX)){", "+\t\t\t\t\tString propertyValue = preferences.get(propertyName, null);", "+\t\t\t\t\tif (propertyValue != null)", "+\t\t\t\t\t\trecreatePersistedContainer(propertyName, propertyValue, true/*add to container values*/);", "+\t\t\t\t}", "-\t\t\tif (propertyName.startsWith(CP_CONTAINER_PREFERENCES_PREFIX)){", "-\t\t\t\trecreatePersistedContainer(propertyName, preferences.getString(propertyName), true/*add to container values*/);", "-\t\t\t}", "+\t\t} catch (BackingStoreException e1) {", "+\t\t\t// TODO (frederic) see if it's necessary to report this failure..."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c875bc7e58fc06dd60bd8c2f8f3c2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "e980bec51b1b659da189c52a214379978c34468e", "commitAfterChange": "9f038d058d2bda926136df66ffdae620fcaf8616", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "signatureAfterChange": "  \tpublic void loadVariablesAndContainers() throws CoreException", "diff": ["-\t\tIEclipsePreferences preferences = getInstancePreferences();", "-\t\ttry {", "-\t\t\t// only get variable from preferences not set to their default", "-\t\t\tString[] propertyNames = preferences.keys();", "-\t\t\tint variablePrefixLength = CP_VARIABLE_PREFERENCES_PREFIX.length();", "-\t\t\tfor (int i = 0; i < propertyNames.length; i++){", "-\t\t\t\tString propertyName = propertyNames[i];", "-\t\t\t\tif (propertyName.startsWith(CP_VARIABLE_PREFERENCES_PREFIX)){", "-\t\t\t\t\tString varName = propertyName.substring(variablePrefixLength);", "-\t\t\t\t\tString propertyValue = preferences.get(propertyName, null);", "-\t\t\t\t\tif (propertyValue != null) {", "-\t\t\t\t\t\tString pathString = propertyValue.trim();", "-\t\t\t\t\t\t", "-\t\t\t\t\t\tif (CP_ENTRY_IGNORE.equals(pathString)) {", "-\t\t\t\t\t\t\t// cleanup old preferences", "-\t\t\t\t\t\t\tpreferences.remove(propertyName); ", "-\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\t", "-\t\t\t\t\t\t// add variable to table", "-\t\t\t\t\t\tIPath varPath = new Path(pathString);", "-\t\t\t\t\t\tthis.variables.put(varName, varPath); ", "-\t\t\t\t\t\tthis.previousSessionVariables.put(varName, varPath);", "-\t\t\t\t\t}", "-\t\t\t\t} else if (propertyName.startsWith(CP_CONTAINER_PREFERENCES_PREFIX)){", "-\t\t\t\t\tString propertyValue = preferences.get(propertyName, null);", "-\t\t\t\t\tif (propertyValue != null) {", "-\t\t\t\t\t\t// cleanup old preferences", "-\t\t\t\t\t\tpreferences.remove(propertyName); ", "-\t\t\t\t\t\t", "-\t\t\t\t\t\t// recreate container", "-\t\t\t\t\t\trecreatePersistedContainer(propertyName, propertyValue, true/*add to container values*/);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch (BackingStoreException e1) {", "-\t\t\t// TODO (frederic) see if it's necessary to report this failure...", "-\t\t}", "+\t\tloadVariablesAndContainers(getDefaultPreferences());", "+\t\tloadVariablesAndContainers(getInstancePreferences());", "+\t}"]}], "num": 54010}