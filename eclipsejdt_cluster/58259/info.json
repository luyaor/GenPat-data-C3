{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aadab720b5d211113ce46730d54e534", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35538dc8d3109a8921d77e4e35e6a09c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "803ba016f131f4ec30746b0086adac5a909a8608", "commitAfterChange": "795246d8edc252b417c1fce229af2991829481c9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void openParent(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void openParent(IProgressMonitor pm) throws JavaModelException", "diff": ["-\ttry {", "-\t\tsuper.openParent(pm);", "-\t} catch(JavaModelException e){", "-\t\t// allow parent to not exist for working copies defined outside classpath", "-\t\tif (!e.isDoesNotExist()){ ", "-\t\t\tthrow e;", "+\tif (FIX_BUG25184) {", "+\t\ttry {", "+\t\t\tsuper.openParent(pm);", "+\t\t} catch(JavaModelException e){", "+\t\t\t// allow parent to not exist for working copies defined outside classpath", "+\t\t\tif (!e.isDoesNotExist()){ ", "+\t\t\t\tthrow e;", "+\t\t\t}", "+\t} else {", "+\t\tsuper.openParent(pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d140dd4e0fcacd64055a475ee4187d5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "4e65c4119dadcaa4c5efef86f1373d469b137c02", "commitAfterChange": "028fabba816eeb0fd840dacac7e8e60f3c3758c8", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected void openParent(Object childInfo, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void openParent(Object childInfo, HashMap newElements, IProgressMonitor pm) throws JavaModelException", "diff": ["- */", "-\ttry {", "+\tif (!isWorkingCopy())", "-\t} catch(JavaModelException e){", "-\t\t// allow parent to not exist for working copies defined outside classpath", "-\t\tif (!isWorkingCopy() && !e.isDoesNotExist()){ ", "-\t\t\tthrow e;", "-\t\t}", "-\t}", "+\t// don't open parent for a working copy to speed up the first becomeWorkingCopy", "+\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89411)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86f48b43e137683882c53175181c02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "6700083354b893930a425843fb7de84c2bf92a0b", "commitAfterChange": "16d2f227c83166edb0478b06ddca92e3871fed38", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " \tpublic org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["+\t\t\t    } catch (JavaModelException e) {", "+\t\t\t    \tif (JavaProject.hasJavaNature(workingCopy.getJavaProject().getProject()))", "+\t\t\t    \t\tthrow e;", "+\t\t\t    \t// else JavaProject has lost its nature (or most likely was closed/deleted) while reconciling -> ignore", "+\t\t\t    \t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=100919)"]}], "num": 58259}