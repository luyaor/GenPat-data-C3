{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c03eb00cb751f1addb3b1bc23ab3bf85", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9af38442e14b1d27378325acb505b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "60d259d5b1e0ff710248aa3b7ae16581d3024e86", "commitAfterChange": "ae317766273ccd74fe0e1bfd1f3ccc3925356a13", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": "  \tprivate void findFieldsFromFavorites( \t\t\tchar[] fieldName, \t\t\tFieldBinding[] fields, \t\t\tScope scope, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector localsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "signatureAfterChange": "  \tprivate void findFieldsFromFavorites( \t\t\tchar[] fieldName, \t\t\tFieldBinding[] fields, \t\t\tScope scope, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector localsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "diff": ["-\t\t\tif (!CharOperation.prefixEquals(fieldName, field.name, false /* ignore case */)", "-\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(fieldName, field.name)))\tcontinue next;", "+\t\t\tif (isFailedMatch(fieldName, field.name))\tcontinue next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60979f59c3bb8d6ed3ce3e50700250b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "60d259d5b1e0ff710248aa3b7ae16581d3024e86", "commitAfterChange": "ae317766273ccd74fe0e1bfd1f3ccc3925356a13", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\tif (!CharOperation.prefixEquals(fieldName, field.name, false /* ignore case */)", "-\t\t\t\t\t&& !(this.options.camelCaseMatch && CharOperation.camelCaseMatch(fieldName, field.name)))\tcontinue next;", "+\t\t\tif (isFailedMatch(fieldName, field.name))\tcontinue next;"]}], "num": 21799}