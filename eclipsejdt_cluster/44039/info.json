{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25cb4897054a759635ff8c00e317a94c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7246ca3950a3da1f485341332708d38f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " protected void markFieldsWithLocalType(TypeDeclaration type)", "signatureAfterChange": " protected void markInitializersWithLocalType(TypeDeclaration type)", "diff": ["-protected void markFieldsWithLocalType(TypeDeclaration type) {", "+protected void markInitializersWithLocalType(TypeDeclaration type) {", "-\t\ttype.fields[i].bits |= AstNode.HasLocalTypeMASK;", "+\t\tFieldDeclaration field = type.fields[i];", "+\t\tif (field instanceof Initializer) {", "+\t\t\tfield.bits |= AstNode.HasLocalTypeMASK;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c4545aed2b5435c469899c49d57b20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "67744c35fb096b073b6eb207529145544c47d6b6", "commitAfterChange": "a69ec5abfba2adcf10fe50b7c7be7bc087bd47c7", "methodNumberBeforeChange": 200, "methodNumberAfterChange": 200, "signatureBeforeChange": " \tprotected void getMethodBodies(CompilationUnitDeclaration unit)", "signatureAfterChange": " \tpublic void getMethodBodies(CompilationUnitDeclaration unit)", "diff": ["-\tprotected void getMethodBodies(CompilationUnitDeclaration unit) {", "+\tpublic void getMethodBodies(CompilationUnitDeclaration unit) {", "+\t\tif ((unit.bits & AstNode.HasAllMethodBodies) != 0)", "+\t\t\treturn; //work already done ...", "+", "+\t\t", "+\t\t// tag unit has having read bodies", "+\t\tunit.bits |= AstNode.HasAllMethodBodies;"]}], "num": 44039}