{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaf3c27c869f84c2ec0139da4b97278b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f9bc6e3e61554ef80c95ef8883480bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test75460()", "signatureAfterChange": " \tpublic void test75460()", "diff": ["-\t\t\t\t\" * objects[0] = new String(\\\"Hallo Welt !!!\\\");\" + DELIMITER +", "-\t\t\t\t\" * objects[1] = new String(\\\"Test !!!\\\");\" + DELIMITER +", "-\t\t\t\t\" * objects[2] = new Integer(\\\"1980\\\");\" + DELIMITER +", "+\t\t\t\t\" * objects[0] = new String(&quot;Hallo Welt !!!&quot;);\" + DELIMITER +", "+\t\t\t\t\" * objects[1] = new String(&quot;Test !!!&quot;);\" + DELIMITER +", "+\t\t\t\t\" * objects[2] = new Integer(&quot;1980&quot;);\" + DELIMITER +", "-\t\t\t\t\" * for (int i = 0; i < objs.length; i++) {\" + DELIMITER +", "+\t\t\t\t\" * for (int i = 0; i &lt; objs.length; i++) {\" + DELIMITER +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5471245326ce979cae93877858d4d481", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "01bb8fe9f8248cd9358b14893bccaf44dc8edaf8", "commitAfterChange": "bebbc656cd8c0b5b2b17917b50736d005533495d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void testBug83393b()", "signatureAfterChange": " \tpublic void testBug83393b()", "diff": ["-\t\t\t\"Javadoc: The method foo(int, int) in the type Test is not applicable for the arguments ()\\n\" + ", "+\t\t\t\"Javadoc: The method foo(String[]) in the type Test is not applicable for the arguments ()\\n\" + ", "-\t\t\t\"Javadoc: The method foo(int, int) in the type Test is not applicable for the arguments (String)\\n\" + ", "+\t\t\t\"Javadoc: The method foo(String[]) in the type Test is not applicable for the arguments (String)\\n\" + ", "-\t\t\t\"Javadoc: The method foo(int, int) in the type Test is not applicable for the arguments (Exception, boolean)\\n\" + ", "+\t\t\t\"Javadoc: The method foo(Exception, boolean[]) in the type Test is not applicable for the arguments (Exception, boolean)\\n\" + ", "-\t\t\t\"Javadoc: The method foo(int, int) in the type Test is not applicable for the arguments (Exception, boolean, boolean)\\n\" + ", "+\t\t\t\"Javadoc: The method foo(Exception, boolean[]) in the type Test is not applicable for the arguments (Exception, boolean, boolean)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54bbafe776d6bf092a473b77951276f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "d16d71303cc38b4ca3466d0f95ab4eeb4eced38a", "commitAfterChange": "04423947d8d7bb07b422b48e36dce13f3a6590fc", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void test058() throws Exception", "signatureAfterChange": " public void test058() throws Exception", "diff": ["-\t\t\t\"        [pc: 11, line: 6]\\n\" +", "+\t\t\t\"        [pc: 8, line: 6]\\n\" +", "-\t\t\t\"        [pc: 34, line: 9]\\n\" +", "+\t\t\t\"        [pc: 31, line: 9]\\n\" +", "-\t\t\t\"        [pc: 11, line: 6]\\n\" +", "+\t\t\t\"        [pc: 8, line: 6]\\n\" +", "-\t\t\t\"        [pc: 33, line: 9]\\n\" +", "+\t\t\t\"        [pc: 30, line: 9]\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f8e6b1cb938f6371480a8ef28127a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "490f0dedc6b033aac107ccccbdc9e8361a921466", "commitAfterChange": "83feb6a3bbe889feb388b89a4854a090c75eaf0e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testJavadocMethodArgDeclaration() throws CoreException", "signatureAfterChange": " \tpublic void testJavadocMethodArgDeclaration() throws CoreException", "diff": ["-\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"AnnSearched.java\").getType(\"AnnSearched\");", "-\t\tIMethod method = type.getMethod(\"annSearchedMethod\", new String[] { \"QString;\" });", "+\t\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"j1\", \"JavadocSearched.java\").getType(\"JavadocSearched\");", "+\t\tIMethod method = type.getMethod(\"javadocSearchedMethod\", new String[] { \"QString;\" });", "-\t\t\t\t\"src/j1/AnnSearched.java void j1.AnnSearched.annSearchedMethod(String) [annSearchedMethod] EXACT_MATCH\",", "+\t\t\t\t\"src/j1/JavadocSearched.java void j1.JavadocSearched.javadocSearchedMethod(String) [javadocSearchedMethod] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e675d0d1f6786d47a34a1d4e6353dbbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForMethod.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 92, "signatureBeforeChange": "  \tpublic void test127()", "signatureAfterChange": "  \tpublic void test127()", "diff": ["-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"\t                ^^^^^^^^^^^^^^^^^^^\\n\"", "+\t\t\t\t+ \"\t               ^^^^^^^^^^^^^^^^^^^^\\n\""]}], "num": 3033}