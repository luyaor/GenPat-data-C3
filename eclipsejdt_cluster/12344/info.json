{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21cae164cd0b6e58952b386093943776", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3586a8e0307ec1ebb17525c3e89752", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "7837c22c77d5de1a45545030033be1e2b2970468", "commitAfterChange": "eaed8b4c57bf985bb0b4f36634f058b94194b2e7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized IIndex getIndex(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\t\t\t\t\tif (VERBOSE)", "-\t\t\t\t\t\tJobManager.verbose(\"-> cannot reuse existing index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\trebuildIndex(indexName, path);", "-\t\t\t\t\treturn null;", "+\t\t\t\t\tif (currentIndexState != REBUILDING_STATE) { // rebuild index if existing file is corrupt, unless the index is already being rebuilt", "+\t\t\t\t\t\tif (VERBOSE)", "+\t\t\t\t\t\t\tJobManager.verbose(\"-> cannot reuse existing index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\trebuildIndex(indexName, path);", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tindex = null; // will fall thru to createIfMissing & create a empty index for the rebuild all job to populate", "+\t\t\t\t\t}", "-\t\t\tif (currentIndexState == SAVED_STATE) { // rebuild index if existing file is missing or corrupt", "+\t\t\tif (currentIndexState == SAVED_STATE) { // rebuild index if existing file is missing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a8f9330475cdc892e42070ee2bab18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/APTProblem.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\t     \tpublic int getID()", "signatureAfterChange": "  \tpublic int getID()", "diff": ["-   ", "-\tpublic int getID() {", "-\t\treturn EclipseMessager.APT_PROBLEM_ID;", "+", "+\tpublic int getID() {", "+\t\t// If we have arguments, then we're quick-fixable", "+\t\tif (_arguments != null) {", "+\t\t\treturn EclipseMessager.APT_QUICK_FIX_PROBLEM_ID;", "+\t\t}", "+\t\telse {", "+\t\t\treturn EclipseMessager.APT_PROBLEM_ID;", "+\t\t}", "+\t}"]}], "num": 12344}