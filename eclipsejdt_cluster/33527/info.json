{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "880cfc38dddd3ea4d73c6931f06dc53a", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2da82ad46031dac59495f33207f965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " \tpublic void test050e()", "signatureAfterChange": " \tpublic void test050e()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\t<N extends B> N a(A<String> s) { return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method a(A<String>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\t<N> Object a(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method a(A<Number>) has the same erasure a(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t<N extends B> void b(A<String> s) {}\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method b(A<String>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\t<N extends B> B b(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method b(A<Number>) has the same erasure b(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tvoid c(A<String> s) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method c(A<String>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tB c(A<Number> n) { return null; }\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method c(A<Number>) has the same erasure c(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\"", "+/* javac 7", "+X.java:3: name clash: <N#1>a(A<Number>) and <N#2>a(A<String>) have the same erasure", "+        <N> Object a(A<Number> n) { return null; }", "+                   ^", "+  where N#1,N#2 are type-variables:", "+    N#1 extends Object declared in method <N#1>a(A<Number>)", "+    N#2 extends B declared in method <N#2>a(A<String>)", "+X.java:5: name clash: <N#1>b(A<Number>) and <N#2>b(A<String>) have the same erasure", "+        <N extends B> B b(A<Number> n) { return null; }", "+                        ^", "+  where N#1,N#2 are type-variables:", "+    N#1 extends B declared in method <N#1>b(A<Number>)", "+    N#2 extends B declared in method <N#2>b(A<String>)", "+X.java:7: name clash: c(A<Number>) and c(A<String>) have the same erasure", "+        B c(A<Number> n) { return null; }", "+          ^", "+3 errors", "+ */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb9f396eb2bbd3bf0fb0d1e6a796912", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 579, "methodNumberAfterChange": 579, "signatureBeforeChange": " \tpublic void test0561()", "signatureAfterChange": " \tpublic void test0561()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return;", "-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tvoid foo(A<String> a) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(A<String>) has the same erasure foo(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tObject foo(A<Integer> a) { return null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(A<Integer>) has the same erasure foo(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid test(A<Integer> a) { foo(a); }\\n\" + ", "+\t\t\t\"\t                          ^^^\\n\" + ", "+\t\t\t\"The method foo(A<String>) in the type X is not applicable for the arguments (A<Integer>)\\n\" + ", "+\t\t\t\"----------\\n\"", "-\t\tthis.runConformTest(", "+/* javac 7", "+X.java:3: name clash: foo(A<Integer>) and foo(A<String>) have the same erasure", "+        Object foo(A<Integer> a) { return null; }", "+               ^", "+X.java:4: method foo in class X cannot be applied to given types", "+        void test(A<Integer> a) { foo(a); }", "+                                  ^", "+  required: A<String>", "+  found: A<Integer>", "+2 errors", "+ */", "+\t\tthis.runNegativeTest(", "-\t\t\t\"\"", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tNumber foo(A<String> a) { return null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(A<String>) has the same erasure foo(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tInteger foo(A<Integer> a) { return null; }\\n\" + ", "+\t\t\t\"\t        ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Method foo(A<Integer>) has the same erasure foo(A<T>) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid test(A<Integer> a) { foo(a); }\\n\" + ", "+\t\t\t\"\t                          ^^^\\n\" + ", "+\t\t\t\"The method foo(A<String>) in the type X is not applicable for the arguments (A<Integer>)\\n\" + ", "+\t\t\t\"----------\\n\"", "+/* javac 7", "+X.java:3: name clash: foo(A<Integer>) and foo(A<String>) have the same erasure", "+        Integer foo(A<Integer> a) { return null; }", "+                ^", "+X.java:4: method foo in class X cannot be applied to given types", "+        void test(A<Integer> a) { foo(a); }", "+                                  ^", "+  required: A<String>", "+  found: A<Integer>", "+2 errors", "+ */"]}], "num": 33527}