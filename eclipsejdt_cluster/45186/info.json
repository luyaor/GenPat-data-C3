{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b3bada03e1d316ad95aed570f3f343f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2824caa3bc0748ac98ec432d3d21ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers)", "signatureAfterChange": " \tpublic void acceptClass(char[] packageName, char[] className, int modifiers)", "diff": ["-\t\tthis.requestor.acceptClass(", "-\t\t\tpackageName,", "-\t\t\tclassName,", "-\t\t\tcompletionName,", "-\t\t\tmodifiers,", "-\t\t\tthis.startPosition - this.offset,", "-\t\t\tthis.endPosition - this.offset,", "-\t\t\trelevance);", "+\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\tproposal.setSignature(createNonGenericTypeSignature(packageName, className));", "+\t\t\tproposal.setPackageName(packageName);", "+\t\t\tproposal.setTypeName(className);", "+\t\t\tproposal.setCompletion(completionName);", "+\t\t\tproposal.setFlags(modifiers);", "+\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\tproposal.setRelevance(relevance);", "+\t\t\tthis.requestor.accept(proposal);", "+\t\t\tif(DEBUG) {", "+\t\t\t\tthis.printDebug(proposal);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60c30dd2d0000a2ea73286570ca2c57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void acceptInterface( \t\tchar[] packageName, \t\tchar[] interfaceName, \t\tint modifiers)", "signatureAfterChange": " \tpublic void acceptInterface( \t\tchar[] packageName, \t\tchar[] interfaceName, \t\tint modifiers)", "diff": ["-\t\tthis.requestor.acceptInterface(", "-\t\t\tpackageName,", "-\t\t\tinterfaceName,", "-\t\t\tcompletionName,", "-\t\t\tmodifiers,", "-\t\t\tthis.startPosition - this.offset,", "-\t\t\tthis.endPosition - this.offset,", "-\t\t\trelevance);", "+\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\tproposal.setDeclarationSignature(packageName);", "+\t\t\tproposal.setSignature(createNonGenericTypeSignature(packageName, interfaceName));", "+\t\t\tproposal.setPackageName(packageName);", "+\t\t\tproposal.setTypeName(interfaceName);", "+\t\t\tproposal.setCompletion(completionName);", "+\t\t\tproposal.setFlags(modifiers | Flags.AccInterface);", "+\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\tproposal.setRelevance(relevance);", "+\t\t\tthis.requestor.accept(proposal);", "+\t\t\tif(DEBUG) {", "+\t\t\t\tthis.printDebug(proposal);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed227793ca5b78c3b1be970baf2dcfc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\tthis.requestor.acceptAnonymousType(", "-\t\t\t\tcurrentType.qualifiedPackageName(),", "-\t\t\t\tcurrentType.qualifiedSourceName(),", "-\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\tcompletion,", "-\t\t\t\tIConstants.AccPublic,", "-\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\trelevance);", "+\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION)) {", "+\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, this.actualCompletionPosition);", "+\t\t\t\tproposal.setDeclarationSignature(getSignature(currentType));", "+\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\t\t\tCharOperation.NO_CHAR));", "+\t\t\t\tproposal.setDeclarationPackageName(currentType.qualifiedPackageName());", "+\t\t\t\tproposal.setDeclarationTypeName(currentType.qualifiedSourceName());", "+\t\t\t\t//proposal.setParameterPackageNames(null);", "+\t\t\t\t//proposal.setParameterTypeNames(null);", "+\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t//proposal.setTypeName(null);", "+\t\t\t\tproposal.setCompletion(completion);", "+\t\t\t\tproposal.setFlags(Flags.AccPublic);", "+\t\t\t\tproposal.setReplaceRange(this.endPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\tif(DEBUG) {", "+\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 45186}