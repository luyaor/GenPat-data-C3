{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d192262be149863a72882416ec6c62e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b5b5faa5ae9105704c431dbf0b9b16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "signatureAfterChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "diff": ["-\t\t\t\t\t\treturn match == otherBound.leafComponentType(); // forbide: Collection <=  ? extends Collection<?>", "+\t\t\t\t\t\treturn TypeBinding.equalsEquals(match, otherBound.leafComponentType()); // forbide: Collection <=  ? extends Collection<?>", "-\t\t\t\t\tif (otherBound == this)", "+\t\t\t\t\tif (TypeBinding.equalsEquals(otherBound, this))", "-\t\t\t\t\t\treturn match == lowerBound.leafComponentType(); // forbide: Collection <=  ? super Collection<?>", "+\t\t\t\t\t\treturn TypeBinding.equalsEquals(match, lowerBound.leafComponentType()); // forbide: Collection <=  ? super Collection<?>", "-\t\t\tif (paramType.actualType() != otherParamType.actualType())", "+\t\t\tif (TypeBinding.notEquals(paramType.actualType(), otherParamType.actualType()))", "-\t\t\t\t\t\tif (enclosing != otherEnclosing)", "+\t\t\t\t\t\tif (TypeBinding.notEquals(enclosing, otherEnclosing))", "-\t\t\t\tif (argument == otherArgument)", "+\t\t\t\tif (TypeBinding.equalsEquals(argument, otherArgument))", "-\t\t\t\t\t\t\t\t\t&& wildcard.bound == wildcard.typeVariable().upperBound())", "+\t\t\t\t\t\t\t\t\t&& TypeBinding.equalsEquals(wildcard.bound, wildcard.typeVariable().upperBound()))", "-\t\t\t\t\t\t\t\t\t&& otherWildcard.bound == otherWildcard.typeVariable().upperBound())", "+\t\t\t\t\t\t\t\t\t&& TypeBinding.equalsEquals(otherWildcard.bound, otherWildcard.typeVariable().upperBound()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce5631e3b55a076355a482310847682e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static TypeBinding convertEliminatingTypeVariables(TypeBinding originalType, ReferenceBinding genericType, int rank, Set eliminatedVariables)", "signatureAfterChange": " \tpublic static TypeBinding convertEliminatingTypeVariables(TypeBinding originalType, ReferenceBinding genericType, int rank, Set eliminatedVariables)", "diff": ["-\t\t\t\t\tif (substitute != originalLeafComponentType) {", "+\t\t\t\t\tif (TypeBinding.notEquals(substitute, originalLeafComponentType)) {", "-\t\t\t\t\t\tif (substitutedArgument != originalArgument) {", "+\t\t\t\t\t\tif (TypeBinding.notEquals(substitutedArgument, originalArgument)) {", "-\t\t\t\t\tif (originalEnclosing != substitutedEnclosing || originalArguments != substitutedArguments) {", "+\t\t\t\t\tif (TypeBinding.notEquals(originalEnclosing, substitutedEnclosing) || originalArguments != substitutedArguments) {", "-\t\t\t\t\t\tif (substitutedArgument != originalArgument) {", "+\t\t\t\t\t\tif (TypeBinding.notEquals(substitutedArgument, originalArgument)) {", "-\t\t\t\t\tif (originalEnclosing != substitutedEnclosing || originalArguments != substitutedArguments) {", "+\t\t\t\t\tif (TypeBinding.notEquals(originalEnclosing, substitutedEnclosing) || originalArguments != substitutedArguments) {", "-\t\t\t\t\t\tif (substitutedBound != originalBound) {", "+\t\t\t\t\t\tif (TypeBinding.notEquals(substitutedBound, originalBound)) {", "-\t\t\t\t\t\tif (substitutedOtherBound != originalOtherBound) {", "+\t\t\t\t\t\tif (TypeBinding.notEquals(substitutedOtherBound, originalOtherBound)) {", "-\t\t\t\t\tif (substitutedBound != originalBound || substitutedOtherBounds != originalOtherBounds) {", "+\t\t\t\t\tif (TypeBinding.notEquals(substitutedBound, originalBound) || substitutedOtherBounds != originalOtherBounds) {"]}], "num": 41290}