{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e7fd6407a368d9ba85d829df42308fd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f8ba92af0eef9a2e05131e3c1ec31f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testGetOriginalField()", "signatureAfterChange": " public void testGetPrimaryField()", "diff": ["- */", "-public void testGetOriginalField() {", "+public void testGetPrimaryField() {", "-\tIJavaElement original = this.copy.getOriginal(type.getField(\"FIELD\"));", "-\tassertTrue(\"Element is not a field\", original instanceof IField && !((ICompilationUnit)original.getParent().getParent()).isWorkingCopy());", "-\tassertTrue(\"Element should exist\", original.exists());", "+\tIJavaElement primary = type.getField(\"FIELD\").getPrimaryElement();", "+\tassertTrue(\"Element is not a field\", primary instanceof IField && !((ICompilationUnit)primary.getParent().getParent()).isWorkingCopy());", "+\tassertTrue(\"Element should exist\", primary.exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea17fe8b3d1b7547cb4d5f3c1ba8a70d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testGetOriginalInnerType()", "signatureAfterChange": " public void testGetPrimaryInnerType()", "diff": ["-public void testGetOriginalInnerType() {", "+public void testGetPrimaryInnerType() {", "-\tIJavaElement original = this.copy.getOriginal(innerInnerType);", "-\tassertTrue(\"Element is not a method\", original instanceof IType);", "-\tassertTrue(\"Element should exist\", original.exists());", "+\tIJavaElement primary = innerInnerType.getPrimaryElement();", "+\tassertTrue(\"Element is not a method\", primary instanceof IType);", "+\tassertTrue(\"Element should exist\", primary.exists());", "-\tIJavaElement parent= original.getParent();", "+\tIJavaElement parent= primary.getParent();"]}], "num": 7879}