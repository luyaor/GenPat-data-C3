{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a56889dce47b1cef02ac8ea6be0112ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "330fb14e083523002e640ffcc45e7748", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "8420a33c39c822f161e5050f24658631db678656", "commitAfterChange": "651a64b9ab1e2ddee0f30be8b2beb34f30818321", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["-\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(superClass);", "-\t\t\tif (level != null && matchedClassContainer)", "-\t\t\t\tthis.patternLocator.matchReportReference(superClass, enclosingElement, level.intValue(), this);", "+\t\t\treportMatchingSuper(superClass, enclosingElement, nodeSet, matchedClassContainer);", "-\t\t\t\tTypeReference superInterface = superInterfaces[i];", "-\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(superInterface);", "-\t\t\t\tif (level != null && matchedClassContainer)", "-\t\t\t\t\tthis.patternLocator.matchReportReference(superInterface, enclosingElement, level.intValue(), this);", "+\t\t\t\treportMatchingSuper(superInterfaces[i], enclosingElement, nodeSet, matchedClassContainer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b2de7867b51668af057a95d57dc0581", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "bcb46990486d868577608d099b51c359510600ab", "commitAfterChange": "76641371763d25b26245b79d3162c6759e069b9e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["+\tboolean enclosesElement = encloses(enclosingElement);", "-\tif (accuracy > -1 && encloses(enclosingElement)) {", "+\tif (accuracy > -1 && enclosesElement) {", "-\t\t\t\t\tif (level.intValue() > -1 && encloses(enclosingElement)) {", "+\t\t\t\t\tif (level.intValue() > -1 && enclosesElement) {", "-\t\tfor (int i=0, al=type.annotations.length; i<al; i++) {", "-\t\t\tTypeReference typeRef = type.annotations[i].type;", "-\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeRef);", "-\t\t\tif (level != null && matchedClassContainer) {", "-\t\t\t\tthis.patternLocator.matchReportReference(typeRef, enclosingElement, type.binding, level.intValue(), this);", "-\t\t\t}", "-\t\t}", "+\t\treportMatching(type.annotations, enclosingElement, type.binding, nodeSet, matchedClassContainer, enclosesElement);", "-\t\t\t\t\tif (encloses(enclosingElement))", "+\t\t\t\t\tif (enclosesElement) {", "+\t\t\t\t\t}"]}], "num": 15474}