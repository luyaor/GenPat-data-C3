{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a9cec328ad9250ecd06c5980f34f27b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7385cfa656f9667381eebcedef8140e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement switchStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation annotation, BlockScope scope)", "diff": ["+\tpublic boolean visit(NormalAnnotation annotation, BlockScope scope) {", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameAT);", "+\t\tif (this.preferences.insert_space_after_at_in_annotation) {", "+\t\t\tthis.scribe.space();", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_opening_paren_in_annotation);", "+\t\tif (this.preferences.insert_space_after_opening_paren_in_annotation) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs;", "+\t\tif (memberValuePairs != null) {", "+\t\t\tint length = memberValuePairs.length;", "+\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\t\tmemberValuePairs[i].traverse(this, scope);", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_annotation);", "+\t\t\t\tif (this.preferences.insert_space_after_comma_in_annotation) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\tmemberValuePairs[length - 1].traverse(this, scope);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_annotation);", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ba7396c502ce4abde885608c15c680", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic boolean visit(ThisReference thisReference, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation annotation, CompilationUnitScope scope)", "diff": ["+\t}", "+\tpublic boolean visit(NormalAnnotation annotation, CompilationUnitScope scope) {", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameAT);", "+\t\tif (this.preferences.insert_space_after_at_in_annotation) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_opening_paren_in_annotation);", "+\t\tif (this.preferences.insert_space_after_opening_paren_in_annotation) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs;", "+\t\tif (memberValuePairs != null) {", "+\t\t\tint length = memberValuePairs.length;", "+\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\t\tmemberValuePairs[i].traverse(this, scope);", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_annotation);", "+\t\t\t\tif (this.preferences.insert_space_after_comma_in_annotation) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tmemberValuePairs[length - 1].traverse(this, scope);", "+\t\t}", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_annotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f309f3cb126159fc680c9c048af1a0bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation annotation, ClassScope scope)", "diff": ["+\t}", "+\tpublic boolean visit(NormalAnnotation annotation, ClassScope scope) {", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameAT);", "+\t\tif (this.preferences.insert_space_after_at_in_annotation) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_opening_paren_in_annotation);", "+\t\tif (this.preferences.insert_space_after_opening_paren_in_annotation) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "+\t\tMemberValuePair[] memberValuePairs = annotation.memberValuePairs;", "+\t\tif (memberValuePairs != null) {", "+\t\t\tint length = memberValuePairs.length;", "+\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\t\tmemberValuePairs[i].traverse(this, scope);", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_annotation);", "+\t\t\t\tif (this.preferences.insert_space_after_comma_in_annotation) {", "+\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tmemberValuePairs[length - 1].traverse(this, scope);", "+\t\t}", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_annotation);", "+\t\treturn false;", "+\t}"]}], "num": 72542}