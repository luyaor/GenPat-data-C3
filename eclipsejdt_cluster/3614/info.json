{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2f2bcc2dbfb31f883e4f62cdb2d3950", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f124ac905060f45f669cb1f6d372a0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate int internalBoundCheck(Substitution substitution, TypeBinding argumentType, Scope scope)", "signatureAfterChange": " \tprivate int internalBoundCheck(Substitution substitution, TypeBinding argumentType, Scope scope)", "diff": ["-\t\tif (argumentType == TypeBinding.NULL || argumentType == this) {", "+\t\tif (argumentType == TypeBinding.NULL || TypeBinding.equalsEquals(argumentType, this)) {", "-\t\t\t\t\tif (wildcardBound == this)", "+\t\t\t\t\tif (TypeBinding.equalsEquals(wildcardBound, this))", "-\t    \tif (substitutedSuperType != argumentType) {", "+\t    \tif (TypeBinding.notEquals(substitutedSuperType, argumentType)) {", "-\t    \tif (substitutedSuperType != argumentType) {", "+\t    \tif (TypeBinding.notEquals(substitutedSuperType, argumentType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a41afdad29d8058612d98b5d913d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t\t&& sourceType == declaringClass", "+\t\t\t\t\t\t\t&& TypeBinding.equalsEquals(sourceType, declaringClass)", "-\t\t\t\t\t\t\tif ((sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body", "+\t\t\t\t\t\t\tif ((TypeBinding.equalsEquals(sourceType, declaringClass) || TypeBinding.equalsEquals(sourceType.superclass, declaringClass)) // enum constant body", "-\t\t\t\t\t\t\t\t&& fieldBinding.declaringClass != this.actualReceiverType", "+\t\t\t\t\t\t\t\t&& TypeBinding.notEquals(fieldBinding.declaringClass, this.actualReceiverType)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5cd94193d0c49fd7a45d16877ef33b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "signatureAfterChange": " \tprotected boolean isAcceptableMethod(MethodBinding one, MethodBinding two)", "diff": ["-\t\t\t\tif (oneParam == twoParam || oneParam.isCompatibleWith(twoParam)) {", "+\t\t\t\tif (TypeBinding.equalsEquals(oneParam, twoParam) || oneParam.isCompatibleWith(twoParam)) {", "-\t\t\t\t\t\t\tif (oneParam == eType || oneParam.isCompatibleWith(eType))", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(oneParam, eType) || oneParam.isCompatibleWith(eType))", "-\t\t\t\t\t\t\tif (oType == eType || oType.isCompatibleWith(eType))", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(oType, eType) || oType.isCompatibleWith(eType))", "-\t\t\t\tif (oneParams[i] != twoParams[i] && !oneParams[i].isCompatibleWith(twoParams[i]))", "+\t\t\t\tif (TypeBinding.notEquals(oneParams[i], twoParams[i]) && !oneParams[i].isCompatibleWith(twoParams[i]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0430ce9ecac2865506cff359179ee7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\t\tif (sourceType == superType) {", "+\t\tif (TypeBinding.equalsEquals(sourceType, superType)) {", "-\t\t\t\tif (current.isHierarchyBeingActivelyConnected() && current == sourceType) {", "+\t\t\t\tif (current.isHierarchyBeingActivelyConnected() && TypeBinding.equalsEquals(current, sourceType)) {", "-\t\t\t\tif (sourceType == parentType) {", "+\t\t\t\tif (TypeBinding.equalsEquals(sourceType, parentType)) {", "-\t\t\t\t\tif (sourceType == anInterface) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(sourceType, anInterface)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc473cdd995855b34328259728402082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, final InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\tif (original.declaringClass == original2.declaringClass)", "+\t\t\t\t\tif (TypeBinding.equalsEquals(original.declaringClass, original2.declaringClass))", "-\t\t\t\t\t\tif (original.declaringClass == superType || !(superType instanceof ReferenceBinding)) {", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(original.declaringClass, superType) || !(superType instanceof ReferenceBinding)) {", "-\t\t\t\t\t\tif (original2.declaringClass == superType || !(superType instanceof ReferenceBinding)) {", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(original2.declaringClass, superType) || !(superType instanceof ReferenceBinding)) {", "-\t\t\t\t\t\tif (original.returnType != original2.returnType) {", "+\t\t\t\t\t\tif (TypeBinding.notEquals(original.returnType, original2.returnType)) {"]}], "num": 3614}