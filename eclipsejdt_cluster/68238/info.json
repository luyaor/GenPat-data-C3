{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b4b9f8206e786627e63fc6ddc6cc53b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f8d579e0a188f70a8b46ba99328a387", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "679aa0fd26f479e5f5eacae8934cf6323becfdda", "commitAfterChange": "f4c6f76ca25c7f1cc15835d3fa1f5998a02ab891", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tprivate static SearchPattern createFieldPattern(String patternString, int limitTo, int matchRule)", "diff": ["-\tprivate static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive) {", "+\tprivate static SearchPattern createFieldPattern(String patternString, int limitTo, int matchRule) {", "-\t\tint matchRule = isCaseSensitive ? matchMode | R_CASE_SENSITIVE : matchMode;", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c77d751334e34d6a5b4591964ecf1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "679aa0fd26f479e5f5eacae8934cf6323becfdda", "commitAfterChange": "f4c6f76ca25c7f1cc15835d3fa1f5998a02ab891", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate static SearchPattern createMethodPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " \tprivate static SearchPattern createMethodPattern(String patternString, int limitTo, int matchRule)", "diff": ["-\tprivate static SearchPattern createMethodPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive) {", "+\tprivate static SearchPattern createMethodPattern(String patternString, int limitTo, int matchRule) {", "-\t\tint matchRule = isCaseSensitive ? matchMode | R_CASE_SENSITIVE : matchMode;", "-\t"]}], "num": 68238}