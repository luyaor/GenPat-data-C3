{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "684b4076a34e59bdbe9714a2b645376c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8abe5652c6075cda07890537448e1965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 75, "signatureBeforeChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.EnumDeclaration", "-\t\t\t\t&& (statement.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsLocalTypeMASK) != 0) {", "-\t\t\tswitch(this.ast.apiLevel) {", "-\t\t\t\tcase AST.JLS2 :", "-\t\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t\tcase AST.JLS3 :", "-\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(convert((org.eclipse.jdt.internal.compiler.ast.EnumDeclaration) statement));", "-\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "-\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());", "-\t\t\t\t\treturn typeDeclarationStatement;", "-\t\t\t}", "-\t\t}\t\t", "-\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) convert((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) statement);", "-\t\t\tif (typeDeclaration == null) {", "-\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t} else {", "-\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(typeDeclaration);", "+\t\t\tASTNode result = convert((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) statement);", "+\t\t\tif (result.getNodeType() == ASTNode.ENUM_DECLARATION) {", "-\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "-\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());\t\t\t\t\t", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t\t\t\tAbstractTypeDeclaration typeDeclAST3 = typeDeclarationStatement.getDeclaration();", "-\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDeclAST3.getStartPosition(), typeDeclAST3.getLength());\t\t\t\t\t", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement((EnumDeclaration) result);", "+\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "+\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());", "+\t\t\t\t\t\treturn typeDeclarationStatement;", "-\t\t\t\treturn typeDeclarationStatement;", "+\t\t\t} else {", "+\t\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) result;", "+\t\t\t\tif (typeDeclaration == null) {", "+\t\t\t\t\treturn createFakeEmptyStatement(statement);", "+\t\t\t\t} else {", "+\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(typeDeclaration);", "+\t\t\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "+\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());\t\t\t\t\t", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\t\t\tAbstractTypeDeclaration typeDeclAST3 = typeDeclarationStatement.getDeclaration();", "+\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDeclAST3.getStartPosition(), typeDeclAST3.getLength());\t\t\t\t\t", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn typeDeclarationStatement;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4743118a207a825b276bf3b98be2776", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7bf89e29c34a348a2ed388f7cdb6c1016941cf61", "commitAfterChange": "cd5adcef3921beea7df4f6703ab58225bdb4ec39", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t\tif (statement instanceof org.eclipse.jdt.internal.compiler.ast.AnnotationTypeDeclaration", "-\t\t\t\t&& (statement.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsLocalTypeMASK) != 0) {", "-\t\t\tswitch(this.ast.apiLevel) {", "-\t\t\t\tcase AST.JLS2 :", "-\t\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t\tcase AST.JLS3 :", "-\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(convert((org.eclipse.jdt.internal.compiler.ast.AnnotationTypeDeclaration) statement));", "-\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "-\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());", "-\t\t\t\t\treturn typeDeclarationStatement;", "-\t\t\t}", "-\t\t}", "-\t\t\tif (result.getNodeType() == ASTNode.ENUM_DECLARATION) {", "-\t\t\t\tswitch(this.ast.apiLevel) {", "-\t\t\t\t\tcase AST.JLS2 :", "-\t\t\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t\t\tcase AST.JLS3 :", "-\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement((EnumDeclaration) result);", "-\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "-\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());", "-\t\t\t\t\t\treturn typeDeclarationStatement;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) result;", "-\t\t\t\tif (typeDeclaration == null) {", "-\t\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t\t} else {", "-\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(typeDeclaration);", "+\t\t\tswitch(result.getNodeType()) {", "+\t\t\t\tcase ASTNode.ENUM_DECLARATION:", "-\t\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "-\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());\t\t\t\t\t", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\treturn createFakeEmptyStatement(statement);", "-\t\t\t\t\t\t\tAbstractTypeDeclaration typeDeclAST3 = typeDeclarationStatement.getDeclaration();", "-\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDeclAST3.getStartPosition(), typeDeclAST3.getLength());\t\t\t\t\t", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement((EnumDeclaration) result);", "+\t\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "+\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());", "+\t\t\t\t\t\t\treturn typeDeclarationStatement;", "-\t\t\t\t\treturn typeDeclarationStatement;", "-\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ASTNode.ANNOTATION_TYPE_DECLARATION :", "+\t\t\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\t\t\treturn createFakeEmptyStatement(statement);", "+\t\t\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement((AnnotationTypeDeclaration) result);", "+\t\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "+\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());", "+\t\t\t\t\t\t\treturn typeDeclarationStatement;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tTypeDeclaration typeDeclaration = (TypeDeclaration) result;", "+\t\t\t\t\tif (typeDeclaration == null) {", "+\t\t\t\t\t\treturn createFakeEmptyStatement(statement);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tTypeDeclarationStatement typeDeclarationStatement = this.ast.newTypeDeclarationStatement(typeDeclaration);", "+\t\t\t\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\t\t\t\tcase AST.JLS2 :", "+\t\t\t\t\t\t\t\tTypeDeclaration typeDecl = typeDeclarationStatement.getTypeDeclaration();", "+\t\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDecl.getStartPosition(), typeDecl.getLength());\t\t\t\t\t", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\t\t\t\tAbstractTypeDeclaration typeDeclAST3 = typeDeclarationStatement.getDeclaration();", "+\t\t\t\t\t\t\t\ttypeDeclarationStatement.setSourceRange(typeDeclAST3.getStartPosition(), typeDeclAST3.getLength());\t\t\t\t\t", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn typeDeclarationStatement;", "+\t\t\t\t\t}"]}], "num": 16531}