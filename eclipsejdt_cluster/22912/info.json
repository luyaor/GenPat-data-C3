{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69edeeba588fe36a85788d95b748cb86", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281518e604171c8a7476f8e75bdfb2c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "c20e678de306d96dc52329a1b146045377d02fc2", "commitAfterChange": "dabb194bc3f00ca0451d7f77892036995b490fbd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["+\t        if (this.genericCast instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding referenceCast = (ReferenceBinding) this.genericCast;", "+\t\t\t\tif (!referenceCast.canBeSeenBy(scope)) {", "+\t\t        \tscope.problemReporter().invalidType(this, ", "+\t\t        \t\t\tnew ProblemReferenceBinding(", "+\t\t\t\t\t\t\t\tCharOperation.splitOn('.', referenceCast.shortReadableName()),", "+\t\t\t\t\t\t\t\treferenceCast,", "+\t\t\t\t\t\t\t\tProblemReasons.NotVisible));", "+\t\t\t\t}", "+\t        }\t\t\t        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46adb7299850fb9e746ce64dce007308", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "00000b60f562c2a527973770ffa6c4e4b7e3b76a", "commitAfterChange": "78b625fa215070da4df50c1048fd705a8af21bd9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tReferenceBinding enclosingInstanceReference = null;", "+\t\t\t} else if (!(enclosingInstanceReference = (ReferenceBinding) enclosingInstanceType).canBeSeenBy(scope)) {", "+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=317212", "+\t\t\t\tenclosingInstanceType = new ProblemReferenceBinding(", "+\t\t\t\t\t\t\tenclosingInstanceReference.compoundName,", "+\t\t\t\t\t\t\tenclosingInstanceReference,", "+\t\t\t\t\t\t\tProblemReasons.NotVisible);", "+\t\t\t\tscope.problemReporter().invalidType(this.enclosingInstance, enclosingInstanceType);", "+\t\t\t\thasError = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b07c61626c3805df8768e3aac4ca2958", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "c20e678de306d96dc52329a1b146045377d02fc2", "commitAfterChange": "dabb194bc3f00ca0451d7f77892036995b490fbd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["+\t\t        if (this.genericCast instanceof ReferenceBinding) {", "+\t\t\t\t\tReferenceBinding referenceCast = (ReferenceBinding) this.genericCast;", "+\t\t\t\t\tif (!referenceCast.canBeSeenBy(scope)) {", "+\t\t\t        \tscope.problemReporter().invalidType(this, ", "+\t\t\t        \t\t\tnew ProblemReferenceBinding(", "+\t\t\t\t\t\t\t\t\tCharOperation.splitOn('.', referenceCast.shortReadableName()),", "+\t\t\t\t\t\t\t\t\treferenceCast,", "+\t\t\t\t\t\t\t\t\tProblemReasons.NotVisible));", "+\t\t\t\t\t}", "+\t\t        }\t\t\t\t        "]}], "num": 22912}