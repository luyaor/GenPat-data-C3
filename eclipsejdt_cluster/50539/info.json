{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceffb641b78b91de3e7fd09f82d66fc6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc2acce8a91548d7f107420539efd25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "f3bba67d7292a507e1b3691e11f35ff1c9658d01", "commitAfterChange": "5ba107df633d1beada69a1a39d8b4efe7c8b77f6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \t\r \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "signatureAfterChange": "\r \t\r \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "diff": ["+// replaces 2 calls to addNamespaceReference\r", "+\t\tcompilationUnitScope().recordReference(compoundName);\r", "+\t\t\tcompilationUnitScope().recordTypeReference(superType); // to record supertypes\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7817fa37c3efb77791b4bddf0093810d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f3bba67d7292a507e1b3691e11f35ff1c9658d01", "commitAfterChange": "5ba107df633d1beada69a1a39d8b4efe7c8b77f6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tpublic final TypeBinding getType(char[][] compoundName)", "signatureAfterChange": "\r \tpublic final TypeBinding getType(char[][] compoundName)", "diff": ["-\t\t\tif (binding != null)\r", "-\t\t\t\treturn binding;\r", "+\t\t\tif (binding != null) return binding;\r", "+\r", "+// replaces 3 calls to addNamespaceReference & 1 to addTypeReference\r", "+\t\tcompilationUnitScope().recordReference(compoundName);\r", "-\t\t\t\tnew ProblemPackageBinding(compoundName[0], NotFound));\r", "-\t\t\t// record extra reference to pkg\r", "+\t\t\t\tnew ProblemPackageBinding(compoundName[0], NotFound)); // record extra reference to pkg\r", "-\t\t\t\tbinding = packageBinding.getTypeOrPackage(compoundName[currentIndex++]);\r", "-\t\t\t\t// does not check visibility\r", "+\t\t\t\tbinding = packageBinding.getTypeOrPackage(compoundName[currentIndex++]); // does not check visibility\r", "+\r", "+// is this needed?\r", "+\t\tcompilationUnitScope().recordTypeReference(typeBinding); // to record supertypes\r"]}], "num": 50539}