{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "959af9546a55a607167a2079397704d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a2aeb4c79cece4281221d720b90899", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a0827b5ed51f9fc68d50a6070897f74217550da1", "commitAfterChange": "266357791826a02f1dd87ad4cdccffd484f96fd9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate BoundSet resolve() throws InferenceFailureException", "signatureAfterChange": " \tprivate BoundSet resolve(InferenceVariable[] toResolve) throws InferenceFailureException", "diff": ["-\tprivate /*@Nullable*/ BoundSet resolve() throws InferenceFailureException {", "+\tprivate /*@Nullable*/ BoundSet resolve(InferenceVariable[] toResolve) throws InferenceFailureException {", "-\t\t\twhile ((variableSet = getSmallestVariableSet(tmpBoundSet)) != null) {", "+\t\t\twhile ((variableSet = getSmallestVariableSet(tmpBoundSet, toResolve)) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c609cfe5f5be7f13ae5d25f269ac9ea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6ab8a052a7d8ac7a830c6733e19e9b30c380dad7", "commitAfterChange": "ec64763fa4e57b4943311ee555e5ddce81854cf2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic BoundSet solve() throws InferenceFailureException", "signatureAfterChange": " \tpublic BoundSet solve(boolean inferringApplicability) throws InferenceFailureException", "diff": ["-\tpublic /*@Nullable*/ BoundSet solve() throws InferenceFailureException {", "+\tpublic /*@Nullable*/ BoundSet solve(boolean inferringApplicability) throws InferenceFailureException {", "+\t\tif (inferringApplicability)", "+\t\t\tthis.b2 = this.currentBounds.copy(); // Preserve the result after reduction, without effects of resolve() for later use in invocation type inference.", "+\t}"]}], "num": 43610}