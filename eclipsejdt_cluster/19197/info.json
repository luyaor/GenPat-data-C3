{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be680a9182b73dc9ac379c987293ce8a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d989c20b1500a70a8243183d842f6a01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "0289aebb6fa627fea939e01f195711f9b91bb1a6", "commitAfterChange": "89326fe08eb871063f0f302034a5879455c90920", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope)", "signatureAfterChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope)", "diff": ["-\t\tParameterizedTypeBinding parameterizedType = scope.environment().createParameterizedType(genericType, types, genericType.enclosingType());", "-\t\tMethodBinding [] choices = parameterizedType.getMethods(theAbstractMethod.selector);", "+\t\tReferenceBinding declaringType = scope.environment().createParameterizedType(genericType, types, genericType.enclosingType());", "+\t\tdeclaringType = (ReferenceBinding) declaringType.findSuperTypeOriginatingFrom(theAbstractMethod.declaringClass);", "+\t\tMethodBinding [] choices = declaringType.getMethods(theAbstractMethod.selector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83a31b4cdebe57636e9c23934bd9d83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "0289aebb6fa627fea939e01f195711f9b91bb1a6", "commitAfterChange": "89326fe08eb871063f0f302034a5879455c90920", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope)", "signatureAfterChange": " \t \tpublic MethodBinding getSingleAbstractMethod(Scope scope)", "diff": ["-\t\tReferenceBinding rawType = (ReferenceBinding) scope.environment().convertToRawType(genericType, true);", "-\t\tMethodBinding [] choices = rawType.getMethods(theAbstractMethod.selector);", "+\t\tReferenceBinding declaringType = (ReferenceBinding) scope.environment().convertToRawType(genericType, true);", "+\t\tdeclaringType = (ReferenceBinding) declaringType.findSuperTypeOriginatingFrom(theAbstractMethod.declaringClass);", "+\t\tMethodBinding [] choices = declaringType.getMethods(theAbstractMethod.selector);"]}], "num": 19197}