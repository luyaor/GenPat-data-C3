{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4f3d8a18d5214124ff53b5ee6e2d1a0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1acfdcd4e3e7c05a3fb155117f7272aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 507, "methodNumberAfterChange": 507, "signatureBeforeChange": " \tpublic void test503()", "signatureAfterChange": " \tpublic void test503()", "diff": ["-\t\t\t\"class XA {}\\n\" + ", "-\t\t\t\"interface XB {\\n\" + ", "-\t\t\t\"\tXB CONST = new XB(){ public String toString() { return \\\"SUCCESS\\\"; }};\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"class XAB extends XA implements XB {}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"public class X <E extends XA&XB> {\\n\" + ", "-\t\t\t\"\tE e;\\n\" + ", "-\t\t\t\"  public static void main(String[] args) {\\n\" + ", "-\t\t\t\"\t  System.out.print(new X<XAB>().e.CONST);\\n\" + ", "-\t\t\t\"\t  new X<XAB>().foo();\\n\" + ", "-\t\t\t\"  }\\n\" + ", "-\t\t\t\"  public void foo() {\\n\" + ", "-\t\t\t\"    System.out.print(this.e.CONST);\\n\" + ", "-\t\t\t\"  }\\n\" + ", "-\t\t\t\"}\\n\",", "+\t\t\t\t\"class XA {}\\n\" + ", "+\t\t\t\t\"interface XB {\\n\" + ", "+\t\t\t\t\"\tXB CONST = new XB(){ public String toString() { return \\\"SUCCESS\\\"; }};\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class XAB extends XA implements XB {}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"public class X <E extends XA&XB> {\\n\" + ", "+\t\t\t\t\"\tE e;\\n\" + ", "+\t\t\t\t\"  public static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"\t  System.out.print(new X<XAB>().e.CONST);\\n\" + ", "+\t\t\t\t\"\t  new X<XAB>().foo();\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"  public void foo() {\\n\" + ", "+\t\t\t\t\"    System.out.print(this.e.CONST);\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"}\\n\",", "-\t\t\t\"     3  aload_0 [this]\\n\" + ", "-\t\t\t\"     4  getfield X.e : XA [29]\\n\" + ", "-\t\t\t\"     7  pop\\n\" + ", "-\t\t\t\"     8  getstatic XB.CONST : XB [48]\\n\" + ", "-\t\t\t\"    11  invokevirtual java.io.PrintStream.print(java.lang.Object) : void [37]\\n\" + ", "-\t\t\t\"    14  return\\n\" + ", "+\t\t\t\"     3  getstatic XB.CONST : XB [48]\\n\" + ", "+\t\t\t\"     6  invokevirtual java.io.PrintStream.print(java.lang.Object) : void [37]\\n\" + ", "+\t\t\t\"     9  return\\n\" + ", "-\t\t\t\"        [pc: 14, line: 15]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 15]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 15] local: this index: 0 type: X<E>\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X<E>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb36f21e71fa69a56060fc7824b29af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 507, "methodNumberAfterChange": 507, "signatureBeforeChange": " \tpublic void test505()", "signatureAfterChange": " \tpublic void test505()", "diff": ["-\t\t\t\"    1  invokespecial java/lang/Object.<init>()V [13]\\n\" + ", "+\t\t\t\"    1  invokespecial java.lang.Object() [13]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X<E>\\n\" + ", "-\t\t\t\"     4  invokespecial X.<init>()V [22]\\n\" + ", "-\t\t\t\"     7  invokevirtual X.foo()V [25]\\n\" + ", "+\t\t\t\"     4  invokespecial X() [22]\\n\" + ", "+\t\t\t\"     7  invokevirtual X.foo() : void  [25]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 11] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 11] local: args index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\"     5  invokespecial X$1.<init>(LX;)V [32]\\n\" + ", "-\t\t\t\"     8  invokevirtual X$1.run()V [35]\\n\" + ", "-\t\t\t\"    11  getstatic java/lang/System.out Ljava/io/PrintStream; [41]\\n\" + ", "+\t\t\t\"     5  invokespecial X$1(X) [32]\\n\" + ", "+\t\t\t\"     8  invokevirtual X$1.run() : void  [35]\\n\" + ", "+\t\t\t\"    11  getstatic java.lang.System.out : java.io.PrintStream [41]\\n\" + ", "-\t\t\t\"    15  getfield X.e LXA; [43]\\n\" + ", "+\t\t\t\"    15  getfield X.e : XA [43]\\n\" + ", "-\t\t\t\"    19  getstatic XB.CONST LXB; [49]\\n\" + ", "-\t\t\t\"    22  invokevirtual java/io/PrintStream.print(Ljava/lang/Object;)V [55]\\n\" + ", "+\t\t\t\"    19  getstatic XB.CONST : XB [49]\\n\" + ", "+\t\t\t\"    22  invokevirtual java.io.PrintStream.print(java.lang.Object) : void  [55]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 26] local: this index: 0 type: LX;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 26] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 26] local: this index: 0 type: LX<TE;>;\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 26] local: this index: 0 type: X<E>\\n\" + "]}], "num": 11951}