{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c1cb49e54b5a314b572596c688cf1fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f9c618297d0c2e6ff3c12b328a998cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "afec7d4a120ad9d3de76bf79cb0366f8fe30669d", "commitAfterChange": "57c6d386f529d0e8572acc77526ab668fb7c3818", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["+//\t\tif (isConditionOptimizedTrue){", "+//\t\t\tif (!this.thenExit) {", "+//\t\t\t\tmergedInfo = thenFlowInfo;", "+//\t\t\t} else {", "+//\t\t\t\tmergedInfo = elseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+//\t\t\t}", "+//", "+//\t\t} else if (isConditionOptimizedFalse) {", "+//\t\t\tif (!elseExit) {", "+//\t\t\t\tmergedInfo = elseFlowInfo;", "+//\t\t\t} else {", "+//\t\t\t\tmergedInfo = thenFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+//\t\t\t}", "+//", "+//\t\t} else {", "+//\t\t\tmergedInfo = thenFlowInfo.mergedWith(elseFlowInfo.unconditionalInits());", "+//\t\t}", "-\t\t\t\tmergedInfo = thenFlowInfo;", "+\t\t\t\tmergedInfo = thenFlowInfo.addPotentialInitializationsFrom(elseFlowInfo);", "-\t\t\t\tmergedInfo = elseFlowInfo;", "+\t\t\t\tmergedInfo = elseFlowInfo.addPotentialInitializationsFrom(thenFlowInfo);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf1b4bcd18d736674c99c20de2cafe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "60a922d3450d3d4ca0069aed06b962f98d840e7f", "commitAfterChange": "8f6412118a608d2ddb0cee101b9e84a927a8f534", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// optimizing the jump around the ELSE part", "-\t\tthis.thenExit =  thenFlowInfo == FlowInfo.DEAD_END;", "+\t\t// code gen: optimizing the jump around the ELSE part", "+\t\tthis.thenExit =  !thenFlowInfo.isReachable();", "-\t\tboolean elseExit = elseFlowInfo == FlowInfo.DEAD_END;", "-\t\t", "-//\t\tif (isConditionOptimizedTrue){", "-//\t\t\tif (!this.thenExit) {", "-//\t\t\t\tmergedInfo = thenFlowInfo;", "-//\t\t\t} else {", "-//\t\t\t\tmergedInfo = elseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "-//\t\t\t}", "-//", "-//\t\t} else if (isConditionOptimizedFalse) {", "-//\t\t\tif (!elseExit) {", "-//\t\t\t\tmergedInfo = elseFlowInfo;", "-//\t\t\t} else {", "-//\t\t\t\tmergedInfo = thenFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "-//\t\t\t}", "-//", "-//\t\t} else {", "-//\t\t\tmergedInfo = thenFlowInfo.mergedWith(elseFlowInfo.unconditionalInits());", "-//\t\t}", "-\t\t\tif (!this.thenExit) {", "+\t\t\tif (thenFlowInfo != FlowInfo.DEAD_END) {", "-\t\t\tif (!elseExit) {", "+\t\t\tif (elseFlowInfo != FlowInfo.DEAD_END) {"]}], "num": 25276}