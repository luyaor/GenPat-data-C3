{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5546c1c5ae87aa82af43f553f8c28dd5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b958ba523a0d1237f115c5643e06fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "86113d82738e778f8e0f07729ab352d227a867ad", "commitAfterChange": "2d89f0516f5e5910bcd18015e8090ed0805dbb4e", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "signatureAfterChange": " public void incorrectSwitchType(Expression expression, TypeBinding testType)", "diff": ["-\t\t\tthis.handle(", "-\t\t\t\tIProblem.IncorrectSwitchType,", "-\t\t\t\tnew String[] {new String(testType.readableName())},", "-\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "-\t\t\t\texpression.sourceStart,", "-\t\t\t\texpression.sourceEnd);", "+\t\t\tif (this.options.sourceLevel < ClassFileConstants.JDK1_5 && testType.isEnum()) {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.SwitchOnEnumNotBelow15,", "+\t\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\t\texpression.sourceEnd);", "+\t\t\t} else {", "+\t\t\t\tthis.handle(", "+\t\t\t\t\t\tIProblem.IncorrectSwitchType,", "+\t\t\t\t\t\tnew String[] {new String(testType.readableName())},", "+\t\t\t\t\t\tnew String[] {new String(testType.shortReadableName())},", "+\t\t\t\t\t\texpression.sourceStart,", "+\t\t\t\t\t\texpression.sourceEnd);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b74548f860f8abff6e7c604e3b819f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 211, "signatureBeforeChange": " public void javadocDeprecatedType(TypeBinding type, ASTNode location, int modifiers)", "signatureAfterChange": " public void javadocDeprecatedType(TypeBinding type, ASTNode location, int modifiers)", "diff": ["-\t\tthis.handle(", "-\t\t\tIProblem.JavadocUsingDeprecatedType,", "-\t\t\tnew String[] {new String(type.readableName())},", "-\t\t\tnew String[] {new String(type.shortReadableName())},", "-\t\t\tseverity,", "-\t\t\tlocation.sourceStart,", "-\t\t\tlocation.sourceEnd);", "+\t\tif (type.isMemberType() && type instanceof ReferenceBinding && !javadocVisibility(this.options.reportInvalidJavadocTagsVisibility, ((ReferenceBinding)type).modifiers)) {", "+\t\t\tthis.handle(IProblem.JavadocNotVisibleReference, NoArgument, NoArgument, location.sourceStart, location.sourceEnd);", "+\t\t} else {", "+\t\t\tthis.handle(", "+\t\t\t\tIProblem.JavadocUsingDeprecatedType,", "+\t\t\t\tnew String[] {new String(type.readableName())},", "+\t\t\t\tnew String[] {new String(type.shortReadableName())},", "+\t\t\t\tseverity,", "+\t\t\t\tlocation.sourceStart,", "+\t\t\t\tlocation.sourceEnd);", "+\t\t}"]}], "num": 48978}