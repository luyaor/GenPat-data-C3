{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c9645a078e2819d6cba1131296f5df5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62ba6c5d5c6b93f3ac543ecc4665c82f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprotected MethodDeclaration createNewMethod(AST ast, String name, boolean isAbstract)", "signatureAfterChange": " \t \tprotected MethodDeclaration createNewMethod(AST ast, String name, boolean isAbstract)", "diff": ["-\t\tdecl.setReturnType(ast.newPrimitiveType(PrimitiveType.VOID));", "-\t\tdecl.setModifiers(isAbstract ? (Modifier.ABSTRACT | Modifier.PRIVATE) : Modifier.PRIVATE);", "+\t\tif (ast.apiLevel() == AST.JLS2) {", "+\t\t\tdecl.setModifiers(isAbstract ? (Modifier.ABSTRACT | Modifier.PRIVATE) : Modifier.PRIVATE);", "+\t\t\tdecl.setReturnType(ast.newPrimitiveType(PrimitiveType.VOID));", "+\t\t} else {", "+\t\t\tdecl.modifiers().add(ast.newModifier(Modifier.ModifierKeyword.PRIVATE_KEYWORD));", "+\t\t\tif (isAbstract) {", "+\t\t\t\tdecl.modifiers().add(ast.newModifier(Modifier.ModifierKeyword.ABSTRACT_KEYWORD));", "+\t\t\t}", "+\t\t\tdecl.setReturnType2(ast.newPrimitiveType(PrimitiveType.VOID));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "745e42daa084fa72c1b1cb6f8537cd87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "3a4474dc74dc940f2e2a8a1dd58d644d4529ba0d", "commitAfterChange": "5a2868c0a006393fdf983d9bbad54bef326b852b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprotected MethodDeclaration createNewMethod(AST ast, String name, boolean isAbstract)", "signatureAfterChange": " \t \tprotected MethodDeclaration createNewMethod(AST ast, String name, boolean isAbstract)", "diff": ["-\t\tif (ast.apiLevel() == AST.JLS2) {", "-\t\t\tdecl.setModifiers(isAbstract ? (Modifier.ABSTRACT | Modifier.PRIVATE) : Modifier.PRIVATE);", "-\t\t\tdecl.setReturnType(ast.newPrimitiveType(PrimitiveType.VOID));", "+\t\tif (ast.apiLevel() == AST_INTERNAL_JLS2) {", "+\t\t\tsetModifiers(decl, isAbstract ? (Modifier.ABSTRACT | Modifier.PRIVATE) : Modifier.PRIVATE);", "+\t\t\tsetReturnType(decl, ast.newPrimitiveType(PrimitiveType.VOID));"]}], "num": 31546}