{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d06b4d26d9e35498eb85165ca580ec8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6453a9e7ba41807811fd1dd6cf4f7ae1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "b7872d5f1e96b5357df6dd8bf0aac5fc8ccf3c6d", "commitAfterChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test003() throws CoreException", "signatureAfterChange": " \tpublic void test003() throws CoreException", "diff": ["+\t\tICompilationUnit[][] workingCopyBatches = new ICompilationUnit[3][];", "+\t\ttry {", "+\t\t\tworkingCopyBatches[0] = createWorkingCopies(new String[] {", "+\t\t\t\t\"/P/p1/X.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X extends Y {\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t\t\"/P/p1/Y.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class Y {\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t});", "+\t\t\tworkingCopyBatches[1] = createWorkingCopies(new String[] {});", "+\t\t\tworkingCopyBatches[2] = createWorkingCopies(new String[] {", "+\t\t\t\t\"/P/p1/Z.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class Z {\\n\" +", "+\t\t\t\t\"  Object foo() {\\n\" +", "+\t\t\t\t\"    return new X();\\n\" +", "+\t\t\t\t\"  }\\n\" +", "+\t\t\t\t\"}\",", "+\t\t\t});", "+\t\t\t", "+\t\t\tTestASTRequestor requestor = new TestASTRequestor(workingCopyBatches);", "+\t\t\tcreateASTs(requestor);", "+\t\t\tassertASTNodesEqual(", "+\t\t\t\t\"package p1;\\n\" + ", "+\t\t\t\t\"public class X extends Y {\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"package p1;\\n\" + ", "+\t\t\t\t\"public class Y {\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"package p1;\\n\" + ", "+\t\t\t\t\"public class Z {\\n\" + ", "+\t\t\t\t\"  Object foo(){\\n\" + ", "+\t\t\t\t\"    return new X();\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"\\n\",", "+\t\t\t\trequestor.asts", "+\t\t\t);", "+\t\t} finally {", "+\t\t\tdiscardWorkingCopies(workingCopyBatches);", "+\t\t}", "+\t}", "-\t\t\tTestASTRequestor requestor = new TestASTRequestor();", "-\t\t\tresolveASTs(workingCopies, requestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb7f0ff6341ec9b9e955af087278e972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "3531eaec8c87d2f6d3b0a52648ee1d63b2a2b44c", "commitAfterChange": "808d70d92e6d6e6f5c641ec34cc060e94b85a72e", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void testBug83285b() throws CoreException", "signatureAfterChange": " \tpublic void testBug83285b() throws CoreException", "diff": ["-\t\tassertNotNull(\"Problem in tests processing\", workingCopies);", "-\t\tassertEquals(\"Problem in tests processing\", 1, workingCopies.length);", "+\t\tworkingCopies = new ICompilationUnit[1];", "+\t\tworkingCopies[0] = getWorkingCopy(\"/JavaSearch/src/b83285/A.java\",", "+\t\t\t\"package b83285;\\n\" + ", "+\t\t\t\"class A {\\n\" + ", "+\t\t\t\"\tA(char c) {}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"class B {\\n\" + ", "+\t\t\t\"\tB(Exception ex) {}\\n\" + ", "+\t\t\t\"\tvoid foo() {} \\n\" + ", "+\t\t\t\"\tclass C { \\n\" + ", "+\t\t\t\"\t    /**\\n\" + ", "+\t\t\t\"\t     * Link {@link #B(Exception)} OK\\n\" + ", "+\t\t\t\"\t     * Link {@link #C(String)} OK\\n\" + ", "+\t\t\t\"\t     * Link {@link #foo()} OK\\n\" + ", "+\t\t\t\"\t     * Link {@link #bar()} OK\\n\" + ", "+\t\t\t\"\t     */\\n\" + ", "+\t\t\t\"\t    public C(String str) {}\\n\" + ", "+\t\t\t\"\t\tvoid bar() {}\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\"", "+\t\t);"]}], "num": 56478}