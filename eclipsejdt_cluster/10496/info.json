{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d32b85da6ed78387646142571b7d8fdd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a90b560f53bb941487f1bca502977a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " public void task(String message, int start, int end)", "signatureAfterChange": " public void task(String tag, String message, String priority, int start, int end)", "diff": ["-public void task(String message, int start, int end){", "+public void task(String tag, String message, String priority, int start, int end){", "-\t\tnew String[] { message },", "-\t\tnew String[] { message },", "+\t\tnew String[] { tag, message, priority/*secret argument that is not surfaced in getMessage()*/},", "+\t\tnew String[] { tag, message, priority/*secret argument that is not surfaced in getMessage()*/}, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "116f36290a533861712aacf3e748d080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected void cleanCategoryTableCache(boolean type) throws CoreException", "signatureAfterChange": " \tprotected void cleanCategoryTableCache(boolean type, IJavaSearchScope scope, JavaSearchResultCollector resultCollector) throws CoreException", "diff": ["-\tprotected void cleanCategoryTableCache(boolean type) throws CoreException {", "+\tprotected void cleanCategoryTableCache(boolean type, IJavaSearchScope scope, JavaSearchResultCollector resultCollector) throws CoreException {", "-\t\t\tsearch(\"foo\", FIELD, DECLARATIONS);", "+\t\t\tsearch(\"foo\", FIELD, DECLARATIONS, scope, resultCollector);", "-\t\t\tsearch(\"Foo\", TYPE, DECLARATIONS);", "+\t\t\tsearch(\"Foo\", TYPE, DECLARATIONS, scope, resultCollector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3711a9ab5ad7a8eb9fd25568596e48f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic IType findType(String name, boolean partialMatch, int acceptFlags)", "signatureAfterChange": " \tpublic IType findType(String name, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes, IProgressMonitor monitor)", "diff": ["+\t}", "+\tpublic IType findType(String name, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes, IProgressMonitor monitor) {", "-\t\treturn findType(className, packageName, partialMatch, acceptFlags);", "+\t\treturn findType(className, packageName, partialMatch, acceptFlags, considerSecondaryTypes, true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a32d94b1f9fbc8ae1818bdaf92f34b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "64e9473f82af48ea4e5b2ff0272cf87fb1916f12", "commitAfterChange": "1612764cac82755ece5bb371b617dba233a98e7f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate static void acceptName(char[] name, char[] prefix, char[] suffix, INamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void acceptName( \t\tchar[] name, \t\tchar[] prefix, \t\tchar[] suffix, \t\tboolean isFirstPrefix, \t\tboolean isFirstSuffix, \t\tINamingRequestor requestor)", "diff": ["-\tprivate static void acceptName(char[] name, char[] prefix, char[] suffix, INamingRequestor requestor) {", "+\tprivate static void acceptName(", "+\t\tchar[] name,", "+\t\tchar[] prefix,", "+\t\tchar[] suffix,", "+\t\tboolean isFirstPrefix,", "+\t\tboolean isFirstSuffix,", "+\t\tINamingRequestor requestor) {", "-\t\t\trequestor.acceptNameWithPrefixAndSuffix(name);", "+\t\t\trequestor.acceptNameWithPrefixAndSuffix(name, isFirstPrefix, isFirstSuffix);", "-\t\t\trequestor.acceptNameWithPrefix(name);", "+\t\t\trequestor.acceptNameWithPrefix(name, isFirstPrefix);", "-\t\t\trequestor.acceptNameWithSuffix(name);", "+\t\t\trequestor.acceptNameWithSuffix(name, isFirstSuffix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e83fbc00d62e1f591971955f7e1be6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "85c0cf008dd1b5241c61c9fe1a844baa6951a8f3", "commitAfterChange": "8d2d50bf52f3a634d35e42a58029fdbb46ec188a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tprivate void findMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \r \tprivate void findMethods(\r \t\tchar[] selector,\r \t\tTypeBinding[] argTypes,\r \t\tReferenceBinding receiverType,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tboolean isCompletingDeclaration,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\tInvocationSite invocationSite) {\r", "+\t\tInvocationSite invocationSite,\r", "+\t\tScope invocationScope,\r", "+\t\tboolean implicitCall) {\r", "-\t\t\t\t\tinvocationSite);\r", "+\t\t\t\t\tinvocationSite,\r", "+\t\t\t\t\tinvocationScope,\r", "+\t\t\t\t\timplicitCall);\r", "-\t\t\t\t\t\t\t\t\tinvocationSite);\r", "+\t\t\t\t\t\t\t\t\tinvocationSite,\r", "+\t\t\t\t\t\t\t\t\tinvocationScope,\r", "+\t\t\t\t\t\t\t\t\timplicitCall);\r", "-\t\t\t\t\tinvocationSite);\r", "+\t\t\t\t\tinvocationSite,\r", "+\t\t\t\t\tinvocationScope,\r", "+\t\t\t\t\timplicitCall);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a80f1fb1dabad2bf521e60c8d54fb93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic static IStatus validateImportDeclaration(String name)", "signatureAfterChange": " \tpublic static IStatus validateImportDeclaration(String name, String sourceLevel, String complianceLevel)", "diff": ["+\t */", "+\tpublic static IStatus validateImportDeclaration(String name, String sourceLevel, String complianceLevel) {", "-\t\t\t\treturn validatePackageName(name.substring(0, name.length() - 2));", "+\t\t\t\treturn validatePackageName(name.substring(0, name.length() - 2), sourceLevel, complianceLevel);", "-\t\treturn validatePackageName(name);", "+\t\treturn validatePackageName(name, sourceLevel, complianceLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a317b8da38dea896d587bee360808b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IStatus validateJavaTypeName(String name)", "signatureAfterChange": " \tpublic static IStatus validateJavaTypeName(String name, String sourceLevel, String complianceLevel)", "diff": ["+\t */", "+\tpublic static IStatus validateJavaTypeName(String name, String sourceLevel, String complianceLevel) {", "-\t\t\tscannedID = scannedIdentifier(name);", "+\t\t\tscannedID = scannedIdentifier(name, sourceLevel, complianceLevel);", "-\t\t\tIStatus status = validatePackageName(pkg);", "+\t\t\tIStatus status = validatePackageName(pkg, sourceLevel, complianceLevel);", "-\t\t\tscannedID = scannedIdentifier(type);", "+\t\t\tscannedID = scannedIdentifier(type, sourceLevel, complianceLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b337b4bcfd2b0237cc44f7f6b449e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup) throws JavaModelException", "signatureAfterChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\tIType findType(String fullyQualifiedName, NameLookup lookup) throws JavaModelException {", "+\tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException {", "-\t\t\tNameLookup.ACCEPT_ALL);", "+\t\t\tNameLookup.ACCEPT_ALL,", "+\t\t\tconsiderSecondaryTypes,", "+\t\t\tprogressMonitor);", "-\t\t\ttype = findType(fullyQualifiedName.substring(0, lastDot), lookup);", "+\t\t\ttype = findType(fullyQualifiedName.substring(0, lastDot), lookup, considerSecondaryTypes, progressMonitor);"]}], "num": 10496}