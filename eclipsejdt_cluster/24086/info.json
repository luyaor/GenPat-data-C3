{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "493c303cc67d8b7b7216d7ed6c8cd9f4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13ec0db88d05f57845a616c3ce0b4238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "0aed651787bbf037293557b7c88429b8514a95c0", "commitAfterChange": "1719c13f5400eb5914bb79f89f0e1d4c54e3cd14", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-", "-\tif (false) {", "-\t\tTestSuite suite = new Suite(WorkingCopySearchTests.class.getName());", "-\t\tsuite.addTest(new WorkingCopySearchTests(\"testAllTypeNames3\"));", "-\t\treturn suite;", "-\t}", "-\t", "-\t// NOTE: cannot use 'new Suite(WorkingCopySearchTests.class)' as this would include tests from super class", "-\tTestSuite suite = new Suite(WorkingCopySearchTests.class.getName());", "-\t", "-\tsuite.addTest(new WorkingCopySearchTests(\"testAddNewType\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testAllTypeNames1\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testAllTypeNames2\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testAllTypeNames3\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testAllTypeNames4\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testRemoveType\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testMoveType\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testHierarchyScopeOnWorkingCopy\"));", "-\tsuite.addTest(new WorkingCopySearchTests(\"testDeclarationOfReferencedTypes\"));", "-", "-\treturn suite;", "+//\t\treturn buildTestSuite(WorkingCopySearchTests.class, \"testAllTypeNames\", null);", "+\treturn buildTestSuite(WorkingCopySearchTests.class);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "176732d84d714e6de81b0964a52ffb73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["+\treturn buildModelTestSuite(SnippetCompletionTests.class);", "+\t/*", "+\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ba8994b91020f0e470e7e9a57adc4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "commitAfterChange": "3996b584ed9fd34d4dddb6c6b007dbfe987d9ebb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-", "-\tTestSuite suite = new Suite(ExternalJarDeltaTests.class.getName());", "-\t", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJar0\"));", "-", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarChanged1\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarChanged2\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarChanged3\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarAdded1\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarAdded2\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarAdded3\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarRemoved1\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarRemoved2\"));", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarRemoved3\"));", "-\t", "-\tsuite.addTest(new ExternalJarDeltaTests(\"testExternalJarInternalExternalJar\"));", "-\t", "-\treturn suite;", "+\treturn buildTestSuite(ExternalJarDeltaTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb7944a3242f3e6a816383bc1f45cb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "bd3ce95a5dcea002f2bbc3281560d8a414021729", "commitAfterChange": "b3f667007c544b9cc506476bfd1fe264f3a97ec5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-", "-public static Test suite() {", "-\tTestSuite suite = new Suite(JavaConventionTests.class.getName());", "-", "-\tsuite.addTest(new JavaConventionTests(\"testInvalidImportDeclaration1\"));", "-\tsuite.addTest(new JavaConventionTests(\"testInvalidImportDeclaration2\"));", "-\tsuite.addTest(new JavaConventionTests(\"testInvalidImportDeclaration3\"));", "-\tsuite.addTest(new JavaConventionTests(\"testPackageFragmentRootOverlap\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidCompilationUnitName\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidIdentifier\"));", "-\tsuite.addTest(new JavaConventionTests(\"testInvalidIdentifier\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidFieldName\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidImportDeclaration\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidMethodName\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidPackageName\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidTypeName\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidUnicodeImportDeclaration\"));", "-\tsuite.addTest(new JavaConventionTests(\"testValidUnicodePackageName\"));", "-\t", "-\treturn suite;", "-}", "+\t}", "+\tpublic static Test suite() {", "+\t\treturn buildTestSuite(JavaConventionTests.class);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "492558e8fb56adfb12721f1bd750d182", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "0aed651787bbf037293557b7c88429b8514a95c0", "commitAfterChange": "1719c13f5400eb5914bb79f89f0e1d4c54e3cd14", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\t// NOTE: cannot use 'new Suite(JavaSearchJavadocTests.class)' as this would include tests from super class", "-\t\tTestSuite suite = new Suite(JavaSearchJavadocTests.class.getName());", "-", "-\t\tif (true) {", "-\t\t\tif (DOC_COMMENT_SUPPORT == null) {", "-\t\t\t\t// Default is to test both Doc Comment Support ON and OFF", "-\t\t\t\tbuildSuite(suite, JavaCore.ENABLED);", "-\t\t\t\tbuildSuite(suite, JavaCore.DISABLED);", "-\t\t\t} else {", "-\t\t\t\t// Test specified with Doc Comment Support", "-\t\t\t\tString support = DOC_COMMENT_SUPPORT==null ? JavaCore.DISABLED : (DOC_COMMENT_SUPPORT.equals(JavaCore.DISABLED)?JavaCore.DISABLED:JavaCore.ENABLED);", "-\t\t\t\tbuildSuite(suite, support);", "-\t\t\t}", "-\t\t\treturn suite;", "-\t\t}", "-", "-\t\t// Run test cases subset", "-\t\tSystem.err.println(\"WARNING: only subset of tests will be executed!!!\");", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug54962\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug54962qualified\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug71267\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug71267qualified\"));", "-\t\tsuite.addTest(new JavaSearchJavadocTests(\"testBug73551\"));", "-\t\treturn suite;", "+//\t\treturn buildTestSuite(JavaSearchJavadocTests.class, \"testJavadocMethod\", null);", "+\t\treturn buildTestSuite(JavaSearchJavadocTests.class);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c97e423a2491355207411657ac21bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTestSuite suite = new Suite(AttachSourceTests.class.getName());", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSource\"));", "-\tsuite.addTest(new AttachSourceTests(\"testGetSourceAttachmentPath\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceRetrievalClass\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceRetrievalMethod\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceSourceRange\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceSourceRangeInnerClass\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceNameRange\"));", "-\tsuite.addTest(new AttachSourceTests(\"testClassFileGetElementAt\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourcePersisted\"));", "-\tsuite.addTest(new AttachSourceTests(\"testChangeSourceAttachmentFile\"));", "-\tsuite.addTest(new AttachSourceTests(\"testDetachSource\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceWithRootPath\"));", "-\tsuite.addTest(new AttachSourceTests(\"testAttachSourceToLibFolder\"));", "-\treturn suite;", "-", "+\treturn new Suite(AttachSourceTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7649af64a399e1cd91f9b18c204889e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElement8Tests.java", "commitBeforeChange": "a3a00115caa9dfd2b9b6d5b9fcf61ba0f8479cd9", "commitAfterChange": "c5d3e87bb720e91660c058962146e02390cfc415", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\tif (TESTS_PREFIX != null || TESTS_NAMES != null || TESTS_NUMBERS!=null || TESTS_RANGE !=null) {", "-\t\t\treturn buildModelTestSuite(JavaElement8Tests.class);", "-\t\t}", "-\t\tTestSuite suite = new Suite(JavaElement8Tests.class.getName());", "-\t\tsuite.addTest(new JavaElement8Tests(\"testBug428178\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"testBug428178a\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"testBug429641\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"testBug429641a\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"test429948\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"test429948a\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"test429966\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"testBug429910\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"test430026\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"test430026a\"));", "-\t\tsuite.addTest(new JavaElement8Tests(\"test430033\"));", "-\t\treturn suite;", "+\t\treturn buildModelTestSuite(JavaElement8Tests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9606639dd89f3e1191967757e46a15fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static TestSuite suite()", "signatureAfterChange": " \t\t\t@Override \t\t\tpublic Iterable<JavaFileObject> list(Location location, String packageName, Set<Kind> kinds, boolean recurse) \t\t\t\t\tthrows IOException", "diff": ["-\tpublic static TestSuite suite() {", "-\t\tTestSuite suite = new TestSuite();", "-\t\tsuite.addTest(new CompilerToolTests(\"testInitializeJavaCompiler\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testFileManager\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testFileManager2\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testInferBinaryName\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCheckOptions\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithSystemCompiler\"));", "-//\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithSystemCompiler2\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler2\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler3\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler4\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler5\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler6\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCompilerOneClassWithEclipseCompiler7\"));", "-\t\tsuite.addTest(new CompilerToolTests(\"testCleanUp\"));", "-\t\treturn suite;", "-\t}", "+\t\t\t}", "+\t\t\t@Override", "+\t\t\tpublic Iterable<JavaFileObject> list(Location location, String packageName, Set<Kind> kinds, boolean recurse)", "+\t\t\t\t\tthrows IOException {", "+\t\t\t\tIterable<JavaFileObject> list = super.list(location, packageName, kinds, recurse);", "+\t\t\t\tif (DEBUG) {", "+\t\t\t\t\tSystem.out.println(\"start list: \");", "+\t\t\t\t\tfor (JavaFileObject fileObject : list) {", "+\t\t\t\t\t\tSystem.out.println(fileObject.getName());", "+\t\t\t\t\t}", "+\t\t\t\t\tSystem.out.println(\"end   list: \");", "+\t\t\t\t}", "+\t\t\t\treturn list;", "+\t\t\t}"]}], "num": 24086}