{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd2f81ceb29135c6935cfb22072e1f56", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d162c296ca758a95b22ce2a73e35b77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\t\tif (typeArguments != null) {", "+\t\t\toutput.append('<');//$NON-NLS-1$", "+\t\t\tint max = typeArguments.length - 1;", "+\t\t\tfor (int j = 0; j < max; j++) {", "+\t\t\t\ttypeArguments[j].print(0, output);", "+\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t}", "+\t\t\ttypeArguments[max].print(0, output);", "+\t\t\toutput.append('>');", "+\t\t}\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2836311badc52f273bb7c1a20f4562da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "b3f667007c544b9cc506476bfd1fe264f3a97ec5", "commitAfterChange": "b7e412596013883ea5a197320620d3a941f98770", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\tif (typeArguments != null) {", "-\t\t\toutput.append('<');//$NON-NLS-1$", "-\t\t\tint max = typeArguments.length - 1;", "-\t\t\tfor (int j = 0; j < max; j++) {", "-\t\t\t\ttypeArguments[j].print(0, output);", "-\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "-\t\t\t}", "-\t\t\ttypeArguments[max].print(0, output);", "-\t\t\toutput.append('>');", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40658ae795ec3e85af47209e2180d088", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  public StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\tif (this.typeArguments != null) {", "+\t\toutput.append('<');//$NON-NLS-1$", "+\t\tint max = typeArguments.length - 1;", "+\t\tfor (int j = 0; j < max; j++) {", "+\t\t\ttypeArguments[j].print(0, output);", "+\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t}", "+\t\ttypeArguments[max].print(0, output);", "+\t\toutput.append('>');", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4013b68264fe9692d23d675f01ae9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\t\tif (typeArguments != null) {", "+\t\t\toutput.append('<');//$NON-NLS-1$", "+\t\t\tint max = typeArguments.length - 1;", "+\t\t\tfor (int j = 0; j < max; j++) {", "+\t\t\t\ttypeArguments[j].print(0, output);", "+\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t}", "+\t\t\ttypeArguments[max].print(0, output);", "+\t\t\toutput.append('>');", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46f3c01092e231984d4a702be7c72e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\t\tif (typeArguments != null) {", "+\t\t\toutput.append('<');//$NON-NLS-1$", "+\t\t\tint max = typeArguments.length - 1;", "+\t\t\tfor (int j = 0; j < max; j++) {", "+\t\t\t\ttypeArguments[j].print(0, output);", "+\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t}", "+\t\t\ttypeArguments[max].print(0, output);", "+\t\t\toutput.append('>');", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d32126090501ac9fe9150f43429baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnMessageSend.java", "commitBeforeChange": "b872ba5d8f48cb4817eecd5ff4441f88e908ce2a", "commitAfterChange": "140f4397394251f47b2dea234f568be74d1fe6c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\t\tif (this.typeArguments != null) {", "+\t\t\toutput.append('<');//$NON-NLS-1$", "+\t\t\tint max = typeArguments.length - 1;", "+\t\t\tfor (int j = 0; j < max; j++) {", "+\t\t\t\ttypeArguments[j].print(0, output);", "+\t\t\t\toutput.append(\", \");//$NON-NLS-1$", "+\t\t\t}", "+\t\t\ttypeArguments[max].print(0, output);", "+\t\t\toutput.append('>');", "+\t\t}"]}], "num": 53287}