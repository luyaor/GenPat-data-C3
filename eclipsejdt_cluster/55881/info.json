{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfb92a81b8af854bd9a24ec65076b027", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d4407d25b459bae2f221157445d0728", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "f36b7aff05b621706a3d6dcd7b341e0eb0241032", "commitAfterChange": "7f50d6771d9939aee1b9841b7940c772ca3dad14", "methodNumberBeforeChange": 292, "methodNumberAfterChange": 292, "signatureBeforeChange": " protected void consumeRule(int act)", "signatureAfterChange": " protected void consumeRule(int act)", "diff": ["-    case 66 : if (DEBUG) { System.out.println(\"GenericType ::= ClassOrInterface LESS GREATER\"); }  //$NON-NLS-1$", "+    case 66 : if (DEBUG) { System.out.println(\"GenericType ::= ClassOrInterface LESS GREATER...\"); }  //$NON-NLS-1$", "-    case 212 : if (DEBUG) { System.out.println(\"UnionType ::= TypeInternal\"); }  //$NON-NLS-1$", "+    case 212 : if (DEBUG) { System.out.println(\"UnionType ::= Type0\"); }  //$NON-NLS-1$", "-    case 367 : if (DEBUG) { System.out.println(\"Resource ::= TypeInternal PushModifiers...\"); }  //$NON-NLS-1$", "+    case 367 : if (DEBUG) { System.out.println(\"Resource ::= Type0 PushModifiers VariableDeclaratorId...\"); }  //$NON-NLS-1$", "-    case 368 : if (DEBUG) { System.out.println(\"Resource ::= Modifiers TypeInternal PushRealModifiers...\"); }  //$NON-NLS-1$", "+    case 368 : if (DEBUG) { System.out.println(\"Resource ::= Modifiers Type0 PushRealModifiers...\"); }  //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1991f70bf9451fc29d4130d858c0526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test040()", "signatureAfterChange": " \tpublic void test040()", "diff": ["-\t\t\t\"Type safety: The return type Integer of the method test() of type B needs unchecked conversion to conform to the return type T of inherited method\\n\" + ", "+\t\t\t\"Type safety: The return type Integer for test() from the type B needs unchecked conversion to conform to T from the type A\\n\" + ", "-\t\t\t\"Type safety: The return type List of the method getList() of type B needs unchecked conversion to conform to the return type List<String> of inherited method\\n\" + ", "+\t\t\t\"Type safety: The return type List for getList() from the type B needs unchecked conversion to conform to List<String> from the type A\\n\" + ", "-\t\t\t\"Type safety: The return type X of the method x() of type Y<S> needs unchecked conversion to conform to the return type X<T> of inherited method\\n\" + ", "+\t\t\t\"Type safety: The return type X for x() from the type Y<S> needs unchecked conversion to conform to X<T> from the type X<T>\\n\" + ", "-\t\t\t\"Type safety: The return type X[] of the method x() of type Y<S> needs unchecked conversion to conform to the return type X<T>[] of inherited method\\n\" + ", "+\t\t\t\"Type safety: The return type X[] for x() from the type Y<S> needs unchecked conversion to conform to X<T>[] from the type X<T>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca7399ba41852bbf91e020f2078bdb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "166df64b1dde30fc61b2e4fda13d5a0d769a3aef", "commitAfterChange": "cd0e6730218f485335b628feb54a852eb0cb6a2f", "methodNumberBeforeChange": 1286, "methodNumberAfterChange": 1286, "signatureBeforeChange": " public void test1252()", "signatureAfterChange": " public void test1252()", "diff": ["-\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" +", "-\t\t\"\tZork z;\\r\\n\" +", "+\t\t\"1. ERROR in X.java (at line 2)\\n\" +", "+\t\t\"\tZork z;\\n\" +", "-\t\t\"2. WARNING in X.java (at line 10)\\r\\n\" +", "-\t\t\"\tC<String> c = getB().getC();\\r\\n\" +", "+\t\t\"2. WARNING in X.java (at line 10)\\n\" +", "+\t\t\"\tC<String> c = getB().getC();\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f51da04cd1206c3ef9a4daaabf0ffd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test027()", "signatureAfterChange": " public void test027()", "diff": ["-\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 20] local: this index: 0 type: LX;\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 20] local: b index: 1 type: Z\\n\" + ", "-\t\t\t\"        [pc: 6, pc: 9] local: i index: 2 type: I\\n\" + ", "-\t\t\t\"        [pc: 10, pc: 14] local: e index: 2 type: Ljava/lang/Exception;\\n\";", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 20] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 20] local: b index: 1 type: boolean\\n\" + ", "+\t\t\"        [pc: 6, pc: 9] local: i index: 2 type: int\\n\" + ", "+\t\t\"        [pc: 10, pc: 14] local: e index: 2 type: java.lang.Exception\\n\";"]}], "num": 55881}