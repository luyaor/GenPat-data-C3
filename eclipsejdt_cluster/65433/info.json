{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1a27ec0957f1b382a97ca117b34b3ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b8362efbc0d98ca604e9d38b3521e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "75f39a9e2b933debbbbcf3c027e6d9f6de584c6f", "commitAfterChange": "8b4a2203325de336fcb901c3ba6cc9321aa3af38", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["-\tif (typeBinding.hasMemberTypes()) {", "-\t\t// see bug 180109", "-\t\tReferenceBinding[] members = typeBinding.memberTypes;", "-\t\tfor (int i = 0, l = members.length; i < l; i++)", "-\t\t\tclassFile.recordInnerClasses(members[i]);", "-\t}", "-\t// TODO (olivier) handle cases where a field cannot be generated (name too long)", "-\t// TODO (olivier) handle too many methods", "-\t// inner attributes", "-\t\t\t\tmethod.modifiers = ClassFileConstants.AccPublic | ClassFileConstants.AccAbstract;", "-\t\t\t\t} else if (method.isAbstract()) {", "-\t\t\t\t\tclassFile.addAbstractMethod(methodDecl, method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77cdfd06684178efc656194d0bd94207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "b3bca8e594a391b78455967d728e5a0ded87d9a5", "commitAfterChange": "f0ea767a01a440e2e42c6a161d0207a741d09396", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["-\tif (typeBinding.hasMemberTypes()) {", "-\t\t// see bug 180109", "-\t\tReferenceBinding[] members = typeBinding.memberTypes;", "-\t\tfor (int i = 0, l = members.length; i < l; i++)", "-\t\t\tclassFile.recordInnerClasses(members[i]);", "-\t}", "-\t// TODO (olivier) handle cases where a field cannot be generated (name too long)", "-\t// TODO (olivier) handle too many methods", "-\t// inner attributes", "-\t\t\t\tmethod.modifiers = ClassFileConstants.AccPublic | ClassFileConstants.AccAbstract;", "-\t\t\t\t} else if (method.isAbstract()) {", "-\t\t\t\t\tclassFile.addAbstractMethod(methodDecl, method);"]}], "num": 65433}