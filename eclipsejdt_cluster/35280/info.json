{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83d39c1cb5645b453776f654c0340c73", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09957963198cec0b09ee98910e2aacc6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RuntimeTests.java", "commitBeforeChange": "672f952a5c7fefb7ba4540c6cb39cc7954700f81", "commitAfterChange": "3f5952c4f9eaef7ff0de7abe696d01c069cfbfb9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void _test0600_reflection()", "signatureAfterChange": " public void test0600_reflection()", "diff": ["-public void _test0600_reflection() {", "+public void test0600_reflection() {", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"  catch (Throwable t) {\\n\" +", "-\t\t\t\"    System.out.println(\\\"FAILURE: \\\" + t.getMessage());\\n\" +", "-\t\t\t\"    t.printStackTrace(System.out);\\n\" +", "+\t\t\t\"  } catch (NoSuchMethodException e) {\\n\" +", "+\t\t\t\"      //ignore\\n\" +", "+\t\t\t\"  } catch (InvocationTargetException e) {\\n\" +", "+\t\t\t\"      //ignore\\n\" +", "+\t\t\t\"  } catch (IllegalAccessException e) {\\n\" +", "+\t\t\t\"    System.out.print(\\\"FAILURE: IllegalAccessException\\\");\\n\" +", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"}\\n\",", "+\t\t\t\"}\\n\" +", "+\t\t\t\"}\",", "-\t\t\"SUCCESS\\nSUCCESS\"", "+\t\t\"SUCCESS\\n\" + ", "+\t\t\"FAILURE: IllegalAccessException\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7bce86ce637d582f2729da1a2c5ea50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RuntimeTests.java", "commitBeforeChange": "672f952a5c7fefb7ba4540c6cb39cc7954700f81", "commitAfterChange": "3f5952c4f9eaef7ff0de7abe696d01c069cfbfb9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void _test0601_reflection()", "signatureAfterChange": " public void test0601_reflection()", "diff": ["-public void _test0601_reflection() {", "+public void test0601_reflection() {", "-\t\t\t\"  }\\n\" +", "-\t\t\t\"  catch (Throwable t) {\\n\" +", "-\t\t\t\"    System.out.println(\\\"FAILURE: \\\" + t.getMessage());\\n\" +", "-\t\t\t\"    t.printStackTrace(System.out);\\n\" +", "+\t\t\t\"  } catch (NoSuchFieldException e) {\\n\" +", "+\t\t\t\"      //ignore\\n\" +", "+\t\t\t\"  } catch (IllegalAccessException e) {\\n\" +", "+\t\t\t\"    System.out.print(\\\"FAILURE: IllegalAccessException\\\");\\n\" +", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"}\\n\",", "+\t\t\t\"}\\n\" +", "+\t\t\t\"}\",", "-\t\t\"SUCCESS\\nSUCCESS\"", "+\t\t\"SUCCESS\\n\" + ", "+\t\t\"FAILURE: IllegalAccessException\""]}], "num": 35280}