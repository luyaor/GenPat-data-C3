{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45669a7c63f9982f10e35aabdf918c3b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1635715aa96909574071906429f38b0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "420aa82752ec3e926a634ee4daaacddae8a8ab80", "commitAfterChange": "f68c3205ee145ec7c1c029e73701ee13aaf91bec", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding)", "signatureAfterChange": " \tprotected IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding)", "diff": ["-\t\tif (variableBinding == null || !variableBinding.isValidBinding()) {", "-\t\t\treturn null;", "-\t\t}", "-\t\tIVariableBinding binding = (IVariableBinding) this.compilerBindingsToASTBindings.get(variableBinding);", "-\t\tif (binding != null) {", "-\t\t\treturn binding;", "-\t\t}", "-\t\tbinding = new VariableBinding(this, variableBinding);", "-\t\tthis.compilerBindingsToASTBindings.put(variableBinding, binding);", "-\t\treturn binding;", "+ \t\tif (variableBinding != null) {", "+\t \t\tif (variableBinding.isValidBinding()) {", "+\t\t\t\tIVariableBinding binding = (IVariableBinding) this.compilerBindingsToASTBindings.get(variableBinding);", "+\t\t\t\tif (binding != null) {", "+\t\t\t\t\treturn binding;", "+\t\t\t\t}", "+\t\t\t\tbinding = new VariableBinding(this, variableBinding);", "+\t\t\t\tthis.compilerBindingsToASTBindings.put(variableBinding, binding);", "+\t\t\t\treturn binding;", "+\t \t\t} else {", "+\t\t\t\t/*", "+\t\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=24449", "+\t\t\t\t */", "+\t\t\t\tif (variableBinding instanceof ProblemFieldBinding) {", "+\t\t\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) variableBinding;", "+\t\t\t\t\tswitch(problemFieldBinding.problemId()) {", "+\t\t\t\t\t\tcase ProblemReasons.NotVisible : ", "+\t\t\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\t\t\tReferenceBinding declaringClass = problemFieldBinding.declaringClass;", "+\t\t\t\t\t\t\tif (variableBinding != null) {", "+\t\t\t\t\t\t\t\tFieldBinding exactBinding = declaringClass.getField(problemFieldBinding.name);", "+\t\t\t\t\t\t\t\tif (exactBinding != null) {", "+\t\t\t\t\t\t\t\t\tIVariableBinding variableBinding2 = (IVariableBinding) this.compilerBindingsToASTBindings.get(exactBinding);", "+\t\t\t\t\t\t\t\t\tif (variableBinding2 != null) {", "+\t\t\t\t\t\t\t\t\t\treturn variableBinding2;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tvariableBinding2 = new VariableBinding(this, exactBinding);", "+\t\t\t\t\t\t\t\t\tthis.compilerBindingsToASTBindings.put(exactBinding, variableBinding2);", "+\t\t\t\t\t\t\t\t\treturn variableBinding2;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t \t\t}", "+ \t\t}", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5efa13ec57ca5e17bfcd33973235bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tif (!((LocalVariableBinding) this.binding).isFinal() && ((this.bits & ASTNode.DepthMASK) != 0))", "-\t\t\t\t\t\tscope.problemReporter().cannotReferToNonFinalOuterLocal(", "-\t\t\t\t\t\t\t(LocalVariableBinding) this.binding,", "-\t\t\t\t\t\t\tthis);", "+\t\t\t\t\tLocalVariableBinding local = (LocalVariableBinding) this.binding;", "+\t\t\t\t\tif (!local.isFinal() && ((this.bits & ASTNode.DepthMASK) != 0))", "+\t\t\t\t\t\tscope.problemReporter().cannotReferToNonFinalOuterLocal((LocalVariableBinding) this.binding, this);", "-\t\t\t\t\treturn this.resolvedType = getOtherFieldBindings(scope);", "+\t\t\t\t\tif (local.type != null && (local.type.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\t\t// only complain if field reference (for local, its type got flagged already)", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.resolvedType = getOtherFieldBindings(scope);", "+\t\t\t\t\tif (this.resolvedType != null ", "+\t\t\t\t\t\t\t&& (this.resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\t\tFieldBinding lastField = this.otherBindings[this.otherBindings.length - 1];", "+\t\t\t\t\t\tscope.problemReporter().invalidField(this, new ProblemFieldBinding(lastField.declaringClass, lastField.name, ProblemReasons.NotFound), this.tokens.length, this.resolvedType.leafComponentType());", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn this.resolvedType;\t\t\t\t\t", "-\t\t\t\t\t", "-\t\t\t\t\treturn this.resolvedType = getOtherFieldBindings(scope);", "+\t\t\t\t\tthis.resolvedType = getOtherFieldBindings(scope);", "+\t\t\t\t\tif (this.resolvedType != null ", "+\t\t\t\t\t\t\t&& (this.resolvedType.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\t\tFieldBinding lastField = this.indexOfFirstFieldBinding == this.tokens.length ? (FieldBinding)this.binding : this.otherBindings[this.otherBindings.length - 1];", "+\t\t\t\t\t\tscope.problemReporter().invalidField(this, new ProblemFieldBinding(lastField.declaringClass, lastField.name, ProblemReasons.NotFound), this.tokens.length, this.resolvedType.leafComponentType());", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn this.resolvedType;"]}], "num": 40010}