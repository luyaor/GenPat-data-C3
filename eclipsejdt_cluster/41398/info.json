{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bbbd2780567b2536b8569d947e18d65", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd0b96d45a160dbdf83284721b47040", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tpublic synchronized void projectClosed()", "signatureAfterChange": " \t \tpublic synchronized void projectClosed()", "diff": ["-\t\t// discard all working copies", "-\t\tCollection<ICompilationUnit> workingCopies = _typeName2WorkingCopy.values();", "-\t\tfor ( ICompilationUnit wc : workingCopies )", "-\t\t{", "-\t\t\ttry ", "-\t\t\t{", "-\t\t\t\twc.discardWorkingCopy();", "-\t\t\t}", "-\t\t\tcatch ( JavaModelException jme )", "-\t\t\t{", "-\t\t\t\tjme.printStackTrace();", "-\t\t\t}", "-\t\t}", "-", "-\t\t// clear out the working copy maps", "-\t\t_typeName2Parents.clear();", "-\t\t_typeName2WorkingCopy.clear();", "+\t\tclearWorkingCopyMaps();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a6e84dd28eecd59ad0bdb8b165807a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprivate void saveCompilationUnit(IPackageFragment pkgFrag, final String cuName, String contents, \t\t\tIProgressMonitor progressMonitor)", "signatureAfterChange": " \tprivate void saveCompilationUnit(IPackageFragment pkgFrag, final String cuName, String contents, \t\t\tIProgressMonitor progressMonitor)", "diff": ["-\t\tif (isWorkingCopy && unit.getResource().exists()) {", "-\t\t\t// If we have a working copy and it has a file, all we", "+\t\tif (isWorkingCopy) {", "+\t\t\t// If we have a working copy, all we", "-\t\t\tif (isWorkingCopy) {", "-\t\t\t\t// See https://bugs.eclipse.org/bugs/show_bug.cgi?id=163906 -", "-\t\t\t\t// commitWorkingCopy() fails if file does not already exist.", "-\t\t\t\tSet<ICompilationUnit> toDiscard = discardWorkingCopy(unit);", "-\t\t\t\tfor (ICompilationUnit cuToDiscard : toDiscard) {", "-\t\t\t\t\t_CUHELPER.discardWorkingCopy(cuToDiscard);", "-\t\t\t\t\tif (AptPlugin.DEBUG_GFM) AptPlugin.trace( ", "-\t\t\t\t\t\t\t\"Discarded working copy during build: \" + unit.getElementName()); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t}"]}], "num": 41398}