{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fc5a2a95cd613dad59179bd2e445134", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6569942cd9fbf806dcdab80b7bdb8443", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void recordContinueFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordContinueFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnContinue = initsOnContinue.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnContinue = initsOnContinue.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83453c514c9250f9daa397a3f6e0a76b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "7ae9e904164ab9e611ba46366de94e1b02c0e7e7", "commitAfterChange": "59758b3ac964ea48fbbbf5d314c8ed8b19dc60bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t? flowInfo.addInitializationsFrom(condInfo.initsWhenFalse()) ", "+\t\t\t\t\t\t\t\t? flowInfo.copy().addInitializationsFrom(condInfo.initsWhenFalse()) // https://bugs.eclipse.org/bugs/show_bug.cgi?id=380927"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae6da42a54447941834bf428fe007c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d3d7992377503bf411e2601a4bdac0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordBreakFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnBreak = initsOnBreak.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnBreak = initsOnBreak.mergedWith(flowInfo.copy().unconditionalInits());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d216e20359fd54105f48c6fcce8519da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "36027d9110473d1ab8a191e3dc5fe2bda0cb572d", "commitAfterChange": "fdb6082656b34b1cbc6c5806b800b987b1b9c892", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.unconditionalInits());", "+\t\t\tinitsOnReturn = initsOnReturn.mergedWith(flowInfo.copy().unconditionalInits());"]}], "num": 61187}