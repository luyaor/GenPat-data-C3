{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87d87ab20fe8baa8501ff4cf2a7eeace", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "378715dfc38e85764d76d469ff3524f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "575a3f90413b1058462517ab2df66b33bcdaf3b3", "commitAfterChange": "e828ea2c8d39b972cae93c4405da77a411a20e03", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["+\t\t\tif (localBinding.resolvedPosition == -1) {", "+\t\t\t\tif (valueRequired) {", "+\t\t\t\t\t// restart code gen", "+\t\t\t\t\tlocalBinding.useFlag = LocalVariableBinding.USED;", "+\t\t\t\t\tthrow new AbortMethod(CodeStream.RESTART_CODE_GEN_FOR_UNUSED_LOCALS_MODE, null);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7672b7c424335c96548964b82edc7f2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "575a3f90413b1058462517ab2df66b33bcdaf3b3", "commitAfterChange": "e828ea2c8d39b972cae93c4405da77a411a20e03", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["+\t\t\tif (localBinding.resolvedPosition == -1) {", "+\t\t\t\tif (valueRequired) {", "+\t\t\t\t\t// restart code gen", "+\t\t\t\t\tlocalBinding.useFlag = LocalVariableBinding.USED;", "+\t\t\t\t\tthrow new AbortMethod(CodeStream.RESTART_CODE_GEN_FOR_UNUSED_LOCALS_MODE, null);", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}"]}], "num": 60150}