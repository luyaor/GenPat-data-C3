{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c82e560ca1a919073fa197120d2704ab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf6e1fcdad8a4d498004681f6c6c08f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public char[] genericSignature()", "signatureAfterChange": " public char[] genericSignature()", "diff": ["-\t    for (int i = 0, length = this.typeVariables.length; i < length; i++) {", "+\t    for (int i = 0, length = this.typeVariables.length; i < length; i++)", "-\t    }", "-\t\t    for (int i = 0, length = this.superInterfaces.length; i < length; i++) {", "-\t\t        if (this.superInterfaces[i].isParameterizedType()) break noSignature;", "-\t\t    }        ", "+\t\t    for (int i = 0, length = this.superInterfaces.length; i < length; i++)", "+\t\t        if (this.superInterfaces[i].isParameterizedType())", "+\t\t\t\t\tbreak noSignature;", "-\tif (this.superclass != null) {", "+\tif (this.superclass != null)", "-\t} else {", "-\t\t// interface scenario only (as Object cannot be generic) - 65953", "+\telse // interface scenario only (as Object cannot be generic) - 65953", "-\t}", "-    for (int i = 0, length = this.superInterfaces.length; i < length; i++) {", "+    for (int i = 0, length = this.superInterfaces.length; i < length; i++)", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0694fc5e8042ccddecc50c8a63486c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-    ", "-\t\tfor (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\tfor (int i = 0, paramLength = typeParameters.length; i < paramLength; i++)", "-\t\t}", "-\t\t\tif (resolvedExceptionType == null) {", "+\t\t\tif (resolvedExceptionType == null)", "-\t\t\t}", "-\t\t    if ((resolvedExceptionType.modifiers & AccGenericSignature) != 0) {", "+\t\t    if ((resolvedExceptionType.modifiers & AccGenericSignature) != 0)", "-\t\t\t}", "-\t\t\t    if (leafType instanceof ReferenceBinding && (((ReferenceBinding)leafType).modifiers & AccGenericSignature) != 0) {", "+\t\t\t    if (leafType instanceof ReferenceBinding && (((ReferenceBinding)leafType).modifiers & AccGenericSignature) != 0)", "-\t\t\t\t}", "-\t\t\t\tif (leafType instanceof ReferenceBinding && (((ReferenceBinding)leafType).modifiers & AccGenericSignature) != 0) {", "+\t\t\t\tif (leafType instanceof ReferenceBinding && (((ReferenceBinding)leafType).modifiers & AccGenericSignature) != 0)", "-\t\t\t\t}"]}], "num": 4676}