{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97bf57e19224ff9f3719dfa6451dbb41", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8762dfc3c0959d0c681059728f351952", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 98, "signatureBeforeChange": "  \tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "signatureAfterChange": "  \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration)", "diff": ["+", "+\tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration) {", "+\t\tVariableDeclarationFragment variableDeclarationFragment = this.ast.newVariableDeclarationFragment();", "+\t\tSimpleName name = this.ast.newSimpleName(new String(localDeclaration.name));", "+\t\tname.setSourceRange(localDeclaration.sourceStart, localDeclaration.sourceEnd - localDeclaration.sourceStart + 1);", "+\t\tvariableDeclarationFragment.setName(name);", "+\t\tint end = retrievePositionBeforeNextCommaOrSemiColon(localDeclaration.sourceEnd, this.compilationUnitSource.length);", "+\t\tif (end == -1) {", "+\t\t\tif (localDeclaration.initialization != null) {", "+\t\t\t\tvariableDeclarationFragment.setSourceRange(localDeclaration.sourceStart, localDeclaration.initialization.sourceEnd - localDeclaration.sourceStart + 1);", "+\t\t\t} else {", "+\t\t\t\tvariableDeclarationFragment.setSourceRange(localDeclaration.sourceStart, localDeclaration.sourceEnd - localDeclaration.sourceStart + 1);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tvariableDeclarationFragment.setSourceRange(localDeclaration.sourceStart, end - localDeclaration.sourceStart + 1);", "+\t\t}", "+\t\tif (localDeclaration.initialization != null) {", "+\t\t\tvariableDeclarationFragment.setInitializer(convert(localDeclaration.initialization));", "+\t\t}", "+\t\tvariableDeclarationFragment.setExtraDimensions(retrieveExtraDimension(localDeclaration.sourceEnd + 1, this.compilationUnitSource.length));", "+\t\tif (this.resolveBindings) {", "+\t\t\trecordNodes(variableDeclarationFragment, localDeclaration);", "+\t\t\trecordNodes(name, localDeclaration);", "+\t\t\tvariableDeclarationFragment.resolveBinding();", "+\t\t}", "+\t\treturn variableDeclarationFragment;", "+\t}", "-", "-\tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration localDeclaration) {", "-\t\tVariableDeclarationFragment variableDeclarationFragment = this.ast.newVariableDeclarationFragment();", "-\t\tSimpleName name = this.ast.newSimpleName(new String(localDeclaration.name));", "-\t\tname.setSourceRange(localDeclaration.sourceStart, localDeclaration.sourceEnd - localDeclaration.sourceStart + 1);", "-\t\tvariableDeclarationFragment.setName(name);", "-\t\tint end = retrievePositionBeforeNextCommaOrSemiColon(localDeclaration.sourceEnd, this.compilationUnitSource.length);", "-\t\tif (end == -1) {", "-\t\t\tif (localDeclaration.initialization != null) {", "-\t\t\t\tvariableDeclarationFragment.setSourceRange(localDeclaration.sourceStart, localDeclaration.initialization.sourceEnd - localDeclaration.sourceStart + 1);", "-\t\t\t\tvariableDeclarationFragment.setSourceRange(localDeclaration.sourceStart, localDeclaration.sourceEnd - localDeclaration.sourceStart + 1);", "-\t\t} else {", "-\t\t\tvariableDeclarationFragment.setSourceRange(localDeclaration.sourceStart, end - localDeclaration.sourceStart + 1);", "-\t\t}", "-\t\tif (localDeclaration.initialization != null) {", "-\t\t\tvariableDeclarationFragment.setInitializer(convert(localDeclaration.initialization));", "-\t\t}", "-\t\tvariableDeclarationFragment.setExtraDimensions(retrieveExtraDimension(localDeclaration.sourceEnd + 1, this.compilationUnitSource.length));", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(variableDeclarationFragment, localDeclaration);", "-\t\t\trecordNodes(name, localDeclaration);", "-\t\t\tvariableDeclarationFragment.resolveBinding();", "-\t\t}", "-\t\treturn variableDeclarationFragment;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9676e1ed64c6f3690ca37f6ed773f0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 97, "signatureBeforeChange": " \t \tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t \tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "diff": ["+\t", "+\tprotected VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration) {", "+\t\tVariableDeclarationFragment variableDeclarationFragment = this.ast.newVariableDeclarationFragment();", "+\t\tSimpleName name = this.ast.newSimpleName(new String(fieldDeclaration.name));", "+\t\tname.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.sourceEnd - fieldDeclaration.sourceStart + 1);", "+\t\tvariableDeclarationFragment.setName(name);", "+\t\tint end = retrievePositionBeforeNextCommaOrSemiColon(fieldDeclaration.sourceEnd, fieldDeclaration.declarationSourceEnd);", "+\t\tif (end == -1) {", "+\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.declarationSourceEnd - fieldDeclaration.sourceStart + 1);", "+\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);", "+\t\t} else {", "+\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, end - fieldDeclaration.sourceStart + 1);", "+\t\t}", "+\t\tif (fieldDeclaration.initialization != null) {", "+\t\t\tvariableDeclarationFragment.setInitializer(convert(fieldDeclaration.initialization));", "+\t\t}", "+\t\tvariableDeclarationFragment.setExtraDimensions(retrieveExtraDimension(fieldDeclaration.sourceEnd + 1, fieldDeclaration.declarationSourceEnd ));", "+\t\tif (this.resolveBindings) {", "+\t\t\trecordNodes(name, fieldDeclaration);", "+\t\t\trecordNodes(variableDeclarationFragment, fieldDeclaration);", "+\t\t\tvariableDeclarationFragment.resolveBinding();", "+\t\t}", "+\t\treturn variableDeclarationFragment;", "+\t}", "-\t", "-\tprivate VariableDeclarationFragment convertToVariableDeclarationFragment(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration) {", "-\t\tVariableDeclarationFragment variableDeclarationFragment = this.ast.newVariableDeclarationFragment();", "-\t\tSimpleName name = this.ast.newSimpleName(new String(fieldDeclaration.name));", "-\t\tname.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.sourceEnd - fieldDeclaration.sourceStart + 1);", "-\t\tvariableDeclarationFragment.setName(name);", "-\t\tint end = retrievePositionBeforeNextCommaOrSemiColon(fieldDeclaration.sourceEnd, fieldDeclaration.declarationSourceEnd);", "-\t\tif (end == -1) {", "-\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, fieldDeclaration.declarationSourceEnd - fieldDeclaration.sourceStart + 1);", "-\t\t\tvariableDeclarationFragment.setFlags(variableDeclarationFragment.getFlags() | ASTNode.MALFORMED);", "-\t\t} else {", "-\t\t\tvariableDeclarationFragment.setSourceRange(fieldDeclaration.sourceStart, end - fieldDeclaration.sourceStart + 1);", "-\t\t}", "-\t\tif (fieldDeclaration.initialization != null) {", "-\t\t\tvariableDeclarationFragment.setInitializer(convert(fieldDeclaration.initialization));", "-\t\t}", "-\t\tvariableDeclarationFragment.setExtraDimensions(retrieveExtraDimension(fieldDeclaration.sourceEnd + 1, fieldDeclaration.declarationSourceEnd ));", "-\t\tif (this.resolveBindings) {", "-\t\t\trecordNodes(name, fieldDeclaration);", "-\t\t\trecordNodes(variableDeclarationFragment, fieldDeclaration);", "-\t\t\tvariableDeclarationFragment.resolveBinding();", "-\t\t}", "-\t\treturn variableDeclarationFragment;", "-\t}"]}], "num": 51064}