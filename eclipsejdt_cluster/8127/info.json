{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb959eb1bbb96aef2f446e24d6b6926f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dcc9a5aaedde89c8d4f7a6dd7714019", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "87e2af687e3073bef88a34d0aaa3d7685fc9b409", "commitAfterChange": "963ad4c5e113eba29c599e5fefea6c28cb728772", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\t\tcheckForBridgeMethod(currentMethod, inheritedMethod, allInheritedMethods);", "+\t\tif (!inheritedMethod.isStatic() && !inheritedMethod.isFinal())", "+\t\t\tcheckForBridgeMethod(currentMethod, inheritedMethod, allInheritedMethods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64eefa11a0e65ed28b33327e8263f228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "34fbb786c10acdde7ba1d8e5a54a9b85be33e113", "commitAfterChange": "ef93c53035cb54a0c91071e910579fce97f095de", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "signatureAfterChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\t\t\t\tthis.scope.outerMostMethodScope().enclosingSourceType();", "-\t\t\tthis.classLiteralSyntheticField =", "-\t\t\t\tsourceType.addSyntheticFieldForClassLiteral(sourceType, scope);", "+\t\t\t\tthis.scope.outerMostClassScope().enclosingSourceType();", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=22334", "+\t\t\tif (!sourceType.isInterface() && !sourceType.isBaseType()) {\t\t\t", "+\t\t\t\tthis.classLiteralSyntheticField = sourceType.addSyntheticFieldForClassLiteral(sourceType, scope);", "+\t\t\t}"]}], "num": 8127}