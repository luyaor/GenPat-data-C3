{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fddc1ddfa76247fb03e0c74a63586ae", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05129110ef012e838198c20514189be1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "554ad9262edde8518a6f39200ec65ed5eaeb92c4", "commitAfterChange": "347e47a327239f16771992e70a1916c45c7c5600", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\tprivate String buildSignature(Type type)", "signatureAfterChange": "  \t\tprivate String buildSignature(Type type)", "diff": ["-\t\t\t\t\tif (code == PrimitiveType.INT) {", "-\t\t\t\t\t\treturn \"int\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.CHAR) {", "-\t\t\t\t\t\treturn \"char\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.BOOLEAN) {", "-\t\t\t\t\t\treturn \"boolean\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.SHORT) {", "-\t\t\t\t\t\treturn \"short\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.LONG) {", "-\t\t\t\t\t\treturn \"long\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.FLOAT) {", "-\t\t\t\t\t\treturn \"float\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.DOUBLE) {", "-\t\t\t\t\t\treturn \"double\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.BYTE) {", "-\t\t\t\t\t\treturn \"byte\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.VOID) {", "-\t\t\t\t\t\treturn \"void\"; //$NON-NLS-1$", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null; // should never happen", "-\t\t\t\t\t}", "+\t\t\t\t\treturn code.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599ea6c635d80a8d28a721445311412c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/comment/Java2HTMLEntityReader.java", "commitBeforeChange": "ae5d3eb2c6ea3f10c8e5ebce2e6c361de4023fb4", "commitAfterChange": "fb9fe792bd1930eab49f07e93e50713ad021fc5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected String computeSubstitution(int c)", "signatureAfterChange": " \tprotected String computeSubstitution(int c) throws IOException", "diff": ["-\tprotected String computeSubstitution(int c) {", "+\tprotected String computeSubstitution(int c) throws IOException {", "-\t\tif (c == '@')", "-\t\t\treturn this.beginLine ? \"&#064;\" : null; //$NON-NLS-1$", "-\t\telse if (c == '\\n' || c == '\\r')", "-\t\t\tthis.beginLine = true;", "-\t\telse if (!ScannerHelper.isWhitespace((char) c)) {", "-\t\t\tthis.beginLine = false;", "+\t\tif (c == '@') {", "+\t\t\treturn (this.bits & BEGIN_LINE) != 0 ? \"&#064;\" : null; //$NON-NLS-1$", "+\t\t}", "+\t\tif (c == '*') {", "+\t\t\tthis.bits &= ~BEGIN_LINE;", "+\t\t\tint next = nextChar();", "+\t\t\tif (next == '/') {", "+\t\t\t\treturn \"&#42;/\"; //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (next == -1) {", "+\t\t\t\treturn \"*\"; //$NON-NLS-1$", "+\t\t\t}", "+\t\t\treturn \"*\" + (char) next; //$NON-NLS-1$", "+\t\t}", "+\t\tif (c == '\\n' || c == '\\r') {", "+\t\t\tthis.bits |= BEGIN_LINE;", "+\t\t} else if (!ScannerHelper.isWhitespace((char) c)) {", "+\t\t\tthis.bits &= ~BEGIN_LINE;"]}], "num": 44243}