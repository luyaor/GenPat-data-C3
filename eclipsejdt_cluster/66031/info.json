{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46d48ba79e3b2ef3cd9c3636ead30997", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8c07434ba7db6eefc0a5db54e30553", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "4ce83257bb1b778dfa58775e5fe4dc9d499340f4", "commitAfterChange": "bd297a6cb55c56ac121bf45ea00a0a13e2fd1cf7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r protected char[] writeClassFile(ClassFile classFile, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "\r \r protected char[] writeClassFile(ClassFile classFile, boolean isSecondaryType) throws CoreException", "diff": ["-\t\tfile.create(new ByteArrayInputStream(bytes), true, null);\r", "+\t\tInputStream inputStream = null;\r", "+\t\ttry {\r", "+\t\t\tinputStream = new BufferedInputStream(new ByteArrayInputStream(bytes));\r", "+\t\t\tfile.create(inputStream, true, null);\r", "+\t\t} finally {\r", "+\t\t\tif (inputStream != null){\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tinputStream.close();\r", "+\t\t\t\t} catch(IOException e){\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a41761ee04848aa7d07d488383a022e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "80cc85114a1a71eb1ccf627f315767a1b7408d18", "commitAfterChange": "35cc37a81c11a85b80711dc9254583886e12d562", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\tfor (Iterator iter =  this.perProjectInfos.values().iterator(); iter.hasNext();) {", "-\t\t\ttry {", "-\t\t\t\tPerProjectInfo info = (PerProjectInfo) iter.next();", "-\t\t\t\tsaveState(info, context);", "-\t\t\t\tinfo.rememberExternalLibTimestamps();", "-\t\t\t} catch (CoreException e) {", "-\t\t\t\tif (vStats == null)", "-\t\t\t\t\tvStats= new ArrayList();", "-\t\t\t\tvStats.add(e.getStatus());", "+\t\tArrayList values = null;", "+\t\tsynchronized(this.perProjectInfos) {", "+\t\t\tvalues = new ArrayList(this.perProjectInfos.values());", "+\t\t}", "+\t\tif (values != null) {", "+\t\t\tIterator iterator = values.iterator();", "+\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\ttry {", "+\t\t\t\t\tPerProjectInfo info = (PerProjectInfo) iterator.next();", "+\t\t\t\t\tsaveState(info, context);", "+\t\t\t\t\tinfo.rememberExternalLibTimestamps();", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\tif (vStats == null)", "+\t\t\t\t\t\tvStats= new ArrayList();", "+\t\t\t\t\tvStats.add(e.getStatus());", "+\t\t\t\t}"]}], "num": 66031}