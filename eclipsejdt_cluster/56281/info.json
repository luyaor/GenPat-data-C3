{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88348ba656472181d52d9895e2acca64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "099d86937da658fa83c7a49ce828356d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "c0eface7c51e3af184baaa0d320e58e29799e4b8", "commitAfterChange": "ed97a9ed7d7ba3ec97e93e9090fed591e33f5e45", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "diff": ["+ */", "+public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException {", "+\tif (isWorkingCopy()) return this;", "+\t", "+\t// AND use the same owner.", "+\t\tJavaModelManager.PerWorkingCopyInfo perWorkingCopyInfo = ", "+\t\t\tmanager.getPerWorkingCopyInfo(workingCopy, false/*don't create*/, true /*record usage*/, null/*not used since don't create*/);", "- */", "-public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException {", "-\tif (isWorkingCopy()) return this;", "-\t", "-\tCompilationUnit workingCopy = ", "-\t\tnew CompilationUnit(", "-\t\t\t(IPackageFragment)getParent(), ", "-\t\t\tgetElementName(), ", "-\t\t\tworkingCopyOwner);", "-\tBecomeWorkingCopyOperation op = new BecomeWorkingCopyOperation(workingCopy, null, problemRequestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2e404513b3c52e9f0da64da3381df5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 75, "signatureBeforeChange": " public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["- */", "-public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException {", "-\tCreateWorkingCopyOperation op = new CreateWorkingCopyOperation(this, null, factory, problemRequestor);", "-\trunOperation(op, pm);", "-\treturn op.getResultElements()[0];", "-}", "+ */", "+public IJavaElement getWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException {", "+\tif (isWorkingCopy()) return this;", "+\t", "+\tCompilationUnit workingCopy = ", "+\t\t\t(IPackageFragment)getParent(), ", "+\t\t\tgetElementName(), ", "+\t\t\tnew DefaultCompilationUnitOwner(factory, problemRequestor));", "+\tBecomeWorkingCopyOperation op = new BecomeWorkingCopyOperation(workingCopy, null);", "+\trunOperation(op, pm);", "+\treturn workingCopy;", "+}"]}], "num": 56281}