{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "859a776ca896350735b0f6e2bc86d80d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a00d094bdb0c6c0214c944933f48935", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b7bb9d2950572af77f85c2c708c3816367817930", "commitAfterChange": "6cea394a74122bc3b2f5fee1a70c7921f0e635d8", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " public void illegalQualifierForExplicitThis(Receiver receiver, TypeBinding expectedType)", "signatureAfterChange": " public void illegalQualifierForExplicitThis(Receiver receiver, TypeBinding expectedType)", "diff": ["+\tString[] problemArguments = new String[] { new String(expectedType.sourceName())};", "-\t\tnew String[] { new String(expectedType.readableName())},", "-\t\tnew String[] { new String(expectedType.qualifiedSourceName())},", "-\t\treceiver.sourceStart,", "+\t\tproblemArguments,", "+\t\tproblemArguments,", "+\t\t(receiver.qualifyingName == null) ? receiver.sourceStart : receiver.qualifyingName.sourceStart,", "+\t\treceiver.sourceEnd);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb8faae53ed2286c13aab29734eebc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "4b71ef3be11b1e52d22d795d03898285bb112516", "commitAfterChange": "9966baba46edc3df548fabd09b133cadc0093ca6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void cannotReferToNonEffectivelyFinalOuterLocal(LocalVariableBinding local, ASTNode location)", "signatureAfterChange": " public void cannotReferToNonEffectivelyFinalOuterLocal(LocalVariableBinding local, ASTNode location)", "diff": ["-\tString[] arguments =new String[]{ new String(local.readableName())};", "+\tString[] arguments = new String[] { new String(local.readableName()) };", "-\t\t(location.bits & ASTNode.IsFromOutsideLambda) != 0 ? IProblem.OuterLocalMustBeEffectivelyFinal : IProblem.OuterLocalUnderLambdaMustBeEffectivelyFinal, ", "+\t\tIProblem.OuterLocalMustBeEffectivelyFinal, "]}], "num": 31808}