{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be475bcd0e869d866759acb86ed8af8b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0c7ee6776985c978cb241330615b11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tconstant = NotAConstant;", "+\t\tconstant = Constant.NotAConstant;", "-\t\tif ((condConstant = condition.constant) != NotAConstant", "-\t\t\t&& (trueConstant = valueIfTrue.constant) != NotAConstant", "-\t\t\t&& (falseConstant = valueIfFalse.constant) != NotAConstant) {", "+\t\tif ((condConstant = condition.constant) != Constant.NotAConstant", "+\t\t\t&& (trueConstant = valueIfTrue.constant) != Constant.NotAConstant", "+\t\t\t&& (falseConstant = valueIfFalse.constant) != Constant.NotAConstant) {", "-\t\t\t\tif (this.optimizedIfTrueConstant != NotAConstant ", "-\t\t\t\t\t\t&& this.optimizedIfFalseConstant != NotAConstant", "+\t\t\t\tif (this.optimizedIfTrueConstant != Constant.NotAConstant ", "+\t\t\t\t\t\t&& this.optimizedIfFalseConstant != Constant.NotAConstant", "-\t\t\t\t} else if ((condConstant = condition.optimizedBooleanConstant()) != NotAConstant) { // Propagate the optimized boolean constant if possible", "+\t\t\t\t} else if ((condConstant = condition.optimizedBooleanConstant()) != Constant.NotAConstant) { // Propagate the optimized boolean constant if possible"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "929fa7d92ee188f55d627d730ce88080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tif (constant != NotAConstant) {", "+\t\tif (constant != Constant.NotAConstant) {", "-\t\t\t!(((cst != NotAConstant) && (cst.booleanValue() == false))", "-\t\t\t\t|| ((condCst != NotAConstant) && (condCst.booleanValue() == false)));", "+\t\t\t!(((cst != Constant.NotAConstant) && (cst.booleanValue() == false))", "+\t\t\t\t|| ((condCst != Constant.NotAConstant) && (condCst.booleanValue() == false)));", "-\t\t\t!(((cst != NotAConstant) && (cst.booleanValue() == true))", "-\t\t\t\t|| ((condCst != NotAConstant) && (condCst.booleanValue() == true)));", "+\t\t\t!(((cst != Constant.NotAConstant) && (cst.booleanValue() == true))", "+\t\t\t\t|| ((condCst != Constant.NotAConstant) && (condCst.booleanValue() == true)));", "-\t\tboolean needConditionValue = (cst == NotAConstant) && (condCst == NotAConstant);", "+\t\tboolean needConditionValue = (cst == Constant.NotAConstant) && (condCst == Constant.NotAConstant);"]}], "num": 62444}