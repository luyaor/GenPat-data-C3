{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b5ba3ecbf7e38834a55ac542fc70e92", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8589294e76ab794de644155656ace6fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "86284f2db6c7ac41b63c1766c9b7b3a016d95a9a", "commitAfterChange": "c8d8bdad35a9dc8d924116cabb6dd00986cff218", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t", "+\t\t\t\tcase ProblemReasons.IntersectionHasMultipleFunctionalInterfaces:", "+\t\t\t\t\tblockScope.problemReporter().multipleFunctionalInterfaces(this);", "+\t\t\t\t\tbreak;", "-\t\treturn this.resolvedType = this.expectedType;  // if interface IJ extends I, J() & IJ's descriptor is I.foo, can't return I", "+\t\treturn this.resolvedType = this.expectedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3864b555f91901c21ac4a1e2efd5465", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "4a14b7996200c4956ab362ea6fbd0444521a03e1", "commitAfterChange": "3753b28bebe99ff942eee6c541786e0784acbee4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\r \r \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tcase (T_void) :\r", "+\t\t\t\tscope.problemReporter().illegalVoidExpression(expression);\r", "+\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1a5e52e181934423ea4dbff198dc060", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "f463f267bd3e26fe15afb712785b8045bca4918d", "commitAfterChange": "127c5aac940d6a1c5a28540905b27ce397eeca14", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t\tcase FlowInfo.POTENTIALLY_NULL :", "+\t\t\t\tflowInfo.markAsPotentiallyNull(this.binding);", "+\t\t\t\tbreak;"]}], "num": 62885}