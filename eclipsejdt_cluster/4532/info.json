{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a2b415cd107f651e9cb70df9201654d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22e3a2cc595a1bc41bdbe01733a64c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7c6fe4f21cb5ba3a5ee61e01b5b0b2742e043690", "commitAfterChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic boolean visit(UnionType node)", "signatureAfterChange": " \tpublic boolean visit(UnionType node)", "diff": ["-\t\tint pos= node.getStartPosition();", "-\t\tif (isChanged(node, UnionType.TYPES_PROPERTY)) {", "-\t\t\tpos= rewriteNodeList(node, UnionType.TYPES_PROPERTY, pos, Util.EMPTY_STRING, \" | \"); //$NON-NLS-1$", "-\t\t} else {", "-\t\t\tpos= doVisit(node, UnionType.TYPES_PROPERTY, pos);", "-\t\t}", "+\t\trewriteNodeList(node, UnionType.TYPES_PROPERTY, node.getStartPosition(), Util.EMPTY_STRING, \" | \"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b2ce3eff38daa701f91d0edb677ddd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7c6fe4f21cb5ba3a5ee61e01b5b0b2742e043690", "commitAfterChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic boolean visit(IntersectionType node)", "signatureAfterChange": " \tpublic boolean visit(IntersectionType node)", "diff": ["-\t\tint pos= node.getStartPosition();", "-\t\tif (isChanged(node, IntersectionType.TYPES_PROPERTY)) {", "-\t\t\tpos= rewriteNodeList(node, IntersectionType.TYPES_PROPERTY, pos, Util.EMPTY_STRING, \" & \"); //$NON-NLS-1$", "-\t\t} else {", "-\t\t\tpos= doVisit(node, IntersectionType.TYPES_PROPERTY, pos);", "-\t\t}", "+\t\trewriteNodeList(node, IntersectionType.TYPES_PROPERTY, node.getStartPosition(), Util.EMPTY_STRING, \" & \"); //$NON-NLS-1$"]}], "num": 4532}