{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cced5168e1f8b3109ee5c8fbb034cba", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6b31a15fc1435f7431fcae5bafa3b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "16d018b1beaec2325e8b119cf0432c848cb2dd74", "commitAfterChange": "5fc8600e6f17e6e4fd307bebe716e17bee3d53b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": " public void add(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tadd(\"\", containerPath.toString(), true, null); //$NON-NLS-1$", "+\t\t\tIResource rootResource = root.getResource();", "+\t\t\tif (rootResource != null && rootResource.isAccessible()) {", "+\t\t\t\tString relativePath = Util.relativePath(rootResource.getFullPath(), containerPath.segmentCount());", "+\t\t\t\tadd(relativePath, containerPath.toString(), true, null);", "+\t\t\t} else {", "+\t\t\t\tadd(\"\", containerPath.toString(), true, null); //$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8dc840a1bec2afdba537e13cb3c801e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "99a320ba218a453cde9430d003d516f8202cd4ca", "commitAfterChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "diff": ["+\t\t\tfinal TypeBinding resolvedTypeBinding = this.expression.resolvedType;", "+\t\t\tif (caseCount > 0 && resolvedTypeBinding.isEnum()) {", "+\t\t\t\tfinal SourceTypeBinding sourceTypeBinding = this.scope.classScope().referenceContext.binding;", "+\t\t\t\tthis.synthetic = sourceTypeBinding.addSyntheticMethodForSwitchEnum(resolvedTypeBinding);", "+\t\t\t}"]}], "num": 12508}