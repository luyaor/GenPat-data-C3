{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64b8c96f0155d528b8743e384d06317c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c0259b41aea73ff7ec3edf652541e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuilderTests.java", "commitBeforeChange": "69bc819e497f981a0e9ba9cc4eab5b16567ae106", "commitAfterChange": "0189869d5d518ec997809fc580e44b7c092ef3d3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprotected void printProblemsFor(IPath[] roots)", "signatureAfterChange": "  \tprotected void printProblemsFor(IPath[] roots)", "diff": ["-\t\t\tfor (int j = 0; j < problems.length; j++)", "-\t\t\t\tSystem.out.println(problems[j].toString());", "+\t\t\tSystem.out.println(problems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8adfd7c586a5df61a2460707c4aee4f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate long[] parseFile(String fileName, int repeat) throws InvalidInputException, IOException", "signatureAfterChange": " \tprivate long[] parseFile(String fileName, int iterations) throws InvalidInputException, IOException", "diff": ["-\tprivate long[] parseFile(String fileName, int repeat) throws InvalidInputException, IOException {", "+\tprivate long[] parseFile(String fileName, int iterations) throws InvalidInputException, IOException {", "-\t\t// warm-up", "+\t\t// Warm-up", "-\t\t// loop for time measuring", "+\t\t// Measures", "+\t\tif (DEBUG) {", "+\t\t\tstart = System.currentTimeMillis();", "+\t\t}", "-\t\tfor (int i = 0; i < REPEAT; i++) {", "-\t\t\tif (DEBUG) {", "-\t\t\t\tstart = System.currentTimeMillis();", "-\t\t\t}", "-\t\t\t// Measure time for parse", "-\t\t\tfor (int j = 0; j < repeat; j++) {", "-\t\t\t\tICompilationUnit unit = new CompilationUnit(content, file.getName(), null);", "-\t\t\t\tCompilationResult unitResult = new CompilationResult(unit, 0, 1, options.maxProblemsPerUnit);\t\t\t\t", "-\t\t\t\tCompilationUnitDeclaration unitDeclaration = parser.dietParse(unit, unitResult);", "-\t\t\t\tparser.getMethodBodies(unitDeclaration);", "-\t\t\t\tparsedCharacters += content.length;", "-\t\t\t\tparsedLines += unitResult.lineSeparatorPositions.length;", "-            }", "-", "-\t\t\t// Warn if measure time is not enough while debugging", "-\t\t\tif (DEBUG) {", "-\t\t\t\tlong time = System.currentTimeMillis() - start;", "-\t\t\t\tif (time < TIME_THRESHOLD) {", "-\t\t            System.err.print(parsedLines + \" lines/\"+ parsedCharacters + \" characters parsed\");", "-\t\t\t\t} else {", "-\t\t            System.out.print(parsedLines + \" lines/\"+ parsedCharacters + \" characters parsed\");", "-\t\t\t\t}", "-\t\t\t}", "+\t\tfor (int i = 0; i < iterations; i++) {", "+\t\t\tICompilationUnit unit = new CompilationUnit(content, file.getName(), null);", "+\t\t\tCompilationResult unitResult = new CompilationResult(unit, 0, 1, options.maxProblemsPerUnit);\t\t\t\t", "+\t\t\tCompilationUnitDeclaration unitDeclaration = parser.dietParse(unit, unitResult);", "+\t\t\tparser.getMethodBodies(unitDeclaration);", "+\t\t\tparsedCharacters += content.length;", "+\t\t\tparsedLines += unitResult.lineSeparatorPositions.length;", "+", "+\t\t// Warn if measure time is not enough while debugging", "+\t\tif (DEBUG) {", "+\t\t\tlong time = System.currentTimeMillis() - start;", "+\t\t\tif (time < TIME_THRESHOLD) {", "+\t            System.err.print(parsedLines + \" lines/\"+ parsedCharacters + \" characters parsed\");", "+\t\t\t} else {", "+\t            System.out.print(parsedLines + \" lines/\"+ parsedCharacters + \" characters parsed\");", "+\t\t\t}", "+\t\t}"]}], "num": 14793}