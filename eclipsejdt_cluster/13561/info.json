{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d32e0197e148af70101bca48924683ee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d789439f893e2846de2b7b0ea3ba6d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/ElementProc.java", "commitBeforeChange": "c4f17ac79e05c4dff8c3cc6e660e1fc73ee3406f", "commitAfterChange": "29d06747dc9924aaa37b6f5478bee32ae657345a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \t@Override \tpublic boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\tSet<String> expectedRootElementNames = new HashSet<String>(_rootElementNames.length);", "-\t\tfor (String name : _rootElementNames) {", "+\t\tSet<String> expectedRootElementNames = new HashSet<String>(ROOT_ELEMENT_NAMES.length);", "+\t\tfor (String name : ROOT_ELEMENT_NAMES) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b45e6a6467cd99b103c62c92cee189", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "1a085f6923332d813470a8d5ddda1ced463837b2", "commitAfterChange": "ed6404d1b00fb0c4d7b0edc065f94f5cf30ee47f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["-\t\tSet<TypeElement> elements = new HashSet<TypeElement>(_units.length);", "+\t\tSet<Element> elements = new HashSet<Element>(_units.length);", "-\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(binding);", "+\t\t\t\tElement element = _factory.newElement(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3863a7d53895e9f9335ff158b42995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-\t\t\t\tTypeElement anno = (TypeElement)Factory.newElement(binding.getAnnotationType()); ", "-\t\t\t\tElement element = Factory.newElement(currentBinding);", "+\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(binding.getAnnotationType()); ", "+\t\t\t\tElement element = _factory.newElement(currentBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b0a02b0976b0bc3919b2b4618adfc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["-\t\t\t\tTypeElement element = (TypeElement)Factory.newElement(binding);", "+\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(binding);", "-\t\t\t\tTypeElement element = (TypeElement)Factory.newElement(typeBinding);", "+\t\t\t\tTypeElement element = (TypeElement)_factory.newElement(typeBinding);"]}], "num": 13561}