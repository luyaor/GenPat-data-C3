{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a2beddd4002ba833e4b74ae7689ddce", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5cc8d6c39a6f6b8dc07ac20b1b4807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tprivate int retrieveRightBraceOrSemiColonPosition(MethodDeclaration node, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \tprotected int retrieveRightBraceOrSemiColonPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveRightBraceOrSemiColonPosition(MethodDeclaration node, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration) {", "-\t\tint start = node.getStartPosition();", "-\t\tthis.scanner.resetTo(start, methodDeclaration.declarationSourceEnd);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\tint braceCounter = 0;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE :", "-\t\t\t\t\t\tbraceCounter++;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "-\t\t\t\t\t\tbraceCounter--;", "-\t\t\t\t\t\tif (braceCounter == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase TerminalTokens.TokenNameSEMICOLON :", "-\t\t\t\t\t\tif (braceCounter == 0) {", "-\t\t\t\t\t\t\treturn this.scanner.currentPosition;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveRightBraceOrSemiColonPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameRBRACE :", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t\tcase TerminalTokens.TokenNameSEMICOLON :", "+\t\t\t\t\t\treturn this.scanner.currentPosition - 1;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d36a93dae8b9240ad132fecf8eb7a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "33e03339ed2881c9f793c3a49497633bbac5c8a8", "commitAfterChange": "09c3f545375b31028657f0b8044c5cbcb5324abc", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void recordCompletionOnReference()", "signatureAfterChange": " protected void checkAndSetModifiers(int flag)", "diff": ["+}", "+protected void checkAndSetModifiers(int flag) {", "+\tsuper.checkAndSetModifiers(flag);", "+\t", "+\tif (this.isInsideMethod()) {", "+\t\tthis.hasUnusedModifiers = true;", "+\t}", "-public void recordCompletionOnReference(){", "-", "-\tif (currentElement instanceof RecoveredType){", "-\t\tRecoveredType recoveredType = (RecoveredType)currentElement;", "-", "-\t\t/* filter out cases where scanner is still inside type header */", "-\t\tif (!recoveredType.foundOpeningBrace) return;", "-", "-\t\t/* generate a pseudo field with a completion on type reference */", "-\t\tcurrentElement.add(", "-\t\t\tnew CompletionOnFieldType(this.getTypeReference(0), false), 0);", "-\t\treturn;", "-\t}", "-\tif (!diet) return; // only record references attached to types", "-", "-}"]}], "num": 53939}