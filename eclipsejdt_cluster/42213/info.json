{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c870862cec524f41ced1fe1c1a69892", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3517646d525454fa5c8040b7df50ccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+ */", "+protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "+\tif (binding == null) {", "+\t\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\t} else {", "+\t\tif (binding instanceof ImportBinding) {", "+\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, importRef.tokens, element, accuracy);", "+\t\t} else if (binding instanceof ReferenceBinding) {", "+\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)binding).fPackage;", "+\t\t\tif (pkgBinding != null)", "+\t\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, pkgBinding.compoundName, element, accuracy);", "+\t\t\telse", "+\t\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, importRef.tokens, element, accuracy);", "+\t\t} ", "+\t}", "- */", "-protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "-\tif (binding == null) {", "-\t\tthis.matchReportReference(importRef, element, accuracy, locator);", "-\t} else {", "-\t\tif (binding instanceof ImportBinding) {", "-\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, importRef.tokens, element, accuracy);", "-\t\t} else if (binding instanceof ReferenceBinding) {", "-\t\t\tPackageBinding pkgBinding = ((ReferenceBinding)binding).fPackage;", "-\t\t\tif (pkgBinding != null) {", "-\t\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, pkgBinding.compoundName, element, accuracy);", "-\t\t\t} else {", "-\t\t\t\tlocator.reportAccurateReference(importRef.sourceStart, importRef.sourceEnd, importRef.tokens, element, accuracy);", "-\t\t\t}", "-\t\t} ", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6d9db4ff1875b7a4b70952fbabbfa9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariableLocator.java", "commitBeforeChange": "cb3a630359a22f7ce6166a489826cbd44a0698c7", "commitAfterChange": "684148daf1ae1fa5c2a3b4e261bbfa56ad328f58", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+}", "+protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "+\tif (reference instanceof SingleNameReference) {", "+\t\tlocator.report(reference.sourceStart, reference.sourceEnd, element, accuracy);", "+\t} else if (reference instanceof QualifiedNameReference) {", "+\t\tQualifiedNameReference qNameRef = (QualifiedNameReference) reference;", "+\t\tlong sourcePosition = qNameRef.sourcePositions[0];", "+\t\tlocator.report(sourcePosition, sourcePosition, element, accuracy);", "+\t} else if (reference instanceof LocalDeclaration) {", "+\t\tLocalVariable localVariable = getLocalVariable();", "+\t\tlocator.report(localVariable.nameStart, localVariable.nameEnd, localVariable, accuracy);", "+}", "-\tprotected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "-\t\tif (reference instanceof SingleNameReference) {", "-\t\t\tlocator.report(reference.sourceStart, reference.sourceEnd, element, accuracy);", "-\t\t} else if (reference instanceof QualifiedNameReference) {", "-\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference) reference;", "-\t\t\tlong sourcePosition = qNameRef.sourcePositions[0];", "-\t\t\tint sourceStart = (int) (sourcePosition >>> 32);", "-\t\t\tint sourceEnd = (int) sourcePosition;", "-\t\t\tlocator.report(sourceStart, sourceEnd, element, accuracy);", "-\t\t} else if (reference instanceof LocalDeclaration) {", "-\t\t\tLocalVariable localVariable = getLocalVariable();", "-\t\t\tlocator.report(localVariable.nameStart, localVariable.nameEnd, localVariable, accuracy);", "-\t\t}", "-\t}"]}], "num": 42213}