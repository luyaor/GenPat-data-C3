{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8ae3b100e08f8b9c618067e6a37be16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e506809eece31bc90038c41f5b079bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["+\t\t\tReferenceBinding enclosing = resolvedType.enclosingType();", "+\t\t\tif (enclosing != null) {", "+\t\t\t\tthis.enclosingType = (ReferenceBinding) env.convertToRawType(enclosing); // needed when binding unresolved member type", "+\t\t\t}", "-\t\t\t\t\tthis.arguments[i] = resolvedType.isGenericType() ? env.createRawType(resolvedType, resolvedType.enclosingType()) : resolvedType;", "+\t\t\t\t\tthis.arguments[i] = env.convertToRawType(resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac665b2e170f352d6390e5b591cde6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "9775053c06b88abc4990b96720855b4d26f13ab7", "commitAfterChange": "61d6a0379a06ef6680e82e7f6a32f04040234762", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["-\t\t\t\tthis.enclosingType = (ReferenceBinding) env.convertToRawType(enclosing); // needed when binding unresolved member type", "+\t\t\t\tthis.enclosingType = (ReferenceBinding) env.convertUnresolvedBinaryToRawType(enclosing); // needed when binding unresolved member type", "-\t\t\t\t\tthis.arguments[i] = env.convertToRawType(resolvedType);", "+\t\t\t\t\tthis.arguments[i] = env.convertUnresolvedBinaryToRawType(resolvedType);"]}], "num": 57950}