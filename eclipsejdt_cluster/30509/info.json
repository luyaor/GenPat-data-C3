{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fa9a36513b1d94b738c236674ca027a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc4018ec41b17623f541dace04dd9c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\t\t\t\t&& ((local.declaration.bits & AstNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "+\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "-\t\t\t\t\t\t\tlocal.declaration == null ? (AstNode)this.methodScope().referenceContext : local.declaration);", "+\t\t\t\t\t\t\tlocal.declaration == null ? (ASTNode)this.methodScope().referenceContext : local.declaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91d9710d6121515cf0646b047748244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-\t\t\t\t\t&& ((local.declaration.bits & AstNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "+\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "-\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(argument, (AstNode)this.referenceContext); ", "+\t\t\t\t\tthis.problemReporter().noMoreAvailableSpaceForArgument(argument, (ASTNode)this.referenceContext); "]}], "num": 30509}