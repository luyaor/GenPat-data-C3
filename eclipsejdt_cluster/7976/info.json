{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "012d7502dc4789bcd0c819a169b3fb15", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f256559ebb6a718350ba65188aac91da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 419, "signatureBeforeChange": " \tASTNode oneOfEach(AST target)", "signatureAfterChange": " \tASTNode oneOfEach(AST target)", "diff": ["-\t\tcu.setSourceRange(0, 1000);", "-\t\tpd.setSourceRange(0, 5);", "-\t\tim.setSourceRange(6, 5);", "-\t\tim.setSourceRange(11, 900);", "-\t\tJavadoc javadoc = target.newJavadoc();", "-\t\tjavadoc.setSourceRange(11, 5);", "-\t\ttd.setJavadoc(javadoc);", "-\t\t", "+\t\tJavadoc javadoc = target.newJavadoc();", "+\t\ttd.setJavadoc(javadoc);", "+\t\tjavadoc.fragments().add(target.newTextElement());", "+\t\tTagElement tg = target.newTagElement();", "+\t\tjavadoc.fragments().add(tg);", "+\t\ttg.fragments().add(target.newMemberRef());", "+\t\tMethodRef mr = target.newMethodRef();", "+\t\ttg.fragments().add(mr);", "+\t\tmr.parameters().add(target.newMethodRefParameter());", "+\t\t\t\t", "-\t\tvariableDeclarationFragment.setSourceRange(16, 5);", "-\t\tfd.setSourceRange(16, 5);", "-\t\tin.setSourceRange(21, 5);", "-\t\t", "+\t", "-\t\tmd.setSourceRange(26, 800);", "-\t\tsingleVariableDeclaration.setSourceRange(30, 5);", "-\t\tsn1.setSourceRange(35, 5);", "-\t\tsn2.setSourceRange(41, 5);", "-\t\tqn.setSourceRange(35, 11);", "-\t\tSimpleType st = target.newSimpleType(qn);", "-\t\tst.setSourceRange(35, 11);", "-\t\tpt.setSourceRange(41, 5);", "-\t\tArrayType at = target.newArrayType(st);", "-\t\tat.setSourceRange(41, 7);", "+\t\tArrayType at = target.newArrayType(pt);", "+\t\tfd.setType(at);", "-\t\tmd.setReturnType(at);", "-\t\tfd.setType(pt);", "-\t\t", "-\t\tb.setSourceRange(46, 700);", "-\t\tassertStatement.setSourceRange(46, 5);", "-\t\tblock.setSourceRange(51, 5);", "-\t\tbreakStatement.setSourceRange(55, 5);", "-\t\tcontinueStatement.setSourceRange(61, 5);", "-\t\tconstructorInvocation.setSourceRange(65, 5);", "-\t\tdoStatement.setSourceRange(70, 5);", "-\t\temptyStatement.setSourceRange(75, 5);", "-\t\tnullLiteral.setSourceRange(80, 5);", "-\t\texpressionStatement.setSourceRange(80, 5);", "-\t\tforStatement.setSourceRange(86, 5);", "-\t\tifStatement.setSourceRange(90, 5);", "-\t\tlabeledStatement.setSourceRange(95, 5);", "-\t\treturnStatement.setSourceRange(100, 5);", "-\t\tsuperConstructorInvocation.setSourceRange(105, 5);", "-\t\tss.setSourceRange(110, 5);", "-\t\tswitchCase.setSourceRange(110, 5);", "-\t\tswitchStatement.setSourceRange(115, 5);", "-\t\tswitchCase2.setSourceRange(120, 5);", "-\t\tsynchronizedStatement.setSourceRange(125, 5);", "-\t\tthrowStatement.setSourceRange(130, 5);", "-\t\ttr.setSourceRange(135, 5);", "-\t\tcatchClause.setSourceRange(135, 5);", "-\t\t\ttr.catchClauses().add(catchClause);", "-\t\t\tb.statements().add(tr);", "+\t\ttr.catchClauses().add(catchClause);", "+\t\tb.statements().add(tr);", "-\t\ttypeDeclaration.setSourceRange(140, 5);", "-\t\ttypeDeclarationStatement.setSourceRange(140, 6);", "-\t\tvariableDeclarationFragment2.setSourceRange(150, 5);", "-\t\tvariableDeclarationStatement.setSourceRange(150, 6);", "-\t\twhileStatement.setSourceRange(155, 5);", "-\t\tinv.setSourceRange(200, 300);", "-\t\texpressionStatement2.setSourceRange(400, 5);", "-\t\tarrayAccess.setSourceRange(200, 5);", "-\t\tarrayCreation.setSourceRange(210, 5);", "-\t\tarrayInitializer.setSourceRange(220, 5);", "-\t\tassignment.setSourceRange(230, 5);", "-\t\tbooleanLiteral.setSourceRange(240, 5);", "-\t\tcastExpression.setSourceRange(250, 5);", "-\t\tcharacterLiteral.setSourceRange(260, 5);", "-\t\tcic.setSourceRange(270, 9);", "-\t\tanonymousClassDeclaration.setSourceRange(270, 5);", "-\t\tconditionalExpression.setSourceRange(280, 5);", "-\t\tfieldAccess.setSourceRange(290, 5);", "-\t\tinfixExpression.setSourceRange(300, 5);", "-\t\tinstanceofExpression.setSourceRange(310, 5);", "-\t\tmethodInvocation.setSourceRange(320, 5);", "-\t\tname.setSourceRange(330, 5);", "-\t\tnullLiteral2.setSourceRange(336, 3);", "-\t\tnumberLiteral.setSourceRange(340, 5);", "-\t\tparenthesizedExpression.setSourceRange(350, 5);", "-\t\tpostfixExpression.setSourceRange(360, 5);", "-\t\tprefixExpression.setSourceRange(370, 5);", "-\t\tstringLiteral.setSourceRange(380, 5);", "-\t\tsuperFieldAccess.setSourceRange(390, 5);", "-\t\tsuperMethodInvocation.setSourceRange(400, 5);", "-\t\tthisExpression.setSourceRange(410, 6);", "-\t\ttypeLiteral.setSourceRange(420, 5);", "-\t\tvariableDeclarationFragment3.setSourceRange(430, 5);", "-\t\tvariableDeclarationExpression.setSourceRange(430, 5);", "-", "-\t\tASTNode clone = ASTNode.copySubtree(ast, cu);", "-\t\tassertTrue(cu.subtreeMatch(new CheckPositionsMatcher(), clone));", "-\t}\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7933b6de8781ef32f0076ab53b8fa4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd);", "+\t\tsetSourceAndTokenRange(astNode.sourceStart, astNode.sourceEnd);", "-\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\tsetSourceAndTokenRange(type.sourceStart, type.sourceEnd);", "-\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\tsetSourceAndTokenRange(type.sourceStart, type.sourceEnd);", "-\t\t\t\t\tthis.setSourceRange(astNode.sourceStart, astNode.sourceStart - 1, false);", "+\t\t\t\t\tthis.setSourceAndTokenRange(astNode.sourceStart, astNode.sourceStart - 1, false);", "-\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tsetTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t", "-\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tsetTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd, false);", "+\t\t\tsetSourceAndTokenRange(astNode.sourceStart, astNode.sourceEnd, false);", "-\t\t\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd, false);", "+\t\t\t\tsetSourceAndTokenRange(astNode.sourceStart, astNode.sourceEnd, false);", "-\t\t\tsetSourceRange(astNode.sourceStart, astNode.sourceEnd, false);", "+\t\t\tsetSourceAndTokenRange(astNode.sourceStart, astNode.sourceEnd, false);", "-\t\t\t\tsetSourceRange(access.classStart, access.sourceEnd);", "+\t\t\t\tsetSourceAndTokenRange(access.classStart, access.sourceEnd);", "-\t\t\t\tsetSourceRange(method.sourceStart, method.selectorEnd);", "+\t\t\t\tsetSourceAndTokenRange(method.sourceStart, method.selectorEnd);", "-\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\tsetSourceRange(type.sourceStart, type.sourceEnd);", "+\t\t\t\tsetSourceAndTokenRange(type.sourceStart, type.sourceEnd);", "+\t\t\t\t\tsetTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\t\tsetSourceRange((int) (completionPosition >>> 32), (int) completionPosition);", "+\t\t\t\t\tsetSourceAndTokenRange((int) (completionPosition >>> 32), (int) completionPosition);", "-\t\t\t\tsetSourceRange(typeRef.sourceStart, typeRef.sourceEnd);", "+\t\t\t\tsetSourceAndTokenRange(typeRef.sourceStart, typeRef.sourceEnd);", "-\t\t\t\t\t\tsetSourceRange(rangeStart, (int) completionPosition);", "+\t\t\t\t\t\tsetSourceAndTokenRange(rangeStart, (int) completionPosition);", "+\t\t\t\t\tint rangeStart = typeRef.completeInText() ? typeRef.sourceStart : (int) (completionPosition >>> 32);", "+\t\t\t\t\tsetTokenRange(rangeStart, (int) completionPosition);", "-\t\t\t\t\tsetSourceRange(rangeStart, (int) completionPosition);", "+\t\t\t\t\tsetSourceAndTokenRange(rangeStart, (int) completionPosition);", "-\t\t\t\tsetSourceRange(rangeStart, astNode.sourceEnd, false);", "+\t\t\t\tsetSourceAndTokenRange(rangeStart, astNode.sourceEnd, false);", "-\t\t\t\tsetSourceRange(rangeStart, astNode.sourceEnd, false);", "+\t\t\t\tsetSourceAndTokenRange(rangeStart, astNode.sourceEnd, false);", "-\t\t\t\t\tsetSourceRange(paramRef.tagSourceStart, paramRef.tagSourceEnd);", "+\t\t\t\t\tsetSourceAndTokenRange(paramRef.tagSourceStart, paramRef.tagSourceEnd);", "-\t\t\t\t\tsetSourceRange(paramRef.tagSourceStart, paramRef.tagSourceEnd);", "+\t\t\t\t\tsetSourceAndTokenRange(paramRef.tagSourceStart, paramRef.tagSourceEnd);", "-\t\t\t\tsetSourceRange(javadocTag.tagSourceStart, javadocTag.sourceEnd);", "+\t\t\t\tsetSourceAndTokenRange(javadocTag.tagSourceStart, javadocTag.sourceEnd);"]}], "num": 7976}