{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7e3e5c8b51b5fca96c832d00ce2d608", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61611124a13dba9dcf4c610972bc30b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "48bab711db6e0472fa45fb28e5778f6422d07ceb", "commitAfterChange": "0d4f9e0363343abbe044f1cc941ee90b174da15b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getBuilderRoots(IResourceDelta delta)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getBuilderRoots(IResourceDelta delta) throws JavaModelException", "diff": ["-\tpublic IPackageFragmentRoot[] getBuilderRoots(IResourceDelta delta)\r", "-\t\tthrows JavaModelException {\r", "+\tpublic IPackageFragmentRoot[] getBuilderRoots(IResourceDelta delta) throws JavaModelException {\r", "+\t\t\r", "+\t\tboolean rememberToDiscard = JavaModelManager.USING_NEW_BUILDER;\r", "+\t\tHashSet rootIDs = new HashSet();\r", "+\t\trootIDs.add(this.rootID());\r", "+\t\tcomputeBuilderRoots(delta, builderRoots, rootIDs, true);\r", "+\t\tIPackageFragmentRoot[] result = new IPackageFragmentRoot[builderRoots.size()];\r", "+\t\tbuilderRoots.toArray(result);\r", "+\t\treturn result;\r", "+\t}\r", "-\t\tclasspath = getExpandedClasspath(true);\r", "-\t\tIJavaProject project;\r", "-\t\t\t\t\tif (roots.length > 0)\r", "-\t\t\t\t\t\tproject = (IJavaProject) JavaCore.create(res);\r", "-\t\t\t\t\t\tproject = (IJavaProject) JavaCore.create(proj);\r", "-\t\tIPackageFragmentRoot[] result = new IPackageFragmentRoot[builderRoots.size()];\r", "-\t\tbuilderRoots.toArray(result);\r", "-\t\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1075ccc7256f69c60c99562ce0d4d46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c0a0c19db3e1c410023eabce30626d520ce59204", "commitAfterChange": "b522a66d284b0239a056370560676a12fc9ec458", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot[] getBuilderRoots(IResourceDelta delta) throws JavaModelException", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot[] getBuilderRoots(IResourceDelta delta) throws JavaModelException", "diff": ["-\t\tVector builderRoots= new Vector();\r", "-\t\tIClasspathEntry[] classpath;\r", "-\t\tclasspath= getResolvedClasspath(true);\r", "-\t\tIResource res;\r", "-\t\tIJavaProject project;\r", "-\t\tfor (int i= 0; i < classpath.length; i++) {\r", "-\t\t\tIClasspathEntry entry= classpath[i];\r", "-\t\t\tswitch (entry.getEntryKind()) {\r", "-\t\t\t\tcase IClasspathEntry.CPE_LIBRARY :\r", "-\t\t\t\t\tIPackageFragmentRoot[] roots= this.getPackageFragmentRoots(entry);\r", "-\t\t\t\t\tif (roots.length > 0)\r", "-\t\t\t\t\t\tbuilderRoots.addElement(roots[0]);\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IClasspathEntry.CPE_PROJECT :\r", "-\t\t\t\t\t// other project contributions are restrained to their binary output\r", "-\t\t\t\t\tres= retrieveResource(entry.getPath(), delta);\r", "-\t\t\t\t\tif (res != null) {\r", "-\t\t\t\t\t\tproject= (IJavaProject) JavaCore.create(res);\r", "-\t\t\t\t\t\tif (project.isOpen()){\r", "-\t\t\t\t\t\t\tres= retrieveResource(project.getOutputLocation(), delta);\r", "-\t\t\t\t\t\t\tif (res != null) {\r", "-\t\t\t\t\t\t\t\tPackageFragmentRoot root= (PackageFragmentRoot) project.getPackageFragmentRoot(res);\r", "-\t\t\t\t\t\t\t\troot.setOccurrenceCount(root.getOccurrenceCount() + 1);\r", "-\t\t\t\t\t\t\t\t((PackageFragmentRootInfo) root.getElementInfo()).setRootKind(IPackageFragmentRoot.K_BINARY);\r", "-\t\t\t\t\t\t\t\troot.refreshChildren();\r", "-\t\t\t\t\t\t\t\tbuilderRoots.addElement(root);\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IClasspathEntry.CPE_SOURCE :\r", "-\t\t\t\t\tif (getCorrespondingResource().getFullPath().isPrefixOf(entry.getPath())) {\r", "-\t\t\t\t\t\tres= retrieveResource(entry.getPath(), delta);\r", "-\t\t\t\t\t\tif (res != null)\r", "-\t\t\t\t\t\t\tbuilderRoots.addElement(getPackageFragmentRoot(res));\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\tIProject proj= (IProject) getWorkspace().getRoot().findMember(entry.getPath());\r", "-\t\t\t\t\t\tproject= (IJavaProject) JavaCore.create(proj);\r", "-\t\t\t\t\t\tif (proj.isOpen()){\r", "-\t\t\t\t\t\t\tres= retrieveResource(project.getOutputLocation(), delta);\r", "-\t\t\t\t\t\t\tPackageFragmentRoot root= (PackageFragmentRoot) project.getPackageFragmentRoot(res);\r", "-\t\t\t\t\t\t\troot.setOccurrenceCount(root.getOccurrenceCount() + 1);\r", "-\t\t\t\t\t\t\t((PackageFragmentRootInfo) root.getElementInfo()).setRootKind(IPackageFragmentRoot.K_BINARY);\r", "-\t\t\t\t\t\t\troot.refreshChildren();\r", "-\t\t\t\t\t\t\tbuilderRoots.addElement(root);\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tIPackageFragmentRoot[] result= new IPackageFragmentRoot[builderRoots.size()];\r", "-\t\tbuilderRoots.copyInto(result);\r", "+\r", "+\t\tVector accumulatedRoots = new Vector();\t\t\r", "+\t\tcomputeBuilderRoots(false, delta, new Vector(), accumulatedRoots);\r", "+\t\t\r", "+\t\tIPackageFragmentRoot[] result = new IPackageFragmentRoot[accumulatedRoots.size()];\r", "+\t\taccumulatedRoots.copyInto(result);\r"]}], "num": 14368}