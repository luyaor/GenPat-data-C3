{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45f372ed7738b005302bb4b629909987", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d5372e7bcf9f38a713286f61469733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "448d62b2ff66cd7ed3c1bda65bd5259a6d0971b0", "commitAfterChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tVariableBinding var = variableBinding(scope);", "-\tif (var != null &&", "-\t\t\t(var.type.tagBits & TagBits.IsBaseType) == 0) {", "+\tVariableBinding local = variableBinding(scope);", "+\tif (local != null &&", "+\t\t\t(local.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tflowContext.recordUsingNullReference(scope, var, this,", "+\t\t\tflowContext.recordUsingNullReference(scope, local, this,", "-\t\tflowInfo.markAsComparedEqualToNonNull(var );", "+\t\tflowInfo.markAsComparedEqualToNonNull(local );", "-\t\t\tflowInfo.markedAsNullOrNonNullInAssertExpression(var);", "+\t\t\tflowInfo.markedAsNullOrNonNullInAssertExpression(local);", "-\t\t\tflowContext.initsOnFinally.markAsComparedEqualToNonNull(var);", "+\t\t\tflowContext.initsOnFinally.markAsComparedEqualToNonNull(local);", "-\t\t\t\tflowContext.initsOnFinally.markedAsNullOrNonNullInAssertExpression(var);", "+\t\t\t\tflowContext.initsOnFinally.markedAsNullOrNonNullInAssertExpression(local);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd3ba5638b78a35d2f71e65d2ae39f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "448d62b2ff66cd7ed3c1bda65bd5259a6d0971b0", "commitAfterChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse)", "signatureAfterChange": " \tprivate void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse)", "diff": ["-\t\tVariableBinding var = this.left.variableBinding(scope);", "-\t\tif (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tcheckVariableComparison(scope, flowContext, flowInfo, initsWhenTrue, initsWhenFalse, var, rightStatus, this.left);", "+\t\tVariableBinding local = this.left.variableBinding(scope);", "+\t\tif (local != null && (local.type.tagBits & TagBits.IsBaseType) == 0) {", "+\t\t\tcheckVariableComparison(scope, flowContext, flowInfo, initsWhenTrue, initsWhenFalse, local, rightStatus, this.left);", "-\t\tvar = this.right.variableBinding(scope);", "-\t\tif (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tcheckVariableComparison(scope, flowContext, flowInfo, initsWhenTrue, initsWhenFalse, var, leftStatus, this.right);", "+\t\tlocal = this.right.variableBinding(scope);", "+\t\tif (local != null && (local.type.tagBits & TagBits.IsBaseType) == 0) {", "+\t\t\tcheckVariableComparison(scope, flowContext, flowInfo, initsWhenTrue, initsWhenFalse, local, leftStatus, this.right);"]}], "num": 67621}