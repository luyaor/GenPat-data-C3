{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c872e4b4f3e7a8c906fb986245fc628", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f08e9847fdfaa2c9085868e35241ce1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 464, "methodNumberAfterChange": 464, "signatureBeforeChange": " \tpublic void test460()", "signatureAfterChange": " \tpublic void test460()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tClass<? extends Collection> c = param.getClass(); // ok\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tClass<? extends Collection> d = getClazz(); // ko\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\t\"\tClass<? extends Collection> c = getClass(); // ok\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "762f40eac68a008531e9686147b72fbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "1bf30b93f1c2f17c02d0cecfa43e877f00d01800", "commitAfterChange": "7cddbfa7d184b903e6606f21236d46be8958fe44", "methodNumberBeforeChange": 351, "methodNumberAfterChange": 351, "signatureBeforeChange": " public void test200()", "signatureAfterChange": " public void test200()", "diff": ["-\tString compliance = (String) options.get(JavaCore.COMPILER_COMPLIANCE);", "-\tString errorMessage = compliance == JavaCore.VERSION_1_6 ?", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "-\t\t\t\"\t    ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(Collection) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tint foo(Collection bar) { return 0; }\\n\" + ", "-\t\t\t\"\t        ^^^^^^^^^^\\n\" + ", "-\t\t\t\"Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tdouble foo(Collection<String> bar) {return 0; }\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(Collection<String>) has the same erasure foo(Collection<E>) as another method in type X\\n\" + ", "-\t\t\t\"----------\\n\" :", "+\tString errorMessage ="]}], "num": 69745}