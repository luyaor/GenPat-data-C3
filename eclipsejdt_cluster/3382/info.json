{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efbcf3e754e5cb75026f9bf0cfe4fb86", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf4d952bac00c14e096a8fd578b847d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " boolean matchField(FieldPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchField(FieldPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\tif (!checkDeclaringType(enclosingBinaryType, pattern.declaringSimpleName, pattern.declaringQualification, pattern.isCaseSensitive))", "+\tif (!checkDeclaringType(enclosingBinaryType, pattern.declaringSimpleName, pattern.declaringQualification, pattern.isCaseSensitive()))", "-\treturn checkTypeName(pattern.typeSimpleName, pattern.typeQualification, fieldTypeSignature, pattern.isCaseSensitive);", "+\treturn checkTypeName(pattern.typeSimpleName, pattern.typeQualification, fieldTypeSignature, pattern.isCaseSensitive());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82d0b93ebd7c20f45673f91d5af21e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " boolean matchField(FieldPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchField(FieldPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\tif (!checkDeclaringType(enclosingBinaryType, pattern.declaringSimpleName, pattern.declaringQualification, pattern.isCaseSensitive))", "+\tif (!checkDeclaringType(enclosingBinaryType, pattern.declaringSimpleName, pattern.declaringQualification, pattern.isCaseSensitive()))", "-\treturn checkTypeName(pattern.typeSimpleName, pattern.typeQualification, fieldTypeSignature, pattern.isCaseSensitive);", "+\treturn checkTypeName(pattern.typeSimpleName, pattern.typeQualification, fieldTypeSignature, pattern.isCaseSensitive());"]}], "num": 3382}