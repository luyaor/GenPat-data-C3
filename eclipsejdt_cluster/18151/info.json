{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7404bb01dc8a0ca72f25433801b5a152", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90fc8db2ad2f21d3edb565deec8382ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void test028()", "signatureAfterChange": " public void test028()", "diff": ["-\t\t\"    129  invokevirtual #39 <Method java/util/ArrayList.iterator()Ljava/util/Iterator;>\\n\" + ", "+\t\t\"    129  invokevirtual #38 <Method java/util/ArrayList.iterator()Ljava/util/Iterator;>\\n\" + ", "-\t\t\"    139  invokeinterface [nargs : 1] #45 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\\n\" + ", "-\t\t\"    144  checkcast #47 java/lang/String\\n\" + ", "+\t\t\"    139  invokeinterface [nargs : 1] #44 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\\n\" + ", "+\t\t\"    144  checkcast #46 java/lang/String\\n\" + ", "-\t\t\"    148  getstatic #53 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "+\t\t\"    148  getstatic #52 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    152  invokevirtual #59 <Method java/io/PrintStream.print(Ljava/lang/String;)V>\\n\" + ", "+\t\t\"    152  invokevirtual #58 <Method java/io/PrintStream.print(Ljava/lang/String;)V>\\n\" + ", "-\t\t\"    157  invokeinterface [nargs : 1] #63 <Interface method java/util/Iterator.hasNext()Z>\\n\" + ", "+\t\t\"    157  invokeinterface [nargs : 1] #62 <Interface method java/util/Iterator.hasNext()Z>\\n\" + ", "-\t\t\"    170  invokevirtual #67 <Method java/util/ArrayList.size()I>\\n\" + ", "+\t\t\"    170  invokevirtual #66 <Method java/util/ArrayList.size()I>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a28124c24cb3a10b669cd7121cfb7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void test084()", "signatureAfterChange": " \tpublic void test084()", "diff": ["-\t\t\t\"Unsafe type operation: Should not convert expression of raw type AX to type AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not convert expression of raw type AX to type AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not invoke the constructor AX(AX<P>) of raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The constructor AX(AX) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not invoke the constructor AX(AX<P>) of raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The constructor AX(AX) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not convert expression of raw type AX to type AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not invoke the method bar(AX<P>) of raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The method bar(AX) belongs to the raw type AX. References to generic type AX<P> should be parameterized\\n\" + ", "-\t\t\t\"Unsafe type operation: Should not convert expression of raw type AX to type AX<String>. References to generic type AX<P> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type AX is converted to AX<String>. References to generic type AX<P> should be parameterized\\n\" + "]}], "num": 18151}