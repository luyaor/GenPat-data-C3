{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba963b7c8030b84947ae1604574b4f7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f3523ef5e349e66dbb9e27c471d3d61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 214, "methodNumberAfterChange": 214, "signatureBeforeChange": "  \tpublic void testBug110060_TypePattern12() throws CoreException", "signatureAfterChange": "  public void testBug110060_TypePattern12() throws CoreException", "diff": ["+public void testBug110060_TypePattern12() throws CoreException {", "+\tassertNotNull(\"There should be working copies!\", workingCopies);", "+\tassertEquals(\"Invalid number of working copies kept between tests!\", 5, workingCopies.length);", "+\tsearch(\"AxXA\", TYPE, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tthis.discard = false;", "+\tassertSearchResults(\"\");", "+}", "-\tpublic void testBug110060_TypePattern12() throws CoreException {", "-\t\tassertNotNull(\"There should be working copies!\", workingCopies);", "-\t\tassertEquals(\"Invalid number of working copies kept between tests!\", 5, workingCopies.length);", "-\t\tsearch(\"AxXA\", TYPE, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\t\tassertSearchResults(\"\");", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba043ceb4162dbe1409c9ce709f3d52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 248, "signatureBeforeChange": "  \tpublic void testBug110060_FieldPattern05() throws CoreException", "signatureAfterChange": "  public void testBug110060_FieldPattern05() throws CoreException", "diff": ["-\tpublic void testBug110060_FieldPattern05() throws CoreException {", "-\t\tassertNotNull(\"There should be working copies!\", workingCopies);", "-\t\tassertEquals(\"Invalid number of working copies kept between tests!\", 1, workingCopies.length);", "-\t\tsearch(\"oF\", FIELD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b110060/Test.java b110060.Test.otherFieldWhichStartsWithAnotherLetter [otherFieldWhichStartsWithAnotherLetter] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b110060/Test.java b110060.Test.oF [oF] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b110060/Test.java b110060.Test.oF [otherFieldWhichStartsWithAnotherLetter] EXACT_MATCH\"", "-\t\t);", "-\t}", "+", "+public void testBug110060_FieldPattern05() throws CoreException {", "+\tassertNotNull(\"There should be working copies!\", workingCopies);", "+\tassertEquals(\"Invalid number of working copies kept between tests!\", 1, workingCopies.length);", "+\tsearch(\"oF\", FIELD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tthis.discard = false;", "+\tassertSearchResults(", "+\t\t\"src/b110060/Test.java b110060.Test.otherFieldWhichStartsWithAnotherLetter [otherFieldWhichStartsWithAnotherLetter] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.oF [oF] EXACT_MATCH\\n\" + ", "+\t\t\"src/b110060/Test.java b110060.Test.oF [otherFieldWhichStartsWithAnotherLetter] EXACT_MATCH\"", "+\t);", "+}"]}], "num": 58485}