{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d755e5567d759032e04af94a5347a59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9df38a9dee9a69601c0a2ce8eb003e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "diff": ["+ */", "+public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException {", "+\tif (project == null) {", "+\t\tthrow new IllegalArgumentException(Util.bind(\"hierarchy.nullProject\")); //$NON-NLS-1$", "+\t}", "+\tICompilationUnit[] workingCopies = JavaModelManager.getJavaModelManager().getWorkingCopies(owner, true/*add primary working copies*/);", "+\tint length = workingCopies.length;", "+\tICompilationUnit[] projectWCs = new ICompilationUnit[length];", "+\tint index = 0;", "+\tfor (int i = 0; i < length; i++) {", "+\t\tICompilationUnit wc = workingCopies[i];", "+\t\tif (project.equals(wc.getJavaProject())) {", "+\t\t\tprojectWCs[index++] = wc;", "+\t\t}", "+\t}", "+\tif (index != length) {", "+\t\tSystem.arraycopy(projectWCs, 0, projectWCs = new ICompilationUnit[index], 0, index);", "+\t}", "+\tCreateTypeHierarchyOperation op= new CreateTypeHierarchyOperation(", "+\t\tthis, ", "+\t\tprojectWCs,", "+\t\tproject, ", "+\t\ttrue);", "+\trunOperation(op, monitor);", "+\treturn op.getResult();", "+}", "-public ITypeHierarchy newTypeHierarchy(IJavaProject project, IProgressMonitor monitor) throws JavaModelException {", "-\tif (project == null) {", "-\t\tthrow new IllegalArgumentException(Util.bind(\"hierarchy.nullProject\")); //$NON-NLS-1$", "-\t}", "-\tCreateTypeHierarchyOperation op= new CreateTypeHierarchyOperation(", "-\t\tthis, ", "-\t\t(IWorkingCopy[])null, // no working copies", "-\t\tproject, ", "-\t\ttrue);", "-\treturn op.getResult();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea704e9b1809a8496ce31fed82745e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "6945031c95ca0d70ac3adb24efe812a06855be13", "commitAfterChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "diff": ["+ */", "+public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException {", "+\tif (project == null) {", "+\t\tthrow new IllegalArgumentException(Util.bind(\"hierarchy.nullProject\")); //$NON-NLS-1$", "+\t}", "+\tICompilationUnit[] workingCopies = JavaModelManager.getJavaModelManager().getWorkingCopies(owner, true/*add primary working copies*/);", "+\tint length = workingCopies.length;", "+\tICompilationUnit[] projectWCs = new ICompilationUnit[length];", "+\tint index = 0;", "+\tfor (int i = 0; i < length; i++) {", "+\t\tICompilationUnit wc = workingCopies[i];", "+\t\tif (project.equals(wc.getJavaProject())) {", "+\t\t\tprojectWCs[index++] = wc;", "+\t\t}", "+\t}", "+\tif (index != length) {", "+\t\tSystem.arraycopy(projectWCs, 0, projectWCs = new ICompilationUnit[index], 0, index);", "+\t}", "+\tCreateTypeHierarchyOperation op= new CreateTypeHierarchyOperation(", "+\t\tthis, ", "+\t\tprojectWCs,", "+\t\tproject, ", "+\t\ttrue);", "+\trunOperation(op, monitor);", "+\treturn op.getResult();", "+}", "-public ITypeHierarchy newTypeHierarchy(IJavaProject project, IProgressMonitor monitor) throws JavaModelException {", "-\tif (project == null) {", "-\t\tthrow new IllegalArgumentException(Util.bind(\"hierarchy.nullProject\")); //$NON-NLS-1$", "-\t}", "-\t", "-\tCreateTypeHierarchyOperation op= new CreateTypeHierarchyOperation(", "-\t\tthis, ", "-\t\t(IWorkingCopy[])null, // no working copies", "-\t\tproject,", "-\t\ttrue);", "-\treturn op.getResult();"]}], "num": 58368}