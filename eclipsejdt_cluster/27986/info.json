{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77daee919c140d0b53539c3fec4b0080", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16a34f12c5d1a639f4d98762853bb0d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "15119daf817db1018e77a6fda243b1a0915bea1f", "commitAfterChange": "46f57536ed8e2bfbe5a9484e153647c7c5b9cb5d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void acceptTypes()", "signatureAfterChange": " \t \tprivate void acceptTypes()", "diff": ["-\t\t\t\tchar[] completionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\tchar[] completionName;", "+\t\t\t\t", "+\t\t\t\tif(this.resolvingStaticImports) {", "+\t\t\t\t\tif(enclosingTypeNames == null || enclosingTypeNames.length == 0) {", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { '.' });", "+\t\t\t\t\t} else if ((modifiers & IConstants.AccStatic) == 0) {", "+\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t}", "-\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "+\t\t\t\tif(insideQualifiedReference) {", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "+\t\t\t\t} else {", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, simpleTypeName);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92c15f37aab1e0d034ab67610f7c207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e0c7ca1486f055788a44dc24293c246757983c36", "commitAfterChange": "fffe8da84c964b60e288768d8e57c80a69c56c45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate void acceptTypes(Scope scope)", "signatureAfterChange": " \t \tprivate void acceptTypes(Scope scope)", "diff": ["-\t\t\t\tchar[] completionName;", "+\t\t\t\tchar[] completionName = this.insideQualifiedReference ? simpleTypeName : fullyQualifiedName;", "-\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { '.' });", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(completionName, new char[] { '.' });", "-\t\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t\t\tcompletionName = CharOperation.concat(completionName, new char[] { ';' });", "-\t\t\t\t\tcompletionName = CharOperation.concat(fullyQualifiedName, new char[] { ';' });", "+\t\t\t\t\tcompletionName = CharOperation.concat(completionName, new char[] { ';' });", "-\t\t\t\tif(insideQualifiedReference) {", "-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, fullyQualifiedName);", "-\t\t\t\t} else {", "-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, simpleTypeName);", "-\t\t\t\t}", "+\t\t\t\trelevance += computeRelevanceForCaseMatching(this.completionToken, simpleTypeName);"]}], "num": 27986}