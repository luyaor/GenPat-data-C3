{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f967f5152b04e410e6e68381722c0e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392bfaecafab89f96a9747d74212121c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public IJavaElement[] codeSelect(String codeSnippet, int offset, int length, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public IJavaElement[] codeSelect(String codeSnippet, int offset, int length, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\tNameLookup lookup = null;", "-\ttry {", "-\t\t// set the units to look inside", "-\t\tlookup = this.project.getNameLookup();", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "-\t\tlookup.setUnitsToLookInside(workingCopies);", "-", "-\t\t// code select", "-\t\tSelectionRequestor requestor= new SelectionRequestor(lookup, null); // null because there is no need to look inside the code snippet itself", "-\t\tthis.context.select(", "-\t\t\tcodeSnippet.toCharArray(),", "-\t\t\toffset,", "-\t\t\toffset + length - 1,", "-\t\t\tthis.project.getSearchableNameEnvironment(),", "-\t\t\trequestor,", "-\t\t\tthis.project.getOptions(true)", "-\t\t);", "-\t\treturn requestor.getElements();", "-\t} finally {", "-\t\tif (lookup != null) {", "-\t\t\tlookup.setUnitsToLookInside(null);", "-\t\t}", "-\t}", "+\tSearchableEnvironment environment = (SearchableEnvironment) this.project.newSearchableNameEnvironment(owner);", "+\tSelectionRequestor requestor= new SelectionRequestor(environment.nameLookup, null); // null because there is no need to look inside the code snippet itself", "+\tthis.context.select(", "+\t\tcodeSnippet.toCharArray(),", "+\t\toffset,", "+\t\toffset + length - 1,", "+\t\tenvironment,", "+\t\trequestor,", "+\t\tthis.project.getOptions(true)", "+\t);", "+\treturn requestor.getElements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dd766b935cda62ba19fbe1c1589e5cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void codeComplete(String codeSnippet, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public void codeComplete(String codeSnippet, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\tNameLookup lookup = null;", "-\ttry {", "-\t\t// set the units to look inside", "-\t\tlookup = this.project.getNameLookup();", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);", "-\t\tlookup.setUnitsToLookInside(workingCopies);", "-", "-\t\t// code complete", "-\t\tthis.context.complete(", "-\t\t\tcodeSnippet.toCharArray(),", "-\t\t\tposition,", "-\t\t\tthis.project.getSearchableNameEnvironment(),", "-\t\t\tnew CompletionRequestorWrapper(requestor, lookup),", "-\t\t\tthis.project.getOptions(true),", "-\t\t\tthis.project", "-\t\t);", "-\t} finally {", "-\t\tif (lookup != null) {", "-\t\t\tlookup.setUnitsToLookInside(null);", "-\t\t}", "-\t}", "+\tSearchableEnvironment environment = (SearchableEnvironment) this.project.newSearchableNameEnvironment(owner);", "+\tthis.context.complete(", "+\t\tcodeSnippet.toCharArray(),", "+\t\tposition,", "+\t\tenvironment,", "+\t\tnew CompletionRequestorWrapper(requestor, environment.nameLookup),", "+\t\tthis.project.getOptions(true),", "+\t\tthis.project", "+\t);"]}], "num": 72911}