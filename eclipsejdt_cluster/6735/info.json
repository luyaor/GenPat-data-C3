{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "149111ac468ce21370a4f0361e0497ef", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d7f739ff9367f2561670a81826f51c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "signatureAfterChange": " private MethodBinding createMethod(IBinaryMethod method, long sourceLevel)", "diff": ["+\tAnnotationBinding[][] paramAnnotations = null; ", "+\t\t\tif (this.environment.storeAnnotations)", "+\t\t\t\tparamAnnotations = new AnnotationBinding[size][];", "-\t\t\t\tif (i >= startIndex)   // skip the synthetic arg if necessary", "+\t\t\t\tif (i >= startIndex) {   // skip the synthetic arg if necessary", "+\t\t\t\t\t// 'paramAnnotations' line up with 'parameters'", "+\t\t\t\t\t// int parameter to method.getParameterAnnotations() include the synthetic arg", "+\t\t\t\t\tif (paramAnnotations != null)", "+\t\t\t\t\t\tparamAnnotations[i - startIndex] = createAnnotations(method.getParameterAnnotations(i), this.environment);", "+\t\t\t\t}", "-\t\t\t\tparameters = new TypeBinding[types.size()];", "+\t\t\t\tint numParam = types.size();", "+\t\t\t\tparameters = new TypeBinding[numParam];", "+\t\t\t\tif (this.environment.storeAnnotations) {", "+\t\t\t\t\tparamAnnotations = new AnnotationBinding[numParam][];", "+\t\t\t\t\tfor (int i = 0; i < numParam; i++)", "+\t\t\t\t\t\tparamAnnotations[i] = createAnnotations(method.getParameterAnnotations(i), this.environment);", "+\t\t\t\t}", "+\tif (this.environment.storeAnnotations)", "+\t\tresult.setAnnotations(", "+\t\t\tcreateAnnotations(method.getAnnotations(), this.environment),", "+\t\t\tparamAnnotations,", "+\t\t\tisAnnotationType() ? convertMemberValue(method.getDefaultValue(), this.environment) : null);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f599cecf3f32c44bbf990b64f04868d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/MethodInfo.java", "commitBeforeChange": "21d3c1ac784a9ef78a64389e4df817ec0452ce19", "commitAfterChange": "2c4adf2736a9a7ce066a42070aabd3f4b1ddf5af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static MethodInfo createMethod(byte classFileBytes[], int offsets[], int offset)", "signatureAfterChange": "  public static MethodInfo createMethod(byte classFileBytes[], int offsets[], int offset)", "diff": ["+\tTypeAnnotationInfo[] typeAnnotations = null;", "+\t\t\t\t\tTypeAnnotationInfo[] methodTypeAnnotations = null;", "+\t\t\t\t\t} else if (CharOperation.equals(attributeName, AttributeNamesConstants.RuntimeVisibleTypeAnnotationsName)) {", "+\t\t\t\t\t\tmethodTypeAnnotations = decodeTypeAnnotations(readOffset, true, methodInfo);", "+\t\t\t\t\t} else if (CharOperation.equals(attributeName, AttributeNamesConstants.RuntimeInvisibleTypeAnnotationsName)) {", "+\t\t\t\t\t\tmethodTypeAnnotations = decodeTypeAnnotations(readOffset, false, methodInfo);", "+\t\t\t\t\t} else if (methodTypeAnnotations != null) {", "+\t\t\t\t\t\tif (typeAnnotations == null) {", "+\t\t\t\t\t\t\ttypeAnnotations = methodTypeAnnotations;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tint length = typeAnnotations.length;", "+\t\t\t\t\t\t\tTypeAnnotationInfo[] newAnnotations = new TypeAnnotationInfo[length + methodTypeAnnotations.length];", "+\t\t\t\t\t\t\tSystem.arraycopy(typeAnnotations, 0, newAnnotations, 0, length);", "+\t\t\t\t\t\t\tSystem.arraycopy(methodTypeAnnotations, 0, newAnnotations, length, methodTypeAnnotations.length);", "+\t\t\t\t\t\t\ttypeAnnotations = newAnnotations;", "+\t\t\t\t\t\t}", "+\tif (typeAnnotations != null)", "+\t\treturn new MethodInfoWithTypeAnnotations(methodInfo, annotations, parameterAnnotations, typeAnnotations);"]}], "num": 6735}