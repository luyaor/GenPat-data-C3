{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67333ce18c9dbed595624f454693a8e1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c22a25476b8d4472a0fa685f4e4bf32a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "commitAfterChange": "b5a62e48da3d2bb054c313f16e0e1c0a1279b4a4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tprotected void save(IndexOutput output) throws IOException", "signatureAfterChange": "\r \r \tprotected void save(IndexOutput output) throws IOException", "diff": ["-\t\tchar[][] sortedWords= getSortedWords();\r", "+\t\tgetSortedWordEntries(); // init the slot\r", "-\t\t\t\toutput.addFile(indexedFile);\r", "+\t\t\t\toutput.addFile(indexedFile); // written out in order BUT not alphabetical\r", "-\t\t\tint numWords= sortedWords.length;\r", "-\t\t\tfor (int i= 0; i < numWords; ++i) {\r", "-\t\t\t\tchar[] word= sortedWords[i];\r", "-\t\t\t\tWordEntry entry= (WordEntry) this.words.get(word);\r", "-\t\t\t\toutput.addWord(entry);\r", "-\t\t\t}\r", "+\t\t\tfor (int i= 0, numWords= sortedWordEntries.length; i < numWords; ++i)\r", "+\t\t\t\toutput.addWord(sortedWordEntries[i]);\r", "-\t\t\tif (!ok)\r", "-\t\t\t\tif (output != null)\r", "-\t\t\t\t\toutput.close();\r", "+\t\t\tif (!ok && output != null)\r", "+\t\t\t\toutput.close();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38b66eec36ba3efee1d84a937fceccc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "0050ce1e7f4e1aa09d2a0680eb2a656c745b9584", "commitAfterChange": "c557f8e28df32d4f3742c65d1f4547b281353194", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tprotected void save(IndexOutput output) throws IOException", "signatureAfterChange": "\r \r \tprotected void save(IndexOutput output) throws IOException", "diff": ["-\t\tgetSortedWordEntries(); // init the slot\r", "-\t\t\tint numFiles= this.files.size();\r", "-\t\t\tfor (int i= 0; i < numFiles; ++i) {\r", "-\t\t\t\tIndexedFile indexedFile= (IndexedFile) this.files.get(i);\r", "-\t\t\t\toutput.addFile(indexedFile); // written out in order BUT not alphabetical\r", "-\t\t\t}\r", "+\t\t\tIndexedFile[] indexedFiles= files.asArray();\r", "+\t\t\tfor (int i= 0, length = indexedFiles.length; i < length; ++i)\r", "+\t\t\t\toutput.addFile(indexedFiles[i]); // written out in order BUT not alphabetical\r", "+\t\t\tgetSortedWordEntries(); // init the slot\r"]}], "num": 61399}