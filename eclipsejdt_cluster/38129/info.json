{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fd7852e198e65013fd1555ab81b9f6d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53a5f7a3a0bb36c856b7ab22de721325", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "7935a9b598fa65f4010dcaa4ea82e60362171faa", "commitAfterChange": "75ce3c2ae05f82c84abc92fd62f99af42b2ef94d", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void resetNameLookup()", "signatureAfterChange": " \tpublic void resetCaches()", "diff": ["-\tpublic void resetNameLookup() {", "-\t\tif (isOpen()){", "-\t\t\ttry {", "-\t\t\t\t((JavaProjectElementInfo)getElementInfo()).resetCaches();", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// project was closed and deleted by another thread: ignore", "-\t\t\t}", "+\tpublic void resetCaches() {", "+\t\tJavaProjectElementInfo info = (JavaProjectElementInfo) JavaModelManager.getJavaModelManager().peekAtInfo(this);", "+\t\tif (info != null){", "+\t\t\tinfo.resetCaches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5a77aab503ac541aad4d42dfa691f55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b0acd443a36e322f7afa5778ad381a3437727af2", "commitAfterChange": "342a0847eab95d8ca2e8608616a2c691828b55df", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " protected void removeAffectedChild(JavaElementDelta child)", "signatureAfterChange": " protected void removeAffectedChild(JavaElementDelta child)", "diff": ["-\tif (fAffectedChildren != null) {", "-\t\tfor (int i = 0; i < fAffectedChildren.length; i++) {", "-\t\t\tif (this.equalsAndSameParent(fAffectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "+\tif (this.affectedChildren != null) {", "+\t\tfor (int i = 0; i < this.affectedChildren.length; i++) {", "+\t\t\tif (this.equalsAndSameParent(this.affectedChildren[i].getElement(), child.getElement())) { // handle case of two jars that can be equals but not in the same project", "-\t\tfAffectedChildren= removeAndShrinkArray(fAffectedChildren, index);", "+\t\tthis.affectedChildren= removeAndShrinkArray(this.affectedChildren, index);"]}], "num": 38129}