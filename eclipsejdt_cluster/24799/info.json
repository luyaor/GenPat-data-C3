{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db1928883bd1e76d002dece24ebec732", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871e3281b350911d85861d20db5dcada", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "681ff71afd31c20fa68f58bb75baf285764f9464", "commitAfterChange": "b45cc2324e484787b8bf6b481639028f06375149", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "diff": ["-\t\t\t\tString extension = entryPath.getFileExtension();", "-", "-\t\t\t\t\t\t\tif (\"jar\".equalsIgnoreCase(extension) //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t|| \"zip\".equalsIgnoreCase(extension)) { //$NON-NLS-1$", "+\t\t\t\t\t\t\tif (Util.isArchiveFileName(resource.getName())) {", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\tif (((java.io.File)target).isFile()", "-\t\t\t\t\t\t&& (\"jar\".equalsIgnoreCase(extension) //$NON-NLS-1$", "-\t\t\t\t\t\t\t|| \"zip\".equalsIgnoreCase(extension))) { //$NON-NLS-1$", "+\t\t\t\t\tif (((java.io.File)target).isFile() && (Util.isArchiveFileName(entryPath.lastSegment()))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cec7d24fd2fea19a6290460e9d3e78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/IncrementalImageBuilder.java", "commitBeforeChange": "a905e9a59b60e94f5051164e98e5d4ad6ac8c549", "commitAfterChange": "efe61f26d1e1d8b21ca77c23e47a7ddbcb370fbe", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r protected void computeAllPackages(IResourceDelta delta, IPackageFragmentRoot[] oldRoots, IPackageFragmentRoot[] newRoots)", "signatureAfterChange": "\r protected void computeAllPackages(IResourceDelta delta, IPackageFragmentRoot[] oldRoots, IPackageFragmentRoot[] newRoots)", "diff": ["-\t\t\t\t}\r", "+\t\t\t\t} \r", "-\t\tString extension = children[i].getFullPath().getFileExtension();\r", "-\t\tif (extension == null\r", "-\t\t\t|| extension.equalsIgnoreCase(\"zip\") //$NON-NLS-1$\r", "-\t\t\t|| extension.equalsIgnoreCase(\"jar\")) { //$NON-NLS-1$\r", "-\t\t\t// TBD: Currently rely on empty extension indicating folder\r", "+\t\tIResource rsc = children[i].getResource();\r", "+\t\tString ext = children[i].getFullPath().getFileExtension();\r", "+\t\tif (rsc instanceof IFolder \r", "+\t\t\t|| (rsc instanceof IFile \r", "+\t\t\t\t\t&& (\"jar\".equalsIgnoreCase(ext)  //$NON-NLS-1$\r", "+\t\t\t\t\t\t|| \"zip\".equalsIgnoreCase(ext)))){ //$NON-NLS-1$\r", "+\t\t\t\t\r"]}], "num": 24799}