{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afda9b21ebc866690b017d6db47432a4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d4c6038f35b84b31a2ea4ba621c6aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "fced1a7a2b8f5ce77723d058091976d51b43704e", "commitAfterChange": "6900dd1a03d1ad901ee84c7d15bd4e318744abe6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "signatureAfterChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "diff": ["-\t\t\t\tparser.dietParse(sourceUnit, result, actualSelectionStart, actualSelectionEnd);", "+\t\t\t\tthis.parser.dietParse(sourceUnit, result, this.actualSelectionStart, this.actualSelectionEnd);", "-\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "+\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\tthis.requestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "-\t\t\t\t\t\t\tnoProposal = false;", "-\t\t\t\t\t\t\trequestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "-\t\t\t\t\t\t\tnameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), this);", "+\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\tthis.requestor.acceptPackage(CharOperation.concatWith(tokens, '.'));", "+\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(CharOperation.concatWith(tokens, '.'), this);", "-\t\t\t\t\t\t\tif(!acceptedAnswer) {", "+\t\t\t\t\t\t\tif(!this.acceptedAnswer) {", "-\t\t\t\t\t\t\t\tif (!acceptedAnswer) {", "-\t\t\t\t\t\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);", "+\t\t\t\t\t\t\t\tif (!this.acceptedAnswer) {", "+\t\t\t\t\t\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, this);", "-\t\t\t\t\t\t\t\t\tif(!acceptedAnswer) {", "+\t\t\t\t\t\t\t\t\tif(!this.acceptedAnswer) {", "-\t\t\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "-\t\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);", "+\t\t\t\t\t\t\tthis.lookupEnvironment.completeTypeBindings(parsedUnit, true);", "-\t\t\tif (!acceptedAnswer) {", "-\t\t\t\tnameEnvironment.findTypes(selectedIdentifier, this);", "+\t\t\tif (!this.acceptedAnswer) {", "+\t\t\t\tthis.nameEnvironment.findTypes(this.selectedIdentifier, this);", "-\t\t\t\tif(!acceptedAnswer) {", "+\t\t\t\tif(!this.acceptedAnswer) {", "-\t\t\tif(noProposal && problem != null) {", "-\t\t\t\trequestor.acceptError(problem);", "+\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\tthis.requestor.acceptError(this.problem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0adaa6924d515a7977873ca83b18f1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e33f9e50507ed5c3d45f37527737576191428633", "commitAfterChange": "62bebd71f36545c90d6c943df5cd6ccb18d59a48", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\tactualCompletionPosition = completionPosition - 1;", "+\t\t\tthis.actualCompletionPosition = completionPosition - 1;", "-\t\t\tCompilationUnitDeclaration parsedUnit = parser.dietParse(sourceUnit, result, actualCompletionPosition);", "+\t\t\tCompilationUnitDeclaration parsedUnit = this.parser.dietParse(sourceUnit, result, this.actualCompletionPosition);", "-\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\t\tif(noProposal && problem != null) {", "-\t\t\t\t\t\t\t\trequestor.acceptError(problem);", "+\t\t\t\t\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\t\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "-\t\t\t\t\t\tif ((unitScope = parsedUnit.scope) != null) {", "-\t\t\t\t\t\t\tsource = sourceUnit.getContents();", "-\t\t\t\t\t\t\tlookupEnvironment.completeTypeBindings(parsedUnit, true);", "+\t\t\t\t\t\tif ((this.unitScope = parsedUnit.scope) != null) {", "+\t\t\t\t\t\t\tthis.source = sourceUnit.getContents();", "+\t\t\t\t\t\t\tthis.lookupEnvironment.completeTypeBindings(parsedUnit, true);", "-\t\t\t\t\t\t\tparseBlockStatements(parsedUnit, actualCompletionPosition);", "+\t\t\t\t\t\t\tparseBlockStatements(parsedUnit, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\tif(parser.assistNodeParent != null) {", "+\t\t\t\t\t\t\t\tif(this.parser.assistNodeParent != null) {", "-\t\t\t\t\t\t\t\t\tSystem.out.println(parser.assistNodeParent);", "+\t\t\t\t\t\t\t\t\tSystem.out.println(this.parser.assistNodeParent);", "-\t\t\t\t\t\t\tcomplete(e.astNode, parser.assistNodeParent, e.qualifiedBinding, e.scope);", "+\t\t\t\t\t\t\tcomplete(e.astNode, this.parser.assistNodeParent, e.qualifiedBinding, e.scope);", "-\t\t\tif(noProposal && problem != null) {", "-\t\t\t\trequestor.acceptError(problem);", "+\t\t\tif(this.noProposal && this.problem != null) {", "+\t\t\t\tthis.requestor.acceptError(this.problem);", "-\t\t\t\t\t\t\tCompletionScanner scanner = (CompletionScanner) parser.scanner;", "+\t\t\t\t\t\t\tCompletionScanner scanner = (CompletionScanner) this.parser.scanner;"]}], "num": 67623}