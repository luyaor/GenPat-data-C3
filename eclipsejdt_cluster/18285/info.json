{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "881cfc6e02822376f833a7ae96a94d09", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0788b5bd867ed60b9d89c924019c77ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "55ff17ec6653a434427e713aef1451bdb8c9f671", "commitAfterChange": "d20637ea2fd7b4c54c0555e8e8ade3dcbe515e38", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected void deleteProject(String projectName) throws CoreException", "signatureAfterChange": " protected void deleteProject(String projectName) throws CoreException", "diff": ["-}", "-protected void deleteProject(String projectName) throws CoreException {", "-\tIProject project = this.getProject(projectName);", "-\tCoreException lastException = null;", "-\ttry {", "-\t\tif (!project.isOpen()) { // force opening so that project can be deleted without logging (see bug 23629)", "-\t\t\tproject.open(null);", "-\t\t}", "-\t\tproject.delete(true, null);", "-\t} catch (CoreException e) {", "-\t\tlastException = e;", "-\t}", "-\twhile (project.isAccessible() && --retryCount >= 0) {", "-\t\ttry {", "-\t\t\tproject.delete(true, null);", "-\t\t} catch (CoreException e) {", "-\t\t\tlastException = e;", "-\t\t}", "-\tif (!project.isAccessible()) return;", "-\tSystem.err.println(\"Failed to delete project \" + projectName);", "-\tif (lastException != null) {", "-\t\tthrow lastException;", "+}", "+protected void deleteProject(String projectName) throws CoreException {", "+\tIProject project = this.getProject(projectName);", "+\tif (project.exists() && !project.isOpen()) { // force opening so that project can be deleted without logging (see bug 23629)", "+\t\tproject.open(null);", "+\tdeleteResource(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "100052ed8e598e282505b0e0f5e7f29f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "dfd4ece929ee002b6405f5c2ebd27426153c0efd", "commitAfterChange": "445862b3ac94af052eb272bc07b8bce2907ade1f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-public static Test suite() {", "-\tTestSuite suite = new Suite(ResolveTests_1_5.class.getName());\t\t", "-", "-\tif (true) {", "-\t\tClass c = ResolveTests_1_5.class;", "-\t\tMethod[] methods = c.getMethods();", "-\t\tfor (int i = 0, max = methods.length; i < max; i++) {", "-\t\t\tif (methods[i].getName().startsWith(\"test\")) { //$NON-NLS-1$", "-\t\t\t\tsuite.addTest(new ResolveTests_1_5(methods[i].getName()));", "-\t\t\t}", "-\t\t}", "-\t\treturn suite;", "-\t}", "-\tsuite.addTest(new ResolveTests_1_5(\"test0093\"));\t\t\t", "-\treturn suite;", "+public static Test suite() {", "+\treturn buildTestSuite(ResolveTests_1_5.class);", "+}"]}], "num": 18285}