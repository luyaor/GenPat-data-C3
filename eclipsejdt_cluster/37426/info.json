{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7621c7fb2a5d72ece29b547b96b2467f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ca9237abbc08b7b88d253c14f3ea380", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tprivate WrapPolicy getWrapPolicy(int wrappingOption, float penaltyMultiplier, boolean isFirst, ASTNode parentNode)", "signatureAfterChange": "  \tprivate WrapPolicy getWrapPolicy(int wrappingOption, float penaltyMultiplier, boolean isFirst, ASTNode parentNode)", "diff": ["+\t\tWrapMode wrapMode = WrapMode.WHERE_NECESSARY;", "-\t\t\t\treturn null;", "+\t\t\t\twrapMode = WrapMode.DISABLED;", "+\t\t\t\tbreak;", "-\t\tint topPriorityGroupEnd = isTopPriority ? this.wrapGroupEnd : -1;", "+\t\tif (isTopPriority)", "+\t\t\twrapMode = WrapMode.TOP_PRIORITY;", "-\t\treturn new WrapPolicy(extraIndent, this.wrapParentIndex, this.currentDepth, penaltyMultiplier, isFirst,", "-\t\t\t\tindentOnColumn, topPriorityGroupEnd, false);", "+\t\treturn new WrapPolicy(wrapMode, this.wrapParentIndex, this.wrapGroupEnd, extraIndent, this.currentDepth,", "+\t\t\t\tpenaltyMultiplier, isFirst, indentOnColumn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bf870e7a1a1b7acc15181f522fe59ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Token.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tpublic WrapPolicy(int extraIndent, int wrapParentIndex, int structureDepth, float penaltyMultiplier, \t\t\t\tboolean isFirstInGroup, boolean indentOnColumn, int topPriorityGroupEnd, boolean isForced)", "signatureAfterChange": "  \t\tpublic WrapPolicy(WrapMode wrapMode, int wrapParentIndex, int groupEndIndex, int extraIndent, \t\t\t\tint structureDepth, float penaltyMultiplier, boolean isFirstInGroup, boolean indentOnColumn)", "diff": ["-\t\tpublic WrapPolicy(int extraIndent, int wrapParentIndex, int structureDepth, float penaltyMultiplier,", "-\t\t\t\tboolean isFirstInGroup, boolean indentOnColumn, int topPriorityGroupEnd, boolean isForced) {", "-\t\t\tthis.extraIndent = extraIndent;", "+\t\tpublic WrapPolicy(WrapMode wrapMode, int wrapParentIndex, int groupEndIndex, int extraIndent,", "+\t\t\t\tint structureDepth, float penaltyMultiplier, boolean isFirstInGroup, boolean indentOnColumn) {", "+\t\t\tassert wrapMode != null && (wrapParentIndex < groupEndIndex || groupEndIndex == -1);", "+", "+\t\t\tthis.wrapMode = wrapMode;", "+\t\t\tthis.groupEndIndex = groupEndIndex;", "+\t\t\tthis.extraIndent = extraIndent;", "-\t\t\tthis.topPriorityGroupEnd = topPriorityGroupEnd;", "-\t\t\tthis.isForced = isForced;"]}], "num": 37426}