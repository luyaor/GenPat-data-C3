{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1208e35c3f317f5635fb0fd17792699", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b68e95ef0c5dbfbc227b55411237fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 212, "signatureBeforeChange": " \tpublic void test074a()", "signatureAfterChange": " \tpublic void test074a()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t?\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                        ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                             ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type I must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t:\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                        ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                             ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type I must override or implement a supertype method\\n\" + ", "-\t\t\t\"----------\\n\";\t\t", "-\t\t\texpectedOutput);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                        ^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                             ^^^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"clone()\", \"I\") + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ccb534df05fad6f4248b715a811f7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 211, "signatureBeforeChange": " \tpublic void test074()", "signatureAfterChange": " \tpublic void test074()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t?\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                  ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type J must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t:\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                  ^^^^\\n\" + ", "-\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type J must override or implement a supertype method\\n\" + ", "-\t\t\t\"----------\\n\";\t\t", "-\t\t\texpectedOutput);", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                                  ^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with Object.clone(), thus this interface cannot be implemented\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"clone()\", \"J\") + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecfd24302b2f1b948b9282b5fed0f4b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " \tpublic void test071()", "signatureAfterChange": " \tpublic void test071()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"D.java\",", "-\t\t\t\t\"class D extends B<Integer> {\\n\" +", "-\t\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "-\t\t\t\t\"\t@Override void m(Integer t) {}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"class A<T extends Number> { void m(T t) {} }\\n\" +", "-\t\t\t\t\"class B<S extends Integer> extends A<S> { @Override void m(S t) {} }\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t?\t\"----------\\n\" + ", "-\t\t);", "+\t\t:\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in D.java (at line 2)\\n\" + ", "+\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method m(Number) of type D has the same erasure as m(T) of type A<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in D.java (at line 2)\\n\" + ", "+\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method m(Number) of type D must override or implement a supertype method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in D.java (at line 6)\\n\" + ", "+\t\t\t\"\tclass B<S extends Integer> extends A<S> { @Override void m(S t) {} }\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^\\n\" + ", "+\t\t\t\"The type parameter S should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "+\t\t\t\"----------\\n\";", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"D.java\",", "+\t\t\t\t\"class D extends B<Integer> {\\n\" +", "+\t\t\t\t\"\t@Override void m(Number t) {}\\n\" + ", "+\t\t\t\t\"\t@Override void m(Integer t) {}\\n\" + ", "+\t\t\t\t\"}\\n\" + ", "+\t\t\t\t\"class A<T extends Number> { void m(T t) {} }\\n\" +", "+\t\t\t\t\"class B<S extends Integer> extends A<S> { @Override void m(S t) {} }\"", "+\t\t\t},", "+\t\t\texpectedOutput);"]}], "num": 41429}