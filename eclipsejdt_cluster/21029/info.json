{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3732963497ac6777ebdce68d8878809f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d0c7a2b3515663d7e023710a4fd2c96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConditionalExpressionTest.java", "commitBeforeChange": "eb0413d7c3f6c8377e410e116826fcfccbec3365", "commitAfterChange": "7cf8a68136e90cda676cf99c112914a22eaf96cd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test008()", "signatureAfterChange": " \tpublic void test008()", "diff": ["+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method foo(BinaryOperation<Integer>) in the type X is not applicable for the arguments ((false ? new StringCatenation() : (<no type> a, <no type> b) -> (a + b)))\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tfoo(false ? new StringCatenation() : (a,b)->a+b);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd0c840111de545a245a5710ae39c41e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConditionalExpressionTest.java", "commitBeforeChange": "eb0413d7c3f6c8377e410e116826fcfccbec3365", "commitAfterChange": "7cf8a68136e90cda676cf99c112914a22eaf96cd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test007()", "signatureAfterChange": " \tpublic void test007()", "diff": ["+\t\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\t\"The method foo(BinaryOperation<Integer>) in the type X is not applicable for the arguments ((false ? (<no type> a, <no type> b) -> (a + b) : new StringCatenation()))\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\t\"\tfoo(false ? (a,b)->a+b :new StringCatenation());\\n\" + "]}], "num": 21029}