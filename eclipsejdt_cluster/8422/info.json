{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41cd03d93c63dfb808f64871ead7d07b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "594e3d93002f7d741c5061ed9f9ca5b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "b78a341d9c2ae71ec75ebc5229ccf7d4bba66b46", "commitAfterChange": "cee72fca9d21d8ecea9da9111153a7e6090893c1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t  \t MethodBinding getMethodBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver)", "signatureAfterChange": " \t  \t MethodBinding getMethodBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver)", "diff": ["-\t \tchar[] methodKey = this.scanner.getTokenSource();", "-\t \tint selectorEnd = CharOperation.indexOf('(', methodKey);", "-\t \tchar[] selector = CharOperation.subarray(methodKey, 0, selectorEnd);", "+\t \tchar[] selector = this.scanner.getTokenSource();", "-\t \tint parameterStart = selectorEnd+1;", "-\t \tint parameterEnd = CharOperation.indexOf(',', methodKey, selectorEnd);", "-\t \twhile (parameterEnd != -1) {", "-\t \t\tchar[] parameterKey = CharOperation.subarray(methodKey, parameterStart, parameterEnd);", "-\t \t\t// TODO (jerome) use this binding key's scanner instead of creating a new object", "-\t \t\tBinding parameterBinding = new BindingKey(parameterKey).getCompilerBinding(resolver);", "+\t \tdo {", "+\t \t\treset();", "+\t \t\tBinding parameterBinding = getCompilerBinding(resolver);", "-\t \t\tparameterStart = parameterEnd+1;", "-\t \t\tparameterEnd = CharOperation.indexOf(',', methodKey, parameterStart);", "-\t \t}", "+\t \t} while (this.scanner.token != BindingKeyScanner.END);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f65c51a9d702a62bfcb7b264e1b943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "4815787a361b88d66be55a51648b98013848c116", "commitAfterChange": "0c953799b66dc53a6c967cf8fbb783c7783df27b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic IJavaElement getJavaElement()", "signatureAfterChange": "  \tpublic IJavaElement getJavaElement()", "diff": ["-\t\t\tString selector = getName();", "-\t\t\tchar[] methodSignature = original.genericSignature();", "-\t\t\tif (methodSignature == null)", "-\t\t\t\tmethodSignature = original.signature();", "-\t\t\tmethodSignature = CharOperation.replaceOnCopy(methodSignature, '/', '.');", "-\t\t\tchar[][] parameterSignatures = Signature.getParameterTypes(methodSignature);", "-\t\t\tString[] parameters = CharOperation.toStrings(parameterSignatures);", "-\t\t\tIMethod result = declaringType.getMethod(selector, parameters);", "+\t\t\tString selector = original.isConstructor() ? declaringType.getElementName() : new String(original.selector);", "+\t\t\tTypeBinding[] parameters = original.parameters;", "+\t\t\tint length = parameters == null ? 0 : parameters.length;", "+\t\t\tString[] parameterSignatures = new String[length];", "+\t\t\tfor (int i = 0;  i < length; i++) {", "+\t\t\t\tparameterSignatures[i] = new String(parameters[i].genericTypeSignature()).replace('/', '.');", "+\t\t\t}", "+\t\t\tIMethod result = declaringType.getMethod(selector, parameterSignatures);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9102a7706ff2b1a5204aaec2afa5d78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "4cbca3a5c8650b81b5a31d226fc27b2c31db5b39", "commitAfterChange": "2d45e82533a4fdf2e19ac612c4a04c15da28bf1a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate JavaElement getUnresolvedJavaElement()", "signatureAfterChange": "  \tprivate JavaElement getUnresolvedJavaElement()", "diff": ["+\t\t\tboolean isBinary = declaringType.isBinary();", "+\t\t\tReferenceBinding enclosingType = original.declaringClass.enclosingType();", "+\t\t\tboolean isInnerBinaryTypeConstructor = isBinary && original.isConstructor() && enclosingType != null;", "-\t\t\tString[] parameterSignatures = new String[length];", "+\t\t\tint declaringIndex = isInnerBinaryTypeConstructor ? 1 : 0;", "+\t\t\tString[] parameterSignatures = new String[declaringIndex + length];", "+\t\t\tif (isInnerBinaryTypeConstructor)", "+\t\t\t\tparameterSignatures[0] = new String(enclosingType.genericTypeSignature()).replace('/', '.');", "-\t\t\t\tparameterSignatures[i] = new String(parameters[i].genericTypeSignature()).replace('/', '.');", "+\t\t\t\tparameterSignatures[declaringIndex + i] = new String(parameters[i].genericTypeSignature()).replace('/', '.');", "-\t\t\tif (declaringType.isBinary())", "+\t\t\tif (isBinary)"]}], "num": 8422}