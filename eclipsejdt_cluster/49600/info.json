{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "728d15c07ae84eb749fe3e8744c50512", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b9cb4dd56c791ba17d8f4628c2f478", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Messages.java", "commitBeforeChange": "0dc6446aeab064f2d77dae4d4b0d25d3e6c845fc", "commitAfterChange": "8fe834cb8f4336c4e03a0aec8b6e7a981a1d317c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static void load(final String bundleName, final ClassLoader loader, final Field[] fields)", "signatureAfterChange": " \tpublic static void load(final String bundleName, final ClassLoader loader, final Field[] fields)", "diff": ["-\t\t\tInputStream input = null;", "-\t\t\tif (loader == null) {", "-\t\t\t\tinput = ClassLoader.getSystemResourceAsStream(variants[i]);", "-\t\t\t} else {", "-\t\t\t\tinput = loader.getResourceAsStream(variants[i]);", "-\t\t\t}", "-\t\t\tif (input == null)", "-\t\t\t\tcontinue;", "+\t\t\tInputStream input = (loader == null)", "+\t\t\t\t? ClassLoader.getSystemResourceAsStream(variants[i])", "+\t\t\t\t: loader.getResourceAsStream(variants[i]);", "+\t\t\tif (input == null) continue;", "-\t\t\t\tif (input != null)", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tinput.close();", "-\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\t// ignore", "-\t\t\t\t\t}", "+\t\t\t\ttry {", "+\t\t\t\t\tinput.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbef058d3b21182177d0424bdd92f3be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "2f0c7ec523954b9442b914a192aeb84937c76666", "commitAfterChange": "e1ce38065823480549fe152214755fa58b2884e3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static IClassFileReader createDefaultClassFileReader(IClassFile classfile, int decodingFlag)", "signatureAfterChange": " \tpublic static IClassFileReader createDefaultClassFileReader(IClassFile classfile, int decodingFlag)", "diff": ["-\t\t\t\t\tIPath location = classfile.getResource().getLocation();", "-\t\t\t\t\tif (location == null) return null;", "-\t\t\t\t\treturn createDefaultClassFileReader(location.toOSString(), decodingFlag);", "+\t\t\t\t\tURI uri = classfile.getResource().getLocationURI();", "+\t\t\t\t\tif (uri == null) return null;", "+\t\t\t\t\tInputStream in = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tin = EFS.getStore(uri).openInputStream(EFS.NONE, null);", "+\t\t\t\t\t\treturn createDefaultClassFileReader(in, decodingFlag);", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tif (in != null)", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tin.close();", "+\t\t\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 49600}