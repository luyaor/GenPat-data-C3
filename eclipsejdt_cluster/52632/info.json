{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "647933731fb3411269eb9197c9728acc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13559e8ef37b18a9b8af85de6312f265", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "commitAfterChange": "bca01eadc82a3abb71100149fcbedb07d33a04ad", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean combineAccessRestrictions, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance, \t\t\tfinal boolean simulateImport) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean combineAccessRestrictions, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance, \t\t\tfinal boolean fullJCL, \t\t\tfinal boolean simulateImport) throws CoreException", "diff": ["+\t}", "+\tprotected IJavaProject createJavaProject(", "+\t\t\tfinal String projectName,", "+\t\t\tfinal String[] sourceFolders,", "+\t\t\tfinal String[] libraries,", "+\t\t\tfinal String[][] librariesInclusionPatterns,", "+\t\t\tfinal String[][] librariesExclusionPatterns,", "+\t\t\tfinal String[] projects,", "+\t\t\tfinal String[][] projectsInclusionPatterns,", "+\t\t\tfinal String[][] projectsExclusionPatterns,", "+\t\t\tfinal boolean combineAccessRestrictions,", "+\t\t\tfinal boolean[] exportedProjects,", "+\t\t\tfinal String projectOutput,", "+\t\t\tfinal String[] sourceOutputs,", "+\t\t\tfinal String[][] inclusionPatterns,", "+\t\t\tfinal String[][] exclusionPatterns,", "+\t\t\tfinal String compliance,", "+\t\t\tfinal boolean fullJCL,", "+\t\t\tfinal boolean simulateImport) throws CoreException {", "-\t\t\t\t\t\t\tsetUpJCLClasspathVariables(compliance);", "+\t\t\t\t\t\t\tsetUpJCLClasspathVariables(compliance, fullJCL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "417c6ac42d6ed1c599b8d6d4b7013bf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5ef1cc56a5d4ebd967cc5c7e76265ab37a605575", "commitAfterChange": "f5476e05b46ec9b70e1bb26b071f29e4868379b5", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean combineAccessRestrictions, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "diff": ["+\t}", "+\tprotected IJavaProject createJavaProject(", "+\t\t\tfinal String projectName,", "+\t\t\tfinal String[] sourceFolders,", "+\t\t\tfinal String[] libraries,", "+\t\t\tfinal String[][] librariesInclusionPatterns,", "+\t\t\tfinal String[][] librariesExclusionPatterns,", "+\t\t\tfinal String[] projects,", "+\t\t\tfinal String[][] projectsInclusionPatterns,", "+\t\t\tfinal String[][] projectsExclusionPatterns,", "+\t\t\tfinal boolean combineAccessRestrictions,", "+\t\t\tfinal boolean[] exportedProjects,", "+\t\t\tfinal String projectOutput,", "+\t\t\tfinal String[] sourceOutputs,", "+\t\t\tfinal String[][] inclusionPatterns,", "+\t\t\tfinal String[][] exclusionPatterns,", "+\t\t\tfinal String compliance) throws CoreException {", "-\t\t\t\t\t\t\t\texclusionPaths, false);", "+\t\t\t\t\t\t\t\texclusionPaths, ", "+\t\t\t\t\t\t\t\tnew IClasspathAttribute[0],", "+\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\tnew IClasspathAttribute[0], ", "+\t\t\t\t\t\t\t\tcombineAccessRestrictions,", "+\t\t\t\t\t\t\t\tnew IClasspathAttribute[0], "]}], "num": 52632}