{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9c860ec3edfc9141c796e8e152b853b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5fb412b0576aacf214cd9629279af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 1, "signatureBeforeChange": " TypeBinding resolveType(TypeBinding type)", "signatureAfterChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "diff": ["+}", "+public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank) {", "+\tif (type instanceof UnresolvedReferenceBinding)", "+\t\treturn ((UnresolvedReferenceBinding) type).resolve(environment, parameterizedType == null);", "+\tif (type.isParameterizedType())", "+\t\treturn ((ParameterizedTypeBinding) type).resolve();", "+\tif (type.isWildcard())", "+\t\treturn ((WildcardBinding) type).resolve();", "+\tif (type.isArrayType())", "+\t\tresolveType(((ArrayBinding) type).leafComponentType, environment, parameterizedType, rank);", "+\treturn type;", "+}", "-TypeBinding resolveType(TypeBinding type) {", "-\tif (type instanceof UnresolvedReferenceBinding)", "-\t\treturn ((UnresolvedReferenceBinding) type).resolve(environment);", "-\tif (type instanceof ArrayBinding) {", "-\t\tArrayBinding array = (ArrayBinding) type;", "-\t\tif (array.leafComponentType instanceof UnresolvedReferenceBinding)", "-\t\t\tarray.leafComponentType = ((UnresolvedReferenceBinding) array.leafComponentType).resolve(environment);", "-\t}", "-\treturn type;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf47cd93f9ba0872ace6a5e9dd05d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "64acc52a43851c3687c66fff1c938785cba185e7", "commitAfterChange": "57edad08edc408d5cd09316ff260c102c9c3b29c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "signatureAfterChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "diff": ["-\tif (type instanceof UnresolvedReferenceBinding)", "-\t\treturn ((UnresolvedReferenceBinding) type).resolve(environment, parameterizedType == null);", "-\tif (type.isParameterizedType())", "-\t\treturn ((ParameterizedTypeBinding) type).resolve();", "-\tif (type.isWildcard())", "-\t\treturn ((WildcardBinding) type).resolve();", "-\tif (type.isArrayType())", "-\t\tresolveType(((ArrayBinding) type).leafComponentType, environment, parameterizedType, rank);", "-", "-\tif (parameterizedType == null && type.isGenericType()) // raw reference to generic ?", "-\t    return environment.createRawType((ReferenceBinding) type, null);", "+\tswitch (type.bindingType()) {", "+\t\t", "+\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\treturn ((ParameterizedTypeBinding) type).resolve();", "+\t\t\t", "+\t\tcase Binding.WILDCARD_TYPE :", "+\t\t\treturn ((WildcardBinding) type).resolve();", "+\t\t\t", "+\t\tcase Binding.ARRAY_TYPE :", "+\t\t\tresolveType(((ArrayBinding) type).leafComponentType, environment, parameterizedType, rank);", "+\t\t\tbreak;", "+\t\t\t", "+\t\tcase Binding.TYPE_PARAMETER :", "+\t\t\t((TypeVariableBinding) type).resolve(environment);", "+\t\t\tbreak;", "+\t\t\t\t\t\t", "+\t\tcase Binding.GENERIC_TYPE :", "+\t\t\tif (parameterizedType == null) // raw reference to generic ?", "+\t\t\t    return environment.createRawType((ReferenceBinding) type, null);", "+\t\t\tbreak;", "+\t\t\t", "+\t\tdefault:\t\t\t", "+\t\t\tif (type instanceof UnresolvedReferenceBinding)", "+\t\t\t\treturn ((UnresolvedReferenceBinding) type).resolve(environment, parameterizedType == null);", "+\t}"]}], "num": 35846}