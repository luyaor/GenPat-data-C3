{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95ea4847aa2fc2dd963ff919bab291a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cc4491a708b0fc77098589f1f3330a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "4633cdd34bc32c9ec930b454d5e4ef42024a77f4", "commitAfterChange": "aa223e9a2138470a8d88d3629dbe1cb95c932c69", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprivate void verifyComments(ICompilationUnit sourceUnit) throws JavaModelException", "signatureAfterChange": " \tprivate void verifyComments(ICompilationUnit sourceUnit) throws JavaModelException", "diff": ["+\t\tString fileName = sourceUnit.getElementName();", "-\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(sourceUnit, true); // resolve bindings", "-\t\tComment[] unitComments = compilUnit.getCommentTable();", "+\t\tIJavaProject project = sourceUnit.getJavaProject();", "+\t\tMap originalOptions = project.getOptions(true);", "+\t\tComment[] unitComments = null;", "+\t\tif (debug) {", "+\t\t\ttry {", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, JavaCore.ERROR);", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, JavaCore.ERROR);", "+\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, JavaCore.ERROR);", "+\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(sourceUnit, true); // resolve bindings", "+\t\t\t\tassertEquals(fileName+\": Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\t\t\tunitComments = compilUnit.getCommentTable();", "+\t\t\t} finally {", "+\t\t\t\tproject.setOptions(originalOptions);", "+\t\t\t}", "+\t\t} else {", "+\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(sourceUnit, true); // resolve bindings", "+\t\t\t\tunitComments = compilUnit.getCommentTable();", "+\t\t}", "+\t\tassertNotNull(fileName+\": Unexpected problems\", unitComments);", "-\t\tassertEquals(\"Wrong number of comments\", this.comments.size(), unitComments.length);", "+\t\tassertEquals(fileName+\": Wrong number of comments\", this.comments.size(), unitComments.length);", "-\t\t\tassertEquals(\"Flattened javadoc does NOT match source!\", text, printer.getResult());", "+\t\t\tassertEquals(fileName+\": Flattened javadoc does NOT match source!\", text, printer.getResult());", "-\t\t\t\tassertEquals(\"Invalid tags number! \", tags.size(), allTags(docComment));", "+\t\t\t\tassertEquals(fileName+\": Invalid tags number! \", tags.size(), allTags(docComment));", "+\t\t\tif (debug) System.out.println(comment+\"\\nsuccessfully verified in \"+fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7583dafb79aa8e748ade9bf162ff39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "bc11b8ca976f8360b7224f086a28378398f2dfd3", "commitAfterChange": "48f756ae0727772676a244af8217d19fe8e81145", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "signatureAfterChange": " \tprotected void verifyComments(String sourceStr, char[] source, Comment[] unitComments) throws JavaModelException", "diff": ["-\t\tif (problems) {", "-\t\t\ttry {", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, JavaCore.ERROR);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, JavaCore.ERROR);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, JavaCore.ERROR);", "-\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, true); // resolve bindings", "-\t\t\t\tassertEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "-\t\t\t} finally {", "-\t\t\t\tproject.setOptions(originalOptions);", "-\t\t\t}", "-\t\t} else {", "-\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, true); // resolve bindings", "-\t\t\t\tunitComments = compilUnit.getCommentTable();", "-", "-\t\t// Get comments infos from test file", "+\t */", "+\tprotected void verifyComments(String sourceStr, char[] source, Comment[] unitComments) throws JavaModelException {", "+\t\t// Get comments infos from test file", "-\t\t\t\tverifyBindings(docComment);", "+\t\t\t\tif (this.resolveBinding) {", "+\t\t\t\t\tverifyBindings(docComment);", "+\t\t\t\t}"]}], "num": 68868}