{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e3d6bfef96d16a1fe3632cc62243b13", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "073dbaade8aa8fe767a7e43023277ac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "04abb6d1e9cce4ccf64496ee5f7d45399d283bd2", "commitAfterChange": "e586991bacf22cb0c88410f0cd529579715fb06a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected static TestSuite createSuite(Class testClass)", "signatureAfterChange": " \tprotected static TestSuite createSuite(Class testClass)", "diff": ["+\t\treturn createSuite(testClass, -1);", "+\t}", "-\t\t\t\t\t\t\tif (level >= since) {", "-\t\t\t\t\t\t\t\tsuite.addTest((Test) cons.newInstance(new Object[]{name,  new Integer(level)}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42a49969d2478f52f8506a8ea8b89e1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "2ae41539e386d12d9e7c121e231730e370deda2f", "commitAfterChange": "05dd526dbb279df7b7e23a1d7ccb53d445943919", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public IPath[] enclosingProjectsAndJars()", "signatureAfterChange": "\r public IPath[] enclosingProjectsAndJars()", "diff": ["-\ttry {\r", "-\t\tVector paths = new Vector();\r", "-\t\tIJavaModel javaModel = JavaModelManager.getJavaModel(ResourcesPlugin.getWorkspace());\r", "-\t\tIWorkspaceRoot root = javaModel.getWorkspace().getRoot();\r", "-\t\tfor (int i = 0; i < this.elementCount; i++){\r", "-\t\t\tIResource element = this.elements[i];\r", "-\t\t\tIPath path = element.getProject().getFullPath();\r", "-\t\t\tIProject project = element.getProject();\r", "-\t\t\tif (project.exists() && project.isOpen()) {\r", "-\t\t\t\tif (!paths.contains(path)) paths.add(path);\r", "-\t\t\t\tif (this.includesClasspaths) {\r", "-\t\t\t\t\tIJavaProject javaProject = javaModel.getJavaProject(project.getName());\r", "-\t\t\t\t\tIClasspathEntry[] entries = ((JavaProject)javaProject).getExpandedClasspath(true);\r", "-\t\t\t\t\tfor (int j = 0; j < entries.length; j++) {\r", "-\t\t\t\t\t\tIClasspathEntry entry = entries[j];\r", "-\t\t\t\t\t\tswitch (entry.getEntryKind()) {\r", "-\t\t\t\t\t\t\tcase IClasspathEntry.CPE_PROJECT:\r", "-\t\t\t\t\t\t\t\tpath = entry.getPath();\r", "-\t\t\t\t\t\t\t\tif (!paths.contains(path) && root.getProject(path.lastSegment()).isAccessible()) {\r", "-\t\t\t\t\t\t\t\t\tpaths.add(path);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t\tcase IClasspathEntry.CPE_LIBRARY:\r", "-\t\t\t\t\t\t\t\tif (this.includesBinaries) {\r", "-\t\t\t\t\t\t\t\t\tpath = entry.getPath();\r", "-\t\t\t\t\t\t\t\t\tif (!paths.contains(path)) paths.add(path);\r", "-\t\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tIPath[] result = new IPath[paths.size()];\r", "-\t\tpaths.copyInto(result);\r", "-\t\treturn result;\r", "-\t} catch (JavaModelException e) {\r", "-\t\treturn new IPath[0];\r", "-\t}\r", "+\treturn this.enclosingProjectsAndJars;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95cd9a7dceb7b146a75f3fe05e18afa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "64adb94de0734c7d5adfd2cb11839ed3d3641dfc", "commitAfterChange": "a12b1847e48d96ac5e805a907f4cf72bcc8b1f19", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t    // save container values on snapshot/full save", "-\t\tIJavaProject[] projects = getJavaModel().getJavaProjects();", "-\t\tIEclipsePreferences preferences = getInstancePreferences();", "-\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "-\t\t    IJavaProject project = projects[i];", "-\t\t\t// clone while iterating (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59638)", "-\t\t\tMap projectContainers = containerClone(project);", "-\t\t\tif (projectContainers == null) continue;", "-\t\t\tfor (Iterator keys = projectContainers.keySet().iterator(); keys.hasNext();) {", "-\t\t\t    IPath containerPath = (IPath) keys.next();", "-\t\t\t    IClasspathContainer container = (IClasspathContainer) projectContainers.get(containerPath);", "-\t\t\t\tString containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +\"|\"+containerPath;//$NON-NLS-1$", "-\t\t\t\tString containerString = null;", "-\t\t\t\ttry {", "-\t\t\t\t\tif (container == null) {", "-\t\t\t\t\t\t// container has not been initialized yet, use previous session value", "-\t\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=73969)", "-\t\t\t\t\t\tcontainer = getPreviousSessionContainer(containerPath, project);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (container != null) {", "-\t\t\t\t\t\tIClasspathEntry[] entries = container.getClasspathEntries();", "-\t\t\t\t\t\tcontainerString = ((JavaProject)project).encodeClasspath(", "-\t\t\t\t\t\t\t\tentries, ", "-\t\t\t\t\t\t\t\tnull, ", "-\t\t\t\t\t\t\t\tfalse);", "-\t\t\t\t\t}", "-\t\t\t\t} catch(JavaModelException e){", "-\t\t\t\t\t// could not encode entry: will not persist", "-\t\t\t\t\tUtil.log(e, \"Could not persist container \" + containerPath + \" for project \" + project.getElementName()); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t}", "-\t\t\t\tif (containerString != null)", "-\t\t\t\t\tpreferences.put(containerKey, containerString);", "-\t\t\t}", "-\t\t}", "-\t\ttry {", "-\t\t\tpreferences.flush();", "-\t\t} catch (BackingStoreException e) {", "-\t\t\tIStatus status = new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, IStatus.ERROR, \"Problems while saving context\", e); //$NON-NLS-1$", "-\t\t\tthrow new CoreException(status);", "-\t\t}", "+\t    // save variable and container values on snapshot/full save", "+\t\tsaveVariablesAndContainers();"]}], "num": 56565}