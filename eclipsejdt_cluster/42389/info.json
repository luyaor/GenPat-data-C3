{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c96d472b83ac10ce47ef4b8677a7568c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285dd32813a25d577c08b743dfa14296", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemTypeAndMethodTest.java", "commitBeforeChange": "65f890bbea90cd2421a6ab66f84aac632ed3ecc6", "commitAfterChange": "f30a18a2decb6f1fda736d299a391b81b93c8d2a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test009()", "signatureAfterChange": " public void test009()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\", //-----------------------------------------------------------------------", "-\t\t\t\t\t\"import q1.q2.*;\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\t\"\t\tZork z;\\n\" +", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"}\t\\n\",", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"\timport q1.q2.*;\\n\" + ", "-\t\t\t\"\t       ^^\\n\" + ", "-\t\t\t\"The import q1 cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull,", "-\t\t\tfalse);", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tfalse /* do not flush output directory */,", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\", //-----------------------------------------------------------------------", "+\t\t\t\"import q1.q2.*;\\n\" +", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\"\t\tZork z;\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\t\\n\",", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tnull /* no custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\timport q1.q2.*;\\n\" + ", "+\t\t\"\t       ^^\\n\" + ", "+\t\t\"The import q1 cannot be resolved\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tZork z;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\",\t\t\t// javac options", "+\t\tJavacTestOptions.SKIP_UNTIL_FRAMEWORK_FIX /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c84249b658a62d60b1304d9184e43ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemTypeAndMethodTest.java", "commitBeforeChange": "65f890bbea90cd2421a6ab66f84aac632ed3ecc6", "commitAfterChange": "f30a18a2decb6f1fda736d299a391b81b93c8d2a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test010()", "signatureAfterChange": " public void test010()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\", //-----------------------------------------------------------------------", "-\t\t\t\t\t\"import q1.q2.Zork;\\n\" +", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\t\"\t\tZork z;\\n\" +", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"}\t\\n\",", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "-\t\t\t\"\timport q1.q2.Zork;\\n\" + ", "-\t\t\t\"\t       ^^\\n\" + ", "-\t\t\t\"The import q1 cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull,", "-\t\t\tfalse);", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\tfalse /* do not flush output directory */,", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\", //-----------------------------------------------------------------------", "+\t\t\t\"import q1.q2.Zork;\\n\" +", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\"\t\tZork z;\\n\" +", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\t\\n\",", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tnull /* no custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\"\timport q1.q2.Zork;\\n\" + ", "+\t\t\"\t       ^^\\n\" + ", "+\t\t\"The import q1 cannot be resolved\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tZork z;\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.SKIP_UNTIL_FRAMEWORK_FIX /* javac test options */);"]}], "num": 42389}