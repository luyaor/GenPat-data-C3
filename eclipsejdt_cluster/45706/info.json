{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14718842731a2416714d324dedd4c007", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "600fbf5f0ec3c0073e3aef4293f19e1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void createFolder(IContainer parentFolder, String name, boolean force) throws JavaModelException", "signatureAfterChange": " \tprotected void createFolder(IContainer parentFolder, String name, boolean force) throws JavaModelException", "diff": ["- */", "-protected void createFolder(IContainer parentFolder, String name, boolean force) throws JavaModelException {", "-\tIFolder folder= parentFolder.getFolder(new Path(name));", "-\ttry {", "-\t\t// we should use true to create the file locally. Only VCM should use tru/false", "-\t\tfolder.create(", "-\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY,", "-\t\t\ttrue, // local", "-\t\t\tgetSubProgressMonitor(1));", "-\t\tthis.hasModifiedResource = true;", "-\t} catch (CoreException e) {", "-\t\tthrow new JavaModelException(e);", "-\t}", "-}", "+\t */", "+\tprotected void createFolder(IContainer parentFolder, String name, boolean force) throws JavaModelException {", "+\t\tIFolder folder= parentFolder.getFolder(new Path(name));", "+\t\ttry {", "+\t\t\t// we should use true to create the file locally. Only VCM should use tru/false", "+\t\t\tfolder.create(", "+\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY,", "+\t\t\t\ttrue, // local", "+\t\t\t\tgetSubProgressMonitor(1));", "+\t\t\t\tthis.setAttribute(\"hasModifiedResource\", \"true\");", "+\t\t} catch (CoreException e) {", "+\t\t\tthrow new JavaModelException(e);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6b0e7b4027e4ad8bf42b8afc288d00b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "b12492ad0eb83de9816def47b0f6dea2ec7ff67f", "commitAfterChange": "0deabbafa4ad0926b565767fe8d2a589d68558ed", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void createFile(IContainer folder, String name, InputStream contents, boolean force) throws JavaModelException", "signatureAfterChange": " \tprotected void createFile(IContainer folder, String name, InputStream contents, boolean force) throws JavaModelException", "diff": ["- */", "-protected void createFile(IContainer folder, String name, InputStream contents, boolean force) throws JavaModelException {", "-\tIFile file= folder.getFile(new Path(name));", "-\ttry {", "-\t\tfile.create(", "-\t\t\tcontents, ", "-\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "-\t\t\tgetSubProgressMonitor(1));", "-\t\tthis.hasModifiedResource = true;", "-\t} catch (CoreException e) {", "-\t\tthrow new JavaModelException(e);", "-\t}", "-}", "+\t */", "+\tprotected void createFile(IContainer folder, String name, InputStream contents, boolean force) throws JavaModelException {", "+\t\tIFile file= folder.getFile(new Path(name));", "+\t\ttry {", "+\t\t\tfile.create(", "+\t\t\t\tcontents, ", "+\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "+\t\t\t\tgetSubProgressMonitor(1));", "+\t\t\t\tthis.setAttribute(\"hasModifiedResource\", \"true\");", "+\t\t} catch (CoreException e) {", "+\t\t\tthrow new JavaModelException(e);", "+\t}"]}], "num": 45706}