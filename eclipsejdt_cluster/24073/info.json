{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cbcf2c7ed2cb761746a8cc2d1be78e5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206dbf0de6b289ac2c140192d97326db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 555, "methodNumberAfterChange": 555, "signatureBeforeChange": " public void testCompletionAbstractMethod4() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethod4() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethod4.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAbstractMethod4.java\",", "+            \"public class CompletionAbstractMethod1 {\\n\" +", "+            \"\tclass A {\\n\" +", "+            \"\t\tvoid foo(){}\\n\" +", "+            \"\t}\\n\" +", "+            \"\tabstract class B extends A {\\n\" +", "+            \"\t\tabstract void foo();\\n\" +", "+            \"\t}\\n\" +", "+            \"\tclass C extends B {\\n\" +", "+            \"\t\tvoid foo{} {}\\n\" +", "+            \"\t\tvoid bar() {\\n\" +", "+            \"\t\t\tsuper.fo\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"fo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"fo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"\",", "-\t\trequestor.getResults());", "+    assertResults(", "+           \"\",", "+           requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ecc62de4752ed213c09f2c42d33bec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 553, "methodNumberAfterChange": 553, "signatureBeforeChange": " public void testCompletionAbstractMethod2() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethod2() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethod2.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAbstractMethod2.java\",", "+            \"public class CompletionAbstractMethod2 {\\n\" +", "+            \"\tabstract class A {\\n\" +", "+            \"\t\tabstract void foo();\\n\" +", "+            \"\t}\\n\" +", "+            \"\tclass B extends A {\\n\" +", "+            \"\t\tvoid foo{} {}\\n\" +", "+            \"\t\tvoid bar() {\\n\" +", "+            \"\t\t\tthis.fo\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"fo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"fo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:foo    completion:foo()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+           \"foo[METHOD_REF]{foo(), LCompletionAbstractMethod2$A;, ()V, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED) + \"}\",", "+           requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562f61c5233cb9ca537465a361668a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void testCompletionAmbiguousFieldName2() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAmbiguousFieldName2() throws JavaModelException", "diff": ["+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAmbiguousFieldName2.java\",", "+            \"public class CompletionAmbiguousFieldName2 {\\n\"+", "+            \"\tint xBar;\\n\"+", "+            \"\tclass classFoo {\\n\"+", "+            \"\t\tpublic void foo(int xBar){\\n\"+", "+            \"\t\t\txBa\\n\"+", "+            \"\t\t}\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"xBa\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAmbiguousFieldName2.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"xBa\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"should have two completions\", ", "-\t\t\"element:xBar    completion:CompletionAmbiguousFieldName2.this.xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"xBar[FIELD_REF]{CompletionAmbiguousFieldName2.this.xBar, LCompletionAmbiguousFieldName2;, I, xBar, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\\n\"+", "+            \"xBar[LOCAL_VARIABLE_REF]{xBar, null, I, xBar, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED)+\"}\",", "+            requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68361970bcd8375217c3514f788550c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testCompletionPrefixMethodName2() throws JavaModelException", "signatureAfterChange": "   public void testCompletionPrefixMethodName2() throws JavaModelException", "diff": ["+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionPrefixMethodName2.java\",", "+            \"public class CompletionPrefixMethodName2 {\\n\"+", "+            \"\tint xBar(){}\\n\"+", "+            \"\t\\n\"+", "+            \"\tclass classFoo {\\n\"+", "+            \"\t\tint xBar(){}\\n\"+", "+            \"\t\t\\n\"+", "+            \"\t\tpublic void foo(){\\n\"+", "+            \"\t\t\tnew CompletionPrefixMethodName2().xBa\\n\"+", "+            \"\t\t}\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"xBa\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionPrefixMethodName2.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"xBa\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"should have one completion\", ", "-\t\t\"element:xBar    completion:xBar()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\"xBar[METHOD_REF]{xBar(), LCompletionPrefixMethodName2;, ()I, xBar, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837bf17a95d9fdc1ec800959a3e770b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void testCompletionFindMemberType1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionFindMemberType1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionFindMemberType1.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionFindMemberType1.java\",", "+            \"interface A1 {\\n\"+", "+            \"\tclass Inner1 {\\n\"+", "+            \"\t}\\n\"+", "+            \"}\\n\"+", "+            \"interface B1 extends A1 {\\n\"+", "+            \"\tclass Inner1 {\\n\"+", "+            \"\t}\\n\"+", "+            \"}\\n\"+", "+            \"public class CompletionFindMemberType1 {\\n\"+", "+            \"\tpublic void foo() {\\n\"+", "+            \"\t\tB1.Inner\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"Inner\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"Inner\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:B1.Inner1    completion:Inner1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\"B1.Inner1[TYPE_REF]{Inner1, , LB1$Inner1;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE+ R_NON_RESTRICTED) +\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e1fd80c6576f57df5713619af886c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 552, "methodNumberAfterChange": 552, "signatureBeforeChange": " public void testCompletionAbstractMethod1() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethod1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethod1.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAbstractMethod1.java\",", "+            \"public class CompletionAbstractMethod1 {\\n\" +", "+            \"\tabstract class A {\\n\" +", "+            \"\t\tabstract void foo();\\n\" +", "+            \"\t}\\n\" +", "+            \"\tclass B extends A {\\n\" +", "+            \"\t\tvoid foo{} {}\\n\" +", "+            \"\t\tvoid bar() {\\n\" +", "+            \"\t\t\tsuper.fo\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"fo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"fo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"\",", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"\",", "+            requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57ae6a095769e26f53a4c2d81ffe5eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public void testCompletionPrefixFieldName2() throws JavaModelException", "signatureAfterChange": "   public void testCompletionPrefixFieldName2() throws JavaModelException", "diff": ["+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionPrefixFieldName2.java\",", "+            \"public class CompletionPrefixFieldName2 {\\n\"+", "+            \"\tint xBar;\\n\"+", "+            \"\t\\n\"+", "+            \"\tclass classFoo {\\n\"+", "+            \"\t\tint xBar;\\n\"+", "+            \"\t\t\\n\"+", "+            \"\t\tpublic void foo(){\\n\"+", "+            \"\t\t\tnew CompletionPrefixFieldName2().xBa\\n\"+", "+            \"\t\t}\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"xBa\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionPrefixFieldName2.java\");", "-", "-\tString str = cu.getSource();", "-\tString completeBehind = \"xBa\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"should have one completion\", ", "-\t\t\"element:xBar    completion:xBar    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\"xBar[FIELD_REF]{xBar, LCompletionPrefixFieldName2;, I, xBar, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ef2e47e790062963864409debd48f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 554, "methodNumberAfterChange": 554, "signatureBeforeChange": " public void testCompletionAbstractMethod3() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethod3() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethod3.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAbstractMethod3.java\",", "+            \"public class CompletionAbstractMethod3 {\\n\" +", "+            \"\tabstract class A {\\n\" +", "+            \"\t\tabstract void foo();\\n\" +", "+            \"\t}\\n\" +", "+            \"\tclass B extends A {\\n\" +", "+            \"\t\tvoid bar() {\\n\" +", "+            \"\t\t\tthis.fo\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"fo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"fo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:foo    completion:foo()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+           \"foo[METHOD_REF]{foo(), LCompletionAbstractMethod3$A;, ()V, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED)+\"}\",", "+           requestor.getResults());"]}], "num": 24073}