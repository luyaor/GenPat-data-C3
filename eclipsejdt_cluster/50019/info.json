{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e836249a5ca24095a6cb6a0ba219beb0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e2de33648c28ddb96e78e6b375967c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "62542d77179e2d9d9eae2d205be3f0fefe8aabb4", "commitAfterChange": "4819fad32c78bae1ce1ee5d132562a40aee0fa3e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprivate String getNewLineString(int linesCount)", "signatureAfterChange": "  \tprivate String getNewLineString(int linesCount)", "diff": ["-\t\tString newLineString = this.newEmptyLines[linesCount-1];", "-\t\tif (newLineString == null) {", "-\t\t\tthis.tempBuffer.setLength(0);", "-\t\t\tfor (int j=0; j<linesCount; j++) {", "-\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\tString newLineString = Util.EMPTY_STRING;", "+\t\tif (linesCount > 0) {", "+\t\t\tnewLineString = this.newEmptyLines[linesCount-1];", "+\t\t\tif (newLineString == null) {", "+\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\tfor (int j=0; j<linesCount; j++) {", "+\t\t\t\t\tthis.tempBuffer.append(this.lineSeparator);", "+\t\t\t\t}", "+\t\t\t\tnewLineString = this.tempBuffer.toString();", "+\t\t\t\tthis.newEmptyLines[linesCount-1] = newLineString;", "-\t\t\tnewLineString = this.tempBuffer.toString();", "-\t\t\tthis.newEmptyLines[linesCount-1] = newLineString;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3190e7e2e55bc9aec9e98f57ccf80529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "611f04ed654770c6373d440043b600ba88b5b40f", "commitAfterChange": "99fc1a3d7bf3e741e313c8ee27cdbed8eb97ec16", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t@Override \tprotected void validateSettings(Key changedKey, String oldValue, String newValue)", "signatureAfterChange": " \t@Override \tprotected void validateSettings(Key changedKey, String oldValue, String newValue)", "diff": ["+\t\telse if (changedKey == KEY_GENSRCDIR) {", "+\t\t\tstatus = validateGenSrcDir(newValue);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3306137e33706b79d6f25df2e4667629", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "9b1b6a819512b029e49c3cb9ed06455ccfc1d5cd", "commitAfterChange": "74302dee8aa8297c491a3e99513debff2cb08bbb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options)", "diff": ["+\t\tif (options == null) {", "+\t\t\toptions = JavaCore.getOptions();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95d5a3a7732e49f324536115494f45e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "bac0771911f11962784cf0ef9252c1e7875dc1e4", "commitAfterChange": "277b33164a7aa6b44e8af80cbf75c89be37ef9e5", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " protected void runJavac( \t\tString[] testFiles, \t\tboolean expectingCompilerErrors, \t\tString expectedCompilerLog, \t\tString expectedOutputString, \t\tString expectedErrorString, \t\tboolean shouldFlushOutputDirectory, \t\tJavacTestOptions options, \t\tString[] vmArguments)", "signatureAfterChange": " protected void runJavac( \t\tString[] testFiles, \t\tboolean expectingCompilerErrors, \t\tString expectedCompilerLog, \t\tString expectedOutputString, \t\tString expectedErrorString, \t\tboolean shouldFlushOutputDirectory, \t\tJavacTestOptions options, \t\tString[] vmArguments)", "diff": ["+\tif (options == null) {", "+\t\toptions = JavacTestOptions.DEFAULT;", "+\t}"]}], "num": 50019}