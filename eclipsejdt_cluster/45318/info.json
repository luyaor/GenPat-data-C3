{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caadfcec39dba81b9f6f1c796dd3f626", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ff9dc00c3b587564b5b6edab524882", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTRecoveryPropagator.java", "commitBeforeChange": "7c5e971605e3df9f80c39caf6a5dabceeb49148b", "commitAfterChange": "ffe39da04df0f3a3dcc2e15c0353857438ce8e35", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tASTRecoveryPropagator(IProblem[] problems)", "signatureAfterChange": " \t \tASTRecoveryPropagator(IProblem[] problems, RecoveryScannerData data)", "diff": ["-\tASTRecoveryPropagator(IProblem[] problems) {", "+\t", "+\tASTRecoveryPropagator(IProblem[] problems, RecoveryScannerData data) {", "+\t\tthis.usedOrIrrelevantProblems = new boolean[problems.length];", "+\t\t", "+\t\tthis.data = data;", "+\t\t", "+\t\tif(this.data != null) {", "+\t\t\t", "+\t\t\tint length = 0;", "+\t\t\tfor (int i = 0; i < data.insertedTokensPtr + 1; i++) {", "+\t\t\t\tlength += data.insertedTokens[i].length;", "+\t\t\t}", "+\t\t\tthis.insertedTokensKind = new int[length];", "+\t\t\tthis.insertedTokensPosition = new int[length];", "+\t\t\tthis.insertedTokensFlagged = new boolean[length];", "+\t\t\tint tokenCount = 0;", "+\t\t\tfor (int i = 0; i < data.insertedTokensPtr + 1; i++) {", "+\t\t\t\tfor (int j = 0; j < data.insertedTokens[i].length; j++) {", "+\t\t\t\t\tthis.insertedTokensKind[tokenCount] = data.insertedTokens[i][j];", "+\t\t\t\t\tthis.insertedTokensPosition[tokenCount] = data.insertedTokensPosition[i];", "+\t\t\t\t\ttokenCount++;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(data.removedTokensPtr != -1) {", "+\t\t\t\tthis.removedTokensFlagged = new boolean[data.removedTokensPtr + 1];", "+\t\t\t}", "+\t\t\tif(data.replacedTokensPtr != -1) {", "+\t\t\t\tthis.replacedTokensFlagged = new boolean[data.replacedTokensPtr + 1];", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c241cee14bf29d2424fa1d8099215826", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTRecoveryPropagator.java", "commitBeforeChange": "7c5e971605e3df9f80c39caf6a5dabceeb49148b", "commitAfterChange": "ffe39da04df0f3a3dcc2e15c0353857438ce8e35", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprotected boolean visitNode(ASTNode node)", "signatureAfterChange": " \t \tprotected boolean visitNode(ASTNode node)", "diff": ["-\t\treturn checkAndTagAsMalformed(node);", "+\t\tif(this.blockDepth > 0) {", "+\t\t\tint start = node.getStartPosition();", "+\t\t\tint end = start + node.getLength() - 1;", "+\t\t\t", "+\t\t\t// continue to visit the node only if it contains tokens modifications", "+\t\t\t", "+\t\t\tif(this.insertedTokensFlagged != null) {", "+\t\t\t\tfor (int i = 0; i < this.insertedTokensFlagged.length; i++) {", "+\t\t\t\t\tif(this.insertedTokensPosition[i] >= start &&", "+\t\t\t\t\t\t\tthis.insertedTokensPosition[i] <= end) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(this.removedTokensFlagged != null) {", "+\t\t\t\tfor (int i = 0; i <= this.data.removedTokensPtr; i++) {", "+\t\t\t\t\tif(this.data.removedTokensStart[i] >= start &&", "+\t\t\t\t\t\t\tthis.data.removedTokensEnd[i] <= end) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(this.replacedTokensFlagged != null) {", "+\t\t\t\tfor (int i = 0; i <= this.data.removedTokensPtr; i++) {", "+\t\t\t\t\tif(this.data.replacedTokensStart[i] >= start &&", "+\t\t\t\t\t\t\tthis.data.replacedTokensEnd[i] <= end) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\treturn false;", "+\t\t}", "+\t\treturn true;", "+\t}"]}], "num": 45318}