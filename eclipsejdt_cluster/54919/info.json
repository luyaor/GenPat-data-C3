{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "138836933f27be94002efbd06ba0674d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c728f573dafa2290ee8f7bfd394aaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "fd510706fb87f5a9efedaf2b30fac8e39a9078be", "commitAfterChange": "825d5e38fdd1fd3bc59054dc36afe7f42ce6f887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tJavaElementDelta delta = newJavaElementDelta();", "-\t\t\tICompilationUnit unit = ((JavaElement)fElementsToProcess[0]).getCompilationUnit();", "-\t\t\tIBuffer buffer = unit.getBuffer();", "-\t\t\tif (buffer  == null) return;", "-\t\t\tchar[] bufferContents = buffer.getCharacters();", "-\t\t\tprocessElement(unit,bufferContents);", "-\t\t\tunit.save(null, false);", "-\t\t\tboolean isWorkingCopy = unit.isWorkingCopy();", "-\t\t\tif (!isWorkingCopy)", "-\t\t\t\tthis.setAttribute(HAS_MODIFIED_RESOURCE_ATTR, TRUE);", "-\t\t\tworked(1);", "-\t\t\tif (!isWorkingCopy // if unit is working copy, then save will have already fired the delta", "-\t\t\t\t&& !Util.isExcluded(unit)", "-\t\t\t\t&& unit.getParent().exists()) { // if unit is working copy, then save will have already fired the delta", "-\t\t\t\tdelta.changed(unit, IJavaElementDelta.F_CONTENT);", "-\t\t\t\taddDelta(delta);", "+\t\t\tfor (int i = 0, max = fElementsToProcess.length; i < max; i++) {", "+\t\t\t\tJavaElementDelta delta = newJavaElementDelta();", "+\t\t\t\tICompilationUnit unit = ((JavaElement) fElementsToProcess[i]).getCompilationUnit();", "+\t\t\t\tif (unit == null) {", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\tIBuffer buffer = unit.getBuffer();", "+\t\t\t\tif (buffer  == null) { ", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\tchar[] bufferContents = buffer.getCharacters();", "+\t\t\t\tprocessElement(unit,bufferContents);", "+\t\t\t\tunit.save(null, false);", "+\t\t\t\tboolean isWorkingCopy = unit.isWorkingCopy();", "+\t\t\t\tif (!isWorkingCopy) {", "+\t\t\t\t\tthis.setAttribute(HAS_MODIFIED_RESOURCE_ATTR, TRUE);", "+\t\t\t\t}", "+\t\t\t\tworked(1);", "+\t\t\t\t // if unit is working copy, then save will have already fired the delta", "+\t\t\t\tif (!isWorkingCopy", "+\t\t\t\t\t&& !Util.isExcluded(unit)", "+\t\t\t\t\t&& unit.getParent().exists()) {", "+\t\t\t\t\tdelta.changed(unit, IJavaElementDelta.F_CONTENT);", "+\t\t\t\t\taddDelta(delta);", "+\t\t\t\t}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f2970464988522c01a039d6c0a5e92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "0ee55cb7b425ca172c29c8787fd167e56fe35621", "commitAfterChange": "faae0b7874a9fb0272afb48b6b96fc0b72a16025", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\tif (buffer.getCharacters() == null){", "-\t\tICompilationUnit original= (ICompilationUnit)this.getOriginalElement();", "-\t\tIBuffer originalBuffer = null;", "-\t\ttry {", "-\t\t\toriginalBuffer = original.getBuffer();", "-\t\t} catch (JavaModelException e) {", "-\t\t\t// original element does not exist: create an empty working copy", "-\t\t\tif (!e.getJavaModelStatus().isDoesNotExist()) {", "-\t\t\t\tthrow e;", "-\t\t\t}", "-\t\t}", "-\t\tif (originalBuffer != null) {", "-\t\t\tchar[] originalContents = originalBuffer.getCharacters();", "-\t\t\tif (originalContents != null) {", "-\t\t\t\tbuffer.setContents((char[])originalContents.clone());", "-\t\t\t}", "+\tif (buffer.getCharacters() == null) {", "+\t\tICompilationUnit original = (ICompilationUnit)this.getOriginalElement();", "+\t\tif (original.isOpen()) {", "+\t\t\tbuffer.setContents(original.getSource());", "-\t\t\t// initialize buffer", "-\t\t\tbuffer.setContents(CharOperation.NO_CHAR);", "+\t\t\tIFile file = (IFile)original.getResource();", "+\t\t\tif (file == null || !file.exists()) {", "+\t\t\t\t// initialize buffer with empty contents", "+\t\t\t\tbuffer.setContents(CharOperation.NO_CHAR);", "+\t\t\t} else {", "+\t\t\t\tbuffer.setContents(Util.getResourceContentsAsCharArray(file));", "+\t\t\t}"]}], "num": 54919}