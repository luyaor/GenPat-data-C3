{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b29c4574f5eb2afb386113b88abd406f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4855c8c354c3d80e5c4c08edc0f0a022", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1369ee539fab963cb9212bc0e7728c8e7ea1581c", "commitAfterChange": "8677d75931646723a12e1b4ccafa141861462004", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void incompatibleExceptionInThrowsClause(SourceTypeBinding type, MethodBinding currentMethod, MethodBinding inheritedMethod, ReferenceBinding exceptionType)", "signatureAfterChange": " public void incompatibleExceptionInThrowsClause(SourceTypeBinding type, MethodBinding currentMethod, MethodBinding inheritedMethod, ReferenceBinding exceptionType)", "diff": ["+\t\t\t\t\t\t'.'))},", "+\t\t\tnew String[] {", "+\t\t\t\tnew String(exceptionType.sourceName()),", "+\t\t\t\tnew String(", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tinheritedMethod.declaringClass.shortReadableName(),", "+\t\t\t\t\t\tinheritedMethod.shortReadableName(),", "+\t\t\tnew String[] {", "+\t\t\t\tnew String(exceptionType.sourceName()),", "+\t\t\t\tnew String(", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tcurrentMethod.declaringClass.sourceName(),", "+\t\t\t\t\t\tcurrentMethod.shortReadableName(),", "+\t\t\t\t\t\t'.')),", "+\t\t\t\tnew String(", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tinheritedMethod.declaringClass.shortReadableName(),", "+\t\t\t\t\t\tinheritedMethod.shortReadableName(),", "+\t\t\t\t\t\t'.'))},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552e21461b7578b6c225c932e29980ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "d3df82b4b651a728dac7ad34ce68970057ee30f8", "commitAfterChange": "9ddb9c4aff82125da8744c131bb2897d4bd357e1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void abstractMethodCannotBeOverridden(SourceTypeBinding type, MethodBinding concreteMethod)", "signatureAfterChange": " public void abstractMethodCannotBeOverridden(SourceTypeBinding type, MethodBinding concreteMethod)", "diff": ["-\t\tnew String[] {new String(type.sourceName()), new String(concreteMethod.readableName())},", "-\t\tnew String[] {new String(type.sourceName()), new String(concreteMethod.shortReadableName())},", "+\t\tnew String[] {", "+\t\t\tnew String(type.sourceName()), ", "+\t\t\tnew String(", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tconcreteMethod.declaringClass.readableName(),", "+\t\t\t\t\t\tconcreteMethod.readableName(),", "+\t\t\t\t\t\t'.'))},", "+\t\tnew String[] {", "+\t\t\tnew String(type.sourceName()), ", "+\t\t\tnew String(", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\tconcreteMethod.declaringClass.shortReadableName(),", "+\t\t\t\t\t\tconcreteMethod.shortReadableName(),", "+\t\t\t\t\t\t'.'))},"]}], "num": 53921}