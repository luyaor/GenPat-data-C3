{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be39e108876f2b6fece7aae0fefad723", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e44874080381b79b35b701e7f61d449", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "20f7fb10212f4f53eb2b3bbb2b168dd6022d4a59", "commitAfterChange": "ce69f7c31466a90f877dec99ede18113f1e111e2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  protected void processAnnotations(BuildContext[] results)", "signatureAfterChange": "  protected void processAnnotations(CompilationParticipantResult[] results)", "diff": ["-protected void processAnnotations(BuildContext[] results) {", "+protected void processAnnotations(CompilationParticipantResult[] results) {", "-\t\t((CompilationParticipantResult) results[i]).reset(foundAnnotations && this.filesWithAnnotations.includes(results[i].sourceFile));", "+\t\tresults[i].reset(foundAnnotations && this.filesWithAnnotations.includes(results[i].sourceFile));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1509fd5766e40931976d0ec734810d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public static SearchDocument[] addWorkingCopies(SearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant)", "signatureAfterChange": "  public static SearchDocument[] addWorkingCopies(InternalSearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant)", "diff": ["-public static SearchDocument[] addWorkingCopies(SearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant) {", "+public static SearchDocument[] addWorkingCopies(InternalSearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant) {", "-\tHashMap workingCopyDocuments = workingCopiesThatCanSeeFocus(copies, pattern.focus, ((InternalSearchPattern)pattern).isPolymorphicSearch(), participant);", "+\tHashMap workingCopyDocuments = workingCopiesThatCanSeeFocus(copies, pattern.focus, pattern.isPolymorphicSearch(), participant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1d61bb5d441adfeeb1b7ff2a2e9956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ObjectSet.java", "commitBeforeChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "commitAfterChange": "6d9cea6072b91b492f8661608c9d01337562ebef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r \tpublic boolean remove(Object element)", "signatureAfterChange": "\r \r \tpublic boolean remove(Object element)", "diff": ["+\r", "-\t\tlong hash = element.hashCode();\r", "+\t\tint hash = element.hashCode();\r", "-\t\tint index = ((int)hash) % length;\r", "+\t\tint index = hash % length;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a486c17ace6ffd25bf1263cb199fc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ClassFileWorkingCopy(IClassFile classFile, WorkingCopyOwner owner)", "signatureAfterChange": " \t public ClassFileWorkingCopy(ClassFile classFile, WorkingCopyOwner owner)", "diff": ["-public ClassFileWorkingCopy(IClassFile classFile, WorkingCopyOwner owner) {", "-\tsuper((PackageFragment) classFile.getParent(), ((BinaryType) ((ClassFile) classFile).getType()).getSourceFileName(null/*no info available*/), owner);", "+public ClassFileWorkingCopy(ClassFile classFile, WorkingCopyOwner owner) {", "+\tsuper((PackageFragment) classFile.getParent(), ((BinaryType) classFile.getType()).getSourceFileName(null/*no info available*/), owner);"]}], "num": 21903}