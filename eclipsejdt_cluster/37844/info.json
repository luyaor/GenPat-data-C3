{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17228d67a0b17247d86a8806dcb30f03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea8718a3ef2aa7fa42031232327a755", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testFieldReferenceBug73112b() throws CoreException", "signatureAfterChange": " \tpublic void testBug73112b() throws CoreException", "diff": ["-\t}", "-\tpublic void testFieldReferenceBug73112b() throws CoreException {", "-\t\tsearch(", "-\t\t\t\"fieldB73112*\",", "-\t\t\tFIELD,", "-\t\t\tALL_OCCURRENCES,", "-\t\t\tgetJavaSearchScopeBugs(), ", "-\t\t\tthis.resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112a [fieldB73112a] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112b [fieldB73112b] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112c [fieldB73112c] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112c [fieldB73112a] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112c [fieldB73112b] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112d [fieldB73112d] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112d [fieldB73112c] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112d [fieldB73112a] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b73112/B.java b73112.B.fieldB73112e [fieldB73112e] EXACT_MATCH\",", "-\t\t\tthis.resultCollector);", "-\t}", "+\t}", "+\tpublic void testBug73112b() throws CoreException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = super.getWorkingCopy(\"/JavaSearchBugs/src/b73112/B.java\",", "+\t\t\t\t\"package b73112;\\n\" + ", "+\t\t\t\t\"public class B {\\n\" + ", "+\t\t\t\t\"    int fieldB73112a, fieldB73112b = 10;\\n\" + ", "+\t\t\t\t\"    int fieldB73112c = fieldB73112a + fieldB73112b, fieldB73112d = fieldB73112c + fieldB73112a, fieldB73112e;\\n\" + ", "+\t\t\t\t\"    \\n\" + ", "+\t\t\t\t\"    public void method(){}\\n\" + ", "+\t\t\t\t\"}\\n\");", "+\t\t\tworkingCopy.commitWorkingCopy(true, null);", "+\t\t\t// search field references to first multiple field", "+\t\t\tsearch(", "+\t\t\t\t\"fieldB73112*\",", "+\t\t\t\tFIELD,", "+\t\t\t\tALL_OCCURRENCES,", "+\t\t\t\tgetJavaSearchScopeBugs(),", "+\t\t\t\tthis.resultCollector);", "+\t\t\tassertSearchResults(", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112a [fieldB73112a] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112b [fieldB73112b] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112c [fieldB73112c] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112c [fieldB73112a] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112c [fieldB73112b] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112d [fieldB73112d] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112d [fieldB73112c] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112d [fieldB73112a] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/b73112/B.java b73112.B.fieldB73112e [fieldB73112e] EXACT_MATCH\"", "+\t\t\t);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd82fc0c9265b01563072e8cbff471b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testConstructorReferenceBug77388() throws CoreException", "signatureAfterChange": " \tpublic void testBug77388() throws CoreException", "diff": ["-\t */", "-\tpublic void testConstructorReferenceBug77388() throws CoreException {", "-\t\tIType type = getCompilationUnit(\"JavaSearchBugs/src/b77388/Test.java\").getType(\"Test\");", "-\t\tIMethod method = type.getMethod(\"Test\", new String[] {\"I\", \"I\"});", "-\t\tsearch(method, REFERENCES, getJavaSearchScopeBugs(), resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b77388/Test.java void b77388.Test.run() [new Test(1, 2)] EXACT_MATCH\",", "-\t\t\tresultCollector);", "-\t}", "+\t */", "+\tpublic void testBug77388() throws CoreException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tworkingCopy = getWorkingCopy(\"/JavaSearchBugs/src/b77388/Test.java\",", "+\t\t\t\t\"package b77388;\\n\" + ", "+\t\t\t\t\"class Test {\\n\" + ", "+\t\t\t\t\"\tTest(int a, int b) {\t}\\n\" + ", "+\t\t\t\t\"\tvoid take(Test mc) { }\\n\" + ", "+\t\t\t\t\"\tvoid run() {\\n\" + ", "+\t\t\t\t\"\t\ttake( new Test(1, 2) ); // space in \\\") )\\\" is in match\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\");", "+\t\t\tIType type = workingCopy.getType(\"Test\");", "+\t\t\tIMethod method = type.getMethod(\"Test\", new String[] {\"I\", \"I\"});", "+\t\t\t// Search for constructor references", "+\t\t\tsearch(method, REFERENCES);", "+\t\t\tassertSearchResults(", "+\t\t\t\t\"src/b77388/Test.java void b77388.Test.run() [new Test(1, 2)] EXACT_MATCH\"", "+\t\t\t);", "+\t\t}", "+\t\tfinally {", "+\t\t\tif (workingCopy != null)", "+\t\t\t\tworkingCopy.discardWorkingCopy();", "+\t\t}", "+\t}"]}], "num": 37844}