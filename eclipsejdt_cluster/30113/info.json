{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c89e869b101db97b2cb120c5432b7700", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1306b0d0b1b9b467e1383374e9f68cf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2d2ac17d703a6eb7298660a89aa4248cdaf77596", "commitAfterChange": "ee820e1fe85f5e9ee61f230b0d3321f316f5814d", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprivate void addExpectedType(TypeBinding type)", "signatureAfterChange": " \tprivate void addExpectedType(TypeBinding type)", "diff": ["-\t\tif(type == null || !type.isValidBinding()) return;", "-\t\t", "-\t\ttry {", "-\t\t\tthis.expectedTypes[++this.expectedTypesPtr] = type;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\tint oldLength = this.expectedTypes.length;", "-\t\t\tTypeBinding oldTypes[] = this.expectedTypes;", "-\t\t\tthis.expectedTypes = new TypeBinding[oldLength * 2];", "-\t\t\tSystem.arraycopy(oldTypes, 0, this.expectedTypes, 0, oldLength);", "-\t\t\tthis.expectedTypes[this.expectedTypesPtr] = type;", "-\t\t}", "+\t\tif (type == null || !type.isValidBinding()) return;", "+", "+\t\tint length = this.expectedTypes.length;", "+\t\tif (++this.expectedTypesPtr >= length)", "+\t\t\tSystem.arraycopy(this.expectedTypes, 0, this.expectedTypes = new TypeBinding[length * 2], 0, length);", "+\t\tthis.expectedTypes[this.expectedTypesPtr] = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f98a716d21e66cf498fcdba8109b1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2d2ac17d703a6eb7298660a89aa4248cdaf77596", "commitAfterChange": "ee820e1fe85f5e9ee61f230b0d3321f316f5814d", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tprivate void addUninterestingBindings(Binding binding)", "signatureAfterChange": " \tprivate void addUninterestingBindings(Binding binding)", "diff": ["-\t\tif(binding == null) return;", "-\t\ttry {", "-\t\t\tthis.uninterestingBindings[++this.uninterestingBindingsPtr] = binding;", "-\t\t} catch (IndexOutOfBoundsException e) {", "-\t\t\tint oldLength = this.uninterestingBindings.length;", "-\t\t\tBinding oldBindings[] = this.uninterestingBindings;", "-\t\t\tthis.uninterestingBindings = new Binding[oldLength * 2];", "-\t\t\tSystem.arraycopy(oldBindings, 0, this.uninterestingBindings, 0, oldLength);", "-\t\t\tthis.uninterestingBindings[this.uninterestingBindingsPtr] = binding;", "-\t\t}", "+\t\tif (binding == null) return;", "+", "+\t\tint length = this.uninterestingBindings.length;", "+\t\tif (++this.uninterestingBindingsPtr >= length)", "+\t\t\tSystem.arraycopy(this.uninterestingBindings, 0, this.uninterestingBindings = new Binding[length * 2], 0, length);", "+\t\tthis.uninterestingBindings[this.uninterestingBindingsPtr] = binding;"]}], "num": 30113}