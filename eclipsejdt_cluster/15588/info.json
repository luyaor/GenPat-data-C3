{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0fd057906021fa7f3fbb0a2f444f353", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1faea02522da61bd2beee53d4c413c78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["-\t\t\t\t\t\tif (one == two.erasure())", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(one, two.erasure()))", "-\t\t\t\t\t\tif (one.erasure() == two)", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(one.erasure(), two))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ca988d5288c40d4f5fde5989525162", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": "  \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "diff": ["-\t\t\t\t\tsourceType != outerInvocationType) {", "+\t\t\t\t\tTypeBinding.notEquals(sourceType, outerInvocationType)) {", "-\t\t\t\t\tif (sourceType == otherType) continue next;", "+\t\t\t\t\tif (TypeBinding.equalsEquals(sourceType, otherType)) continue next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73484aaa3ec1a013424859dd1632a179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void addExpectedType(TypeBinding type, Scope scope)", "signatureAfterChange": " \tprivate void addExpectedType(TypeBinding type, Scope scope)", "diff": ["-\t\t\tif (this.expectedTypes[i] == type) return;", "+\t\t\tif (TypeBinding.equalsEquals(this.expectedTypes[i], type)) return;", "-\t\tif(type == scope.getJavaLangObject()) {", "+\t\tif(TypeBinding.equalsEquals(type, scope.getJavaLangObject())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b13a75ad21274e3e53afe739186ea60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "25ceba4552ce4df8b00117185ea4a4cf292544fd", "commitAfterChange": "e31e89499c545f3404d7787f4d333516631375ec", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " private boolean isCompatibleWith0(TypeBinding otherType, Scope captureScope)", "signatureAfterChange": " private boolean isCompatibleWith0(TypeBinding otherType, Scope captureScope)", "diff": ["-\tif (otherType == this)", "+\tif (TypeBinding.equalsEquals(otherType, this))", "-\t\t\t\t\tif (erasure() == otherType.erasure())", "+\t\t\t\t\tif (TypeBinding.equalsEquals(erasure(), otherType.erasure())) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a26a24a319862b142f9e41338d01d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\tif (this == otherType) return true;", "+\t", "+\tif (TypeBinding.equalsEquals(this, otherType)) return true;", "-\t\t\treturn otherType.erasure() == this;", "+\t\t\treturn TypeBinding.equalsEquals(otherType.erasure(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aec1b1c2b345ebdd9e3986376bf8689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a170a70f9fd89b9996c94f318397ff4dca1db782", "commitAfterChange": "25c55f5a3b95044fb71ce56ee0bb0a797b58daa1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "signatureAfterChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "diff": ["-\t\t\tif (expressionType == castType) {", "+\t\t\tif (TypeBinding.equalsEquals(expressionType, castType)) {", "-\t\t\tif (castType == expressionType) {", "+\t\t\tif (TypeBinding.equalsEquals(castType, expressionType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbe298dcfd23ab4c4fef5b7bada2db85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "25ceba4552ce4df8b00117185ea4a4cf292544fd", "commitAfterChange": "e31e89499c545f3404d7787f4d333516631375ec", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "signatureAfterChange": " public boolean isTypeArgumentContainedBy(TypeBinding otherType)", "diff": ["-\tif (this == otherType)", "+\tif (TypeBinding.equalsEquals(this, otherType))", "-\t\t\t\t\tif (otherBound == this)", "+\t\t\t\t\tif (TypeBinding.equalsEquals(otherBound, this))"]}], "num": 15588}