{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f11968062cb04b72adf120dd20ec03b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e6b38ac194b7ef22d73423ff458a17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tmonitor.beginTask(Util.bind(\"engine.searching\"), 100); //$NON-NLS-1$", "+\t\t\tmonitor.beginTask(Messages.engine_searching, 100); ", "-\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.indexing\", participant.getDescription())); //$NON-NLS-1$", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Messages.bind(Messages.engine_searching_indexing, (new String[] {participant.getDescription()}))); ", "-\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.matching\", participant.getDescription())); //$NON-NLS-1$", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Messages.bind(Messages.engine_searching_matching, (new String[] {participant.getDescription()}))); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8432892201d0f6401c7b5cf600aea2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "302f1877ad74fd63c3cd5c56aacc5cc510a8d88b", "commitAfterChange": "240c118718aa210b0d9c1362ebe7843e41fba8b4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tprivate void findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\t\tSubProgressMonitor subMonitor= monitor==null ? null : new SubProgressMonitor(monitor, 1000);", "+\t\t\t\tif (subMonitor != null) subMonitor.beginTask(\"\", 1000); //$NON-NLS-1$", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.indexing\", participant.getDescription())); //$NON-NLS-1$", "-\t\t\t\t\t\tmonitor);", "+\t\t\t\t\t\tsubMonitor);", "+\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Util.bind(\"engine.searching.matching\", participant.getDescription())); //$NON-NLS-1$", "-\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, monitor);", "+\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, subMonitor);"]}], "num": 29704}