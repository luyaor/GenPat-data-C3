{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29eb59716862a98ee0aeb8ee4d32582d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "385daa119a0c10d90b2e6bbaaa7c2d46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "26b7bc79d6fe197e511251cd0d01440df4f556c7", "commitAfterChange": "45bb5124d83d6e1fe4a264c979e1e6a5308463bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void bindThrownExceptions()", "signatureAfterChange": " \tpublic void bindThrownExceptions()", "diff": ["+\t\t\tint thrownExceptionLength = this.thrownExceptions.length;", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tthis.thrownExceptions[i].binding = this.binding.thrownExceptions[i];", "+\t\t\tif (length == thrownExceptionLength) {", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tthis.thrownExceptions[i].binding = this.binding.thrownExceptions[i];", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tint bindingIndex = 0;", "+\t\t\t\tfor (int i = 0; i < thrownExceptionLength && bindingIndex < length; i++) {", "+\t\t\t\t\tTypeReference thrownException = this.thrownExceptions[i];", "+\t\t\t\t\tReferenceBinding thrownExceptionBinding = this.binding.thrownExceptions[bindingIndex];", "+\t\t\t\t\tchar[][] bindingCompoundName = thrownExceptionBinding.compoundName;", "+\t\t\t\t\tif (thrownException instanceof SingleTypeReference) {", "+\t\t\t\t\t\t// single type reference", "+\t\t\t\t\t\tint lengthName = bindingCompoundName.length;", "+\t\t\t\t\t\tchar[] thrownExceptionTypeName = thrownException.getTypeName()[0];", "+\t\t\t\t\t\tif (CharOperation.equals(thrownExceptionTypeName, bindingCompoundName[lengthName - 1])) {", "+\t\t\t\t\t\t\tthrownException.binding = thrownExceptionBinding;", "+\t\t\t\t\t\t\tbindingIndex++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// qualified type reference", "+\t\t\t\t\t\tif (CharOperation.equals(thrownException.getTypeName(), bindingCompoundName)) {", "+\t\t\t\t\t\t\tthrownException.binding = thrownExceptionBinding;", "+\t\t\t\t\t\t\tbindingIndex++;", "+\t\t\t\t\t\t}\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a8fb9f00d5c90241a5b8ae29f82a54d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "commitAfterChange": "495498c492866181dc63a6039b81ee18c37f454c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tif (sig == null) sig = signature();", "+\tboolean isGeneric = sig != null;", "+\tif (!isGeneric) sig = signature();", "-\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength];", "+\t// thrown exceptions", "+\tint thrownExceptionsLength = this.thrownExceptions.length;", "+\tint thrownExceptionsSignatureLength = 0;", "+\tchar[][] thrownExceptionsSignatures = null;", "+\tboolean addThrownExceptions = thrownExceptionsLength > 0 && (!isGeneric || CharOperation.lastIndexOf('^', sig) < 0);", "+\tif (addThrownExceptions) {", "+\t\tthrownExceptionsSignatures = new char[thrownExceptionsLength][];", "+\t\tfor (int i = 0; i < thrownExceptionsLength; i++) {", "+\t\t\tif (this.thrownExceptions[i] != null) {", "+\t\t\t\tthrownExceptionsSignatures[i] = this.thrownExceptions[i].signature();", "+\t\t\t\tthrownExceptionsSignatureLength += thrownExceptionsSignatures[i].length + 1;\t// add one char for separator", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "+\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength + thrownExceptionsSignatureLength];", "-\t//index += signatureLength;", "+\tif (thrownExceptionsSignatureLength > 0) {", "+\t\tindex += signatureLength;", "+\t\tfor (int i = 0; i < thrownExceptionsLength; i++) {", "+\t\t\tchar[] thrownExceptionSignature = thrownExceptionsSignatures[i];", "+\t\t\tif (thrownExceptionSignature != null) {", "+\t\t\t\tuniqueKey[index++] = '|';", "+\t\t\t\tint length = thrownExceptionSignature.length;", "+\t\t\t\tSystem.arraycopy(thrownExceptionSignature, 0, uniqueKey, index, length);", "+\t\t\t\tindex += length;", "+\t\t\t}", "+\t\t}", "+\t}", "+"]}], "num": 3953}